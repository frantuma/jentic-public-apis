[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 9 absolute http references: [(('externalDocs', 'url'), 'url', 'https://www.openpolicyagent.org/docs/latest/'), (('components', 'schemas', '200Explanations', 'properties', 'explanation', 'items', 'properties', 'node', 'externalDocs', 'url'), 'url', 'https://godoc.org/github.com/open-policy-agent/opa/ast'), (('components', 'schemas', '200Result', 'properties', 'result', 'items', 'properties', 'ast', 'properties', 'rules', 'externalDocs', 'url'), 'url', 'https://www.openpolicyagent.org/docs/latest/policy-language/#rules'), (('components', 'schemas', '200Result', 'properties', 'result', 'items', 'properties', 'ast', 'externalDocs', 'url'), 'url', 'https://godoc.org/github.com/open-policy-agent/opa/ast'), (('paths', '/health', 'get', 'externalDocs', 'url'), 'url', 'https://www.openpolicyagent.org/docs/latest/management/#bundles'), (('paths', '/v1/compile', 'post', 'externalDocs', 'url'), 'url', 'https://blog.openpolicyagent.org/partial-evaluation-162750eaf422'), (('info', 'license', 'url'), 'url', 'https://www.apache.org/licenses/LICENSE-2.0'), (('info', 'contact', 'url'), 'url', 'https://github.com/open-policy-agent/opa'), (('info', 'x-logo', 'url'), 'url', 'https://github.com/open-policy-agent/opa/blob/main/docs/website/static/img/logos/opa-horizontal-color.png?raw=true')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "9"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "OpenAPI spec must define at least one server in the 'servers' array.",
    "severity": 1,
    "code": "MISSING_SERVER_URL",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Servers must be present. [path: openapi]",
    "severity": 1,
    "code": "no-empty-servers",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "openapi"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v1/policies.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/policies",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./health.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/health",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v1/config.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/config",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"successZipResponse\" is never used. [path: components.responses.successZipResponse]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "responses",
        "successZipResponse"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 1569,
        "character": 16
      }
    },
    "message": "OpenAPI \"servers\" must be present and non-empty array. []",
    "severity": 2,
    "code": "oas3-api-servers",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 629,
        "character": 10
      },
      "end": {
        "line": 629,
        "character": 22
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./v1/config.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/config",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 860,
        "character": 27
      },
      "end": {
        "line": 866,
        "character": 32
      }
    },
    "message": "Potentially unused component has been detected. [path: components.responses.successZipResponse]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "responses",
        "successZipResponse"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 989,
        "character": 19
      },
      "end": {
        "line": 989,
        "character": 96
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.inputSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "inputSchema",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1000,
        "character": 19
      },
      "end": {
        "line": 1000,
        "character": 71
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.webhookInputSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "webhookInputSchema",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1005,
        "character": 19
      },
      "end": {
        "line": 1005,
        "character": 50
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.queryInputSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "queryInputSchema",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1010,
        "character": 19
      },
      "end": {
        "line": 1010,
        "character": 110
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.qSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "qSchema",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1015,
        "character": 19
      },
      "end": {
        "line": 1015,
        "character": 198
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.partialQuerySchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "partialQuerySchema",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1048,
        "character": 25
      },
      "end": {
        "line": 1048,
        "character": 125
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.patchesSchema.items.properties.value.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "patchesSchema",
        "items",
        "properties",
        "value",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 9 absolute http references: [(('externalDocs', 'url'), 'url', 'https://www.openpolicyagent.org/docs/latest/'), (('components', 'schemas', '200Explanations', 'properties', 'explanation', 'items', 'properties', 'node', 'externalDocs', 'url'), 'url', 'https://godoc.org/github.com/open-policy-agent/opa/ast'), (('components', 'schemas', '200Result', 'properties', 'result', 'items', 'properties', 'ast', 'properties', 'rules', 'externalDocs', 'url'), 'url', 'https://www.openpolicyagent.org/docs/latest/policy-language/#rules'), (('components', 'schemas', '200Result', 'properties', 'result', 'items', 'properties', 'ast', 'externalDocs', 'url'), 'url', 'https://godoc.org/github.com/open-policy-agent/opa/ast'), (('paths', '/health', 'get', 'externalDocs', 'url'), 'url', 'https://www.openpolicyagent.org/docs/latest/management/#bundles'), (('paths', '/v1/compile', 'post', 'externalDocs', 'url'), 'url', 'https://blog.openpolicyagent.org/partial-evaluation-162750eaf422'), (('info', 'license', 'url'), 'url', 'https://www.apache.org/licenses/LICENSE-2.0'), (('info', 'contact', 'url'), 'url', 'https://github.com/open-policy-agent/opa'), (('info', 'x-logo', 'url'), 'url', 'https://github.com/open-policy-agent/opa/blob/main/docs/website/static/img/logos/opa-horizontal-color.png?raw=true')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "9"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "OpenAPI spec must define at least one server in the 'servers' array.",
    "severity": 1,
    "code": "MISSING_SERVER_URL",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Servers must be present. [path: openapi]",
    "severity": 1,
    "code": "no-empty-servers",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "openapi"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v1/policies.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/policies",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./health.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/health",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v1/config.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/config",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"successZipResponse\" is never used. [path: components.responses.successZipResponse]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "responses",
        "successZipResponse"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 1569,
        "character": 16
      }
    },
    "message": "OpenAPI \"servers\" must be present and non-empty array. []",
    "severity": 2,
    "code": "oas3-api-servers",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 629,
        "character": 10
      },
      "end": {
        "line": 629,
        "character": 22
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./v1/config.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/config",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 860,
        "character": 27
      },
      "end": {
        "line": 866,
        "character": 32
      }
    },
    "message": "Potentially unused component has been detected. [path: components.responses.successZipResponse]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "responses",
        "successZipResponse"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 989,
        "character": 19
      },
      "end": {
        "line": 989,
        "character": 96
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.inputSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "inputSchema",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1000,
        "character": 19
      },
      "end": {
        "line": 1000,
        "character": 71
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.webhookInputSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "webhookInputSchema",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1005,
        "character": 19
      },
      "end": {
        "line": 1005,
        "character": 50
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.queryInputSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "queryInputSchema",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1010,
        "character": 19
      },
      "end": {
        "line": 1010,
        "character": 110
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.qSchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "qSchema",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1015,
        "character": 19
      },
      "end": {
        "line": 1015,
        "character": 198
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.partialQuerySchema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "partialQuerySchema",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1048,
        "character": 25
      },
      "end": {
        "line": 1048,
        "character": 125
      }
    },
    "message": "\"example\" property type must be object [path: components.schemas.patchesSchema.items.properties.value.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "patchesSchema",
        "items",
        "properties",
        "value",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]