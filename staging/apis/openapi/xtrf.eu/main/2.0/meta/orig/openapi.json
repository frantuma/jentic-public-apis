{
  "openapi": "3.0.1",
  "info": {
    "title": "XTRF Home Portal API",
    "description": "XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>\n  The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: ",
    "termsOfService": "https://legal.xtrf.eu/2017/products/GeneralTermsAndConditions.pdf",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0",
    "x-jentic-source-url": "https://presentation.s.xtrf.eu/home-api/openapi.json"
  },
  "servers": [
    {
      "url": "https://presentation.s.xtrf.eu/home-api"
    }
  ],
  "security": [
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    },
    {
      "X-AUTH-ACCESS-TOKEN": []
    }
  ],
  "tags": [
    {
      "name": "Browser",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Client Invoices",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Clients",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Files",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "License",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Macros",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Sensitive Clients & Trusted Vendors",
      "description": "API for configuration view Sensitive Clients and Trusted Vendors in XTRF"
    },
    {
      "name": "Project Groups",
      "description": "API for managing Project Groups in XTRF"
    },
    {
      "name": "Vendor Invoices",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Vendors",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Reports",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Dictionaries",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Subscription",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Users",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Currency exchange rates",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Jobs (Classic)",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Projects (Classic)",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Quotes (Classic)",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Tasks (Classic)",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Jobs (Smart)(v2)",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Projects (Smart)(v2)",
      "description": "To change the description use /examples/TagsDescriptions.json"
    },
    {
      "name": "Quotes (Smart)(v2)",
      "description": "To change the description use /examples/TagsDescriptions.json"
    }
  ],
  "paths": {
    "/browser/csv": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Searches for data (ie. customer, task, etc) and returns it in a CSV form.",
        "description": "Searches for data (ie. customer, task, etc) and returns it in a CSV form.",
        "operationId": "browseCSV",
        "parameters": [
          {
            "name": "viewId",
            "in": "query",
            "description": "view's identifier",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "separator",
            "in": "query",
            "description": "csv field separator",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secondarySeparator",
            "in": "query",
            "description": "secondary csv field separator",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/exportToCSV.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Searches for data (ie. customer, task, etc) and returns it in a tabular form.",
        "description": "Searches for data (ie. customer, task, etc) and returns it in a tabular form.",
        "operationId": "browseJSON",
        "parameters": [
          {
            "name": "viewId",
            "in": "query",
            "description": "view's identifier",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "additionalOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useDeferredColumns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxRows",
            "in": "query",
            "description": "overrides view's default rows limit, supported values 10 to 1000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/browseProjects.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/for/{className}": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns views' brief.",
        "description": "Returns views' brief.",
        "operationId": "getViewsBrief",
        "parameters": [
          {
            "name": "className",
            "in": "path",
            "description": "views' class name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placeName",
            "in": "query",
            "description": "place name (denotes specific place in system with the table)",
            "schema": {
              "type": "string",
              "default": "default"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewsBriefDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getViewsBrief.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Browser"
        ],
        "summary": "Creates view for given class.",
        "description": "Creates view for given class.",
        "operationId": "create",
        "parameters": [
          {
            "name": "className",
            "in": "path",
            "description": "view's class name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created view for given class.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ViewDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewWithIdDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/create.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns all view's information.",
        "description": "Returns all view's information (ie. name, columns, filters, etc).",
        "operationId": "get",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/get.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates all view's information.",
        "description": "Updates all view's information (ie. name, columns, filters, etc).",
        "operationId": "update",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated all view's information.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ViewDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/update.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Browser"
        ],
        "summary": "Removes a view.",
        "description": "Removes a view. No content is returned upon success (204).",
        "operationId": "delete",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/browser/views/{viewId}/columns/{columnName}": {
      "delete": {
        "tags": [
          "Browser"
        ],
        "summary": "Deletes a single column from view.",
        "description": "Deletes a single column from view.",
        "operationId": "deleteColumn",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "column's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColumnDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/deleteColumn.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/columns/{columnName}/settings": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns column's specific settings.",
        "description": "Returns column's specific settings. For example when column describes money amount we can decide whether it should display currency or not.",
        "operationId": "getColumnSettings",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "column's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getColumnSettings.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates column's specific settings.",
        "description": "Updates column's specific settings. For example when column describes money amount we can decide whether it should display currency or not.",
        "operationId": "updateColumnSettings",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "column's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated column's specific settings.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updateColumnSettings.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updateColumnSettings.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/columns": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns columns defined in view.",
        "description": "Returns columns defined in view.",
        "operationId": "getColumns",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColumnDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getColumns.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates columns in view.",
        "description": "Updates columns in view.",
        "operationId": "updateColumns",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated columns in view.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnDTO"
                }
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updateColumns.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColumnDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updateColumns.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/details/for/{className}": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns current view's detailed information, suitable for browser.",
        "description": "Returns current view's detailed information, suitable for browser.",
        "operationId": "getCurrentViewDetails",
        "parameters": [
          {
            "name": "className",
            "in": "path",
            "description": "views' class name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placeName",
            "in": "query",
            "description": "place name (denotes specific place in system with the table)",
            "schema": {
              "type": "string",
              "default": "default"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewDetailsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getCurrentDetails.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/filter": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns view's filter.",
        "description": "Returns view's filter.",
        "operationId": "getFilter",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilterDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/filter/getTextProperty.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates view's filter.",
        "description": "Updates view's filter.",
        "operationId": "updateFilter",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated view's filter.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterPropertyDTO"
                }
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updateFilter.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilterDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updateFilter.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/settings/local": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns view's local settings (for current user).",
        "description": "Returns view's local settings (for current user).",
        "operationId": "getLocalSettings",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/LocalSettingsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getLocalSettings.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates view's local settings (for current user).",
        "description": "Updates view's local settings (for current user).",
        "operationId": "updateLocalSettings",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated view's local settings (for current user).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalSettingsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updateLocalSettings.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/LocalSettingsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updateLocalSettings.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/order": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns view's order settings.",
        "description": "Returns view's order settings.",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getOrder.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates view's order settings.",
        "description": "Updates view's order settings.",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated view's order settings.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updateOrder.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updateOrder.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/permissions": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns view's permissions.",
        "description": "Returns view's permissions.",
        "operationId": "getPermissions",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getPermissions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates view's permissions.",
        "description": "Updates view's permissions.",
        "operationId": "updatePermissions",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated view's permissions.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updatePermissions.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updatePermissions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/settings": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns view's settings.",
        "description": "Returns view's settings (ie. name).",
        "operationId": "getSettings",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getSettings.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates view's settings.",
        "description": "Updates view's settings.",
        "operationId": "updateSettings",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated view's settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updateSettings.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updateSettings.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/details/for/{className}/{viewId}": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Returns view's detailed information, suitable for browser.",
        "description": "Returns view's detailed information, suitable for browser.",
        "operationId": "getViewDetails",
        "parameters": [
          {
            "name": "className",
            "in": "path",
            "description": "views' class name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placeName",
            "in": "query",
            "description": "place name (denotes specific place in system with the table)",
            "schema": {
              "type": "string",
              "default": "default"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewDetailsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/getDetails.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Browser"
        ],
        "summary": "Selects given view as current and returns its detailed information, suitable for browser.",
        "description": "Selects given view as current and returns its detailed information, suitable for browser.",
        "operationId": "selectViewAndGetItsDetails",
        "parameters": [
          {
            "name": "className",
            "in": "path",
            "description": "views' class name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "place name (denotes specific place in system with the table)",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "default"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewDetailsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/selectViewAndGetItsDetails.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/browser/views/{viewId}/filter/{filterProperty}": {
      "put": {
        "tags": [
          "Browser"
        ],
        "summary": "Updates view's filter property.",
        "description": "Updates view's filter property.",
        "operationId": "updateFilterProperty",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "view's identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "filterProperty",
            "in": "path",
            "description": "view's filter property name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated view's filter property.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterPropertyDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/browsers/views/updateFilterProperty.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/browsers/views/updateFilterProperty.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices": {
      "get": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Lists all client invoices in all statuses (including not ready and drafts) that have been updated since a specific date.",
        "description": "Lists all client invoices in all statuses (including not ready and drafts) that have been updated since a specific date.",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only client invoices modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "client invoices",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/getAll.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Creates a new invoice.",
        "description": "Creates a new invoice of type FINAL or DRAFT from tasks. Tasks are grouped by client and currency, therefore multiple invoices can be created.If any of the tasks cannot be invoiced (ie. it is already invoiced, not invoiceable, not associated with a project) then an error is reported.",
        "operationId": "create_1",
        "requestBody": {
          "description": "Created new invoice.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/accounting/customers/invoices/createMultipleFromTasks.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceCreateResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/createMultipleFromTasks.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}/payments": {
      "get": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Returns all payments for the client invoice.",
        "description": "Returns all payments for the client invoice.",
        "operationId": "getPayments",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "client invoice's payments",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/getPayments.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Adds a new payment to the client invoice. The invoice payment status (Not Paid, Partially Paid, Fully Paid) is automatically recalculated.",
        "description": "Adds a new payment to the client invoice. The invoice payment status (Not Paid, Partially Paid, Fully Paid) is automatically recalculated.",
        "operationId": "createPayment",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "New payment.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/accounting/customers/invoices/createPayment.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}": {
      "get": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Returns client invoice details.",
        "description": "Returns client invoice details.",
        "operationId": "getById",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "list of adittional fields which should be embedded in the response (ie. tasks)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Removes a client invoice.",
        "description": "Removes a client invoice.",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/accounting/customers/invoices/documents": {
      "post": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Allows for downloading multiple client invoice documents.",
        "description": "Allows for downloading multiple client invoice documents.",
        "operationId": "downloadDocuments",
        "requestBody": {
          "description": "Generated client invoices documents.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DownloadDocumentsRequestDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/accounting/customers/invoices/downloadDocuments.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/downloadDocuments.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}/duplicate": {
      "post": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Duplicate client invoice.",
        "description": "Duplicate client invoice.",
        "operationId": "duplicate",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/duplicate.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}/duplicate/proForma": {
      "post": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Duplicate client invoice as pro forma.",
        "description": "Duplicate client invoice as pro forma.",
        "operationId": "duplicateAsProForma",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/duplicateAsProForma.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/ids": {
      "get": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Returns client invoices' internal identifiers.",
        "description": "Returns client invoices' internal identifiers.",
        "operationId": "getAllIds",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only client invoices modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "client invoices' internal identifiers",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}/dates": {
      "get": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Returns dates of a given client invoice.",
        "description": "Returns dates of a given client invoice.",
        "operationId": "getDates",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceDatesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/getDates.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}/document": {
      "get": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Allows for downloading a given client invoice document.",
        "description": "Allows for downloading a given client invoice document.",
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/getDocument.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}/paymentTerms": {
      "get": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Returns payment terms of a given client invoice.",
        "description": "Returns payment terms of a given client invoice.",
        "operationId": "getPaymentTerms",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTermsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/getPaymentTerms.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/invoices/{invoiceId}/sendReminder": {
      "post": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Sends reminder.",
        "description": "Sends reminder.",
        "operationId": "sendReminder",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "client invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/accounting/customers/invoices/sendReminders": {
      "post": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Sends reminders. Returns number of sent e-mails.",
        "description": "Sends reminders. Returns number of sent e-mails.",
        "operationId": "sendReminders",
        "requestBody": {
          "description": "Number of sent e-mails.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SendRemindersRequestDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/accounting/customers/invoices/sendReminders.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SendRemindersResponseDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/customers/invoices/sendReminders.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/customers/payments/{paymentId}": {
      "delete": {
        "tags": [
          "Client Invoices"
        ],
        "summary": "Removes a customer payment.",
        "description": "Removes a customer payment.",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "customer payment's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/customers/persons": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Creates a new person.",
        "description": "Creates a new person. Required fields are presented in the example. Other fields (from PUT) may also be specified here.",
        "operationId": "create_2",
        "requestBody": {
          "description": "Brand new person.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPersonDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/persons/create.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPersonDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/create.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/persons/{personId}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns person details.",
        "description": "Returns person details.",
        "operationId": "getById_1",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPersonDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates an existing person.",
        "description": "Only specified fields will be changed. One may not specify embeddable fields here - use separate API calls for updating them.",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated existing person.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPersonDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/persons/update.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPersonDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/update.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Removes a person.",
        "description": "Removes a person.",
        "operationId": "delete_3",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/customers/persons/accessToken": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Generates a single use sign-in token.",
        "description": "Generates a single use sign-in token for the customer person found for given login or e-mail. Returns 'url' and 'token' which allows to sign-in to customer portal as this person. Token is valid for two minutes and can be used only once. To sign-in to customer portal you should post 'token' provided as the 'accessToken' form param to the 'url' using POST method.Detailed description is available in the Customer API <a href=\"/api-doc/customer-api/authentication\">authentication</a>.",
        "operationId": "generateSingleUseSignInToken",
        "requestBody": {
          "description": "Generated sign-in token.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AccessTokenRequestDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/persons/generateSingleUseSignInToken.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/generateSingleUseSignInToken.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/persons/ids": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns persons' internal identifiers.",
        "description": "Returns persons' internal identifiers.",
        "operationId": "getAllIds_1",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only persons modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/persons/{personId}/contact": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns contact of a given person.",
        "description": "Returns contact of a given person.",
        "operationId": "getContact",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PersonContactDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/getContact.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates contact of a given person.",
        "description": "Updates contact of a given person. Sets that this person uses specific address and contact (not the one from customer).",
        "operationId": "updateContact",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated contact of a given person.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PersonContactDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/persons/updateContact.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PersonContactDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/updateContact.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/persons/{personId}/customFields": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns custom fields of a given person.",
        "description": "Returns custom fields of a given person.",
        "operationId": "getCustomFields",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates custom fields of a given person.",
        "description": "Updates custom fields of a given person.",
        "operationId": "updateCustomFields",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields of a given person.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/persons/updateCustomFields.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/persons/updateCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/priceLists/{priceListId}": {
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Removes a customer price list.",
        "description": "Removes a customer price list.",
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "priceListId",
            "in": "path",
            "description": "customer price list's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns list of simple clients representations",
        "description": "Returns list of simple clients representations",
        "operationId": "getAllNamesWithIds",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only clients modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityWithNameDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getAllNamesWithIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Creates a new client.",
        "description": "Creates a new client. All available fields are presented in PUT request.<p>\n  Required fields:\n  <ul>\n    <li>name</li>\n    <li>fullName</li>\n    <li>contact -> emails -> primary</li>\n  </ul>\n</p>\n",
        "operationId": "create_3",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/create.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/create.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns client details.",
        "description": "Returns client details.",
        "operationId": "getById_2",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "list of additional fields which should be embedded in the response (available options: persons)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates an existing client.",
        "description": "Only specified fields will be changed (id is required). One may not specify embeddable fields here - use separate API calls for updating them.",
        "operationId": "update_2",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated client",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/update.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/update.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Removes a client.",
        "description": "Removes a client.",
        "operationId": "delete_5",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/customers/{customerId}/address": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns address of a given client.",
        "description": "Returns address of a given client.",
        "operationId": "getAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/address/getAddress.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates address of a given client.",
        "description": "Updates address of a given client.",
        "operationId": "updateAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated address of a given client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/address/updateAddress.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/address/updateAddress.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/ids": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns clients' internal identifiers.",
        "description": "Returns clients' internal identifiers.",
        "operationId": "getAllIds_2",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only clients modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "nameEquals",
            "in": "query",
            "description": "exact name of client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailEquals",
            "in": "query",
            "description": "exact email of client",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/byAlias": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns client details.",
        "description": "Returns client details.",
        "operationId": "getByAlias",
        "parameters": [
          {
            "name": "externalSystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerAlias",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/categories": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns categories of a given client.",
        "description": "Returns categories of a given client.",
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getCategories.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates categories of a given client.",
        "description": "Updates categories of a given client.",
        "operationId": "updateCategories",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated categories of a given client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/updateCategories.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/updateCategories.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/contact": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns contact of a given client.",
        "description": "Returns contact of a given client.",
        "operationId": "getContact_1",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getContact.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates contact of a given client.",
        "description": "Updates contact of a given client.",
        "operationId": "updateContact_1",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated contact of a given client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/updateContact.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/updateContact.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/correspondenceAddress": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns correspondence address of a given client.",
        "description": "Returns correspondence address of a given client.",
        "operationId": "getCorrespondenceAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/address/getCorrespondenceAddress.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates correspondence address of a given client.",
        "description": "Updates correspondence address of a given client.",
        "operationId": "updateCorrespondenceAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated address of a given client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/address/updateCorrespondenceAddress.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/address/updateCorrespondenceAddress.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/customFields/{customFieldKey}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns custom field of a given client.",
        "description": "Returns custom field of a given client.",
        "operationId": "getCustomField",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customFieldKey",
            "in": "path",
            "description": "custom field's key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getCustomField.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates given custom field of a given client.",
        "description": "Updates given custom field of a given client.",
        "operationId": "updateCustomField",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customFieldKey",
            "in": "path",
            "description": "custom field's key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom field of a given client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/updateCustomField.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/updateCustomField.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/customFields": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns custom fields of a given client.",
        "description": "Returns custom fields of a given client.",
        "operationId": "getCustomFields_1",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates custom fields of a given client.",
        "description": "Updates custom fields of a given client.",
        "operationId": "updateCustomFields_1",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields of a given client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/updateCustomFields.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/updateCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/industries": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns industries of a given client.",
        "description": "Returns industries of a given client.",
        "operationId": "getIndustries",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/IndustriesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/getIndustries.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates industries of a given client.",
        "description": "Updates industries of a given client.",
        "operationId": "updateIndustries",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "client's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated industries of a given client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/customers/updateIndustries.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/IndustriesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/customers/updateIndustries.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Uploads a temporary file (ie. for XML import). Returns token which can be used in other API calls.",
        "description": "When a file is required by an operation (ie. task creation) it must be uploaded previously to the API.\nUploading a file will result in a file token, which can be used to reference this file in other API calls.\n Each file must be uploaded separately.\n Keep in mind that file token has limited validity (ie. 10 minutes).\n Therefore files must be uploaded just before issuing API call which reference them.\n",
        "operationId": "uploadFile",
        "requestBody": {
          "description": "Uploaded file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileToUploadDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/license": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Returns license content.",
        "description": "Returns license content.",
        "operationId": "getLicense",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetLicenseResult"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/license/getLicense.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/license/refresh": {
      "post": {
        "tags": [
          "License"
        ],
        "summary": "Refreshes license content.",
        "description": "Refreshes license content. This method returns OK immediately and license is refreshed asynchronously. It takes a while (usually a few seconds) for the license to be actually refreshed.",
        "operationId": "refresh",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/macros/{macroId}/run": {
      "post": {
        "tags": [
          "Macros"
        ],
        "summary": "Executes a macro.",
        "description": "Runs a specified macro on a specified list of items (\"list\" variable in the macro code). The list of items can be empty if the macro doesn't use it. Additional custom parameters can be provided to the macro when necessary (\"params\" variable in the macro code).\n\n <BR>Note: Macros that support parameters can be also run from GUI (Views in Home Portal),so they should also handle the empty parameters map (e.g. by defining default values when parameters are not provided).",
        "operationId": "run",
        "parameters": [
          {
            "name": "macroId",
            "in": "path",
            "description": "macro internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Generated client invoices documents.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/MacroRequestDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/macros/runMacroAsynchronously.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActionStartedDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/macros/runMacroSynchronouslyWithParametersWithoutIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/confidential-groups/sensitiveClients/client": {
      "post": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Adds client to sensitive clients list.",
        "description": "Adds client to sensitive clients list.",
        "operationId": "addClient",
        "requestBody": {
          "description": "A client chosen from dictionary.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SensitiveClientDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/partnersGroups/sensitiveClients/addClient_valueFix.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Updated list.",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensitiveClientDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/sensitiveClients/addClient.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/confidential-groups/sensitiveClients": {
      "get": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Returns sensitive clients list.",
        "description": "Returns sensitive clients list.",
        "operationId": "get_1",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensitiveClientDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/sensitiveClients/get.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Updates sensitive clients list.",
        "description": "Updates sensitive clients list.",
        "operationId": "put",
        "requestBody": {
          "description": "Newly updated sensitive clients list.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SensitiveClientDto"
                }
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/partnersGroups/sensitiveClients/put.json#requestBody"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Sensitive clients list after changes.",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensitiveClientDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/sensitiveClients/put.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/confidential-groups/sensitiveClients/isSensitive/{clientId}": {
      "get": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Check if client is sensitive.",
        "description": "Check if client is sensitive.",
        "operationId": "isSensitive",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Result of a check.",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/IsClientSensitiveDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/sensitiveClients/isSensitive.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/confidential-groups/sensitiveClients/client/{sensitiveClientId}": {
      "delete": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Removes sensitive client from sensitive clients list.",
        "description": "Removes sensitive client from sensitive clients list.",
        "operationId": "removeClient",
        "parameters": [
          {
            "name": "sensitiveClientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sensitiveClientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Updated list.",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensitiveClientDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/sensitiveClients/removeClient.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/confidential-groups/trustedVendors/vendor": {
      "post": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Adds vendor to trusted vendors list.",
        "description": "Adds vendor to trusted vendors list.",
        "operationId": "addVendor",
        "requestBody": {
          "description": "A vendor chosen from dictionary.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustedVendorDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/partnersGroups/trustedVendors/addVendor_valueFix.json#requestBody"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Updated list.",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrustedVendorDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/trustedVendors/addVendor.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/confidential-groups/trustedVendors": {
      "get": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Returns trusted vendors list.",
        "description": "Returns trusted vendors list.",
        "operationId": "get_2",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrustedVendorDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/trustedVendors/get.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Updates trusted vendors list.",
        "description": "Updates trusted vendors list.",
        "operationId": "put_1",
        "requestBody": {
          "description": "Newly updated trusted vendors list.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TrustedVendorDto"
                }
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/partnersGroups/trustedVendors/put.json#requestBody"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Trusted vendors list after changes.",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrustedVendorDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/trustedVendors/put.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/confidential-groups/trustedVendors/vendor/{trustedVendorId}": {
      "delete": {
        "tags": [
          "Sensitive Clients & Trusted Vendors"
        ],
        "summary": "Removes trusted vendor from trusted vendors list.",
        "description": "Removes trusted vendor from trusted vendors list.",
        "operationId": "removeVendor",
        "parameters": [
          {
            "name": "trustedVendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "trustedVendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Updated list.",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrustedVendorDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/partnersGroups/trustedVendors/removeVendor.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projectGroups": {
      "get": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Returns all project groups.",
        "description": "Returns all project groups.",
        "operationId": "getAll_1",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectGroupDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/getProjectGroups.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Creates a new Project Groups.",
        "description": "Creates a new Project Groups.",
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectGroupDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/projectGroups/addProjectGroup.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/addProjectGroup.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projectGroups/{projectGroupId}": {
      "get": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Returns project group details.",
        "description": "Returns project group details.",
        "operationId": "getById_3",
        "parameters": [
          {
            "name": "projectGroupId",
            "in": "path",
            "description": "project group's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/getProjectGroup.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Update project group details.",
        "description": "Update project group details.",
        "operationId": "update_3",
        "parameters": [
          {
            "name": "projectGroupId",
            "in": "path",
            "description": "project group's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectGroupDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/projectGroups/updateProjectGroup.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/updateProjectGroup.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Removes a project group.",
        "description": "Removes a project group.",
        "operationId": "delete_6",
        "parameters": [
          {
            "name": "projectGroupId",
            "in": "path",
            "description": "project group's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/projectGroups/{projectGroupId}/linkProjects": {
      "put": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Add projects to project group.",
        "description": "Add projects to project group.",
        "operationId": "linkProject",
        "parameters": [
          {
            "name": "projectGroupId",
            "in": "path",
            "description": "project group's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectsDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/projectGroups/linkProjects.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/linkProjects.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projectGroups/{projectGroupId}/linkQuotes": {
      "put": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Add quotes to project group.",
        "description": "Add quotes to project group.",
        "operationId": "linkQuote",
        "parameters": [
          {
            "name": "projectGroupId",
            "in": "path",
            "description": "project group's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkQuotesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/projectGroups/linkQuotes.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/linkQuotes.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projectGroups/{projectGroupId}/unlinkProjects": {
      "put": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Remove projects from project group.",
        "description": "Remove projects from project group.",
        "operationId": "removeProject",
        "parameters": [
          {
            "name": "projectGroupId",
            "in": "path",
            "description": "project group's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectsDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/projectGroups/unlinkProjects.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/unlinkProjects.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projectGroups/{projectGroupId}/unlinkQuotes": {
      "put": {
        "tags": [
          "Project Groups"
        ],
        "summary": "Remove quotes from project group.",
        "description": "Remove quotes from project group.",
        "operationId": "removeQuote",
        "parameters": [
          {
            "name": "projectGroupId",
            "in": "path",
            "description": "project group's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkQuotesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/projectGroups/unlinkQuotes.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/projectGroups/unlinkQuotes.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/providers/invoices": {
      "get": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Lists all vendor invoices in all statuses (including not ready and drafts) that have been updated since a specific date.",
        "description": "Lists all vendor invoices in all statuses (including not ready and drafts) that have been updated since a specific date.",
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only vendor invoices modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "vendor invoices",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderInvoiceDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/providers/invoices/getAll.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Creates a new invoice.",
        "description": "Creates a new invoice from jobs. Jobs are grouped by provider and currency, therefore multiple invoices can be created.If any of the jobs cannot be invoiced (ie. it is already invoiced) then an error is reported.",
        "operationId": "create_5",
        "requestBody": {
          "description": "Created new invoice.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderInvoiceCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/accounting/providers/invoices/createSingleFromJobs.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderInvoiceCreateResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/providers/invoices/createSingleFromJobs.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/providers/invoices/{invoiceId}/payments": {
      "get": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Returns all payments for the vendor invoice.",
        "description": "Returns all payments for the vendor invoice.",
        "operationId": "getPayments_1",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "vendor invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "vendor invoice's payments",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/providers/invoices/getPayments.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Creates a new payment on the vendor account and assigns the payment to the invoice.",
        "description": "Creates a new payment on the vendor account and assigns the payment to the invoice.",
        "operationId": "createPayment_1",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "vendor invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "New payment.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/accounting/providers/invoices/createPayment.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/accounting/providers/invoices/{invoiceId}": {
      "get": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Returns provider invoice details.",
        "description": "Returns provider invoice details.",
        "operationId": "getById_4",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "provider invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderInvoiceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/providers/invoices/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Removes a provider invoice.",
        "description": "Removes a provider invoice.",
        "operationId": "delete_7",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "provider invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/accounting/providers/invoices/ids": {
      "get": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Returns vendor invoices' internal identifiers.",
        "description": "Returns vendor invoices' internal identifiers.",
        "operationId": "getAllIds_3",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only vendor invoices modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "vendor invoices' internal identifiers",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/providers/invoices/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/providers/invoices/{invoiceId}/document": {
      "get": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Generates provider invoice document (PDF).",
        "description": "Generates provider invoice document (PDF).",
        "operationId": "getDocument_1",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "provider invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/accounting/providers/invoices/getDocument.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/providers/invoices/{invoiceId}/send": {
      "post": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Sends a provider invoice.",
        "description": "Sends a provider invoice.",
        "operationId": "send",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "provider invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/accounting/providers/invoices/{invoiceId}/status": {
      "post": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Changes invoice status to given status.",
        "description": "Changes invoice status to given status.",
        "operationId": "setStatus",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "provider invoice's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Changed invoice status to given status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequestDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/accounting/providers/invoices/setStatus.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/accounting/providers/payments/{paymentId}": {
      "delete": {
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Removes a provider payment.",
        "description": "Removes a provider payment.",
        "operationId": "delete_8",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "provider payment's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/providers/persons/{personId}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns person details.",
        "description": "Returns person details.",
        "operationId": "getById_5",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderPersonDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/persons/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendors"
        ],
        "summary": "Removes a person.",
        "description": "Removes a person.",
        "operationId": "delete_9",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/providers/persons/ids": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns persons' internal identifiers.",
        "description": "Returns persons' internal identifiers.",
        "operationId": "getAllIds_4",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only persons modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/persons/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/persons/{personId}/contact": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns contact of a given person.",
        "description": "Returns contact of a given person.",
        "operationId": "getContact_2",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PersonContactDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/persons/getContact.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/persons/{personId}/customFields": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns custom fields of a given person.",
        "description": "Returns custom fields of a given person.",
        "operationId": "getCustomFields_2",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/persons/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/persons/{personId}/notification/invitation": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Sends invitation to Vendor Portal.",
        "description": "Sends invitation to Vendor Portal.",
        "operationId": "sendInvitations",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "person's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationStatisticsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/persons/sendInvitations.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/priceLists/{priceListId}": {
      "delete": {
        "tags": [
          "Vendors"
        ],
        "summary": "Removes a provider price list.",
        "description": "Removes a provider price list.",
        "operationId": "delete_10",
        "parameters": [
          {
            "name": "priceListId",
            "in": "path",
            "description": "provider price list's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/providers/{providerId}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns provider details.",
        "description": "Returns provider details.",
        "operationId": "getById_6",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "list of adittional fields which should be embedded in the response (ie. persons)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendors"
        ],
        "summary": "Removes a provider.",
        "description": "Removes a provider.",
        "operationId": "delete_11",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/providers/{providerId}/address": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns address of a given provider.",
        "description": "Returns address of a given provider.",
        "operationId": "getAddress_1",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/address/getAddress.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/ids": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns providers' internal identifiers.",
        "description": "Returns providers' internal identifiers.",
        "operationId": "getAllIds_5",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only providers modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/{providerId}/competencies": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns competencies of a given provider.",
        "description": "Returns competencies of a given provider.",
        "operationId": "getCompetencies",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CompetenciesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/getCompetencies.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/{providerId}/contact": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns contact of a given provider.",
        "description": "Returns contact of a given provider.",
        "operationId": "getContact_3",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/getContact.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/{providerId}/correspondenceAddress": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns correspondence address of a given provider.",
        "description": "Returns correspondence address of a given provider.",
        "operationId": "getCorrespondenceAddress_1",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/address/getCorrespondenceAddress.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/{providerId}/customFields": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns custom fields of a given provider.",
        "description": "Returns custom fields of a given provider.",
        "operationId": "getCustomFields_3",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/{providerId}/notification/invitation": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Sends invitations to Vendor Portal.",
        "description": "Sends invitations to Vendor Portal.",
        "operationId": "sendInvitations_1",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "provider's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationStatisticsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/providers/sendInvitations.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}": {
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Removes a report.",
        "description": "Removes a report.",
        "operationId": "delete_12",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "report's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/reports/{reportId}/duplicate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Duplicates a report.",
        "description": "Duplicates a report.",
        "operationId": "duplicate_1",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "report's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/reports/export/xml": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Exports reports definition to XML.",
        "description": "Exports reports definition to XML.",
        "operationId": "exportToXML",
        "requestBody": {
          "description": "Exported reports definition to XML.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ExportRequestDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/reports/exportToXML.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/reports/exportToXML.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}/result/csv": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Generates CSV content for a report.",
        "description": "Generates CSV content for a report.",
        "operationId": "generateCSV",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "report's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/reports//generateCSV.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}/result/printerFriendly": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Generates printer friendly content for a report.",
        "description": "Generates printer friendly content for a report.",
        "operationId": "generatePrinterFriendly",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "report's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/reports//generatePrinterFriendly.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/import/xml": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Imports reports definition from XML.",
        "description": "Imports a report definition from an XML using a file token. To obtain the token, you first need to upload a temporary XML file, as specified in the Files section. Note that the name of the imported report must be unique.",
        "operationId": "importFromXML",
        "requestBody": {
          "description": "Imported reports definition from XML.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ImportRequestDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/reports/importFromXML.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/reports/importFromXML.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}/preferred": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Marks report as preferred or not.",
        "description": "Marks report as preferred or not.",
        "operationId": "setPreferred",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "report's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Marked report as preferred or not.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PreferredRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/services/all": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns services list",
        "description": "Returns workflows list. Both active and not active ones.",
        "operationId": "getAll_3",
        "parameters": [
          {
            "name": "nameEquals",
            "in": "query",
            "description": "exact name of entity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/services/all-v1.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/active": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns active services list",
        "description": "Returns active workflows list",
        "operationId": "getAllActive",
        "parameters": [
          {
            "name": "nameEquals",
            "in": "query",
            "description": "exact name of entity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/services/active-v1.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/supports": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "This method can be used to determine if hooks are supported.",
        "description": "This method can be used to determine if hooks are supported.",
        "operationId": "areHooksSupported",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/subscription": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Returns all subscriptions",
        "description": "Returns all subscriptions. Subscriptions are automatically removed if they do not work (ie. if 404 status is returned). To improve notification reliability one can use this method to check if subscription is still active and re-subscribe if necessary.",
        "operationId": "getAll_4",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActiveSubscriptionDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/subscription/getAll.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Subscribe to event",
        "description": "Subscribe to event. Returns subscription Id.",
        "operationId": "subscribe",
        "requestBody": {
          "description": "Returns subscription Id.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/subscription/subscribe_created.json#responseBody"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/subscription/subscribe_conflict.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/{subscriptionId}": {
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Unsubscribe from event",
        "description": "Unsubscribe from job status changed event",
        "operationId": "unsubscribe",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/users/{userId}/password": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Sets user's password to a new value.",
        "description": "Sets user's password to a new value.",
        "operationId": "changePassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "description": "old password"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "new password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns list of simple users representations",
        "description": "Returns list of simple users representations",
        "operationId": "getAllNamesWithIds_1",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityWithNameDTO"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/getAllNamesWithIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns user details.",
        "description": "Returns user details.",
        "operationId": "getById_7",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates an existing user.",
        "description": "Updates an existing user.",
        "operationId": "update_4",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated existing user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/users/update2.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/update2.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/customFields/{customFieldKey}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns custom field of a given user.",
        "description": "Returns custom field of a given user.",
        "operationId": "getCustomField_1",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customFieldKey",
            "in": "path",
            "description": "custom field's key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/getCustomField.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates given custom field of a given user.",
        "description": "Updates given custom field of a given user.",
        "operationId": "updateCustomField_1",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customFieldKey",
            "in": "path",
            "description": "custom field's key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields of a given user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/users/updateCustomField.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/updateCustomField.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/customFields": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns custom fields of a given user.",
        "description": "Returns custom fields of a given user.",
        "operationId": "getCustomFields_4",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates custom fields of a given user.",
        "description": "Updates custom fields of a given user.",
        "operationId": "updateCustomFields_2",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields of a given user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/users/updateCustomFields.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/updateCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns currently signed in user details.",
        "description": "Returns currently signed in user details.",
        "operationId": "getMe",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/getMe.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me/timeZone": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns time zone preferred by user currently signed in.",
        "description": "Returns time zone preferred by user currently signed in.",
        "operationId": "getTimeZone",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TimeZoneDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/users/getTimeZone.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries/active": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns active dictionary entities for all types.",
        "description": "Returns active dictionary entities for all types.",
        "operationId": "getActive",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ManyValuesPerTypeDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/dictionaries/map-active.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries/{type}/active": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns active values from a given dictionary.",
        "description": "Returns active values from a given dictionary.",
        "operationId": "getActiveByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "dictionary type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameEquals",
            "in": "query",
            "description": "exact name of entity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryEntity"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/dictionaries/currency-active-v1.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries/all": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns dictionary entities for all types. Both active and not active ones.",
        "description": "<div>\n  <p>\n    XTRF holds many user-defined dictionaries (ie. countries).\n    Each dictionary contains a set of values (ie. Poland or Germany).\n    A default value may be defined for a dictionary.\n  </p>\n  <p>\n    Dictionary values are identified using internal identifier which is constant and unique among other values from the same dictionary.\n    Please note that name used in dictionary values is presented in the locale of the current identity.\n    The same dictionary value can have different names, ie. \"Poland\" for one user, \"Polska\" for another one.\n  </p>\n  <p>\n    Possible dictionary types with short explanation:\n    <ul>\n      <li>calculationUnit - predefined values of how to calculate the volume of work into the price</li>\n      <li>category - labels to organize data on the platform</li>\n      <li>country - list of countries used on the platform</li>\n      <li>currency - currencies used in financial operations in the system</li>\n      <li>industry - industry sectors which clients specialize in</li>\n      <li>jobType - services offered by a company used in customized workflows</li>\n      <li>language - list of languages and its values used on the platform</li>\n      <li>leadSource - lead/recruitment places where new clients and vendors may be found</li>\n      <li>personDepartment - departments in which contact person may be assigned to</li>\n      <li>personPosition - positions in which user may be associated with</li>\n      <li>province - states and provinces used in various documents on the platform</li>\n      <li>specialization - list of specific qualifications required to perform a specific job in the task, for ex. medical, military</li>\n    </ul>\n  </p>\n</div>",
        "operationId": "getAll_5",
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ManyValuesPerTypeDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/dictionaries/map-all.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries/{type}/all": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns all values (both active and not active) from a given dictionary.",
        "description": "Returns all values (both active and not active) from a given dictionary.",
        "operationId": "getAllByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "dictionary type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameEquals",
            "in": "query",
            "description": "exact name of entity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryEntity"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/dictionaries/currency-all-v1.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries/{type}/{id}": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns specific value from a given dictionary.",
        "description": "Returns specific value from a given dictionary.",
        "operationId": "getByTypeAndId",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "dictionary type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "dictionary value identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryEntity"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/dictionaries/currency-v1.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries/{type}/all/default": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Returns a default value from a given dictionary.",
        "description": "Returns a default values from a given dictionary.",
        "operationId": "getDefaultByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "dictionary type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryEntity"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/dictionaries/currency-all-v1.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries/currency/{isoCode}/exchangeRate": {
      "get": {
        "tags": [
          "Currency exchange rates"
        ],
        "summary": "Returns currency exchange rates.",
        "description": "Returns currency exchange rates.",
        "operationId": "getByIsoCode",
        "parameters": [
          {
            "name": "isoCode",
            "in": "path",
            "description": "iso code, https://www.xe.com/iso4217.php",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyHistoryDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/dictionaries/currency/getByIsoCode.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Currency exchange rates"
        ],
        "summary": "Adding currency exchange rates.",
        "description": "Adding currency exchange rates via API",
        "operationId": "createExchangeRate",
        "parameters": [
          {
            "name": "isoCode",
            "in": "path",
            "description": "iso code, https://www.xe.com/iso4217.php",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Adding new currency exchange rates",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyHistoryDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/dictionaries/currency/createExchangeRate.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/jobs/{jobId}/files/output": {
      "post": {
        "tags": [
          "Jobs (Classic)"
        ],
        "operationId": "assignFileToJobOutput",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Assigns file to job output files.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/TaskFileDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/jobs/assignFileToJobOutput.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/jobs/{jobId}/vendor": {
      "put": {
        "tags": [
          "Jobs (Classic)"
        ],
        "summary": "Assigns vendor to a job in a project.",
        "description": "Assigns vendor to a job in a project.",
        "operationId": "assignVendor",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Assigned vendor to a job in a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignVendorDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/jobs/assignVendor.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/jobs/{jobId}/status": {
      "put": {
        "tags": [
          "Jobs (Classic)"
        ],
        "summary": "Changes job status if possible (400 Bad Request is returned otherwise).",
        "description": "Changes job status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys:<ul><li>OPEN \u2013 available when the job has one of the following statuses: ACCEPTED, CANCELED</li><li>ACCEPTED \u2013 available when the job has one of the following statuses: OPEN (Vendor and dates have to be set before calling the operation), STARTED</li><li>STARTED \u2013 available when the job has one of the following statuses: ACCEPTED, READY</li><li>READY \u2013 available when the job has one of the following statuses: STARTED</li><li>CANCELLED \u2013 available when the job has one of the following statuses: OPEN, ACCEPTED, STARTED, OFFERS_SENT</li><li>OFFERS_SENT \u2013 not available as a target status for this operation</li></ul>",
        "operationId": "changeStatus",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Changed job status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStatusDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/jobs/changeStatus.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "tags": [
          "Jobs (Classic)"
        ],
        "summary": "Returns job details by jobId.",
        "description": "Returns job details by jobId.",
        "operationId": "getJobDetails",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/JobDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/jobs/getJobDetails.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{jobId}/files": {
      "get": {
        "tags": [
          "Jobs (Classic)"
        ],
        "summary": "Returns list of input and output files of a job.",
        "description": "Returns list of input and output files of a job.",
        "operationId": "getJobFiles",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/JobFilesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/jobs/getJobFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{jobId}/files/{fileId}": {
      "get": {
        "tags": [
          "Jobs (Classic)"
        ],
        "summary": "Returns file metadata.",
        "description": "Returns file metadata.",
        "operationId": "getJobFiles_1",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FileMetadataDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/jobs/getJobFileMetadata.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{jobId}/dates": {
      "put": {
        "tags": [
          "Jobs (Classic)"
        ],
        "summary": "Updates dates of a given job.",
        "description": "Updates dates of a given job.",
        "operationId": "updateDates",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New job dates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDatesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/jobs/updateDates.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/jobs/{jobId}/instructions": {
      "put": {
        "tags": [
          "Jobs (Classic)"
        ],
        "summary": "Updates instructions for a job.",
        "description": "Updates instructions for a job.",
        "operationId": "updateInstructions",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated instructions for a job.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstructionsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/jobs/updateInstructionsForJob.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/projects": {
      "post": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Creates a new Classic Project.",
        "description": "Creates a new Classic Project. If the specified service ID refers to Smart Project, 400 Bad Request is returned instead.",
        "operationId": "create_6",
        "requestBody": {
          "description": "Created a new Classic Project.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ClassicProjectCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/createProject.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTOv1"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/createProject.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/languageCombinations": {
      "post": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Creates a new language combination for a given project without creating a task.",
        "description": "Creates a new language combination for a given project without creating a task.",
        "operationId": "createLanguageCombination",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created language combination for a given project without creating a task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonLanguageCombinationDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/createLanguageCombination.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CommonLanguageCombinationDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/createLanguageCombination.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/finance/payables": {
      "post": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Adds a payable to a project.",
        "description": "Adds a payable to a project.",
        "operationId": "createPayable",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/createPayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/createPayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/finance/receivables": {
      "post": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Adds a receivable to a project.",
        "description": "Adds a receivable to a project.",
        "operationId": "createReceivable",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/createReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/createReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tasks": {
      "post": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Creates a new task for a given project.",
        "description": "Creates a new task for a given project.<p>\n  Required fields:\n  <ul>\n    <li>languageCombination</li>\n    <li>specializationId</li>\n    <li>workflowId</li>\n  </ul>\n</p>\n",
        "operationId": "createTask",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created new task for a given project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/createTask.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/createTask.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Returns project details.",
        "description": "Returns project details. If the specified project ID refers to Smart Project, 400 Bad Request is returned instead.",
        "operationId": "getById_8",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "list of additional fields which should be embedded in the response (available options: tasks)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTOv1"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Removes a project.",
        "description": "Removes a project.",
        "operationId": "delete_13",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/projects/{projectId}/finance/payables/{payableId}": {
      "put": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Updates a simple payable.",
        "description": "Updates a simple payable. CAT payables are not supported.",
        "operationId": "updatePayable",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/updatePayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/updatePayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Deletes a payable.",
        "description": "Deletes a payable.",
        "operationId": "deletePayable",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/projects/{projectId}/finance/receivables/{receivableId}": {
      "put": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Updates a simple receivable.",
        "description": "Updates a simple receivable. CAT receivables are not supported.",
        "operationId": "updateReceivable",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/updateReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/updateReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Deletes a receivable.",
        "description": "Deletes a receivable.",
        "operationId": "deleteReceivable",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/projects/ids": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Returns projects' internal identifiers.",
        "description": "Returns projects' internal identifiers.",
        "operationId": "getAllIds_6",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only projects modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/contacts": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Returns contacts of a given project.",
        "description": "Returns contacts of a given project.",
        "operationId": "getContacts",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/getContacts.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Updates contacts of a given project.",
        "description": "Updates contacts of a given project.",
        "operationId": "updateContacts",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated contacts of a given project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/updateContacts.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/updateContacts.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/customFields": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Returns custom fields of a given project.",
        "description": "Returns custom fields of a given project.",
        "operationId": "getCustomFields_5",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Updates custom fields of a given project.",
        "description": "Updates custom fields of a given project.",
        "operationId": "updateCustomFields_3",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields of a given project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/updateCustomFields.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/updateCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/dates": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Returns dates of a given project.",
        "description": "Returns dates of a given project.",
        "operationId": "getDates_1",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDatesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/getDates.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Updates dates of a given project.",
        "description": "Updates dates of a given project.",
        "operationId": "updateDates_1",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated dates of a given project..",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDatesDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/updateDates.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDatesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/updateDates.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/files/{fileId}/download": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Downloads a file.",
        "description": "Downloads a file.",
        "operationId": "getFileById",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success!",
            "content": {
              "multipart/form-data": {}
            }
          }
        }
      }
    },
    "/projects/{projectId}/finance": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Returns finance of a given project.",
        "description": "Returns finance of a given project.",
        "operationId": "getFinance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FinanceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/getFinance.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/instructions": {
      "get": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Returns instructions of a given project.",
        "description": "Returns instructions of a given project.",
        "operationId": "getInstructions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InstructionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/getInstructions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects (Classic)"
        ],
        "summary": "Updates instructions of a given project.",
        "description": "Updates instructions of a given project.",
        "operationId": "updateInstructions_1",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated instructions of a given project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstructionsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/projects/updateInstructions.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InstructionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/projects/updateInstructions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/languageCombinations": {
      "post": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Creates a new language combination for a given quote without creating a task.",
        "description": "Creates a new language combination for a given quote without creating a task.",
        "operationId": "createLanguageCombination_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created a new language combination for a given quote without creating a task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonLanguageCombinationDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/createLanguageCombination.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CommonLanguageCombinationDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/createLanguageCombination.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/finance/payables": {
      "post": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Adds a payable.",
        "description": "Adds a payable.",
        "operationId": "createPayable_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Adds a payable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/createCATPayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/createCATPayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/finance/receivables": {
      "post": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Adds a receivable.",
        "description": "Adds a receivable.",
        "operationId": "createReceivable_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Adds a receivable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/createReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/createReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/tasks": {
      "post": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Creates a new task for a given quote.",
        "description": "Creates a new task for a given quote. Required fields are presented in the example.",
        "operationId": "createTask_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields of a given quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/createTask.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/createTask.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}": {
      "get": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Returns quote details.",
        "description": "Returns quote details. If the specified quote ID refers to Smart Quote, 400 Bad Request is returned instead.",
        "operationId": "getById_9",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "list of adittional fields which should be embedded in the response (ie. tasks)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteDTOv1"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Removes a quote.",
        "description": "Removes a quote.",
        "operationId": "delete_14",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/quotes/{quoteId}/finance/payables/{payableId}": {
      "put": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Updates a simple payable.",
        "description": "Updates a simple payable. CAT payables are not supported.",
        "operationId": "updatePayable_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updates a payable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/updatePayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/updatePayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Deletes a payable.",
        "description": "Deletes a payable.",
        "operationId": "deletePayable_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quoteId's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/quotes/{quoteId}/finance/receivables/{receivableId}": {
      "put": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Updates a simple receivable.",
        "description": "Updates a simple receivable. CAT receivables are not supported.",
        "operationId": "updateReceivable_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updates a receivable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/updateReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/updateReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Deletes a receivable.",
        "description": "Deletes a receivable.",
        "operationId": "deleteReceivable_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quoteId's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/quotes/ids": {
      "get": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Returns quotes' internal identifiers.",
        "description": "Returns quotes' internal identifiers.",
        "operationId": "getAllIds_7",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "only quotes modified since this timestamp",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/getIds.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/customFields": {
      "get": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Returns custom fields of a given quote.",
        "description": "Returns custom fields of a given quote.",
        "operationId": "getCustomFields_6",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Updates custom fields of a given quote.",
        "description": "Updates custom fields of a given quote.",
        "operationId": "updateCustomFields_4",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields of a given quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/updateCustomFields.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/updateCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/dates": {
      "get": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Returns dates of a given quote.",
        "description": "Returns dates of a given quote.",
        "operationId": "getDates_2",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteDatesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/getDates.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/finance": {
      "get": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Returns finance of a given quote.",
        "description": "Returns finance of a given quote.",
        "operationId": "getFinance_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FinanceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/getFinance.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/instructions": {
      "get": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Returns instructions of a given quote.",
        "description": "Returns instructions of a given quote.",
        "operationId": "getInstructions_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InstructionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/getInstructions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Updates instructions of a given quote.",
        "description": "Updates instructions of a given quote.",
        "operationId": "updateInstructions_2",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated instructions of a given project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstructionsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/quotes/updateInstructions.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InstructionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/quotes/updateInstructions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quoteId}/confirmation/send": {
      "post": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Sends a quote for customer confirmation.",
        "description": "Sends a quote for customer confirmation. Quote status is changed to SENT and a document is sent to the customer.",
        "operationId": "send_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/quotes/{quoteId}/start": {
      "post": {
        "tags": [
          "Quotes (Classic)"
        ],
        "summary": "Starts a quote.",
        "description": "Starts a quote.",
        "operationId": "start",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tasks/{taskId}/files/input": {
      "post": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Adds files to a given task.",
        "description": "Adds files to a given task.",
        "operationId": "addFile",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskFileDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/tasks/addFile.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "delete": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Removes a task.",
        "description": "Removes a task.",
        "operationId": "delete_15",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "removeFilesFromDisc",
            "in": "query",
            "description": "remove files from disc",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "removeExternalProjects",
            "in": "query",
            "description": "remove external projects (ie. from CAT Tool)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "forceJobsRemoval",
            "in": "query",
            "description": "force jobs removal (ie. started or ready)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tasks/{taskId}/contacts": {
      "get": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Returns contacts of a given task.",
        "description": "Returns contacts of a given task.",
        "operationId": "getContacts_1",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/getContacts.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Updates contacts of a given task.",
        "description": "Updates contacts of a given task.",
        "operationId": "updateContacts_1",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated contacts of given task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/tasks/updateContacts.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/customFields": {
      "get": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Returns custom fields of a given task.",
        "description": "Returns custom fields of a given task.",
        "operationId": "getCustomFields_7",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Updates custom fields of a given task.",
        "description": "Updates custom fields of a given task.",
        "operationId": "updateCustomFields_5",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom fields",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/tasks/updateCustomFields.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/updateCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/dates": {
      "get": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Returns dates of a given task.",
        "description": "Returns dates of a given task.",
        "operationId": "getDates_3",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDatesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/getDates.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Updates dates of a given task.",
        "description": "Updates dates of a given task.",
        "operationId": "updateDates_2",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated dates of a given task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDatesDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/tasks/updateDates.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDatesDTO"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/instructions": {
      "get": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Returns instructions of a given task.",
        "description": "Returns instructions of a given task.",
        "operationId": "getInstructions_2",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InstructionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/getInstructions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Updates instructions of a given task.",
        "description": "Updates instructions of a given task.",
        "operationId": "updateInstructions_3",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated instructions of a given task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstructionsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/tasks/updateInstructions.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InstructionsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/updateInstructions.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/progress": {
      "get": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Returns progress of a given task.",
        "description": "Returns progress of a given task. Progress contains information about task's status (ie. opened or ready) and current phase (ie. translation). Workflow phase is defined as the first one which contains not ready jobs (ie. opened or started). When no such job exists then workflow phase is not included.",
        "operationId": "getProgress",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskProgressDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/getProgress.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/files": {
      "get": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Returns lists of files of a given task.",
        "description": "Returns several lists of files for a given task: input files divided by type, output files, bundles, files per job, preview files.",
        "operationId": "getTaskFiles",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFilesDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/getTaskFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/start": {
      "post": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Starts a task.",
        "description": "Starts a task.",
        "operationId": "start_1",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tasks/{taskId}/clientTaskPONumber": {
      "put": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Updates Client Task PO Number of a given task.",
        "description": "Updates Client Task PO Number of a given task.",
        "operationId": "updateClientTaskPONumber",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Task PO Number of a given task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/tasks/updateClientTaskPONumber.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/StringDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/updateClientTaskPONumber.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/name": {
      "put": {
        "tags": [
          "Tasks (Classic)"
        ],
        "summary": "Updates name of a given task.",
        "description": "Updates name of a given task.",
        "operationId": "updateName",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "task's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v1/tasks/updateName.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.xtrf-v1+json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/StringDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v1/tasks/updateName.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/dictionaries/language": {
      "post": {
        "tags": [
          "Language"
        ],
        "operationId": "createLanguage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/dictionaries/language/{languageId}": {
      "patch": {
        "tags": [
          "Language"
        ],
        "operationId": "updateLanguageActive",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/v2/dictionaries/specialization": {
      "post": {
        "tags": [
          "Specialization"
        ],
        "operationId": "createSpecialization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageSpecializationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/dictionaries/specialization/{specializationId}": {
      "patch": {
        "tags": [
          "Specialization"
        ],
        "operationId": "updateSpecializationActive",
        "parameters": [
          {
            "name": "specializationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/addExternalLink": {
      "post": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "operationId": "addExternalFileLink",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added file links to the project as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalFileDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/delivered/addLink": {
      "post": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Adds file link to the project as a link delivered in the job.",
        "description": "Adds file link to the project as a link delivered in the job. The following properties can be specified for each file link:<ul><li>url (required, 400 Bad Request is returned otherwise)</li><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds \u2013 when the file category depends on a list of languages</li><li>languageCombinationIds \u2013 when the file category depends on a list of language combinations</li></ul>",
        "operationId": "addFileLinks",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Adds file link to the project as a link delivered in the job.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileLinkCategorizationsDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/addFileLinksToJob.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/addFileLinksToJob.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/delivered/add": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Adds files to the project as delivered in the job.",
        "description": "Adds files to the project as delivered in the job. The files have to be uploaded beforehand (see \"POST /jobs/{jobId}/files/upload\" operation). The following properties can be specified for each file:<ul><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds \u2013 when the file category depends on a list of languages</li><li>languageCombinationIds \u2013 when the file category depends on a list of language combinations</li></ul>",
        "operationId": "addFiles",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added files to the project as delivered in the job.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileCategorizationsDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/addFiles.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/jobs/{jobId}/vendor": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Assigns vendor to a job in a project.",
        "description": "Assigns vendor to a job in a project.",
        "operationId": "assignVendor_1",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Assigned vendor to a job in a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPriceProfileDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/assignVendor.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/jobs/{jobId}/dates": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Updates dates of a given job.",
        "description": "Updates dates of a given job.",
        "operationId": "changeDates",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New job dates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDatesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/changeDates.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/jobs/{jobId}/status": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Changes job status if possible (400 Bad Request is returned otherwise).",
        "description": "Changes job status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys:<ul><li>OPEN \u2013 available when the job has one of the following statuses: ACCEPTED, CANCELED</li><li>ACCEPTED \u2013 available when the job has one of the following statuses: OPEN (Vendor and dates have to be set before calling the operation), STARTED</li><li>STARTED \u2013 available when the job has one of the following statuses: ACCEPTED, READY</li><li>READY \u2013 available when the job has one of the following statuses: STARTED</li><li>CANCELLED \u2013 available when the job has one of the following statuses: OPEN, ACCEPTED, STARTED, OFFERS_SENT</li><li>OFFERS_SENT \u2013 not available as a target status for this operation</li></ul>",
        "operationId": "changeStatus_1",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Changed job status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStatusDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/changeStatus.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/jobs/for-external-id": {
      "get": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "operationId": "getByExternalId",
        "parameters": [
          {
            "name": "externalProjectId",
            "in": "query",
            "description": "job's externalProjectId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "job's external identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/delivered": {
      "get": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Returns list of files delivered in the job.",
        "description": "Returns list of files delivered in the job.",
        "operationId": "getDeliveredFiles",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectFileDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/getDeliveredFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}": {
      "get": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Returns details for a job.",
        "description": "Returns details for a job.",
        "operationId": "getFileById_1",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/JobDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/sharedReferenceFiles": {
      "get": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Returns list of files shared with the job as Reference Files.",
        "description": "Returns list of files shared with the job as Reference Files.",
        "operationId": "getSharedReferenceFiles",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectFileDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/getSharedReferenceFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/sharedWorkFiles": {
      "get": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Returns list of files shared with the job as Work Files.",
        "description": "Returns list of files shared with the job as Work Files.",
        "operationId": "getSharedWorkFiles",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectFileDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/getSharedWorkFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/sharedReferenceFiles/share": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Shares selected files as Reference Files with a job in a project.",
        "description": "Shares selected files as Reference Files with a job in a project. The files and the job have to be part of the same project. The operation is finished successfully even if some of the selected files were already shared with the job. If a file was shared with the job as Work File, it will now be shared as Reference File (and not as Work File).",
        "operationId": "shareAsReferenceFiles",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Shared selected files as Reference Files with a job in a project.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/shareAsReferenceFiles.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesShareStatusDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/shareAsReferenceFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/sharedWorkFiles/share": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Shares selected files as Work Files with a job in a project.",
        "description": "Shares selected files as Work Files with a job in a project. The files and the job have to be part of the same project. The operation is finished successfully even if some of the selected files were already shared with the job. If a file was shared with the job as Reference File, it will now be shared as Work File (and not as Reference File).",
        "operationId": "shareAsWorkFiles",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Shared selected files as Work Files with a job in a project.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/shareAsWorkFiles.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesShareStatusDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/shareAsWorkFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/stopSharing": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Stops sharing selected files with a job in a project.",
        "description": "Stops sharing selected files with a job in a project. The files and the job have to be part of the same project. The operation is finished successfully even if some of the selected files were not shared with the job.",
        "operationId": "stopSharing",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "File sharing stopped for a project task.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/stopSharing.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesShareStatusDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/stopSharing.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/instructions": {
      "put": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Updates instructions for a job.",
        "description": "Updates instructions for a job. See also \"PUT /projects/{projectId}/vendorInstructions\" and \"PUT /quotes/{quoteId}/vendorInstructions\" for updating instructions for all jobs in a project or quote.",
        "operationId": "updateInstructions_4",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated instructions for a job.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/jobs/updateInstructionsForJob.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/delivered/upload": {
      "post": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Uploads file to the project as a file delivered in the job.",
        "description": "Uploads file to the project as a file delivered in the job. Only one file can be uploaded at once. When the upload is finished the file has to be added by specifying its category and languages (see \"PUT /jobs/{jobId}/files/add\" operation).",
        "operationId": "uploadFile_1",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Uploaded file to the project as a file delivered in the job.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileToUploadDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/uploadFile.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/jobs/{jobId}/files/delivered/uploadFileByVendor": {
      "post": {
        "tags": [
          "Jobs (Smart)(v2)"
        ],
        "summary": "Uploads file to the project as a file delivered in the job, added by vendor.",
        "description": "Uploads file to the project as a file delivered in the job, added by vendor. Only one file can be uploaded at once. When the upload is finished the file has to be added by specifying its category and languages.",
        "operationId": "uploadFileByVendor",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "job's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalJobId",
            "in": "query",
            "description": "job's external identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Uploaded file to the project as a file delivered in the job.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileToUploadDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/jobs/uploadFile.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/files/addExternalLinks": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "operationId": "addExternalFileLinks",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added file links to the project as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalFilesDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/externalInfo": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "operationId": "addExternalInfoToProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/files/addLink": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Adds file links to the project as added by PM.",
        "description": "Adds file links to the project as added by PM. The following properties can be specified for each file link:<ul><li>url (required, 400 Bad Request is returned otherwise)</li><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds \u2013 when the file category depends on a list of languages</li><li>languageCombinationIds \u2013 when the file category depends on a list of language combinations</li></ul>",
        "operationId": "addFileLinks_1",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added file links to the project as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileLinkCategorizationsDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/addFileLinks.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/addFileLinks.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/files/add": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Adds files to the project as added by PM.",
        "description": "Adds files to the project as added by PM. The files have to be uploaded beforehand (see \"POST /v2/projects/{projectId}/files/upload\" operation). The following properties can be specified for each file:<ul><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds \u2013 when the file category depends on a list of languages</li><li>languageCombinationIds \u2013 when the file category depends on a list of language combinations</li></ul>",
        "operationId": "addFiles_1",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added files to the project as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileCategorizationsDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/addFiles.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/addJob": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "operationId": "addJobToProcess",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/files/addTargetFile": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Adds target file to the project as added by PM.",
        "description": "Adds file to the project as added by PM. The file have to be uploaded beforehand (see \"POST /v2/projects/{projectId}/files/upload\" operation).",
        "operationId": "addTargetFiles",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added target file to the project as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetFileDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/addTargetFile.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/files/archive": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Prepares a ZIP archive that contains the specified files.",
        "description": "Prepares a ZIP archive that contains the specified files.",
        "operationId": "archive",
        "requestBody": {
          "description": "Prepared ZIP archive that contains the specified files.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/archive.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesArchiveDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/archive.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/status": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Changes project status if possible (400 Bad Request is returned otherwise).",
        "description": "Changes project status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys: <ul><li>CANCELLED \u2013 available when the job has one of the following statuses: OPEN, STARTED</li></ul>",
        "operationId": "changeStatus_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Changed project status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectStatusDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/changeStatus.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Creates a new Smart Project.",
        "description": "Creates a new Smart Project. If the specified service ID refers to Classic Project, 400 Bad Request is returned instead.",
        "operationId": "create_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTOv2"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/createProject.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/createCatToolProject": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Creates Cat Tool Project corresponding to XTRF project.",
        "operationId": "createCatToolProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateSelectionType",
            "in": "query",
            "description": "Template selection type. If none is provided default value: 'Same_As_Project' will be used.",
            "schema": {
              "type": "string",
              "enum": [
                "Same_As_Project",
                "Do_Not_Use_Template",
                "Template_By_Id"
              ]
            }
          },
          {
            "name": "templateId",
            "in": "query",
            "description": "CAT Tool Template Id. Parameter can only be used if 'Template_By_Id' Template Selection Type is provided.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCatToolDetailsDTOv2"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/finance/payables": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Adds a payable to a project.",
        "description": "Adds a payable to a project.",
        "operationId": "createPayable_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/createPayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/createPayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/finance/receivables": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Adds a receivable to a project.",
        "description": "Adds a receivable to a project.",
        "operationId": "createReceivable_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/createReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/createReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/files/{fileId}": {
      "delete": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Deletes a file.",
        "description": "Deletes a file.",
        "operationId": "deleteFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/finance/payables/{payableId}": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates a simple payable.",
        "description": "Updates a simple payable. CAT payables are not supported.",
        "operationId": "updatePayable_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updatePayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/updatePayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Deletes a payable.",
        "description": "Deletes a payable.",
        "operationId": "deletePayable_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/finance/receivables/{receivableId}": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates a simple receivable.",
        "description": "Updates a simple receivable. CAT receivables are not supported.",
        "operationId": "updateReceivable_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/updateReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Deletes a receivable.",
        "description": "Deletes a receivable.",
        "operationId": "deleteReceivable_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/for-external-id/{externalProjectId}": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns project details.",
        "description": "Returns project details.",
        "operationId": "getByExternalId_1",
        "parameters": [
          {
            "name": "externalProjectId",
            "in": "path",
            "description": "project's external identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTOv2"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns project details.",
        "description": "Returns project details. If the specified project ID refers to Classic Project, 400 Bad Request is returned instead.",
        "operationId": "getById_10",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTOv2"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/catToolProject": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns if cat tool project is created or queued.",
        "operationId": "getCATToolProjectInfo",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CATToolProjectDTO"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/catToolProjectTemplates": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns CAT Tool project templates available for selection in XTRF.",
        "operationId": "getCatToolProjectTemplates",
        "parameters": [
          {
            "name": "catToolType",
            "in": "query",
            "description": "Type of the CAT Tool",
            "schema": {
              "type": "string",
              "enum": [
                "MemoQ",
                "XTM"
              ]
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Project's internal identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catToolId",
            "in": "query",
            "description": "CAT Tool instance\u2019s internal identifier",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CatToolProjectTemplateInfoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/clientContacts": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns Client Contacts information for a project.",
        "description": "Returns Client Contacts information for a project",
        "operationId": "getContacts_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SmartContactsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getClientContacts.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates Client Contacts for a project.",
        "description": "Updates Client Contacts for a project.",
        "operationId": "updateContacts_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Contacts for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmartContactsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateClientContacts.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SmartContactsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/updateClientContacts.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/customFields": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns a list of custom field keys and values for a project.",
        "description": "Returns a list of custom field keys and values for a project.",
        "operationId": "getCustomFields_8",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/files/deliverable": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns list of files in a project, that are ready to be delivered to client.",
        "description": "Returns list of files in a project, that are ready to be delivered to client. A file is considered deliverable to client when all of the following criteria are met:<ul><li>the file was added to a job in the last step in the process</li><li>the file is marked as verified (if it was added in a verification step and the file is verifiable, according to its category)</li><li>the job is finished (has Ready status)</li></ul>",
        "operationId": "getDeliverableFiles",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectFileDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getDeliverableFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/files/{fileId}": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns details of a file.",
        "description": "Returns details of a file.",
        "operationId": "getFileById_2",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFileDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getFileById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/files/{fileId}/download/{fileName}": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Downloads a file content.",
        "description": "Downloads a file content.",
        "operationId": "getFileContentById",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "file's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "multipart/form-data": {}
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/files": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns list of files in a project.",
        "description": "Returns list of files in a project. Only files added to the project (i.e. files that have assigned category and languages) are listed.",
        "operationId": "getFiles",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectFileDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/finance": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns finance information for a project.",
        "description": "Returns finance information for a project.",
        "operationId": "getFinance_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FinanceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getFinance.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/jobs": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns list of jobs in a project.",
        "description": "Returns list of jobs in a project.",
        "operationId": "getJobs",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/getJobs.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/process": {
      "get": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Returns process id.",
        "operationId": "getProcessId",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CATToolProjectDTO"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/catToolProjectTemplateDetails": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates template details for a project.",
        "description": "Updates template details for a project.",
        "operationId": "updateCatToolProjectTemplateDetails",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated template details for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatToolProjectTemplateDetailsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateTemplateDetails.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/clientDeadline": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates Client Deadline for a project.",
        "description": "Updates Client Deadline for a project.",
        "operationId": "updateClientDeadline",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Deadline for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateClientDeadline.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/clientNotes": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates Client Notes for a project.",
        "description": "Updates Client Notes for a project.",
        "operationId": "updateClientNotes",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Notes for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateClientNotes.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/clientReferenceNumber": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates Client Reference Number for a project.",
        "description": "Updates Client Reference Number for a project.",
        "operationId": "updateClientReferenceNumber",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Reference Number for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateClientReferenceNumber.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/customFields/{key}": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates a custom field with a specified key in a project",
        "description": "Updates a custom field with a specified key in a project",
        "operationId": "updateCustomField_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "custom field's key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom field with a specified key in a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmartCustomFieldDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateCustomField.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/internalNotes": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates Internal Notes for a project.",
        "description": "Updates Internal Notes for a project.",
        "operationId": "updateInternalNotes",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Internal Notes for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateInternalNotes.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/orderDate": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates Order Date for a project.",
        "description": "Updates Order Date for a project.",
        "operationId": "updateOrderedOn",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Order Date for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateOrderedOn.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/processType": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "operationId": "updateProcessTemplateType",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated process type for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessTemplateTypeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/sourceLanguage": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates source language for a project.",
        "description": "Updates source language for a project.",
        "operationId": "updateSourceLanguage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated source language for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceLanguageDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateSourceLanguage.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/specialization": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates specialization for a project.",
        "description": "Updates specialization for a project.",
        "operationId": "updateSpecialization",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated specialization for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecializationDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateSpecialization.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/targetLanguages": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates target languages for a project.",
        "description": "Updates target languages for a project.",
        "operationId": "updateTargetLanguages",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated target languages for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetLanguagesDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateTargetLanguages.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/vendorInstructions": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates instructions for all vendors performing the jobs in a project.",
        "description": "Updates instructions for all vendors performing the jobs in a project. See also \"PUT /jobs/{jobId}/instructions\" for updating instructions for a specific job in a project or quote.",
        "operationId": "updateVendorInstructions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated instructions for all vendors performing the jobs in a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateSpecialization.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/volume": {
      "put": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Updates volume for a project.",
        "description": "Updates volume for a project.",
        "operationId": "updateVolume",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated volume for a project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BigDecimalDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateVolume.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/projects/{projectId}/files/upload": {
      "post": {
        "tags": [
          "Projects (Smart)(v2)"
        ],
        "summary": "Uploads file to the project as a file uploaded by PM.",
        "description": "Uploads file to the project as a file uploaded by PM. Only one file can be uploaded at once. When the upload is finished the file has to be added by specifying its category and languages (see \"PUT /v2/projects/{projectId}/files/add\" operation",
        "operationId": "uploadFile_2",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Uploaded file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileToUploadDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/projects/uploadFile.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/files/addExternalLinks": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "operationId": "addExternalFileLinks_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added file links to the quote as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalFilesDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/externalInfo": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "operationId": "addExternalInfoToProject_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/files/addLink": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Adds file links to the quote as added by PM.",
        "description": "Adds file links to the quote as added by PM. The following properties can be specified for each file link:<ul><li>url (required, 400 Bad Request is returned otherwise)</li><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds \u2013 when the file category depends on a list of languages</li><li>languageCombinationIds \u2013 when the file category depends on a list of language combinations</li></ul>",
        "operationId": "addFileLinks_2",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added file links to the quote as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileLinkCategorizationsDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/addFileLinks.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/addFileLinks.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/files/add": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Adds files to the quote as added by PM.",
        "description": "Adds files to the quote as added by PM. The files have to be uploaded beforehand (see \"POST v2/quotes/{quoteId}/files/upload\" operation). The following properties can be specified for each file:<ul><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds \u2013 when the file category depends on a list of languages</li><li>languageCombinationIds \u2013 when the file category depends on a list of language combinations</li></ul>",
        "operationId": "addFiles_2",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added files to the quote as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/addFiles.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/addJob": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "operationId": "addJobToProcess_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/files/addTargetFile": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Adds target file to the quote as added by PM.",
        "description": "Adds file to the quote as added by PM. The file have to be uploaded beforehand (see \"POST /v2/quotes/{quoteId}/files/upload\" operation).",
        "operationId": "addTargetFiles_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Added target file to the quote as added by PM.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetFileDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/addTargetFile.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/files/archive": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Prepares a ZIP archive that contains the specified files.",
        "description": "Prepares a ZIP archive that contains the specified files.",
        "operationId": "archive_1",
        "requestBody": {
          "description": "Prepared ZIP archive that contains the specified files.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilesDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/archive.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilesArchiveDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/archive.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/status": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Changes quote status if possible (400 Bad Request is returned otherwise).",
        "description": "Changes quote status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys: <ul><li>PENDING \u2013 available when the job has one of the following statuses: REQUESTED, REJECTED</li><li>SENT \u2013 available when the job has one of the following statuses: PENDING</li><li>APPROVED \u2013 available when the job has one of the following statuses: REQUESTED, PENDING, SENT, APPROVED_BY_CLIENT</li><li>REJECTED \u2013 available when the job has one of the following statuses: REQUESTED, PENDING, SENT</li></ul>",
        "operationId": "changeStatus_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Changed Quote status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectStatusDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/changeStatus.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Creates a new Smart Quote.",
        "description": "Creates a new Smart Quote. If the specified service ID refers to Classic Quote, 400 Bad Request is returned instead.",
        "operationId": "create_8",
        "requestBody": {
          "description": "Project to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteDTOv2"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/createQuote.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/finance/payables": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Adds a payable to a quote.",
        "description": "Adds a payable to a quote.",
        "operationId": "createPayable_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/createPayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/createPayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/finance/receivables": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Adds a receivable to a quote.",
        "description": "Adds a receivable to a quote.",
        "operationId": "createReceivable_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableCreateDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/createReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/createReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/files/{fileId}": {
      "delete": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Deletes a file.",
        "description": "Deletes a file.",
        "operationId": "deleteFile_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/finance/payables/{payableId}": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates a simple payable.",
        "description": "Updates a simple payable. CAT payables are not supported.",
        "operationId": "updatePayable_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updatePayable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/updatePayable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Deletes a payable.",
        "description": "Deletes a payable.",
        "operationId": "deletePayable_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payableId",
            "in": "path",
            "description": "payable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/finance/receivables/{receivableId}": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates a simple receivable.",
        "description": "Updates a simple receivable. CAT receivables are not supported.",
        "operationId": "updateReceivable_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateReceivable.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivableDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/updateReceivable.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Deletes a receivable.",
        "description": "Deletes a receivable.",
        "operationId": "deleteReceivable_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receivableId",
            "in": "path",
            "description": "receivable's internal identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/for-external-id/{externalProjectId}": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns quote details.",
        "description": "Returns quote details.",
        "operationId": "getByExternalId_2",
        "parameters": [
          {
            "name": "externalProjectId",
            "in": "path",
            "description": "project's external identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTOv2"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns quote details.",
        "description": "Returns quote details. If the specified quote ID refers to Classic Quote, 400 Bad Request is returned instead.",
        "operationId": "getById_11",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteDTOv2"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/clientContacts": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns Client Contacts information for a quote.",
        "description": "Returns Client Contacts information for a quote.",
        "operationId": "getContacts_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SmartContactsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getClientContacts.json#responseBody"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates Client Contacts for a quote.",
        "description": "Updates Client Contacts for a quote.",
        "operationId": "updateContacts_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Contacts for a quote.",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SmartContactsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateClientContacts.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SmartContactsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/updateClientContacts.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/customFields": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns a list of custom field keys and values for a project.",
        "description": "Returns a list of custom field keys and values for a project.",
        "operationId": "getCustomFields_9",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getCustomFields.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/files/{fileId}": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns details of a file.",
        "description": "Returns details of a file.",
        "operationId": "getFileById_3",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFileDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getFileById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/files/{fileId}/download/{fileName}": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Downloads a file content.",
        "description": "Downloads a file content.",
        "operationId": "getFileContentById_1",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "file's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "file's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "multipart/form-data": {
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getFileContentById.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/files": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns list of files in a quote.",
        "description": "Returns list of files in a quote. Only files added to the quote (i.e. files that have assigned category and languages) are listed.",
        "operationId": "getFiles_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "ok",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectFileDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getFiles.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/finance": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns finance information for a quote.",
        "description": "Returns finance information for a quote.",
        "operationId": "getFinance_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FinanceDTO"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getFinance.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/jobs": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns list of jobs in a quote.",
        "description": "Returns list of jobs in a quote.",
        "operationId": "getJobs_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDto"
                  }
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/getJobs.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/process": {
      "get": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Returns process id.",
        "operationId": "getProcessId_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CATToolProjectDTO"
                }
              }
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/businessDays": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates Business Days for a quote.",
        "description": "Updates Business Days for a quote.",
        "operationId": "updateBusinessDays",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Business Days for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateBusinessDays.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/catToolProjectTemplateDetails": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates template details for a quote.",
        "description": "Updates template details for a quote.",
        "operationId": "updateCatToolProjectTemplateDetails_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated template details for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatToolProjectTemplateDetailsDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/projects/updateTemplateDetails.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/clientNotes": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates Client Notes for a quote.",
        "description": "Updates Client Notes for a quote.",
        "operationId": "updateClientNotes_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Notes for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateClientNotes.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/clientReferenceNumber": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates Client Reference Number for a quote.",
        "description": "Updates Client Reference Number for a quote.",
        "operationId": "updateClientReferenceNumber_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Client Reference Number for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateClientReferenceNumber.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/customFields/{key}": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates a custom field with a specified key in a quote.",
        "description": "Updates a custom field with a specified key in a quote.",
        "operationId": "updateCustomField_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "custom field's key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated custom field with a specified key in a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmartCustomFieldDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateCustomField.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/expectedDeliveryDate": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates Expected Delivery Date for a quote.",
        "description": "Updates Expected Delivery Date for a quote.",
        "operationId": "updateExpectedDeliveryDate",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Expected Delivery Date for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateExpectedDeliveryDate.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/internalNotes": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates Internal Notes for a quote.",
        "description": "Updates Internal Notes for a quote.",
        "operationId": "updateInternalNotes_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Internal Notes for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateInternalNotes.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/processType": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "operationId": "updateProcessTemplateType_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated process type for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessTemplateTypeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {}
            }
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/quoteExpiry": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates Quote Expiry Date for a quote.",
        "description": "Updates Quote Expiry Date for a quote.",
        "operationId": "updateQuoteExpiry",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Quote Expiry Date for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateQuoteExpiry.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/sourceLanguage": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates source language for a quote.",
        "description": "Updates source language for a quote.",
        "operationId": "updateSourceLanguage_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated source language for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceLanguageDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateSourceLanguage.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/specialization": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates specialization for a quote.",
        "description": "Updates specialization for a quote.",
        "operationId": "updateSpecialization_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated specialization for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecializationDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateSpecialization.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/targetLanguages": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates target languages for a quote.",
        "description": "Updates target languages for a quote.",
        "operationId": "updateTargetLanguages_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated target languages for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetLanguagesDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateTargetLanguages.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/vendorInstructions": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates instructions for all vendors performing the jobs in a quote.",
        "description": "Updates instructions for all vendors performing the jobs in a quote. See also \"PUT /jobs/{jobId}/instructions\" for updating instructions for a specific job in a project or quote.",
        "operationId": "updateVendorInstructions_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated instructions for all vendors performing the jobs in a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateInstructionsForAllJobs.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/volume": {
      "put": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Updates volume for a quote.",
        "description": "Updates volume for a quote.",
        "operationId": "updateVolume_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated volume for a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BigDecimalDTO"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/updateVolume.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/quotes/{quoteId}/files/upload": {
      "post": {
        "tags": [
          "Quotes (Smart)(v2)"
        ],
        "summary": "Uploads file to the quote as a file uploaded by PM.",
        "description": "Uploads file to the quote as a file uploaded by PM. Only one file can be uploaded at once. When the upload is finished the file has to be added by specifying its category and languages (see \"PUT /v2/quotes/{quoteId}/files/add\" operation).",
        "operationId": "uploadFile_3",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote's internal identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Uploaded file to the quote as a file uploaded by PM.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileToUploadDto"
              },
              "examples": {
                "ref": {
                  "description": "ref",
                  "value": "/home-api/assets/examples/v2/quotes/uploadFile.json#requestBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                },
                "examples": {
                  "ref": {
                    "description": "ref",
                    "value": "/home-api/assets/examples/v2/quotes/uploadFile.json#responseBody"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ColumnDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "LocalSettingsDTO": {
        "type": "object",
        "properties": {
          "maxRows": {
            "type": "integer",
            "format": "int32"
          },
          "maxLinesInRow": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OrderDTO": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "PermissionsDTO": {
        "type": "object",
        "properties": {
          "sharedGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "SettingsDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "local": {
            "$ref": "#/components/schemas/LocalSettingsDTO"
          }
        }
      },
      "ViewWithIdDTO": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnDTO"
            }
          },
          "viewId": {
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "$ref": "#/components/schemas/OrderDTO"
          },
          "settings": {
            "$ref": "#/components/schemas/SettingsDTO"
          },
          "permissions": {
            "$ref": "#/components/schemas/PermissionsDTO"
          }
        }
      },
      "ViewDTO": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/SettingsDTO"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnDTO"
            }
          },
          "order": {
            "$ref": "#/components/schemas/OrderDTO"
          },
          "permissions": {
            "$ref": "#/components/schemas/PermissionsDTO"
          }
        }
      },
      "AccessDTO": {
        "type": "object",
        "properties": {
          "change": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          }
        }
      },
      "ActionDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "header": {
            "type": "string"
          }
        }
      },
      "FilterDTO": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ViewDetailsDTO": {
        "type": "object",
        "properties": {
          "viewId": {
            "type": "integer",
            "format": "int64"
          },
          "access": {
            "$ref": "#/components/schemas/AccessDTO"
          },
          "view": {
            "$ref": "#/components/schemas/ViewDTO"
          },
          "filter": {
            "$ref": "#/components/schemas/FilterDTO"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionDTO"
            }
          }
        }
      },
      "LastModificationDTO": {
        "type": "object",
        "properties": {
          "modifier": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        }
      },
      "ViewBriefDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "current": {
            "type": "boolean"
          },
          "mine": {
            "type": "boolean"
          },
          "owner": {
            "type": "string"
          },
          "access": {
            "$ref": "#/components/schemas/AccessDTO"
          },
          "lastModification": {
            "$ref": "#/components/schemas/LastModificationDTO"
          }
        }
      },
      "ViewsBriefDTO": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViewBriefDTO"
            }
          },
          "access": {
            "$ref": "#/components/schemas/AccessDTO"
          }
        }
      },
      "FilterPropertyDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "settings": {
            "type": "object"
          },
          "settingsPresent": {
            "type": "boolean"
          }
        }
      },
      "CustomerInvoiceCreateResultDTO": {
        "type": "object",
        "properties": {
          "invoicesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "invoiceUrl": {
            "type": "string"
          }
        }
      },
      "CustomerInvoiceCreateDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "FINAL",
              "DRAFT",
              "CREDIT_NOTE"
            ]
          },
          "tasksIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "prepaymentsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "PaymentDTO": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "paymentDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "TimeDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UrlResultDTO": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "DownloadDocumentsRequestDTO": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ClassicPeopleDTO": {
        "type": "object",
        "properties": {
          "responsiblePersons": {
            "$ref": "#/components/schemas/ResponsiblePersonsDTO"
          },
          "customerContacts": {
            "$ref": "#/components/schemas/ContactsDTO"
          }
        },
        "description": "people"
      },
      "CommonLanguageCombinationDTO": {
        "type": "object",
        "properties": {
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "targetLanguageId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "language combination (ie. PL -> EN)"
      },
      "ContactsDTO": {
        "type": "object",
        "properties": {
          "primaryId": {
            "type": "integer",
            "format": "int64"
          },
          "sendBackToId": {
            "type": "integer",
            "format": "int64"
          },
          "additionalIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CustomFieldDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "DATE",
              "DATE_AND_TIME",
              "NUMBER",
              "CHECKBOX",
              "SELECTION",
              "MULTI_SELECTION"
            ]
          },
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "xml": {
          "name": "customField"
        }
      },
      "CustomFieldsDTO": {
        "type": "array",
        "properties": {
          "customFields": {
            "type": "array",
            "xml": {
              "name": "customField"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "customFields"
        },
        "items": {
          "$ref": "#/components/schemas/CustomFieldDTO"
        }
      },
      "CustomerDetailsDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "vatUE": {
            "type": "string"
          },
          "addressLine": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int64"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "CustomerInvoiceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "totalGross": {
            "type": "number"
          },
          "totalNetto": {
            "type": "number"
          },
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_READY",
              "READY",
              "SENT"
            ]
          },
          "invoiceNumber": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "FINAL",
              "DRAFT",
              "CREDIT_NOTE"
            ]
          },
          "tasksValue": {
            "type": "number"
          },
          "vatCalculationRule": {
            "type": "string",
            "enum": [
              "SUM_ITEMS",
              "BY_NET_TOTAL"
            ]
          },
          "totalInWords": {
            "type": "string"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentTerms": {
            "$ref": "#/components/schemas/PaymentTermsDTO"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "dates": {
            "$ref": "#/components/schemas/CustomerInvoiceDatesDTO"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDTO"
            }
          },
          "customerDetails": {
            "$ref": "#/components/schemas/CustomerDetailsDTO"
          }
        }
      },
      "CustomerInvoiceDatesDTO": {
        "type": "object",
        "properties": {
          "draftDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "finalDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "paymentDueDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "invoiceDate": {
            "$ref": "#/components/schemas/TimeDTO"
          }
        }
      },
      "InstructionsDTO": {
        "type": "object",
        "properties": {
          "fromCustomer": {
            "type": "string"
          },
          "forProvider": {
            "type": "string"
          },
          "internal": {
            "type": "string"
          },
          "paymentNoteForCustomer": {
            "type": "string"
          },
          "paymentNoteForVendor": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "PaymentTermsDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ProjectDatesDTO": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "deadline": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "actualStartDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "actualDeliveryDate": {
            "$ref": "#/components/schemas/TimeDTO"
          }
        }
      },
      "ResponsiblePersonsDTO": {
        "type": "object",
        "properties": {
          "projectManagerId": {
            "type": "integer",
            "format": "int64"
          },
          "projectCoordinatorId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TaskDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "idNumber": {
            "type": "string",
            "description": "identifier"
          },
          "projectId": {
            "type": "integer",
            "description": "project's internal identifier",
            "format": "int64"
          },
          "quoteId": {
            "type": "integer",
            "description": "quote's internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "name"
          },
          "clientTaskPONumber": {
            "type": "string",
            "description": "client task PO number"
          },
          "languageCombination": {
            "$ref": "#/components/schemas/CommonLanguageCombinationDTO"
          },
          "dates": {
            "$ref": "#/components/schemas/ProjectDatesDTO"
          },
          "people": {
            "$ref": "#/components/schemas/ClassicPeopleDTO"
          },
          "instructions": {
            "$ref": "#/components/schemas/InstructionsDTO"
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "finance": {
            "$ref": "#/components/schemas/TaskFinanceDTO"
          },
          "jobs": {
            "$ref": "#/components/schemas/TaskJobsDTO"
          }
        }
      },
      "TaskFinanceDTO": {
        "type": "object",
        "properties": {
          "invoiceable": {
            "type": "boolean",
            "description": "is this task invoiceable or not"
          }
        },
        "description": "finance"
      },
      "TaskJobsDTO": {
        "type": "object",
        "properties": {
          "jobCount": {
            "type": "integer",
            "format": "int32"
          },
          "jobIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "SendRemindersResponseDTO": {
        "type": "object",
        "properties": {
          "numberOfSentEmails": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SendRemindersRequestDTO": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CustomerPersonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/PersonContactDTO"
          },
          "positionId": {
            "type": "integer",
            "format": "int64"
          },
          "gender": {
            "type": "string",
            "enum": [
              "FEMALE",
              "MALE"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "motherTonguesIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "firstProjectDate": {
            "type": "string",
            "format": "date-time"
          },
          "firstQuoteDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastProjectDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastQuoteDate": {
            "type": "string",
            "format": "date-time"
          },
          "numberOfProjects": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfQuotes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "CustomerPerson"
      },
      "PersonContactDTO": {
        "type": "object",
        "properties": {
          "phones": {
            "type": "array",
            "description": "phones' numbers",
            "items": {
              "type": "string",
              "description": "phones' numbers"
            }
          },
          "sms": {
            "type": "string",
            "description": "mobile phone for which SMS notifications will be sent (if configured)"
          },
          "fax": {
            "type": "string",
            "description": "fax number"
          },
          "emails": {
            "$ref": "#/components/schemas/PersonContactEmailsDTO"
          }
        }
      },
      "PersonContactEmailsDTO": {
        "required": [
          "primary"
        ],
        "type": "object",
        "properties": {
          "primary": {
            "type": "string",
            "description": "primary e-mail"
          },
          "additional": {
            "type": "array",
            "description": "additional e-mails addresses",
            "items": {
              "type": "string",
              "description": "additional e-mails addresses"
            }
          }
        },
        "description": "emails"
      },
      "AccessTokenDTO": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "AccessTokenRequestDTO": {
        "type": "object",
        "properties": {
          "loginOrEmail": {
            "type": "string"
          }
        }
      },
      "AddressDTO": {
        "type": "object",
        "properties": {
          "sameAsBillingAddress": {
            "type": "boolean",
            "description": "should billing address be used instead of this one"
          },
          "addressLine1": {
            "type": "string",
            "description": "first line of address"
          },
          "addressLine2": {
            "type": "string",
            "description": "second line of address"
          },
          "city": {
            "type": "string",
            "description": "city"
          },
          "postalCode": {
            "type": "string",
            "description": "postal code"
          },
          "provinceId": {
            "type": "integer",
            "description": "province",
            "format": "int64"
          },
          "countryId": {
            "type": "integer",
            "description": "country",
            "format": "int64"
          }
        }
      },
      "CategoriesDTO": {
        "type": "array",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "items": {
          "type": "integer",
          "format": "int64"
        }
      },
      "ContactDTO": {
        "type": "object",
        "properties": {
          "phones": {
            "type": "array",
            "description": "phones' numbers",
            "items": {
              "type": "string",
              "description": "phones' numbers"
            }
          },
          "sms": {
            "type": "string",
            "description": "mobile phone for which SMS notifications will be sent (if configured)"
          },
          "fax": {
            "type": "string",
            "description": "fax number"
          },
          "emails": {
            "$ref": "#/components/schemas/CustomerContactEmailsDTO"
          },
          "websites": {
            "type": "array",
            "description": "websites",
            "items": {
              "type": "string",
              "description": "websites"
            }
          }
        }
      },
      "CustomerAccountingDTO": {
        "type": "object",
        "properties": {
          "taxNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerTaxNoDTO"
            }
          }
        }
      },
      "CustomerContactEmailsDTO": {
        "required": [
          "primary"
        ],
        "type": "object",
        "properties": {
          "primary": {
            "type": "string",
            "description": "primary e-mail"
          },
          "cc": {
            "type": "array",
            "description": "e-mails which will be included in the CC list",
            "items": {
              "type": "string",
              "description": "e-mails which will be included in the CC list"
            }
          },
          "additional": {
            "type": "array",
            "description": "additional e-mails addresses",
            "items": {
              "type": "string",
              "description": "additional e-mails addresses"
            }
          }
        },
        "description": "emails"
      },
      "CustomerDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "idNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "correspondenceAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "leadSourceId": {
            "type": "integer",
            "format": "int64"
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "POTENTIAL"
            ]
          },
          "responsiblePersons": {
            "$ref": "#/components/schemas/CustomerResponsiblePersonsDTO"
          },
          "accounting": {
            "$ref": "#/components/schemas/CustomerAccountingDTO"
          },
          "contractNumber": {
            "type": "string"
          },
          "salesNotes": {
            "type": "string"
          },
          "accountOnCustomerServer": {
            "type": "string"
          },
          "clientFirstProjectDate": {
            "type": "string",
            "format": "date-time"
          },
          "clientFirstQuoteDate": {
            "type": "string",
            "format": "date-time"
          },
          "clientLastProjectDate": {
            "type": "string",
            "format": "date-time"
          },
          "clientLastQuoteDate": {
            "type": "string",
            "format": "date-time"
          },
          "clientNumberOfProjects": {
            "type": "integer",
            "format": "int32"
          },
          "clientNumberOfQuotes": {
            "type": "integer",
            "format": "int32"
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerPersonDTO"
            }
          },
          "categoriesIds": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "industriesIds": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "limitAccessToPeopleResponsible": {
            "type": "boolean"
          }
        }
      },
      "CustomerResponsiblePersonsDTO": {
        "required": [
          "projectManagerId",
          "salesPersonId"
        ],
        "type": "object",
        "properties": {
          "projectManagerId": {
            "type": "integer",
            "description": "project manager",
            "format": "int64"
          },
          "salesPersonId": {
            "type": "integer",
            "description": "sales person",
            "format": "int64"
          },
          "accountManagerId": {
            "type": "integer",
            "description": "account manager",
            "format": "int64"
          },
          "projectCoordinatorId": {
            "type": "integer",
            "description": "project coordinator",
            "format": "int64"
          }
        }
      },
      "CustomerTaxNoDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "tax number"
          },
          "type": {
            "type": "string",
            "description": "type (ie. NIP, VAT Reg No, P.IVA) or empty value if unknown"
          }
        }
      },
      "IndustriesDTO": {
        "type": "array",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "items": {
          "type": "integer",
          "format": "int64"
        }
      },
      "EntityWithNameDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "BodyPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ContentDisposition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fileName": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "readDate": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FormDataBodyPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "formDataContentDisposition": {
            "$ref": "#/components/schemas/FormDataContentDisposition"
          },
          "simple": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "FormDataContentDisposition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fileName": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "readDate": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "FormDataMultiPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "bodyParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            }
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FormDataBodyPart"
              }
            }
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "MessageBodyWorkers": {
        "type": "object"
      },
      "MultiPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "bodyParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            }
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ParameterizedHeader": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "FileToUploadDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "GetLicenseResult": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Parameter"
            }
          }
        }
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ActionStartedDTO": {
        "type": "object",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "statusUrl": {
            "type": "string"
          },
          "resultUrl": {
            "type": "string"
          }
        }
      },
      "MacroRequestDTO": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "description": "list of internal identifiers of elements to be processed by the macro, can be empty for certain macros",
            "items": {
              "type": "integer",
              "description": "list of internal identifiers of elements to be processed by the macro, can be empty for certain macros",
              "format": "int64"
            }
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "map of custom key-value pairs that can optionally parametrize the macro execution"
            },
            "description": "map of custom key-value pairs that can optionally parametrize the macro execution"
          },
          "async": {
            "type": "boolean",
            "description": "indicates whether the macro should be executed asynchronously or synchronously (default: false)"
          }
        }
      },
      "SensitiveClientDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "IsClientSensitiveDto": {
        "type": "object",
        "properties": {
          "sensitive": {
            "type": "boolean"
          }
        }
      },
      "TrustedVendorDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "ProjectGroupBudgetDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "usagePercentageValue": {
            "type": "string"
          }
        }
      },
      "ProjectGroupCurrencyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "isoCode": {
            "type": "string"
          }
        }
      },
      "ProjectGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "groupName": {
            "type": "string"
          },
          "groupNumber": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "opened",
              "closed"
            ]
          },
          "notes": {
            "type": "string"
          },
          "customersIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "linkedProjectsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "linkedSmartProjectsIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linkedQuotesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "linkedSmartQuotesIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categoriesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "finances": {
            "$ref": "#/components/schemas/ProjectGroupFinancesDto"
          }
        }
      },
      "ProjectGroupFinancesDto": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/ProjectGroupCurrencyDto"
          },
          "budget": {
            "$ref": "#/components/schemas/ProjectGroupBudgetDto"
          },
          "totalPayables": {
            "type": "number"
          },
          "totalReceivables": {
            "type": "number"
          },
          "profit": {
            "type": "number"
          },
          "margin": {
            "type": "string"
          },
          "ROI": {
            "type": "string"
          }
        }
      },
      "CreateProjectGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "customerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "LinkProjectsDto": {
        "type": "object",
        "properties": {
          "projectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "smartProjectIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LinkQuotesDto": {
        "type": "object",
        "properties": {
          "quoteIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "smartQuoteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateProjectGroupDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "budgetValue": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "opened",
              "closed"
            ]
          },
          "notes": {
            "type": "string"
          },
          "categoriesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "customersIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ProviderInvoiceCreateResultDTO": {
        "type": "object",
        "properties": {
          "invoicesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "invoiceUrl": {
            "type": "string"
          }
        }
      },
      "ProviderInvoiceCreateDTO": {
        "type": "object",
        "properties": {
          "jobsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ProviderInvoiceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "totalGross": {
            "type": "number"
          },
          "totalNetto": {
            "type": "number"
          },
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "POSTPONED",
              "TO_BE_SENT",
              "SENT",
              "CONFIRMED",
              "BILL_CREATED"
            ]
          },
          "finalNumber": {
            "type": "string"
          },
          "draftNumber": {
            "type": "string"
          },
          "internalNumber": {
            "type": "string"
          },
          "providerId": {
            "type": "integer",
            "format": "int64"
          },
          "totalGrossInWords": {
            "type": "string"
          },
          "jobsNetValue": {
            "type": "number"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "NOT_PAID",
              "FULLY_PAID",
              "IRRECOVERABLE",
              "PARTIALLY_PAID"
            ]
          },
          "dates": {
            "$ref": "#/components/schemas/ProviderInvoiceDatesDTO"
          },
          "notesFromProvider": {
            "type": "string"
          }
        }
      },
      "ProviderInvoiceDatesDTO": {
        "type": "object",
        "properties": {
          "draftDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "finalDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "paymentDueDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "invoiceUploadedDate": {
            "$ref": "#/components/schemas/TimeDTO"
          }
        }
      },
      "StatusRequestDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "POSTPONED",
              "TO_BE_SENT",
              "SENT",
              "CONFIRMED",
              "BILL_CREATED"
            ]
          }
        }
      },
      "ProviderPersonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/PersonContactDTO"
          },
          "positionId": {
            "type": "integer",
            "format": "int64"
          },
          "gender": {
            "type": "string",
            "enum": [
              "FEMALE",
              "MALE"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "motherTonguesIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "providerId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InvitationStatisticsDTO": {
        "type": "object",
        "properties": {
          "providersWithInvitedPersonCount": {
            "type": "integer",
            "format": "int32"
          },
          "providersWithAlreadyRegisteredPersonCount": {
            "type": "integer",
            "format": "int32"
          },
          "providersWithoutPersonCount": {
            "type": "integer",
            "format": "int32"
          },
          "invitedPersonsCount": {
            "type": "integer",
            "format": "int32"
          },
          "alreadyRegisteredPersonsCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CompetenciesDTO": {
        "type": "object",
        "properties": {
          "languageCombinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonLanguageCombinationDTO"
            }
          }
        }
      },
      "ProviderDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "idNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "correspondenceAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "leadSourceId": {
            "type": "integer",
            "format": "int64"
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "WAITING_FOR_APPROVAL",
              "REJECTED",
              "TOO_EXPENSIVE",
              "INCOMPLETE_DATA",
              "POTENTIAL",
              "NOT_CONFIRMED"
            ]
          },
          "competencies": {
            "$ref": "#/components/schemas/CompetenciesDTO"
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderPersonDTO"
            }
          }
        }
      },
      "ReportResultDTO": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "ExportRequestDTO": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ImportResultDTO": {
        "type": "object",
        "properties": {
          "currentSystemVersion": {
            "type": "string"
          },
          "targetSystemVersion": {
            "type": "string"
          },
          "invalidReportsNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "importedReportsNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ImportRequestDTO": {
        "type": "object",
        "properties": {
          "fileToken": {
            "type": "string"
          }
        }
      },
      "PreferredRequestDTO": {
        "type": "object",
        "properties": {
          "preferred": {
            "type": "boolean"
          }
        }
      },
      "ServiceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "classic": {
            "type": "boolean",
            "description": "should this value be a classic service"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        }
      },
      "ActiveSubscriptionDTO": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "url that will be invoked by XTRF on event"
          },
          "event": {
            "type": "string",
            "description": "event to which you want to subscribe"
          },
          "filter": {
            "type": "string",
            "description": "filter expression in the form 'attribute=value'"
          },
          "embed": {
            "type": "string",
            "description": "additional fields which should be embedded in the event"
          },
          "subscriptionId": {
            "type": "string",
            "description": "subscription identifier"
          }
        }
      },
      "SubscriptionDTO": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "url that will be invoked by XTRF on event"
          },
          "event": {
            "type": "string",
            "description": "event to which you want to subscribe"
          },
          "filter": {
            "type": "string",
            "description": "filter expression in the form 'attribute=value'"
          },
          "embed": {
            "type": "string",
            "description": "additional fields which should be embedded in the event"
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userGroupName": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "timeZoneId": {
            "type": "string"
          },
          "positionName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          }
        }
      },
      "TimeZoneDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CalculationUnitDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "symbol": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "TIME",
              "VOLUME",
              "PERCENT"
            ]
          },
          "exchangeRatio": {
            "type": "number"
          },
          "canBeUsedInCatAnalysis": {
            "type": "boolean"
          },
          "catQuantityConversionExpression": {
            "type": "string"
          },
          "fileStatsConversionExpression": {
            "type": "string"
          },
          "timeToQuantityConversionExpression": {
            "type": "string"
          },
          "jobTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        }
      },
      "CategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "supportedClasses": {
            "uniqueItems": true,
            "type": "array",
            "description": "set of types for which this category can be selected",
            "items": {
              "type": "string",
              "description": "set of types for which this category can be selected",
              "enum": [
                "PROJECT",
                "QUOTE",
                "QUOTE_TASK",
                "TASK",
                "PROVIDER",
                "CUSTOMER",
                "CUSTOMER_PERSON",
                "PROVIDER_PERSON",
                "FINANCIAL_REPORT",
                "REMINDER",
                "PROVIDER_INVOICE",
                "CUSTOMER_INVOICE",
                "PROJECT_GROUP"
              ]
            }
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "group of things (ie. customers or projects) similar in some way (ie. VIP customers)"
      },
      "CountryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "symbol": {
            "type": "string",
            "description": "specific symbol or abbreviation"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "distinct entity in political geography (ie. Poland)"
      },
      "CurrencyDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "symbol": {
            "type": "string",
            "description": "specific symbol or abbreviation"
          },
          "isoCode": {
            "type": "string",
            "description": "<a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217 code</a>"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "medium of money exchange (ie. euro or dollar)"
      },
      "IndustryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "industry related with translation (ie. biotechnology)"
      },
      "JobTypeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "filesNeeded": {
            "type": "boolean"
          },
          "providedByClient": {
            "type": "boolean"
          },
          "relationToLanguage": {
            "type": "string",
            "enum": [
              "LANGUAGE_COMBINATION_RELATED",
              "SOURCE_LANGUAGE_RELATED_ONLY",
              "TARGET_LANGUAGE_RELATED_ONLY",
              "LANGUAGE_INDEPENDENT"
            ]
          },
          "calculationUnitIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "vendorProductivity": {
            "type": "number"
          },
          "vendorProductivityCalculationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        }
      },
      "LanguageDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "symbol": {
            "type": "string",
            "description": "specific symbol or abbreviation"
          },
          "iso6391": {
            "type": "string",
            "description": "<a href=\"http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">ISO 639-1 code</a>"
          },
          "iso6392": {
            "type": "string",
            "description": "<a href=\"http://en.wikipedia.org/wiki/List_of_ISO_639-2_codes\">ISO 639-2 code</a>"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "language (ie. Polish)"
      },
      "LanguageSpecializationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "language specialization (ie. railways)"
      },
      "LeadSourceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "availableForProvider": {
            "type": "boolean",
            "description": "should be available for provider"
          },
          "availableForCustomer": {
            "type": "boolean",
            "description": "should be available for customer"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "origin of a customer (ie. recomendation from another customer)"
      },
      "ManyValuesPerTypeDTO": {
        "type": "object",
        "properties": {
          "calculationUnit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculationUnitDTO"
            }
          },
          "category": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDTO"
            }
          },
          "country": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryDTO"
            }
          },
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyDTO"
            }
          },
          "industry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndustryDTO"
            }
          },
          "jobType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTypeDTO"
            }
          },
          "language": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageDTO"
            }
          },
          "leadSource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadSourceDTO"
            }
          },
          "personDepartment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDepartmentDTO"
            }
          },
          "personPosition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPositionDTO"
            }
          },
          "province": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvinceDTO"
            }
          },
          "specialization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageSpecializationDTO"
            }
          }
        }
      },
      "PersonDepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "person's department (ie. human resources)"
      },
      "PersonPositionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "person's position (ie. proofreader)"
      },
      "ProvinceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "internal identifier",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "localised name (formatted in the current user's locale)"
          },
          "active": {
            "type": "boolean",
            "description": "should this value be available on the XTRF selection lists"
          },
          "preferred": {
            "type": "boolean",
            "description": "should this value be available on the top of XTRF selection lists, in the Preferred section"
          },
          "countryId": {
            "type": "integer",
            "description": "country's identifier",
            "format": "int64"
          },
          "default": {
            "type": "boolean",
            "description": "should this value be set by default in XTRF selection lists"
          }
        },
        "description": "territorial unit within a country (ie. Nebraska)"
      },
      "DictionaryEntity": {
        "required": [
          "name",
          "preferedEntity"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "auditPath": {
            "type": "string"
          },
          "classSimpleName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "preferedEntity": {
            "type": "boolean"
          },
          "defaultEntity": {
            "type": "boolean"
          },
          "preferred": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string"
          },
          "packedCompoundId": {
            "type": "string"
          },
          "compoundId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "auditDisplayName": {
            "type": "string"
          },
          "classNameKey": {
            "type": "string"
          },
          "entityMarkedAsNotSupposedToBePersisted": {
            "type": "boolean"
          },
          "internalDescription": {
            "type": "string"
          },
          "andClearEventsQueue": {
            "$ref": "#/components/schemas/EventsQueue"
          },
          "eventsQueueReadyToBeDispatched": {
            "type": "boolean"
          },
          "identifier": {
            "$ref": "#/components/schemas/Identifier"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "raiseTime": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          }
        }
      },
      "EventsQueue": {
        "type": "object",
        "properties": {
          "readyToBeDispatched": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          },
          "all": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "Identifier": {
        "type": "object",
        "properties": {
          "compoundId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CurrencyHistoryDTO": {
        "type": "object",
        "properties": {
          "exchangeRate": {
            "type": "string"
          },
          "dateFrom": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "originDetails": {
            "type": "string"
          },
          "publicationDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "lastModification": {
            "$ref": "#/components/schemas/TimeDTO"
          }
        }
      },
      "TaskFileDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "description": "file category",
            "enum": [
              "WORKFILE",
              "TM",
              "DICTIONARY",
              "REF",
              "LOG_FILE"
            ]
          }
        },
        "description": "describes files; remember that either url, content or token should be filled"
      },
      "AssignVendorDTO": {
        "type": "object",
        "properties": {
          "vendorPriceProfileId": {
            "type": "integer",
            "format": "int64"
          },
          "recalculateRates": {
            "type": "boolean"
          }
        }
      },
      "JobStatusDTO": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "FileDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedOn": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JobDatesDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "integer",
            "format": "int64"
          },
          "deadline": {
            "type": "integer",
            "format": "int64"
          },
          "actualStartDate": {
            "type": "integer",
            "format": "int64"
          },
          "actualEndDate": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JobDocumentsDto": {
        "type": "object",
        "properties": {
          "purchaseOrderStatus": {
            "type": "string"
          }
        }
      },
      "JobDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "stepNumber": {
            "type": "integer",
            "format": "int32"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "vendorPriceProfileId": {
            "type": "integer",
            "format": "int64"
          },
          "stepType": {
            "$ref": "#/components/schemas/StepTypeDto"
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobLanguageCombinationDto"
            }
          },
          "dates": {
            "$ref": "#/components/schemas/JobDatesDto"
          },
          "files": {
            "$ref": "#/components/schemas/JobFilesDto"
          },
          "communication": {
            "$ref": "#/components/schemas/JobCommunicationDto"
          },
          "documents": {
            "$ref": "#/components/schemas/JobDocumentsDto"
          }
        }
      },
      "JobFilesDTO": {
        "type": "object",
        "properties": {
          "inputFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          },
          "outputFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          }
        }
      },
      "LanguageCombinationDto": {
        "type": "object",
        "properties": {
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "targetLanguageId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StepTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "jobTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "semantics": {
            "$ref": "#/components/schemas/StepTypeSemanticsDto"
          }
        }
      },
      "FileMetadataDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "categoryKey": {
            "type": "string"
          }
        }
      },
      "ChargeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "languageCombination": {
            "$ref": "#/components/schemas/ChargeLanguageCombinationDTO"
          },
          "languageCombinationIdNumber": {
            "type": "string"
          },
          "rateOrigin": {
            "type": "string",
            "enum": [
              "PRICE_PROFILE",
              "PRICE_LIST",
              "FILLED_MANUALLY",
              "AUTOCALCULATED"
            ]
          },
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "number"
          },
          "invoiceId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIMPLE",
              "CAT"
            ]
          },
          "calculationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "ignoreMinimumCharge": {
            "type": "boolean"
          },
          "minimumCharge": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ChargeLanguageCombinationDTO": {
        "type": "object",
        "properties": {
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "targetLanguageId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FinanceDTO": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "totalAgreed": {
            "type": "number"
          },
          "totalCost": {
            "type": "number"
          },
          "profit": {
            "type": "number"
          },
          "margin": {
            "type": "number"
          },
          "receivables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargeDTO"
            }
          },
          "payables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargeDTO"
            }
          },
          "ROI": {
            "type": "number"
          }
        }
      },
      "ProjectDTOv1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "string"
          },
          "isClassicProject": {
            "type": "boolean"
          },
          "idNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "categoriesIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "contactPersonId": {
            "type": "integer",
            "format": "int64"
          },
          "finance": {
            "$ref": "#/components/schemas/FinanceDTO"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDTO"
            }
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "instructions": {
            "$ref": "#/components/schemas/InstructionsDTO"
          },
          "projectManagerId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "REQUESTED_PROJECT",
              "OPENED",
              "CLOSED",
              "CANCELLED",
              "CLAIM"
            ]
          },
          "specializationId": {
            "type": "integer",
            "format": "int64"
          },
          "dates": {
            "$ref": "#/components/schemas/ProjectDatesDTO"
          },
          "contacts": {
            "$ref": "#/components/schemas/ContactsDTO"
          }
        }
      },
      "ClassicProjectCreateDTO": {
        "required": [
          "customerId",
          "serviceId",
          "specializationId"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64"
          },
          "specializationId": {
            "type": "integer",
            "format": "int64"
          },
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "targetLanguagesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "name": {
            "type": "string"
          },
          "categoriesIds": {
            "type": "array",
            "description": "list of language categories",
            "items": {
              "type": "integer",
              "description": "list of language categories",
              "format": "int64"
            }
          },
          "inputFiles": {
            "type": "array",
            "description": "input files",
            "items": {
              "$ref": "#/components/schemas/TaskFileDTO"
            }
          },
          "dates": {
            "$ref": "#/components/schemas/ProjectDatesDTO"
          },
          "instructions": {
            "$ref": "#/components/schemas/InstructionsDTO"
          },
          "people": {
            "$ref": "#/components/schemas/ClassicPeopleDTO"
          }
        }
      },
      "PayableDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "languageCombination": {
            "$ref": "#/components/schemas/ChargeLanguageCombinationDTO"
          },
          "languageCombinationIdNumber": {
            "type": "string"
          },
          "rateOrigin": {
            "type": "string",
            "enum": [
              "PRICE_PROFILE",
              "PRICE_LIST",
              "FILLED_MANUALLY",
              "AUTOCALCULATED"
            ]
          },
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "number"
          },
          "invoiceId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIMPLE",
              "CAT"
            ]
          },
          "calculationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "ignoreMinimumCharge": {
            "type": "boolean"
          },
          "minimumCharge": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "jobId": {
            "type": "object"
          }
        }
      },
      "FileToAddDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "PayableCreateDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "languageCombination": {
            "$ref": "#/components/schemas/ChargeLanguageCombinationDTO"
          },
          "languageCombinationIdNumber": {
            "type": "string"
          },
          "rateOrigin": {
            "type": "string",
            "enum": [
              "PRICE_PROFILE",
              "PRICE_LIST",
              "FILLED_MANUALLY",
              "AUTOCALCULATED"
            ]
          },
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "number"
          },
          "invoiceId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIMPLE",
              "CAT"
            ]
          },
          "calculationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "ignoreMinimumCharge": {
            "type": "boolean"
          },
          "minimumCharge": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "jobId": {
            "type": "object"
          },
          "catLogFile": {
            "$ref": "#/components/schemas/FileToAddDTO"
          }
        }
      },
      "ReceivableDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "languageCombination": {
            "$ref": "#/components/schemas/ChargeLanguageCombinationDTO"
          },
          "languageCombinationIdNumber": {
            "type": "string"
          },
          "rateOrigin": {
            "type": "string",
            "enum": [
              "PRICE_PROFILE",
              "PRICE_LIST",
              "FILLED_MANUALLY",
              "AUTOCALCULATED"
            ]
          },
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "number"
          },
          "invoiceId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIMPLE",
              "CAT"
            ]
          },
          "calculationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "ignoreMinimumCharge": {
            "type": "boolean"
          },
          "minimumCharge": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "taskId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ReceivableCreateDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "languageCombination": {
            "$ref": "#/components/schemas/ChargeLanguageCombinationDTO"
          },
          "languageCombinationIdNumber": {
            "type": "string"
          },
          "rateOrigin": {
            "type": "string",
            "enum": [
              "PRICE_PROFILE",
              "PRICE_LIST",
              "FILLED_MANUALLY",
              "AUTOCALCULATED"
            ]
          },
          "currencyId": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "number"
          },
          "invoiceId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIMPLE",
              "CAT"
            ]
          },
          "calculationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "ignoreMinimumCharge": {
            "type": "boolean"
          },
          "minimumCharge": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "taskId": {
            "type": "integer",
            "format": "int64"
          },
          "catLogFile": {
            "$ref": "#/components/schemas/FileToAddDTO"
          }
        }
      },
      "TaskCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name"
          },
          "clientTaskPONumber": {
            "type": "string",
            "description": "client task PO number"
          },
          "languageCombination": {
            "$ref": "#/components/schemas/CommonLanguageCombinationDTO"
          },
          "dates": {
            "$ref": "#/components/schemas/ProjectDatesDTO"
          },
          "people": {
            "$ref": "#/components/schemas/ClassicPeopleDTO"
          },
          "instructions": {
            "$ref": "#/components/schemas/InstructionsDTO"
          },
          "specializationId": {
            "type": "integer",
            "description": "specialization",
            "format": "int64"
          },
          "workflowId": {
            "type": "integer",
            "description": "workflow",
            "format": "int64"
          },
          "files": {
            "type": "array",
            "description": "files",
            "items": {
              "$ref": "#/components/schemas/TaskFileDTO"
            }
          }
        }
      },
      "QuoteDTOv1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "quoteId": {
            "type": "string"
          },
          "isClassicQuote": {
            "type": "boolean"
          },
          "idNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "categoriesIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "contactPersonId": {
            "type": "integer",
            "format": "int64"
          },
          "finance": {
            "$ref": "#/components/schemas/FinanceDTO"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDTO"
            }
          },
          "customFields": {
            "type": "array",
            "properties": {
              "customFields": {
                "type": "array",
                "xml": {
                  "name": "customField"
                },
                "items": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "xml": {
              "name": "customFields"
            },
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            }
          },
          "instructions": {
            "$ref": "#/components/schemas/InstructionsDTO"
          },
          "salesPersonId": {
            "type": "integer",
            "format": "int64"
          },
          "automaticallyAcceptSentQuote": {
            "type": "boolean"
          },
          "dates": {
            "$ref": "#/components/schemas/QuoteDatesDTO"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "QuoteDatesDTO": {
        "type": "object",
        "properties": {
          "createdOn": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "offerExpiry": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "startDate": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "deadline": {
            "$ref": "#/components/schemas/TimeDTO"
          }
        }
      },
      "TaskProgressDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "phase": {
            "type": "string"
          }
        }
      },
      "InputFilesDTO": {
        "type": "object",
        "properties": {
          "workFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          },
          "tm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          },
          "terminology": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          },
          "referenceFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          },
          "logFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          }
        }
      },
      "JobDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "idNumber": {
            "type": "string"
          },
          "files": {
            "$ref": "#/components/schemas/JobFilesDTO"
          }
        }
      },
      "TaskFilesDTO": {
        "type": "object",
        "properties": {
          "inputFiles": {
            "$ref": "#/components/schemas/InputFilesDTO"
          },
          "outputFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDTO"
            }
          },
          "bundles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FileDTO"
              }
            }
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobDTO"
            }
          }
        }
      },
      "StringDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "ExternalFileDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "languageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "languageCombinationIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageCombinationDto"
            }
          },
          "url": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "externalInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "FilesDto": {
        "type": "object",
        "properties": {
          "files": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FileLinkCategorizationDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "languageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "languageCombinationIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageCombinationDto"
            }
          },
          "url": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "externalInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "toBeGenerated": {
            "type": "boolean"
          }
        }
      },
      "FileLinkCategorizationsDto": {
        "type": "object",
        "properties": {
          "fileLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileLinkCategorizationDto"
            }
          }
        }
      },
      "FileCategorizationDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "languageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "languageCombinationIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageCombinationDto"
            }
          },
          "fileId": {
            "type": "string"
          }
        }
      },
      "FileCategorizationsDto": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileCategorizationDto"
            }
          },
          "duplicateFileAction": {
            "type": "string"
          }
        }
      },
      "VendorPriceProfileDTO": {
        "type": "object",
        "properties": {
          "vendorPriceProfileId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LanguageRelationDto": {
        "type": "object",
        "properties": {
          "languages": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "languageCombinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageCombinationDto"
            }
          }
        }
      },
      "ProjectFileAddedByDto": {
        "type": "object",
        "properties": {
          "userType": {
            "type": "string"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProjectFileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "categoryKey": {
            "type": "string"
          },
          "languageRelation": {
            "$ref": "#/components/schemas/LanguageRelationDto"
          },
          "addedBy": {
            "$ref": "#/components/schemas/ProjectFileAddedByDto"
          },
          "addedInStep": {
            "type": "integer",
            "format": "int64"
          },
          "addedInJob": {
            "type": "string"
          },
          "addedInLastStep": {
            "type": "boolean"
          },
          "sharedWithJobs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remoteCATToolReferences": {
            "$ref": "#/components/schemas/RemoteCATToolReferencesDto"
          },
          "url": {
            "type": "string"
          },
          "sentStatus": {
            "$ref": "#/components/schemas/ProjectFileSentStatusDto"
          },
          "isLink": {
            "type": "boolean"
          },
          "isAccepted": {
            "type": "boolean"
          },
          "isRemote": {
            "type": "boolean"
          }
        }
      },
      "ProjectFileSentByDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProjectFileSentStatusDto": {
        "type": "object",
        "properties": {
          "firstSentToClientBy": {
            "$ref": "#/components/schemas/ProjectFileSentByDto"
          },
          "firstSentToClientOn": {
            "type": "integer",
            "format": "int64"
          },
          "lastSentToClientBy": {
            "$ref": "#/components/schemas/ProjectFileSentByDto"
          },
          "lastSentToClientOn": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RemoteCATToolReferencesDto": {
        "type": "object",
        "properties": {
          "catToolDocumentId": {
            "type": "string"
          },
          "catResourceId": {
            "type": "string"
          },
          "editorUrl": {
            "type": "string"
          }
        }
      },
      "JobCommunicationDto": {
        "type": "object",
        "properties": {
          "instructionsForAllJobs": {
            "type": "string"
          },
          "instructionsForJob": {
            "type": "string"
          },
          "noteFromVendor": {
            "type": "string"
          }
        }
      },
      "JobFilesDto": {
        "type": "object",
        "properties": {
          "sharedWorkFiles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sharedReferenceFiles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deliveredInJobFiles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JobLanguageCombinationDto": {
        "type": "object",
        "properties": {
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "targetLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "specializationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StepTypeSemanticsDto": {
        "type": "object",
        "properties": {
          "canVerifyFiles": {
            "type": "boolean"
          },
          "isScripted": {
            "type": "boolean"
          }
        }
      },
      "FileShareStatusDto": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string"
          },
          "successful": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "FilesShareStatusDto": {
        "type": "object",
        "properties": {
          "statuses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileShareStatusDto"
            }
          }
        }
      },
      "FileDto": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string"
          }
        }
      },
      "ExternalFilesDto": {
        "type": "object",
        "properties": {
          "externalFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalFileDto"
            }
          }
        }
      },
      "AddExternalInfoToProjectDTO": {
        "type": "object",
        "properties": {
          "externalInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalJobInfo"
            }
          }
        }
      },
      "ExternalJobInfo": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "targetLang": {
            "type": "integer",
            "format": "int64"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepDto"
          },
          "xtrfFileId": {
            "type": "string"
          },
          "externalFilename": {
            "type": "string"
          }
        }
      },
      "WorkflowStepDto": {
        "type": "object",
        "properties": {
          "typeUid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddJobToProcessDTO": {
        "type": "object",
        "properties": {
          "previousStepNumber": {
            "type": "integer",
            "format": "int32"
          },
          "stepTypeId": {
            "type": "string"
          },
          "externalProjectId": {
            "type": "string"
          },
          "externalInfo": {
            "$ref": "#/components/schemas/ExternalInfo"
          }
        }
      },
      "ExternalInfo": {
        "type": "object",
        "properties": {
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "TargetFileDto": {
        "type": "object",
        "properties": {
          "externalProjectId": {
            "type": "string"
          },
          "externalJobId": {
            "type": "string"
          },
          "fileId": {
            "type": "string"
          }
        }
      },
      "FilesArchiveDto": {
        "type": "object",
        "properties": {
          "archiveUrl": {
            "type": "string"
          }
        }
      },
      "ProjectStatusDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "DocumentsDTO": {
        "type": "object",
        "properties": {
          "projectConfirmationStatus": {
            "type": "string"
          }
        }
      },
      "LanguageCombinationDTO": {
        "type": "object",
        "properties": {
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "targetLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "specializationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PeopleDTO": {
        "type": "object",
        "properties": {
          "projectManagerId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProjectCatToolDetailsDTOv2": {
        "type": "object",
        "properties": {
          "catToolProjectId": {
            "type": "string"
          },
          "catToolInternalId": {
            "type": "integer",
            "format": "int64"
          },
          "catToolProjectTemplateName": {
            "type": "string"
          },
          "catToolProjectTemplateId": {
            "type": "string"
          }
        }
      },
      "ProjectDTOv2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "isClassicProject": {
            "type": "boolean"
          },
          "quoteIdNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "budgetCode": {
            "type": "string"
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64"
          },
          "origin": {
            "type": "string"
          },
          "clientDeadline": {
            "type": "integer",
            "format": "int64"
          },
          "clientReferenceNumber": {
            "type": "string"
          },
          "clientNotes": {
            "type": "string"
          },
          "internalNotes": {
            "type": "string"
          },
          "volume": {
            "$ref": "#/components/schemas/VolumeDTO"
          },
          "languages": {
            "$ref": "#/components/schemas/ProjectLanguagesDTO"
          },
          "documents": {
            "$ref": "#/components/schemas/DocumentsDTO"
          },
          "people": {
            "$ref": "#/components/schemas/PeopleDTO"
          },
          "instructionsForAllJobs": {
            "type": "string"
          },
          "catToolDetails": {
            "$ref": "#/components/schemas/ProjectCatToolDetailsDTOv2"
          },
          "projectIdNumber": {
            "type": "string"
          },
          "orderedOn": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProjectLanguagesDTO": {
        "type": "object",
        "properties": {
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          },
          "targetLanguageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "specializationId": {
            "type": "integer",
            "format": "int64"
          },
          "languageCombinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageCombinationDTO"
            }
          }
        }
      },
      "VolumeDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "unitId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProjectCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CATToolProjectDTO": {
        "type": "object",
        "properties": {
          "projectCreatedInCatToolOrCreationIsQueued": {
            "type": "boolean"
          }
        }
      },
      "CatToolProjectTemplateInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "CatToolProjectTemplateInfoDTO": {
        "type": "object",
        "properties": {
          "catToolProjectTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatToolProjectTemplateInfo"
            }
          },
          "catToolType": {
            "type": "string",
            "enum": [
              "MemoQ",
              "XTM"
            ]
          },
          "catToolInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "catToolInstanceName": {
            "type": "string"
          }
        }
      },
      "SmartContactsDTO": {
        "type": "object",
        "properties": {
          "primaryId": {
            "type": "integer",
            "format": "int64"
          },
          "additionalIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CatToolProjectTemplateDetailsDTO": {
        "type": "object",
        "properties": {
          "catToolProjectTemplateId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SmartCustomFieldDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object"
          }
        }
      },
      "ProcessTemplateTypeDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SourceLanguageDTO": {
        "type": "object",
        "properties": {
          "sourceLanguageId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SpecializationDTO": {
        "type": "object",
        "properties": {
          "specializationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TargetLanguagesDTO": {
        "type": "object",
        "properties": {
          "targetLanguageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "BigDecimalDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          }
        }
      },
      "QuoteDTOv2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "quoteId": {
            "type": "string"
          },
          "isClassicQuote": {
            "type": "boolean"
          },
          "quoteIdNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "budgetCode": {
            "type": "string"
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64"
          },
          "origin": {
            "type": "string"
          },
          "clientDeadline": {
            "type": "integer",
            "format": "int64"
          },
          "clientReferenceNumber": {
            "type": "string"
          },
          "clientNotes": {
            "type": "string"
          },
          "internalNotes": {
            "type": "string"
          },
          "volume": {
            "$ref": "#/components/schemas/VolumeDTO"
          },
          "languages": {
            "$ref": "#/components/schemas/ProjectLanguagesDTO"
          },
          "documents": {
            "$ref": "#/components/schemas/DocumentsDTO"
          },
          "people": {
            "$ref": "#/components/schemas/PeopleDTO"
          },
          "instructionsForAllJobs": {
            "type": "string"
          },
          "catToolDetails": {
            "$ref": "#/components/schemas/ProjectCatToolDetailsDTOv2"
          },
          "createdOn": {
            "type": "integer",
            "format": "int64"
          },
          "quoteExpiry": {
            "type": "integer",
            "format": "int64"
          },
          "expectedDeliveryDate": {
            "type": "integer",
            "format": "int64"
          },
          "businessDays": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QuoteCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64"
          },
          "opportunityOfferId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LongDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "securitySchemes": {
      "X-AUTH-ACCESS-TOKEN": {
        "type": "apiKey",
        "name": "X-AUTH-ACCESS-TOKEN",
        "in": "header"
      }
    }
  }
}