{
  "openapi": "3.0.1",
  "info": {
    "title": "TokenJay API services",
    "description": "Please see usage policies on tokenjay.app",
    "termsOfService": "https://tokenjay.app/apidoc.html",
    "x-jentic-source-url": "https://api.tokenjay.app/api-docs"
  },
  "servers": [
    {
      "url": "https://api.tokenjay.app/"
    }
  ],
  "tags": [
    {
      "name": "tokenVerification",
      "description": "Ergo Platform Genuine Tokens Verification",
      "externalDocs": {
        "description": "EIP-21",
        "url": "https://github.com/ergoplatform/eips/blob/master/eip-0021.md"
      }
    },
    {
      "name": "peerDetection",
      "description": "Detecting nodes to use for submitting transactions"
    },
    {
      "name": "paymentPortal",
      "description": "ErgoPay payment portal"
    }
  ],
  "paths": {
    "/payment/addrequest": {
      "post": {
        "tags": [
          "paymentPortal"
        ],
        "summary": "Creates a new payment request. Will return request id to check for transaction state and ergopay url to show the user as QR code",
        "operationId": "addPaymentRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AddRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/tokenburn/prepare": {
      "post": {
        "tags": [
          "token-burn-controller"
        ],
        "operationId": "prepareTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FetchActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/babelfee/newoffer/new-input": {
      "post": {
        "tags": [
          "babel-fee-new-offer-controller"
        ],
        "operationId": "replaceTokenAmountInputFields",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FetchActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/babelfee/newoffer/doit": {
      "post": {
        "tags": [
          "babel-fee-new-offer-controller"
        ],
        "operationId": "doCreateBabelBox",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FetchActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/prices/{tokenId}": {
      "get": {
        "tags": [
          "tokenPrices"
        ],
        "summary": "Lists price and available volume for a certain token",
        "operationId": "getTokenPrice",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPrice"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/prices/all": {
      "get": {
        "tags": [
          "tokenPrices"
        ],
        "summary": "Lists all token prices and available volume",
        "operationId": "getTokenPrices",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenPrice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens/listGenuine": {
      "get": {
        "tags": [
          "tokenVerification"
        ],
        "summary": "Lists all genuine tokens known",
        "operationId": "listGenuine",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenuineToken"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens/listBlocked": {
      "get": {
        "tags": [
          "tokenVerification"
        ],
        "summary": "Lists all blocked tokens",
        "operationId": "listBlocked",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens/check/{tokenId}/{tokenName}": {
      "get": {
        "tags": [
          "tokenVerification"
        ],
        "summary": "Check a token verification",
        "operationId": "checkToken",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sigusd/price": {
      "get": {
        "tags": [
          "ageUsd"
        ],
        "summary": "Lists price and available volume for SigmaUSD",
        "operationId": "getSigmaUsdPrice",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPrice"
                }
              }
            }
          }
        }
      }
    },
    "/sigusd/exchange/{amount}/info": {
      "get": {
        "tags": [
          "ageUsd"
        ],
        "summary": "Calculates SigUSD exchange",
        "operationId": "calcSigmaUsdExchange",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgeUsdExchangeInfo"
                }
              }
            }
          }
        }
      }
    },
    "/sigusd/exchange/": {
      "get": {
        "tags": [
          "ageUsd"
        ],
        "summary": "Builds ErgoPayRequest for SigUSD exchange",
        "operationId": "doSigmaUsdExchange",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkRate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "executionFee",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErgoPayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sigrsv/price": {
      "get": {
        "tags": [
          "ageUsd"
        ],
        "summary": "Lists price and available volume for SigmaRSV",
        "operationId": "getSigmaRsvPrice",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPrice"
                }
              }
            }
          }
        }
      }
    },
    "/sigrsv/exchange/{amount}/info": {
      "get": {
        "tags": [
          "ageUsd"
        ],
        "summary": "Calculates SigRSV exchange",
        "operationId": "calcSigmaRsvExchange",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgeUsdExchangeInfo"
                }
              }
            }
          }
        }
      }
    },
    "/sigrsv/exchange/": {
      "get": {
        "tags": [
          "ageUsd"
        ],
        "summary": "Builds ErgoPayRequest for SigRSV exchange",
        "operationId": "doSigmaRsvExchange",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkRate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "executionFee",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErgoPayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/peers/list": {
      "get": {
        "tags": [
          "peerDetection"
        ],
        "summary": "Lists known peers sorted by block height",
        "operationId": "getPeersList",
        "parameters": [
          {
            "name": "unreachable",
            "in": "query",
            "description": "Set to true to show unreachable peers in the list",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "closedApi",
            "in": "query",
            "description": "Set to true to show peers not open to be connected",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodePeer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/state/{requestId}": {
      "get": {
        "tags": [
          "paymentPortal"
        ],
        "summary": "Returns the state of a payment request. Please note that payment requests are purged after some time, so persist the state at your side when needed",
        "operationId": "getPaymentState",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRequestStateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/tokenburn": {
      "get": {
        "tags": [
          "token-burn-controller"
        ],
        "operationId": "mainApp",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MosaikApp"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/tokenburn/get/{uuid}": {
      "get": {
        "tags": [
          "token-burn-controller"
        ],
        "operationId": "getBurningTransaction",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErgoPayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/boxconsolidation/consolidate/{p2pkaddress}": {
      "get": {
        "tags": [
          "box-consolidation-controller"
        ],
        "operationId": "epConsolidate",
        "parameters": [
          {
            "name": "p2pkaddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErgoPayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/boxconsolidation/": {
      "get": {
        "tags": [
          "box-consolidation-controller"
        ],
        "operationId": "mainApp_1",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MosaikApp"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/babelfee/notificationcheck": {
      "get": {
        "tags": [
          "babel-fee-controller"
        ],
        "operationId": "checkForNotifications",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/babelfee/newoffer": {
      "get": {
        "tags": [
          "babel-fee-new-offer-controller"
        ],
        "operationId": "getBabelFeeNewOffer",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MosaikApp"
                }
              }
            }
          }
        }
      }
    },
    "/mosaik/babelfee/": {
      "get": {
        "tags": [
          "babel-fee-controller"
        ],
        "operationId": "getBabelFeeOverview",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MosaikApp"
                }
              }
            }
          }
        }
      }
    },
    "/createbabel/{address}": {
      "get": {
        "tags": [
          "babel-fee-new-offer-controller"
        ],
        "operationId": "ergoPayCreateBabelBox",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ergAmount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tokenAmount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErgoPayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cancelbabel/{boxId}": {
      "get": {
        "tags": [
          "babel-fee-controller"
        ],
        "operationId": "ergoPayCreateBabelBox_1",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErgoPayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ageusd/info": {
      "get": {
        "tags": [
          "ageUsd"
        ],
        "summary": "Returns state of AgeUSD at this moment",
        "operationId": "getAgeUsdInfo",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgeUsdInfo"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePaymentRequest": {
        "required": [
          "nanoErg",
          "receiverAddress"
        ],
        "type": "object",
        "properties": {
          "nanoErg": {
            "type": "integer",
            "format": "int64"
          },
          "tokenId": {
            "type": "string"
          },
          "tokenRawAmount": {
            "type": "integer",
            "format": "int64"
          },
          "receiverAddress": {
            "type": "string"
          },
          "senderAddress": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AddRequestResponse": {
        "required": [
          "ergoPayUrl",
          "requestId"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "ergoPayUrl": {
            "type": "string"
          }
        }
      },
      "Action": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "FetchActionResponse": {
        "type": "object",
        "properties": {
          "appVersion": {
            "type": "integer",
            "format": "int32"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        }
      },
      "TokenPrice": {
        "required": [
          "available",
          "displayName",
          "lastUpdated",
          "price",
          "tokenId",
          "volumeLastDay"
        ],
        "type": "object",
        "properties": {
          "tokenId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "available": {
            "type": "integer",
            "format": "int64"
          },
          "volumeLastDay": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GenuineToken": {
        "required": [
          "tokenId",
          "tokenName",
          "uniqueName"
        ],
        "type": "object",
        "properties": {
          "tokenId": {
            "type": "string"
          },
          "tokenName": {
            "type": "string"
          },
          "uniqueName": {
            "type": "boolean"
          },
          "issuer": {
            "type": "string"
          }
        }
      },
      "CheckResponse": {
        "required": [
          "genuine"
        ],
        "type": "object",
        "properties": {
          "genuine": {
            "type": "integer",
            "description": "Flag with 0 unknown, 1 verified, 2 suspicious, 3 blocked (see EIP-21)",
            "format": "int32"
          },
          "token": {
            "$ref": "#/components/schemas/GenuineToken"
          }
        }
      },
      "AgeUsdExchangeInfo": {
        "required": [
          "bankFeeAmount",
          "bankFeeDescription",
          "ergAmount",
          "ergAmountDescription",
          "exchangeRate",
          "jayFeeAmount",
          "jayFeeDescription",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "exchangeRate": {
            "type": "integer",
            "format": "int64"
          },
          "ergAmount": {
            "type": "integer",
            "format": "int64"
          },
          "ergAmountDescription": {
            "type": "string"
          },
          "bankFeeAmount": {
            "type": "integer",
            "format": "int64"
          },
          "bankFeeDescription": {
            "type": "string"
          },
          "jayFeeAmount": {
            "type": "integer",
            "format": "int64"
          },
          "jayFeeDescription": {
            "type": "string"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ErgoPayResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "messageSeverity": {
            "type": "string",
            "enum": [
              "NONE",
              "INFORMATION",
              "WARNING",
              "ERROR"
            ]
          },
          "address": {
            "type": "string"
          },
          "reducedTx": {
            "type": "string"
          },
          "replyTo": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reducedTxList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NodePeer": {
        "required": [
          "blockHeight",
          "blockchainApi",
          "headerHeight",
          "lastSeen",
          "name",
          "openRestApi",
          "responseTime",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "lastSeen": {
            "type": "integer",
            "format": "int64"
          },
          "responseTime": {
            "type": "integer",
            "format": "int64"
          },
          "blockHeight": {
            "type": "integer",
            "format": "int64"
          },
          "headerHeight": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "openRestApi": {
            "type": "boolean"
          },
          "blockchainApi": {
            "type": "boolean"
          }
        }
      },
      "PaymentRequestStateResponse": {
        "required": [
          "paymentRequestState",
          "requestId"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "paymentRequestState": {
            "type": "string",
            "enum": [
              "CREATED",
              "WAITING",
              "EXECUTED",
              "INVALID"
            ]
          },
          "txId": {
            "type": "string"
          }
        }
      },
      "MosaikApp": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "view": {
            "$ref": "#/components/schemas/ViewElement"
          },
          "manifest": {
            "$ref": "#/components/schemas/MosaikManifest"
          }
        }
      },
      "MosaikManifest": {
        "type": "object",
        "properties": {
          "appName": {
            "type": "string"
          },
          "appDescription": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "appVersion": {
            "type": "integer",
            "format": "int32"
          },
          "targetMosaikVersion": {
            "type": "integer",
            "format": "int32"
          },
          "targetCanvasDimension": {
            "type": "string",
            "enum": [
              "COMPACT_WIDTH",
              "MEDIUM_WIDTH",
              "FULL_WIDTH"
            ]
          },
          "cacheLifetime": {
            "type": "integer",
            "format": "int32"
          },
          "onAppLoadedAction": {
            "type": "string"
          },
          "onResizeAction": {
            "type": "string"
          },
          "errorReportUrl": {
            "type": "string"
          },
          "notificationCheckUrl": {
            "type": "string"
          }
        }
      },
      "ViewElement": {
        "type": "object",
        "properties": {
          "onLongPressAction": {
            "type": "string"
          },
          "onClickAction": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "NotificationCheckResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "messageTs": {
            "type": "integer",
            "format": "int64"
          },
          "nextCheck": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AgeUsdInfo": {
        "required": [
          "reserveRatio",
          "sigRsvPrice",
          "sigUsdPrice"
        ],
        "type": "object",
        "properties": {
          "reserveRatio": {
            "type": "integer",
            "format": "int64"
          },
          "sigUsdPrice": {
            "type": "integer",
            "format": "int64"
          },
          "sigRsvPrice": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}