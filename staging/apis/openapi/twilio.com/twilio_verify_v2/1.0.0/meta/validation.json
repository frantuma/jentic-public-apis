[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 110 absolute http references: [(('paths', '/v2/Services/{ServiceSid}/Webhooks/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'update', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'webhooks', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Templates', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationTemplates', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Templates?PageSize=50&Page=0'), (('paths', '/v2/Templates', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/VerificationCheck', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Attempts/Summary', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'getAttemptsSummary', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts/Summary'), (('paths', '/v2/Attempts/Summary', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Attempts/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchVerificationAttempt', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts/VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Attempts/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Attempts', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationAttempts', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0'), (('paths', '/v2/Attempts', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationAttempts', 'value', 'attempts', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Attempts/VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Attempts', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationAttemptsEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0'), (('paths', '/v2/Attempts', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchVerification', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'approveVerificationWithPn', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateVerification', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationAuto', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationAuto', 'value', 'sna', 'url'), 'url', 'https://mi.dnlsrv.com/m/id/ANBByzx7?data=AAAglRRdNn02iTFWfDWwdTjOzM8o%2F6JB86fH%2Bt%2FFftUPj0pFA0u8%2FibWuYwzmMeMOtdTwYlsO8V%2FXF%2BJmngMhbeGKYhHeTOF2H9VrGEYKcEEklPxHgb5GgL3XtYa33j3lIU%2By6InvoV%2FowWHBzA0QeFPBh6vmJ8LoUPJqGE7q0PRz618Z4ym1AGq%2BaomSq9PlP4rCduv9Cmtxu%2FrvPSBwocs0GCWDE8seK8t9epmPQW7gwODxkAiKr9UxhJd9KvmBVuAQPf%2BoFQVo86USXkhXqTvUzB2bNUYY9FCy3CWgZFTOa1D3H1CVxf1eHzYIswNA7SmOzP%2FBX8g6%2B0hkzwMRkcit3gBNs4evAVJiqAgYvUlrtGwwv9bFx4X7jWSHY4%3D&cipherSalt=yANeDq09bwM38SJs'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationSna', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationSna', 'value', 'sna', 'url'), 'url', 'https://mi.dnlsrv.com/m/id/ANBByzx7?data=AAAglRRdNn02iTFWfDWwdTjOzM8o%2F6JB86fH%2Bt%2FFftUPj0pFA0u8%2FibWuYwzmMeMOtdTwYlsO8V%2FXF%2BJmngMhbeGKYhHeTOF2H9VrGEYKcEEklPxHgb5GgL3XtYa33j3lIU%2By6InvoV%2FowWHBzA0QeFPBh6vmJ8LoUPJqGE7q0PRz618Z4ym1AGq%2BaomSq9PlP4rCduv9Cmtxu%2FrvPSBwocs0GCWDE8seK8t9epmPQW7gwODxkAiKr9UxhJd9KvmBVuAQPf%2BoFQVo86USXkhXqTvUzB2bNUYY9FCy3CWgZFTOa1D3H1CVxf1eHzYIswNA7SmOzP%2FBX8g6%2B0hkzwMRkcit3gBNs4evAVJiqAgYvUlrtGwwv9bFx4X7jWSHY4%3D&cipherSalt=yANeDq09bwM38SJs'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationWithRateLimits', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationEmail', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationWhatsapp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerification', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateRecord', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchRecord', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'services', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services?PageSize=50&Page=0'), (('paths', '/v2/Services', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createRecord', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/SafeList/Numbers/{PhoneNumber}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/SafeList/Numbers/+18001234567'), (('paths', '/v2/SafeList/Numbers/{PhoneNumber}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/SafeList/Numbers', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/SafeList/Numbers/+18001234567'), (('paths', '/v2/SafeList/Numbers', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchRateLimit', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateRateLimit', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'rate_limits', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createRateLimit', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{ChallengeSid}/Notifications', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'update', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'messaging_configurations', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Forms/{FormType}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Forms/form-push'), (('paths', '/v2/Forms/{FormType}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullTotp', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullTotp', 'value', 'factors', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullPush', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullPush', 'value', 'factors', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'entities', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC03aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchSid', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YCaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'challenges', 1, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'challenges', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC03aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createTotpWithAuthPayload', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createTotpWithoutAuthPayload', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC03aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchBucket', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateBucket', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'buckets', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createBucket', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/AccessTokens/YKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createWithoutTtl', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/AccessTokens/YKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createWithTtl', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/AccessTokens/YKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('info', 'termsOfService'), 'termsOfService', 'https://www.twilio.com/legal/tos'), (('info', 'license', 'url'), 'url', 'https://www.apache.org/licenses/LICENSE-2.0.html'), (('info', 'contact', 'url'), 'url', 'https://support.twilio.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "110"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object `summary` must be non-empty string. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.0.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        0,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.1.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        1,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.5.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        5,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.7.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        7,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.8.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        8,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.9.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        9,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.10.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        10,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.11.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        11,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.12.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        12,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.13.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        13,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.14.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        14,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.15.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        15,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.16.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        16,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.17.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        17,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/AccessTokens.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/AccessTokens",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/AccessTokens/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/AccessTokens/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Details.Fields.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Details.Fields",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `HiddenDetails` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.HiddenDetails]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "HiddenDetails"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithoutAuthPayload.value.Details.Fields.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithoutAuthPayload",
        "value",
        "Details.Fields",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `HiddenDetails` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithoutAuthPayload.value.HiddenDetails]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithoutAuthPayload",
        "value",
        "HiddenDetails"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithAuthPayload.value.Details.Fields.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithAuthPayload",
        "value",
        "Details.Fields",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `HiddenDetails` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithAuthPayload.value.HiddenDetails]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithAuthPayload",
        "value",
        "HiddenDetails"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `Metadata` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.post.requestBody.content.application/x-www-form-urlencoded.examples.verifyPush.value.Metadata]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "verifyPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `Metadata` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Metadata]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Forms/{FormType}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Forms/{FormType}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{ChallengeSid}/Notifications.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{ChallengeSid}/Notifications",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/SafeList/Numbers.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/SafeList/Numbers",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/SafeList/Numbers/{PhoneNumber}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/SafeList/Numbers/{PhoneNumber}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/SafeList/Numbers/{PhoneNumber}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/SafeList/Numbers/{PhoneNumber}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services.get.responses.200.content.application/json.examples.readAll.value.services.0.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "readAll",
        "value",
        "services",
        0,
        "mailer_sid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `MailerSid`. [path: paths./v2/Services.post.requestBody.content.application/x-www-form-urlencoded.examples.createRecord.value.MailerSid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createRecord",
        "value",
        "MailerSid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services.post.responses.201.content.application/json.examples.createRecord.value.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "examples",
        "createRecord",
        "value",
        "mailer_sid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services/{Sid}.get.responses.200.content.application/json.examples.fetchRecord.value.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "fetchRecord",
        "value",
        "mailer_sid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `MailerSid`. [path: paths./v2/Services/{Sid}.post.requestBody.content.application/x-www-form-urlencoded.examples.updateRecord.value.MailerSid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "updateRecord",
        "value",
        "MailerSid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services/{Sid}.post.responses.200.content.application/json.examples.updateRecord.value.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "updateRecord",
        "value",
        "mailer_sid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `ChannelConfiguration` property type must be object. [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationEmail.value.ChannelConfiguration]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationEmail",
        "value",
        "ChannelConfiguration"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `RateLimits` property type must be object. [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationWithRateLimits.value.RateLimits]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationWithRateLimits",
        "value",
        "RateLimits"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Verifications.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Verifications/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Verifications/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Attempts.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Attempts/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Attempts/Summary.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/Summary",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `conversion_rate_percentage` property type must be number. [path: paths./v2/Attempts/Summary.get.responses.200.content.application/json.examples.getAttemptsSummary.value.conversion_rate_percentage]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/Summary",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "getAttemptsSummary",
        "value",
        "conversion_rate_percentage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/VerificationCheck.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/VerificationCheck",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Templates.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Templates",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"factor_enum_notification_platforms\" is never used. [path: components.schemas.factor_enum_notification_platforms]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "factor_enum_notification_platforms"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"verification_attempt_enum_call_status\" is never used. [path: components.schemas.verification_attempt_enum_call_status]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_call_status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"verification_attempt_enum_message_status\" is never used. [path: components.schemas.verification_attempt_enum_message_status]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_message_status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"verification_attempt_enum_attempt_status\" is never used. [path: components.schemas.verification_attempt_enum_attempt_status]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_attempt_status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 486,
        "character": 43
      },
      "end": {
        "line": 491,
        "character": 16
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.factor_enum_notification_platforms]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "factor_enum_notification_platforms"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1209,
        "character": 46
      },
      "end": {
        "line": 1219,
        "character": 20
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.verification_attempt_enum_call_status]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_call_status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1222,
        "character": 49
      },
      "end": {
        "line": 1237,
        "character": 20
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.verification_attempt_enum_message_status]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_message_status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1248,
        "character": 49
      },
      "end": {
        "line": 1253,
        "character": 19
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.verification_attempt_enum_attempt_status]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_attempt_status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2821,
        "character": 22
      },
      "end": {
        "line": 2821,
        "character": 81
      }
    },
    "message": "\"0\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Details.Fields.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Details.Fields",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2832,
        "character": 22
      },
      "end": {
        "line": 2832,
        "character": 81
      }
    },
    "message": "\"0\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithoutAuthPayload.value.Details.Fields.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithoutAuthPayload",
        "value",
        "Details.Fields",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2843,
        "character": 22
      },
      "end": {
        "line": 2843,
        "character": 81
      }
    },
    "message": "\"0\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithAuthPayload.value.Details.Fields.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithAuthPayload",
        "value",
        "Details.Fields",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3512,
        "character": 32
      },
      "end": {
        "line": 3512,
        "character": 55
      }
    },
    "message": "\"Metadata\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.post.requestBody.content.application/x-www-form-urlencoded.examples.verifyPush.value.Metadata]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "verifyPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5000,
        "character": 32
      },
      "end": {
        "line": 5000,
        "character": 55
      }
    },
    "message": "\"Metadata\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Metadata]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8143,
        "character": 44
      },
      "end": {
        "line": 8143,
        "character": 186
      }
    },
    "message": "\"ChannelConfiguration\" property type must be object [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationEmail.value.ChannelConfiguration]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationEmail",
        "value",
        "ChannelConfiguration"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8154,
        "character": 34
      },
      "end": {
        "line": 8154,
        "character": 68
      }
    },
    "message": "\"RateLimits\" property type must be object [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationWithRateLimits.value.RateLimits]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationWithRateLimits",
        "value",
        "RateLimits"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9010,
        "character": 52
      },
      "end": {
        "line": 9010,
        "character": 66
      }
    },
    "message": "\"conversion_rate_percentage\" property type must be number,null [path: paths./v2/Attempts/Summary.get.responses.200.content.application/json.examples.getAttemptsSummary.value.conversion_rate_percentage]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/Summary",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "examples",
        "getAttemptsSummary",
        "value",
        "conversion_rate_percentage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9869,
        "character": 23
      },
      "end": {
        "line": 9869,
        "character": 25
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.post.description]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "post",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 110 absolute http references: [(('paths', '/v2/Services/{ServiceSid}/Webhooks/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'update', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'webhooks', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Webhooks/YWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Webhooks', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Templates', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationTemplates', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Templates?PageSize=50&Page=0'), (('paths', '/v2/Templates', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/VerificationCheck', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Attempts/Summary', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'getAttemptsSummary', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts/Summary'), (('paths', '/v2/Attempts/Summary', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Attempts/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchVerificationAttempt', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts/VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Attempts/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Attempts', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationAttempts', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0'), (('paths', '/v2/Attempts', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationAttempts', 'value', 'attempts', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Attempts/VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Attempts', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'listVerificationAttemptsEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0'), (('paths', '/v2/Attempts', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchVerification', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'approveVerificationWithPn', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateVerification', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationAuto', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationAuto', 'value', 'sna', 'url'), 'url', 'https://mi.dnlsrv.com/m/id/ANBByzx7?data=AAAglRRdNn02iTFWfDWwdTjOzM8o%2F6JB86fH%2Bt%2FFftUPj0pFA0u8%2FibWuYwzmMeMOtdTwYlsO8V%2FXF%2BJmngMhbeGKYhHeTOF2H9VrGEYKcEEklPxHgb5GgL3XtYa33j3lIU%2By6InvoV%2FowWHBzA0QeFPBh6vmJ8LoUPJqGE7q0PRz618Z4ym1AGq%2BaomSq9PlP4rCduv9Cmtxu%2FrvPSBwocs0GCWDE8seK8t9epmPQW7gwODxkAiKr9UxhJd9KvmBVuAQPf%2BoFQVo86USXkhXqTvUzB2bNUYY9FCy3CWgZFTOa1D3H1CVxf1eHzYIswNA7SmOzP%2FBX8g6%2B0hkzwMRkcit3gBNs4evAVJiqAgYvUlrtGwwv9bFx4X7jWSHY4%3D&cipherSalt=yANeDq09bwM38SJs'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationSna', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationSna', 'value', 'sna', 'url'), 'url', 'https://mi.dnlsrv.com/m/id/ANBByzx7?data=AAAglRRdNn02iTFWfDWwdTjOzM8o%2F6JB86fH%2Bt%2FFftUPj0pFA0u8%2FibWuYwzmMeMOtdTwYlsO8V%2FXF%2BJmngMhbeGKYhHeTOF2H9VrGEYKcEEklPxHgb5GgL3XtYa33j3lIU%2By6InvoV%2FowWHBzA0QeFPBh6vmJ8LoUPJqGE7q0PRz618Z4ym1AGq%2BaomSq9PlP4rCduv9Cmtxu%2FrvPSBwocs0GCWDE8seK8t9epmPQW7gwODxkAiKr9UxhJd9KvmBVuAQPf%2BoFQVo86USXkhXqTvUzB2bNUYY9FCy3CWgZFTOa1D3H1CVxf1eHzYIswNA7SmOzP%2FBX8g6%2B0hkzwMRkcit3gBNs4evAVJiqAgYvUlrtGwwv9bFx4X7jWSHY4%3D&cipherSalt=yANeDq09bwM38SJs'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationWithRateLimits', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationEmail', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerificationWhatsapp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createVerification', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Verifications/VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Verifications', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateRecord', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchRecord', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'services', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services?PageSize=50&Page=0'), (('paths', '/v2/Services', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createRecord', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/SafeList/Numbers/{PhoneNumber}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/SafeList/Numbers/+18001234567'), (('paths', '/v2/SafeList/Numbers/{PhoneNumber}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/SafeList/Numbers', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/SafeList/Numbers/+18001234567'), (('paths', '/v2/SafeList/Numbers', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchRateLimit', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateRateLimit', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'rate_limits', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readAll', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createRateLimit', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{ChallengeSid}/Notifications', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'update', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'messaging_configurations', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/MessagingConfigurations/CA'), (('paths', '/v2/Services/{ServiceSid}/MessagingConfigurations', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Forms/{FormType}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Forms/form-push'), (('paths', '/v2/Forms/{FormType}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullTotp', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullTotp', 'value', 'factors', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullPush', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFullPush', 'value', 'factors', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Factors/YFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'entities', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'create', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f'), (('paths', '/v2/Services/{ServiceSid}/Entities', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyTotp', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'verifyPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC03aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchSid', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YCaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'challenges', 1, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'challenges', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC03aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createTotpWithAuthPayload', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createTotpWithoutAuthPayload', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createPush', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Entities/ff483d1ff591898a9942916050d2ca3f/Challenges/YC03aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetchBucket', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'updateBucket', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readFull', 'value', 'buckets', 0, 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'readEmpty', 'value', 'meta', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets?PageSize=50&Page=0'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createBucket', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/RateLimits/RKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Buckets/BLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens/{Sid}', 'get', 'responses', '200', 'content', 'application/json', 'examples', 'fetch', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/AccessTokens/YKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens/{Sid}', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createWithoutTtl', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/AccessTokens/YKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens', 'post', 'responses', '201', 'content', 'application/json', 'examples', 'createWithTtl', 'value', 'url'), 'url', 'https://verify.twilio.com/v2/Services/VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/AccessTokens/YKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'), (('paths', '/v2/Services/{ServiceSid}/AccessTokens', 'servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('servers', 0, 'url'), 'url', 'https://verify.twilio.com'), (('info', 'termsOfService'), 'termsOfService', 'https://www.twilio.com/legal/tos'), (('info', 'license', 'url'), 'url', 'https://www.apache.org/licenses/LICENSE-2.0.html'), (('info', 'contact', 'url'), 'url', 'https://support.twilio.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "110"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object `summary` must be non-empty string. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.0.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        0,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.1.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        1,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.5.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        5,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.7.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        7,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.8.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        8,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.9.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        9,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.10.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        10,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.11.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        11,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.12.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        12,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.13.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        13,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.14.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        14,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.15.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        15,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.16.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        16,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.17.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        17,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/AccessTokens.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/AccessTokens",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/AccessTokens/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/AccessTokens/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Details.Fields.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Details.Fields",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `HiddenDetails` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.HiddenDetails]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "HiddenDetails"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithoutAuthPayload.value.Details.Fields.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithoutAuthPayload",
        "value",
        "Details.Fields",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `HiddenDetails` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithoutAuthPayload.value.HiddenDetails]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithoutAuthPayload",
        "value",
        "HiddenDetails"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithAuthPayload.value.Details.Fields.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithAuthPayload",
        "value",
        "Details.Fields",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `HiddenDetails` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithAuthPayload.value.HiddenDetails]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithAuthPayload",
        "value",
        "HiddenDetails"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `Metadata` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.post.requestBody.content.application/x-www-form-urlencoded.examples.verifyPush.value.Metadata]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "verifyPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `Metadata` property type must be object. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Metadata]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Forms/{FormType}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Forms/{FormType}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{ChallengeSid}/Notifications.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{ChallengeSid}/Notifications",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/RateLimits/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/RateLimits/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/SafeList/Numbers.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/SafeList/Numbers",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/SafeList/Numbers/{PhoneNumber}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/SafeList/Numbers/{PhoneNumber}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/SafeList/Numbers/{PhoneNumber}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/SafeList/Numbers/{PhoneNumber}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services.get.responses.200.content.application/json.examples.readAll.value.services.0.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "readAll",
        "value",
        "services",
        0,
        "mailer_sid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `MailerSid`. [path: paths./v2/Services.post.requestBody.content.application/x-www-form-urlencoded.examples.createRecord.value.MailerSid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createRecord",
        "value",
        "MailerSid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services.post.responses.201.content.application/json.examples.createRecord.value.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "examples",
        "createRecord",
        "value",
        "mailer_sid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services/{Sid}.get.responses.200.content.application/json.examples.fetchRecord.value.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "fetchRecord",
        "value",
        "mailer_sid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `MailerSid`. [path: paths./v2/Services/{Sid}.post.requestBody.content.application/x-www-form-urlencoded.examples.updateRecord.value.MailerSid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "updateRecord",
        "value",
        "MailerSid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `mailer_sid`. [path: paths./v2/Services/{Sid}.post.responses.200.content.application/json.examples.updateRecord.value.mailer_sid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "updateRecord",
        "value",
        "mailer_sid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `ChannelConfiguration` property type must be object. [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationEmail.value.ChannelConfiguration]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationEmail",
        "value",
        "ChannelConfiguration"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `RateLimits` property type must be object. [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationWithRateLimits.value.RateLimits]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationWithRateLimits",
        "value",
        "RateLimits"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Verifications.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Verifications/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Verifications/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Attempts.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Attempts/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Attempts/Summary.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/Summary",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `conversion_rate_percentage` property type must be number. [path: paths./v2/Attempts/Summary.get.responses.200.content.application/json.examples.getAttemptsSummary.value.conversion_rate_percentage]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/Summary",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "getAttemptsSummary",
        "value",
        "conversion_rate_percentage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/VerificationCheck.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/VerificationCheck",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Templates.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Templates",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"factor_enum_notification_platforms\" is never used. [path: components.schemas.factor_enum_notification_platforms]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "factor_enum_notification_platforms"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"verification_attempt_enum_call_status\" is never used. [path: components.schemas.verification_attempt_enum_call_status]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_call_status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"verification_attempt_enum_message_status\" is never used. [path: components.schemas.verification_attempt_enum_message_status]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_message_status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"verification_attempt_enum_attempt_status\" is never used. [path: components.schemas.verification_attempt_enum_attempt_status]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_attempt_status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 486,
        "character": 43
      },
      "end": {
        "line": 491,
        "character": 16
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.factor_enum_notification_platforms]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "factor_enum_notification_platforms"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1209,
        "character": 46
      },
      "end": {
        "line": 1219,
        "character": 20
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.verification_attempt_enum_call_status]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_call_status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1222,
        "character": 49
      },
      "end": {
        "line": 1237,
        "character": 20
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.verification_attempt_enum_message_status]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_message_status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1248,
        "character": 49
      },
      "end": {
        "line": 1253,
        "character": 19
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.verification_attempt_enum_attempt_status]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "verification_attempt_enum_attempt_status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2821,
        "character": 22
      },
      "end": {
        "line": 2821,
        "character": 81
      }
    },
    "message": "\"0\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Details.Fields.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Details.Fields",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2832,
        "character": 22
      },
      "end": {
        "line": 2832,
        "character": 81
      }
    },
    "message": "\"0\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithoutAuthPayload.value.Details.Fields.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithoutAuthPayload",
        "value",
        "Details.Fields",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2843,
        "character": 22
      },
      "end": {
        "line": 2843,
        "character": 81
      }
    },
    "message": "\"0\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges.post.requestBody.content.application/x-www-form-urlencoded.examples.createTotpWithAuthPayload.value.Details.Fields.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createTotpWithAuthPayload",
        "value",
        "Details.Fields",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3512,
        "character": 32
      },
      "end": {
        "line": 3512,
        "character": 55
      }
    },
    "message": "\"Metadata\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}.post.requestBody.content.application/x-www-form-urlencoded.examples.verifyPush.value.Metadata]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Challenges/{Sid}",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "verifyPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5000,
        "character": 32
      },
      "end": {
        "line": 5000,
        "character": 55
      }
    },
    "message": "\"Metadata\" property type must be object [path: paths./v2/Services/{ServiceSid}/Entities/{Identity}/Factors.post.requestBody.content.application/x-www-form-urlencoded.examples.createPush.value.Metadata]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Entities/{Identity}/Factors",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createPush",
        "value",
        "Metadata"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8143,
        "character": 44
      },
      "end": {
        "line": 8143,
        "character": 186
      }
    },
    "message": "\"ChannelConfiguration\" property type must be object [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationEmail.value.ChannelConfiguration]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationEmail",
        "value",
        "ChannelConfiguration"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8154,
        "character": 34
      },
      "end": {
        "line": 8154,
        "character": 68
      }
    },
    "message": "\"RateLimits\" property type must be object [path: paths./v2/Services/{ServiceSid}/Verifications.post.requestBody.content.application/x-www-form-urlencoded.examples.createVerificationWithRateLimits.value.RateLimits]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Verifications",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "examples",
        "createVerificationWithRateLimits",
        "value",
        "RateLimits"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9010,
        "character": 52
      },
      "end": {
        "line": 9010,
        "character": 66
      }
    },
    "message": "\"conversion_rate_percentage\" property type must be number,null [path: paths./v2/Attempts/Summary.get.responses.200.content.application/json.examples.getAttemptsSummary.value.conversion_rate_percentage]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Attempts/Summary",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "examples",
        "getAttemptsSummary",
        "value",
        "conversion_rate_percentage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9869,
        "character": 23
      },
      "end": {
        "line": 9869,
        "character": 25
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./v2/Services/{ServiceSid}/Webhooks/{Sid}.post.description]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/Services/{ServiceSid}/Webhooks/{Sid}",
        "post",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]