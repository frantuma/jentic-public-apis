[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 296 relative references: [(('paths', '/network_insights/report/get', 'post', 'externalDocs', 'url'), 'url', '/api/network_insights/report/#get'), (('paths', '/fdx/notifications', 'post', 'externalDocs', 'url'), 'url', '/api/fdx/notifications/#post'), (('paths', '/link_delivery/get', 'post', 'externalDocs', 'url'), 'url', '/assets/waitlist/hosted-link/'), (('paths', '/link_delivery/create', 'post', 'externalDocs', 'url'), 'url', '/assets/waitlist/hosted-link/'), (('paths', '/partner/customer/oauth_institutions/get', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomeroauth_institutionsget'), (('paths', '/partner/customer/remove', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomerremove'), (('paths', '/partner/customer/enable', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomerenable'), (('paths', '/partner/customer/get', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomerget'), (('paths', '/partner/customer/create', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomercreate'), (('paths', '/payment_profile/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#payment_profileremove'), (('paths', '/payment_profile/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#payment_profileget'), (('paths', '/payment_profile/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#payment_profilecreate'), (('paths', '/issues/subscribe', 'post', 'externalDocs', 'url'), 'url', '/api/products/issues/#issuessubscribe'), (('paths', '/issues/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/issues/#issuesget'), (('paths', '/issues/search', 'post', 'externalDocs', 'url'), 'url', '/api/products/issues#issuessearch'), (('paths', '/beta/transactions/user_insights/v1/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/enrich/#userinsightsget'), (('paths', '/wallet/transaction/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#wallettransactionlist'), (('paths', '/wallet/transaction/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#wallettransactionget'), (('paths', '/wallet/transaction/execute', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#wallettransactionexecute'), (('paths', '/wallet/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#walletlist'), (('paths', '/wallet/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#walletget'), (('paths', '/wallet/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#walletcreate'), (('paths', '/signal/prepare', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signalprepare'), (('paths', '/signal/return/report', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signalreturnreport'), (('paths', '/signal/decision/report', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signaldecisionreport'), (('paths', '/signal/schedule', 'post', 'externalDocs', 'url'), 'url', 'none'), (('paths', '/signal/evaluate', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signalevaluate'), (('paths', '/sandbox/cra/cashflow_updates/update', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxcracashflow_updatesupdate'), (('paths', '/sandbox/bank_income/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxbankincomefire_webhook'), (('paths', '/sandbox/income/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxincomefire_webhook'), (('paths', '/sandbox/bank_transfer/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference/#sandboxbank_transferfire_webhook'), (('paths', '/credit/relay/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelayremove'), (('paths', '/credit/relay/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelayrefresh'), (('paths', '/credit/relay/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelaypdfget'), (('paths', '/credit/relay/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelayget'), (('paths', '/credit/relay/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelaycreate'), (('paths', '/credit/payroll_income/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomerefresh'), (('paths', '/credit/employment/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditemploymentget'), (('paths', '/credit/payroll_income/precheck', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomeprecheck'), (('paths', '/credit/payroll_income/risk_signals/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomerisk_signalsget'), (('paths', '/credit/payroll_income/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomeget'), (('paths', '/credit/bank_statements/uploads/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_statementsuploadsget'), (('paths', '/credit/payroll_income/parsing_config/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomeparsing_configupdate'), (('paths', '/credit/bank_income/webhook/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomewebhookupdate'), (('paths', '/credit/bank_income/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomerefresh'), (('paths', '/credit/bank_income/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomepdfget'), (('paths', '/credit/bank_income/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomeget'), (('paths', '/beta/credit/v1/bank_employment/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_employmentget'), (('paths', '/credit/freddie_mac/reports/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/credit/asset_report/freddie_mac/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/credit/audit_copy_token/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditaudit_copy_tokenremove'), (('paths', '/credit/audit_copy_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditaudit_copy_tokencreate'), (('paths', '/employment/verification/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#employmentverificationget'), (('paths', '/income/verification/precheck', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationprecheck'), (('paths', '/income/verification/taxforms/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationtaxformsget'), (('paths', '/income/verification/documents/download', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationdocumentsdownload'), (('paths', '/income/verification/paystubs/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationpaystubsget'), (('paths', '/income/verification/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationcreate'), (('paths', '/employers/search', 'post', 'externalDocs', 'url'), 'url', '/api/employers/#employerssearch'), (('paths', '/sandbox/payment/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxpaymentsimulate'), (('paths', '/sandbox/payment_profile/reset_login', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxpayment_profilereset_login'), (('paths', '/sandbox/transfer/test_clock/list', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clocklist'), (('paths', '/sandbox/transfer/test_clock/get', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clockget'), (('paths', '/sandbox/transfer/test_clock/advance', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clockadvance'), (('paths', '/sandbox/transfer/test_clock/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clockcreate'), (('paths', '/sandbox/transfer/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferfire_webhook'), (('paths', '/sandbox/transfer/repayment/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferrepaymentsimulate'), (('paths', '/sandbox/transfer/ledger/withdraw/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferledgerwithdrawsimulate'), (('paths', '/sandbox/transfer/ledger/deposit/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferledgerdepositsimulate'), (('paths', '/sandbox/transfer/ledger/simulate_available', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferledgersimulate_available'), (('paths', '/sandbox/transfer/refund/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferrefundsimulate'), (('paths', '/sandbox/transfer/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfersimulate'), (('paths', '/sandbox/transfer/sweep/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfersweepsimulate'), (('paths', '/sandbox/bank_transfer/simulate', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference/#sandboxbank_transfersimulate'), (('paths', '/transfer/platform/person/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform/#transferplatformpersoncreate'), (('paths', '/transfer/platform/originator/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform/originator/#transferplatformoriginatorcreate'), (('paths', '/transfer/refund/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/refunds/#transferrefundcancel'), (('paths', '/transfer/refund/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/refunds/#transferrefundget'), (('paths', '/transfer/refund/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/refunds/#transferrefundcreate'), (('paths', '/transfer/originator/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorlist'), (('paths', '/transfer/originator/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorget'), (('paths', '/transfer/diligence/document/upload', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferdiligencedocumentupload'), (('paths', '/transfer/diligence/submit', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferdiligencesubmit'), (('paths', '/transfer/questionnaire/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferquestionnairecreate'), (('paths', '/transfer/originator/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorcreate'), (('paths', '/transfer/platform/requirement/submit', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferplatformrequirementsubmit'), (('paths', '/transfer/repayment/return/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#transferrepaymentreturnlist'), (('paths', '/transfer/repayment/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#transferrepaymentlist'), (('paths', '/transfer/intent/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transferintentget'), (('paths', '/transfer/intent/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transferintentcreate'), (('paths', '/transfer/migrate_account', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transfermigrate_account'), (('paths', '/bank_transfer/migrate_account', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transfermigrate_account'), (('paths', '/bank_transfer/balance/get', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transferbalanceget'), (('paths', '/bank_transfer/sweep/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#bank_transfersweeplist'), (('paths', '/transfer/sweep/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfersweeplist'), (('paths', '/bank_transfer/sweep/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#bank_transfersweepget'), (('paths', '/transfer/sweep/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfersweepget'), (('paths', '/bank_transfer/event/sync', 'post', 'externalDocs', 'url'), 'url', '/api/products/auth/#bank_transfereventsync'), (('paths', '/transfer/event/sync', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfereventsync'), (('paths', '/bank_transfer/event/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/auth#bank_transfereventlist'), (('paths', '/transfer/ledger/event/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgereventlist'), (('paths', '/transfer/event/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfereventlist'), (('paths', '/bank_transfer/cancel', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transfercancel'), (('paths', '/transfer/recurring/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringcancel'), (('paths', '/transfer/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transfercancel'), (('paths', '/bank_transfer/list', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transferlist'), (('paths', '/transfer/recurring/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringlist'), (('paths', '/transfer/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transferlist'), (('paths', '/bank_transfer/create', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transfercreate'), (('paths', '/transfer/recurring/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringcreate'), (('paths', '/transfer/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transfercreate'), (('paths', '/transfer/metrics/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/metrics/#transfermetricsget'), (('paths', '/transfer/originator/funding_account/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorfunding_accountcreate'), (('paths', '/transfer/originator/funding_account/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorfunding_accountupdate'), (('paths', '/transfer/ledger/withdraw', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerwithdraw'), (('paths', '/transfer/ledger/deposit', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerdeposit'), (('paths', '/transfer/ledger/distribute', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerdistribute'), (('paths', '/transfer/ledger/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerget'), (('paths', '/transfer/configuration/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/metrics/#transferconfigurationget'), (('paths', '/transfer/capabilities/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transfercapabilitiesget'), (('paths', '/transfer/balance/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/balance/#transferbalanceget'), (('paths', '/transfer/authorization/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transferauthorizationcancel'), (('paths', '/transfer/authorization/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transferauthorizationcreate'), (('paths', '/bank_transfer/get', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transferget'), (('paths', '/transfer/recurring/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringget'), (('paths', '/transfer/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transferget'), (('paths', '/session/token/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/layer/#sessiontokencreate'), (('paths', '/link/oauth/correlation_id/exchange', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#linkcorrelationid'), (('paths', '/link/token/get', 'post', 'externalDocs', 'url'), 'url', '/api/link/#linktokenget'), (('paths', '/link/token/create', 'post', 'externalDocs', 'url'), 'url', '/api/link/#linktokencreate'), (('paths', '/processor/apex/processor_token/create', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/processor/stripe/bank_account_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processorstripebank_account_tokencreate'), (('paths', '/processor/token/webhook/update', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortokenwebhookupdate'), (('paths', '/processor/token/permissions/get', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processortokenpermissionsget'), (('paths', '/processor/token/permissions/set', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processortokenpermissionsset'), (('paths', '/processor/token/create', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processortokencreate'), (('paths', '/investments/auth/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments-move/#investmentsauthget'), (('paths', '/investments/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments/#investmentsrefresh'), (('paths', '/investments/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments/#investmentstransactionsget'), (('paths', '/investments/holdings/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments/#investmentsholdingsget'), (('paths', '/payment_initiation/payment/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentlist'), (('paths', '/payment_initiation/payment/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentget'), (('paths', '/credit/sessions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditsessionsget'), (('paths', '/user/third_party_token/remove', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userthirdpartytokenremove'), (('paths', '/user/third_party_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userthirdpartytokencreate'), (('paths', '/user/items/list', 'post', 'externalDocs', 'url'), 'url', '/api/users/#useritemslist'), (('paths', '/user/items/get', 'post', 'externalDocs', 'url'), 'url', '/api/users/#useritemsget'), (('paths', '/user/remove', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userremove'), (('paths', '/user/update', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userupdate'), (('paths', '/user/create', 'post', 'externalDocs', 'url'), 'url', '/api/users/#usercreate'), (('paths', '/item/public_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/link/#itempublic_tokencreate'), (('paths', '/item/public_token/exchange', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itempublic_tokenexchange'), (('paths', '/sandbox/user/reset_login', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxuserreset_login'), (('paths', '/sandbox/item/set_verification_status', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxitemset_verification_status'), (('paths', '/sandbox/item/reset_login', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxitemreset_login'), (('paths', '/payment_initiation/consent/payment/execute', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentpaymentexecute'), (('paths', '/payment_initiation/consent/revoke', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentrevoke'), (('paths', '/payment_initiation/consent/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentget'), (('paths', '/payment_initiation/consent/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentcreate'), (('paths', '/payment_initiation/payment/token/create', 'post', 'externalDocs', 'url'), 'url', '/link/maintain-legacy-integration/#creating-a-payment-token'), (('paths', '/payment_initiation/payment/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentcreate'), (('paths', '/payment_initiation/recipient/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationrecipientlist'), (('paths', '/payment_initiation/recipient/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationrecipientget'), (('paths', '/payment_initiation/payment/reverse', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentreverse'), (('paths', '/payment_initiation/recipient/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationrecipientcreate'), (('paths', '/liabilities/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/liabilities/#liabilitiesget'), (('paths', '/webhook_verification_key/get', 'post', 'externalDocs', 'url'), 'url', '/api/webhooks/webhook-verification/#get-webhook-verification-key'), (('paths', '/item/access_token/invalidate', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemaccess_tokeninvalidate'), (('paths', '/item/webhook/update', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemwebhookupdate'), (('paths', '/processor/balance/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorbalanceget'), (('paths', '/processor/identity/match', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processoridentitymatch'), (('paths', '/processor/identity/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processoridentityget'), (('paths', '/processor/liabilities/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorliabilitiesget'), (('paths', '/processor/bank_transfer/create', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#bank_transfercreate'), (('paths', '/processor/signal/prepare', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignalprepare'), (('paths', '/processor/signal/return/report', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignalreturnreport'), (('paths', '/processor/signal/decision/report', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignaldecisionreport'), (('paths', '/processor/signal/evaluate', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignalevaluate'), (('paths', '/processor/transactions/recurring/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionsrecurringget'), (('paths', '/processor/transactions/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionsrefresh'), (('paths', '/processor/transactions/sync', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionssync'), (('paths', '/processor/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionsget'), (('paths', '/processor/investments/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorinvestmentstransactionsget'), (('paths', '/processor/investments/holdings/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorinvestmentsholdingsget'), (('paths', '/processor/account/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processoraccountget'), (('paths', '/processor/auth/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorauthget'), (('paths', '/protect/event/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/protect/#protecteventget'), (('paths', '/protect/event/send', 'post', 'externalDocs', 'url'), 'url', '/api/products/protect/#protecteventsend'), (('paths', '/protect/user/insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/protect/#protectuserinsightsget'), (('paths', '/beacon/user/account_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuseraccount_insightsget'), (('paths', '/beacon/user/history/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserhistorylist'), (('paths', '/identity_verification/autofill/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationautofillcreate'), (('paths', '/beacon/duplicate/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconduplicateget'), (('paths', '/beacon/user/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserupdate'), (('paths', '/beacon/report_syndication/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreport_syndicationget'), (('paths', '/beacon/report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreportget'), (('paths', '/beacon/report_syndication/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreport_syndicationlist'), (('paths', '/beacon/report/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreportlist'), (('paths', '/beacon/report/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreportcreate'), (('paths', '/beacon/user/review', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserreview'), (('paths', '/beacon/user/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserget'), (('paths', '/beacon/user/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconusercreate'), (('paths', '/beacon/account_risk/v1/evaluate', 'post', 'externalDocs', 'url'), 'url', 'none'), (('paths', '/watchlist_screening/individual/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualupdate'), (('paths', '/watchlist_screening/individual/review/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualreviewlist'), (('paths', '/watchlist_screening/individual/review/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualreviewcreate'), (('paths', '/watchlist_screening/individual/program/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualprogramlist'), (('paths', '/watchlist_screening/individual/program/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualprogramget'), (('paths', '/watchlist_screening/individual/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividuallist'), (('paths', '/watchlist_screening/individual/hit/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualhitlist'), (('paths', '/watchlist_screening/individual/history/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualhistorylist'), (('paths', '/watchlist_screening/individual/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualget'), (('paths', '/watchlist_screening/individual/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualcreate'), (('paths', '/watchlist_screening/entity/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityupdate'), (('paths', '/watchlist_screening/entity/review/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityreviewlist'), (('paths', '/watchlist_screening/entity/review/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityreviewcreate'), (('paths', '/watchlist_screening/entity/program/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityprogramlist'), (('paths', '/watchlist_screening/entity/program/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityprogramget'), (('paths', '/watchlist_screening/entity/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentitylist'), (('paths', '/watchlist_screening/entity/hit/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityhitlist'), (('paths', '/watchlist_screening/entity/history/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityhistorylist'), (('paths', '/watchlist_screening/entity/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityget'), (('paths', '/watchlist_screening/entity/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentitycreate'), (('paths', '/identity_verification/retry', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationretry'), (('paths', '/identity_verification/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationlist'), (('paths', '/identity_verification/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationget'), (('paths', '/identity_verification/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationcreate'), (('paths', '/dashboard_user/list', 'post', 'externalDocs', 'url'), 'url', '/api/kyc-aml-users/#dashboard_userlist'), (('paths', '/dashboard_user/get', 'post', 'externalDocs', 'url'), 'url', '/api/kyc-aml-users/#dashboard_userget'), (('paths', '/identity/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identityrefresh'), (('paths', '/identity/match', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identitymatch'), (('paths', '/identity/documents/uploads/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identitydocumentsuploadsget'), (('paths', '/identity/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identityget'), (('paths', '/accounts/balance/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/balance/#accountsbalanceget'), (('paths', '/sandbox/item/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxitemfire_webhook'), (('paths', '/sandbox/public_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxpublic_tokencreate'), (('paths', '/sandbox/processor_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxprocessor_tokencreate'), (('paths', '/categories/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#categoriesget'), (('paths', '/accounts/get', 'post', 'externalDocs', 'url'), 'url', '/api/accounts/#accountsget'), (('paths', '/item/remove', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemremove'), (('paths', '/institutions/get_by_id', 'post', 'externalDocs', 'url'), 'url', '/api/institutions/#institutionsget_by_id'), (('paths', '/institutions/search', 'post', 'externalDocs', 'url'), 'url', '/api/institutions/#institutionssearch'), (('paths', '/institutions/get', 'post', 'externalDocs', 'url'), 'url', '/api/institutions/#institutionsget'), (('paths', '/user/financial_data/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#userfinancialdatarefresh'), (('paths', '/user/transactions/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#usertransactionsrefresh'), (('paths', '/transactions/enrich', 'post', 'externalDocs', 'url'), 'url', '/api/products/enrich/#transactionsenrich'), (('paths', '/transactions/sync', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionssync'), (('paths', '/transactions/recurring/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionsrecurringget'), (('paths', '/cashflow_report/insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportInsightsGet'), (('paths', '/cashflow_report/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportTransactionsGet'), (('paths', '/cashflow_report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportGet'), (('paths', '/cashflow_report/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportRefresh'), (('paths', '/sandbox/transactions/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransactionscreate'), (('paths', '/transactions/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionsrefresh'), (('paths', '/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionsget'), (('paths', '/auth/verify', 'post', 'externalDocs', 'url'), 'url', '/auth/coverage/database-auth/'), (('paths', '/auth/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/auth/#authget'), (('paths', '/network/status/get', 'post', 'externalDocs', 'url'), 'url', '/api/network/#networkstatusget'), (('paths', '/profile/network_status/get', 'post', 'externalDocs', 'url'), 'url', '/api/profile/#networkstatusget'), (('paths', '/user_account/session/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/layer/#user_accountsessionget'), (('paths', '/item/get', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemget'), (('paths', '/item/application/unlink', 'post', 'externalDocs', 'url'), 'url', 'none'), (('paths', '/consent/events/get', 'post', 'externalDocs', 'url'), 'url', '/api/consent/#consenteventsget'), (('paths', '/statements/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/statements#statementsrefresh'), (('paths', '/statements/download', 'post', 'externalDocs', 'url'), 'url', '/api/products/statements#statementsdownload'), (('paths', '/statements/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/statements#statementslist'), (('paths', '/oauth/revoke', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#oauthrevoke'), (('paths', '/oauth/introspect', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#oauthintrospect'), (('paths', '/oauth/token', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#oauthtoken'), (('paths', '/consumer_report/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/unregister', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/update', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/register', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/applications/register', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/check_report/verification/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportverificationget'), (('paths', '/cra/check_report/network_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportnetwork_insightsget'), (('paths', '/cra/check_report/cashflow_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportcashflow_insightsget'), (('paths', '/cra/check_report/partner_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportpartner_insightsget'), (('paths', '/cra/check_report/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportcreate'), (('paths', '/cra/check_report/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportpdfget'), (('paths', '/cra/check_report/base_report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportbase_reportget'), (('paths', '/cra/check_report/income_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportincome_insightsget'), (('paths', '/cra/partner_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#crapartner_insightsget'), (('paths', '/credit/audit_copy_token/update', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/monitoring_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cramonitoring_insightsget'), (('paths', '/cra/monitoring_insights/unsubscribe', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cramonitoring_insightsunsubscribe'), (('paths', '/cra/monitoring_insights/subscribe', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cramonitoring_insightssubscribe'), (('paths', '/asset_report/audit_copy/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportaudit_copyremove'), (('paths', '/asset_report/audit_copy/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/asset_report/audit_copy/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportaudit_copycreate'), (('paths', '/asset_report/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportremove'), (('paths', '/asset_report/filter', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportfilter'), (('paths', '/asset_report/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportrefresh'), (('paths', '/asset_report/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportpdfget'), (('paths', '/asset_report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportget'), (('paths', '/asset_report/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportcreate')]",
    "severity": 3,
    "code": "found-relative-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "relativeRefsCount": "296"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 11 absolute http references: [(('paths', '/watchlist_screening/entity/update', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/list', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'entity_watchlist_screenings', 0, 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/hit/list', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'entity_watchlist_screening_hits', 0, 'data', 'urls', 0, 'data', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/history/list', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'entity_watchlist_screenings', 0, 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/get', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/create', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/institutions/get_by_id', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'institution', 'url'), 'url', 'https://plaid.com'), (('servers', 1, 'url'), 'url', 'https://sandbox.plaid.com'), (('servers', 0, 'url'), 'url', 'https://production.plaid.com'), (('info', 'termsOfService'), 'termsOfService', 'https://plaid.com/legal/'), (('info', 'contact', 'url'), 'url', 'https://plaid.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "11"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'clientId' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'plaidVersion' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'secret' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismFirstDetectVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismFirstDetectVersion",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismDetectVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismDetectVersion",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismCashScoreVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismCashScoreVersion",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismCashScoreVersion.enum.2]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismCashScoreVersion",
        "enum",
        2
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismExtendVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismExtendVersion",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismInsightsVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismInsightsVersion",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismInsightsVersion.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismInsightsVersion",
        "enum",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AccountProductAccessNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AccountProductAccessNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScopesNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScopesNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ItemStatusNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ItemStatusNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AddressDataNullableNoRequiredFields.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AddressDataNullableNoRequiredFields",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.IdentityVerificationListRequest.properties.user_id.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "IdentityVerificationListRequest",
        "properties",
        "user_id",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersACHNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersACHNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersEFTNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersEFTNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersInternationalNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersInternationalNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersBACSNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersBACSNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.RecipientBACSNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RecipientBACSNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.PaymentInitiationOptionalRestrictionBacs.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PaymentInitiationOptionalRestrictionBacs",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ExternalPaymentScheduleGet.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ExternalPaymentScheduleGet",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.SenderBACSNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "SenderBACSNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"null\". [path: components.schemas.TransferAuthorizationDecisionRationaleCode.enum.8]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TransferAuthorizationDecisionRationaleCode",
        "enum",
        8
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AddressDataNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AddressDataNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetRetirementIndicator.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetRetirementIndicator",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetRetirementIndicator.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetRetirementIndicator",
        "enum",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetEmployerSponsoredIndicator.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetEmployerSponsoredIndicator",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetEmployerSponsoredIndicator.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetEmployerSponsoredIndicator",
        "enum",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetHolding.properties.AssetHoldingRestrictedIndicator.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetHolding",
        "properties",
        "AssetHoldingRestrictedIndicator",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetHolding.properties.AssetHoldingRestrictedIndicator.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetHolding",
        "properties",
        "AssetHoldingRestrictedIndicator",
        "enum",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AddressNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AddressNullable",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"null\". [path: components.schemas.PayFrequencyValue.enum.5]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PayFrequencyValue",
        "enum",
        5
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/create.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/create",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/pdf/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/pdf/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/filter.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/filter",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/remove.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/remove",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/audit_copy/create.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/audit_copy/create",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/audit_copy/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/audit_copy/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/audit_copy/remove.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/audit_copy/remove",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/monitoring_insights/subscribe.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/monitoring_insights/subscribe",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/monitoring_insights/unsubscribe.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/monitoring_insights/unsubscribe",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/monitoring_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/monitoring_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./credit/audit_copy_token/update.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credit/audit_copy_token/update",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/partner_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/partner_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/income_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/income_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/base_report/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/base_report/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/pdf/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/pdf/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/create.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/create",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/partner_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/partner_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/cashflow_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/cashflow_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/network_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/network_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/verification/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/verification/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/applications/register.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/applications/register",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/register.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/register",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/update.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/update",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/unregister.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/unregister",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./consumer_report/pdf/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/consumer_report/pdf/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./oauth/token.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/token",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./oauth/introspect.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/introspect",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./oauth/revoke.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/revoke",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./statements/list.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/statements/list",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./statements/download.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/statements/download",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./statements/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/statements/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./consent/events/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/consent/events/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/activity/list.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/activity/list",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./item/activity/list.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/activity/list",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/application/list.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/application/list",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/application/unlink.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/application/unlink",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/application/scopes/update.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/application/scopes/update",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./application/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/application/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./item/get.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/get",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./user_account/session/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user_account/session/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./profile/network_status/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/profile/network_status/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./network/status/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/network/status/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./auth/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/auth/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./auth/verify.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/auth/verify",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'account_owner' is undefined. [path: components.schemas.Transaction.allOf.1.required.0]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'pending_transaction_id' is undefined. [path: components.schemas.Transaction.allOf.1.required.1]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'payment_meta' is undefined. [path: components.schemas.Transaction.allOf.1.required.3]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        3
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'name' is undefined. [path: components.schemas.Transaction.allOf.1.required.4]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        4
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'location' is undefined. [path: components.schemas.Transaction.allOf.1.required.5]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        5
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/transactions/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/transactions/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/recurring/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/recurring/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/sync.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/sync",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/enrich.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/enrich",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./user/transactions/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user/transactions/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./user/financial_data/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user/financial_data/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./institutions/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/institutions/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./institutions/search.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/institutions/search",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./institutions/get_by_id.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/institutions/get_by_id",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/remove.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/remove",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./accounts/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/accounts/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./categories/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/categories/get",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 296 relative references: [(('paths', '/network_insights/report/get', 'post', 'externalDocs', 'url'), 'url', '/api/network_insights/report/#get'), (('paths', '/fdx/notifications', 'post', 'externalDocs', 'url'), 'url', '/api/fdx/notifications/#post'), (('paths', '/link_delivery/get', 'post', 'externalDocs', 'url'), 'url', '/assets/waitlist/hosted-link/'), (('paths', '/link_delivery/create', 'post', 'externalDocs', 'url'), 'url', '/assets/waitlist/hosted-link/'), (('paths', '/partner/customer/oauth_institutions/get', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomeroauth_institutionsget'), (('paths', '/partner/customer/remove', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomerremove'), (('paths', '/partner/customer/enable', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomerenable'), (('paths', '/partner/customer/get', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomerget'), (('paths', '/partner/customer/create', 'post', 'externalDocs', 'url'), 'url', '/api/partner/#partnercustomercreate'), (('paths', '/payment_profile/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#payment_profileremove'), (('paths', '/payment_profile/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#payment_profileget'), (('paths', '/payment_profile/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#payment_profilecreate'), (('paths', '/issues/subscribe', 'post', 'externalDocs', 'url'), 'url', '/api/products/issues/#issuessubscribe'), (('paths', '/issues/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/issues/#issuesget'), (('paths', '/issues/search', 'post', 'externalDocs', 'url'), 'url', '/api/products/issues#issuessearch'), (('paths', '/beta/transactions/user_insights/v1/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/enrich/#userinsightsget'), (('paths', '/wallet/transaction/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#wallettransactionlist'), (('paths', '/wallet/transaction/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#wallettransactionget'), (('paths', '/wallet/transaction/execute', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#wallettransactionexecute'), (('paths', '/wallet/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#walletlist'), (('paths', '/wallet/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#walletget'), (('paths', '/wallet/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/virtual-accounts/#walletcreate'), (('paths', '/signal/prepare', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signalprepare'), (('paths', '/signal/return/report', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signalreturnreport'), (('paths', '/signal/decision/report', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signaldecisionreport'), (('paths', '/signal/schedule', 'post', 'externalDocs', 'url'), 'url', 'none'), (('paths', '/signal/evaluate', 'post', 'externalDocs', 'url'), 'url', '/api/products/signal#signalevaluate'), (('paths', '/sandbox/cra/cashflow_updates/update', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxcracashflow_updatesupdate'), (('paths', '/sandbox/bank_income/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxbankincomefire_webhook'), (('paths', '/sandbox/income/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxincomefire_webhook'), (('paths', '/sandbox/bank_transfer/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference/#sandboxbank_transferfire_webhook'), (('paths', '/credit/relay/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelayremove'), (('paths', '/credit/relay/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelayrefresh'), (('paths', '/credit/relay/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelaypdfget'), (('paths', '/credit/relay/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelayget'), (('paths', '/credit/relay/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#creditrelaycreate'), (('paths', '/credit/payroll_income/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomerefresh'), (('paths', '/credit/employment/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditemploymentget'), (('paths', '/credit/payroll_income/precheck', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomeprecheck'), (('paths', '/credit/payroll_income/risk_signals/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomerisk_signalsget'), (('paths', '/credit/payroll_income/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomeget'), (('paths', '/credit/bank_statements/uploads/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_statementsuploadsget'), (('paths', '/credit/payroll_income/parsing_config/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditpayroll_incomeparsing_configupdate'), (('paths', '/credit/bank_income/webhook/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomewebhookupdate'), (('paths', '/credit/bank_income/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomerefresh'), (('paths', '/credit/bank_income/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomepdfget'), (('paths', '/credit/bank_income/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_incomeget'), (('paths', '/beta/credit/v1/bank_employment/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditbank_employmentget'), (('paths', '/credit/freddie_mac/reports/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/credit/asset_report/freddie_mac/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/credit/audit_copy_token/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditaudit_copy_tokenremove'), (('paths', '/credit/audit_copy_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditaudit_copy_tokencreate'), (('paths', '/employment/verification/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#employmentverificationget'), (('paths', '/income/verification/precheck', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationprecheck'), (('paths', '/income/verification/taxforms/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationtaxformsget'), (('paths', '/income/verification/documents/download', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationdocumentsdownload'), (('paths', '/income/verification/paystubs/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationpaystubsget'), (('paths', '/income/verification/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#incomeverificationcreate'), (('paths', '/employers/search', 'post', 'externalDocs', 'url'), 'url', '/api/employers/#employerssearch'), (('paths', '/sandbox/payment/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxpaymentsimulate'), (('paths', '/sandbox/payment_profile/reset_login', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxpayment_profilereset_login'), (('paths', '/sandbox/transfer/test_clock/list', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clocklist'), (('paths', '/sandbox/transfer/test_clock/get', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clockget'), (('paths', '/sandbox/transfer/test_clock/advance', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clockadvance'), (('paths', '/sandbox/transfer/test_clock/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfertest_clockcreate'), (('paths', '/sandbox/transfer/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferfire_webhook'), (('paths', '/sandbox/transfer/repayment/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferrepaymentsimulate'), (('paths', '/sandbox/transfer/ledger/withdraw/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferledgerwithdrawsimulate'), (('paths', '/sandbox/transfer/ledger/deposit/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferledgerdepositsimulate'), (('paths', '/sandbox/transfer/ledger/simulate_available', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferledgersimulate_available'), (('paths', '/sandbox/transfer/refund/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransferrefundsimulate'), (('paths', '/sandbox/transfer/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfersimulate'), (('paths', '/sandbox/transfer/sweep/simulate', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransfersweepsimulate'), (('paths', '/sandbox/bank_transfer/simulate', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference/#sandboxbank_transfersimulate'), (('paths', '/transfer/platform/person/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform/#transferplatformpersoncreate'), (('paths', '/transfer/platform/originator/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform/originator/#transferplatformoriginatorcreate'), (('paths', '/transfer/refund/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/refunds/#transferrefundcancel'), (('paths', '/transfer/refund/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/refunds/#transferrefundget'), (('paths', '/transfer/refund/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/refunds/#transferrefundcreate'), (('paths', '/transfer/originator/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorlist'), (('paths', '/transfer/originator/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorget'), (('paths', '/transfer/diligence/document/upload', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferdiligencedocumentupload'), (('paths', '/transfer/diligence/submit', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferdiligencesubmit'), (('paths', '/transfer/questionnaire/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferquestionnairecreate'), (('paths', '/transfer/originator/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorcreate'), (('paths', '/transfer/platform/requirement/submit', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferplatformrequirementsubmit'), (('paths', '/transfer/repayment/return/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#transferrepaymentreturnlist'), (('paths', '/transfer/repayment/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#transferrepaymentlist'), (('paths', '/transfer/intent/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transferintentget'), (('paths', '/transfer/intent/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transferintentcreate'), (('paths', '/transfer/migrate_account', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transfermigrate_account'), (('paths', '/bank_transfer/migrate_account', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transfermigrate_account'), (('paths', '/bank_transfer/balance/get', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transferbalanceget'), (('paths', '/bank_transfer/sweep/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#bank_transfersweeplist'), (('paths', '/transfer/sweep/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfersweeplist'), (('paths', '/bank_transfer/sweep/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/#bank_transfersweepget'), (('paths', '/transfer/sweep/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfersweepget'), (('paths', '/bank_transfer/event/sync', 'post', 'externalDocs', 'url'), 'url', '/api/products/auth/#bank_transfereventsync'), (('paths', '/transfer/event/sync', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfereventsync'), (('paths', '/bank_transfer/event/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/auth#bank_transfereventlist'), (('paths', '/transfer/ledger/event/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgereventlist'), (('paths', '/transfer/event/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transfereventlist'), (('paths', '/bank_transfer/cancel', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transfercancel'), (('paths', '/transfer/recurring/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringcancel'), (('paths', '/transfer/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transfercancel'), (('paths', '/bank_transfer/list', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transferlist'), (('paths', '/transfer/recurring/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringlist'), (('paths', '/transfer/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transferlist'), (('paths', '/bank_transfer/create', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transfercreate'), (('paths', '/transfer/recurring/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringcreate'), (('paths', '/transfer/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transfercreate'), (('paths', '/transfer/metrics/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/metrics/#transfermetricsget'), (('paths', '/transfer/originator/funding_account/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorfunding_accountcreate'), (('paths', '/transfer/originator/funding_account/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/platform-payments/#transferoriginatorfunding_accountupdate'), (('paths', '/transfer/ledger/withdraw', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerwithdraw'), (('paths', '/transfer/ledger/deposit', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerdeposit'), (('paths', '/transfer/ledger/distribute', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerdistribute'), (('paths', '/transfer/ledger/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/ledger/#transferledgerget'), (('paths', '/transfer/configuration/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/metrics/#transferconfigurationget'), (('paths', '/transfer/capabilities/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/account-linking/#transfercapabilitiesget'), (('paths', '/transfer/balance/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/balance/#transferbalanceget'), (('paths', '/transfer/authorization/cancel', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transferauthorizationcancel'), (('paths', '/transfer/authorization/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/initiating-transfers/#transferauthorizationcreate'), (('paths', '/bank_transfer/get', 'post', 'externalDocs', 'url'), 'url', '/bank-transfers/reference#bank_transferget'), (('paths', '/transfer/recurring/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/recurring-transfers/#transferrecurringget'), (('paths', '/transfer/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transfer/reading-transfers/#transferget'), (('paths', '/session/token/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/layer/#sessiontokencreate'), (('paths', '/link/oauth/correlation_id/exchange', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#linkcorrelationid'), (('paths', '/link/token/get', 'post', 'externalDocs', 'url'), 'url', '/api/link/#linktokenget'), (('paths', '/link/token/create', 'post', 'externalDocs', 'url'), 'url', '/api/link/#linktokencreate'), (('paths', '/processor/apex/processor_token/create', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/processor/stripe/bank_account_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processorstripebank_account_tokencreate'), (('paths', '/processor/token/webhook/update', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortokenwebhookupdate'), (('paths', '/processor/token/permissions/get', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processortokenpermissionsget'), (('paths', '/processor/token/permissions/set', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processortokenpermissionsset'), (('paths', '/processor/token/create', 'post', 'externalDocs', 'url'), 'url', '/api/processors/#processortokencreate'), (('paths', '/investments/auth/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments-move/#investmentsauthget'), (('paths', '/investments/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments/#investmentsrefresh'), (('paths', '/investments/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments/#investmentstransactionsget'), (('paths', '/investments/holdings/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/investments/#investmentsholdingsget'), (('paths', '/payment_initiation/payment/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentlist'), (('paths', '/payment_initiation/payment/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentget'), (('paths', '/credit/sessions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#creditsessionsget'), (('paths', '/user/third_party_token/remove', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userthirdpartytokenremove'), (('paths', '/user/third_party_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userthirdpartytokencreate'), (('paths', '/user/items/list', 'post', 'externalDocs', 'url'), 'url', '/api/users/#useritemslist'), (('paths', '/user/items/get', 'post', 'externalDocs', 'url'), 'url', '/api/users/#useritemsget'), (('paths', '/user/remove', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userremove'), (('paths', '/user/update', 'post', 'externalDocs', 'url'), 'url', '/api/users/#userupdate'), (('paths', '/user/create', 'post', 'externalDocs', 'url'), 'url', '/api/users/#usercreate'), (('paths', '/item/public_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/link/#itempublic_tokencreate'), (('paths', '/item/public_token/exchange', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itempublic_tokenexchange'), (('paths', '/sandbox/user/reset_login', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxuserreset_login'), (('paths', '/sandbox/item/set_verification_status', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxitemset_verification_status'), (('paths', '/sandbox/item/reset_login', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxitemreset_login'), (('paths', '/payment_initiation/consent/payment/execute', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentpaymentexecute'), (('paths', '/payment_initiation/consent/revoke', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentrevoke'), (('paths', '/payment_initiation/consent/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentget'), (('paths', '/payment_initiation/consent/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationconsentcreate'), (('paths', '/payment_initiation/payment/token/create', 'post', 'externalDocs', 'url'), 'url', '/link/maintain-legacy-integration/#creating-a-payment-token'), (('paths', '/payment_initiation/payment/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentcreate'), (('paths', '/payment_initiation/recipient/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationrecipientlist'), (('paths', '/payment_initiation/recipient/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationrecipientget'), (('paths', '/payment_initiation/payment/reverse', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationpaymentreverse'), (('paths', '/payment_initiation/recipient/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/payment-initiation/#payment_initiationrecipientcreate'), (('paths', '/liabilities/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/liabilities/#liabilitiesget'), (('paths', '/webhook_verification_key/get', 'post', 'externalDocs', 'url'), 'url', '/api/webhooks/webhook-verification/#get-webhook-verification-key'), (('paths', '/item/access_token/invalidate', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemaccess_tokeninvalidate'), (('paths', '/item/webhook/update', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemwebhookupdate'), (('paths', '/processor/balance/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorbalanceget'), (('paths', '/processor/identity/match', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processoridentitymatch'), (('paths', '/processor/identity/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processoridentityget'), (('paths', '/processor/liabilities/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorliabilitiesget'), (('paths', '/processor/bank_transfer/create', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#bank_transfercreate'), (('paths', '/processor/signal/prepare', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignalprepare'), (('paths', '/processor/signal/return/report', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignalreturnreport'), (('paths', '/processor/signal/decision/report', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignaldecisionreport'), (('paths', '/processor/signal/evaluate', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorsignalevaluate'), (('paths', '/processor/transactions/recurring/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionsrecurringget'), (('paths', '/processor/transactions/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionsrefresh'), (('paths', '/processor/transactions/sync', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionssync'), (('paths', '/processor/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processortransactionsget'), (('paths', '/processor/investments/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorinvestmentstransactionsget'), (('paths', '/processor/investments/holdings/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorinvestmentsholdingsget'), (('paths', '/processor/account/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processoraccountget'), (('paths', '/processor/auth/get', 'post', 'externalDocs', 'url'), 'url', '/api/processor-partners/#processorauthget'), (('paths', '/protect/event/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/protect/#protecteventget'), (('paths', '/protect/event/send', 'post', 'externalDocs', 'url'), 'url', '/api/products/protect/#protecteventsend'), (('paths', '/protect/user/insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/protect/#protectuserinsightsget'), (('paths', '/beacon/user/account_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuseraccount_insightsget'), (('paths', '/beacon/user/history/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserhistorylist'), (('paths', '/identity_verification/autofill/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationautofillcreate'), (('paths', '/beacon/duplicate/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconduplicateget'), (('paths', '/beacon/user/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserupdate'), (('paths', '/beacon/report_syndication/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreport_syndicationget'), (('paths', '/beacon/report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreportget'), (('paths', '/beacon/report_syndication/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreport_syndicationlist'), (('paths', '/beacon/report/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreportlist'), (('paths', '/beacon/report/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconreportcreate'), (('paths', '/beacon/user/review', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserreview'), (('paths', '/beacon/user/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconuserget'), (('paths', '/beacon/user/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/beacon/#beaconusercreate'), (('paths', '/beacon/account_risk/v1/evaluate', 'post', 'externalDocs', 'url'), 'url', 'none'), (('paths', '/watchlist_screening/individual/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualupdate'), (('paths', '/watchlist_screening/individual/review/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualreviewlist'), (('paths', '/watchlist_screening/individual/review/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualreviewcreate'), (('paths', '/watchlist_screening/individual/program/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualprogramlist'), (('paths', '/watchlist_screening/individual/program/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualprogramget'), (('paths', '/watchlist_screening/individual/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividuallist'), (('paths', '/watchlist_screening/individual/hit/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualhitlist'), (('paths', '/watchlist_screening/individual/history/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualhistorylist'), (('paths', '/watchlist_screening/individual/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualget'), (('paths', '/watchlist_screening/individual/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningindividualcreate'), (('paths', '/watchlist_screening/entity/update', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityupdate'), (('paths', '/watchlist_screening/entity/review/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityreviewlist'), (('paths', '/watchlist_screening/entity/review/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityreviewcreate'), (('paths', '/watchlist_screening/entity/program/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityprogramlist'), (('paths', '/watchlist_screening/entity/program/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityprogramget'), (('paths', '/watchlist_screening/entity/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentitylist'), (('paths', '/watchlist_screening/entity/hit/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityhitlist'), (('paths', '/watchlist_screening/entity/history/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityhistorylist'), (('paths', '/watchlist_screening/entity/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentityget'), (('paths', '/watchlist_screening/entity/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/monitor/#watchlist_screeningentitycreate'), (('paths', '/identity_verification/retry', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationretry'), (('paths', '/identity_verification/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationlist'), (('paths', '/identity_verification/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationget'), (('paths', '/identity_verification/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity-verification/#identity_verificationcreate'), (('paths', '/dashboard_user/list', 'post', 'externalDocs', 'url'), 'url', '/api/kyc-aml-users/#dashboard_userlist'), (('paths', '/dashboard_user/get', 'post', 'externalDocs', 'url'), 'url', '/api/kyc-aml-users/#dashboard_userget'), (('paths', '/identity/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identityrefresh'), (('paths', '/identity/match', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identitymatch'), (('paths', '/identity/documents/uploads/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identitydocumentsuploadsget'), (('paths', '/identity/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/identity/#identityget'), (('paths', '/accounts/balance/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/balance/#accountsbalanceget'), (('paths', '/sandbox/item/fire_webhook', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxitemfire_webhook'), (('paths', '/sandbox/public_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxpublic_tokencreate'), (('paths', '/sandbox/processor_token/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxprocessor_tokencreate'), (('paths', '/categories/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#categoriesget'), (('paths', '/accounts/get', 'post', 'externalDocs', 'url'), 'url', '/api/accounts/#accountsget'), (('paths', '/item/remove', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemremove'), (('paths', '/institutions/get_by_id', 'post', 'externalDocs', 'url'), 'url', '/api/institutions/#institutionsget_by_id'), (('paths', '/institutions/search', 'post', 'externalDocs', 'url'), 'url', '/api/institutions/#institutionssearch'), (('paths', '/institutions/get', 'post', 'externalDocs', 'url'), 'url', '/api/institutions/#institutionsget'), (('paths', '/user/financial_data/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#userfinancialdatarefresh'), (('paths', '/user/transactions/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#usertransactionsrefresh'), (('paths', '/transactions/enrich', 'post', 'externalDocs', 'url'), 'url', '/api/products/enrich/#transactionsenrich'), (('paths', '/transactions/sync', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionssync'), (('paths', '/transactions/recurring/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionsrecurringget'), (('paths', '/cashflow_report/insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportInsightsGet'), (('paths', '/cashflow_report/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportTransactionsGet'), (('paths', '/cashflow_report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportGet'), (('paths', '/cashflow_report/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#cashflowReportRefresh'), (('paths', '/sandbox/transactions/create', 'post', 'externalDocs', 'url'), 'url', '/api/sandbox/#sandboxtransactionscreate'), (('paths', '/transactions/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionsrefresh'), (('paths', '/transactions/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/transactions/#transactionsget'), (('paths', '/auth/verify', 'post', 'externalDocs', 'url'), 'url', '/auth/coverage/database-auth/'), (('paths', '/auth/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/auth/#authget'), (('paths', '/network/status/get', 'post', 'externalDocs', 'url'), 'url', '/api/network/#networkstatusget'), (('paths', '/profile/network_status/get', 'post', 'externalDocs', 'url'), 'url', '/api/profile/#networkstatusget'), (('paths', '/user_account/session/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/layer/#user_accountsessionget'), (('paths', '/item/get', 'post', 'externalDocs', 'url'), 'url', '/api/items/#itemget'), (('paths', '/item/application/unlink', 'post', 'externalDocs', 'url'), 'url', 'none'), (('paths', '/consent/events/get', 'post', 'externalDocs', 'url'), 'url', '/api/consent/#consenteventsget'), (('paths', '/statements/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/statements#statementsrefresh'), (('paths', '/statements/download', 'post', 'externalDocs', 'url'), 'url', '/api/products/statements#statementsdownload'), (('paths', '/statements/list', 'post', 'externalDocs', 'url'), 'url', '/api/products/statements#statementslist'), (('paths', '/oauth/revoke', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#oauthrevoke'), (('paths', '/oauth/introspect', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#oauthintrospect'), (('paths', '/oauth/token', 'post', 'externalDocs', 'url'), 'url', '/api/oauth/#oauthtoken'), (('paths', '/consumer_report/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/unregister', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/update', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/register', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/loans/applications/register', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/check_report/verification/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportverificationget'), (('paths', '/cra/check_report/network_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportnetwork_insightsget'), (('paths', '/cra/check_report/cashflow_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportcashflow_insightsget'), (('paths', '/cra/check_report/partner_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportpartner_insightsget'), (('paths', '/cra/check_report/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportcreate'), (('paths', '/cra/check_report/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportpdfget'), (('paths', '/cra/check_report/base_report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportbase_reportget'), (('paths', '/cra/check_report/income_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cracheck_reportincome_insightsget'), (('paths', '/cra/partner_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/income/#crapartner_insightsget'), (('paths', '/credit/audit_copy_token/update', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/cra/monitoring_insights/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cramonitoring_insightsget'), (('paths', '/cra/monitoring_insights/unsubscribe', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cramonitoring_insightsunsubscribe'), (('paths', '/cra/monitoring_insights/subscribe', 'post', 'externalDocs', 'url'), 'url', '/api/products/check/#cramonitoring_insightssubscribe'), (('paths', '/asset_report/audit_copy/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportaudit_copyremove'), (('paths', '/asset_report/audit_copy/get', 'post', 'externalDocs', 'url'), 'url', '/none/'), (('paths', '/asset_report/audit_copy/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportaudit_copycreate'), (('paths', '/asset_report/remove', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportremove'), (('paths', '/asset_report/filter', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportfilter'), (('paths', '/asset_report/refresh', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportrefresh'), (('paths', '/asset_report/pdf/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportpdfget'), (('paths', '/asset_report/get', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportget'), (('paths', '/asset_report/create', 'post', 'externalDocs', 'url'), 'url', '/api/products/assets/#asset_reportcreate')]",
    "severity": 3,
    "code": "found-relative-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "relativeRefsCount": "296"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 11 absolute http references: [(('paths', '/watchlist_screening/entity/update', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/list', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'entity_watchlist_screenings', 0, 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/hit/list', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'entity_watchlist_screening_hits', 0, 'data', 'urls', 0, 'data', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/history/list', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'entity_watchlist_screenings', 0, 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/get', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/watchlist_screening/entity/create', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'search_terms', 'url'), 'url', 'https://example.com'), (('paths', '/institutions/get_by_id', 'post', 'responses', '200', 'content', 'application/json', 'examples', 'example-1', 'value', 'institution', 'url'), 'url', 'https://plaid.com'), (('servers', 1, 'url'), 'url', 'https://sandbox.plaid.com'), (('servers', 0, 'url'), 'url', 'https://production.plaid.com'), (('info', 'termsOfService'), 'termsOfService', 'https://plaid.com/legal/'), (('info', 'contact', 'url'), 'url', 'https://plaid.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "11"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'clientId' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'plaidVersion' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'secret' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismFirstDetectVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismFirstDetectVersion",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismDetectVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismDetectVersion",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismCashScoreVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismCashScoreVersion",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismCashScoreVersion.enum.2]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismCashScoreVersion",
        "enum",
        2
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismExtendVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismExtendVersion",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismInsightsVersion.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismInsightsVersion",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.PrismInsightsVersion.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PrismInsightsVersion",
        "enum",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AccountProductAccessNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AccountProductAccessNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScopesNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScopesNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ItemStatusNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ItemStatusNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AddressDataNullableNoRequiredFields.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AddressDataNullableNoRequiredFields",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.IdentityVerificationListRequest.properties.user_id.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "IdentityVerificationListRequest",
        "properties",
        "user_id",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersACHNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersACHNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersEFTNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersEFTNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersInternationalNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersInternationalNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.NumbersBACSNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "NumbersBACSNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.RecipientBACSNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RecipientBACSNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.PaymentInitiationOptionalRestrictionBacs.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PaymentInitiationOptionalRestrictionBacs",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ExternalPaymentScheduleGet.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ExternalPaymentScheduleGet",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.SenderBACSNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "SenderBACSNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"null\". [path: components.schemas.TransferAuthorizationDecisionRationaleCode.enum.8]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TransferAuthorizationDecisionRationaleCode",
        "enum",
        8
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AddressDataNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AddressDataNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetRetirementIndicator.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetRetirementIndicator",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetRetirementIndicator.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetRetirementIndicator",
        "enum",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetEmployerSponsoredIndicator.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetEmployerSponsoredIndicator",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetDetail.properties.AssetEmployerSponsoredIndicator.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetDetail",
        "properties",
        "AssetEmployerSponsoredIndicator",
        "enum",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetHolding.properties.AssetHoldingRestrictedIndicator.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetHolding",
        "properties",
        "AssetHoldingRestrictedIndicator",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"boolean\". [path: components.schemas.AssetHolding.properties.AssetHoldingRestrictedIndicator.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AssetHolding",
        "properties",
        "AssetHoldingRestrictedIndicator",
        "enum",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.AddressNullable.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AddressNullable",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"null\". [path: components.schemas.PayFrequencyValue.enum.5]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PayFrequencyValue",
        "enum",
        5
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/create.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/create",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/pdf/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/pdf/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/filter.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/filter",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/remove.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/remove",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/audit_copy/create.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/audit_copy/create",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/audit_copy/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/audit_copy/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./asset_report/audit_copy/remove.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/asset_report/audit_copy/remove",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/monitoring_insights/subscribe.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/monitoring_insights/subscribe",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/monitoring_insights/unsubscribe.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/monitoring_insights/unsubscribe",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/monitoring_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/monitoring_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./credit/audit_copy_token/update.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credit/audit_copy_token/update",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/partner_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/partner_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/income_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/income_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/base_report/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/base_report/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/pdf/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/pdf/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/create.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/create",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/partner_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/partner_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/cashflow_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/cashflow_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/network_insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/network_insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/check_report/verification/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/check_report/verification/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/applications/register.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/applications/register",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/register.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/register",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/update.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/update",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cra/loans/unregister.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cra/loans/unregister",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./consumer_report/pdf/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/consumer_report/pdf/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./oauth/token.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/token",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./oauth/introspect.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/introspect",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./oauth/revoke.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/revoke",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./statements/list.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/statements/list",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./statements/download.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/statements/download",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./statements/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/statements/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./consent/events/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/consent/events/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/activity/list.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/activity/list",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./item/activity/list.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/activity/list",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/application/list.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/application/list",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/application/unlink.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/application/unlink",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/application/scopes/update.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/application/scopes/update",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./application/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/application/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./item/get.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/get",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./user_account/session/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user_account/session/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./profile/network_status/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/profile/network_status/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./network/status/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/network/status/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./auth/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/auth/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./auth/verify.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/auth/verify",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'account_owner' is undefined. [path: components.schemas.Transaction.allOf.1.required.0]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'pending_transaction_id' is undefined. [path: components.schemas.Transaction.allOf.1.required.1]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'payment_meta' is undefined. [path: components.schemas.Transaction.allOf.1.required.3]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        3
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'name' is undefined. [path: components.schemas.Transaction.allOf.1.required.4]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        4
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Required property 'location' is undefined. [path: components.schemas.Transaction.allOf.1.required.5]",
    "severity": 2,
    "code": "no-required-schema-properties-undefined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Transaction",
        "allOf",
        1,
        "required",
        5
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/transactions/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/transactions/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./cashflow_report/insights/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/cashflow_report/insights/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/recurring/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/recurring/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/sync.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/sync",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./transactions/enrich.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/transactions/enrich",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./user/transactions/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user/transactions/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./user/financial_data/refresh.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user/financial_data/refresh",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./institutions/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/institutions/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./institutions/search.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/institutions/search",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./institutions/get_by_id.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/institutions/get_by_id",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./item/remove.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/item/remove",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./accounts/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/accounts/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./categories/get.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/categories/get",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]