{
  "openapi": "3.0.0",
  "info": {
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Finnhub API",
    "version": "1.0.0",
    "x-jentic-source-url": "https://raw.githubusercontent.com/sophie-jentic/openapi-specs/refs/heads/main/finnhub.io/swagger.json"
  },
  "servers": [
    {
      "url": "https://finnhub.io/api/v1"
    }
  ],
  "paths": {
    "/ai-chat": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIChatResponse",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Chat with our AI copilot powered by Neyman AI trained on the extensive Finnhub's global data. You can ask it any finance-related questions just like with other LLM models and receive results in texts and widgets.</p>",
        "examples": [
          {
            "text": "/ai-chat",
            "url": "/ai-chat?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "AI Copilot",
        "newEndpoint": null,
        "operationId": "ai-chat",
        "premium": "Premium Access Required",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIChatBody"
              }
            }
          },
          "description": "Search body"
        },
        "sampleCode": {
          "curl": "curl --request POST 'https://finnhub.io/api/v1/ai-chat?token=<token>' \\\n--data-raw '{\n    \"messages\": [\n            {\n                \"role\": \"system\",\n                \"content\": \"Be precise and concise.\"\n            },\n            {\n                \"role\": \"user\",\n                \"content\": \"What is the current price of NVDA?\"\n            }\n        ]\n}'",
          "javascript": "var raw = JSON.stringify({\n    \"messages\": [\n            {\n                \"role\": \"system\",\n                \"content\": \"Be precise and concise.\"\n            },\n            {\n                \"role\": \"user\",\n                \"content\": \"What is the current price of NVDA?\"\n            }\n        ]\n});\n\nvar requestOptions = {\n  method: 'POST',\n  body: raw,\n};\n\nfetch(\"https://finnhub.io/api/v1/ai-chat?token=<token>\", requestOptions)\n  .then(response => response.json())",
          "python": "import requests\nimport json\n\nurl = \"https://finnhub.io/api/v1/ai-chat?token=<token>\"\n\npayload = json.dumps({\n    \"messages\": [\n            {\n                \"role\": \"system\",\n                \"content\": \"Be precise and concise.\"\n            },\n            {\n                \"role\": \"user\",\n                \"content\": \"What is the current price of NVDA?\"\n            }\n        ]\n})\n\n\nresponse = requests.request(\"POST\", url, data=payload)\n\nprint(response.json())"
        },
        "sampleResponse": "{\n  \"chatId\": \"uQElLdY7vZ\",\n  \"content\": \"The current price of NVIDIA Corp (NVDA) is $124.92. The price has increased by 3.97% in the past 24 hours.\\n\",\n  \"querySummary\": \"NVDA Stock Price\",\n  \"relatedQueries\": [\n    \"What is NVDA's price target?\",\n    \"Is NVDA a good stock to buy?\",\n    \"What factors affect NVDA's price?\"\n  ],\n  \"sources\": [\n    {\n      \"link\": \"https://finnhub.io/docs/api\",\n      \"shortURL\": \"finnhub.io\",\n      \"snippet\": \"Comprehensive stock API for realtime market data, global company fundamentals, economic data, and alternative data...\",\n      \"title\": \"Finnhub API Documentation\",\n      \"websiteName\": \"Finnhub\"\n    }\n  ],\n  \"tickers\": [\n    {\n      \"priceCurrency\": \"USD\",\n      \"reportingCurrency\": \"USD\",\n      \"ticker\": \"NVDA\"\n    }\n  ],\n  \"widgets\": [\n    \"https://neyman.ai/widget?ticker=NVDA&which=historical-price\"\n  ]\n}",
        "section": "Enterprise data",
        "summary": "AI Copilot",
        "title": "AI Copilot",
        "urlId": "ai-copilot-llm",
        "widget": null
      }
    },
    "/airline/price-index": {
      "get": {
        "parameters": [
          {
            "description": "Filter data by airline. Accepted values: <code>united</code>,<code>delta</code>,<code>american_airlines</code>,<code>southwest</code>,<code>southern_airways_express</code>,<code>alaska_airlines</code>,<code>frontier_airlines</code>,<code>jetblue_airways</code>,<code>spirit_airlines</code>,<code>sun_country_airlines</code>,<code>breeze_airways</code>,<code>hawaiian_airlines</code>",
            "in": "query",
            "name": "airline",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirlinePriceIndexData",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>The Flight Ticket Price Index API provides comprehensive data on airline ticket prices, including the average daily ticket price and its percentage change (price index). This data, collected weekly and projected two weeks ahead, aggregates daily prices and indexes from the 50 busiest and largest airports across the USA. The dataset includes detailed information on airlines, dates, and average ticket prices, offering valuable insights for market analysis and pricing strategies.</p><p>The price index is calculated as percentage change of average daily ticket price from the previous weekly reading. Raw ticket prices data is available for Enterprise users. <a href=\"mailto:support@finnhub.io\">Contact us</a> to inquire about the raw price data.</p>",
        "examples": [
          {
            "text": "/airline/price-index?airline=united&from=2024-06-01&to=2024-07-15",
            "url": "/airline/price-index?airline=united&from=2024-06-01&to=2024-07-15&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Airline Price Index",
        "newEndpoint": null,
        "operationId": "airline-price-index",
        "premium": "Accessible with Fundamental data or All in One subscription.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.AirlinePriceIndex(context.Background()).Airline(\"united\").From(\"2024-06-01\").To(\"2024-07-10\").Execute()",
          "javascript": "finnhubClient.airlinePriceIndex(\"united\", \"2024-06-01\", \"2024-07-10\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.airlinePriceIndex(\"united\", from = \"2024-06-01\", to = \"2024-07-10\"))",
          "php": "print_r($client->airlinePriceIndex(\"united\", \"2024-06-01\", \"2024-07-10\"));",
          "python": "print(finnhub_client.airline_price_index('united', _from=\"2024-06-01\", to=\"2024-07-10\"))",
          "ruby": "puts(finnhub_client.airline_price_index('united', \"2024-06-01\", \"2024-07-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"airline\": \"united\",\n      \"date\": \"2024-06-17\",\n      \"priceIndex\": 0.832755,\n      \"dailyAvgPrice\": 360.918\n    },\n    {\n      \"airline\": \"united\",\n      \"date\": \"2024-06-19\",\n      \"priceIndex\": 0.850855,\n      \"dailyAvgPrice\": 307.089\n    },\n    {\n      \"airline\": \"united\",\n      \"date\": \"2024-06-20\",\n      \"priceIndex\": 1.33928,\n      \"dailyAvgPrice\": 411.278\n    },\n    {\n      \"airline\": \"united\",\n      \"date\": \"2024-06-21\",\n      \"priceIndex\": 1.0872,\n      \"dailyAvgPrice\": 447.143\n    },\n    {\n      \"airline\": \"united\",\n      \"date\": \"2024-06-22\",\n      \"priceIndex\": 0.994883,\n      \"dailyAvgPrice\": 444.855\n    },\n    {\n      \"airline\": \"united\",\n      \"date\": \"2024-06-23\",\n      \"priceIndex\": 1,\n      \"dailyAvgPrice\": 784.301\n    },\n    {\n      \"airline\": \"united\",\n      \"date\": \"2024-06-24\",\n      \"priceIndex\": 0.857554,\n      \"dailyAvgPrice\": 672.58\n    }\n  ],\n  \"from\": \"2024-04-04\",\n  \"to\": \"2024-07-10\",\n  \"airline\": \"united\"\n}",
        "section": "Alternative Data",
        "summary": "Airline Price Index",
        "title": "Airline Ticket Price Index API",
        "urlId": "airline-price-index",
        "widget": null
      }
    },
    "/bank-branch": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankBranchRes",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Retrieve list of US bank branches information for a given symbol.",
        "examples": [
          {
            "text": "/bank-branch?symbol=JPM",
            "url": "/bank-branch?symbol=JPM&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Bank Branch API",
        "newEndpoint": null,
        "operationId": "bank-branch",
        "premium": "Accessible with Fundamental or All in One subscription.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.BankBranch(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.bankBranch(\"JPM\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.bankBranch(\"JPM\"))",
          "php": "print_r($client->bankBranch(\"JPM\"));",
          "python": "print(finnhub_client.bank_branch(\"JPM\"))",
          "ruby": "puts(finnhub_client.bank_branch('JPM'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"branchId\": \"201601\",\n      \"address\": \"1910 E 95th St\",\n      \"state\": \"IL\",\n      \"zipCode\": \"60617\",\n      \"date\": \"2000-02-28\"\n    },\n    {\n      \"branchId\": \"359157\",\n      \"address\": \"401 W 49th St\",\n      \"state\": \"FL\",\n      \"zipCode\": \"33012\",\n      \"date\": \"2000-02-01\"\n    }\n  ],\n  \"symbol\": \"JPM\"\n}",
        "section": "Alternative Data",
        "summary": "Bank Branch List",
        "title": "Bank Branch API",
        "urlId": "bank-branch-api",
        "widget": null
      }
    },
    "/bond/price": {
      "get": {
        "parameters": [
          {
            "description": "ISIN.",
            "in": "query",
            "name": "isin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UNIX timestamp. Interval initial value.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "UNIX timestamp. Interval end value.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BondCandles",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get bond's price data. The following datasets are supported:</p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Exchange</th>\n      <th>Segment</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n  <tr>\n      <td class=\"text-blue\">US Government Bonds</th>\n      <td>Government Bonds</td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>BTDS: US Corporate Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>144A Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n  </tbody>\n</table>",
        "examples": [
          {
            "text": "/bond/price?isin=US912810TD00&from=1590988249&to=1649099548",
            "url": "/bond/price?isin=US912810TD00&from=1590988249&to=1649099548&token=<token>"
          }
        ],
        "highUsage": null,
        "navHeader": "Bond Price",
        "newEndpoint": null,
        "operationId": "bond-price",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.BondPrice(context.Background()).Isin(\"US912810TD00\").From(1590988249).To(1649099548).Execute()",
          "javascript": "finnhubClient.bondPrice(\"US912810TD00\", 1590988249, 1649099548, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.bondPrice(\"US912810TD00\", 1590988249, 1649099548))",
          "php": "print_r($client->bondPrice(\"US912810TD00\", 1590988249, 1649099548));",
          "python": "print(finnhub_client.bond_price('US912810TD00', 1590988249, 1649099548))",
          "ruby": "puts(finnhub_client.bond_price('US912810TD00', 1590988249, 1649099548))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\":[\n    97.5,\n    97.96875,\n    98.78125,\n  ],\n  \"s\":\"ok\",\n  \"t\":[\n    1644883200,\n    1644969600,\n    1645056000,\n  ]\n}",
        "section": "Bonds",
        "summary": "Bond price data",
        "title": "Bond price API | Corporate bonds API",
        "urlId": "bond-price"
      }
    },
    "/bond/profile": {
      "get": {
        "parameters": [
          {
            "description": "ISIN",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CUSIP",
            "in": "query",
            "name": "cusip",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "FIGI",
            "in": "query",
            "name": "figi",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BondProfile",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get general information of a bond. You can query by FIGI, ISIN or CUSIP. A list of supported bonds can be found <a href=\"/api/v1/bond/list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/bond/profile?figi=BBG0152KFHS6",
            "url": "/bond/profile?figi=BBG0152KFHS6&token=<token>"
          },
          {
            "text": "/bond/profile?isin=US912810TD00",
            "url": "/bond/profile?isin=US912810TD00&token=<token>"
          },
          {
            "text": "/bond/profile?cusip=912810TD0",
            "url": "/bond/profile?cusip=912810TD0&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Bond Profile",
        "newEndpoint": null,
        "operationId": "bond-profile",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.BondProfile(context.Background()).Isin(\"US912810TD00\").Execute()",
          "javascript": "finnhubClient.bondProfile({'isin': 'US912810TD00'}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.bondProfile(isin = \"US912810TD00\", cusip = null, figi = null))",
          "php": "print_r($client->bondProfile(\"US912810TD00\"));",
          "python": "print(finnhub_client.bond_profile(isin='US912810TD00'))",
          "ruby": "puts(finnhub_client.bond_profile({isin: 'US912810TD00'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"isin\":\"US912810TD00\",\n  \"cusip\":\"\",\n  \"figi\":\"BBG0152KFHS6\",\n  \"coupon\":2.25,\n  \"maturityDate\":\"2052-02-15\",\n  \"offeringPrice\":100,\n  \"issueDate\":\"2022-03-15\",\n  \"bondType\":\"US Government\",\n  \"debtType\":\"\",\n  \"industryGroup\":\"Government\",\n  \"industrySubGroup\":\"U.S. Treasuries\",\n  \"asset\":\"\",\n  \"assetType\":\"\",\n  \"datedDate\":\"2022-02-15\",\n  \"firstCouponDate\":\"2022-08-15\",\n  \"originalOffering\":20000000000,\n  \"amountOutstanding\":36914000000,\n  \"paymentFrequency\":\"Semi-Annual\",\n  \"securityLevel\":\"\",\n  \"callable\":null,\n  \"couponType\":\"\",\n  \"dayCount\":\"\"\n}",
        "section": "Bonds",
        "summary": "Bond Profile",
        "title": "Bond Profile & Fundamental Data",
        "urlId": "bond-profile",
        "widget": null
      }
    },
    "/bond/tick": {
      "get": {
        "parameters": [
          {
            "description": "ISIN.",
            "in": "query",
            "name": "isin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date: 2020-04-02.",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Limit number of ticks returned. Maximum value: <code>25000</code>",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Number of ticks to skip. Use this parameter to loop through the entire data.",
            "in": "query",
            "name": "skip",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Currently support the following values: <code>trace</code>.",
            "in": "query",
            "name": "exchange",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BondTickData",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get trade-level data for bonds. The following datasets are supported:</p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Exchange</th>\n      <th>Segment</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>BTDS: US Corporate Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>144A Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n  </tbody>\n</table>",
        "examples": [
          {
            "text": "/bond/tick?isin=US693475BF18&date=2022-08-19&limit=50&skip=6&format=json&exchange=trace",
            "url": "/bond/tick?isin=US693475BF18&date=2022-08-19&limit=50&skip=6&format=json&exchange=trace&token=<token>"
          }
        ],
        "highUsage": null,
        "navHeader": "Tick/Trade Data",
        "newEndpoint": null,
        "operationId": "bond-tick",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.BondTick(context.Background()).Isin(\"US693475BF18\").Date(\"2022-08-19\").Limit(50).Skip(0).Exchange(\"trace\").Execute()",
          "javascript": "finnhubClient.bondTick(\"US693475BF18\", \"2022-08-19\", 500, 0, 'trace', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.bondTick(\"US693475BF18\", \"2022-08-19\", 500, 0, 'trace'))",
          "php": "print_r($client->bondTick(\"US693475BF18\", \"2022-08-19\", 500, 0, \"trace\"));",
          "python": "print(finnhub_client.bond_tick('US693475BF18', '2022-08-19', 500, 0, 'trace'))",
          "ruby": "puts(finnhub_client.bond_tick('US693475BF18', '2022-08-19', 500, 0, 'trace'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"c\":[[],[],[]],\n   \"count\":3,\n   \"cp\":[\n      \"3\",\n      \"1\",\n      \"1\"\n   ],\n   \"p\":[\n      100.592,\n      100.492,\n      100.234\n   ],\n   \"si\":[\n      \"2\",\n      \"2\",\n      \"2\"\n   ],\n   \"skip\":6,\n   \"t\":[\n      1660929161000,\n      1660929161000,\n      1660929778000\n   ],\n   \"total\":211,\n   \"v\":[\n      3000,\n      3000,\n      50000\n   ]\n}",
        "section": "Bonds",
        "summary": "Bond Tick Data",
        "title": "Bond Tick data | FINRA TRACE API | Corporate bonds API",
        "urlId": "bond-tick"
      }
    },
    "/bond/yield-curve": {
      "get": {
        "parameters": [
          {
            "description": "Bond's code. You can find the list of supported code <a href=\"https://docs.google.com/spreadsheets/d/1iA-lM0Kht7lsQZ7Uu_s6r2i1BbQNUNO9eGkO5-zglHg/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\">here</a>.",
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BondYieldCurve",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get yield curve data for Treasury bonds.",
        "examples": [
          {
            "text": "/bond/yield-curve?code=10y",
            "url": "/bond/yield-curve?code=10y&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Yield Curve",
        "newEndpoint": null,
        "operationId": "bond-yield-curve",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.BondYieldCurve(context.Background()).Code(\"10y\").Execute()",
          "javascript": "finnhubClient.bondYieldCurve(\"10y\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.bondYieldCurve(\"10y\"))",
          "php": "print_r($client->bondYieldCurve(\"10y\"));",
          "python": "print(finnhub_client.bond_yield_curve('10y'))",
          "ruby": "puts(finnhub_client.bond_yield_curve('10y'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"code\": \"10y\",\n  \"data\": [\n    {\n      \"d\": \"2022-10-31\",\n      \"v\": 4.1\n    },\n    {\n      \"d\": \"2022-11-01\",\n      \"v\": 4.07\n    }\n  ]\n}",
        "section": "Bonds",
        "summary": "Bond Yield Curve",
        "title": "Treasury Bonds Yield Curve",
        "urlId": "bond-yield-curve",
        "widget": null
      }
    },
    "/ca/isin-change": {
      "get": {
        "parameters": [
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsinChange",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of ISIN changes for EU-listed securities. Limit to 2000 events at a time.",
        "examples": [
          {
            "text": "/ca/isin-change?from=2022-09-01&to=2022-10-30",
            "url": "/ca/isin-change?from=2022-09-01&to=2022-10-30&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "ISIN Change",
        "newEndpoint": null,
        "operationId": "isin-change",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.IsinChange(context.Background()).From(\"2022-10-01\").To(\"2022-10-11\").Execute()",
          "javascript": "finnhubClient.isinChange({\"from\": \"2022-10-01\", \"to\": \"2022-10-11\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(\n            apiClient.isinChange(\n                from = \"2022-10-01\",\n                to = \"2020-10-11\")\n        )",
          "php": "print_r($client->isinChange(\"2020-01-01\", \"2020-06-11\"));",
          "python": "print(finnhub_client.isin_change(_from=\"2022-10-01\", to=\"2022-10-11\"))",
          "ruby": "puts(finnhub_client.isin_change({from: \"2020-01-01\", to: \"2020-06-11\"}))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"atDate\": \"2021-08-30\",\n      \"newIsin\": \"DE000A3E5CP0\",\n      \"oldIsin\": \"DE0007239402\"\n    }\n  ],\n  \"fromDate\": \"2021-08-07\",\n  \"toDate\": \"2021-10-07\"\n}",
        "section": "Stock Fundamentals",
        "summary": "ISIN Change",
        "title": "ISIN Change API.",
        "urlId": "isin-change",
        "widget": null
      }
    },
    "/ca/symbol-change": {
      "get": {
        "parameters": [
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SymbolChange",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of symbol changes for US-listed, EU-listed, NSE and ASX securities. Limit to 2000 events at a time.",
        "examples": [
          {
            "text": "/ca/symbol-change?from=2022-09-01&to=2022-10-30",
            "url": "/ca/symbol-change?from=2022-09-01&to=2022-10-30&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Symbol Change",
        "newEndpoint": null,
        "operationId": "symbol-change",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.SymbolChange(context.Background()).From(\"2022-10-01\").To(\"2022-10-11\").Execute()",
          "javascript": "finnhubClient.symbolChange({\"from\": \"2022-10-01\", \"to\": \"2022-10-11\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(\n            apiClient.symbolChange(\n                from = \"2022-10-01\",\n                to = \"2020-10-11\")\n        )",
          "php": "print_r($client->symbolChange(\"2020-01-01\", \"2020-06-11\"));",
          "python": "print(finnhub_client.symbol_change(_from=\"2022-10-01\", to=\"2022-10-11\"))",
          "ruby": "puts(finnhub_client.symbol_change({from: \"2020-01-01\", to: \"2020-06-11\"}))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"atDate\": \"2022-10-05\",\n      \"newSymbol\": \"MEN.L\",\n      \"oldSymbol\": \"PPC.L\"\n    }\n  ],\n  \"fromDate\": \"2022-10-01\",\n  \"toDate\": \"2022-10-30\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Symbol Change",
        "title": "Symbol Change API | Ticker Change calendar.",
        "urlId": "symbol-change",
        "widget": null
      }
    },
    "/calendar/earnings": {
      "get": {
        "parameters": [
          {
            "description": "From date: 2020-03-15.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date: 2020-03-16.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Filter by symbol: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Set to <code>true</code> to include international markets. Default value is <code>false</code>",
            "in": "query",
            "name": "international",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningsCalendar",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get historical and coming earnings release. EPS and Revenue in this endpoint are non-GAAP, which means they are adjusted to exclude some one-time or unusual items. This is the same data investors usually react to and talked about on the media. Estimates are sourced from both sell-side and buy-side analysts.",
        "examples": [
          {
            "text": "/calendar/earnings?from=2025-02-01&to=2025-03-10",
            "url": "/calendar/earnings?from=2025-02-01&to=2025-03-10&token=<token>"
          },
          {
            "text": "/calendar/earnings?from=2024-03-01&to=2025-03-09&symbol=AAPL",
            "url": "/calendar/earnings?from=2024-03-01&to=2025-03-09&symbol=AAPL&token=<token>"
          }
        ],
        "freeTier": "1 month of historical earnings and new updates",
        "highUsage": null,
        "navHeader": "Earnings Calendar",
        "newEndpoint": "New Endpoint",
        "operationId": "earnings-calendar",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EarningsCalendar(context.Background()).From(\"2021-07-01\").To(\"2021-07-30\").Execute()",
          "javascript": "finnhubClient.earningsCalendar({\"from\": \"2021-06-01\", \"to\": \"2021-06-30\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.earningsCalendar(from = \"2020-06-10\", to = \"2020-06-30\", symbol = \"\", international = false))",
          "php": "print_r($client->earningsCalendar(\"2020-06-10\", \"2020-06-30\", null, false));",
          "python": "print(finnhub_client.earnings_calendar(_from=\"2021-06-10\", to=\"2021-06-30\", symbol=\"\", international=False))",
          "ruby": "puts(finnhub_client.earnings_calendar({from: \"2021-06-10\", to: \"2021-06-30\", symbol: \"\", international: false}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"earningsCalendar\": [\n    {\n      \"date\": \"2020-01-28\",\n      \"epsActual\": 4.99,\n      \"epsEstimate\": 4.5474,\n      \"hour\": \"amc\",\n      \"quarter\": 1,\n      \"revenueActual\": 91819000000,\n      \"revenueEstimate\": 88496400810,\n      \"symbol\": \"AAPL\",\n      \"year\": 2020\n    },\n    {\n      \"date\": \"2019-10-30\",\n      \"epsActual\": 3.03,\n      \"epsEstimate\": 2.8393,\n      \"hour\": \"amc\",\n      \"quarter\": 4,\n      \"revenueActual\": 64040000000,\n      \"revenueEstimate\": 62985161760,\n      \"symbol\": \"AAPL\",\n      \"year\": 2019\n    }\n   ]\n}",
        "section": "Stock Estimates",
        "summary": "Earnings Calendar",
        "title": "Earnings Calendar API | Finnhub Stock API",
        "urlId": "earnings-calendar",
        "widget": null
      }
    },
    "/calendar/economic": {
      "get": {
        "parameters": [
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EconomicCalendar",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get recent and upcoming economic releases.</p><p>Historical events and surprises are available for Enterprise clients.</p>",
        "examples": [
          {
            "text": "/calendar/economic",
            "url": "/calendar/economic?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Economic Calendar",
        "newEndpoint": null,
        "operationId": "economic-calendar",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EconomicCalendar(context.Background()).Execute()",
          "javascript": "finnhubClient.economicCalendar((error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.economicCalendar())",
          "php": "print_r($client->economicCalendar());",
          "python": "print(finnhub_client.calendar_economic())",
          "ruby": "puts(finnhub_client.economic_calendar())",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"economicCalendar\": [\n    {\n      \"actual\": 8.4,\n      \"country\": \"AU\",\n      \"estimate\": 6.9,\n      \"event\": \"Australia - Current Account Balance\",\n      \"impact\": \"low\",\n      \"prev\": 1,\n      \"time\": \"2020-06-02 01:30:00\",\n      \"unit\": \"AUD\"\n    },\n    {\n      \"actual\": 0.5,\n      \"country\": \"AU\",\n      \"estimate\": 0.4,\n      \"event\": \"Australia- Net Exports\",\n      \"impact\": \"low\",\n      \"prev\": -0.1,\n      \"time\": \"2020-06-02 01:30:00\",\n      \"unit\": \"%\"\n    }\n  ]\n}",
        "section": "Economic",
        "summary": "Economic Calendar",
        "title": "Economic Calendar API | Finnhub",
        "urlId": "economic-calendar",
        "widget": null
      }
    },
    "/calendar/ipo": {
      "get": {
        "parameters": [
          {
            "description": "From date: 2020-03-15.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date: 2020-03-16.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPOCalendar",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get recent and upcoming IPO.",
        "examples": [
          {
            "text": "/calendar/ipo?from=2020-01-01&to=2020-04-30",
            "url": "/calendar/ipo?from=2020-01-01&to=2020-04-30&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "IPO Calendar",
        "newEndpoint": "New Endpoint",
        "operationId": "ipo-calendar",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.IpoCalendar(context.Background()).From(\"2021-01-01\").To(\"2021-06-30\").Execute()",
          "javascript": "finnhubClient.ipoCalendar(\"2020-01-01\", \"2020-06-15\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.ipoCalendar(from = \"2020-05-01\", to = \"2020-06-01\"))",
          "php": "print_r($client->ipoCalendar(\"2020-05-01\", \"2020-06-01\"));",
          "python": "print(finnhub_client.ipo_calendar(_from=\"2020-05-01\", to=\"2020-06-01\"))",
          "ruby": "puts(finnhub_client.ipo_calendar(\"2020-05-01\", \"2020-06-01\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"ipoCalendar\": [\n    {\n      \"date\": \"2020-04-03\",\n      \"exchange\": \"NASDAQ Global\",\n      \"name\": \"ZENTALIS PHARMACEUTICALS, LLC\",\n      \"numberOfShares\": 7650000,\n      \"price\": \"16.00-18.00\",\n      \"status\": \"expected\",\n      \"symbol\": \"ZNTL\",\n      \"totalSharesValue\": 158355000\n    },\n    {\n      \"date\": \"2020-04-01\",\n      \"exchange\": \"NASDAQ Global\",\n      \"name\": \"WIMI HOLOGRAM CLOUD INC.\",\n      \"numberOfShares\": 5000000,\n      \"price\": \"5.50-7.50\",\n      \"status\": \"expected\",\n      \"symbol\": \"WIMI\",\n      \"totalSharesValue\": 43125000\n    },\n  ]\n}",
        "section": "Stock Fundamentals",
        "summary": "IPO Calendar",
        "title": "IPO Calendar API",
        "urlId": "ipo-calendar",
        "widget": null
      }
    },
    "/company-news": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CompanyNews"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List latest company news by symbol. This endpoint is only available for North American companies.",
        "examples": [
          {
            "text": "/company-news?symbol=AAPL&from=2025-01-15&to=2025-02-20",
            "url": "/company-news?symbol=AAPL&from=2025-01-15&to=2025-02-20&token=<token>"
          }
        ],
        "freeTier": "1 year of historical news and new updates",
        "highUsage": "High Usage",
        "navHeader": "Company News",
        "newEndpoint": null,
        "operationId": "company-news",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyNews(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2020-05-01\").Execute()",
          "javascript": "finnhubClient.companyNews(\"AAPL\", \"2020-01-01\", \"2020-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.companyNews(\"AAPL\", from = \"2020-06-01\", to = \"2020-06-10\"))",
          "php": "print_r($client->companyNews(\"AAPL\", \"2020-06-01\", \"2020-06-10\"));",
          "python": "print(finnhub_client.company_news('AAPL', _from=\"2020-06-01\", to=\"2020-06-10\"))",
          "ruby": "puts(finnhub_client.company_news('AAPL', \"2020-06-01\", \"2020-06-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"category\": \"company news\",\n    \"datetime\": 1569550360,\n    \"headline\": \"More sops needed to boost electronic manufacturing: Top govt official More sops needed to boost electronic manufacturing: Top govt official.  More sops needed to boost electronic manufacturing: Top govt official More sops needed to boost electronic manufacturing: Top govt official\",\n    \"id\": 25286,\n    \"image\": \"https://img.etimg.com/thumb/msid-71321314,width-1070,height-580,imgsize-481831,overlay-economictimes/photo.jpg\",\n    \"related\": \"AAPL\",\n    \"source\": \"The Economic Times India\",\n    \"summary\": \"NEW DELHI | CHENNAI: India may have to offer electronic manufacturers additional sops such as cheap credit and incentives for export along with infrastructure support in order to boost production and help the sector compete with China, Vietnam and Thailand, according to a top government official.These incentives, over and above the proposed reduction of corporate tax to 15% for new manufacturing units, are vital for India to successfully attract companies looking to relocate manufacturing facilities.\u201cWhile the tax announcements made last week send a very good signal, in order to help attract investments, we will need additional initiatives,\u201d the official told ET, pointing out that Indian electronic manufacturers incur 8-10% higher costs compared with other Asian countries.Sops that are similar to the incentives for export under the existing Merchandise Exports from India Scheme (MEIS) are what the industry requires, the person said.MEIS gives tax credit in the range of 2-5%. An interest subvention scheme for cheaper loans and a credit guarantee scheme for plant and machinery are some other possible measures that will help the industry, the official added.\u201cThis should be 2.0 (second) version of the electronic manufacturing cluster (EMC) scheme, which is aimed at creating an ecosystem with an anchor company plus its suppliers to operate in the same area,\u201d he said.Last week, finance minister Nirmala Sitharaman announced a series of measures to boost economic growth including a scheme allowing any new manufacturing company incorporated on or after October 1, to pay income tax at 15% provided the company does not avail of any other exemption or incentives.\",\n    \"url\": \"https://economictimes.indiatimes.com/industry/cons-products/electronics/more-sops-needed-to-boost-electronic-manufacturing-top-govt-official/articleshow/71321308.cms\"\n  },\n  {\n    \"category\": \"company news\",\n    \"datetime\": 1569528720,\n    \"headline\": \"How to disable comments on your YouTube videos in 2 different ways\",\n    \"id\": 25287,\n    \"image\": \"https://amp.businessinsider.com/images/5d8d16182e22af6ab66c09e9-1536-768.jpg\",\n    \"related\": \"AAPL\",\n    \"source\": \"Business Insider\",\n    \"summary\": \"You can disable comments on your own YouTube video if you don't want people to comment on it. It's easy to disable comments on YouTube by adjusting the settings for one of your videos in the beta or classic version of YouTube Studio. Visit Business Insider's homepage for more stories . The comments section has a somewhat complicated reputation for creators, especially for those making videos on YouTube . While it can be useful to get the unfiltered opinions of your YouTube viewers and possibly forge a closer connection with them, it can also open you up to quite a bit of negativity. So it makes sense that there may be times when you want to turn off the feature entirely. Just keep in mind that the action itself can spark conversation. If you decide that you don't want to let people leave comments on your YouTube video, here's how to turn off the feature, using either the classic or beta version of the creator studio: How to disable comments on YouTube in YouTube Studio (beta) 1. Go to youtube.com and log into your account, if necessary. 2.\",\n    \"url\": \"https://www.businessinsider.com/how-to-disable-comments-on-youtube\"\n  },\n  {\n    \"category\": \"company news\",\n    \"datetime\": 1569526180,\n    \"headline\": \"Apple iPhone 11 Pro Teardowns Look Encouraging for STMicro and Sony\",\n    \"id\": 25341,\n    \"image\": \"http://s.thestreet.com/files/tsc/v2008/photos/contrib/uploads/ba140938-d409-11e9-822b-fda891ce1fc1.png\",\n    \"related\": \"AAPL\",\n    \"source\": \"TheStreet\",\n    \"summary\": \"STMicroelectronics and Sony each appear to be supplying four chips for Apple's latest flagship iPhones. Many other historical iPhone suppliers also make appearances in the latest teardowns\u2026.STM\",\n    \"url\": \"https://realmoney.thestreet.com/investing/technology/iphone-11-pro-teardowns-look-encouraging-for-stmicro-sony-15105767\"\n  },\n]",
        "section": "Stock Fundamentals",
        "summary": "Company News",
        "title": "Real-time Global Company News API",
        "urlId": "company-news",
        "widget": null
      }
    },
    "/country": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryMetadata"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List all countries and metadata.",
        "examples": [
          {
            "text": "/country",
            "url": "/country?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Country List",
        "newEndpoint": null,
        "operationId": "country",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.Country(context.Background()).Execute()",
          "javascript": "finnhubClient.country((error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.country())",
          "php": "print_r($client->country());",
          "python": "print(finnhub_client.country())",
          "ruby": "puts(finnhub_client.country())",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"code2\": \"US\",\n    \"code3\": \"USA\",\n    \"codeNo\": \"840\",\n    \"country\": \"United States\",\n    \"countryRiskPremium\": 0,\n    \"currency\": \"US Dollar\",\n    \"currencyCode\": \"USD\",\n    \"defaultSpread\": 0,\n    \"equityRiskPremium\": 5,\n    \"rating\": \"Aaa\",\n    \"region\": \"Americas\",\n    \"subRegion\": \"Northern America\"\n  },\n  {\n    \"code2\": \"GB\",\n    \"code3\": \"GBR\",\n    \"codeNo\": \"826\",\n    \"country\": \"United Kingdom of Great Britain and Northern Ireland\",\n    \"countryRiskPremium\": 0.91,\n    \"currency\": \"Sterling\",\n    \"currencyCode\": \"GBP\",\n    \"defaultSpread\": 0.64,\n    \"equityRiskPremium\": 5.91,\n    \"rating\": \"Aa3\",\n    \"region\": \"Europe\",\n    \"subRegion\": \"Northern Europe\"\n  }\n]",
        "section": "Economic",
        "summary": "Country Metadata",
        "title": "Country List",
        "urlId": "country",
        "widget": null
      }
    },
    "/covid19/us": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CovidInfo"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get real-time updates on the number of COVID-19 (Corona virus) cases in the US with a state-by-state breakdown. Data is sourced from CDC and reputable sources. You can also access this API <a href=\"https://rapidapi.com/Finnhub/api/finnhub-real-time-covid-19\" target=\"_blank\" rel=\"nofollow\">here</a>",
        "examples": [
          {
            "text": "/covid19/us",
            "url": "/covid19/us?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": "High Usage",
        "navHeader": "COVID-19",
        "newEndpoint": null,
        "operationId": "covid-19",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.Covid19(context.Background()).Execute()",
          "javascript": "finnhubClient.covid19((error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.covid19())",
          "php": "print_r($client->covid19());",
          "python": "print(finnhub_client.covid19())",
          "ruby": "puts(finnhub_client.covid19())",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"state\": \"New York\",\n    \"case\": 8403,\n    \"death\": 46,\n    \"updated\": \"2020-03-20 21:38:50\"\n  },\n  {\n    \"state\": \"Washington\",\n    \"case\": 1524,\n    \"death\": 83,\n    \"updated\": \"2020-03-20 21:38:50\"\n  }\n]",
        "section": "Alternative Data",
        "summary": "COVID-19",
        "title": "Real-time COVID-19 data API",
        "urlId": "covid-19",
        "widget": null
      }
    },
    "/crypto/candle": {
      "get": {
        "parameters": [
          {
            "description": "Use symbol returned in <code>/crypto/symbol</code> endpoint for this field.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UNIX timestamp. Interval initial value.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "UNIX timestamp. Interval end value.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoCandles",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get candlestick data for crypto symbols.",
        "examples": [
          {
            "text": "/crypto/candle?symbol=BINANCE:BTCUSDT&resolution=D&from=1572651390&to=1575243390",
            "url": "/crypto/candle?symbol=BINANCE:BTCUSDT&resolution=D&from=1572651390&to=1575243390&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Candles",
        "newEndpoint": null,
        "operationId": "crypto-candles",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CryptoCandles(context.Background()).Symbol(\"BINANCE:BTCUSDT\").Resolution(\"D\").From(1590988249).To(1591852249).Execute()",
          "javascript": "finnhubClient.cryptoCandles(\"BINANCE:BTCUSDT\", \"D\", 1590988249, 1591852249, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.cryptoCandles(\"BINANCE:BTCUSDT\", \"D\", 1590988249, 1591852249))",
          "php": "print_r($client->cryptoCandles(\"BINANCE:BTCUSDT\", \"D\", 1590988249, 1591852249));",
          "python": "print(finnhub_client.crypto_candles('BINANCE:BTCUSDT', 'D', 1590988249, 1591852249))",
          "ruby": "puts(finnhub_client.crypto_candles('BINANCE:BTCUSDT', 'D', 1590988249, 1591852249))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": [\n    1.10713,\n    1.10288,\n    1.10397,\n    1.10182\n  ],\n  \"h\": [\n    1.1074,\n    1.10751,\n    1.10729,\n    1.10595\n  ],\n  \"l\": [\n    1.09897,\n    1.1013,\n    1.10223,\n    1.10101\n  ],\n  \"o\": [\n    1.0996,\n    1.107,\n    1.10269,\n    1.10398\n  ],\n  \"s\": \"ok\",\n  \"t\": [\n    1568667600,\n    1568754000,\n    1568840400,\n    1568926800\n  ],\n  \"v\": [\n    75789,\n    75883,\n    73485,\n    5138\n  ]\n}",
        "section": "Crypto",
        "summary": "Crypto Candles",
        "title": "Crypto OHLCV API",
        "urlId": "crypto-candles",
        "widget": {
          "url": "https://widget.finnhub.io/widgets/stocks/chart?symbol=BINANCE:BTCUSDT&watermarkColor=%231db954&backgroundColor=%23222222&textColor=white"
        }
      }
    },
    "/crypto/exchange": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List supported crypto exchanges",
        "examples": [
          {
            "text": "/crypto/exchange",
            "url": "/crypto/exchange?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Exchanges",
        "newEndpoint": null,
        "operationId": "crypto-exchanges",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CryptoExchanges(context.Background()).Execute()",
          "javascript": "finnhubClient.cryptoExchanges((error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.cryptoExchanges())",
          "php": "print_r($client->cryptoExchanges());",
          "python": "print(finnhub_client.crypto_exchanges())",
          "ruby": "puts(finnhub_client.crypto_exchanges())",
          "useTemplate": true
        },
        "sampleResponse": "[\n  \"KRAKEN\",\n  \"HITBTC\",\n  \"COINBASE\",\n  \"GEMINI\",\n  \"POLONIEX\",\n  \"Binance\",\n  \"ZB\",\n  \"BITTREX\",\n  \"KUCOIN\",\n  \"OKEX\",\n  \"BITFINEX\",\n  \"HUOBI\"\n]",
        "section": "Crypto",
        "summary": "Crypto Exchanges",
        "title": "Crypto Exchanges",
        "urlId": "crypto-exchanges",
        "widget": null
      }
    },
    "/crypto/profile": {
      "get": {
        "parameters": [
          {
            "description": "Crypto symbol such as BTC or ETH.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoProfile",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get crypto's profile.",
        "examples": [
          {
            "text": "/crypto/profile?symbol=BTC",
            "url": "/crypto/profile?symbol=BTC&token=<token>"
          },
          {
            "text": "/crypto/profile?symbol=ETH",
            "url": "/crypto/profile?symbol=ETH&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Profile",
        "newEndpoint": null,
        "operationId": "crypto-profile",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CryptoProfile(context.Background()).Symbol(\"BTC\").Execute()",
          "javascript": "finnhubClient.cryptoProfile(\"BTC\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.cryptoProfile(\"BTC\"))",
          "php": "print_r($client->cryptoProfile(\"BTC\"));",
          "python": "print(finnhub_client.crypto_profile('BTC'))",
          "ruby": "puts(finnhub_client.crypto_profile('BTC'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"name\": \"Bitcoin\",\n  \"longName\": \"Bitcoin (BTC)\",\n  \"description\": \"Bitcoin uses peer-to-peer technology to operate with no central authority or banks; managing transactions and the issuing of bitcoins is carried out collectively by the network. Although other cryptocurrencies have come before, Bitcoin is the first decentralized cryptocurrency - Its reputation has spawned copies and evolution in the space.With the largest variety of markets and the biggest value - having reached a peak of 318 billion USD - Bitcoin is here to stay. As with any new invention, there can be improvements or flaws in the initial model however the community and a team of dedicated developers are pushing to overcome any obstacle they come across. It is also the most traded cryptocurrency and one of the main entry points for all the other cryptocurrencies. The price is as unstable as always and it can go up or down by 10%-20% in a single day.Bitcoin is an SHA-256 POW coin with almost 21,000,000 total minable coins. The block time is 10 minutes. See below for a full range of Bitcoin markets where you can trade US Dollars for Bitcoin, crypto to Bitcoin and many other fiat currencies too.Bitcoin Whitepaper PDF - A Peer-to-Peer Electronic Cash SystemBlockchain data provided by: Blockchain (main source), Blockchair (backup)\",\n  \"marketCap\": 1119891535870.4905,\n  \"totalSupply\": 18876550,\n  \"maxSupply\": 21000000,\n  \"circulatingSupply\": 18876550,\n  \"logo\": \"\",\n  \"launchDate\": \"2009-01-03\",\n  \"website\": \"https://bitcoin.org/en/\",\n  \"proofType\": \"PoW\"\n}",
        "section": "Crypto",
        "summary": "Crypto Profile",
        "title": "Crypto Profile API",
        "urlId": "crypto-profile",
        "widget": null
      }
    },
    "/crypto/symbol": {
      "get": {
        "parameters": [
          {
            "description": "Exchange you want to get the list of symbols from.",
            "in": "query",
            "name": "exchange",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CryptoSymbol"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List supported crypto symbols by exchange",
        "examples": [
          {
            "text": "/crypto/symbol?exchange=binance",
            "url": "/crypto/symbol?exchange=binance&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Symbols",
        "newEndpoint": null,
        "operationId": "crypto-symbols",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CryptoSymbols(context.Background()).Exchange(\"BINANCE\").Execute()",
          "javascript": "finnhubClient.cryptoSymbols(\"BINANCE\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.cryptoSymbols(\"BINANCE\"))",
          "php": "print_r($client->cryptoSymbols(\"BINANCE\"));",
          "python": "print(finnhub_client.crypto_symbols('BINANCE'))",
          "ruby": "puts(finnhub_client.crypto_symbols('BINANCE'))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"description\": \"Binance ETHBTC\",\n    \"displaySymbol\": \"ETH/BTC\",\n    \"symbol\": \"ETHBTC\"\n  },\n  {\n    \"description\": \"Binance LTCBTC\",\n    \"displaySymbol\": \"LTC/BTC\",\n    \"symbol\": \"BINANCE:LTCBTC\"\n  },\n  {\n    \"description\": \"Binance BNBBTC\",\n    \"displaySymbol\": \"BNB/BTC\",\n    \"symbol\": \"BINANCE:BNBBTC\"\n  }]",
        "section": "Crypto",
        "summary": "Crypto Symbol",
        "title": "Crypto Symbols By Exchange",
        "urlId": "crypto-symbols",
        "widget": null
      }
    },
    "/economic": {
      "get": {
        "parameters": [
          {
            "description": "Economic code.",
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EconomicData",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get economic data.",
        "examples": [
          {
            "text": "/economic?code=MA-USA-656880",
            "url": "/economic?code=MA-USA-656880&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Economic",
        "newEndpoint": null,
        "operationId": "economic-data",
        "premium": "Accessible with Fundamental data or All in One subscription.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EconomicData(context.Background()).Code(\"MA-USA-656880\").Execute()",
          "javascript": "finnhubClient.economicData(\"MA-USA-656880\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.economicData(\"MA-USA-656880\"))",
          "php": "print_r($client->economicData(\"MA-USA-656880\"));",
          "python": "print(finnhub_client.economic_data('MA-USA-656880'))",
          "ruby": "puts(finnhub_client.economic_data('MA-USA-656880'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"code\": \"MA-USA-656880\",\n  \"data\": [\n    {\n      \"date\": \"2020-05-31\",\n      \"value\": -2760\n    },\n    {\n      \"date\": \"2020-04-30\",\n      \"value\": -19557\n    }\n  ]\n}",
        "section": "Economic",
        "summary": "Economic Data",
        "title": "Global Economic Data API",
        "urlId": "economic-data",
        "widget": null
      }
    },
    "/economic/code": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EconomicCode"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List codes of supported economic data.",
        "examples": [
          {
            "text": "/economic/code",
            "url": "/economic/code?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Economic Codes",
        "newEndpoint": null,
        "operationId": "economic-code",
        "premium": "Accessible with Fundamental data or All in One subscription.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EconomicCode(context.Background()).Execute()",
          "javascript": "finnhubClient.economicCode((error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.economicCode())",
          "php": "print_r($client->economicCode());",
          "python": "print(finnhub_client.economic_code())",
          "ruby": "puts(finnhub_client.economic_code())",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"code\": \"MA-USA-656880\",\n    \"country\": \"USA\",\n    \"name\": \"1-Day Repo Rate\",\n    \"unit\": \"%\"\n  },\n  {\n    \"code\": \"MA-USA-6667797870\",\n    \"country\": \"USA\",\n    \"name\": \"ISM Purchasing Managers Index\",\n    \"unit\": \"unit\"\n  }\n]",
        "section": "Economic",
        "summary": "Economic Code",
        "title": "Economic Codes",
        "urlId": "economic-code",
        "widget": null
      }
    },
    "/etf/country": {
      "get": {
        "parameters": [
          {
            "description": "ETF symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ETF isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ETFsCountryExposure",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get ETF country exposure data.",
        "examples": [
          {
            "text": "/etf/country?symbol=SPY",
            "url": "/etf/country?symbol=SPY&token=<token>"
          },
          {
            "text": "/etf/country?symbol=VOO",
            "url": "/etf/country?symbol=VOO&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "ETFs Country",
        "newEndpoint": null,
        "operationId": "etfs-country-exposure",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EtfsCountryExposure(context.Background()).Symbol(\"SPY\").Execute()",
          "javascript": "finnhubClient.etfsCountryExposure('SPY', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.etfsCountryExposure(\"SPY\"))",
          "php": "print_r($client->etfsCountryExposure(\"SPY\"));",
          "python": "print(finnhub_client.etfs_country_exp('SPY'))",
          "ruby": "puts(finnhub_client.etfs_country_exposure('SPY'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"countryExposure\": [\n    {\n      \"country\": \"United States of America (the)\",\n      \"exposure\": 97.02\n    },\n    {\n      \"country\": \"Ireland\",\n      \"exposure\": 1.65\n    },\n    {\n      \"country\": \"United Kingdom of Great Britain and Northern Ireland (the)\",\n      \"exposure\": 0.88\n    },\n    {\n      \"country\": \"Switzerland\",\n      \"exposure\": 0.41\n    },\n    {\n      \"country\": \"Bermuda\",\n      \"exposure\": 0.03\n    }\n  ],\n  \"symbol\": \"SPY\"\n}",
        "section": "ETFs & Indices",
        "summary": "ETFs Country Exposure",
        "title": "Global ETFs Country Exposure Breakdown",
        "urlId": "etfs-country-exposure",
        "widget": null
      }
    },
    "/etf/holdings": {
      "get": {
        "parameters": [
          {
            "description": "ETF symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ETF isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skip the first n results. You can use this parameter to query historical constituents data. The latest result is returned if skip=0 or not set.",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Query holdings by date. You can use either this param or <code>skip</code> param, not both.",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ETFsHoldings",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get full ETF holdings/constituents. This endpoint has global coverage. Widget only shows top 10 holdings. A list of supported ETFs can be found <a href=\"/api/v1/etf/list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/etf/holdings?symbol=SPY",
            "url": "/etf/holdings?symbol=SPY&token=<token>"
          },
          {
            "text": "/etf/holdings?symbol=AVUV&skip=1",
            "url": "/etf/holdings?symbol=AVUV&skip=1&token=<token>"
          },
          {
            "text": "/etf/holdings?symbol=IPO&date=2025-02-04",
            "url": "/etf/holdings?symbol=IPO&date=2025-02-04&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "ETFs Holdings",
        "newEndpoint": null,
        "operationId": "etfs-holdings",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EtfsHoldings(context.Background()).Symbol(\"SPY\").Execute()",
          "javascript": "finnhubClient.etfsHoldings({'symbol': 'ARKK'}, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.etfsHoldings(\"SPY\", \"\", 0, \"\"))",
          "php": "print_r($client->etfsHoldings(\"SPY\"));",
          "python": "print(finnhub_client.etfs_holdings('SPY'))",
          "ruby": "puts(finnhub_client.etfs_holdings({symbol:'SPY'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"atDate\": \"2023-03-24\",\n  \"holdings\": [\n    {\n      \"assetType\": \"Equity\",\n      \"cusip\": \"88160R101\",\n      \"isin\": \"US88160R1014\",\n      \"name\": \"TESLA INC\",\n      \"percent\": 10.54,\n      \"share\": 3971395,\n      \"symbol\": \"TSLA\",\n      \"value\": 763381546.9\n    },\n    {\n      \"assetType\": \"Equity\",\n      \"cusip\": \"98980L101\",\n      \"isin\": \"US98980L1017\",\n      \"name\": \"ZOOM VIDEO COMMUNICATIONS-A\",\n      \"percent\": 8.05,\n      \"share\": 8418916,\n      \"symbol\": \"ZM\",\n      \"value\": 582504798.04\n    },\n  ],\n  \"numberOfHoldings\": 28,\n  \"symbol\": \"ARKK\"\n}",
        "section": "ETFs & Indices",
        "summary": "ETFs Holdings",
        "title": "Global ETFs Holdings & Constituents API",
        "urlId": "etfs-holdings",
        "widget": {
          "height": 600,
          "url": "https://widget.finnhub.io/widgets/etf-holdings?symbol=ARKK&theme=dark"
        }
      }
    },
    "/etf/profile": {
      "get": {
        "parameters": [
          {
            "description": "ETF symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ETF isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ETFsProfile",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get ETF profile information. This endpoint has global coverage. A list of supported ETFs can be found <a href=\"/api/v1/etf/list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/etf/profile?symbol=SPY",
            "url": "/etf/profile?symbol=SPY&token=<token>"
          },
          {
            "text": "/etf/profile?isin=US78462F1030",
            "url": "/etf/profile?isin=US78462F1030&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "ETFs Profile",
        "newEndpoint": null,
        "operationId": "etfs-profile",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EtfsProfile(context.Background()).Symbol(\"SPY\").Execute()",
          "javascript": "finnhubClient.etfsProfile({'symbol': 'SPY'}, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.etfsProfile(\"SPY\", \"\"))",
          "php": "print_r($client->etfsProfile(\"SPY\"));",
          "python": "print(finnhub_client.etfs_profile('SPY'))",
          "ruby": "puts(finnhub_client.etfs_profile({symbol:'SPY'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"profile\": {\n    \"assetClass\": \"Equity\",\n    \"aum\": 318374000000,\n    \"avgVolume\": 63794600,\n    \"cusip\": \"\",\n    \"description\": \"SPY was created on 1993-01-22 by SPDR. The fund's investment portfolio concentrates primarily on large cap equity. The ETF currently has 318374.0m in AUM and 504 holdings. SPY tracks a market-cap-weighted index of US large- and midcap stocks selected by the S\\u0026P Committee.\",\n    \"domicile\": \"US\",\n    \"etfCompany\": \"SPDR\",\n    \"expenseRatio\": 0.0945,\n    \"inceptionDate\": \"1993-01-22\",\n    \"investmentSegment\": \"Large Cap\",\n    \"isin\": \"\",\n    \"name\": \"SPDR S\\u0026P 500 ETF Trust\",\n    \"nav\": 366.2784,\n    \"navCurrency\": \"USD\",\n    \"priceToBook\": 3.943968,\n    \"priceToEarnings\": 26.82968,\n    \"trackingIndex\": \"S\\u0026P 500\",\n    \"logo\": \"https://static2.finnhub.io/file/publicdatany/finnhubimage/etf_logo/spdr.png\",\n    \"website\": \"https://us.spdrs.com/en/etf/spdr-sp-500-etf-SPY\"\n  },\n  \"symbol\": \"SPY\"\n}",
        "section": "ETFs & Indices",
        "summary": "ETFs Profile",
        "title": "Global ETFs profile",
        "urlId": "etfs-profile",
        "widget": null
      }
    },
    "/etf/sector": {
      "get": {
        "parameters": [
          {
            "description": "ETF symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ETF isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ETFsSectorExposure",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get ETF sector exposure data.",
        "examples": [
          {
            "text": "/etf/sector?symbol=SPY",
            "url": "/etf/sector?symbol=SPY&token=<token>"
          },
          {
            "text": "/etf/sector?symbol=VOO",
            "url": "/etf/sector?symbol=VOO&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "ETFs Sector",
        "newEndpoint": null,
        "operationId": "etfs-sector-exposure",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EtfsSectorExposure(context.Background()).Symbol(\"SPY\").Execute()",
          "javascript": "finnhubClient.etfsSectorExposure('SPY', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.etfsSectorExposure(\"SPY\"))",
          "php": "print_r($client->etfsSectorExposure(\"SPY\"));",
          "python": "print(finnhub_client.etfs_sector_exp('SPY'))",
          "ruby": "puts(finnhub_client.etfs_sector_exposure('SPY'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"sectorExposure\": [\n    {\n      \"exposure\": 31.96,\n      \"industry\": \"Technology\"\n    },\n    {\n      \"exposure\": 14.79,\n      \"industry\": \"Healthcare\"\n    },\n    {\n      \"exposure\": 13.46,\n      \"industry\": \"Consumer Cyclicals\"\n    }\n  ],\n  \"symbol\": \"SPY\"\n}",
        "section": "ETFs & Indices",
        "summary": "ETFs Sector Exposure",
        "title": "Global ETFs Sector Breakdown",
        "urlId": "etfs-sector-exposure",
        "widget": null
      }
    },
    "/fda-advisory-committee-calendar": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FDAComitteeMeeting"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "FDA's advisory committees are established to provide functions which support the agency's mission of protecting and promoting the public health, while meeting the requirements set forth in the Federal Advisory Committee Act. Committees are either mandated by statute or established at the discretion of the Department of Health and Human Services. Each committee is subject to renewal at two-year intervals unless the committee charter states otherwise.",
        "examples": [
          {
            "text": "/fda-advisory-committee-calendar",
            "url": "/fda-advisory-committee-calendar?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "FDA Calendar",
        "newEndpoint": null,
        "operationId": "fda-committee-meeting-calendar",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.FdaCommitteeMeetingCalendar(context.Background()).Execute()",
          "javascript": "finnhubClient.fdaCommitteeMeetingCalendar((error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.fdaCommitteeMeetingCalendar())",
          "php": "print_r($client->fdaCommitteeMeetingCalendar());",
          "python": "print(finnhub_client.fda_calendar())",
          "ruby": "puts(finnhub_client.fda_committee_meeting_calendar())",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"fromDate\": \"2016-01-11 19:00:00\",\n    \"toDate\": \"2016-01-11 19:00:00\",\n    \"eventDescription\": \"January 12, 2016: Meeting of the Psychopharmacologic Drugs Advisory Committee Meeting Announcement - 01/11/2016 - 01/11/2016\",\n    \"url\": \"https://www.fda.gov/advisory-committees/advisory-committee-calendar/january-12-2016-meeting-psychopharmacologic-drugs-advisory-committee-meeting-announcement-01112016\"\n  },\n  {\n    \"fromDate\": \"2016-01-14 13:00:00\",\n    \"toDate\": \"2016-01-14 17:00:00\",\n    \"eventDescription\": \"January 14, 2016: Vaccines and Related Biological Products Advisory Committee Meeting Announcement - 01/14/2016 - 01/14/2016\",\n    \"url\": \"https://www.fda.gov/advisory-committees/advisory-committee-calendar/january-14-2016-vaccines-and-related-biological-products-advisory-committee-meeting-announcement\"\n  }\n]",
        "section": "Alternative Data",
        "summary": "FDA Committee Meeting Calendar",
        "title": "FDA Calendar | Finnhub",
        "urlId": "fda-committee-meeting-calendar",
        "widget": null
      }
    },
    "/forex/candle": {
      "get": {
        "parameters": [
          {
            "description": "Use symbol returned in <code>/forex/symbol</code> endpoint for this field.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UNIX timestamp. Interval initial value.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "UNIX timestamp. Interval end value.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForexCandles",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get candlestick data for forex symbols.",
        "examples": [
          {
            "text": "/forex/candle?symbol=OANDA:EUR_USD&resolution=D&from=1572651390&to=1575243390",
            "url": "/forex/candle?symbol=OANDA:EUR_USD&resolution=D&from=1572651390&to=1575243390&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Candles",
        "newEndpoint": null,
        "operationId": "forex-candles",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.ForexCandles(context.Background()).Symbol(\"OANDA:EUR_USD\").Resolution(\"D\").From(1590988249).To(1591852249).Execute()",
          "javascript": "finnhubClient.forexCandles(\"OANDA:EUR_USD\", \"D\", 1590988249, 1591852249, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.forexCandles(\"OANDA:EUR_USD\", \"D\", 1590988249, 1591852249))",
          "php": "print_r($client->forexCandles(\"OANDA:EUR_USD\", \"D\", 1590988249, 1591852249));",
          "python": "print(finnhub_client.forex_candles('OANDA:EUR_USD', 'D', 1590988249, 1591852249))",
          "ruby": "puts(finnhub_client.forex_candles('OANDA:EUR_USD', 'D', 1590988249, 1591852249))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": [\n    1.10713,\n    1.10288,\n    1.10397,\n    1.10182\n  ],\n  \"h\": [\n    1.1074,\n    1.10751,\n    1.10729,\n    1.10595\n  ],\n  \"l\": [\n    1.09897,\n    1.1013,\n    1.10223,\n    1.10101\n  ],\n  \"o\": [\n    1.0996,\n    1.107,\n    1.10269,\n    1.10398\n  ],\n  \"s\": \"ok\",\n  \"t\": [\n    1568667600,\n    1568754000,\n    1568840400,\n    1568926800\n  ],\n  \"v\": [\n    75789,\n    75883,\n    73485,\n    5138\n  ]\n}",
        "section": "Forex",
        "summary": "Forex Candles",
        "title": "Forex OHLCV API",
        "urlId": "forex-candles",
        "widget": {
          "url": "https://widget.finnhub.io/widgets/stocks/chart?symbol=OANDA:EUR_USD&watermarkColor=%231db954&backgroundColor=%23222222&textColor=white"
        }
      }
    },
    "/forex/exchange": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List supported forex exchanges",
        "examples": [
          {
            "text": "/forex/exchange",
            "url": "/forex/exchange?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Exchanges",
        "newEndpoint": null,
        "operationId": "forex-exchanges",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.ForexExchanges(context.Background()).Execute()",
          "javascript": "finnhubClient.forexExchanges((error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.forexExchanges())",
          "php": "print_r($client->forexExchanges());",
          "python": "print(finnhub_client.forex_exchanges())",
          "ruby": "puts(finnhub_client.forex_exchanges())",
          "useTemplate": true
        },
        "sampleResponse": "[\n  \"oanda\",\n  \"fxcm\",\n  \"forex.com\",\n  \"ic markets\",\n  \"fxpro\"\n]",
        "section": "Forex",
        "summary": "Forex Exchanges",
        "title": "List Forex Exchanges",
        "urlId": "forex-exchanges",
        "widget": null
      }
    },
    "/forex/rates": {
      "get": {
        "parameters": [
          {
            "description": "Base currency. Default to EUR.",
            "in": "query",
            "name": "base",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date. Leave blank to get the latest data.",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forexrates",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get rates for all forex pairs. Ideal for currency conversion",
        "examples": [
          {
            "text": "/forex/rates?base=USD",
            "url": "/forex/rates?base=USD&token=<token>"
          },
          {
            "text": "/forex/rates?base=EUR&date=2022-02-10",
            "url": "/forex/rates?base=EUR&date=2022-02-10&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "All Rates",
        "newEndpoint": null,
        "operationId": "forex-rates",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.ForexRates(context.Background()).Base(\"USD\").Execute()",
          "javascript": "finnhubClient.forexRates({\"base\": \"USD\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.forexRates(base = \"USD\"))",
          "php": "print_r($client->forexRates(\"USD\"));",
          "python": "print(finnhub_client.forex_rates(base='USD'))",
          "ruby": "puts(finnhub_client.forex_rates({base: 'USD'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"base\": \"USD\",\n  \"quote\": {\n    \"AED\": 3.968012,\n    \"AFN\": 82.373308,\n    \"ALL\": 124.235408,\n    \"AMD\": 520.674275,\n    \"CAD\": 1.525368,\n    \"CDF\": 1904.576741,\n    \"CHF\": 1.053259,\n    \"CNY\": 7.675235,\n    \"COP\": 4282.32676,\n    \"CRC\": 614.796995,\n    \"CUC\": 1.080304,\n    \"CUP\": 28.628067,\n    \"CVE\": 110.517004,\n    \"CZK\": 27.096737,\n    \"DJF\": 191.991344,\n    \"DKK\": 7.461229,\n    \"DOP\": 59.195018,\n    \"DZD\": 139.384021,\n    \"EGP\": 17.018597,\n    \"ERN\": 16.204913,\n    \"ETB\": 36.296767,\n    \"EUR\": 0.91,\n    \"GBP\": 0.874841,\n    \"JPY\": 114.583548,\n    \"MDL\": 19.120251,\n    \"MGA\": 4105.156776,\n    \"USD\": 1,\n  }\n}",
        "section": "Forex",
        "summary": "Forex rates",
        "title": "Forex All Rates",
        "urlId": "forex-rates",
        "widget": null
      }
    },
    "/forex/symbol": {
      "get": {
        "parameters": [
          {
            "description": "Exchange you want to get the list of symbols from.",
            "in": "query",
            "name": "exchange",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ForexSymbol"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List supported forex symbols.",
        "examples": [
          {
            "text": "/forex/symbol?exchange=oanda",
            "url": "/forex/symbol?exchange=oanda&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Symbols",
        "newEndpoint": null,
        "operationId": "forex-symbols",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.ForexSymbols(context.Background()).Exchange(\"OANDA\").Execute()",
          "javascript": "finnhubClient.forexSymbols(\"OANDA\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.forexSymbols(\"OANDA\"))",
          "php": "print_r($client->forexSymbols(\"OANDA\"));",
          "python": "print(finnhub_client.forex_symbols('OANDA'))",
          "ruby": "puts(finnhub_client.forex_symbols('OANDA'))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"description\": \"IC MARKETS Euro vs US Dollar EURUSD\",\n    \"displaySymbol\": \"EUR/USD\",\n    \"symbol\": \"IC MARKETS:1\"\n  },\n  {\n    \"description\": \"IC MARKETS Australian vs US Dollar AUDUSD\",\n    \"displaySymbol\": \"AUD/USD\",\n    \"symbol\": \"IC MARKETS:5\"\n  },\n  {\n    \"description\": \"IC MARKETS British Pound vs US Dollar GBPUSD\",\n    \"displaySymbol\": \"GBP/USD\",\n    \"symbol\": \"IC MARKETS:2\"\n  }]",
        "section": "Forex",
        "summary": "Forex Symbol",
        "title": "Forex Symbols By Exchange",
        "urlId": "forex-symbols",
        "widget": null
      }
    },
    "/global-filings/download": {
      "get": {
        "parameters": [
          {
            "description": "Document's id. Note that this is different from filingId as 1 filing can contain multiple documents.",
            "in": "query",
            "name": "documentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Download filings using document ids.</p>",
        "examples": [
          {
            "text": "/global-filings/download?documentId=76a87562f08df43a653d00bed73f467be4a6b045ffe72abd20ddc66f2c471f9c",
            "url": "/global-filings/download?documentId=76a87562f08df43a653d00bed73f467be4a6b045ffe72abd20ddc66f2c471f9c&token=<token>"
          },
          {
            "text": "/global-filings/download?documentId=3c020f32c165752dfcbc80bff8bb9aac6ac8bac31c400882bfee4b8ddc135165",
            "url": "/global-filings/download?documentId=3c020f32c165752dfcbc80bff8bb9aac6ac8bac31c400882bfee4b8ddc135165&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Download Filings",
        "newEndpoint": null,
        "operationId": "global-filings-download",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "curl --request GET 'https://finnhub.io/api/v1/global-filings/download?documentId=AAPL_1113753&token=<token>'",
          "javascript": "var requestOptions = {\n  method: 'GET'\n};\n\nfetch(\"https://finnhub.io/api/v1/global-filings/download?documentId=AAPL_1113753&token=<token>\", requestOptions)\n  .then(response => response.json())\n",
          "python": "import requests\n\nurl = \"https://finnhub.io/api/v1/global-filings/download?documentId=AAPL_1113753&token=<token>\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.json())"
        },
        "sampleResponse": null,
        "section": "Global Filings Search",
        "summary": "Download Filings",
        "title": "Download Global Filings",
        "urlId": "global-filings-download",
        "widget": null
      }
    },
    "/global-filings/filter": {
      "get": {
        "parameters": [
          {
            "description": "Field to get available filters. Available filters are \"countries\", \"exchanges\", \"exhibits\", \"forms\", \"gics\", \"naics\", \"caps\", \"acts\", and \"sort\".",
            "in": "query",
            "name": "field",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Get available forms for each source.",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchFilter",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get available values for each filter in search body.</p>",
        "examples": [
          {
            "text": "/global-filings/filter?field=forms&source=SEC",
            "url": "/global-filings/filter?field=forms&source=SEC&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Search Filter",
        "newEndpoint": null,
        "operationId": "global-filings-search-filter",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "curl --request GET 'https://finnhub.io/api/v1/global-filings/filter?field=sources&token=<token>'",
          "javascript": "var requestOptions = {\n  method: 'GET'\n};\n\nfetch(\"https://finnhub.io/api/v1/global-filings/filter?field=sources&token=<token>\", requestOptions)\n  .then(response => response.json())\n",
          "python": "import requests\n\nurl = \"https://finnhub.io/api/v1/global-filings/filter?field=sources&token=<token>\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.json())"
        },
        "sampleResponse": "[\n    {\n        \"id\": \"SEC\",\n        \"name\": \"US SEC Edgar Filings\"\n    },\n    {\n        \"id\": \"TR\",\n        \"name\": \"Event Transcripts\"\n    },\n    {\n        \"id\": \"SEDAR\",\n        \"name\": \"Canada SEDAR Filings\"\n    },\n    {\n        \"id\": \"CH\",\n        \"name\": \"UK Companies House Filings\"\n    },\n    {\n        \"id\": \"PR\",\n        \"name\": \"Press Releases\"\n    },\n    {\n        \"id\": \"RR\",\n        \"name\": \"Research Reports\"\n    },\n    {\n        \"id\": \"GF\",\n        \"name\": \"Global Filings\"\n    }\n]",
        "section": "Global Filings Search",
        "summary": "Search Filter",
        "title": "Search Filter",
        "urlId": "global-filings-search-filter",
        "widget": null
      }
    },
    "/global-filings/search": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Search for best-matched filings across global companies' filings, transcripts and press releases. You can filter by anything from symbol, ISIN to form type, and document sources.</p><p>This endpoint will return a list of documents that match your search criteria. If you would like to get the excerpts as well, please set <code>highlighted</code> to <code>true</code>. Once you have the list of documents, you can get a list of excerpts and positions to highlight the document using the <code>/search-in-filing</code> endpoint</p>",
        "examples": [
          {
            "text": "/global-filings/search",
            "url": "/global-filings/search?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Filings Search",
        "newEndpoint": null,
        "operationId": "global-filings-search",
        "premium": "Premium Access Required",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchBody"
              }
            }
          },
          "description": "Search body"
        },
        "sampleCode": {
          "curl": "curl --request POST 'https://finnhub.io/api/v1/global-filings/search?token=<token>' \\\n--data-raw '{\n    \"query\": \"artificial intelligence\",\n    \"symbols\": \"AAPL,GOOGL,TSLA\",\n    \"fromDate\": \"2010-01-01\",\n    \"toDate\": \"2022-09-30\"\n}'",
          "javascript": "var raw = JSON.stringify({\n  \"query\": \"artificial intelligence\",\n  \"symbols\": \"AAPL,GOOGL,TSLA\",\n  \"fromDate\": \"2010-01-01\",\n  \"toDate\": \"2022-09-30\"\n});\n\nvar requestOptions = {\n  method: 'POST',\n  body: raw,\n};\n\nfetch(\"https://finnhub.io/api/v1/global-filings/search?token=<token>\", requestOptions)\n  .then(response => response.json())",
          "python": "import requests\nimport json\n\nurl = \"https://finnhub.io/api/v1/global-filings/search?token=<token>\"\n\npayload = json.dumps({\n  \"query\": \"artificial intelligence\",\n  \"symbols\": \"AAPL,GOOGL,TSLA\",\n  \"fromDate\": \"2010-01-01\",\n  \"toDate\": \"2022-09-30\"\n})\n\n\nresponse = requests.request(\"POST\", url, data=payload)\n\nprint(response.json())"
        },
        "sampleResponse": "{\n    \"count\": 8,\n    \"filings\": [\n        {\n            \"acceptanceDate\": \"2022-10-27 00:00:00\",\n            \"amend\": false,\n            \"documentCount\": 1,\n            \"filedDate\": \"2022-10-27\",\n            \"filerId\": \"3285503214\",\n            \"filingId\": \"AAPL_1113753\",\n            \"form\": \"TR/E\",\n            \"name\": \"Apple Inc\",\n            \"pageCount\": 4,\n            \"reportPeriod\": \"\",\n            \"source\": \"TR\",\n            \"symbols\": [\n                \"AAPL\"\n            ],\n            \"title\": \"AAPL - Earnings call Q4 2022\",\n            \"url\": \"https://alpharesearch.io/platform/share?filingId=AAPL_1113753\"\n        }\n        ...\n    ],\n    \"page\": 1,\n    \"took\": 1986\n}",
        "section": "Global Filings Search",
        "summary": "Global Filings Search",
        "title": "Global Filings Search API | Earnings call transcripts",
        "urlId": "global-filings-search",
        "widget": null
      }
    },
    "/global-filings/search-in-filing": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InFilingResponse",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get a list of excerpts and highlight positions within a document using your query.</p>",
        "examples": [
          {
            "text": "/global-filings/search-in-filing",
            "url": "/global-filings/search-in-filing?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Search In Filing",
        "newEndpoint": null,
        "operationId": "search-in-filing",
        "premium": "Premium Access Required",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InFilingSearchBody"
              }
            }
          },
          "description": "Search body"
        },
        "sampleCode": {
          "curl": "curl --request POST 'https://finnhub.io/api/v1/global-filings/search-in-filing?token=<token>' \\\n--data-raw '{\n    \"query\": \"covid\",\n    \"filingId\": \"AAPL_1113753\"\n}'",
          "javascript": "var raw = JSON.stringify({\n  \"query\": \"covid\",\n  \"filingId\": \"AAPL_1113753\"\n});\n\nvar requestOptions = {\n  method: 'POST',\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://finnhub.io/api/v1/global-filings/search-in-filing?token=<token>\", requestOptions)\n  .then(response => response.json())",
          "python": "import requests\nimport json\n\nurl = \"https://finnhub.io/api/v1/global-filings/search-in-filing?token=<token>\"\n\npayload = json.dumps({\n  \"query\": \"covid\",\n  \"filingId\": \"AAPL_1113753\"\n})\n\nresponse = requests.request(\"POST\", url,  data=payload)\n\nprint(response.json())"
        },
        "sampleResponse": "{\n  \"acceptanceDate\": \"2022-10-27 00:00:00\",\n  \"amend\": false,\n  \"documentCount\": 1,\n  \"documents\": [\n      {\n          \"documentId\": \"AAPL_1113753\",\n          \"excerpts\": [\n              {\n                  \"content\": \"If you compare it to pre-<span class='search-highlight'>pandemic</span> kind of levels, that has not returned to pre <span class='search-highlight'>pandemic</span> levels by any means.\\n\",\n                  \"endOffset\": 494,\n                  \"snippetId\": \"tran-46\",\n                  \"startOffset\": 385\n              }\n              ...\n          ],\n          \"format\": \"html\",\n          \"hits\": 5,\n          \"title\": \"Transcript\",\n          \"url\": \"https://alpharesearch.io/filing/transcript?documentId=AAPL_1113753\"\n      }\n  ],\n  \"filedDate\": \"2022-10-27\",\n  \"filerId\": \"4295905573\",\n  \"filingId\": \"AAPL_1113753\",\n  \"form\": \"TR/E\",\n  \"name\": \"Apple Inc\",\n  \"pageCount\": 4,\n  \"reportPeriod\": \"\",\n  \"source\": \"TR\",\n  \"symbols\": [\n      \"AAPL\"\n  ],\n  \"title\": \"AAPL - Earnings call Q4 2022\",\n  \"url\": \"https://alpharesearch.io/platform/share?filingId=AAPL_1113753\"\n}",
        "section": "Global Filings Search",
        "summary": "Search In Filing",
        "title": "Search In Filing",
        "urlId": "search-in-filing",
        "widget": null
      }
    },
    "/index/constituents": {
      "get": {
        "parameters": [
          {
            "description": "symbol",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicesConstituents",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of index's constituents. A list of supported indices for this endpoint can be found <a href=\"/api/v1/index/list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/index/constituents?symbol=^GSPC",
            "url": "/index/constituents?symbol=^GSPC&token=<token>"
          },
          {
            "text": "/index/constituents?symbol=^FTSE",
            "url": "/index/constituents?symbol=^FTSE&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Indices Constituents",
        "newEndpoint": null,
        "operationId": "indices-constituents",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.IndicesConstituents(context.Background()).Symbol(\"^GSPC\").Execute()",
          "javascript": "finnhubClient.indicesConstituents(\"^GSPC\", (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.indicesConstituents(\"^GSPC\"))",
          "php": "print_r($client->indicesConstituents(\"^GSPC\"));",
          "python": "print(finnhub_client.indices_const(symbol = \"^GSPC\"))",
          "ruby": "puts(finnhub_client.indices_constituents(\"^GSPC\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"constituents\": [\n    \"AAPL\",\n    \"MSFT\"\n  ],\n  \"constituentsBreakdown\": [\n    {\n      \"cusip\": \"037833100\",\n      \"isin\": \"US0378331005\",\n      \"name\": \"Apple Inc\",\n      \"shareClassFIGI\": \"BBG001S5N8V8\",\n      \"symbol\": \"AAPL\",\n      \"weight\": 7.03049\n    },\n    {\n      \"cusip\": \"594918104\",\n      \"isin\": \"US5949181045\",\n      \"name\": \"Microsoft Corp\",\n      \"shareClassFIGI\": \"BBG001S5TD05\",\n      \"symbol\": \"MSFT\",\n      \"weight\": 6.3839\n    }\n  ],\n  \"symbol\": \"^GSPC\"\n}",
        "section": "ETFs & Indices",
        "summary": "Indices Constituents",
        "title": "Indices Constituents API",
        "urlId": "indices-constituents",
        "widget": null
      }
    },
    "/index/historical-constituents": {
      "get": {
        "parameters": [
          {
            "description": "symbol",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicesHistoricalConstituents",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get full history of index's constituents including symbols and dates of joining and leaving the Index. A list of supported indices for this endpoint can be found <a href=\"/api/v1/index/historical-list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/index/historical-constituents?symbol=^GSPC",
            "url": "/index/historical-constituents?symbol=^GSPC&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Historical Constituents",
        "newEndpoint": null,
        "operationId": "indices-historical-constituents",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.IndicesHistoricalConstituents(context.Background()).Symbol(\"^GSPC\").Execute()",
          "javascript": "finnhubClient.indicesHistoricalConstituents(\"^GSPC\", (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.indicesHistoricalConstituents(\"^GSPC\"))",
          "php": "print_r($client->indicesHistoricalConstituents(\"^GSPC\"));",
          "python": "print(finnhub_client.indices_hist_const(symbol = \"^GSPC\"))",
          "ruby": "puts(finnhub_client.indices_historical_constituents(\"^GSPC\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"historicalConstituents\": [\n    {\n      \"action\": \"add\",\n      \"symbol\": \"TYL\",\n      \"date\": \"2020-06-22\"\n    },\n    {\n      \"action\": \"add\",\n      \"symbol\": \"TDY\",\n      \"date\": \"2020-06-22\"\n    },\n    {\n      \"action\": \"remove\",\n      \"symbol\": \"JWN\",\n      \"date\": \"2020-06-22\"\n    }\n  ],\n  \"symbol\": \"^GSPC\"\n}",
        "section": "ETFs & Indices",
        "summary": "Indices Historical Constituents",
        "title": "Indices Historical Constituents API | Join & Leave History",
        "urlId": "indices-historical-constituents",
        "widget": null
      }
    },
    "/indicator": {
      "get": {
        "parameters": [
          {
            "description": "symbol",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UNIX timestamp. Interval initial value.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "UNIX timestamp. Interval end value.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Indicator name. Full list can be found <a href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\" target=\"_blank\">here</a>.",
            "in": "query",
            "name": "indicator",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechnicalIndicator",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Return technical indicator with price data. List of supported indicators can be found <a href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/indicator?symbol=symbol=AAPL&resolution=D&from=1583098857&to=1584308457&indicator=sma&timeperiod=3",
            "url": "/indicator?symbol=AAPL&resolution=D&from=1583098857&to=1584308457&indicator=sma&timeperiod=3&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Technical Indicators",
        "newEndpoint": null,
        "operationId": "technical-indicator",
        "premium": "Premium Access Required",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorFields"
              }
            }
          },
          "description": "Check out <a href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\" target=\"_blank\">this page</a> to see which indicators and params are supported."
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.TechnicalIndicator(context.Background()).Symbol(\"AAPL\").Resolution(\"D\").From(1583098857).To(1584308457).Indicator(\"sma\").IndicatorFields(map[string]interface{}{\"timeperiod\": 3}).Execute()",
          "javascript": "finnhubClient.technicalIndicator(\"AAPL\", \"D\", 1580988249, 1591852249, \"macd\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(\n            apiClient.technicalIndicator(\n                symbol = \"AAPL\",\n                resolution = \"D\",\n                from = 1583098857L,\n                to = 1584308457L,\n                indicator = \"sma\",\n                indicatorFields = mapOf<String, Any>(\"timeperiod\" to 3)\n            )\n        )",
          "php": "$indicatorFields = new stdClass();\n$indicatorFields->timeperiod = 3;\nprint_r($client->technicalIndicator(\"AAPL\", \"D\", 1583098857, 1584308457, \"rsi\", $indicatorFields));",
          "python": "print(finnhub_client.technical_indicator(symbol=\"AAPL\", resolution='D', _from=1583098857, to=1584308457, indicator='rsi', indicator_fields={\"timeperiod\": 3}))",
          "ruby": "puts(finnhub_client.technical_indicator(\"AAPL\", 'D', 1583098857, 1584308457, 'rsi', {indicator_fields:{'timeperiod': 3}}))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\"sma\":[0,0,74.23916,73.74833,73.72416,70.676666,70.045,68.911,67.41666,66.802],\"t\":[1583107200,1583193600,1583280000,1583366400,1583452800,1583712000,1583798400,1583884800,1583971200,1584057600]}",
        "section": "Technical Analysis",
        "summary": "Technical Indicators",
        "title": "Technical Indicators API for Stocks, Forex, Crypto",
        "urlId": "technical-indicator",
        "widget": null
      }
    },
    "/institutional/ownership": {
      "get": {
        "parameters": [
          {
            "description": "Filter by symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by CUSIP.",
            "in": "query",
            "name": "cusip",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionalOwnership",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list institutional investors' positions for a particular stock overtime. Data from 13-F filings. Limit to 1 year of data at a time.",
        "examples": [
          {
            "text": "/institutional/ownership?symbol=TSLA&from=2022-09-01&to=2022-10-30",
            "url": "/institutional/ownership?symbol=TSLA&from=2022-09-01&to=2022-10-30&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Institutional Ownership",
        "newEndpoint": null,
        "operationId": "institutional-ownership",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.InstitutionalOwnership(context.Background()).Symbol(\"TSLA\").From(\"2022-10-01\").To(\"2022-10-11\").Execute()",
          "javascript": "finnhubClient.institutionalOwnership(\"TSLA\", \"\", \"2022-10-01\",\"2022-10-11\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println( apiClient.institutionalOwnership(\"TSLA\", \"\", from = \"2022-10-01\", to = \"2022-10-11\"))",
          "php": "print_r($client->institutionalOwnership(\"TSLA\", \"\",\"2022-01-01\", \"2022-06-11\"));",
          "python": "print(finnhub_client.institutional_ownership(symbol=\"TSLA\", cusip=\"\", _from=\"2022-10-01\", to=\"2022-10-11\"))",
          "ruby": "puts(finnhub_client.institutional_ownership(\"TSLA\", \"\", \"2022-10-01\",\"2022-10-11\"))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cusip\": \"023135106\",\n  \"data\": [\n    {\n      \"ownership\": [\n        {\n          \"change\": null,\n          \"cik\": \"1000097\",\n          \"name\": \"KINGDON CAPITAL MANAGEMENT, L.L.C.\",\n          \"noVoting\": 0,\n          \"percentage\": 6.23893,\n          \"putCall\": \"\",\n          \"share\": 11250,\n          \"sharedVoting\": 0,\n          \"soleVoting\": 11250,\n          \"value\": 36674000\n        }\n      ],\n      \"reportDate\": \"2022-03-31\"\n    }\n  ],\n  \"symbol\": \"AMZN\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Institutional Ownership",
        "title": "Institutional Ownership.",
        "urlId": "institutional-ownership",
        "widget": null
      }
    },
    "/institutional/portfolio": {
      "get": {
        "parameters": [
          {
            "description": "Fund's CIK.",
            "in": "query",
            "name": "cik",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionalPortfolio",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get the holdings/portfolio data of institutional investors from 13-F filings. Limit to 1 year of data at a time. You can get a list of supported CIK <a href=\"/api/v1/institutional/list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/institutional/portfolio?cik=1000097&from=2022-05-01&to=2022-09-01",
            "url": "/institutional/portfolio?cik=1000097&from=2022-05-01&to=2022-09-01&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Institutional Portfolio",
        "newEndpoint": null,
        "operationId": "institutional-portfolio",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.InstitutionalPortfolio(context.Background()).Cik(\"1000097\").From(\"2022-10-01\").To(\"2022-10-11\").Execute()",
          "javascript": "finnhubClient.institutionalPortfolio(\"1000097\", \"2022-10-01\",\"2022-10-11\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println( apiClient.institutionalPortfolio(\"1000097\", from = \"2022-10-01\", to = \"2020-10-11\"))",
          "php": "print_r($client->institutionalPortfolio(\"1000097\",\"2020-01-01\", \"2020-06-11\"));",
          "python": "print(finnhub_client.institutional_portfolio(cik=\"1000097\", _from=\"2022-10-01\", to=\"2022-10-11\"))",
          "ruby": "puts(finnhub_client.institutional_portfolio(\"1000097\", \"2022-10-01\",\"2022-10-11\"))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"1000097\",\n  \"data\": [\n    {\n      \"filingDate\": \"2022-06-30\",\n      \"portfolio\": [\n        {\n          \"change\": -41600,\n          \"name\": \"ABBOTT LABS\",\n          \"noVoting\": 0,\n          \"percentage\": 0,\n          \"putCall\": \"\",\n          \"share\": 0,\n          \"sharedVoting\": 0,\n          \"soleVoting\": 41600,\n          \"symbol\": \"ABT\",\n          \"value\": 0\n        },\n        {\n          \"change\": -275000,\n          \"name\": \"ADICET BIO INC\",\n          \"noVoting\": 0,\n          \"percentage\": 0,\n          \"putCall\": \"\",\n          \"share\": 0,\n          \"sharedVoting\": 0,\n          \"soleVoting\": 275000,\n          \"symbol\": \"ACET\",\n          \"value\": 0\n        }\n      ],\n      \"reportDate\": \"2022-06-30\"\n    }\n  ],\n  \"name\": \"KINGDON CAPITAL MANAGEMENT, L.L.C.\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Institutional Portfolio",
        "title": "Institutional Holdings 13-F API.",
        "urlId": "institutional-portfolio-13f",
        "widget": null
      }
    },
    "/institutional/profile": {
      "get": {
        "parameters": [
          {
            "description": "Filter by CIK. Leave blank to get the full list.",
            "in": "query",
            "name": "cik",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionalProfile",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of well-known institutional investors. Currently support 60+ profiles.",
        "examples": [
          {
            "text": "/institutional/profile",
            "url": "/institutional/profile?token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Institutional Profile",
        "newEndpoint": null,
        "operationId": "institutional-profile",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.InstitutionalProfile(context.Background()).Execute()",
          "javascript": "finnhubClient.institutionalProfile({\"cik\": \"\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.institutionalProfile())",
          "php": "print_r($client->institutionalProfile());",
          "python": "print(finnhub_client.institutional_profile()",
          "ruby": "puts(finnhub_client.institutional_profile({cik: \"\"}))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"1067983\",\n  \"data\": [\n    {\n      \"cik\": \"1067983\",\n      \"firmType\": \"Institutional Investment Manager\",\n      \"manager\": \"Warren Buffett\",\n      \"philosophy\": \"Value investing is the hallmark of Warren Buffett's investment approach. By choosing stocks whose share price is below their intrinsic or book value, value investors can increase their returns. This suggests that the stock will increase in value going forward and that the market is now undervaluing it. Only enterprises that Buffett is familiar with are chosen for investment by Berkshire, and a safety margin is always required.\",\n      \"profile\": \"Warren Edward Buffett (born August 30, 1930) is an American business magnate, investor, and philanthropist. He is currently the chairman and CEO of Berkshire Hathaway. He is one of the most successful investors in the world and has a net worth of over $103 billion as of August 2022, making him the world's seventh-wealthiest person. Buffett has been the chairman and largest shareholder of Berkshire Hathaway since 1970. He has been referred to as the \\\"Oracle\\\" or \\\"Sage\\\" of Omaha by global media. He is noted for his adherence to value investing, and his personal frugality despite his immense wealth. Buffett is a philanthropist, having pledged to give away 99 percent of his fortune to philanthropic causes, primarily via the Bill \\u0026 Melinda Gates Foundation. He founded The Giving Pledge in 2010 with Bill Gates, whereby billionaires pledge to give away at least half of their fortunes.\",\n      \"profileImg\": \"https://static4.finnhub.io/file/publicdatany5/guru_profile_pic/1067983.jpg\"\n    }\n  ]\n}",
        "section": "Stock Fundamentals",
        "summary": "Institutional Profile",
        "title": "Institutional Profile API.",
        "urlId": "institutional-profile",
        "widget": null
      }
    },
    "/mutual-fund/country": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fund's isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MutualFundCountryExposure",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get Mutual Funds country exposure data.",
        "examples": [
          {
            "text": "/mutual-fund/country?symbol=FNILX",
            "url": "/mutual-fund/country?symbol=FNILX&token=<token>"
          },
          {
            "text": "/mutual-fund/country?symbol=VFIAX",
            "url": "/mutual-fund/country?symbol=VFIAX&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Mutual Funds Country",
        "newEndpoint": null,
        "operationId": "mutual-fund-country-exposure",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MutualFundCountryExposure(context.Background()).Symbol(\"VTSAX\").Execute()",
          "javascript": "finnhubClient.mutualFundCountryExposure('VTSAX', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.mutualFundCountryExposure(\"VTSAX\"))",
          "php": "print_r($client->mutualFundCountryExposure(\"VTSAX\"));",
          "python": "print(finnhub_client.mutual_fund_country_exp(\"VTSAX\"))",
          "ruby": "puts(finnhub_client.mutual_fund_country_exposure('VTSAX'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"countryExposure\": [\n    {\n      \"country\": \"United States of America (the)\",\n      \"exposure\": 96.87\n    },\n    {\n      \"country\": \"Ireland\",\n      \"exposure\": 1.58\n    },\n    {\n      \"country\": \"United Kingdom of Great Britain and Northern Ireland (the)\",\n      \"exposure\": 0.62\n    },\n    {\n      \"country\": \"Switzerland\",\n      \"exposure\": 0.32\n    },\n    {\n      \"country\": \"Bermuda\",\n      \"exposure\": 0.29\n    },\n    {\n      \"country\": \"Canada\",\n      \"exposure\": 0.2\n    }\n  ],\n  \"symbol\": \"VTSAX\"\n}",
        "section": "Mutual Funds",
        "summary": "Mutual Funds Country Exposure",
        "title": "Mutual Funds Country Exposure Breakdown",
        "urlId": "mutual-fund-country-exposure",
        "widget": null
      }
    },
    "/mutual-fund/eet": {
      "get": {
        "parameters": [
          {
            "description": "ISIN.",
            "in": "query",
            "name": "isin",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MutualFundEet",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get EET data for EU funds. For PAIs data, please see the EET PAI endpoint.",
        "examples": [
          {
            "text": "/mutual-fund/eet?isin=LU2036931686",
            "url": "/mutual-fund/eet?isin=LU2036931686&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Mutual Funds EET",
        "newEndpoint": null,
        "operationId": "mutual-fund-eet",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MutualFundEet(context.Background()).Isin(\"LU2036931686\").Execute()",
          "javascript": "finnhubClient.mutualFundEet('LU2036931686', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.mutualFundEet(\"LU2036931686\"))",
          "php": "print_r($client->mutualFundEet(\"LU2036931686\"));",
          "python": "print(finnhub_client.mutual_fund_eet(\"LU2036931686\"))",
          "ruby": "puts(finnhub_client.mutual_fund_eet('LU2036931686'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"data\":{\n      \"boardGenderDiversityConsidered\":true,\n      \"carbonFootprintScope123Considered\":false,\n      \"carbonFootprintScope12Considered\":false,\n      \"clientSustainabilityPreferencesConsidered\":true,\n      \"controversialWeaponsConsidered\":true,\n      \"energyConsumptionIntensityNACEAConsidered\":false,\n      \"exposuretoEnergyEfficientRealEstateAssetsConsidered\":false,\n      \"exposuretoFossilFuelSectorConsidered\":false,\n      \"exposuretoFossilFuelsExtractionStorageTransportManufactureConsidered\":false,\n      \"greenhouseGasEmissionsScope1Considered\":false,\n      \"greenhouseGasEmissionsScope2Considered\":false,\n      \"greenhouseGasEmissionsScope3Considered\":false,\n   },\n   \"isin\":\"LU2036931686\"\n}",
        "section": "Mutual Funds",
        "summary": "Mutual Funds EET",
        "title": "Mutual Funds EET Data API",
        "urlId": "mutual-fund-eet",
        "widget": null
      }
    },
    "/mutual-fund/eet-pai": {
      "get": {
        "parameters": [
          {
            "description": "ISIN.",
            "in": "query",
            "name": "isin",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MutualFundEetPai",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get EET PAI data for EU funds.",
        "examples": [
          {
            "text": "/mutual-fund/eet-pai?isin=LU2036931686",
            "url": "/mutual-fund/eet-pai?isin=LU2036931686&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Mutual Funds EET PAI",
        "newEndpoint": null,
        "operationId": "mutual-fund-eet-pai",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MutualFundEetPai(context.Background()).Isin(\"LU2036931686\").Execute()",
          "javascript": "finnhubClient.mutualFundEetPai('LU2036931686', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.mutualFundEetPai(\"LU2036931686\"))",
          "php": "print_r($client->mutualFundEetPai(\"LU2036931686\"));",
          "python": "print(finnhub_client.mutual_fund_eet_pai(\"LU2036931686\"))",
          "ruby": "puts(finnhub_client.mutual_fund_eet_pai('LU2036931686'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"data\":{\n      \"airPollutantEmissionsCoveredHoldings\":27.94263,\n      \"airPollutantEmissionsEligibleHoldings\":490.89858,\n      \"airPollutantEmissionsNumberHoldingsCovered\":14,\n      \"airPollutantEmissionsPctPortfolioCoverage\":4.57,\n      \"airPollutantEmissionsPctPortfolioEligibleAssets\":79.65,\n      \"airPollutantEmissionsTonnesPerEURm\":1.28271,\n      \"antiHumanTraffickingNumberHoldingsCovered\":67,\n   },\n   \"isin\":\"LU2036931686\"\n}",
        "section": "Mutual Funds",
        "summary": "Mutual Funds EET PAI",
        "title": "Mutual Funds EET PAI Data API",
        "urlId": "mutual-fund-eet-pai",
        "widget": null
      }
    },
    "/mutual-fund/holdings": {
      "get": {
        "parameters": [
          {
            "description": "Fund's symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fund's isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skip the first n results. You can use this parameter to query historical constituents data. The latest result is returned if skip=0 or not set.",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MutualFundHoldings",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get full Mutual Funds holdings/constituents. This endpoint covers both US and global mutual funds. For international funds, you must query the data using ISIN. A list of supported funds can be found <a href=\"/api/v1/mutual-fund/list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/mutual-fund/holdings?symbol=VTSAX",
            "url": "/mutual-fund/holdings?symbol=VTSAX&token=<token>"
          },
          {
            "text": "/mutual-fund/holdings?isin=US9229087286&skip=1",
            "url": "/mutual-fund/holdings?isin=US9229087286&skip=1&token=<token>"
          },
          {
            "text": "/mutual-fund/holdings?isin=LU1748855837",
            "url": "/mutual-fund/holdings?isin=LU1748855837&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Mutual Funds Holdings",
        "newEndpoint": null,
        "operationId": "mutual-fund-holdings",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MutualFundHoldings(context.Background()).Symbol(\"VTSAX\").Execute()",
          "javascript": "finnhubClient.mutualFundHoldings({'symbol': 'VTSAX'}, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.mutualFundHoldings(\"VTSAX\", \"\", 0))",
          "php": "print_r($client->mutualFundHoldings(\"VTSAX\"));",
          "python": "print(finnhub_client.mutual_fund_holdings(\"VTSAX\"))",
          "ruby": "puts(finnhub_client.mutual_fund_holdings({symbol:'VTSAX'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"atDate\": \"2023-01-31\",\n  \"holdings\": [\n    {\n      \"assetType\": \"Equity\",\n      \"cusip\": \"037833100\",\n      \"isin\": \"US0378331005\",\n      \"name\": \"Apple Inc\",\n      \"percent\": 5.36984,\n      \"share\": 463159883,\n      \"symbol\": \"AAPL\",\n      \"value\": 66829339518\n    },\n    {\n      \"assetType\": \"Equity\",\n      \"cusip\": \"594918104\",\n      \"isin\": \"US5949181045\",\n      \"name\": \"Microsoft Corp\",\n      \"percent\": 4.54903,\n      \"share\": 228457719,\n      \"symbol\": \"MSFT\",\n      \"value\": 56614107345\n    }\n  ],\n  \"numberOfHoldings\": 3972,\n  \"symbol\": \"VTSAX\"\n}",
        "section": "Mutual Funds",
        "summary": "Mutual Funds Holdings",
        "title": "Global Mutual Funds Holdings & Constituents API",
        "urlId": "mutual-fund-holdings",
        "widget": null
      }
    },
    "/mutual-fund/profile": {
      "get": {
        "parameters": [
          {
            "description": "Fund's symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fund's isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MutualFundProfile",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get mutual funds profile information. This endpoint covers both US and global mutual funds. For international funds, you must query the data using ISIN. A list of supported funds can be found <a href=\"/api/v1/mutual-fund/list?token=\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/mutual-fund/profile?symbol=VTSAX",
            "url": "/mutual-fund/profile?symbol=VTSAX&token=<token>"
          },
          {
            "text": "/mutual-fund/profile?isin=US9229087286",
            "url": "/mutual-fund/profile?isin=US9229087286&token=<token>"
          },
          {
            "text": "/mutual-fund/profile?isin=LU1748855837",
            "url": "/mutual-fund/profile?isin=LU1748855837&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Mutual Funds Profile",
        "newEndpoint": null,
        "operationId": "mutual-fund-profile",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MutualFundProfile(context.Background()).Symbol(\"VTSAX\").Execute()",
          "javascript": "finnhubClient.mutualFundProfile({'symbol': 'VTSAX'}, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.mutualFundProfile(\"VTSAX\", \"\"))",
          "php": "print_r($client->mutualFundProfile(\"VTSAX\"));",
          "python": "print(finnhub_client.mutual_fund_profile(\"VTSAX\"))",
          "ruby": "puts(finnhub_client.mutual_fund_profile({symbol:'VTSAX'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"profile\": {\n    \"benchmark\": \"CRSP US Total Stock Market TR\",\n    \"beta\": 1.05,\n    \"category\": \"Multi-Cap Core\",\n    \"cusip\": \"\",\n    \"deferredLoad\": 0,\n    \"description\": \"Created in 1992, Vanguard Total Stock Market Index Fund is designed to provide investors with exposure to the entire U.S. equity market, including small-, mid-, and large-cap growth and value stocks. The fund\u2019s key attributes are its low costs, broad diversification, and the potential for tax efficiency. Investors looking for a low-cost way to gain broad exposure to the U.S. stock market who are willing to accept the volatility that comes with stock market investing may wish to consider this fund as either a core equity holding or your only domestic stock fund.\",\n    \"expenseRatio\": 0.04,\n    \"fee12b1\": 0,\n    \"frontLoad\": 0,\n    \"fundFamily\": \"VANGUARD ADMIRAL\",\n    \"inceptionDate\": \"2000-11-13\",\n    \"investmentSegment\": \"Growth & Income\",\n    \"iraMinInvestment\": 0,\n    \"isin\": \"\",\n    \"manager\": \"O'Reilly,Nejman\",\n    \"maxRedemptionFee\": 0,\n    \"name\": \"Vanguard Index Funds: Vanguard Total Stock Market Index Fund; Admiral Class Shares\",\n    \"standardMinInvestment\": 3000,\n    \"status\": \"Open\",\n    \"totalNav\": 280758000000,\n    \"turnover\": 8\n  },\n  \"symbol\": \"VTSAX\"\n}",
        "section": "Mutual Funds",
        "summary": "Mutual Funds Profile",
        "title": "Mutual Funds profile",
        "urlId": "mutual-fund-profile",
        "widget": null
      }
    },
    "/mutual-fund/sector": {
      "get": {
        "parameters": [
          {
            "description": "Mutual Fund symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fund's isin.",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MutualFundSectorExposure",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get Mutual Funds sector exposure data.",
        "examples": [
          {
            "text": "/mutual-fund/sector?symbol=VTSAX",
            "url": "/mutual-fund/sector?symbol=VTSAX&token=<token>"
          },
          {
            "text": "/mutual-fund/sector?symbol=FNILX",
            "url": "/mutual-fund/sector?symbol=FNILX&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Mutual Funds Sector",
        "newEndpoint": null,
        "operationId": "mutual-fund-sector-exposure",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MutualFundSectorExposure(context.Background()).Symbol(\"VTSAX\").Execute()",
          "javascript": "finnhubClient.mutualFundSectorExposure('VTSAX', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.mutualFundSectorExposure(\"VTSAX\"))",
          "php": "print_r($client->mutualFundSectorExposure(\"VTSAX\"));",
          "python": "print(finnhub_client.mutual_fund_sector_exp(\"VTSAX\"))",
          "ruby": "puts(finnhub_client.mutual_fund_sector_exposure('VTSAX'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"sectorExposure\": [\n    {\n      \"exposure\": 26.2,\n      \"sector\": \"Information Technology\"\n    },\n    {\n      \"exposure\": 13.84,\n      \"sector\": \"Health Care\"\n    },\n    {\n      \"exposure\": 12.29,\n      \"sector\": \"Consumer Discretionary\"\n    },\n    {\n      \"exposure\": 10.46,\n      \"sector\": \"Financials\"\n    }\n  ],\n  \"symbol\": \"VTSAX\"\n}",
        "section": "Mutual Funds",
        "summary": "Mutual Funds Sector Exposure",
        "title": "Mutual Funds Sector Breakdown",
        "urlId": "mutual-fund-sector-exposure",
        "widget": null
      }
    },
    "/news": {
      "get": {
        "parameters": [
          {
            "description": "This parameter can be 1 of the following values <code>general, forex, crypto, merger</code>.",
            "in": "query",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use this field to get only news after this ID. Default to 0",
            "in": "query",
            "name": "minId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MarketNews"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get latest market news.",
        "examples": [
          {
            "text": "/news?category=general",
            "url": "/news?category=general&token=<token>"
          },
          {
            "text": "/news?category=forex&minId=10",
            "url": "/news?category=forex&minId=10&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Market News",
        "newEndpoint": null,
        "operationId": "market-news",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MarketNews(context.Background()).Category(\"general\").Execute()",
          "javascript": "finnhubClient.marketNews(\"general\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.marketNews(\"general\", minId = 0))",
          "php": "print_r($client->marketNews(\"forex\", 0));",
          "python": "print(finnhub_client.general_news('general', min_id=0))",
          "ruby": "puts(finnhub_client.market_news('general', {min_id: 0}))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"category\": \"technology\",\n    \"datetime\": 1596589501,\n    \"headline\": \"Square surges after reporting 64% jump in revenue, more customers using Cash App\",\n    \"id\": 5085164,\n    \"image\": \"https://image.cnbcfm.com/api/v1/image/105569283-1542050972462rts25mct.jpg?v=1542051069\",\n    \"related\": \"\",\n    \"source\": \"CNBC\",\n    \"summary\": \"Shares of Square soared on Tuesday evening after posting better-than-expected quarterly results and strong growth in its consumer payments app.\",\n    \"url\": \"https://www.cnbc.com/2020/08/04/square-sq-earnings-q2-2020.html\"\n  },\n  {\n    \"category\": \"business\",\n    \"datetime\": 1596588232,\n    \"headline\": \"B&G Foods CEO expects pantry demand to hold up post-pandemic\",\n    \"id\": 5085113,\n    \"image\": \"https://image.cnbcfm.com/api/v1/image/106629991-1595532157669-gettyimages-1221952946-362857076_1-5.jpeg?v=1595532242\",\n    \"related\": \"\",\n    \"source\": \"CNBC\",\n    \"summary\": \"\\\"I think post-Covid, people will be working more at home, which means people will be eating more breakfast\\\" and other meals at home, B&G CEO Ken Romanzi said.\",\n    \"url\": \"https://www.cnbc.com/2020/08/04/bg-foods-ceo-expects-pantry-demand-to-hold-up-post-pandemic.html\"\n  },\n  {\n    \"category\": \"top news\",\n    \"datetime\": 1596584406,\n    \"headline\": \"Anthony Levandowski gets 18 months in prison for stealing Google self-driving car files\",\n    \"id\": 5084850,\n    \"image\": \"https://image.cnbcfm.com/api/v1/image/106648265-1596584130509-UBER-LEVANDOWSKI.JPG?v=1596584247\",\n    \"related\": \"\",\n    \"source\": \"CNBC\",\n    \"summary\": \"A U.S. judge on Tuesday sentenced former Google engineer Anthony Levandowski to 18 months in prison for stealing a trade secret from Google related to self-driving cars months before becoming the head of Uber Technologies Inc's rival unit.\",\n    \"url\": \"https://www.cnbc.com/2020/08/04/anthony-levandowski-gets-18-months-in-prison-for-stealing-google-self-driving-car-files.html\"\n  }\n  }]",
        "section": "Stock Fundamentals",
        "summary": "Market News",
        "title": "Real-time Market News API",
        "urlId": "market-news",
        "widget": null
      }
    },
    "/news-sentiment": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsSentiment",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company's news sentiment and statistics. This endpoint is only available for US companies.",
        "examples": [
          {
            "text": "/news-sentiment?symbol=V",
            "url": "/news-sentiment?symbol=V&token=<token>"
          },
          {
            "text": "/news-sentiment?symbol=AAPL",
            "url": "/news-sentiment?symbol=AAPL&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "News Sentiment",
        "newEndpoint": null,
        "operationId": "news-sentiment",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.NewsSentiment(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.newsSentiment('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.newsSentiment(\"AAPL\"))",
          "php": "print_r($client->newsSentiment(\"AAPL\"));",
          "python": "print(finnhub_client.news_sentiment('AAPL'))",
          "ruby": "puts(finnhub_client.news_sentiment('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"buzz\": {\n    \"articlesInLastWeek\": 20,\n    \"buzz\": 0.8888,\n    \"weeklyAverage\": 22.5\n  },\n  \"companyNewsScore\": 0.9166,\n  \"sectorAverageBullishPercent\": 0.6482,\n  \"sectorAverageNewsScore\": 0.5191,\n  \"sentiment\": {\n    \"bearishPercent\": 0,\n    \"bullishPercent\": 1\n  },\n  \"symbol\": \"V\"\n}",
        "section": "Stock Fundamentals",
        "summary": "News Sentiment",
        "title": "News Sentiment",
        "urlId": "news-sentiment",
        "widget": null
      }
    },
    "/press-releases": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From time: 2020-01-01.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To time: 2020-01-05.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PressRelease",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get latest major press releases of a company. This data can be used to highlight the most significant events comprised of mostly press releases sourced from the exchanges, BusinessWire, AccessWire, GlobeNewswire, Newsfile, and PRNewswire.</p><p>Full-text press releases data is available for Enterprise clients. <a href=\"mailto:support@finnhub.io\">Contact Us</a> to learn more.</p>",
        "examples": [
          {
            "text": "/press-releases?symbol=AAPL",
            "url": "/press-releases?symbol=AAPL&token=<token>"
          },
          {
            "text": "/press-releases?symbol=IBM&from=2019-11-01&to=2020-02-15",
            "url": "/press-releases?symbol=IBM&from=2019-11-01&to=2020-02-15&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Press Releases",
        "newEndpoint": null,
        "operationId": "press-releases",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.PressReleases(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.pressReleases(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.pressReleases(\"AAPL\", from = \"2020-01-01\", to = \"2020-12-31\"))",
          "php": "print_r($client->pressReleases(\"AAPL\", \"2020-01-01\", \"2020-12-31\"));",
          "python": "print(finnhub_client.press_releases('AAPL'))",
          "ruby": "puts(finnhub_client.press_releases('AAPL', {from: \"2020-01-01\", to: \"2020-12-31\"}))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"majorDevelopment\": [\n    {\n      \"symbol\": \"AAPL\",\n      \"datetime\": \"2020-08-04 17:06:32\",\n      \"headline\": \"27-inch iMac Gets a Major Update\",\n      \"description\": \"CUPERTINO, Calif.--(BUSINESS WIRE)-- Apple today announced a major update to its 27-inch iMac\u00ae. By far the most powerful and capable iMac ever, it features faster Intel processors up to 10 cores, double the memory capacity, next-generation AMD graphics, superfast SSDs across the line with four times the storage capacity, a new nano-texture glass option for an even more stunning Retina\u00ae 5K display, a 1080p FaceTime\u00ae HD camera, higher fidelity speakers, and studio-quality mics. For the consumer using their iMac all day, every day, to the aspiring creative looking for inspiration, to the serious pro pushing the limits of their creativity, the new 27-inch iMac delivers the ultimate desktop experience that is now better in every way.\"\n    },\n    {\n      \"symbol\": \"AAPL\",\n      \"datetime\": \"2020-03-28 09:41:23\",\n      \"headline\": \"Apple Central World Opens Friday in Thailand\",\n      \"description\": \"BANGKOK--(BUSINESS WIRE)-- Apple\u00ae today previewed Apple Central World, its second and largest retail location in Thailand. Nestled in the heart of Ratchaprasong, Bangkok\u2019s iconic intersection, the store provides a completely new and accessible destination within the lively city. Apple Central World\u2019s distinctive architecture is brought to life with the first-ever all-glass design, housed under a cantilevered Tree Canopy roof. Once inside, customers can travel between two levels via a spiral staircase that wraps around a timber core, or riding a unique cylindrical elevator clad in mirror-polished stainless steel. Guests can enter from the ground or upper level, which provides a direct connection to the Skytrain and the city\u2019s largest shopping center. The outdoor plaza offers a place for the community to gather, with benches and large Terminalia trees surrounding the space.\"\n    }\n  ],\n   \"symbol\": \"AAPL\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Major Press Releases",
        "title": "Real-time Press Releases API",
        "urlId": "press-releases",
        "widget": null
      }
    },
    "/quote": {
      "get": {
        "parameters": [
          {
            "description": "Symbol",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get real-time quote data for US stocks. Constant polling is not recommended. Use websocket if you need real-time updates.</p><p>Real-time stock prices for international markets are supported for Enterprise clients via our partner's feed. <a href=\"mailto:support@finnhub.io\">Contact Us</a> to learn more.</p>",
        "examples": [
          {
            "text": "/quote?symbol=AAPL",
            "url": "/quote?symbol=AAPL&token=<token>"
          },
          {
            "text": "/quote?symbol=MSFT",
            "url": "/quote?symbol=MSFT&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": "High Usage",
        "navHeader": "Quote",
        "newEndpoint": null,
        "operationId": "quote",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.Quote(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.quote(\"AAPL\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.quote(\"AAPL\"))",
          "php": "print_r($client->quote(\"AAPL\"));",
          "python": "print(finnhub_client.quote('AAPL'))",
          "ruby": "puts(finnhub_client.quote('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": 261.74,\n  \"h\": 263.31,\n  \"l\": 260.68,\n  \"o\": 261.07,\n  \"pc\": 259.45,\n  \"t\": 1582641000 \n}",
        "section": "Stock Price",
        "summary": "Quote",
        "title": "Global Stocks, Forex, Crypto price",
        "urlId": "quote",
        "widget": null
      }
    },
    "/scan/pattern": {
      "get": {
        "parameters": [
          {
            "description": "Symbol",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatternRecognition",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Run pattern recognition algorithm on a symbol. Support double top/bottom, triple top/bottom, head and shoulders, triangle, wedge, channel, flag, and candlestick patterns.",
        "examples": [
          {
            "text": "/scan/pattern?symbol=AAPL&resolution=D",
            "url": "/scan/pattern?symbol=AAPL&resolution=D&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Pattern Recognition",
        "newEndpoint": null,
        "operationId": "pattern-recognition",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.PatternRecognition(context.Background()).Symbol(\"AAPL\").Resolution(\"D\").Execute()",
          "javascript": "finnhubClient.patternRecognition(\"AAPL\", \"D\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.patternRecognition(\"AAPL\", \"D\"))",
          "php": "print_r($client->patternRecognition(\"AAPL\", \"D\"));",
          "python": "print(finnhub_client.pattern_recognition('AAPL', 'D'))",
          "ruby": "puts(finnhub_client.pattern_recognition('AAPL', 'D'))",
          "useTemplate": true
        },
        "sampleResponse": "\"points\": [\n    {\n      \"aprice\": 1.09236,\n      \"atime\": 1567458000,\n      \"bprice\": 1.1109,\n      \"btime\": 1568322000,\n      \"cprice\": 1.09897,\n      \"ctime\": 1568667600,\n      \"dprice\": 0,\n      \"dtime\": 0,\n      \"end_price\": 1.1109,\n      \"end_time\": 1568926800,\n      \"entry\": 1.1109,\n      \"eprice\": 0,\n      \"etime\": 0,\n      \"mature\": 0,\n      \"patternname\": \"Double Bottom\",\n      \"patterntype\": \"bullish\",\n      \"profit1\": 1.1294,\n      \"profit2\": 0,\n      \"sortTime\": 1568926800,\n      \"start_price\": 1.1109,\n      \"start_time\": 1566853200,\n      \"status\": \"incomplete\",\n      \"stoploss\": 1.0905,\n      \"symbol\": \"EUR_USD\",\n      \"terminal\": 0\n    },\n    {\n      \"aprice\": 1.09236,\n      \"atime\": 1567458000,\n      \"bprice\": 1.1109,\n      \"btime\": 1568322000,\n      \"cprice\": 1.09897,\n      \"ctime\": 1568667600,\n      \"dprice\": 1.13394884,\n      \"dtime\": 1568926800,\n      \"entry\": 1.1339,\n      \"mature\": 0,\n      \"patternname\": \"Bat\",\n      \"patterntype\": \"bearish\",\n      \"profit1\": 1.1181,\n      \"profit2\": 1.1082,\n      \"przmax\": 1.1339,\n      \"przmin\": 1.129,\n      \"rrratio\": 3.34,\n      \"sortTime\": 1568667600,\n      \"status\": \"incomplete\",\n      \"stoploss\": 1.1416,\n      \"symbol\": \"EUR_USD\",\n      \"terminal\": 0,\n      \"xprice\": 1.1393,\n      \"xtime\": 1561669200\n    }\n]",
        "section": "Technical Analysis",
        "summary": "Pattern Recognition",
        "title": "Pattern Recognition API for Stocks, Forex, Crypto",
        "urlId": "pattern-recognition",
        "widget": null
      }
    },
    "/scan/support-resistance": {
      "get": {
        "parameters": [
          {
            "description": "Symbol",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportResistance",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get support and resistance levels for a symbol.",
        "examples": [
          {
            "text": "/scan/support-resistance?symbol=IBM&resolution=D",
            "url": "/scan/support-resistance?symbol=IBM&resolution=D&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Support/Resistance",
        "newEndpoint": null,
        "operationId": "support-resistance",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.SupportResistance(context.Background()).Symbol(\"AAPL\").Resolution(\"D\").Execute()",
          "javascript": "finnhubClient.supportResistance(\"AAPL\", \"D\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.supportResistance(\"AAPL\", \"D\"))",
          "php": "print_r($client->supportResistance(\"AAPL\", \"D\"));",
          "python": "print(finnhub_client.support_resistance('AAPL', 'D'))",
          "ruby": "puts(finnhub_client.support_resistance('AAPL', 'D'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"levels\": [\n    1.092360019683838,\n    1.1026300191879272,\n    1.113450050354004,\n    1.1233500242233276,\n    1.134719967842102,\n    1.1513700485229492\n  ]\n}",
        "section": "Technical Analysis",
        "summary": "Support/Resistance",
        "title": "Support/Resistance Levels API for Stocks, Forex, Crypto",
        "urlId": "support-resistance",
        "widget": null
      }
    },
    "/scan/technical-indicator": {
      "get": {
        "parameters": [
          {
            "description": "symbol",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregateIndicators",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get aggregate signal of multiple technical indicators such as MACD, RSI, Moving Average v.v. A full list of indicators can be found <a href=\"https://docs.google.com/spreadsheets/d/1MWuy0WuT2yVlxr1KbPdggVygMZtJfunDnhe-C0GEXYM/edit?usp=sharing\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/scan/technical-indicator?symbol=AAPL&resolution=D",
            "url": "/scan/technical-indicator?symbol=AAPL&resolution=D&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Aggregate Indicators",
        "newEndpoint": null,
        "operationId": "aggregate-indicator",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.AggregateIndicator(context.Background()).Symbol(\"AAPL\").Resolution(\"D\").Execute()",
          "javascript": "finnhubClient.aggregateIndicator(\"AAPL\", \"D\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.aggregateIndicator(\"AAPL\", \"D\"))",
          "php": "print_r($client->aggregateIndicator(\"AAPL\", \"D\"));",
          "python": "print(finnhub_client.aggregate_indicator('AAPL', 'D'))",
          "ruby": "puts(finnhub_client.aggregate_indicator('AAPL', 'D'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"technicalAnalysis\": {\n    \"count\": {\n      \"buy\": 6,\n      \"neutral\": 7,\n      \"sell\": 4\n    },\n    \"signal\": \"neutral\"\n  },\n  \"trend\": {\n    \"adx\": 24.46020733373421,\n    \"trending\": false\n  }\n}",
        "section": "Technical Analysis",
        "summary": "Aggregate Indicators",
        "title": "Aggregate Indicators/Technical Signal API for Stocks, Forex, Crypto",
        "urlId": "aggregate-indicator",
        "widget": null
      }
    },
    "/search": {
      "get": {
        "parameters": [
          {
            "description": "Query text can be symbol, name, isin, or cusip.",
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Exchange limit.",
            "in": "query",
            "name": "exchange",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SymbolLookup",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Search for best-matching symbols based on your query. You can input anything from symbol, security's name to ISIN and Cusip.",
        "examples": [
          {
            "text": "/search?q=apple&exchange=US",
            "url": "/search?q=apple&exchange=US&token=<token>"
          },
          {
            "text": "/search?q=US5949181045",
            "url": "/search?q=US5949181045&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Symbol Lookup",
        "newEndpoint": null,
        "operationId": "symbol-search",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.SymbolSearch(context.Background()).Q(\"AAPL\").Execute()",
          "javascript": "finnhubClient.symbolSearch('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.symbolSearch(\"AAPL\"))",
          "php": "print_r($client->symbolSearch(\"AAPL\"));",
          "python": "print(finnhub_client.symbol_lookup('apple'))",
          "ruby": "puts(finnhub_client.symbol_search('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"count\": 4,\n  \"result\": [\n    {\n      \"description\": \"APPLE INC\",\n      \"displaySymbol\": \"AAPL\",\n      \"symbol\": \"AAPL\",\n      \"type\": \"Common Stock\"\n    },\n    {\n      \"description\": \"APPLE INC\",\n      \"displaySymbol\": \"AAPL.SW\",\n      \"symbol\": \"AAPL.SW\",\n      \"type\": \"Common Stock\"\n    },\n    {\n      \"description\": \"APPLE INC\",\n      \"displaySymbol\": \"APC.BE\",\n      \"symbol\": \"APC.BE\",\n      \"type\": \"Common Stock\"\n    },\n    {\n      \"description\": \"APPLE INC\",\n      \"displaySymbol\": \"APC.DE\",\n      \"symbol\": \"APC.DE\",\n      \"type\": \"Common Stock\"\n    }\n  ]\n}",
        "section": "Stock Fundamentals",
        "summary": "Symbol Lookup",
        "title": "Global Stocks Search",
        "urlId": "symbol-search",
        "widget": null
      }
    },
    "/sector/metrics": {
      "get": {
        "parameters": [
          {
            "description": "Region. A list of supported values for this field can be found <a href=\"https://docs.google.com/spreadsheets/d/1afedyv7yWJ-z7pMjaAZK-f6ENY3mI3EBCk95QffpoHw/edit?usp=sharing\" target=\"_blank\">here</a>.",
            "in": "query",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorMetric",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get ratios for different sectors and regions/indices.",
        "examples": [
          {
            "text": "/sector/metrics?region=NA",
            "url": "/sector/metrics?region=NA&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Sector Metrics",
        "newEndpoint": null,
        "operationId": "sector-metric",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.SectorMetric(context.Background()).Region(\"NA\").Execute()",
          "javascript": "finnhubClient.sectorMetric(\"NA\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.sectorMetric(\"NA\"))",
          "php": "print_r($client->sectorMetric(\"NA\"));",
          "python": "print(finnhub_client.sector_metric('NA'))",
          "ruby": "puts(finnhub_client.sector_metric('NA'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"metrics\": {\n        \"assetTurnoverAnnual\": {\n          \"a\": 0.7245,\n          \"m\": 0.5426\n        },\n        \"assetTurnoverTTM\": {\n          \"a\": 0.7254,\n          \"m\": 0.5463\n        },\n      },\n      \"sector\": \"Communication Services\"\n    },\n    {\n      \"metrics\": {\n        \"currentDividendYieldTTM\": {\n          \"a\": 30.9763,\n          \"m\": 2.09\n        },\n        \"currentEv/freeCashFlowAnnual\": {\n          \"a\": 286.4793,\n          \"m\": 19.8488\n        },\n      },\n      \"sector\": \"Consumer Discretionary\"\n    }\n  ],\n  \"region\": \"Asia_Ocenia\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Sector Metrics",
        "title": "Get ratios for different sectors and regions/indices (S&P500, Nasdaq 100).",
        "urlId": "sector-metrics",
        "widget": null
      }
    },
    "/stock/bbo": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date: 2020-04-02.",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Limit number of ticks returned. Maximum value: <code>25000</code>",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Number of ticks to skip. Use this parameter to loop through the entire data.",
            "in": "query",
            "name": "skip",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalNBBO",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get historical best bid and offer for US stocks, LSE, TSX, Euronext and Deutsche Borse.</p><p>For US market, this endpoint only serves historical NBBO from the beginning of 2020. To download more historical data, please visit our bulk download page in the Dashboard <a target=\"_blank\" href=\"/dashboard/download\",>here</a>.</p>",
        "examples": [
          {
            "text": "/stock/bbo?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json",
            "url": "/stock/bbo?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json&token=<token>"
          },
          {
            "text": "/stock/bbo?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json",
            "url": "/stock/bbo?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json&token=<token>"
          },
          {
            "text": "/stock/bbo?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json",
            "url": "/stock/bbo?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Historical NBBO",
        "newEndpoint": null,
        "operationId": "stock-nbbo",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockNbbo(context.Background()).Symbol(\"AAPL\").Date(\"2021-07-23\").Limit(50).Skip(0).Execute()",
          "javascript": "finnhubClient.stockNbbo(\"AAPL\", \"2020-03-25\", 500, 0, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.stockNbbo(\"AAPL\", \"2020-03-25\", 500, 0))",
          "php": "print_r($client->stockNbbo(\"AAPL\", \"2020-03-25\", 500, 0));",
          "python": "print(finnhub_client.stock_nbbo('AAPL', '2020-03-25', 500, 0))",
          "ruby": "puts(finnhub_client.stock_nbbo('NFLX', '2020-03-25', 50, 0))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"a\": [\n    137,\n    133.2,\n    126.08\n  ],\n  \"av\": [\n    1,\n    2,\n    1\n  ],\n  \"ax\": [\n    \"P\",\n    \"P\",\n    \"P\"\n  ],\n  \"b\": [\n    116.5,\n    116.5,\n    116.5\n  ],\n  \"bv\": [\n    1,\n    1,\n    1\n  ],\n  \"bx\": [\n    \"P\",\n    \"P\",\n    \"P\"\n  ],\n  \"c\": [\n    [\n      \"1\"\n    ],\n    [\n      \"1\"\n    ],\n    [\n      \"1\"\n    ]\n  ],\n  \"count\": 3,\n  \"s\": \"AAPL\",\n  \"skip\": 5,\n  \"t\": [\n    1615280400047,\n    1615280400047,\n    1615280400047\n  ],\n  \"total\": 2739880\n}",
        "section": "Stock Price",
        "summary": "Historical NBBO",
        "title": "Historical NBBO - Best bid/offer",
        "urlId": "stock-nbbo",
        "widget": null
      }
    },
    "/stock/bidask": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LastBid-Ask",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get last bid/ask data for US stocks.",
        "examples": [
          {
            "text": "/stock/bidask?symbol=AAPL",
            "url": "/stock/bidask?symbol=AAPL&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Last Bid-Ask",
        "newEndpoint": null,
        "operationId": "stock-bidask",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockBidask(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.stockBidask(\"AAPL\", (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.stockBidask(\"AAPL\"))",
          "php": "print_r($client->stockBidask(\"AAPL\"));",
          "python": "print(finnhub_client.last_bid_ask('AAPL'))",
          "ruby": "puts(finnhub_client.stock_bidask('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"a\": 338.65,\n  \"av\": 2,\n  \"b\": 338.61,\n  \"bv\": 2,\n  \"t\": 1591995678874\n}",
        "section": "Stock Price",
        "summary": "Last Bid-Ask",
        "title": "Last Bid & Ask",
        "urlId": "stock-bidask",
        "widget": null
      }
    },
    "/stock/candle": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UNIX timestamp. Interval initial value.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "UNIX timestamp. Interval end value.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCandles",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get candlestick data (OHLCV) for stocks.</p><p>Daily data will be adjusted for Splits. Intraday data will remain unadjusted. Only 1 month of intraday will be returned at a time. If you need more historical intraday data, please use the from and to params iteratively to request more data.</p>",
        "examples": [
          {
            "text": "/stock/candle?symbol=AAPL&resolution=1&from=1738655051&to=1738741451",
            "url": "/stock/candle?symbol=AAPL&resolution=1&from=1738655051&to=1738741451&token=<token>"
          },
          {
            "text": "/stock/candle?symbol=IBM&resolution=D&from=1735976651&to=1738741451",
            "url": "/stock/candle?symbol=IBM&resolution=D&from=1735976651&to=1738741451&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Candles (OHLCV)",
        "newEndpoint": null,
        "operationId": "stock-candles",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockCandles(context.Background()).Symbol(\"AAPL\").Resolution(\"D\").From(1590988249).To(1591852249).Execute()",
          "javascript": "finnhubClient.stockCandles(\"AAPL\", \"D\", 1590988249, 1591852249, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.stockCandles(\"AAPL\", \"D\", 1590988249, 1591852249))",
          "php": "print_r($client->stockCandles(\"AAPL\", \"D\", 1590988249, 1591852249));",
          "python": "print(finnhub_client.stock_candles('AAPL', 'D', 1590988249, 1591852249))",
          "ruby": "puts(finnhub_client.stock_candles('AAPL', 'D', 1590988249, 1591852249))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": [\n    217.68,\n    221.03,\n    219.89\n  ],\n  \"h\": [\n    222.49,\n    221.5,\n    220.94\n  ],\n  \"l\": [\n    217.19,\n    217.1402,\n    218.83\n  ],\n  \"o\": [\n    221.03,\n    218.55,\n    220\n  ],\n  \"s\": \"ok\",\n  \"t\": [\n    1569297600,\n    1569384000,\n    1569470400\n  ],\n  \"v\": [\n    33463820,\n    24018876,\n    20730608\n  ]\n}",
        "section": "Stock Price",
        "summary": "Stock Candles",
        "title": "Global Stocks OHLCV data | Real-time , Delayed, End-of-day",
        "urlId": "stock-candles",
        "widget": {
          "url": "https://widget.finnhub.io/widgets/stocks/chart?symbol=AAPL&watermarkColor=%231db954&backgroundColor=%23222222&textColor=white"
        }
      }
    },
    "/stock/congressional-trading": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CongressionalTrading",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get stock trades data disclosed by members of congress.",
        "examples": [
          {
            "text": "/stock/congressional-trading?symbol=AAPL",
            "url": "/stock/congressional-trading?symbol=AAPL&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Congressional Trading",
        "newEndpoint": null,
        "operationId": "congressional-trading",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CongressionalTrading(context.Background()).Symbol(\"MSFT\").From(\"2020-01-01\").To(\"2023-01-02\").Execute()",
          "javascript": "finnhubClient.congressionalTrading(\"AAPL\", '2020-01-01', '2023-03-31', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.congressionalTrading(\"AAPL\", \"2020-01-01\", \"2023-03-31\"))",
          "php": "print_r($client->congressionalTrading(\"AAPL\", \"2020-01-01\", \"2023-03-31\"));",
          "python": "print(finnhub_client.congressional_trading('AAPL', '2020-01-01', '2023-03-31'))",
          "ruby": "puts(finnhub_client.congressional_trading('AAPL', '2020-01-01', '2023-03-31'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"amountFrom\": 100001,\n      \"amountTo\": 250000,\n      \"assetName\": \"Oppenheimer SteelPath MLP Select 40 Y (NASDAQ)\",\n      \"filingDate\": \"2015-05-14\",\n      \"name\": \"Lamar Alexander\",\n      \"ownerType\": \"Spouse\",\n      \"position\": \"senator\",\n      \"symbol\": \"MLPTX\",\n      \"transactionDate\": \"2014-04-04\",\n      \"transactionType\": \"Purchase\"\n    },\n    {\n      \"amountFrom\": 1001,\n      \"amountTo\": 15000,\n      \"assetName\": \"Oppenheimer SteelPath MLP Select 40 Y (NASDAQ)\",\n      \"filingDate\": \"2015-05-14\",\n      \"name\": \"Lamar Alexander\",\n      \"ownerType\": \"Spouse\",\n      \"position\": \"senator\",\n      \"symbol\": \"MLPTX\",\n      \"transactionDate\": \"2014-02-07\",\n      \"transactionType\": \"Purchase\"\n    }\n  ],\n  \"symbol\": \"MLPTX\"\n}",
        "section": "Alternative Data",
        "summary": "Congressional Trading",
        "title": "Congressional Stock Trades API.",
        "urlId": "congressional-trading",
        "widget": null
      }
    },
    "/stock/dividend": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "YYYY-MM-DD.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "YYYY-MM-DD.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Dividends"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get dividends data for common stocks going back 30 years.",
        "examples": [
          {
            "text": "/stock/dividend?symbol=AAPL&from=2022-02-01&to=2023-02-01",
            "url": "/stock/dividend?symbol=AAPL&from=2022-02-01&to=2023-02-01&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Dividends",
        "newEndpoint": null,
        "operationId": "stock-dividends",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockDividends(context.Background()).Symbol(\"KO\").From(\"2019-01-01\").To(\"2021-01-01\").Execute()",
          "javascript": "finnhubClient.stockDividends(\"KO\", \"2019-01-01\", \"2020-06-30\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.stockDividends(\"KO\", from = \"2019-01-01\", to = \"2020-01-01\"))",
          "php": "print_r($client->stockDividends(\"KO\", \"2019-01-01\", \"2020-01-01\"));",
          "python": "print(finnhub_client.stock_dividends('KO', _from='2019-01-01', to='2020-01-01'))",
          "ruby": "puts(finnhub_client.stock_dividends('KO', '2019-01-01', '2020-01-01'))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-11-07\",\n    \"amount\": 0.77,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-11-14\",\n    \"recordDate\": \"2019-11-11\",\n    \"declarationDate\": \"2019-10-30\",\n    \"currency\": \"USD\"\n  },\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-08-09\",\n    \"amount\": 0.77,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-08-15\",\n    \"recordDate\": \"2019-08-12\",\n    \"declarationDate\": \"2019-07-30\",\n    \"currency\": \"USD\"\n  },\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-05-10\",\n    \"amount\": 0.77,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-05-16\",\n    \"recordDate\": \"2019-05-13\",\n    \"declarationDate\": \"2019-05-01\",\n    \"currency\": \"USD\"\n  },\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-02-08\",\n    \"amount\": 0.73,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-02-14\",\n    \"recordDate\": \"2019-02-11\",\n    \"declarationDate\": \"2019-01-29\",\n    \"currency\": \"USD\"\n  }\n]",
        "section": "Stock Fundamentals",
        "summary": "Dividends",
        "title": "Global Stocks Dividends API",
        "urlId": "stock-dividends",
        "widget": null
      }
    },
    "/stock/dividend2": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dividends2",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get global dividends data.",
        "examples": [
          {
            "text": "/stock/dividend2?symbol=AAPL",
            "url": "/stock/dividend2?symbol=AAPL&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Dividends 2",
        "newEndpoint": null,
        "operationId": "stock-basic-dividends",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockBasicDividends(context.Background()).Symbol(\"KO\").Execute()",
          "javascript": "finnhubClient.stockBasicDividends(\"KO\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.stockBasicDividends(\"KO\"))",
          "php": "print_r($client->stockBasicDividends(\"KO\"));",
          "python": "print(finnhub_client.stock_basic_dividends('AAPL'))",
          "ruby": "puts(finnhub_client.stock_basic_dividends('KO'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n  {\n    \"exDate\": \"2019-11-07\",\n    \"amount\": 0.77,\n    \n  },\n  {\n    \"exDate\": \"2019-08-09\",\n    \"amount\": 0.77,\n  },\n  {\n    \"exDate\": \"2019-05-10\",\n    \"amount\": 0.77,\n  }\n],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Price",
        "summary": "Dividends 2 (Basic)",
        "title": "Basic Dividends",
        "urlId": "stock-basic-dividends",
        "widget": null
      }
    },
    "/stock/earnings": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit number of period returned. Leave blank to get the full history.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EarningResult"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company historical quarterly earnings surprise going back to 2000.",
        "examples": [
          {
            "text": "/stock/earnings?symbol=AAPL",
            "url": "/stock/earnings?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/earnings?symbol=TSLA",
            "url": "/stock/earnings?symbol=TSLA&token=<token>"
          }
        ],
        "freeTier": "Last 4 quarters",
        "highUsage": "High Usage",
        "navHeader": "EPS Surprises",
        "newEndpoint": null,
        "operationId": "company-earnings",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyEarnings(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEarnings(\"AAPL\", {'limit': 10}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyEarnings(\"TSLA\", limit = 5))",
          "php": "print_r($client->companyEarnings(\"TSLA\", 5));",
          "python": "print(finnhub_client.company_earnings('TSLA', limit=5))",
          "ruby": "puts(finnhub_client.company_earnings('TSLA', {limit: 5}))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"actual\": 1.88,\n    \"estimate\": 1.9744,\n    \"period\": \"2023-03-31\",\n    \"quarter\": 1,\n    \"surprise\": -0.0944,\n    \"surprisePercent\": -4.7812,\n    \"symbol\": \"AAPL\",\n    \"year\": 2023\n  },\n  {\n    \"actual\": 1.29,\n    \"estimate\": 1.2957,\n    \"period\": \"2022-12-31\",\n    \"quarter\": 4,\n    \"surprise\": -0.0057,\n    \"surprisePercent\": -0.4399,\n    \"symbol\": \"AAPL\",\n    \"year\": 2022\n  },\n  {\n    \"actual\": 1.2,\n    \"estimate\": 1.1855,\n    \"period\": \"2022-09-30\",\n    \"quarter\": 3,\n    \"surprise\": 0.0145,\n    \"surprisePercent\": 1.2231,\n    \"symbol\": \"AAPL\",\n    \"year\": 2022\n  }\n]",
        "section": "Stock Estimates",
        "summary": "Earnings Surprises",
        "title": "Global Company EPS Surprises",
        "urlId": "company-earnings",
        "widget": {
          "url": "https://widget.finnhub.io/widgets/historical-eps?symbol=AAPL"
        }
      }
    },
    "/stock/earnings-call-live": {
      "get": {
        "parameters": [
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Filter by symbol: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningsCallLive",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Stream live earnings calls with data provided in the calendar. The data will be available in m3u8 format. mp3 files will be available once the calls finish in the <code>recording</code> field.</p>",
        "examples": [
          {
            "text": "/stock/earnings-call-live?from=2024-11-01&to=2024-11-07",
            "url": "/stock/earnings-call-live?from=2024-11-01&to=2024-11-07&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Earnings Call Live",
        "newEndpoint": null,
        "operationId": "earnings-call-live",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.EarningsCallLive(context.Background()).From(\"2024-11-01\").To(\"2024-11-30\").Execute()",
          "javascript": "finnhubClient.earningsCallLive(\"NVDA\", \"2024-11-01\", \"2024-11-30\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.earningsCallLive(\"NVDA\", from = \"2024-11-01\", to = \"2024-11-30\"))",
          "php": "print_r($client->earningsCallLive(\"NVDA\", \"2024-11-01\", \"2024-11-30\"));",
          "python": "print(finnhub_client.earnings_call_live(\"2024-11-01\", \"2024-11-30\"))",
          "ruby": "puts(finnhub_client.earnings_call_live('NVDA', \"2024-11-01\", \"2024-11-30\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"event\": [\n    {\n      \"symbol\": \"NVDA\",\n      \"year\": 2025,\n      \"quarter\": 3,\n      \"event\": \"NVDA - Earnings call Q3 year\",\n      \"time\": \"2024-11-20 22:00:00\",\n      \"liveAudio\": \"https://live.finnhub.io/hls/2063191eb8563e1645fe3bde2b057511dce4f8a0fb39a2fb9/audio.m3u8\",\n      \"recording\": \"\"\n    },\n    {\n      \"symbol\": \"SNOW\",\n      \"year\": 2025,\n      \"quarter\": 3,\n      \"event\": \"SNOW - Earnings call Q3 year\",\n      \"time\": \"2024-11-20 22:00:00\",\n      \"liveAudio\": \"https://live.finnhub.io/hls/869c16f0fe27d972d49b511f18eea69499c6f0c460a28/audio.m3u8\",\n      \"recording\": \"\"\n    }\n  ]\n}",
        "section": "Alternative Data",
        "summary": "Earnings Call Audio Live",
        "title": "Earnings Call Live API | Stream Live Earnings Calls API",
        "urlId": "earnings-call-live-api",
        "widget": null
      }
    },
    "/stock/earnings-quality-score": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Frequency. Currently support <code>annual</code> and <code>quarterly</code>",
            "in": "query",
            "name": "freq",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyEarningsQualityScore",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>This endpoint provides Earnings Quality Score for global companies.</p><p> Earnings quality refers to the extent to which current earnings predict future earnings. \"High-quality\" earnings are expected to persist, while \"low-quality\" earnings do not. A higher score means a higher earnings quality</p><p>Finnhub uses a proprietary model which takes into consideration 4 criteria:</p> <ul style=\"list-style-type: unset; margin-left: 30px;\"><li>Profitability</li><li>Growth</li><li>Cash Generation & Capital Allocation</li><li>Leverage</li></ul><br/><p>We then compare the metrics of each company in each category against its peers in the same industry to gauge how quality its earnings is.</p>",
        "examples": [
          {
            "text": "/stock/earnings-quality-score?symbol=AAPL&freq=quarterly",
            "url": "/stock/earnings-quality-score?symbol=AAPL&freq=quarterly&token=<token>"
          },
          {
            "text": "/stock/earnings-quality-score?symbol=WMT&freq=quarterly",
            "url": "/stock/earnings-quality-score?symbol=WMT&freq=quarterly&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Earnings Quality Score",
        "newEndpoint": null,
        "operationId": "company-earnings-quality-score",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyEarningsQualityScore(context.Background()).Symbol(\"AAPL\").Freq(\"quarterly\").Execute()",
          "javascript": "finnhubClient.companyEarningsQualityScore('AAPL', 'quarterly', (error, data, response) => {\n    console.log(data);\n});",
          "kotlin": "println(apiClient.companyEarningsQualityScore(\"AAPL\", \"quarterly\"))",
          "php": "print_r($client->companyEarningsQualityScore(\"AAPL\", \"quarterly\"));",
          "python": "print(finnhub_client.company_earnings_quality_score('AAPL', 'quarterly'))",
          "ruby": "puts(finnhub_client.company_earnings_quality_score('AAPL', 'quarterly'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"capitalAllocation\": 67.6878,\n      \"growth\": 55.8022,\n      \"letterScore\": \"B+\",\n      \"leverage\": 24.5122,\n      \"period\": \"2021-06-01\",\n      \"profitability\": 82.3843,\n      \"score\": 57.5966\n    },\n    {\n      \"capitalAllocation\": 75.1464,\n      \"growth\": 70.2461,\n      \"letterScore\": \"A-\",\n      \"leverage\": 39.5682,\n      \"period\": \"2021-03-01\",\n      \"profitability\": 88.4613,\n      \"score\": 68.3555\n    },\n    {\n      \"capitalAllocation\": 43.8708,\n      \"growth\": 68.1803,\n      \"letterScore\": \"A-\",\n      \"leverage\": 56.1926,\n      \"period\": \"2020-12-01\",\n      \"profitability\": 92.6311,\n      \"score\": 65.2187\n    },\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "section": "Alternative Data",
        "summary": "Company Earnings Quality Score",
        "title": "Company Earnings Quality Score API",
        "urlId": "company-earnings-quality-score-api",
        "widget": null
      }
    },
    "/stock/ebit-estimate": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "in": "query",
            "name": "freq",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EbitEstimates",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company's ebit estimates.",
        "examples": [
          {
            "text": "/stock/ebit-estimate?symbol=AAPL",
            "url": "/stock/ebit-estimate?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/ebit-estimate?symbol=TSLA&freq=annual",
            "url": "/stock/ebit-estimate?symbol=TSLA&freq=annual&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "EBIT Estimates",
        "newEndpoint": null,
        "operationId": "company-ebit-estimates",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyEbitEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEbitEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyEbitEstimates(\"TSLA\", freq = \"quarterly\"))",
          "php": "print_r($client->companyEbitEstimates(\"TSLA\", \"quarterly\"));",
          "python": "print(finnhub_client.company_ebit_estimates('TSLA', freq='quarterly'))",
          "ruby": "puts(finnhub_client.company_ebit_estimates('TSLA', {freq: 'quarterly'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-06-30\",\n      \"ebitAvg\": 58800500000,\n      \"ebitHigh\": 64060000000,\n      \"ebitLow\": 54072000000\n      \"quarter\": 3,\n      \"year\": 2020,\n    },\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-03-31\",\n      \"ebitAvg\": 61287300000,\n      \"ebitHigh\": 66557000000,\n      \"ebitLow\": 54871000000,\n      \"quarter\": 2,\n      \"year\": 2020,\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Estimates",
        "summary": "EBIT Estimates",
        "title": "Global Company Ebit Estimates",
        "urlId": "company-ebit-estimates",
        "widget": null
      }
    },
    "/stock/ebitda-estimate": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "in": "query",
            "name": "freq",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EbitdaEstimates",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company's ebitda estimates.",
        "examples": [
          {
            "text": "/stock/ebitda-estimate?symbol=AAPL",
            "url": "/stock/ebitda-estimate?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/ebitda-estimate?symbol=TSLA&freq=annual",
            "url": "/stock/ebitda-estimate?symbol=TSLA&freq=annual&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "EBITDA Estimates",
        "newEndpoint": null,
        "operationId": "company-ebitda-estimates",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyEbitdaEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEbitdaEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyEbitdaEstimates(\"TSLA\", freq = \"quarterly\"))",
          "php": "print_r($client->companyEbitdaEstimates(\"TSLA\", \"quarterly\"));",
          "python": "print(finnhub_client.company_ebitda_estimates('TSLA', freq='quarterly'))",
          "ruby": "puts(finnhub_client.company_ebitda_estimates('TSLA', {freq: 'quarterly'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-06-30\",\n      \"ebitdaAvg\": 58800500000,\n      \"ebitdaHigh\": 64060000000,\n      \"ebitdaLow\": 54072000000,\n      \"quarter\": 3,\n      \"year\": 2020\n    },\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-03-31\",\n      \"ebitdaAvg\": 61287300000,\n      \"ebitdaHigh\": 66557000000,\n      \"ebitdaLow\": 54871000000,\n      \"quarter\": 2,\n      \"year\": 2020\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Estimates",
        "summary": "EBITDA Estimates",
        "title": "Global Company Ebitda Estimates",
        "urlId": "company-ebitda-estimates",
        "widget": null
      }
    },
    "/stock/eps-estimate": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "in": "query",
            "name": "freq",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningsEstimates",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company's EPS estimates.",
        "examples": [
          {
            "text": "/stock/eps-estimate?symbol=AAPL",
            "url": "/stock/eps-estimate?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/eps-estimate?symbol=AMZN&freq=annual",
            "url": "/stock/eps-estimate?symbol=AMZN&freq=annual&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "EPS Estimates",
        "newEndpoint": null,
        "operationId": "company-eps-estimates",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyEpsEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEpsEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyEpsEstimates(\"AAPL\", freq = \"quarterly\"))",
          "php": "print_r($client->companyEpsEstimates(\"AAPL\", \"quarterly\"));",
          "python": "print(finnhub_client.company_eps_estimates('AAPL', freq='quarterly'))",
          "ruby": "puts(finnhub_client.company_eps_estimates('AAPL', {freq: 'quarterly'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"epsAvg\": 2.65,\n      \"epsHigh\": 2.98,\n      \"epsLow\": 2.05,\n      \"numberAnalysts\": 35,\n      \"period\": \"2020-06-30\",\n      \"quarter\": 3,\n      \"year\": 2020\n    },\n    {\n      \"epsAvg\": 2.52,\n      \"epsHigh\": 3.02,\n      \"epsLow\": 2.21,\n      \"numberAnalysts\": 34,\n      \"period\": \"2020-03-31\",\n      \"quarter\": 2,\n      \"year\": 2020\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Estimates",
        "summary": "Earnings Estimates",
        "title": "Global Company EPS Estimates",
        "urlId": "company-eps-estimates",
        "widget": {
          "url": "https://widget.finnhub.io/widgets/eps-estimate?symbol=AAPL"
        }
      }
    },
    "/stock/esg": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyESG",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>This endpoint provides the latest ESG scores and important indicators for 7000+ global companies. The data is collected through company's public ESG disclosure and public sources.</p><p>Our ESG scoring models takes into account more than 150 different inputs to calculate the level of ESG risks and how well a company is managing them. A higher score means lower ESG risk or better ESG management. ESG scores are in the the range of 0-100. Some key indicators might contain letter-grade score from C- to A+ with C- is the lowest score and A+ is the highest score.</p>",
        "examples": [
          {
            "text": "/stock/esg?symbol=AAPL",
            "url": "/stock/esg?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/esg?symbol=WMT",
            "url": "/stock/esg?symbol=WMT&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Company ESG",
        "newEndpoint": null,
        "operationId": "company-esg-score",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyEsgScore(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEsgScore('AAPL', (error, data, response) => {\n    console.log(data);\n});",
          "kotlin": "println(apiClient.companyEsgScore(\"AAPL\"))",
          "php": "print_r($client->companyEsgScore(\"AAPL\"));",
          "python": "print(finnhub_client.company_esg_score(\"AAPL\"))",
          "ruby": "puts(finnhub_client.company_esg_score('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": {\n    \"womenManagementPercentage\": 17.02,\n    \"adultContent\": false,\n    \"alcoholic\": false,\n    \"animalTesting\": false,\n    \"antitrust\": \"C+\",\n    \"asianEmployeePercentage\": 27,\n    \"asianManagementPercentage\": 27,\n    \"blackEmployeePercentage\": 9,\n    \"blackManagementPercentage\": 4,\n    \"carbonReductionPolicy\": null,\n    \"catholic\": false,\n    \"climateStrategy\": \"A+\",\n    \"co2EmissionScope1\": 47430,\n    \"co2EmissionScope2\": 890189,\n    \"co2EmissionScope3\": 22648000,\n    \"co2EmissionTotal\": 937619,\n    \"coalEnergy\": false,\n    \"ecofriendlyPackaging\": null,\n    \"environmentalReporting\": true,\n    \"firearms\": false,\n    \"fuelEfficiencyConsumption\": null,\n    \"furLeather\": false,\n    \"gambling\": false,\n    \"gmo\": false,\n    \"hazardousSubstances\": null,\n    \"hispanicLatinoEmployeePercentage\": 14,\n    \"hispanicLatinoManagementPercentage\": 8,\n    \"humanRightsPolicy\": \"C-\",\n    \"militaryContract\": false,\n    \"nuclear\": false,\n    \"palmOil\": false,\n    \"pesticides\": false,\n    \"privacyPolicy\": \"B-\",\n    \"recallPolicySafety\": null,\n    \"recyclingPolicy\": null,\n    \"stakeholderEngagement\": null,\n    \"sustainableForestryPolicy\": null,\n    \"tobacco\": false,\n    \"totalWomenPercentage\": 34,\n    \"waterEfficiencyConsumption\": null,\n    \"weapons\": false,\n    \"whiteEmployeePercentage\": 47,\n    \"whiteManagementPercentage\": 59,\n    \"workplaceHealthSafety\": null\n  },\n  \"environmentScore\": 73.21,\n  \"governanceScore\": 56.06,\n  \"socialScore\": 45.81,\n  \"symbol\": \"AAPL\",\n  \"totalESGScore\": 56.04\n}",
        "section": "Alternative Data",
        "summary": "Company ESG Scores",
        "title": "Company ESG Scores API",
        "urlId": "company-esg-score-api",
        "widget": null
      }
    },
    "/stock/executive": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyExecutive",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of company's executives and members of the Board.",
        "examples": [
          {
            "text": "/stock/executive?symbol=AAPL",
            "url": "/stock/executive?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/executive?symbol=AMZN",
            "url": "/stock/executive?symbol=AMZN&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Company Executive",
        "newEndpoint": null,
        "operationId": "company-executive",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyExecutive(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyExecutive('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyExecutive(\"AAPL\"))",
          "php": "print_r($client->companyExecutive(\"AAPL\"));",
          "python": "print(finnhub_client.company_executive('AAPL'))",
          "ruby": "puts(finnhub_client.company_executive('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"executive\": [\n    {\n      \"age\": 56,\n      \"compensation\": 25209637,\n      \"currency\": \"USD\",\n      \"name\": \"Luca Maestri\",\n      \"position\": \"Senior Vice President and Chief Financial Officer\",\n      \"sex\": \"male\",\n      \"since\": \"2014\"\n    },\n    {\n      \"age\": 59,\n      \"compensation\": 11555466,\n      \"currency\": \"USD\",\n      \"name\": \"Mr. Timothy Cook\",\n      \"position\": \"Director and Chief Executive Officer\",\n      \"sex\": \"male\",\n      \"since\": \"2011\"\n    }\n  ]\n}",
        "section": "Stock Fundamentals",
        "summary": "Company Executive",
        "title": "Global Company Executives & Compensation",
        "urlId": "company-executive",
        "widget": null
      }
    },
    "/stock/filings": {
      "get": {
        "parameters": [
          {
            "description": "Symbol. Leave <code>symbol</code>,<code>cik</code> and <code>accessNumber</code> empty to list latest filings.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CIK.",
            "in": "query",
            "name": "cik",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Access number of a specific report you want to retrieve data from.",
            "in": "query",
            "name": "accessNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by form. You can use this value <code>NT 10-K</code> to find non-timely filings for a company.",
            "in": "query",
            "name": "form",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date: 2023-03-15.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date: 2023-03-16.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Filing"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List company's filing. Limit to 250 documents at a time. This data is available for bulk download on <a href=\"https://www.kaggle.com/finnhub/sec-filings\" target=\"_blank\">Kaggle SEC Filings database</a>.",
        "examples": [
          {
            "text": "/stock/filings?symbol=AAPL",
            "url": "/stock/filings?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/filings?cik=320193",
            "url": "/stock/filings?cik=320193&token=<token>"
          },
          {
            "text": "/stock/filings?accessNumber=0000320193-20-000052",
            "url": "/stock/filings?accessNumber=0000320193-20-000052&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "SEC Filings",
        "newEndpoint": "New Endpoint",
        "operationId": "filings",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.Filings(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.filings({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(\n            apiClient.filings(\n                symbol = \"AAPL\",\n                from = \"2020-01-01\",\n                to = \"2020-06-11\",\n                accessNumber = null,\n                cik = null,\n                form = null\n            )\n        )",
          "php": "print_r($client->filings(\"AAPL\", \"2020-01-01\", \"2020-06-11\"));",
          "python": "print(finnhub_client.filings(symbol='AAPL', _from=\"2020-01-01\", to=\"2020-06-11\"))",
          "ruby": "puts(finnhub_client.filings({symbol: 'AAPL', from: \"2020-01-01\", to: \"2020-06-11\"}))\n",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"accessNumber\": \"0001193125-20-050884\",\n    \"symbol\": \"AAPL\",\n    \"cik\": \"320193\",\n    \"form\": \"8-K\",\n    \"filedDate\": \"2020-02-27 00:00:00\",\n    \"acceptedDate\": \"2020-02-27 06:14:21\",\n    \"reportUrl\": \"https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000119312520050884/d865740d8k.htm\",\n    \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000119312520050884/0001193125-20-050884-index.html\"\n  },\n  {\n    \"accessNumber\": \"0001193125-20-039203\",\n    \"symbol\": \"AAPL\",\n    \"cik\": \"320193\",\n    \"form\": \"8-K\",\n    \"filedDate\": \"2020-02-18 00:00:00\",\n    \"acceptedDate\": \"2020-02-18 06:24:57\",\n    \"reportUrl\": \"https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000119312520039203/d845033d8k.htm\",\n    \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000119312520039203/0001193125-20-039203-index.html\"\n  },\n  ...\n]",
        "section": "Stock Fundamentals",
        "summary": "SEC Filings",
        "title": "Real-time SEC Filings API",
        "urlId": "filings",
        "widget": null
      }
    },
    "/stock/filings-sentiment": {
      "get": {
        "parameters": [
          {
            "description": "Access number of a specific report you want to retrieve data from.",
            "in": "query",
            "name": "accessNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SECSentimentAnalysis",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get sentiment analysis of 10-K and 10-Q filings from SEC. An abnormal increase in the number of positive/negative words in filings can signal a significant change in the company's stock price in the upcoming 4 quarters. We make use of <a href= \"https://sraf.nd.edu/textual-analysis/resources/\" target=\"_blank\">Loughran and McDonald Sentiment Word Lists</a> to calculate the sentiment for each filing.",
        "examples": [
          {
            "text": "/stock/filings-sentiment?accessNumber=0000320193-20-000052",
            "url": "/stock/filings-sentiment?accessNumber=0000320193-20-000052&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "SEC Sentiment Analysis",
        "newEndpoint": null,
        "operationId": "filings-sentiment",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.FilingsSentiment(context.Background()).AccessNumber(\"0000320193-20-000052\").Execute()",
          "javascript": "finnhubClient.filingsSentiment('0000320193-20-000052', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.filingsSentiment(\"0000320193-20-000052\"))",
          "php": "print_r($client->filingsSentiment(\"0000320193-20-000052\"));",
          "python": "print(finnhub_client.sec_sentiment_analysis('0000320193-20-000052'))",
          "ruby": "puts(finnhub_client.filings_sentiment('0000320193-20-000052', {}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"symbol\": \"AAPL\",\n  \"accessNumber\": \"0000320193-20-000052\",\n  \"sentiment\": {\n    \"negative\": 1.2698412698412698,\n    \"polarity\": -0.1147540479911535,\n    \"positive\": 0.5042016806722689,\n    \"litigious\": 0.2427637721755369,\n    \"modal-weak\": 0.392156862745098,\n    \"uncertainty\": 1.1391223155929038,\n    \"constraining\": 0.5975723622782446,\n    \"modal-strong\": 0.14939309056956115,\n    \"modal-moderate\": 0.11204481792717086\n  }\n}",
        "section": "Stock Fundamentals",
        "summary": "SEC Sentiment Analysis",
        "title": "Sec Filings Sentiment Analysis",
        "urlId": "filings-sentiment",
        "widget": null
      }
    },
    "/stock/financials": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Statement can take 1 of these values <code>bs, ic, cf</code> for Balance Sheet, Income Statement, Cash Flow respectively.",
            "in": "query",
            "name": "statement",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Frequency can take 1 of these values <code>annual, quarterly, ttm, ytd</code>.  TTM (Trailing Twelve Months) option is available for Income Statement and Cash Flow. YTD (Year To Date) option is only available for Cash Flow.",
            "in": "query",
            "name": "freq",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialStatements",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get standardized balance sheet, income statement and cash flow for global companies going back 30+ years. Data is sourced from original filings most of which made available through <a href=\"#filings\">SEC Filings</a> and <a href=\"#international-filings\">International Filings</a> endpoints.</p><p><i>Wondering why our standardized data is different from Bloomberg, Reuters, Factset, S&P or Yahoo Finance ? Check out our <a href=\"/faq\">FAQ page</a> to learn more</i></p>",
        "examples": [
          {
            "text": "/stock/financials?symbol=AAPL&statement=bs&freq=annual",
            "url": "/stock/financials?symbol=AAPL&statement=bs&freq=annual&token=<token>"
          },
          {
            "text": "/stock/financials?symbol=AC.TO&statement=ic&freq=quarterly",
            "url": "/stock/financials?symbol=AC.TO&statement=ic&freq=quarterly&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Financials",
        "newEndpoint": null,
        "operationId": "financials",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.Financials(context.Background()).Symbol(\"AAPL\").Statement(\"bs\").Freq(\"annual\").Execute()",
          "javascript": "finnhubClient.financials(\"AAPL\", \"ic\", \"annual\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.financials(\"AAPL\", \"bs\", \"annual\"))",
          "php": "print_r($client->financials(\"AAPL\", \"bs\", \"annual\"));",
          "python": "print(finnhub_client.financials('AAPL', 'bs', 'annual'))",
          "ruby": "puts(finnhub_client.financials('AAPL', 'bs', 'annual'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"financials\": [\n    {\n      \"costOfGoodsSold\": 161782,\n      \"ebit\": 63930,\n      \"grossIncome\": 98392,\n      \"interestExpense\": 3576,\n      \"netIncome\": 55256,\n      \"netIncomeAfterTaxes\": 55256,\n      \"period\": \"2019-09-28\",\n      \"pretaxIncome\": 65737,\n      \"provisionforIncomeTaxes\": 10481,\n      \"researchDevelopment\": 16217,\n      \"revenue\": 260174,\n      \"sgaExpense\": 18245,\n      \"totalOperatingExpense\": 34462,\n      \"year\": 2019\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}    ",
        "section": "Stock Fundamentals",
        "summary": "Financial Statements",
        "title": "Global Company Financial Statements",
        "urlId": "financials",
        "widget": null
      }
    },
    "/stock/financials-reported": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CIK.",
            "in": "query",
            "name": "cik",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Access number of a specific report you want to retrieve financials from.",
            "in": "query",
            "name": "accessNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Frequency. Can be either <code>annual</code> or <code>quarterly</code>. Default to <code>annual</code>.",
            "in": "query",
            "name": "freq",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>. Filter for endDate.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>. Filter for endDate.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialsAsReported",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get financials as reported. This data is available for bulk download on <a href=\"https://www.kaggle.com/finnhub/reported-financials\" target=\"_blank\">Kaggle SEC Financials database</a>.",
        "examples": [
          {
            "text": "/stock/financials-reported?symbol=AAPL",
            "url": "/stock/financials-reported?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/financials-reported?cik=320193&freq=quarterly",
            "url": "/stock/financials-reported?cik=320193&freq=quarterly&token=<token>"
          },
          {
            "text": "/stock/financials-reported?accessNumber=0000320193-20-000052",
            "url": "/stock/financials-reported?accessNumber=0000320193-20-000052&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Financials As Reported",
        "newEndpoint": "New Endpoint",
        "operationId": "financials-reported",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.FinancialsReported(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.financialsReported({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.financialsReported(symbol = \"AAPL\", freq = \"annual\", accessNumber = null, cik = null))",
          "php": "print_r($client->financialsReported($symbol = \"AAPL\", $freq = \"annual\"));\n",
          "python": "print(finnhub_client.financials_reported(symbol='AAPL', freq='annual'))",
          "ruby": "puts(finnhub_client.financials_reported({symbol: 'AAPL', freq: 'annual'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"data\": [\n    {\n      \"accessNumber\": \"0000320193-19-000119\",\n      \"symbol\": \"AAPL\",\n      \"cik\": \"320193\",\n      \"year\": 2019,\n      \"quarter\": 0,\n      \"form\": \"10-K\",\n      \"startDate\": \"2018-09-30 00:00:00\",\n      \"endDate\": \"2019-09-28 00:00:00\",\n      \"filedDate\": \"2019-10-31 00:00:00\",\n      \"acceptedDate\": \"2019-10-30 18:12:36\",\n      \"report\": {\n        \"bs\": {\n          \"Assets\": 338516000000,\n          \"Liabilities\": 248028000000,\n          \"InventoryNet\": 4106000000,\n          ...\n        },\n        \"cf\": {\n          \"NetIncomeLoss\": 55256000000,\n          \"InterestPaidNet\": 3423000000,\n          ...\n        },\n        \"ic\": {\n          \"GrossProfit\": 98392000000,\n          \"NetIncomeLoss\": 55256000000,\n          \"OperatingExpenses\": 34462000000,\n           ...\n        }\n      }\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Financials As Reported",
        "title": "Financials As Reported | Stock API",
        "urlId": "financials-reported",
        "widget": null
      }
    },
    "/stock/fund-ownership": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit number of results. Leave empty to get the full list.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundOwnership",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a full list fund and institutional investors of a company in descending order of the number of shares held. Data is sourced from <code>13F form</code>, <code>Schedule 13D</code> and <code>13G</code> for US market, <code>UK Share Register</code> for UK market, <code>SEDI</code> for Canadian market and equivalent filings for other international markets.",
        "examples": [
          {
            "text": "/stock/fund-ownership?symbol=TSLA&limit=20",
            "url": "/stock/fund-ownership?symbol=TSLA&limit=20&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Fund Ownership",
        "newEndpoint": null,
        "operationId": "fund-ownership",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.FundOwnership(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "let optsLimit = {'limit': 10};\nfinnhubClient.fundOwnership(\"AAPL\", optsLimit, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.fundOwnership(\"AAPL\", limit = 5))",
          "php": "print_r($client->fundOwnership(\"AMZN\", 5));",
          "python": "print(finnhub_client.fund_ownership('AAPL', limit=5))",
          "ruby": "puts(finnhub_client.fund_ownership('AAPL', {limit: 5}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"ownership\": [\n    {\n      \"name\": \"AGTHX | American Funds Growth Fund of America\",\n      \"share\": 5145353,\n      \"change\": 57427,\n      \"filingDate\": \"2020-03-31\",\n      \"portfolioPercent\": 1.88\n    },\n    {\n      \"name\": \"Vanguard Total Stock Market Index Fund\",\n      \"share\": 4227464,\n      \"change\": 73406,\n      \"filingDate\": \"2020-03-31\",\n      \"portfolioPercent\": 0.45\n    },\n    {\n      \"name\": \"ANWPX | American Funds New Perspective\",\n      \"share\": 3377612,\n      \"change\": 0,\n      \"filingDate\": \"2020-03-31\",\n      \"portfolioPercent\": 2.64\n    }\n  ],\n  \"symbol\": \"TSLA\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Fund Ownership",
        "title": "Fund Ownership",
        "urlId": "fund-ownership",
        "widget": null
      }
    },
    "/stock/historical-employee-count": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalEmployeeCount",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get historical employee count for global companies.",
        "examples": [
          {
            "text": "/stock/historical-employee-count?symbol=AAPL&from=2022-01-01&to=2024-05-06",
            "url": "/stock/historical-employee-count?symbol=AAPL&from=2022-01-01&to=2024-05-06&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Historical Employee",
        "newEndpoint": null,
        "operationId": "historical-employee-count",
        "premium": "Accessible with Fundamental 2 or All in One subscription.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.HistoricalEmployeeCount(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2020-05-01\").Execute()",
          "javascript": "finnhubClient.historicalEmployeeCount(\"AAPL\", \"2020-01-01\", \"2020-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.historicalEmployeeCount(\"AAPL\", from = \"2020-06-01\", to = \"2020-06-10\"))",
          "php": "print_r($client->historicalEmployeeCount(\"AAPL\", \"2020-06-01\", \"2020-06-10\"));",
          "python": "print(finnhub_client.historical_employee_count('AAPL', _from=\"2020-06-01\", to=\"2020-06-10\"))",
          "ruby": "puts(finnhub_client.historical_employee_count('AAPL', \"2020-06-01\", \"2020-06-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"atDate\": \"2023-09-30\",\n      \"employee\": 161000\n    },\n    {\n      \"atDate\": \"2022-09-24\",\n      \"employee\": 164000\n    },\n    {\n      \"atDate\": \"2021-09-25\",\n      \"employee\": 154000\n    },\n    {\n      \"atDate\": \"2020-09-26\",\n      \"employee\": 147000\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Historical Employee Count",
        "title": "Global Historical Employee Count API",
        "urlId": "historical-employee-count",
        "widget": null
      }
    },
    "/stock/historical-esg": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalCompanyESG",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>This endpoint provides historical ESG scores and important indicators for 7000+ global companies. The data is collected through company's public ESG disclosure and public sources.</p><p>Our ESG scoring models takes into account more than 150 different inputs to calculate the level of ESG risks and how well a company is managing them. A higher score means lower ESG risk or better ESG management. ESG scores are in the the range of 0-100. Some key indicators might contain letter-grade score from C- to A+ with C- is the lowest score and A+ is the highest score.</p>",
        "examples": [
          {
            "text": "/stock/historical-esg?symbol=AAPL",
            "url": "/stock/historical-esg?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/historical-esg?symbol=WMT",
            "url": "/stock/historical-esg?symbol=WMT&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Historical ESG",
        "newEndpoint": null,
        "operationId": "company-historical-esg-score",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyHistoricalEsgScore(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyHistoricalEsgScore('AAPL', (error, data, response) => {\n    console.log(data);\n});",
          "kotlin": "println(apiClient.companyHistoricalEsgScore(\"AAPL\"))",
          "php": "print_r($client->companyHistoricalEsgScore(\"AAPL\"));",
          "python": "print(finnhub_client.company_historical_esg_score(\"AAPL\"))",
          "ruby": "puts(finnhub_client.company_historical_esg_score('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"data\": {\n        \"adultContent\": false,\n        \"alcoholic\": false,\n        \"animalTesting\": false,\n        \"antitrust\": \"62.0\",\n        \"asianEmployeePercentage\": 27.9,\n        \"asianManagementPercentage\": 29.2,\n        \"blackEmployeePercentage\": 9.4,\n        \"blackManagementPercentage\": 4,\n        \"carbonReductionPolicy\": \"True\",\n        \"catholic\": true,\n        \"co2EmissionScope1\": 55202,\n        \"co2EmissionScope2\": 1003246,\n        \"co2EmissionScope3\": 23128420,\n        \"co2EmissionTotal\": 1058448,\n        \"coalEnergy\": false\n      },\n      \"environmentScore\": 61.74593,\n      \"governanceScore\": 92.81813,\n      \"period\": \"2021-09-25\",\n      \"socialScore\": 76.52558,\n      \"totalESGScore\": 77.02988\n    },\n    {\n      \"data\": {\n        \"adultContent\": false,\n        \"alcoholic\": false,\n        \"animalTesting\": false,\n        \"antitrust\": \"28.0\",\n        \"asianEmployeePercentage\": 27,\n        \"asianManagementPercentage\": 27,\n        \"blackEmployeePercentage\": 9,\n        \"blackManagementPercentage\": 4,\n        \"carbonReductionPolicy\": \"True\",\n        \"catholic\": true,\n        \"co2EmissionScope1\": 47430,\n        \"co2EmissionScope2\": 890189,\n        \"co2EmissionScope3\": 22547000,\n        \"co2EmissionTotal\": 937619\n      },\n      \"environmentScore\": 59.460255,\n      \"governanceScore\": 85.85033,\n      \"period\": \"2020-09-26\",\n      \"socialScore\": 74.40586,\n      \"totalESGScore\": 73.238815\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Alternative Data",
        "summary": "Historical ESG Scores",
        "title": "Company Historical ESG Scores API",
        "urlId": "company-historical-esg-score-api",
        "widget": null
      }
    },
    "/stock/historical-market-cap": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalMarketCapData",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get historical market cap data for global companies.",
        "examples": [
          {
            "text": "/stock/historical-market-cap?symbol=AAPL&from=2022-01-01&to=2024-05-06",
            "url": "/stock/historical-market-cap?symbol=AAPL&from=2022-01-01&to=2024-05-06&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Historical Market Cap",
        "newEndpoint": null,
        "operationId": "historical-market-cap",
        "premium": "Accessible with Fundamental 2 or All in One subscription.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.HistoricalMarketCap(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2020-05-01\").Execute()",
          "javascript": "finnhubClient.historicalMarketCap(\"AAPL\", \"2020-01-01\", \"2020-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.historicalMarketCap(\"AAPL\", from = \"2020-06-01\", to = \"2020-06-10\"))",
          "php": "print_r($client->historicalMarketCap(\"AAPL\", \"2020-06-01\", \"2020-06-10\"));",
          "python": "print(finnhub_client.historical_market_cap('AAPL', _from=\"2020-06-01\", to=\"2020-06-10\"))",
          "ruby": "puts(finnhub_client.historical_market_cap('AAPL', \"2020-06-01\", \"2020-06-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"currency\": \"USD\",\n  \"data\": [\n    {\n      \"atDate\": \"2024-06-10\",\n      \"marketCapitalization\": 3759.182\n    },\n    {\n      \"atDate\": \"2024-06-09\",\n      \"marketCapitalization\": 21508.447\n    }\n  ],\n  \"symbol\": \"SYM\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Historical Market Cap",
        "title": "Global Historical Market Cap API",
        "urlId": "historical-market-cap",
        "widget": null
      }
    },
    "/stock/insider-sentiment": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date: 2020-03-15.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date: 2020-03-16.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsiderSentiments",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get insider sentiment data for US companies calculated using method discussed <a href=\"https://medium.com/@stock-api/finnhub-insiders-sentiment-analysis-cc43f9f64b3a\" target=\"_blank\">here</a>. The MSPR ranges from -100 for the most negative to 100 for the most positive which can signal price changes in the coming 30-90 days.",
        "examples": [
          {
            "text": "/stock/insider-sentiment?symbol=TSLA&from=2015-01-01&to=2022-03-01",
            "url": "/stock/insider-sentiment?symbol=TSLA&from=2015-01-01&to=2022-03-01&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Insider Sentiment",
        "newEndpoint": "New Endpoint",
        "operationId": "insider-sentiment",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.InsiderSentiment(context.Background()).Symbol(\"AAPL\").From(\"2021-01-01\").To(\"2022-07-30\").Execute()",
          "javascript": "finnhubClient.insiderSentiment('AAPL', '2015-01-01', '2022-03-01', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.insiderSentiment(\"AAPL\", \"2021-01-01\", \"2022-07-07\"))",
          "php": "print_r($client->insiderSentiment(\"AAPL\", \"2021-01-01\", \"2022-03-01\"));",
          "python": "print(finnhub_client.stock_insider_sentiment('AAPL', '2021-01-01', '2022-03-01'))",
          "ruby": "puts(finnhub_client.insider_sentiment('AAPL', '2015-01-01', '2022-03-01'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\":[\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2021,\n      \"month\":3,\n      \"change\":5540,\n      \"mspr\":12.209097\n    },\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2022,\n      \"month\":1,\n      \"change\":-1250,\n      \"mspr\":-5.6179776\n    },\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2022,\n      \"month\":2,\n      \"change\":-1250,\n      \"mspr\":-2.1459227\n    },\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2022,\n      \"month\":3,\n      \"change\":5870,\n      \"mspr\":8.960191\n    }\n  ],\n  \"symbol\":\"TSLA\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Insider Sentiment",
        "title": "Insider Sentiment API",
        "urlId": "insider-sentiment",
        "widget": null
      }
    },
    "/stock/insider-transactions": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL. Leave this param blank to get the latest transactions.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date: 2020-03-15.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date: 2020-03-16.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsiderTransactions",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Company insider transactions data sourced from <code>Form 3,4,5</code>, SEDI and relevant companies' filings. This endpoint covers US, UK, Canada, Australia, India, and all major EU markets. Limit to 100 transactions per API call.",
        "examples": [
          {
            "text": "/stock/insider-transactions?symbol=TSLA&limit=20",
            "url": "/stock/insider-transactions?symbol=TSLA&token=<token>"
          },
          {
            "text": "/stock/insider-transactions?symbol=AC.TO",
            "url": "/stock/insider-transactions?symbol=AC.TO&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Insider Transactions",
        "newEndpoint": "New Endpoint",
        "operationId": "insider-transactions",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.InsiderTransactions(context.Background()).Symbol(\"AAPL\").From(\"2021-01-01\").To(\"2021-07-30\").Execute()",
          "javascript": "finnhubClient.insiderTransactions('AAPL', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.insiderTransactions(\"AAPL\", \"2021-01-01\", \"2021-07-07\"))",
          "php": "print_r($client->insiderTransactions(\"AAPL\", \"2021-01-01\", \"2021-03-01\"));",
          "python": "print(finnhub_client.stock_insider_transactions('AAPL', '2021-01-01', '2021-03-01'))",
          "ruby": "puts(finnhub_client.insider_transactions('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"name\": \"Kirkhorn Zachary\",\n      \"share\": 57234,\n      \"change\": -1250,\n      \"filingDate\": \"2021-03-19\",\n      \"transactionDate\": \"2021-03-17\",\n      \"transactionCode\": \"S\",\n      \"transactionPrice\": 655.81\n    },\n    {\n      \"name\": \"Baglino Andrew D\",\n      \"share\": 20614,\n      \"change\": 1000,\n      \"filingDate\": \"2021-03-31\",\n      \"transactionDate\": \"2021-03-29\",\n      \"transactionCode\": \"M\",\n      \"transactionPrice\": 41.57\n    },\n    {\n      \"name\": \"Baglino Andrew D\",\n      \"share\": 19114,\n      \"change\": -1500,\n      \"filingDate\": \"2021-03-31\",\n      \"transactionDate\": \"2021-03-29\",\n      \"transactionCode\": \"S\",\n      \"transactionPrice\": 615.75\n    }\n  ],\n  \"symbol\": \"TSLA\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Insider Transactions",
        "title": "Insider Transactions",
        "urlId": "insider-transactions",
        "widget": null
      }
    },
    "/stock/international-filings": {
      "get": {
        "parameters": [
          {
            "description": "Symbol. Leave empty to list latest filings.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by country using country's 2-letter code.",
            "in": "query",
            "name": "country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date: 2023-01-15.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date: 2023-12-16.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InternationalFiling"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List filings for international companies. Limit to 500 documents at a time. These are the documents we use to source our fundamental data. Enterprise clients who need access to the full filings for global markets should contact us for the access.",
        "examples": [
          {
            "text": "/stock/international-filings?symbol=RY.TO",
            "url": "/stock/international-filings?symbol=RY.TO&token=<token>"
          },
          {
            "text": "/stock/international-filings?country=CA",
            "url": "/stock/international-filings?country=CA&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "International Filings",
        "newEndpoint": null,
        "operationId": "international-filings",
        "premium": "Access approved on a case by case basis",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.InternationalFilings(context.Background()).Symbol(\"AC.TO\").Execute()",
          "javascript": "finnhubClient.internationalFilings({\"symbol\": \"AC.TO\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.internationalFilings(\"AC.TO\", \"\"))",
          "php": "print_r($client->internationalFilings(\"AC.TO\"));",
          "python": "print(finnhub_client.international_filings('AC.TO'))",
          "ruby": "puts(finnhub_client.international_filings({symbol: 'AC.TO'}))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"MINDTREE.NS\",\n    \"companyName\": \"MindTree Limited\",\n    \"filedDate\": \"2015-03-31 20:27:00\",\n    \"category\": \"Resignation of Director\",\n    \"title\": \"MindTree Limited has informed the Exchange that Mr. David B Yoffie has resigned as Independent Director of the company. The Board of Directors have accepted his resignation effective March 30, 2015.\",\n    \"description\": \"\",\n    \"url\": \"https://finnhub.io/international-filings?id=523566\",\n    \"language\": \"en\",\n    \"country\": \"IN\"\n  },\n  {\n    \"symbol\": \"INOXLEISUR.NS\",\n    \"companyName\": \"INOX Leisure Limited\",\n    \"filedDate\": \"2015-03-31 20:24:00\",\n    \"category\": \"Updates\",\n    \"title\": \"INOX Leisure Limited has informed the Exchange regarding Commencement of Commercial Operations of Multiplex Cinema Theatre situated at E-wing, Osia Commercial Arcade, SGPDA Market Complex, Margao, Goa 403601.\",\n    \"description\": \"\",\n    \"url\": \"https://finnhub.io/international-filings?id=52152\",\n    \"language\": \"en\",\n    \"country\": \"IN\"\n  }\n]",
        "section": "Global Filings Search",
        "summary": "International Filings",
        "title": "Global Company Filings",
        "urlId": "international-filings",
        "widget": null
      }
    },
    "/stock/investment-theme": {
      "get": {
        "parameters": [
          {
            "description": "Investment theme. A full list of themes supported can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\">here</a>.",
            "in": "query",
            "name": "theme",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentThemes",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Thematic investing involves creating a portfolio (or portion of a portfolio) by gathering together a collection of companies involved in certain areas that you predict will generate above-market returns over the long term. Themes can be based on a concept such as ageing populations or a sub-sector such as robotics, and drones. Thematic investing focuses on predicted long-term trends rather than specific companies or sectors, enabling investors to access structural, one-off shifts that can change an entire industry.</p><p>This endpoint will help you get portfolios of different investment themes that are changing our life and are the way of the future.</p><p>A full list of themes supported can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\">here</a>. The theme coverage and portfolios are updated bi-weekly by our analysts. Our approach excludes penny, super-small cap and illiquid stocks.</p>",
        "examples": [
          {
            "text": "/stock/investment-theme?theme=financialExchangesData",
            "url": "/stock/investment-theme?theme=financialExchangesData&token=<token>"
          },
          {
            "text": "/stock/investment-theme?theme=futureFood",
            "url": "/stock/investment-theme?theme=futureFood&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Investment Themes",
        "newEndpoint": null,
        "operationId": "investment-themes",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.InvestmentThemes(context.Background()).Theme(\"financialExchangesData\").Execute()",
          "javascript": "finnhubClient.investmentThemes('financialExchangesData', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.investmentThemes(\"financialExchangesData\"))",
          "php": "print_r($client->investmentThemes(\"financialExchangesData\"));",
          "python": "print(finnhub_client.stock_investment_theme('financialExchangesData'))",
          "ruby": "puts(finnhub_client.investment_themes('financialExchangesData'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"symbol\": \"ICE\"\n    },\n    {\n      \"symbol\": \"NDAQ\"\n    },\n    {\n      \"symbol\": \"CBOE\"\n    },\n    {\n      \"symbol\": \"FDS\"\n    },\n    {\n      \"symbol\": \"SPGI\"\n    },\n    {\n      \"symbol\": \"TW\"\n    }\n  ],\n  \"theme\": \"financialExchangesData\"\n}",
        "section": "Alternative Data",
        "summary": "Investment Themes (Thematic Investing)",
        "title": "Investment Themes (Thematic Investing)",
        "urlId": "investment-themes-thematic-investing",
        "widget": null
      }
    },
    "/stock/lobbying": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LobbyingResult",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of reported lobbying activities in the Senate and the House.",
        "examples": [
          {
            "text": "/stock/lobbying?symbol=AAPL&from=2021-01-01&to=2022-12-31",
            "url": "/stock/lobbying?symbol=AAPL&from=2021-01-01&to=2022-12-31&token=<token>"
          }
        ],
        "highUsage": null,
        "navHeader": "Senate Lobbying",
        "newEndpoint": "New",
        "operationId": "stock-lobbying",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockLobbying(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2022-05-01\").Execute()",
          "javascript": "finnhubClient.stockLobbying(\"AAPL\", \"2020-01-01\", \"2022-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.stockLobbying(\"AAPL\", from = \"2020-06-01\", to = \"2022-06-10\"))",
          "php": "print_r($client->stockLobbying(\"AAPL\", \"2020-06-01\", \"2022-06-10\"));",
          "python": "print(finnhub_client.stock_lobbying(\"AAPL\", \"2021-01-01\", \"2022-06-15\"))",
          "ruby": "puts(finnhub_client.stock_lobbying('AAPL', \"2020-06-01\", \"2022-06-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\":[\n    {\n      \"symbol\":\"AAPL\",\n      \"name\":\"APPLE, INC.\",\n      \"description\":\"Hardware and software maunfacturer\",\n      \"country\":\"US\",\n      \"uuid\":\"db75bb6f-162a-433a-a997-a679eb4c6af6\",\n      \"year\":2020,\n      \"period\":\"fourth_quarter\",\n      \"type\":\"Q4\",\n      \"documentUrl\":\"https://lda.senate.gov/filings/public/filing/db75bb6f-162a-433a-a997-a679eb4c6af6/print/\",\n      \"income\":40000,\n      \"expenses\":null,\n      \"postedName\":\"\",\n      \"dtPosted\":\"\",\n      \"clientId\":\"173094\",\n      \"registrantId\":\"86196\",\n      \"senateId\":\"86196-173094\",\n      \"houseRegistrantId\":\"36548\"\n    },\n    {\n      \"symbol\":\"AAPL\",\n      \"name\":\"APPLE INC\",\n      \"description\":\"\",\n      \"country\":\"US\",\n      \"uuid\":\"cad6db2f-c3ca-4b9d-bc24-4c56fc7eaadb\",\n      \"year\":2020,\n      \"period\":\"fourth_quarter\",\n      \"type\":\"Q4\",\n      \"documentUrl\":\"https://lda.senate.gov/filings/public/filing/cad6db2f-c3ca-4b9d-bc24-4c56fc7eaadb/print/\",\n      \"income\":null,\n      \"expenses\":1450000,\n      \"postedName\":\"\",\n      \"dtPosted\":\"\",\n      \"clientId\":\"103979\",\n      \"registrantId\":\"4152\",\n      \"senateId\":\"4152-103979\",\n      \"houseRegistrantId\":\"31450\"\n    }\n  ],\n  \"symbol\":\"AAPL\"\n}",
        "section": "Alternative Data",
        "summary": "Senate Lobbying",
        "title": "Senate and House lobbying data from public companies",
        "urlId": "stock-lobbying",
        "widget": null
      }
    },
    "/stock/market-holiday": {
      "get": {
        "parameters": [
          {
            "description": "Exchange code.",
            "in": "query",
            "name": "exchange",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketHoliday",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of holidays for global exchanges.",
        "examples": [
          {
            "text": "/stock/market-holiday?exchange=US",
            "url": "/stock/market-holiday?exchange=US&token=<token>"
          },
          {
            "text": "/stock/market-holiday?exchange=L",
            "url": "/stock/market-holiday?exchange=L&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Market Holiday",
        "newEndpoint": "New Endpoint",
        "operationId": "market-holiday",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MarketHoliday(context.Background()).Exchange(\"US\").Execute()",
          "javascript": "finnhubClient.marketHoliday({'exchange': 'US'}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.marketHoliday(exchange = \"US\"))",
          "php": "print_r($client->marketHoliday(\"US\"));",
          "python": "print(finnhub_client.market_holiday(exchange='US'))",
          "ruby": "puts(finnhub_client.market_holiday({exchange: 'US'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"eventName\": \"Christmas\",\n      \"atDate\": \"2023-12-25\",\n      \"tradingHour\": \"\"\n    },\n    {\n      \"eventName\": \"Independence Day\",\n      \"atDate\": \"2023-07-03\",\n      \"tradingHour\": \"09:30-13:00\"\n    }\n  ],\n  \"exchange\": \"US\",\n  \"timezone\": \"America/New_York\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Market Holiday",
        "title": "Global Stock Market Holiday API",
        "urlId": "market-holiday",
        "widget": null
      }
    },
    "/stock/market-status": {
      "get": {
        "parameters": [
          {
            "description": "Exchange code.",
            "in": "query",
            "name": "exchange",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketStatus",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get current market status for global exchanges (whether exchanges are open or close).",
        "examples": [
          {
            "text": "/stock/market-status?exchange=US",
            "url": "/stock/market-status?exchange=US&token=<token>"
          },
          {
            "text": "/stock/market-status?exchange=L",
            "url": "/stock/market-status?exchange=L&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Market Status",
        "newEndpoint": "New Endpoint",
        "operationId": "market-status",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.MarketStatus(context.Background()).Exchange(\"US\").Execute()",
          "javascript": "finnhubClient.marketStatus({'exchange': 'US'}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.marketStatus(exchange = \"US\"))",
          "php": "print_r($client->marketStatus(\"US\"));",
          "python": "print(finnhub_client.market_status(exchange='US'))",
          "ruby": "puts(finnhub_client.market_status({exchange: 'US'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"exchange\": \"US\",\n  \"holiday\": null,\n  \"isOpen\": false,\n  \"session\": \"pre-market\",\n  \"timezone\": \"America/New_York\",\n  \"t\": 1697018041\n}",
        "section": "Stock Fundamentals",
        "summary": "Market Status",
        "title": "Global Market Status API",
        "urlId": "market-status",
        "widget": null
      }
    },
    "/stock/metric": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Metric type. Can be 1 of the following values <code>all</code>",
            "in": "query",
            "name": "metric",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicFinancials",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company basic financials such as margin, P/E ratio, 52-week high/low etc.",
        "examples": [
          {
            "text": "/stock/metric?symbol=AAPL&metric=all",
            "url": "/stock/metric?symbol=AAPL&metric=all&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": "High Usage",
        "navHeader": "Basic Financials",
        "newEndpoint": null,
        "operationId": "company-basic-financials",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyBasicFinancials(context.Background()).Symbol(\"MSFT\").Metric(\"all\").Execute()",
          "javascript": "finnhubClient.companyBasicFinancials(\"AAPL\", \"all\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyBasicFinancials(\"AAPL\", \"all\"))",
          "php": "print_r($client->companyBasicFinancials(\"AAPL\", \"all\"));",
          "python": "print(finnhub_client.company_basic_financials('AAPL', 'all'))",
          "ruby": "puts(finnhub_client.company_basic_financials('AAPL', 'all'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"series\": {\n    \"annual\": {\n      \"currentRatio\": [\n        {\n          \"period\": \"2019-09-28\",\n          \"v\": 1.5401\n        },\n        {\n          \"period\": \"2018-09-29\",\n          \"v\": 1.1329\n        }\n      ],\n      \"salesPerShare\": [\n        {\n          \"period\": \"2019-09-28\",\n          \"v\": 55.9645\n        },\n        {\n          \"period\": \"2018-09-29\",\n          \"v\": 53.1178\n        }\n      ],\n      \"netMargin\": [\n        {\n          \"period\": \"2019-09-28\",\n          \"v\": 0.2124\n        },\n        {\n          \"period\": \"2018-09-29\",\n          \"v\": 0.2241\n        }\n      ]\n    }\n  },\n  \"metric\": {\n    \"10DayAverageTradingVolume\": 32.50147,\n    \"52WeekHigh\": 310.43,\n    \"52WeekLow\": 149.22,\n    \"52WeekLowDate\": \"2019-01-14\",\n    \"52WeekPriceReturnDaily\": 101.96334,\n    \"beta\": 1.2989,\n  },\n  \"metricType\": \"all\",\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Basic Financials",
        "title": "Global Company Basic Financials | P/E, EPS, Market cap, Shares Outstanding",
        "urlId": "company-basic-financials",
        "widget": null
      }
    },
    "/stock/ownership": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit number of results. Leave empty to get the full list.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ownership",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a full list of shareholders of a company in descending order of the number of shares held. Data is sourced from <code>13F form</code>, <code>Schedule 13D</code> and <code>13G</code> for US market, <code>UK Share Register</code> for UK market, <code>SEDI</code> for Canadian market and equivalent filings for other international markets.",
        "examples": [
          {
            "text": "/stock/ownership?symbol=AAPL&limit=20",
            "url": "/stock/ownership?symbol=AAPL&limit=20&token=<token>"
          },
          {
            "text": "/stock/ownership?symbol=IBM",
            "url": "/stock/ownership?symbol=IBM&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Ownership",
        "newEndpoint": null,
        "operationId": "ownership",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.Ownership(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "let optsLimit = {'limit': 10};\nfinnhubClient.ownership(\"AAPL\", optsLimit, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.ownership(\"AAPL\", limit = 5))",
          "php": "print_r($client->ownership(\"AAPL\", 5));",
          "python": "print(finnhub_client.ownership('AAPL', limit=5))",
          "ruby": "puts(finnhub_client.ownership('AAPL', {limit: 5}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"ownership\": [\n    {\n      \"name\": \"The Vanguard Group, Inc.\",\n      \"share\": 329323420,\n      \"change\": -1809077,\n      \"filingDate\": \"2019-12-31\"\n    },\n    {\n      \"name\": \"BRK.A | Berkshire Hathaway Inc.\",\n      \"share\": 245155570,\n      \"change\": -3683113,\n      \"filingDate\": \"2019-12-31\"\n    },\n    {\n      \"name\": \"BlackRock Institutional Trust Co NA\",\n      \"share\": 187354850,\n      \"change\": -2500563,\n      \"filingDate\": \"2020-03-31\"\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Ownership",
        "title": "Company Ownership",
        "urlId": "ownership",
        "widget": null
      }
    },
    "/stock/peers": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify the grouping criteria for choosing peers.Supporter values: <code>sector</code>, <code>industry</code>, <code>subIndustry</code>. Default to <code>subIndustry</code>.",
            "in": "query",
            "name": "grouping",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company peers. Return a list of peers operating in the same country and sector/industry.",
        "examples": [
          {
            "text": "/stock/peers?symbol=AAPL",
            "url": "/stock/peers?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/peers?symbol=F&grouping=industry",
            "url": "/stock/peers?symbol=F&grouping=industry&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Peers",
        "newEndpoint": null,
        "operationId": "company-peers",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyPeers(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyPeers('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyPeers(\"AAPL\"))",
          "php": "print_r($client->companyPeers(\"AAPL\"));",
          "python": "print(finnhub_client.company_peers('AAPL'))",
          "ruby": "puts(finnhub_client.companyPeers('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  \"AAPL\",\n  \"EMC\",\n  \"HPQ\",\n  \"DELL\",\n  \"WDC\",\n  \"HPE\",\n  \"NTAP\",\n  \"CPQ\",\n  \"SNDK\",\n  \"SEG\"\n]",
        "section": "Stock Fundamentals",
        "summary": "Peers",
        "title": "Company Peers",
        "urlId": "company-peers",
        "widget": null
      }
    },
    "/stock/presentation": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockPresentation",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get presentations/slides data in PDF format that are usually used during earnings calls.</p>",
        "examples": [
          {
            "text": "/stock/presentation?symbol=IBM",
            "url": "/stock/presentation?symbol=IBM&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Company Presentation",
        "newEndpoint": null,
        "operationId": "stock-presentation",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockPresentation(context.Background()).Symbol(\"IBM\").Execute()",
          "javascript": "finnhubClient.stockPresentation('IBM', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.stockPresentation(\"IBM\", \"\", \"\"))",
          "php": "print_r($client->stockPresentation(\"IBM\"));",
          "python": "print(finnhub_client.stock_presentation('IBM'))",
          "ruby": "puts(finnhub_client.stock_presentation('IBM'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"res\": [\n    {\n      \"atTime\": \"2025-01-29 22:00:00\",\n      \"quarter\": 4,\n      \"title\": \"IBM Q4 2024\",\n      \"url\": \"https://finnhub.io/api/redirect?urlType=transcripts-slides2&id=d244c28ec5ee4767b2\",\n      \"year\": 2024\n    },\n    {\n      \"atTime\": \"2024-10-23 21:00:00\",\n      \"quarter\": 3,\n      \"title\": \"IBM Q3 2024\",\n      \"url\": \"https://finnhub.io/api/redirect?urlType=transcripts-slides2&id=491dc513be934082f1\",\n      \"year\": 2024\n    }\n  ],\n  \"symbol\": \"IBM\"\n}",
        "section": "Alternative Data",
        "summary": "Company Presentation",
        "title": "Company Presentation",
        "urlId": "stock-presentation-slide-api",
        "widget": null
      }
    },
    "/stock/price-metric": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Get data on a specific date in the past. The data is available weekly so your date will be automatically adjusted to the last day of that week.",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceMetrics",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company price performance statistics such as 52-week high/low, YTD return and much more.",
        "examples": [
          {
            "text": "/stock/price-metric?symbol=AAPL",
            "url": "/stock/price-metric?symbol=AAPL&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Price Metrics",
        "newEndpoint": null,
        "operationId": "price-metrics",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.PriceMetrics(context.Background()).Symbol(\"MSFT\").Execute()",
          "javascript": "finnhubClient.priceMetrics(\"AAPL\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.priceMetrics(\"AAPL\"))",
          "php": "print_r($client->priceMetrics(\"AAPL\"));",
          "python": "print(finnhub_client.price_metrics('AAPL'))",
          "ruby": "puts(finnhub_client.price_metrics('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": {\n    \"100DayEMA\": 295.7694,\n    \"100DaySMA\": 319.2297,\n    \"10DayAverageTradingVolume\": 53717320,\n    \"10DayEMA\": 247.4641,\n    \"10DaySMA\": 247.372,\n    \"14DayRSI\": 34.0517,\n    \"1MonthHigh\": 314.67,\n    \"1MonthHighDate\": \"2022-08-16\",\n    \"50DayEMA\": 277.482,\n    \"50DaySMA\": 288.313,\n    \"52WeekHigh\": 414.5,\n    \"52WeekHighDate\": \"2021-11-04\",\n    \"52WeekLow\": 206.86,\n    \"52WeekLowDate\": \"2022-05-24\",\n    \"5DayEMA\": 245.8814,\n    \"ytdPriceReturn\": 10.1819\n  },\n  \"symbol\": \"TSLA\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Price Metrics",
        "title": "Price statistics API | 52-week high/low , YTD return, average volume.",
        "urlId": "price-metrics",
        "widget": null
      }
    },
    "/stock/price-target": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceTarget",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get latest price target consensus.",
        "examples": [
          {
            "text": "/stock/price-target?symbol=NFLX",
            "url": "/stock/price-target?symbol=NFLX&token=<token>"
          },
          {
            "text": "/stock/price-target?symbol=DIS",
            "url": "/stock/price-target?symbol=DIS&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Price Target",
        "newEndpoint": null,
        "operationId": "price-target",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.PriceTarget(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.priceTarget('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.priceTarget(\"AAPL\"))",
          "php": "print_r($client->priceTarget(\"AAPL\"));",
          "python": "print(finnhub_client.price_target('AAPL'))",
          "ruby": "puts(finnhub_client.price_target('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"lastUpdated\": \"2023-04-06 00:00:00\",\n  \"numberAnalysts\": 39,\n  \"symbol\": \"NFLX\",\n  \"targetHigh\": 462,\n  \"targetLow\": 217.15,\n  \"targetMean\": 364.37,\n  \"targetMedian\": 359.04\n}",
        "section": "Stock Estimates",
        "summary": "Price Target",
        "title": "Stocks Price Target",
        "urlId": "price-target",
        "widget": {
          "height": 400,
          "url": "https://widget.finnhub.io/widgets/price-target-chart?symbol=NVDA&theme=dark"
        }
      }
    },
    "/stock/profile": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL e.g.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ISIN",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CUSIP",
            "in": "query",
            "name": "cusip",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfile",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get general information of a company. You can query by symbol, ISIN or CUSIP",
        "examples": [
          {
            "text": "/stock/profile?symbol=AAPL",
            "url": "/stock/profile?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/profile?symbol=IBM",
            "url": "/stock/profile?symbol=IBM&token=<token>"
          },
          {
            "text": "/stock/profile?isin=US5949181045",
            "url": "/stock/profile?isin=US5949181045&token=<token>"
          },
          {
            "text": "/stock/profile?cusip=023135106",
            "url": "/stock/profile?cusip=023135106&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Company Profile",
        "newEndpoint": null,
        "operationId": "company-profile",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyProfile(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyProfile({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyProfile(symbol = \"AAPL\", isin = null, cusip = null))",
          "php": "print_r($client->companyProfile(\"AAPL\"));",
          "python": "print(finnhub_client.company_profile(symbol='AAPL'))",
          "ruby": "puts(finnhub_client.company_profile({symbol: 'AAPL'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"address\": \"1 Apple Park Way\",\n  \"city\": \"CUPERTINO\",\n  \"country\": \"US\",\n  \"currency\": \"USD\",\n  \"cusip\": \"\",\n  \"sedol\":\"2046251\",\n  \"description\": \"Apple Inc. is an American multinational technology company headquartered in Cupertino, California, that designs, develops, and sells consumer electronics, computer software, and online services. It is considered one of the Big Four technology companies, alongside Amazon, Google, and Microsoft. The company's hardware products include the iPhone smartphone, the iPad tablet computer, the Mac personal computer, the iPod portable media player, the Apple Watch smartwatch, the Apple TV digital media player, the AirPods wireless earbuds and the HomePod smart speaker. Apple's software includes the macOS, iOS, iPadOS, watchOS, and tvOS operating systems, the iTunes media player, the Safari web browser, the Shazam acoustic fingerprint utility, and the iLife and iWork creativity and productivity suites, as well as professional applications like Final Cut Pro, Logic Pro, and Xcode. Its online services include the iTunes Store, the iOS App Store, Mac App Store, Apple Music, Apple TV+, iMessage, and iCloud. Other services include Apple Store, Genius Bar, AppleCare, Apple Pay, Apple Pay Cash, and Apple Card.\",\n  \"employeeTotal\": \"137000\",\n  \"exchange\": \"NASDAQ/NMS (GLOBAL MARKET)\",\n  \"ggroup\": \"Technology Hardware & Equipment\",\n  \"gind\": \"Technology Hardware, Storage & Peripherals\",\n  \"gsector\": \"Information Technology\",\n  \"gsubind\": \"Technology Hardware, Storage & Peripherals\",\n  \"ipo\": \"1980-12-12\",\n  \"isin\": \"\",\n  \"marketCapitalization\": 1415993,\n  \"naics\": \"Communications Equipment Manufacturing\",\n  \"naicsNationalIndustry\": \"Radio and Television Broadcasting and Wireless Communications Equipment Manufacturing\",\n  \"naicsSector\": \"Manufacturing\",\n  \"naicsSubsector\": \"Computer and Electronic Product Manufacturing\",\n  \"name\": \"Apple Inc\",\n  \"phone\": \"14089961010\",\n  \"shareOutstanding\": 4375.47998046875,\n  \"state\": \"CALIFORNIA\",\n  \"ticker\": \"AAPL\",\n  \"weburl\": \"https://www.apple.com/\",\n  \"logo\": \"https://static.finnhub.io/logo/87cb30d8-80df-11ea-8951-00000000092a.png\",\n  \"finnhubIndustry\":\"Technology\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Company Profile",
        "title": "Global Company Profile",
        "urlId": "company-profile",
        "widget": null
      }
    },
    "/stock/profile2": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL e.g.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ISIN",
            "in": "query",
            "name": "isin",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CUSIP",
            "in": "query",
            "name": "cusip",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfile2",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get general information of a company. You can query by symbol, ISIN or CUSIP. This is the free version of <a href=\"#company-profile\">Company Profile</a>.",
        "examples": [
          {
            "text": "/stock/profile2?symbol=AAPL",
            "url": "/stock/profile2?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/profile2?isin=US5949181045",
            "url": "/stock/profile2?isin=US5949181045&token=<token>"
          },
          {
            "text": "/stock/profile2?cusip=023135106",
            "url": "/stock/profile2?cusip=023135106&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Company Profile 2",
        "newEndpoint": "New Endpoint",
        "operationId": "company-profile2",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyProfile2(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyProfile2({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyProfile2(symbol = \"AAPL\", isin = null, cusip = null))",
          "php": "print_r($client->companyProfile2(\"AAPL\"));",
          "python": "print(finnhub_client.company_profile2(symbol='AAPL'))",
          "ruby": "puts(finnhub_client.company_profile2({symbol: 'AAPL'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"country\": \"US\",\n  \"currency\": \"USD\",\n  \"exchange\": \"NASDAQ/NMS (GLOBAL MARKET)\",\n  \"ipo\": \"1980-12-12\",\n  \"marketCapitalization\": 1415993,\n  \"name\": \"Apple Inc\",\n  \"phone\": \"14089961010\",\n  \"shareOutstanding\": 4375.47998046875,\n  \"ticker\": \"AAPL\",\n  \"weburl\": \"https://www.apple.com/\",\n  \"logo\": \"https://static.finnhub.io/logo/87cb30d8-80df-11ea-8951-00000000092a.png\",\n  \"finnhubIndustry\":\"Technology\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Company Profile 2",
        "title": "Global Company Profile 2",
        "urlId": "company-profile2",
        "widget": null
      }
    },
    "/stock/recommendation": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RecommendationTrend"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get latest analyst recommendation trends for a company.",
        "examples": [
          {
            "text": "/stock/recommendation?symbol=AAPL",
            "url": "/stock/recommendation?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/recommendation?symbol=TSLA",
            "url": "/stock/recommendation?symbol=TSLA&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Recommendation Trends",
        "newEndpoint": null,
        "operationId": "recommendation-trends",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.RecommendationTrends(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.recommendationTrends('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.recommendationTrends(\"AAPL\"))",
          "php": "print_r($client->recommendationTrends(\"AAPL\"));",
          "python": "print(finnhub_client.recommendation_trends('AAPL'))",
          "ruby": "puts(finnhub_client.recommendation_trends('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"buy\": 24,\n    \"hold\": 7,\n    \"period\": \"2025-03-01\",\n    \"sell\": 0,\n    \"strongBuy\": 13,\n    \"strongSell\": 0,\n    \"symbol\": \"AAPL\"\n  },\n  {\n    \"buy\": 17,\n    \"hold\": 13,\n    \"period\": \"2025-02-01\",\n    \"sell\": 5,\n    \"strongBuy\": 13,\n    \"strongSell\": 0,\n    \"symbol\": \"AAPL\"\n  }\n]",
        "section": "Stock Estimates",
        "summary": "Recommendation Trends",
        "title": "Analysts Recommendation Trends",
        "urlId": "recommendation-trends",
        "widget": {
          "url": "https://widget.finnhub.io/widgets/recommendation?symbol=AAPL"
        }
      }
    },
    "/stock/revenue-breakdown": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CIK.",
            "in": "query",
            "name": "cik",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueBreakdown",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get revenue breakdown as-reporetd by product and geography. Users on personal plans can access data for US companies which disclose their revenue breakdown in the annual or quarterly reports.</p><p>Global standardized revenue breakdown/segments data is available for Enterprise users. <a href=\"mailto:support@finnhub.io\">Contact us</a> to inquire about the access for Global standardized data.</p>",
        "examples": [
          {
            "text": "/stock/revenue-breakdown?symbol=AAPL",
            "url": "/stock/revenue-breakdown?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/revenue-breakdown?cik=320193",
            "url": "/stock/revenue-breakdown?cik=320193&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Revenue Breakdown",
        "newEndpoint": null,
        "operationId": "revenue-breakdown",
        "premium": "Premium",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.RevenueBreakdown(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.revenueBreakdown({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.revenueBreakdown(\"AAPL\", \"\"))",
          "php": "print_r($client->revenueBreakdown(\"AAPL\"));",
          "python": "print(finnhub_client.stock_revenue_breakdown('AAPL'))",
          "ruby": "puts(finnhub_client.revenue_breakdown({symbol:'AAPL'}))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"data\": [\n    {\n      \"accessNumber\": \"0000320193-21-000010\",\n      \"breakdown\": {\n        \"unit\": \"usd\",\n        \"value\": 111439000000,\n        \"concept\": \"us-gaap:RevenueFromContractWithCustomerExcludingAssessedTax\",\n        \"endDate\": \"2020-12-26\",\n        \"startDate\": \"2020-09-27\",\n        \"revenueBreakdown\": [\n          {\n            \"axis\": \"srt:ProductOrServiceAxis\",\n            \"data\": [\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Products\",\n                \"value\": 95678000000,\n                \"member\": \"us-gaap:ProductMember\",\n                \"percentage\": 85.85683647556061\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Services\",\n                \"value\": 15761000000,\n                \"member\": \"us-gaap:ServiceMember\",\n                \"percentage\": 14.14316352443938\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Services\",\n                \"value\": 15761000000,\n                \"member\": \"us-gaap:ServiceMember\",\n                \"percentage\": 14.14316352443938\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"iPhone\",\n                \"value\": 65597000000,\n                \"member\": \"aapl:IPhoneMember\",\n                \"percentage\": 58.86359353547681\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Mac\",\n                \"value\": 8675000000,\n                \"member\": \"aapl:MacMember\",\n                \"percentage\": 7.784527858290185\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"iPad\",\n                \"value\": 8435000000,\n                \"member\": \"aapl:IPadMember\",\n                \"percentage\": 7.569163398810111\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Wearables, Home and Accessories\",\n                \"value\": 12971000000,\n                \"member\": \"aapl:WearablesHomeandAccessoriesMember\",\n                \"percentage\": 11.639551682983516\n              }\n            ],\n            \"label\": \"Product and Service [Axis]\"\n          },\n        ]\n      }\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Revenue Breakdown",
        "title": "Revenue Breakdown | Revenue Segment",
        "urlId": "revenue-breakdown",
        "widget": null
      }
    },
    "/stock/revenue-breakdown2": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueBreakdown2",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get standardized revenue breakdown and KPIs data for 30,000+ global companies.</p>",
        "examples": [
          {
            "text": "/stock/revenue-breakdown2?symbol=AAPL",
            "url": "/stock/revenue-breakdown2?symbol=AAPL&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Revenue Breakdown & KPI",
        "newEndpoint": null,
        "operationId": "revenue-breakdown2",
        "premium": "Premium",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.RevenueBreakdown2(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.revenueBreakdown2({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.revenueBreakdown2(\"AAPL\", \"\"))",
          "php": "print_r($client->revenueBreakdown2(\"AAPL\"));",
          "python": "print(finnhub_client.stock_revenue_breakdown2('AAPL'))",
          "ruby": "puts(finnhub_client.revenue_breakdown2({symbol:'AAPL'}))\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"currency\": \"USD\",\n  \"data\": {\n    \"annual\": {\n      \"revenue_by_geography\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2023-09-30\",\n                \"value\": 162560000000\n              },\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 167045000000\n              }\n            ],\n            \"label\": \"Americas\"\n          }\n        ]\n      ],\n      \"revenue_by_product\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2023-09-30\",\n                \"value\": 200583000000\n              },\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 201183000000\n              }\n            ],\n            \"label\": \"iPhone\"\n          }\n        ]\n      ]\n    },\n    \"quarterly\": {\n      \"revenue_by_geography\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 41664000000\n              },\n              {\n                \"period\": \"2024-12-28\",\n                \"value\": 52648000000\n              }\n            ],\n            \"label\": \"Americas\"\n          }\n        ]\n      ],\n      \"revenue_by_product\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 46222000000\n              },\n              {\n                \"period\": \"2024-12-28\",\n                \"value\": 69138000000\n              }\n            ],\n            \"label\": \"iPhone\"\n          }\n        ]\n      ]\n    }\n  },\n  \"symbol\": \"AAPL\"\n}",
        "section": "Enterprise data",
        "summary": "Revenue Breakdown & KPI",
        "title": "Revenue Breakdown | Revenue Segment & KPIs",
        "urlId": "revenue-breakdown-kpi-api",
        "widget": null
      }
    },
    "/stock/revenue-estimate": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "in": "query",
            "name": "freq",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueEstimates",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get company's revenue estimates.",
        "examples": [
          {
            "text": "/stock/revenue-estimate?symbol=AAPL",
            "url": "/stock/revenue-estimate?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/revenue-estimate?symbol=TSLA&freq=annual",
            "url": "/stock/revenue-estimate?symbol=TSLA&freq=annual&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Revenue Estimates",
        "newEndpoint": null,
        "operationId": "company-revenue-estimates",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.CompanyRevenueEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyRevenueEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.companyRevenueEstimates(\"TSLA\", freq = \"quarterly\"))",
          "php": "print_r($client->companyRevenueEstimates(\"TSLA\", \"quarterly\"));",
          "python": "print(finnhub_client.company_revenue_estimates('TSLA', freq='quarterly'))",
          "ruby": "puts(finnhub_client.company_revenue_estimates('TSLA', {freq: 'quarterly'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-06-30\",\n      \"revenueAvg\": 58800500000,\n      \"revenueHigh\": 64060000000,\n      \"revenueLow\": 54072000000,\n      \"quarter\": 3,\n      \"year\": 2020\n    },\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-03-31\",\n      \"revenueAvg\": 61287300000,\n      \"revenueHigh\": 66557000000,\n      \"revenueLow\": 54871000000,\n      \"quarter\": 2,\n      \"year\": 2020\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Estimates",
        "summary": "Revenue Estimates",
        "title": "Global Company Revenue Estimates",
        "urlId": "company-revenue-estimates",
        "widget": null
      }
    },
    "/stock/similarity-index": {
      "get": {
        "parameters": [
          {
            "description": "Symbol. Required if cik is empty",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CIK. Required if symbol is empty",
            "in": "query",
            "name": "cik",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<code>annual</code> or <code>quarterly</code>. Default to <code>annual</code>",
            "in": "query",
            "name": "freq",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimilarityIndex",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Calculate the textual difference between a company's 10-K / 10-Q reports and the same type of report in the previous year using Cosine Similarity. For example, this endpoint compares 2019's 10-K with 2018's 10-K. Companies breaking from its routines in disclosure of financial condition and risk analysis section can signal a significant change in the company's stock price in the upcoming 4 quarters.</p>",
        "examples": [
          {
            "text": "/stock/similarity-index?symbol=AAPL&freq=annual",
            "url": "/stock/similarity-index?symbol=AAPL&freq=annual&token=<token>"
          },
          {
            "text": "/stock/similarity-index?cik=320193&freq=quarterly",
            "url": "/stock/similarity-index?cik=320193&freq=quarterly&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Similarity Index",
        "newEndpoint": null,
        "operationId": "similarity-index",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.SimilarityIndex(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.similarityIndex({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.similarityIndex(\"AAPL\", \"\", \"annual\"))",
          "php": "print_r($client->similarityIndex(\"AAPL\"));",
          "python": "print(finnhub_client.sec_similarity_index('AAPL'))",
          "ruby": "puts(finnhub_client.similarity_index({symbol: 'AAPL'}))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"similarity\": [\n    {\n      \"cik\": \"320193\",\n      \"accessNumber\": \"0000320193-19-000119\",\n      \"item1\": 0.8833750347608914,\n      \"item2\": 0,\n      \"item1a\": 0.994836154829746,\n      \"item7\": 0.897030072745,\n      \"item7a\": 0.9843052590436008,\n      \"form\": \"10-K\",\n      \"reportUrl\": \"https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000032019319000119/a10-k20199282019.htm\",\n      \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000032019319000119/0000320193-19-000119-index.html\",\n      \"filedDate\": \"2019-10-31 00:00:00\",\n      \"acceptedDate\": \"2019-10-30 18:12:36\"\n    },\n    {\n      \"cik\": \"320193\",\n      \"accessNumber\": \"0000320193-18-000145\",\n      \"item1\": 0.9737784696339462,\n      \"item2\": 0,\n      \"item1a\": 0.9931651573630014,\n      \"item7\": 0.9441063774798184,\n      \"item7a\": 0.9856181212005336,\n      \"form\": \"10-K\",\n      \"reportUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000032019318000145/a10-k20189292018.htm\",\n      \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000032019318000145/0000320193-18-000145-index.html\",\n      \"filedDate\": \"2018-11-05 00:00:00\",\n      \"acceptedDate\": \"2018-11-05 08:01:40\"\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Stock Fundamentals",
        "summary": "Similarity Index",
        "title": "SEC Filings - Similarity Index Analysis",
        "urlId": "similarity-index",
        "widget": null
      }
    },
    "/stock/social-sentiment": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialSentiment",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get social sentiment for stocks on Reddit and Twitter.</p>",
        "examples": [
          {
            "text": "/stock/social-sentiment?symbol=GME",
            "url": "/stock/social-sentiment?symbol=GME&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Social Sentiment",
        "newEndpoint": null,
        "operationId": "social-sentiment",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.SocialSentiment(context.Background()).Symbol(\"GME\").Execute()",
          "javascript": "finnhubClient.socialSentiment('GME', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.socialSentiment(\"GME\", \"\", \"\"))",
          "php": "print_r($client->socialSentiment(\"GME\"));",
          "python": "print(finnhub_client.stock_social_sentiment('GME'))",
          "ruby": "puts(finnhub_client.social_sentiment('GME'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"atTime\": \"2021-05-08 14:00:00\",\n      \"mention\": 32,\n      \"positiveScore\": 0.9213675,\n      \"negativeScore\": -0.9864475,\n      \"positiveMention\": 20,\n      \"negativeMention\": 12,\n      \"score\": -0.0341123222115352\n    },\n    {\n      \"atTime\": \"2021-05-08 13:00:00\",\n      \"mention\": 25,\n      \"positiveScore\": 0.92,\n      \"negativeScore\": -0.991266,\n      \"positiveMention\": 8,\n      \"negativeMention\": 17,\n      \"score\": -0.56282\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Alternative Data",
        "summary": "Social Sentiment",
        "title": "Stocks Social Media Sentiment",
        "urlId": "social-sentiment",
        "widget": null
      }
    },
    "/stock/split": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "YYYY-MM-DD.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "YYYY-MM-DD.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Split"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get splits data for stocks.",
        "examples": [
          {
            "text": "/stock/split?symbol=AAPL&from=2015-02-01&to=2021-03-09",
            "url": "/stock/split?symbol=AAPL&from=2015-02-01&to=2021-03-09&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Splits",
        "newEndpoint": null,
        "operationId": "stock-splits",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockSplits(context.Background()).Symbol(\"AAPL\").From(\"2000-01-01\").To(\"2020-06-15\").Execute()",
          "javascript": "finnhubClient.stockSplits(\"AAPL\", \"2000-01-01\", \"2020-06-15\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.stockSplits(symbol = \"AAPL\", from = \"2000-01-01\", to = \"2020-01-01\"))",
          "php": "print_r($client->stockSplits(\"AAPL\", \"2000-01-01\", \"2020-01-01\"));",
          "python": "print(finnhub_client.stock_splits('AAPL', _from='2000-01-01', to='2020-01-01'))",
          "ruby": "puts(finnhub_client.stock_splits('AAPL', '2000-01-01', '2020-01-01'))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2014-06-09\",\n    \"fromFactor\": 1,\n    \"toFactor\": 7\n  }\n]",
        "section": "Stock Price",
        "summary": "Splits",
        "title": "Global Stocks Splits API",
        "urlId": "stock-splits",
        "widget": null
      }
    },
    "/stock/supply-chain": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplyChainRelationships",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>This endpoint provides an overall map of public companies' key customers and suppliers. The data offers a deeper look into a company's supply chain and how products are created. The data will help investors manage risk, limit exposure or generate alpha-generating ideas and trading insights.</p>",
        "examples": [
          {
            "text": "/stock/supply-chain?symbol=AAPL",
            "url": "/stock/supply-chain?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/supply-chain?symbol=WMT",
            "url": "/stock/supply-chain?symbol=WMT&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Supply Chain",
        "newEndpoint": null,
        "operationId": "supply-chain-relationships",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.SupplyChainRelationships(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.supplyChainRelationships('AAPL', (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.supplyChainRelationships(\"AAPL\"))",
          "php": "print_r($client->supplyChainRelationships(\"AAPL\"));",
          "python": "print(finnhub_client.stock_supply_chain('AAPL'))",
          "ruby": "puts(finnhub_client.supply_chain_relationships('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"customer\": true,\n      \"name\": \"Costco Wholesale Corporation\",\n      \"oneMonthCorrelation\": 0.26,\n      \"oneYearCorrelation\": 0.63,\n      \"sixMonthCorrelation\": 0.87,\n      \"supplier\": false,\n      \"symbol\": \"COST\",\n      \"threeMonthCorrelation\": 0.89,\n      \"twoWeekCorrelation\": 0.35,\n      \"twoYearCorrelation\": 0.91\n    },\n    {\n      \"customer\": true,\n      \"name\": \"Qualcomm\",\n      \"oneMonthCorrelation\": 0.06,\n      \"oneYearCorrelation\": 0.58,\n      \"sixMonthCorrelation\": 0.87,\n      \"supplier\": true,\n      \"symbol\": \"QCOM\",\n      \"threeMonthCorrelation\": 0.88,\n      \"twoWeekCorrelation\": 0.71,\n      \"twoYearCorrelation\": 0.94\n    },\n    {\n      \"customer\": false,\n      \"name\": \"Foxconn Industrial Internet Co., Ltd.\",\n      \"oneMonthCorrelation\": 0.25,\n      \"oneYearCorrelation\": -0.48,\n      \"sixMonthCorrelation\": -0.65,\n      \"supplier\": true,\n      \"symbol\": \"601138.SS\",\n      \"threeMonthCorrelation\": -0.79,\n      \"twoWeekCorrelation\": -0.55,\n      \"twoYearCorrelation\": -0.6\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Alternative Data",
        "summary": "Supply Chain Relationships",
        "title": "Supply Chain Relationships",
        "urlId": "supply-chain-relationships",
        "widget": null
      }
    },
    "/stock/symbol": {
      "get": {
        "parameters": [
          {
            "description": "Exchange you want to get the list of symbols from. List of exchange codes can be found <a href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\" target=\"_blank\">here</a>.",
            "in": "query",
            "name": "exchange",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by MIC code.",
            "in": "query",
            "name": "mic",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by security type used by OpenFigi standard.",
            "in": "query",
            "name": "securityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by currency.",
            "in": "query",
            "name": "currency",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StockSymbol"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List supported stocks. We use the following symbology to identify stocks on Finnhub <code>Exchange_Ticker.Exchange_Code</code>. A list of supported exchange codes can be found <a href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\" target=\"_blank\">here</a>.",
        "examples": [
          {
            "text": "/stock/symbol?exchange=US",
            "url": "/stock/symbol?exchange=US&token=<token>"
          },
          {
            "text": "/stock/symbol?exchange=US&mic=XNYS",
            "url": "/stock/symbol?exchange=US&mic=XNYS&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Stock Symbols",
        "newEndpoint": null,
        "operationId": "stock-symbols",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockSymbols(context.Background()).Exchange(\"US\").Execute()",
          "javascript": "finnhubClient.stockSymbols(\"US\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.stockSymbols(\"US\", \"\", \"\", \"\"))",
          "php": "print_r($client->stockSymbols(\"US\"));",
          "python": "print(finnhub_client.stock_symbols('US'))",
          "ruby": "puts(finnhub_client.stock_symbols('US'))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"currency\": \"USD\",\n    \"description\": \"UAN POWER CORP\",\n    \"displaySymbol\": \"UPOW\",\n    \"figi\": \"BBG000BGHYF2\",\n    \"mic\": \"OTCM\",\n    \"symbol\": \"UPOW\",\n    \"type\": \"Common Stock\"\n  },\n  {\n    \"currency\": \"USD\",\n    \"description\": \"APPLE INC\",\n    \"displaySymbol\": \"AAPL\",\n    \"figi\": \"BBG000B9Y5X2\",\n    \"mic\": \"XNGS\",\n    \"symbol\": \"AAPL\",\n    \"type\": \"Common Stock\"\n  },\n  {\n    \"currency\": \"USD\",\n    \"description\": \"EXCO TECHNOLOGIES LTD\",\n    \"displaySymbol\": \"EXCOF\",\n    \"figi\": \"BBG000JHDDS8\",\n    \"mic\": \"OOTC\",\n    \"symbol\": \"EXCOF\",\n    \"type\": \"Common Stock\"\n  }\n]",
        "section": "Stock Fundamentals",
        "summary": "Stock Symbol",
        "title": "Stock Symbols By Exchange",
        "urlId": "stock-symbols",
        "widget": null
      }
    },
    "/stock/tick": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date: 2020-04-02.",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Limit number of ticks returned. Maximum value: <code>25000</code>",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Number of ticks to skip. Use this parameter to loop through the entire data.",
            "in": "query",
            "name": "skip",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TickData",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get historical tick data for global exchanges.</p><p>For more historical tick data, you can visit our bulk download page in the Dashboard <a target=\"_blank\" href=\"/dashboard/download\",>here</a> to speed up the download process.</p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Exchange</th>\n      <th>Segment</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"text-blue\">US CTA/UTP</th>\n      <td>Full SIP</td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">TSX</th>\n      <td><ul><li>TSX</li><li>TSX Venture</li><li>Index</li></ul></td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">LSE</th>\n      <td><ul><li>London Stock Exchange (L)</li><li>LSE International (L)</li><li>LSE European (L)</li></ul></td>\n      <td>15 minute</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Euronext</th>\n      <td><ul> <li>Euronext Paris (PA)</li> <li>Euronext Amsterdam (AS)</li> <li>Euronext Lisbon (LS)</li> <li>Euronext Brussels (BR)</li> <li>Euronext Oslo (OL)</li> <li>Euronext London (LN)</li> <li>Euronext Dublin (IR)</li> <li>Index</li> <li>Warrant</li></ul></td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Deutsche B\u00f6rse</th>\n      <td><ul> <li>Frankfurt (F)</li> <li>Xetra (DE)</li> <li>Duesseldorf (DU)</li> <li>Hamburg (HM)</li> <li>Berlin (BE)</li> <li>Hanover (HA)</li> <li>Stoxx (SX)</li> <li>TradeGate (TG)</li> <li>Zertifikate (SC)</li> <li>Index</li> <li>Warrant</li></ul></td>\n      <td>End-of-day</td>\n    </tr>\n  </tbody>\n</table>",
        "examples": [
          {
            "text": "/stock/tick?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json",
            "url": "/stock/tick?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json&token=<token>"
          },
          {
            "text": "/stock/tick?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json",
            "url": "/stock/tick?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json&token=<token>"
          },
          {
            "text": "/stock/tick?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json",
            "url": "/stock/tick?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Tick/Trade Data",
        "newEndpoint": null,
        "operationId": "stock-tick",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockTick(context.Background()).Symbol(\"AAPL\").Date(\"2021-07-23\").Limit(50).Skip(0).Execute()",
          "javascript": "finnhubClient.stockTick(\"AAPL\", \"2020-03-25\", 500, 0, (error, data, response) => {\n  console.log(data);\n});",
          "kotlin": "println(apiClient.stockTick(\"AAPL\", \"2020-03-25\", 500, 0))",
          "php": "print_r($client->stockTick(\"AAPL\", \"2020-03-25\", 500, 0));",
          "python": "print(finnhub_client.stock_tick('AAPL', '2020-03-25', 500, 0))",
          "ruby": "puts(finnhub_client.stock_tick('AAPL', '2020-03-25', 500, 0))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"p\": [\n    255,\n    255,\n    255\n  ],\n  \"s\": \"AAPL\",\n  \"skip\": 0,\n  \"t\": [\n    1585108800073,\n    1585108800315,\n    1585108800381\n  ],\n  \"v\": [\n    2513,\n    24,\n    1\n  ],\n  \"x\": [\n    \"P\",\n    \"P\",\n    \"P\"\n  ],\n  \"count\": 3,\n  \"c\":[[\"1\",\"24\"],[\"1\",\"24\",\"12\"],[\"1\",\"24\",\"12\"]]\n}",
        "section": "Stock Price",
        "summary": "Tick Data",
        "title": "Global Stocks Tick Data",
        "urlId": "stock-tick",
        "widget": null
      }
    },
    "/stock/transcripts": {
      "get": {
        "parameters": [
          {
            "description": "Transcript's id obtained with <a href=\"#transcripts-list\">Transcripts List endpoint</a>.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningsCallTranscripts",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "<p>Get earnings call transcripts, audio and participants' list. Data is available for US, UK, European, Australian and Canadian companies.<p>15+ years of data is available with 220,000+ audio which add up to 7TB in size.</p>",
        "examples": [
          {
            "text": "/stock/transcripts?id=AAPL_162777",
            "url": "/stock/transcripts?id=AAPL_162777&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Transcripts",
        "newEndpoint": null,
        "operationId": "transcripts",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.Transcripts(context.Background()).Id(\"AAPL_162777\").Execute()",
          "javascript": "finnhubClient.transcripts(\"AAPL_162777\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.transcripts(\"AAPL_162777\"))",
          "php": "print_r($client->transcripts(\"AAPL_162777\"));",
          "python": "print(finnhub_client.transcripts('AAPL_162777'))",
          "ruby": "puts(finnhub_client.transcripts('AAPL_162777'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"audio\": \"https://static.finnhub.io/transcripts_audio/4319666.mp3\",\n  \"id\": \"AAPL_326091\",\n  \"participant\": [\n    {\n      \"name\": \"Tejas Gala\",\n      \"description\": \"Senior Analyst at Corporate Finance and IR\"\n    },\n    {\n      \"name\": \"Tim Cook\",\n      \"description\": \"CEO\"\n    }\n  ],\n  \"quarter\": 1,\n  \"symbol\": \"AAPL\",\n  \"time\": \"2020-01-28 21:35:45\",\n  \"title\": \"AAPL - Earnings call transcripts Q1 2020\",\n  \"transcript\": [\n    {\n      \"name\": \"Operator\",\n      \"speech\": [\n        \"Good day, everyone. Welcome to the Apple Incorporated First Quarter Fiscal Year 2020 Earnings Conference Call. Today's conference is being recorded. At this time for opening remarks and introductions, I would like to turn the call over to Tejas Gala, Senior Analyst, Corporate Finance and Investor Relations. Please go ahead.\"\n      ]\n    },\n    {\n      \"name\": \"Tejas Gala\",\n      \"speech\": [\n        \"Thank you. Good afternoon, and thank you for joining us. Speaking first today is Apple's CEO, Tim Cook, and he'll be followed by CFO, Luca Maestri. After that, we'll open the call to questions from analysts. Please note that some of the information you'll hear during our discussion today will consist of forward-looking statements, including without limitation, those regarding revenue, gross margin, operating expenses, other income and expenses, taxes, capital allocation and future business outlook. Actual results or trends could differ materially from our forecast. For more information, please refer to the risk factors discussed in Apple's most recently filed periodic reports on Form 10-K and Form 10-Q and the Form 8-K filed with the SEC today, along with the associated press release. Apple assumes no obligation to update any forward-looking statements or information, which speaks as of their respective dates. I'd now like to turn the call over to Tim for introductory remarks.\"\n      ]\n    }\n  ],\n  \"year\": 2020\n}",
        "section": "Alternative Data",
        "summary": "Earnings Call Transcripts",
        "title": "Earnings Call Transcripts API | Finnhub Stock API",
        "urlId": "earnings-call-transcripts-api",
        "widget": null
      }
    },
    "/stock/transcripts/list": {
      "get": {
        "parameters": [
          {
            "description": "Company symbol: AAPL. Leave empty to list the latest transcripts",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningsCallTranscriptsList",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List earnings call transcripts' metadata. This endpoint is available for US, UK, European, Australian and Canadian companies.",
        "examples": [
          {
            "text": "/stock/transcripts/list?symbol=AAPL",
            "url": "/stock/transcripts/list?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/transcripts/list?symbol=AC.TO",
            "url": "/stock/transcripts/list?symbol=AC.TO&token=<token>"
          },
          {
            "text": "/stock/transcripts/list?symbol=BARC.L",
            "url": "/stock/transcripts/list?symbol=BARC.L&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Transcripts List",
        "newEndpoint": null,
        "operationId": "transcripts-list",
        "premium": "Premium required.",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.TranscriptsList(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.transcriptsList(\"AAPL\", (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.transcriptsList(\"AAPL\"))",
          "php": "print_r($client->transcriptsList(\"AAPL\"));",
          "python": "print(finnhub_client.transcripts_list('AAPL'))",
          "ruby": "puts(finnhub_client.transcripts_list('AAPL'))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"symbol\": \"AAPL\",\n  \"transcripts\": [\n    {\n      \"id\": \"AAPL_326091\",\n      \"quarter\": 1,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2020-01-28 21:35:45\",\n      \"title\": \"AAPL - Earnings Call Transcript Q1 2020\",\n      \"year\": 2020\n    },\n    {\n      \"id\": \"AAPL_322579\",\n      \"quarter\": 4,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-10-30 22:27:15\",\n      \"title\": \"AAPL - Earnings Call Transcript Q4 2019\",\n      \"year\": 2019\n    },\n    {\n      \"id\": \"AAPL_318112\",\n      \"quarter\": 3,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-07-30 22:26:28\",\n      \"title\": \"AAPL - Earnings Call Transcript Q3 2019\",\n      \"year\": 2019\n    },\n    {\n      \"id\": \"AAPL_313737\",\n      \"quarter\": 2,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-04-30 19:55:19\",\n      \"title\": \"AAPL - Earnings Call Transcript Q2 2019\",\n      \"year\": 2019\n    },\n    {\n      \"id\": \"AAPL_308757\",\n      \"quarter\": 1,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-01-29 21:06:06\",\n      \"title\": \"AAPL - Earnings Call Transcript Q1 2019\",\n      \"year\": 2019\n    }\n  ]\n}",
        "section": "Alternative Data",
        "summary": "Earnings Call Transcripts List",
        "title": "List Earnings Call Transcripts",
        "urlId": "transcripts-list",
        "widget": null
      }
    },
    "/stock/upgrade-downgrade": {
      "get": {
        "parameters": [
          {
            "description": "Symbol of the company: AAPL. If left blank, the API will return latest stock upgrades/downgrades.",
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date: 2000-03-15.",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date: 2020-03-16.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpgradeDowngrade"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get latest stock upgrade and downgrade.",
        "examples": [
          {
            "text": "/stock/upgrade-downgrade?symbol=AAPL",
            "url": "/stock/upgrade-downgrade?symbol=AAPL&token=<token>"
          },
          {
            "text": "/stock/upgrade-downgrade?symbol=BYND",
            "url": "/stock/upgrade-downgrade?symbol=BYND&token=<token>"
          }
        ],
        "freeTier": null,
        "highUsage": null,
        "navHeader": "Upgrade Downgrade",
        "newEndpoint": null,
        "operationId": "upgrade-downgrade",
        "premium": "Premium Access Required",
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.UpgradeDowngrade(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.upgradeDowngrade({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "kotlin": "println(apiClient.upgradeDowngrade(symbol = \"AAPL\", from = \"2020-01-01\", to = \"2020-06-30\"))",
          "php": "print_r($client->upgradeDowngrade(\"AAPL\", \"2020-01-01\", \"2020-06-30\"));",
          "python": "print(finnhub_client.upgrade_downgrade(symbol='AAPL', _from='2020-01-01', to='2020-06-30'))",
          "ruby": "puts(finnhub_client.upgrade_downgrade({symbol: 'AAPL', from: '2020-01-01', to: '2020-06-30'}))",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"BYND\",\n    \"gradeTime\": 1567728000,\n    \"company\": \"DA Davidson\",\n    \"fromGrade\": \"\",\n    \"toGrade\": \"Underperform\",\n    \"action\": \"init\"\n  },\n  {\n    \"symbol\": \"BYND\",\n    \"gradeTime\": 1566259200,\n    \"company\": \"JP Morgan\",\n    \"fromGrade\": \"Neutral\",\n    \"toGrade\": \"Overweight\",\n    \"action\": \"up\"\n  },\n  {\n    \"symbol\": \"BYND\",\n    \"gradeTime\": 1564704000,\n    \"company\": \"Bank of America\",\n    \"fromGrade\": \"\",\n    \"toGrade\": \"Neutral\",\n    \"action\": \"reit\"\n  }\n]",
        "section": "Stock Estimates",
        "summary": "Stock Upgrade/Downgrade",
        "title": "Real-time Stocks Upgrade/Downgrade",
        "urlId": "upgrade-downgrade",
        "widget": null
      }
    },
    "/stock/usa-spending": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>. Filter for <code>actionDate</code>",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>. Filter for <code>actionDate</code>",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsaSpendingResult",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of government's spending activities from USASpending dataset for public companies. This dataset can help you identify companies that win big government contracts which is extremely important for industries such as Defense, Aerospace, and Education.",
        "examples": [
          {
            "text": "/stock/usa-spending?symbol=LMT&from=2021-01-01&to=2022-12-31",
            "url": "/stock/usa-spending?symbol=LMT&from=2021-01-01&to=2022-12-31&token=<token>"
          },
          {
            "text": "/stock/usa-spending?symbol=BA&from=2021-01-01&to=2022-12-31",
            "url": "/stock/usa-spending?symbol=BA&from=2021-01-01&to=2022-12-31&token=<token>"
          }
        ],
        "highUsage": null,
        "navHeader": "USA Spending",
        "newEndpoint": "New",
        "operationId": "stock-usa-spending",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockUsaSpending(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2022-05-01\").Execute()",
          "javascript": "finnhubClient.stockUsaSpending(\"AAPL\", \"2020-01-01\", \"2022-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.stockUsaSpending(\"AAPL\", from = \"2020-06-01\", to = \"2022-06-10\"))",
          "php": "print_r($client->stockUsaSpending(\"AAPL\", \"2020-06-01\", \"2022-06-10\"));",
          "python": "print(finnhub_client.stock_usa_spending(\"AAPL\", \"2021-01-01\", \"2022-06-15\"))",
          "ruby": "puts(finnhub_client.stock_usa_spending('AAPL', \"2020-06-01\", \"2022-06-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\":[\n    {\n      \"symbol\":\"AAPL\",\n      \"recipientName\":\"APPLE INC.\",\n      \"recipientParentName\":\"APPLE INC.\",\n      \"country\":\"USA\",\n      \"totalValue\":4238,\n      \"actionDate\":\"2021-11-12\",\n      \"performanceStartDate\":\"2021-11-12\",\n      \"performanceEndDate\":\"2021-12-10\",\n      \"awardingAgencyName\":\"SMITHSONIAN INSTITUTION (SI)\",\n      \"awardingSubAgencyName\":\"SMITHSONIAN INSTITUTION\",\n      \"awardingOfficeName\":\"SMITHSONIAN ASTROPHYSICAL OBSERVATORY\",\n      \"performanceCountry\":\"USA\",\n      \"performanceCity\":\"CUPERTINO\",\n      \"performanceCounty\":\"SANTA CLARA\",\n      \"performanceState\":\"CALIFORNIA\",\n      \"performanceZipCode\":\"950140642\",\n      \"performanceCongressionalDistrict\":\"17\",\n      \"awardDescription\":\"MACBOOK PRO\",\n      \"naicsCode\":\"334111\",\n      \"permalink\":\"https://www.usaspending.gov/award/CONT_AWD_33131222P00465925_3300_-NONE-_-NONE-/\"\n    }\n  ],\n  \"symbol\":\"AAPL\"\n}",
        "section": "Alternative Data",
        "summary": "USA Spending",
        "title": "USA Spending | Government contracts API",
        "urlId": "stock-usa-spending",
        "widget": null
      }
    },
    "/stock/uspto-patent": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsptoPatentResult",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "List USPTO patents for companies. Limit to 250 records per API call.",
        "examples": [
          {
            "text": "/stock/uspto-patent?symbol=NVDA&from=2021-01-01&to=2021-12-31",
            "url": "/stock/uspto-patent?symbol=NVDA&from=2021-01-01&to=2021-12-31&token=<token>"
          }
        ],
        "highUsage": null,
        "navHeader": "USPTO Patents",
        "newEndpoint": "New",
        "operationId": "stock-uspto-patent",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockUsptoPatent(context.Background()).Symbol(\"NVDA\").From(\"2020-05-01\").To(\"2021-05-01\").Execute()",
          "javascript": "finnhubClient.stockUsptoPatent(\"NVDA\", \"2020-01-01\", \"2021-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.stockUsptoPatent(\"NVDA\", from = \"2020-06-01\", to = \"2021-06-10\"))",
          "php": "print_r($client->stockUsptoPatent(\"NVDA\", \"2020-06-01\", \"2021-06-10\"));",
          "python": "print(finnhub_client.stock_uspto_patent('NVDA', _from=\"2020-06-01\", to=\"2021-06-10\"))",
          "ruby": "puts(finnhub_client.stock_uspto_patent('NVDA', \"2020-06-01\", \"2021-06-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"data\":[\n      {\n         \"applicationNumber\":\"17163855\",\n         \"companyFilingName\":[\n            \"NVIDIA CORPORATION\"\n         ],\n         \"description\":\"DYNAMIC DIRECTIONAL ROUNDING\",\n         \"filingDate\":\"2021-02-01 00:00:00\",\n         \"filingStatus\":\"Application\",\n         \"patentNumber\":\"US20210232366A1\",\n         \"publicationDate\":\"2021-07-29 00:00:00\",\n         \"type\":\"Utility\",\n         \"url\":\"https://patentimages.storage.googleapis.com/33/ed/0c/0b6b6f87e55fea/US20210232366A1.pdf\"\n      },\n      {\n         \"applicationNumber\":\"17162550\",\n         \"companyFilingName\":[\n            \"NVIDIA CORPORATION\"\n         ],\n         \"description\":\"REAL-TIME HARDWARE-ASSISTED GPU TUNING USING MACHINE LEARNING\",\n         \"filingDate\":\"2021-01-29 00:00:00\",\n         \"filingStatus\":\"Application\",\n         \"patentNumber\":\"US20210174569A1\",\n         \"publicationDate\":\"2021-06-10 00:00:00\",\n         \"type\":\"Utility\",\n         \"url\":\"https://patentimages.storage.googleapis.com/23/40/45/98b27a921d657c/US20210174569A1.pdf\"\n      }\n   ],\n   \"symbol\":\"NVDA\"\n}",
        "section": "Alternative Data",
        "summary": "USPTO Patents",
        "title": "USPTO Patents",
        "urlId": "stock-uspto-patent",
        "widget": null
      }
    },
    "/stock/visa-application": {
      "get": {
        "parameters": [
          {
            "description": "Symbol.",
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date <code>YYYY-MM-DD</code>. Filter on the <code>beginDate</code> column.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date <code>YYYY-MM-DD</code>. Filter on the <code>beginDate</code> column.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisaApplicationResult",
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Default"
        ],
        "description": "Get a list of H1-B and Permanent visa applications for companies from the DOL. The data is updated quarterly.",
        "examples": [
          {
            "text": "/stock/visa-application?symbol=AAPL&from=2021-01-01&to=2021-12-31",
            "url": "/stock/visa-application?symbol=AAPL&from=2021-01-01&to=2021-12-31&token=<token>"
          }
        ],
        "highUsage": null,
        "navHeader": "Visa Application",
        "newEndpoint": "New",
        "operationId": "stock-visa-application",
        "premium": null,
        "sampleCode": {
          "curl": "autoGenerated",
          "go": "res, _, err := finnhubClient.StockVisaApplication(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2021-05-01\").Execute()",
          "javascript": "finnhubClient.stockVisaApplication(\"AAPL\", \"2020-01-01\", \"2021-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "kotlin": "println(apiClient.stockVisaApplication(\"AAPL\", from = \"2020-06-01\", to = \"2021-06-10\"))",
          "php": "print_r($client->stockVisaApplication(\"AAPL\", \"2020-06-01\", \"2021-06-10\"));",
          "python": "print(finnhub_client.stock_visa_application(\"AAPL\", \"2021-01-01\", \"2022-06-15\"))",
          "ruby": "puts(finnhub_client.stock_visa_application('AAPL', \"2020-06-01\", \"2021-06-10\"))",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"year\": 2020,\n      \"quarter\": 1,\n      \"symbol\": \"AAPL\",\n      \"caseNumber\": \"I-200-19268-472068\",\n      \"caseStatus\": \"Certified\",\n      \"receivedDate\": \"2019-09-25\",\n      \"visaClass\": \"H-1B\",\n      \"jobTitle\": \"ASIC DESIGN VERIFICATION ENGINEER\",\n      \"socCode\": \"17-2072\",\n      \"fullTimePosition\": \"Y\",\n      \"beginDate\": \"2019-10-14\",\n      \"endDate\": \"2022-10-13\",\n      \"employerName\": \"APPLE INC.\",\n      \"worksiteAddress\": \"320 S Capital of Texas Highway\",\n      \"worksiteCity\": \"West Lake Hills\",\n      \"worksiteCounty\": \"Travis\",\n      \"worksiteState\": \"TX\",\n      \"worksitePostalCode\": \"78746\",\n      \"wageRangeFrom\": 120000,\n      \"wageRangeTo\": null,\n      \"wageUnitOfPay\": \"Year\",\n      \"wageLevel\": \"II\",\n      \"h1bDependent\": \"N\"\n    },\n    ...\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "section": "Alternative Data",
        "summary": "H1-B Visa Application",
        "title": "H1-B Visa Application API for public companies",
        "urlId": "stock-visa-application",
        "widget": null
      }
    }
  },
  "components": {
    "schemas": {
      "AIChatBody": {
        "properties": {
          "messages": {
            "description": "Messages",
            "items": {
              "$ref": "#/components/schemas/AIChatMessage"
            },
            "type": "array"
          },
          "stream": {
            "description": "Stream responses",
            "type": "boolean"
          }
        },
        "required": [
          "messages"
        ],
        "type": "object"
      },
      "AIChatMessage": {
        "properties": {
          "content": {
            "description": "Content",
            "type": "string"
          },
          "role": {
            "description": "Role system/user",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AIChatResponse": {
        "properties": {
          "chatId": {
            "description": "Chat ID.",
            "type": "string"
          },
          "content": {
            "description": "Response text.",
            "type": "string"
          },
          "querySummary": {
            "description": "Query summary",
            "type": "string"
          },
          "relatedQueries": {
            "description": "Related queries.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "sources": {
            "description": "Sources.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "tickers": {
            "description": "List of tickers mentioned.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "widgets": {
            "description": "Widgets.",
            "items": {
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AggregateIndicators": {
        "properties": {
          "technicalAnalysis": {
            "$ref": "#/components/schemas/TechnicalAnalysis",
            "description": "Number of indicator signals strong buy, buy, neutral, sell, strong sell signals.",
            "type": "object"
          },
          "trend": {
            "$ref": "#/components/schemas/Trend",
            "description": "Whether the market is trending.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "AirlinePriceIndex": {
        "properties": {
          "dailyAvgPrice": {
            "description": "Daily average ticket price.",
            "format": "float",
            "type": "number"
          },
          "date": {
            "description": "Date",
            "type": "string"
          },
          "priceIndex": {
            "description": "Price Index",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "AirlinePriceIndexData": {
        "properties": {
          "airline": {
            "description": "Airline name",
            "type": "string"
          },
          "data": {
            "description": "Array of price index.",
            "items": {
              "$ref": "#/components/schemas/AirlinePriceIndex"
            },
            "type": "array"
          },
          "from": {
            "description": "From date",
            "type": "string"
          },
          "to": {
            "description": "To date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BankBranchData": {
        "properties": {
          "address": {
            "description": "Branch address",
            "type": "string"
          },
          "branchId": {
            "description": "Branch ID",
            "type": "string"
          },
          "date": {
            "description": "Date opened",
            "type": "string"
          },
          "state": {
            "description": "State",
            "type": "string"
          },
          "zipCode": {
            "description": " Zip code",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BankBranchRes": {
        "properties": {
          "data": {
            "description": "Array of branches.",
            "items": {
              "$ref": "#/components/schemas/BankBranchData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BasicFinancials": {
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/MetricMap",
            "description": "Map key-value pair of key ratios and metrics.",
            "type": "object"
          },
          "metricType": {
            "description": "Metric type.",
            "type": "string"
          },
          "series": {
            "$ref": "#/components/schemas/MetricSeriesMap",
            "description": "Map key-value pair of time-series ratios.",
            "type": "object"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BondCandles": {
        "properties": {
          "c": {
            "description": "List of close prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "s": {
            "description": "Status of the response. This field can either be ok or no_data.",
            "type": "string"
          },
          "t": {
            "description": "List of timestamp for returned candles.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BondProfile": {
        "properties": {
          "amountOutstanding": {
            "description": "Outstanding amount.",
            "format": "float",
            "type": "number"
          },
          "asset": {
            "description": "Asset.",
            "type": "string"
          },
          "assetType": {
            "description": "Asset.",
            "type": "string"
          },
          "bondType": {
            "description": "Bond type.",
            "type": "string"
          },
          "callable": {
            "description": "Callable.",
            "type": "boolean"
          },
          "coupon": {
            "description": "Coupon.",
            "format": "float",
            "type": "number"
          },
          "couponType": {
            "description": "Coupon type.",
            "type": "string"
          },
          "cusip": {
            "description": "Cusip.",
            "type": "string"
          },
          "datedDate": {
            "description": "Dated date.",
            "type": "string"
          },
          "debtType": {
            "description": "Bond type.",
            "type": "string"
          },
          "figi": {
            "description": "FIGI.",
            "type": "string"
          },
          "firstCouponDate": {
            "description": "First coupon date.",
            "type": "string"
          },
          "industryGroup": {
            "description": "Industry.",
            "type": "string"
          },
          "industrySubGroup": {
            "description": "Sub-Industry.",
            "type": "string"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          },
          "issueDate": {
            "description": "Issue date.",
            "type": "string"
          },
          "maturityDate": {
            "description": "Period.",
            "type": "string"
          },
          "offeringPrice": {
            "description": "Offering price.",
            "format": "float",
            "type": "number"
          },
          "originalOffering": {
            "description": "Offering amount.",
            "format": "float",
            "type": "number"
          },
          "paymentFrequency": {
            "description": "Payment frequency.",
            "type": "string"
          },
          "securityLevel": {
            "description": "Security level.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BondTickData": {
        "properties": {
          "ats": {
            "description": "ATS flag. Y or empty",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "c": {
            "description": "List of trade conditions. A comprehensive list of trade conditions code can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\">here</a>",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          "count": {
            "description": "Number of ticks returned. If <code>count</code> < <code>limit</code>, all data for that date has been returned.",
            "format": "int64",
            "type": "integer"
          },
          "cp": {
            "description": "List of values showing the counterparty of each trade. List of supported values: <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",>here</a>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "p": {
            "description": "List of price data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "rp": {
            "description": "List of values showing the reporting party of each trade. List of supported values: <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",>here</a>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "si": {
            "description": "List of values showing the side (Buy/sell) of each trade. List of supported values: <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",>here</a>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "skip": {
            "description": "Number of ticks skipped.",
            "format": "int64",
            "type": "integer"
          },
          "t": {
            "description": "List of timestamp in UNIX ms.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "total": {
            "description": "Total number of ticks for that date.",
            "format": "int64",
            "type": "integer"
          },
          "v": {
            "description": "List of volume data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "y": {
            "description": "List of yield data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BondYieldCurve": {
        "properties": {
          "code": {
            "description": "Bond's code",
            "type": "string"
          },
          "data": {
            "description": "Array of data.",
            "items": {
              "$ref": "#/components/schemas/BondYieldCurveInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BondYieldCurveInfo": {
        "properties": {
          "d": {
            "description": "Date of the reading",
            "type": "string"
          },
          "v": {
            "description": "Value",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BreakdownItem": {
        "properties": {
          "accessNumber": {
            "description": "Access number of the report from which the data is sourced.",
            "type": "string"
          },
          "breakdown": {
            "$ref": "#/components/schemas/BreakdownItemMap",
            "description": "Revenue breakdown.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "BreakdownItemMap": {
        "type": "object"
      },
      "Company": {
        "properties": {
          "age": {
            "description": "Age",
            "format": "int64",
            "type": "integer"
          },
          "compensation": {
            "description": "Total compensation",
            "format": "int64",
            "type": "integer"
          },
          "currency": {
            "description": "Compensation currency",
            "type": "string"
          },
          "name": {
            "description": "Executive name",
            "type": "string"
          },
          "sex": {
            "description": "Sex",
            "type": "string"
          },
          "since": {
            "description": "Year first appointed as executive/director of the company",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyESG": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CompanyESGMap",
            "description": "Map key-value pair of key ESG data points.",
            "type": "object"
          },
          "environmentScore": {
            "description": "Environment Score",
            "format": "float",
            "type": "number"
          },
          "governanceScore": {
            "description": "Governance Score",
            "format": "float",
            "type": "number"
          },
          "socialScore": {
            "description": "Social Score",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "symbol",
            "type": "string"
          },
          "totalESGScore": {
            "description": "Total ESG Score",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CompanyESG2": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CompanyESGMap",
            "description": "Map key-value pair of key ESG data points.",
            "type": "object"
          },
          "environmentScore": {
            "description": "Environment Score",
            "format": "float",
            "type": "number"
          },
          "governanceScore": {
            "description": "Governance Score",
            "format": "float",
            "type": "number"
          },
          "period": {
            "description": "Period",
            "type": "string"
          },
          "socialScore": {
            "description": "Social Score",
            "format": "float",
            "type": "number"
          },
          "totalESGScore": {
            "description": "Total ESG Score",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CompanyESGMap": {
        "type": "object"
      },
      "CompanyEarningsQualityScore": {
        "properties": {
          "data": {
            "description": "Array of earnings quality score.",
            "items": {
              "$ref": "#/components/schemas/CompanyEarningsQualityScoreData"
            },
            "type": "array"
          },
          "freq": {
            "description": "Frequency",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyEarningsQualityScoreData": {
        "properties": {
          "cashGenerationCapitalAllocation": {
            "description": "Cash Generation and Capital Allocation",
            "format": "float",
            "type": "number"
          },
          "growth": {
            "description": "Growth Score",
            "format": "float",
            "type": "number"
          },
          "letterScore": {
            "description": "Letter Score",
            "type": "string"
          },
          "leverage": {
            "description": "Leverage Score",
            "format": "float",
            "type": "number"
          },
          "period": {
            "description": "Period",
            "type": "string"
          },
          "profitability": {
            "description": "Profitability Score",
            "format": "float",
            "type": "number"
          },
          "score": {
            "description": "Total Score",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CompanyExecutive": {
        "properties": {
          "executive": {
            "description": "Array of company's executives and members of the Board.",
            "items": {
              "$ref": "#/components/schemas/Company"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyNews": {
        "properties": {
          "category": {
            "description": "News category.",
            "type": "string"
          },
          "datetime": {
            "description": "Published time in UNIX timestamp.",
            "format": "int64",
            "type": "integer"
          },
          "headline": {
            "description": "News headline.",
            "type": "string"
          },
          "id": {
            "description": "News ID. This value can be used for <code>minId</code> params to get the latest news only.",
            "format": "int64",
            "type": "integer"
          },
          "image": {
            "description": "Thumbnail image URL.",
            "type": "string"
          },
          "related": {
            "description": "Related stocks and companies mentioned in the article.",
            "type": "string"
          },
          "source": {
            "description": "News source.",
            "type": "string"
          },
          "summary": {
            "description": "News summary.",
            "type": "string"
          },
          "url": {
            "description": "URL of the original article.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyNewsStatistics": {
        "properties": {
          "articlesInLastWeek": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "buzz": {
            "description": "",
            "format": "float",
            "type": "number"
          },
          "weeklyAverage": {
            "description": "",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CompanyProfile": {
        "properties": {
          "address": {
            "description": "Address of company's headquarter.",
            "type": "string"
          },
          "alias": {
            "description": "Company name alias.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "city": {
            "description": "City of company's headquarter.",
            "type": "string"
          },
          "country": {
            "description": "Country of company's headquarter.",
            "type": "string"
          },
          "currency": {
            "description": "Currency used in company filings and financials.",
            "type": "string"
          },
          "cusip": {
            "description": "CUSIP number.",
            "type": "string"
          },
          "description": {
            "description": "Company business summary.",
            "type": "string"
          },
          "employeeTotal": {
            "description": "Number of employee.",
            "format": "float",
            "type": "number"
          },
          "estimateCurrency": {
            "description": "Currency used in Estimates data.",
            "type": "string"
          },
          "exchange": {
            "description": "Listed exchange.",
            "type": "string"
          },
          "finnhubIndustry": {
            "description": "Finnhub industry classification.",
            "type": "string"
          },
          "ggroup": {
            "description": "Industry group.",
            "type": "string"
          },
          "gind": {
            "description": "Industry.",
            "type": "string"
          },
          "gsector": {
            "description": "Sector.",
            "type": "string"
          },
          "gsubind": {
            "description": "Sub-industry.",
            "type": "string"
          },
          "ipo": {
            "description": "IPO date.",
            "format": "date",
            "type": "string"
          },
          "irUrl": {
            "description": "Investor relations website.",
            "type": "string"
          },
          "isin": {
            "description": "ISIN number.",
            "type": "string"
          },
          "lei": {
            "description": "LEI number.",
            "type": "string"
          },
          "logo": {
            "description": "Logo image.",
            "type": "string"
          },
          "marketCapCurrency": {
            "description": "Currency used in market capitalization.",
            "type": "string"
          },
          "marketCapitalization": {
            "description": "Market Capitalization.",
            "format": "float",
            "type": "number"
          },
          "naics": {
            "description": "NAICS industry.",
            "type": "string"
          },
          "naicsNationalIndustry": {
            "description": "NAICS national industry.",
            "type": "string"
          },
          "naicsSector": {
            "description": "NAICS sector.",
            "type": "string"
          },
          "naicsSubsector": {
            "description": "NAICS subsector.",
            "type": "string"
          },
          "name": {
            "description": "Company name.",
            "type": "string"
          },
          "phone": {
            "description": "Company phone number.",
            "type": "string"
          },
          "sedol": {
            "description": "Sedol number.",
            "type": "string"
          },
          "shareOutstanding": {
            "description": "Number of oustanding shares.",
            "format": "float",
            "type": "number"
          },
          "state": {
            "description": "State of company's headquarter.",
            "type": "string"
          },
          "ticker": {
            "description": "Company symbol/ticker as used on the listed exchange.",
            "type": "string"
          },
          "weburl": {
            "description": "Company website.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyProfile2": {
        "properties": {
          "country": {
            "description": "Country of company's headquarter.",
            "type": "string"
          },
          "currency": {
            "description": "Currency used in company filings.",
            "type": "string"
          },
          "exchange": {
            "description": "Listed exchange.",
            "type": "string"
          },
          "finnhubIndustry": {
            "description": "Finnhub industry classification.",
            "type": "string"
          },
          "ipo": {
            "description": "IPO date.",
            "format": "date",
            "type": "string"
          },
          "logo": {
            "description": "Logo image.",
            "type": "string"
          },
          "marketCapitalization": {
            "description": "Market Capitalization.",
            "format": "float",
            "type": "number"
          },
          "name": {
            "description": "Company name.",
            "type": "string"
          },
          "phone": {
            "description": "Company phone number.",
            "type": "string"
          },
          "shareOutstanding": {
            "description": "Number of oustanding shares.",
            "format": "float",
            "type": "number"
          },
          "ticker": {
            "description": "Company symbol/ticker as used on the listed exchange.",
            "type": "string"
          },
          "weburl": {
            "description": "Company website.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CongressionalTrading": {
        "properties": {
          "data": {
            "description": "Array of stock trades.",
            "items": {
              "$ref": "#/components/schemas/CongressionalTransaction"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CongressionalTransaction": {
        "properties": {
          "amountFrom": {
            "description": "Transaction amount from.",
            "format": "float",
            "type": "number"
          },
          "amountTo": {
            "description": "Transaction amount to.",
            "format": "float",
            "type": "number"
          },
          "assetName": {
            "description": "Asset name.",
            "type": "string"
          },
          "filingDate": {
            "description": "Filing date.",
            "type": "string"
          },
          "name": {
            "description": "Name of the representative.",
            "type": "string"
          },
          "ownerType": {
            "description": "Owner Type.",
            "type": "string"
          },
          "position": {
            "description": "Position.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "transactionDate": {
            "description": "Transaction date.",
            "type": "string"
          },
          "transactionType": {
            "description": "Transaction type <code>Sale</code> or <code>Purchase</code>.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountryMetadata": {
        "properties": {
          "code2": {
            "description": "Alpha 2 code",
            "type": "string"
          },
          "code3": {
            "description": "Alpha 3 code",
            "type": "string"
          },
          "codeNo": {
            "description": "UN code",
            "type": "string"
          },
          "country": {
            "description": "Country name",
            "type": "string"
          },
          "countryRiskPremium": {
            "description": "Country risk premium",
            "format": "float",
            "type": "number"
          },
          "currency": {
            "description": "Currency name",
            "type": "string"
          },
          "currencyCode": {
            "description": "Currency code",
            "type": "string"
          },
          "defaultSpread": {
            "description": "Default spread",
            "format": "float",
            "type": "number"
          },
          "equityRiskPremium": {
            "description": "Equity risk premium",
            "format": "float",
            "type": "number"
          },
          "rating": {
            "description": "Moody's credit risk rating.",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "type": "string"
          },
          "subRegion": {
            "description": "Sub-Region",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CovidInfo": {
        "properties": {
          "case": {
            "description": "Number of confirmed cases.",
            "format": "float",
            "type": "number"
          },
          "death": {
            "description": "Number of confirmed deaths.",
            "format": "float",
            "type": "number"
          },
          "state": {
            "description": "State.",
            "type": "string"
          },
          "updated": {
            "description": "Updated time.",
            "formatIgnore": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CryptoCandles": {
        "properties": {
          "c": {
            "description": "List of close prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "h": {
            "description": "List of high prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "l": {
            "description": "List of low prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "o": {
            "description": "List of open prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "s": {
            "description": "Status of the response. This field can either be ok or no_data.",
            "type": "string"
          },
          "t": {
            "description": "List of timestamp for returned candles.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "v": {
            "description": "List of volume data for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CryptoProfile": {
        "properties": {
          "circulatingSupply": {
            "description": "Circulating supply.",
            "format": "float",
            "type": "number"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "launchDate": {
            "description": "Launch date.",
            "type": "string"
          },
          "logo": {
            "description": "Logo image.",
            "type": "string"
          },
          "longName": {
            "description": "Long name.",
            "type": "string"
          },
          "marketCap": {
            "description": "Market capitalization.",
            "format": "float",
            "type": "number"
          },
          "maxSupply": {
            "description": "Max supply.",
            "format": "float",
            "type": "number"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "proofType": {
            "description": "Proof type.",
            "type": "string"
          },
          "totalSupply": {
            "description": "Total supply.",
            "format": "float",
            "type": "number"
          },
          "website": {
            "description": "Project's website.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CryptoSymbol": {
        "properties": {
          "description": {
            "description": "Symbol description",
            "type": "string"
          },
          "displaySymbol": {
            "description": "Display symbol name.",
            "type": "string"
          },
          "symbol": {
            "description": "Unique symbol used to identify this symbol used in <code>/crypto/candle</code> endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Development": {
        "properties": {
          "datetime": {
            "description": "Published time in <code>YYYY-MM-DD HH:MM:SS</code> format.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Development description.",
            "type": "string"
          },
          "headline": {
            "description": "Development headline.",
            "type": "string"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          },
          "url": {
            "description": "URL.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dividends": {
        "properties": {
          "adjustedAmount": {
            "description": "Adjusted dividend.",
            "format": "float",
            "type": "number"
          },
          "amount": {
            "description": "Amount in local currency.",
            "format": "float",
            "type": "number"
          },
          "currency": {
            "description": "Currency.",
            "type": "string"
          },
          "date": {
            "description": "Ex-Dividend date.",
            "format": "date",
            "type": "string"
          },
          "declarationDate": {
            "description": "Declaration date.",
            "format": "date",
            "type": "string"
          },
          "freq": {
            "description": "<p>Dividend frequency. Can be 1 of the following values:</p><ul>\n<li><code>0: Annually</code></li>\n<li><code>1: Monthly</code></li>\n<li><code>2: Quarterly</code></li>\n<li><code>3: Semi-annually</code></li>\n<li><code>4: Other/Unknown</code></li>\n<li><code>5: Bimonthly</code></li>\n<li><code>6: Trimesterly</code></li>\n<li><code>7: Weekly</code></li>\n</ul>",
            "type": "string"
          },
          "payDate": {
            "description": "Pay date.",
            "format": "date",
            "type": "string"
          },
          "recordDate": {
            "description": "Record date.",
            "format": "date",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dividends2": {
        "properties": {
          "data": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/Dividends2Info"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dividends2Info": {
        "properties": {
          "amount": {
            "description": "Amount in local currency.",
            "format": "float",
            "type": "number"
          },
          "exDate": {
            "description": "Ex-Dividend date.",
            "format": "date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentResponse": {
        "properties": {
          "documentId": {
            "description": "AlphaResearch internal document id.",
            "type": "string"
          },
          "excerpts": {
            "description": "Highlighted excerpts for this document",
            "items": {
              "$ref": "#/components/schemas/ExcerptResponse"
            },
            "type": "array"
          },
          "format": {
            "description": "Format of this document (can be html or pdf)",
            "type": "string"
          },
          "hits": {
            "description": "Number of hit in this document",
            "type": "string"
          },
          "title": {
            "description": "Title for this document.",
            "type": "string"
          },
          "url": {
            "description": "Link to render this document",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ETFCountryExposureData": {
        "properties": {
          "country": {
            "description": "Country",
            "type": "string"
          },
          "exposure": {
            "description": "Percent of exposure.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ETFHoldingsData": {
        "properties": {
          "assetType": {
            "description": "Asset type. Can be 1 of the following values: <code>Equity</code>, <code>ETP</code>, <code>Fund</code>, <code>Bond</code>, <code>Other</code> or empty.",
            "type": "string"
          },
          "cusip": {
            "description": "CUSIP.",
            "type": "string"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          },
          "name": {
            "description": "Security name",
            "type": "string"
          },
          "percent": {
            "description": "Portfolio's percent",
            "format": "float",
            "type": "number"
          },
          "share": {
            "description": "Number of shares owned by the ETF.",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "Symbol description",
            "type": "string"
          },
          "value": {
            "description": "Market value",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ETFProfileData": {
        "properties": {
          "assetClass": {
            "description": "Asset Class.",
            "type": "string"
          },
          "aum": {
            "description": "AUM.",
            "format": "float",
            "type": "number"
          },
          "avgVolume": {
            "description": "30-day average volume.",
            "format": "float",
            "type": "number"
          },
          "cusip": {
            "description": "CUSIP.",
            "type": "string"
          },
          "description": {
            "description": "ETF's description.",
            "type": "string"
          },
          "dividendYield": {
            "description": "Dividend yield.",
            "format": "float",
            "type": "number"
          },
          "domicile": {
            "description": "ETF domicile.",
            "type": "string"
          },
          "etfCompany": {
            "description": "ETF issuer.",
            "type": "string"
          },
          "expenseRatio": {
            "description": "Expense ratio. For non-US funds, this is the <a href=\"https://www.esma.europa.eu/sites/default/files/library/2015/11/09_1028_final_kid_ongoing_charges_methodology_for_publication_u_2_.pdf\" target=\"_blank\">KID ongoing charges<a/>.",
            "format": "float",
            "type": "number"
          },
          "inceptionDate": {
            "description": "Inception date.",
            "format": "date",
            "type": "string"
          },
          "investmentSegment": {
            "description": "Investment Segment.",
            "type": "string"
          },
          "isInverse": {
            "description": "Whether the ETF is inverse",
            "type": "boolean"
          },
          "isLeveraged": {
            "description": "Whether the ETF is leveraged",
            "type": "boolean"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          },
          "leverageFactor": {
            "description": "Leverage factor.",
            "format": "float",
            "type": "number"
          },
          "logo": {
            "description": "Logo.",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "nav": {
            "description": "NAV.",
            "format": "float",
            "type": "number"
          },
          "navCurrency": {
            "description": "NAV currency.",
            "type": "string"
          },
          "priceToBook": {
            "description": "P/B.",
            "format": "float",
            "type": "number"
          },
          "priceToEarnings": {
            "description": "P/E.",
            "format": "float",
            "type": "number"
          },
          "trackingIndex": {
            "description": "Tracking Index.",
            "type": "string"
          },
          "website": {
            "description": "ETF's website.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ETFSectorExposureData": {
        "properties": {
          "exposure": {
            "description": "Percent of exposure.",
            "format": "float",
            "type": "number"
          },
          "industry": {
            "description": "Industry",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ETFsCountryExposure": {
        "properties": {
          "countryExposure": {
            "description": "Array of countries and and exposure levels.",
            "items": {
              "$ref": "#/components/schemas/ETFCountryExposureData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "ETF symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ETFsHoldings": {
        "properties": {
          "atDate": {
            "description": "Holdings update date.",
            "format": "date",
            "type": "string"
          },
          "holdings": {
            "description": "Array of holdings.",
            "items": {
              "$ref": "#/components/schemas/ETFHoldingsData"
            },
            "type": "array"
          },
          "numberOfHoldings": {
            "description": "Number of holdings.",
            "format": "int64",
            "type": "integer"
          },
          "symbol": {
            "description": "ETF symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ETFsProfile": {
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/ETFProfileData",
            "description": "Profile data.",
            "type": "object"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ETFsSectorExposure": {
        "properties": {
          "sectorExposure": {
            "description": "Array of industries and exposure levels.",
            "items": {
              "$ref": "#/components/schemas/ETFSectorExposureData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "ETF symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EarningRelease": {
        "properties": {
          "date": {
            "description": "Date.",
            "format": "date",
            "type": "string"
          },
          "epsActual": {
            "description": "EPS actual.",
            "format": "float",
            "type": "number"
          },
          "epsEstimate": {
            "description": "EPS estimate.",
            "format": "float",
            "type": "number"
          },
          "hour": {
            "description": "Indicates whether the earnings is announced before market open(<code>bmo</code>), after market close(<code>amc</code>), or during market hour(<code>dmh</code>).",
            "type": "string"
          },
          "quarter": {
            "description": "Earnings quarter.",
            "format": "int64",
            "type": "integer"
          },
          "revenueActual": {
            "description": "Revenue actual.",
            "format": "float",
            "type": "number"
          },
          "revenueEstimate": {
            "description": "Revenue estimate including Finnhub's proprietary estimates.",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "year": {
            "description": "Earnings year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EarningResult": {
        "properties": {
          "actual": {
            "description": "Actual earning result.",
            "format": "float",
            "type": "number"
          },
          "estimate": {
            "description": "Estimated earning.",
            "format": "float",
            "type": "number"
          },
          "period": {
            "description": "Reported period.",
            "format": "date",
            "type": "string"
          },
          "quarter": {
            "description": "Fiscal quarter.",
            "format": "int64",
            "type": "integer"
          },
          "surprise": {
            "description": "Surprise - The difference between actual and estimate.",
            "format": "float",
            "type": "number"
          },
          "surprisePercent": {
            "description": "Surprise percent.",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          },
          "year": {
            "description": "Fiscal year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EarningsCalendar": {
        "properties": {
          "earningsCalendar": {
            "description": "Array of earnings release.",
            "items": {
              "$ref": "#/components/schemas/EarningRelease"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EarningsCallLive": {
        "properties": {
          "event": {
            "description": "Array of earnings call events that support live streaming.",
            "items": {
              "$ref": "#/components/schemas/EarningsCallLiveResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EarningsCallLiveResult": {
        "properties": {
          "event": {
            "description": "Event name.",
            "type": "string"
          },
          "liveAudio": {
            "description": "Live audio streaming file.",
            "type": "string"
          },
          "quarter": {
            "description": "Earnings quarter.",
            "format": "int64",
            "type": "integer"
          },
          "recording": {
            "description": "Recoding in mp3 format.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "time": {
            "description": "Date time in UTC.",
            "format": "datetime",
            "type": "string"
          },
          "year": {
            "description": "Earnings year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EarningsCallTranscripts": {
        "properties": {
          "audio": {
            "description": "Audio link.",
            "type": "string"
          },
          "id": {
            "description": "Transcript's ID.",
            "type": "string"
          },
          "participant": {
            "description": "Participant list",
            "items": {
              "$ref": "#/components/schemas/TranscriptParticipant"
            },
            "type": "array"
          },
          "quarter": {
            "description": "Quarter of earnings result in the case of earnings call transcript.",
            "format": "int64",
            "type": "integer"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          },
          "time": {
            "description": "Time of the event.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "title": {
            "description": "Title.",
            "type": "string"
          },
          "transcript": {
            "description": "Transcript content.",
            "items": {
              "$ref": "#/components/schemas/TranscriptContent"
            },
            "type": "array"
          },
          "year": {
            "description": "Year of earnings result in the case of earnings call transcript.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EarningsCallTranscriptsList": {
        "properties": {
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          },
          "transcripts": {
            "description": "Array of transcripts' metadata",
            "items": {
              "$ref": "#/components/schemas/StockTranscripts"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EarningsEstimates": {
        "properties": {
          "data": {
            "description": "List of estimates",
            "items": {
              "$ref": "#/components/schemas/EarningsEstimatesInfo"
            },
            "type": "array"
          },
          "freq": {
            "description": "Frequency: annual or quarterly.",
            "type": "string"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EarningsEstimatesInfo": {
        "properties": {
          "epsAvg": {
            "description": "Average EPS estimates including Finnhub's proprietary estimates.",
            "format": "float",
            "type": "number"
          },
          "epsHigh": {
            "description": "Highest estimate.",
            "format": "float",
            "type": "number"
          },
          "epsLow": {
            "description": "Lowest estimate.",
            "format": "float",
            "type": "number"
          },
          "numberAnalysts": {
            "description": "Number of Analysts.",
            "format": "int64",
            "type": "integer"
          },
          "period": {
            "description": "Period.",
            "format": "date",
            "type": "string"
          },
          "quarter": {
            "description": "Fiscal quarter.",
            "format": "int64",
            "type": "integer"
          },
          "year": {
            "description": "Fiscal year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EbitEstimates": {
        "properties": {
          "data": {
            "description": "List of estimates",
            "items": {
              "$ref": "#/components/schemas/EbitEstimatesInfo"
            },
            "type": "array"
          },
          "freq": {
            "description": "Frequency: annual or quarterly.",
            "type": "string"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EbitEstimatesInfo": {
        "properties": {
          "ebitAvg": {
            "description": "Average EBIT estimates including Finnhub's proprietary estimates.",
            "format": "float",
            "type": "number"
          },
          "ebitHigh": {
            "description": "Highest estimate.",
            "format": "float",
            "type": "number"
          },
          "ebitLow": {
            "description": "Lowest estimate.",
            "format": "float",
            "type": "number"
          },
          "numberAnalysts": {
            "description": "Number of Analysts.",
            "format": "int64",
            "type": "integer"
          },
          "period": {
            "description": "Period.",
            "format": "date",
            "type": "string"
          },
          "quarter": {
            "description": "Fiscal quarter.",
            "format": "int64",
            "type": "integer"
          },
          "year": {
            "description": "Fiscal year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EbitdaEstimates": {
        "properties": {
          "data": {
            "description": "List of estimates",
            "items": {
              "$ref": "#/components/schemas/EbitdaEstimatesInfo"
            },
            "type": "array"
          },
          "freq": {
            "description": "Frequency: annual or quarterly.",
            "type": "string"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EbitdaEstimatesInfo": {
        "properties": {
          "ebitdaAvg": {
            "description": "Average EBITDA estimates including Finnhub's proprietary estimates.",
            "format": "float",
            "type": "number"
          },
          "ebitdaHigh": {
            "description": "Highest estimate.",
            "format": "float",
            "type": "number"
          },
          "ebitdaLow": {
            "description": "Lowest estimate.",
            "format": "float",
            "type": "number"
          },
          "numberAnalysts": {
            "description": "Number of Analysts.",
            "format": "int64",
            "type": "integer"
          },
          "period": {
            "description": "Period.",
            "format": "date",
            "type": "string"
          },
          "quarter": {
            "description": "Fiscal quarter.",
            "format": "int64",
            "type": "integer"
          },
          "year": {
            "description": "Fiscal year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EconomicCalendar": {
        "properties": {
          "economicCalendar": {
            "description": "Array of economic events.",
            "items": {
              "$ref": "#/components/schemas/Economic_event"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EconomicCode": {
        "properties": {
          "code": {
            "description": "Finnhub economic code used to get historical data",
            "type": "string"
          },
          "country": {
            "description": "Country",
            "type": "string"
          },
          "name": {
            "description": "Indicator name",
            "type": "string"
          },
          "unit": {
            "description": "Unit",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EconomicData": {
        "properties": {
          "code": {
            "description": "Finnhub economic code",
            "type": "string"
          },
          "data": {
            "description": "Array of economic data for requested code.",
            "items": {
              "$ref": "#/components/schemas/EconomicDataInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EconomicDataInfo": {
        "properties": {
          "date": {
            "description": "Date of the reading",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Economic_event": {
        "properties": {
          "actual": {
            "description": "Actual release",
            "format": "float",
            "type": "number"
          },
          "country": {
            "description": "Country",
            "type": "string"
          },
          "estimate": {
            "description": "Estimate",
            "format": "float",
            "type": "number"
          },
          "event": {
            "description": "Event",
            "type": "string"
          },
          "impact": {
            "description": "Impact level",
            "type": "string"
          },
          "prev": {
            "description": "Previous release",
            "format": "float",
            "type": "number"
          },
          "time": {
            "description": "Release time",
            "type": "string"
          },
          "unit": {
            "description": "Unit",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmployeeCount": {
        "properties": {
          "atDate": {
            "description": "Date of the reading",
            "type": "string"
          },
          "employee": {
            "description": "Value",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ExcerptResponse": {
        "properties": {
          "content": {
            "description": "Highlighted content",
            "type": "string"
          },
          "endOffset": {
            "description": "End offset of highlighted content",
            "type": "string"
          },
          "snippetId": {
            "description": "Location of the content in the rendered document",
            "type": "string"
          },
          "startOffset": {
            "description": "Start offset of highlighted content",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FDAComitteeMeeting": {
        "properties": {
          "eventDescription": {
            "description": "Event's description.",
            "type": "string"
          },
          "fromDate": {
            "description": "Start time of the event in EST.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "toDate": {
            "description": "End time of the event in EST.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "url": {
            "description": "URL.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Filing": {
        "properties": {
          "acceptedDate": {
            "description": "Accepted date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "accessNumber": {
            "description": "Access number.",
            "type": "string"
          },
          "cik": {
            "description": "CIK.",
            "type": "string"
          },
          "filedDate": {
            "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "filingUrl": {
            "description": "Filing's URL.",
            "type": "string"
          },
          "form": {
            "description": "Form type.",
            "type": "string"
          },
          "reportUrl": {
            "description": "Report's URL.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FilingResponse": {
        "properties": {
          "acceptanceDate": {
            "description": "Date the filing is submitted.",
            "type": "string"
          },
          "amend": {
            "description": "Amendment",
            "type": "boolean"
          },
          "documentCount": {
            "description": "Number of document in this filing",
            "type": "integer"
          },
          "filedDate": {
            "description": "Date the filing is made available to the public",
            "type": "string"
          },
          "filerId": {
            "description": "Id of the entity submitted the filing",
            "type": "string"
          },
          "filingId": {
            "description": "Filing Id in Alpharesearch platform",
            "type": "string"
          },
          "form": {
            "description": "Filing Form",
            "type": "string"
          },
          "name": {
            "description": "Filer name",
            "type": "string"
          },
          "pageCount": {
            "description": "Estimate number of page when printing",
            "type": "integer"
          },
          "reportDate": {
            "description": "Date as which the filing is reported",
            "type": "string"
          },
          "source": {
            "description": "Filing Source",
            "type": "string"
          },
          "symbol": {
            "description": "List of symbol associate with this filing"
          },
          "title": {
            "description": "Filing title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FilingSentiment": {
        "properties": {
          "constraining": {
            "description": "% of constraining words in the filing.",
            "format": "float",
            "type": "number"
          },
          "litigious": {
            "description": "% of litigious words in the filing.",
            "format": "float",
            "type": "number"
          },
          "modal-moderate": {
            "description": "% of modal-moderate words in the filing.",
            "format": "float",
            "type": "number"
          },
          "modal-strong": {
            "description": "% of modal-strong words in the filing.",
            "format": "float",
            "type": "number"
          },
          "modal-weak": {
            "description": "% of modal-weak words in the filing.",
            "format": "float",
            "type": "number"
          },
          "negative": {
            "description": "% of negative words in the filing.",
            "format": "float",
            "type": "number"
          },
          "polarity": {
            "description": "% of polarity words in the filing.",
            "format": "float",
            "type": "number"
          },
          "positive": {
            "description": "% of positive words in the filing.",
            "format": "float",
            "type": "number"
          },
          "uncertainty": {
            "description": "% of uncertainty words in the filing.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "FinancialMap": {
        "type": "object"
      },
      "FinancialStatements": {
        "properties": {
          "financials": {
            "description": "An array of map of key, value pairs containing the data for each period.",
            "items": {
              "$ref": "#/components/schemas/FinancialMap"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FinancialsAsReported": {
        "properties": {
          "cik": {
            "description": "CIK",
            "type": "string"
          },
          "data": {
            "description": "Array of filings.",
            "items": {
              "$ref": "#/components/schemas/Report"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForexCandles": {
        "properties": {
          "c": {
            "description": "List of close prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "h": {
            "description": "List of high prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "l": {
            "description": "List of low prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "o": {
            "description": "List of open prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "s": {
            "description": "Status of the response. This field can either be ok or no_data.",
            "type": "string"
          },
          "t": {
            "description": "List of timestamp for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "v": {
            "description": "List of volume data for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ForexRate": {
        "type": "object"
      },
      "ForexSymbol": {
        "properties": {
          "description": {
            "description": "Symbol description",
            "type": "string"
          },
          "displaySymbol": {
            "description": "Display symbol name.",
            "type": "string"
          },
          "symbol": {
            "description": "Unique symbol used to identify this symbol used in <code>/forex/candle</code> endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Forexrates": {
        "properties": {
          "base": {
            "description": "Base currency.",
            "type": "string"
          },
          "quote": {
            "$ref": "#/components/schemas/ForexRate",
            "description": "A map of base/quote rates for all currency pair.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "FundOwnership": {
        "properties": {
          "ownership": {
            "description": "Array of investors with detailed information about their holdings.",
            "items": {
              "$ref": "#/components/schemas/FundOwnershipInfo"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FundOwnershipInfo": {
        "properties": {
          "change": {
            "description": "Number of share changed (net buy or sell) from the last period.",
            "format": "int64",
            "type": "integer"
          },
          "filingDate": {
            "description": "Filing date.",
            "format": "date",
            "type": "string"
          },
          "name": {
            "description": "Investor's name.",
            "type": "string"
          },
          "portfolioPercent": {
            "description": "Percent of the fund's portfolio comprised of the company's share.",
            "format": "float",
            "type": "number"
          },
          "share": {
            "description": "Number of shares held by the investor.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "HistoricalCompanyESG": {
        "properties": {
          "data": {
            "description": "Historical ESG data points.",
            "items": {
              "$ref": "#/components/schemas/CompanyESG2"
            },
            "type": "array"
          },
          "symbol": {
            "description": "symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HistoricalEmployeeCount": {
        "properties": {
          "data": {
            "description": "Array of market data.",
            "items": {
              "$ref": "#/components/schemas/EmployeeCount"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HistoricalMarketCapData": {
        "properties": {
          "currency": {
            "description": "Currency",
            "type": "string"
          },
          "data": {
            "description": "Array of market data.",
            "items": {
              "$ref": "#/components/schemas/MarketCapData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HistoricalNBBO": {
        "properties": {
          "a": {
            "description": "List of Ask price data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "av": {
            "description": "List of Ask volume data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "ax": {
            "description": "List of venues/exchanges - Ask price. A list of exchange codes can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",>here</a>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "b": {
            "description": "List of Bid price data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "bv": {
            "description": "List of Bid volume data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "bx": {
            "description": "List of venues/exchanges - Bid price. A list of exchange codes can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",>here</a>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "c": {
            "description": "List of quote conditions. A comprehensive list of quote conditions code can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1iiA6e7Osdtai0oPMOUzgAIKXCsay89dFDmsegz6OpEg/edit?usp=sharing\">here</a>",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          "count": {
            "description": "Number of ticks returned. If <code>count</code> < <code>limit</code>, all data for that date has been returned.",
            "format": "int64",
            "type": "integer"
          },
          "s": {
            "description": "Symbol.",
            "type": "string"
          },
          "skip": {
            "description": "Number of ticks skipped.",
            "format": "int64",
            "type": "integer"
          },
          "t": {
            "description": "List of timestamp in UNIX ms.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "total": {
            "description": "Total number of ticks for that date.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IPOCalendar": {
        "properties": {
          "ipoCalendar": {
            "description": "Array of IPO events.",
            "items": {
              "$ref": "#/components/schemas/IPOEvent"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IPOEvent": {
        "properties": {
          "date": {
            "description": "IPO date.",
            "format": "date",
            "type": "string"
          },
          "exchange": {
            "description": "Exchange.",
            "type": "string"
          },
          "name": {
            "description": "Company's name.",
            "type": "string"
          },
          "numberOfShares": {
            "description": "Number of shares offered during the IPO.",
            "format": "float",
            "type": "number"
          },
          "price": {
            "description": "Projected price or price range.",
            "type": "string"
          },
          "status": {
            "description": "IPO status. Can take 1 of the following values: <code>expected</code>,<code>priced</code>,<code>withdrawn</code>,<code>filed</code>",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "totalSharesValue": {
            "description": "Total shares value.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "InFilingResponse": {
        "properties": {
          "acceptanceDate": {
            "description": "Date the filing is submitted.",
            "type": "string"
          },
          "amend": {
            "description": "Amendment",
            "type": "boolean"
          },
          "documentCount": {
            "description": "Number of document in this filing",
            "type": "integer"
          },
          "documents": {
            "description": "Document for this filing.",
            "items": {
              "$ref": "#/components/schemas/DocumentResponse"
            },
            "type": "array"
          },
          "filedDate": {
            "description": "Date the filing is make available to the public",
            "type": "string"
          },
          "filerId": {
            "description": "Id of the entity submitted the filing",
            "type": "string"
          },
          "filingId": {
            "description": "Filing Id in Alpharesearch platform",
            "type": "string"
          },
          "form": {
            "description": "Filing Form",
            "type": "string"
          },
          "name": {
            "description": "Filer name",
            "type": "string"
          },
          "pageCount": {
            "description": "Estimate number of page when printing",
            "type": "integer"
          },
          "reportDate": {
            "description": "Date as which the filing is reported",
            "type": "string"
          },
          "source": {
            "description": "Filing Source",
            "type": "string"
          },
          "symbol": {
            "description": "List of symbol associate with this filing"
          },
          "title": {
            "description": "Filing title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InFilingSearchBody": {
        "properties": {
          "filingId": {
            "description": "Filing Id to search",
            "type": "string"
          },
          "query": {
            "description": "Search query",
            "type": "string"
          }
        },
        "required": [
          "query",
          "filingId"
        ],
        "type": "object"
      },
      "IndexHistoricalConstituent": {
        "properties": {
          "action": {
            "description": "<code>add</code> or <code>remove</code>.",
            "type": "string"
          },
          "date": {
            "description": "Date of joining or leaving the index.",
            "format": "date",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Indicator": {
        "properties": {
          "buy": {
            "description": "Number of buy signals",
            "format": "int64",
            "type": "integer"
          },
          "neutral": {
            "description": "Number of neutral signals",
            "format": "int64",
            "type": "integer"
          },
          "sell": {
            "description": "Number of sell signals",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IndicatorFields": {
        "type": "object"
      },
      "IndicesConstituents": {
        "properties": {
          "constituents": {
            "description": "Array of constituents.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "constituentsBreakdown": {
            "description": "Array of constituents' details.",
            "items": {
              "$ref": "#/components/schemas/IndicesConstituentsBreakdown"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Index's symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IndicesConstituentsBreakdown": {
        "properties": {
          "cusip": {
            "description": "Cusip.",
            "type": "string"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "shareClassFIGI": {
            "description": "Global Share Class FIGI.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "weight": {
            "description": "Weight.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "IndicesHistoricalConstituents": {
        "properties": {
          "historicalConstituents": {
            "description": "Array of historical constituents.",
            "items": {
              "$ref": "#/components/schemas/IndexHistoricalConstituent"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Index's symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InsiderSentiments": {
        "properties": {
          "data": {
            "description": "Array of sentiment data.",
            "items": {
              "$ref": "#/components/schemas/InsiderSentimentsData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InsiderSentimentsData": {
        "properties": {
          "change": {
            "description": "Net buying/selling from all insiders' transactions.",
            "format": "int64",
            "type": "integer"
          },
          "month": {
            "description": "Month.",
            "format": "int64",
            "type": "integer"
          },
          "mspr": {
            "description": "Monthly share purchase ratio.",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "year": {
            "description": "Year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InsiderTransactions": {
        "properties": {
          "data": {
            "description": "Array of insider transactions.",
            "items": {
              "$ref": "#/components/schemas/Transactions"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalOwnership": {
        "properties": {
          "cusip": {
            "description": "Cusip.",
            "type": "string"
          },
          "data": {
            "description": "Array of institutional investors.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalOwnershipGroup"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalOwnershipGroup": {
        "properties": {
          "ownership": {
            "description": "Array of institutional investors.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalOwnershipInfo"
            },
            "type": "array"
          },
          "reportDate": {
            "description": "Report date.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalOwnershipInfo": {
        "properties": {
          "change": {
            "description": "Number of shares change.",
            "format": "float",
            "type": "number"
          },
          "cik": {
            "description": "Investor's company CIK.",
            "type": "string"
          },
          "name": {
            "description": "Firm's name.",
            "type": "string"
          },
          "noVoting": {
            "description": "Number of shares with no voting rights.",
            "format": "float",
            "type": "number"
          },
          "percentage": {
            "description": "Percentage of portfolio.",
            "format": "float",
            "type": "number"
          },
          "putCall": {
            "description": "<code>put</code> or <code>call</code> for options.",
            "type": "string"
          },
          "share": {
            "description": "News score.",
            "format": "float",
            "type": "number"
          },
          "sharedVoting": {
            "description": "Number of shares with shared voting rights.",
            "format": "float",
            "type": "number"
          },
          "soleVoting": {
            "description": "Number of shares with sole voting rights.",
            "format": "float",
            "type": "number"
          },
          "value": {
            "description": "Position value.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "InstitutionalPortfolio": {
        "properties": {
          "cik": {
            "description": "CIK.",
            "type": "string"
          },
          "data": {
            "description": "Array of positions.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalPortfolioGroup"
            },
            "type": "array"
          },
          "name": {
            "description": "Investor's name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalPortfolioGroup": {
        "properties": {
          "filingDate": {
            "description": "Filing date.",
            "type": "string"
          },
          "portfolio": {
            "description": "Array of positions.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalPortfolioInfo"
            },
            "type": "array"
          },
          "reportDate": {
            "description": "Report date.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalPortfolioInfo": {
        "properties": {
          "change": {
            "description": "Number of shares change.",
            "format": "float",
            "type": "number"
          },
          "cusip": {
            "description": "CUSIP.",
            "type": "string"
          },
          "name": {
            "description": "Position's name.",
            "type": "string"
          },
          "noVoting": {
            "description": "Number of shares with no voting rights.",
            "format": "float",
            "type": "number"
          },
          "percentage": {
            "description": "Percentage of portfolio.",
            "format": "float",
            "type": "number"
          },
          "putCall": {
            "description": "<code>put</code> or <code>call</code> for options.",
            "type": "string"
          },
          "share": {
            "description": "Number of shares.",
            "format": "float",
            "type": "number"
          },
          "sharedVoting": {
            "description": "Number of shares with shared voting rights.",
            "format": "float",
            "type": "number"
          },
          "soleVoting": {
            "description": "Number of shares with sole voting rights.",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "value": {
            "description": "Position value.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "InstitutionalProfile": {
        "properties": {
          "cik": {
            "description": "CIK.",
            "type": "string"
          },
          "data": {
            "description": "Array of investors.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalProfileInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstitutionalProfileInfo": {
        "properties": {
          "cik": {
            "description": "Investor's company CIK.",
            "type": "string"
          },
          "firmType": {
            "description": "Firm type.",
            "type": "string"
          },
          "manager": {
            "description": "Manager.",
            "type": "string"
          },
          "philosophy": {
            "description": "Investing philosophy.",
            "type": "string"
          },
          "profile": {
            "description": "Profile info.",
            "type": "string"
          },
          "profileImg": {
            "description": "Profile image.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InternationalFiling": {
        "properties": {
          "category": {
            "description": "Category.",
            "type": "string"
          },
          "companyName": {
            "description": "Company name.",
            "type": "string"
          },
          "country": {
            "description": "Country.",
            "type": "string"
          },
          "description": {
            "description": "Document's description.",
            "type": "string"
          },
          "filedDate": {
            "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "language": {
            "description": "Language.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "title": {
            "description": "Document's title.",
            "type": "string"
          },
          "url": {
            "description": "Url.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvestmentThemePortfolio": {
        "properties": {
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvestmentThemes": {
        "properties": {
          "data": {
            "description": "Investment theme portfolio.",
            "items": {
              "$ref": "#/components/schemas/InvestmentThemePortfolio"
            },
            "type": "array"
          },
          "theme": {
            "description": "Investment theme",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IsinChange": {
        "properties": {
          "data": {
            "description": "Array of ISIN change events.",
            "items": {
              "$ref": "#/components/schemas/IsinChangeInfo"
            },
            "type": "array"
          },
          "fromDate": {
            "description": "From date.",
            "type": "string"
          },
          "toDate": {
            "description": "To date.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IsinChangeInfo": {
        "properties": {
          "atDate": {
            "description": "Event's date.",
            "type": "string"
          },
          "newIsin": {
            "description": "New ISIN.",
            "type": "string"
          },
          "oldIsin": {
            "description": "Old ISIN.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyCustomersSuppliers": {
        "properties": {
          "country": {
            "description": "Country",
            "type": "string"
          },
          "customer": {
            "description": "Whether the company is a customer.",
            "type": "boolean"
          },
          "industry": {
            "description": "Industry",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "oneMonthCorrelation": {
            "description": "1-month price correlation",
            "format": "float",
            "type": "number"
          },
          "oneYearCorrelation": {
            "description": "1-year price correlation",
            "format": "float",
            "type": "number"
          },
          "sixMonthCorrelation": {
            "description": "6-month price correlation",
            "format": "float",
            "type": "number"
          },
          "supplier": {
            "description": "Whether the company is a supplier",
            "type": "boolean"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          },
          "threeMonthCorrelation": {
            "description": "3-month price correlation",
            "format": "float",
            "type": "number"
          },
          "twoWeekCorrelation": {
            "description": "2-week price correlation",
            "format": "float",
            "type": "number"
          },
          "twoYearCorrelation": {
            "description": "2-year price correlation",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "LastBid-Ask": {
        "properties": {
          "a": {
            "description": "Ask price.",
            "format": "float",
            "type": "number"
          },
          "av": {
            "description": "Ask volume.",
            "format": "float",
            "type": "number"
          },
          "b": {
            "description": "Bid price.",
            "format": "float",
            "type": "number"
          },
          "bv": {
            "description": "Bid volume.",
            "format": "float",
            "type": "number"
          },
          "t": {
            "description": "Reference UNIX timestamp in ms.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LobbyingData": {
        "properties": {
          "clientId": {
            "description": "Client ID.",
            "type": "string"
          },
          "country": {
            "description": "Country.",
            "type": "string"
          },
          "date": {
            "description": "Date.",
            "type": "string"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "documentUrl": {
            "description": "Document's URL.",
            "type": "string"
          },
          "expenses": {
            "description": "Expenses reported by the company.",
            "format": "float",
            "type": "number"
          },
          "houseregistrantId": {
            "description": "House registrant ID.",
            "type": "string"
          },
          "income": {
            "description": "Income reported by lobbying firms.",
            "format": "float",
            "type": "number"
          },
          "name": {
            "description": "Company's name.",
            "type": "string"
          },
          "period": {
            "description": "Period.",
            "type": "string"
          },
          "postedName": {
            "description": "Posted name.",
            "type": "string"
          },
          "registrantId": {
            "description": "Registrant ID.",
            "type": "string"
          },
          "senateId": {
            "description": "Senate ID.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "year": {
            "description": "Year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LobbyingResult": {
        "properties": {
          "data": {
            "description": "Array of lobbying activities.",
            "items": {
              "$ref": "#/components/schemas/LobbyingData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketCapData": {
        "properties": {
          "atDate": {
            "description": "Date of the reading",
            "type": "string"
          },
          "marketCapitalization": {
            "description": "Value",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MarketHoliday": {
        "properties": {
          "data": {
            "description": "Array of holidays.",
            "items": {
              "$ref": "#/components/schemas/MarketHolidayData"
            },
            "type": "array"
          },
          "exchange": {
            "description": "Exchange.",
            "type": "string"
          },
          "timezone": {
            "description": "Timezone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketHolidayData": {
        "properties": {
          "atDate": {
            "description": "Date.",
            "type": "string"
          },
          "eventName": {
            "description": "Holiday's name.",
            "type": "string"
          },
          "tradingHour": {
            "description": "Trading hours for this day if the market is partially closed only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketNews": {
        "properties": {
          "category": {
            "description": "News category.",
            "type": "string"
          },
          "datetime": {
            "description": "Published time in UNIX timestamp.",
            "format": "int64",
            "type": "integer"
          },
          "headline": {
            "description": "News headline.",
            "type": "string"
          },
          "id": {
            "description": "News ID. This value can be used for <code>minId</code> params to get the latest news only.",
            "format": "int64",
            "type": "integer"
          },
          "image": {
            "description": "Thumbnail image URL.",
            "type": "string"
          },
          "related": {
            "description": "Related stocks and companies mentioned in the article.",
            "type": "string"
          },
          "source": {
            "description": "News source.",
            "type": "string"
          },
          "summary": {
            "description": "News summary.",
            "type": "string"
          },
          "url": {
            "description": "URL of the original article.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketStatus": {
        "properties": {
          "exchange": {
            "description": "Exchange.",
            "type": "string"
          },
          "holiday": {
            "description": "Holiday event.",
            "type": "string"
          },
          "isOpen": {
            "description": "Whether the market is open at the moment.",
            "type": "boolean"
          },
          "session": {
            "description": "Market session. Can be 1 of the following values: <code>pre-market</code>,<code>regular</code>,<code>post-market</code> or <code>null</code> if the market is closed.",
            "type": "string"
          },
          "t": {
            "description": "Current timestamp.",
            "format": "int64",
            "type": "integer"
          },
          "timezone": {
            "description": "Timezone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricMap": {
        "type": "object"
      },
      "MetricSeriesMap": {
        "type": "object"
      },
      "MutualFundCountryExposure": {
        "properties": {
          "countryExposure": {
            "description": "Array of countries and and exposure levels.",
            "items": {
              "$ref": "#/components/schemas/MutualFundCountryExposureData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MutualFundCountryExposureData": {
        "properties": {
          "country": {
            "description": "Country",
            "type": "string"
          },
          "exposure": {
            "description": "Percent of exposure.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MutualFundEet": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MutualFundEetData",
            "description": "EET data.",
            "type": "object"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MutualFundEetData": {
        "type": "object"
      },
      "MutualFundEetPai": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MutualFundEetPaiData",
            "description": "EET data.",
            "type": "object"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MutualFundEetPaiData": {
        "type": "object"
      },
      "MutualFundHoldings": {
        "properties": {
          "atDate": {
            "description": "Holdings update date.",
            "format": "date",
            "type": "string"
          },
          "holdings": {
            "description": "Array of holdings.",
            "items": {
              "$ref": "#/components/schemas/MutualFundHoldingsData"
            },
            "type": "array"
          },
          "numberOfHoldings": {
            "description": "Number of holdings.",
            "format": "int64",
            "type": "integer"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MutualFundHoldingsData": {
        "properties": {
          "assetType": {
            "description": "Asset type. Can be 1 of the following values: <code>Equity</code>, <code>ETP</code>, <code>Fund</code>, <code>Bond</code>, <code>Other</code> or empty.",
            "type": "string"
          },
          "cusip": {
            "description": "CUSIP.",
            "type": "string"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          },
          "name": {
            "description": "Security name",
            "type": "string"
          },
          "percent": {
            "description": "Portfolio's percent",
            "format": "float",
            "type": "number"
          },
          "share": {
            "description": "Number of shares.",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "Symbol description",
            "type": "string"
          },
          "value": {
            "description": "Market value",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MutualFundProfile": {
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/MutualFundProfileData",
            "description": "Profile data.",
            "type": "object"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MutualFundProfileData": {
        "properties": {
          "benchmark": {
            "description": "Index benchmark.",
            "type": "string"
          },
          "beta": {
            "description": "Beta.",
            "format": "float",
            "type": "number"
          },
          "category": {
            "description": "Fund's category.",
            "type": "string"
          },
          "classId": {
            "description": "Class ID.",
            "type": "string"
          },
          "className": {
            "description": "Class name.",
            "type": "string"
          },
          "currency": {
            "description": "Fund's currency",
            "type": "string"
          },
          "cusip": {
            "description": "CUSIP.",
            "type": "string"
          },
          "deferredLoad": {
            "description": "Deferred load.",
            "format": "float",
            "type": "number"
          },
          "description": {
            "description": "Fund's description.",
            "type": "string"
          },
          "expenseRatio": {
            "description": "Expense ratio.",
            "format": "float",
            "type": "number"
          },
          "fee12b1": {
            "description": "12B-1 fee.",
            "format": "float",
            "type": "number"
          },
          "frontLoad": {
            "description": "Front Load.",
            "format": "float",
            "type": "number"
          },
          "fundCompany": {
            "description": "Fund Company.",
            "type": "string"
          },
          "fundFamily": {
            "description": "Fund Family.",
            "type": "string"
          },
          "inceptionDate": {
            "description": "Inception date.",
            "format": "date",
            "type": "string"
          },
          "investmentSegment": {
            "description": "Investment Segment.",
            "type": "string"
          },
          "iraMinInvestment": {
            "description": "IRA minimum investment.",
            "format": "float",
            "type": "number"
          },
          "isin": {
            "description": "ISIN.",
            "type": "string"
          },
          "manager": {
            "description": "Fund's managers.",
            "type": "string"
          },
          "maxRedemptionFee": {
            "description": "Max redemption fee.",
            "format": "float",
            "type": "number"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "seriesId": {
            "description": "Fund's series ID. This field can be used to group multiple share classes into 1 unique fund.",
            "type": "string"
          },
          "seriesName": {
            "description": "Fund's series name.",
            "type": "string"
          },
          "sfdrClassification": {
            "description": "SFDR classification for EU funds. Under the new classifications, a fund's strategy will labeled under either Article 6, 8 or 9. Article 6 covers funds which do not integrate any kind of sustainability into the investment process. Article 8, also known as \u2018environmental and socially promoting\u2019, applies \u201c\u2026 where a financial product promotes, among other characteristics, environmental or social characteristics, or a combination of those characteristics, provided that the companies in which the investments are made follow good governance practices.\u201d. Article 9, also known as \u2018products targeting sustainable investments\u2019, covers products targeting bespoke sustainable investments and applies \u201c\u2026 where a financial product has sustainable investment as its objective and an index has been designated as a reference benchmark.\u201d",
            "type": "string"
          },
          "standardMinInvestment": {
            "description": "Minimum investment for standard accounts.",
            "format": "float",
            "type": "number"
          },
          "status": {
            "description": "Status.",
            "type": "string"
          },
          "totalNav": {
            "description": "NAV.",
            "format": "float",
            "type": "number"
          },
          "turnover": {
            "description": "Turnover.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MutualFundSectorExposure": {
        "properties": {
          "sectorExposure": {
            "description": "Array of sector and exposure levels.",
            "items": {
              "$ref": "#/components/schemas/MutualFundSectorExposureData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Mutual symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MutualFundSectorExposureData": {
        "properties": {
          "exposure": {
            "description": "Percent of exposure.",
            "format": "float",
            "type": "number"
          },
          "sector": {
            "description": "Sector",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewsSentiment": {
        "properties": {
          "buzz": {
            "$ref": "#/components/schemas/CompanyNewsStatistics",
            "description": "Statistics of company news in the past week.",
            "type": "object"
          },
          "companyNewsScore": {
            "description": "News score.",
            "format": "float",
            "type": "number"
          },
          "sectorAverageBullishPercent": {
            "description": "Sector average bullish percent.",
            "format": "float",
            "type": "number"
          },
          "sectorAverageNewsScore": {
            "description": "Sectore average score.",
            "format": "float",
            "type": "number"
          },
          "sentiment": {
            "$ref": "#/components/schemas/Sentiment",
            "description": "News sentiment.",
            "type": "object"
          },
          "symbol": {
            "description": "Requested symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Ownership": {
        "properties": {
          "ownership": {
            "description": "Array of investors with detailed information about their holdings.",
            "items": {
              "$ref": "#/components/schemas/OwnershipInfo"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OwnershipInfo": {
        "properties": {
          "change": {
            "description": "Number of share changed (net buy or sell) from the last period.",
            "format": "int64",
            "type": "integer"
          },
          "filingDate": {
            "description": "Filing date.",
            "format": "date",
            "type": "string"
          },
          "name": {
            "description": "Investor's name.",
            "type": "string"
          },
          "share": {
            "description": "Number of shares held by the investor.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PatternRecognition": {
        "properties": {
          "points": {
            "description": "Array of patterns.",
            "items": {
              "$ref": "#/components/schemas/ScanPattern"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PresentationData": {
        "properties": {
          "atTime": {
            "description": "At Time.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "quarter": {
            "description": "Quarter",
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "Title",
            "type": "string"
          },
          "url": {
            "description": "Presentation url",
            "type": "string"
          },
          "year": {
            "description": "Year",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PressRelease": {
        "properties": {
          "majorDevelopment": {
            "description": "Array of major developments.",
            "items": {
              "$ref": "#/components/schemas/Development"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PriceMetricMap": {
        "type": "object"
      },
      "PriceMetrics": {
        "properties": {
          "atDate": {
            "description": "Data date.",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PriceMetricMap",
            "description": "Map key-value pair of key ratios and metrics.",
            "type": "object"
          },
          "symbol": {
            "description": "Symbol of the company.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PriceTarget": {
        "properties": {
          "lastUpdated": {
            "description": "Updated time of the data",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "numberAnalysts": {
            "description": "Number of Analysts.",
            "format": "int64",
            "type": "integer"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          },
          "targetHigh": {
            "description": "Highes analysts' target.",
            "format": "float",
            "type": "number"
          },
          "targetLow": {
            "description": "Lowest analysts' target.",
            "format": "float",
            "type": "number"
          },
          "targetMean": {
            "description": "Mean of all analysts' targets.",
            "format": "float",
            "type": "number"
          },
          "targetMedian": {
            "description": "Median of all analysts' targets.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Quote": {
        "properties": {
          "c": {
            "description": "Current price",
            "format": "float",
            "type": "number"
          },
          "d": {
            "description": "Change",
            "format": "float",
            "type": "number"
          },
          "dp": {
            "description": "Percent change",
            "format": "float",
            "type": "number"
          },
          "h": {
            "description": "High price of the day",
            "format": "float",
            "type": "number"
          },
          "l": {
            "description": "Low price of the day",
            "format": "float",
            "type": "number"
          },
          "o": {
            "description": "Open price of the day",
            "format": "float",
            "type": "number"
          },
          "pc": {
            "description": "Previous close price",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "RecommendationTrend": {
        "properties": {
          "buy": {
            "description": "Number of recommendations that fall into the Buy category",
            "format": "int64",
            "type": "integer"
          },
          "hold": {
            "description": "Number of recommendations that fall into the Hold category",
            "format": "int64",
            "type": "integer"
          },
          "period": {
            "description": "Updated period",
            "type": "string"
          },
          "sell": {
            "description": "Number of recommendations that fall into the Sell category",
            "format": "int64",
            "type": "integer"
          },
          "strongBuy": {
            "description": "Number of recommendations that fall into the Strong Buy category",
            "format": "int64",
            "type": "integer"
          },
          "strongSell": {
            "description": "Number of recommendations that fall into the Strong Sell category",
            "format": "int64",
            "type": "integer"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Report": {
        "properties": {
          "acceptedDate": {
            "description": "Accepted date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "accessNumber": {
            "description": "Access number.",
            "type": "string"
          },
          "cik": {
            "description": "CIK.",
            "type": "string"
          },
          "endDate": {
            "description": "Period end date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "filedDate": {
            "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "form": {
            "description": "Form type.",
            "type": "string"
          },
          "quarter": {
            "description": "Quarter.",
            "format": "int64",
            "type": "integer"
          },
          "report": {
            "$ref": "#/components/schemas/ReportDataMap",
            "description": "Report data.",
            "type": "object"
          },
          "startDate": {
            "description": "Period start date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "year": {
            "description": "Year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReportDataMap": {
        "type": "object"
      },
      "RevenueBreakdown": {
        "properties": {
          "cik": {
            "description": "CIK",
            "type": "string"
          },
          "data": {
            "description": "Array of revenue breakdown over multiple periods.",
            "items": {
              "$ref": "#/components/schemas/BreakdownItem"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RevenueBreakdown2": {
        "properties": {
          "currency": {
            "description": "currency",
            "type": "string"
          },
          "data": {
            "description": "Revenue breakdown data.",
            "type": "object"
          },
          "symbol": {
            "description": "Symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RevenueEstimates": {
        "properties": {
          "data": {
            "description": "List of estimates",
            "items": {
              "$ref": "#/components/schemas/RevenueEstimatesInfo"
            },
            "type": "array"
          },
          "freq": {
            "description": "Frequency: annual or quarterly.",
            "type": "string"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RevenueEstimatesInfo": {
        "properties": {
          "numberAnalysts": {
            "description": "Number of Analysts.",
            "format": "int64",
            "type": "integer"
          },
          "period": {
            "description": "Period.",
            "format": "date",
            "type": "string"
          },
          "quarter": {
            "description": "Fiscal quarter.",
            "format": "int64",
            "type": "integer"
          },
          "revenueAvg": {
            "description": "Average revenue estimates including Finnhub's proprietary estimates.",
            "format": "float",
            "type": "number"
          },
          "revenueHigh": {
            "description": "Highest estimate.",
            "format": "float",
            "type": "number"
          },
          "revenueLow": {
            "description": "Lowest estimate.",
            "format": "float",
            "type": "number"
          },
          "year": {
            "description": "Fiscal year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SECSentimentAnalysis": {
        "properties": {
          "accessNumber": {
            "description": "Access number.",
            "type": "string"
          },
          "cik": {
            "description": "CIK.",
            "type": "string"
          },
          "sentiment": {
            "$ref": "#/components/schemas/FilingSentiment",
            "description": "Filing Sentiment",
            "type": "object"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScanPattern": {
        "type": "object"
      },
      "SearchBody": {
        "properties": {
          "acts": {
            "description": "List of SEC's exchanges act to search, comma separated. Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "caps": {
            "description": "List of market capitalization to search, comma separated. Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "chIds": {
            "description": "List of Companies House number to search, comma separated (Max: 50).",
            "type": "string"
          },
          "ciks": {
            "description": "List of SEC Center Index Key to search, comma separated (Max: 50).",
            "type": "string"
          },
          "countries": {
            "description": "List of sources to search, comma separated (Max: 50). Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "cusips": {
            "description": "List of cusip to search, comma separated (Max: 50).",
            "type": "string"
          },
          "exchanges": {
            "description": "List of exchanges to search, comma separated (Max: 50). Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "exhibits": {
            "description": "List of exhibits to search, comma separated (Max: 50). Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "forms": {
            "description": "List of forms to search, comma separated (Max: 50). Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "fromDate": {
            "description": "Search from date in format: YYYY-MM-DD, default from the last 2 years",
            "type": "string"
          },
          "gics": {
            "description": "List of gics to search, comma separated (Max: 50). Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "highlighted": {
            "description": "Enable highlight in returned filings. If enabled, only return 10 results each time",
            "type": "boolean"
          },
          "isins": {
            "description": "List of isin to search, comma separated (Max: 50).",
            "type": "string"
          },
          "naics": {
            "description": "List of sources to search, comma separated (Max: 50). Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "page": {
            "description": "Use for pagination, default to page 1",
            "type": "string"
          },
          "query": {
            "description": "Search query",
            "type": "string"
          },
          "sedarIds": {
            "description": "List of SEDAR issuer number to search, comma separated (Max: 50).",
            "type": "string"
          },
          "sedols": {
            "description": "List of sedols to search, comma separated (Max: 50).",
            "type": "string"
          },
          "sort": {
            "description": "Sort result by, default: sortMostRecent. Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "sources": {
            "description": "List of sources to search, comma separated (Max: 50). Look at <code>/filter</code> endpoint to see all available values.",
            "type": "string"
          },
          "symbols": {
            "description": "List of symbols to search, comma separated (Max: 50).",
            "type": "string"
          },
          "toDate": {
            "description": "Search to date in format: YYYY-MM-DD, default to today",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "SearchFilter": {
        "properties": {
          "id": {
            "description": "Filter id, use with respective field in search query body.",
            "type": "string"
          },
          "name": {
            "description": "Display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchResponse": {
        "properties": {
          "count": {
            "description": "Total filing matched your search criteria.",
            "type": "integer"
          },
          "filings": {
            "description": "Filing match your search criteria.",
            "items": {
              "$ref": "#/components/schemas/FilingResponse"
            },
            "type": "array"
          },
          "page": {
            "description": "Current search page",
            "type": "integer"
          },
          "took": {
            "description": "Time took to execute your search query on our server, value in ms.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SectorMetric": {
        "properties": {
          "data": {
            "description": "Metrics for each sector.",
            "items": {
              "$ref": "#/components/schemas/SectorMetricData"
            },
            "type": "array"
          },
          "region": {
            "description": "Region.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SectorMetricData": {
        "properties": {
          "metrics": {
            "description": "Metrics data in key-value format. <code>a</code> and <code>m</code> fields are for average and median respectively.",
            "type": "object"
          },
          "sector": {
            "description": "Sector",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Sentiment": {
        "properties": {
          "bearishPercent": {
            "description": "",
            "format": "float",
            "type": "number"
          },
          "bullishPercent": {
            "description": "",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "SentimentContent": {
        "properties": {
          "atTime": {
            "description": "Period.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "mention": {
            "description": "Number of mentions",
            "format": "int64",
            "type": "integer"
          },
          "negativeMention": {
            "description": "Number of negative mentions",
            "format": "int64",
            "type": "integer"
          },
          "negativeScore": {
            "description": "Negative score. Range 0-1",
            "format": "float",
            "type": "number"
          },
          "positiveMention": {
            "description": "Number of positive mentions",
            "format": "int64",
            "type": "integer"
          },
          "positiveScore": {
            "description": "Positive score. Range 0-1",
            "format": "float",
            "type": "number"
          },
          "score": {
            "description": "Final score. Range: -1 to 1 with 1 is very positive and -1 is very negative",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "SimilarityIndex": {
        "properties": {
          "cik": {
            "description": "CIK.",
            "type": "string"
          },
          "similarity": {
            "description": "Array of filings with its cosine similarity compared to the same report of the previous year.",
            "items": {
              "$ref": "#/components/schemas/SimilarityIndexInfo"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SimilarityIndexInfo": {
        "properties": {
          "acceptedDate": {
            "description": "Accepted date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "accessNumber": {
            "description": "Access number.",
            "type": "string"
          },
          "cik": {
            "description": "CIK.",
            "type": "string"
          },
          "filedDate": {
            "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "filingUrl": {
            "description": "Filing's URL.",
            "type": "string"
          },
          "form": {
            "description": "Form type.",
            "type": "string"
          },
          "item1": {
            "description": "Cosine similarity of Item 1 (Business). This number is only available for Annual reports.",
            "format": "float",
            "type": "number"
          },
          "item1a": {
            "description": "Cosine similarity of Item 1A (Risk Factors). This number is available for both Annual and Quarterly reports.",
            "format": "float",
            "type": "number"
          },
          "item2": {
            "description": "Cosine similarity of Item 2 (Management\u2019s Discussion and Analysis of Financial Condition and Results of Operations). This number is only available for Quarterly reports.",
            "format": "float",
            "type": "number"
          },
          "item7": {
            "description": "Cosine similarity of Item 7 (Management\u2019s Discussion and Analysis of Financial Condition and Results of Operations). This number is only available for Annual reports.",
            "format": "float",
            "type": "number"
          },
          "item7a": {
            "description": "Cosine similarity of Item 7A (Quantitative and Qualitative Disclosures About Market Risk). This number is only available for Annual reports.",
            "format": "float",
            "type": "number"
          },
          "reportUrl": {
            "description": "Report's URL.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SocialSentiment": {
        "properties": {
          "data": {
            "description": "Sentiment data.",
            "items": {
              "$ref": "#/components/schemas/SentimentContent"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Split": {
        "properties": {
          "date": {
            "description": "Split date.",
            "format": "date",
            "type": "string"
          },
          "fromFactor": {
            "description": "From factor.",
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "toFactor": {
            "description": "To factor.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "StockCandles": {
        "properties": {
          "c": {
            "description": "List of close prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "h": {
            "description": "List of high prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "l": {
            "description": "List of low prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "o": {
            "description": "List of open prices for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "s": {
            "description": "Status of the response. This field can either be ok or no_data.",
            "type": "string"
          },
          "t": {
            "description": "List of timestamp for returned candles.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "v": {
            "description": "List of volume data for returned candles.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "StockPresentation": {
        "properties": {
          "res": {
            "description": "Presentation data.",
            "items": {
              "$ref": "#/components/schemas/PresentationData"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StockSymbol": {
        "properties": {
          "currency": {
            "description": "Price's currency. This might be different from the reporting currency of fundamental data.",
            "type": "string"
          },
          "description": {
            "description": "Symbol description",
            "type": "string"
          },
          "displaySymbol": {
            "description": "Display symbol name.",
            "type": "string"
          },
          "figi": {
            "description": "FIGI identifier.",
            "type": "string"
          },
          "isin": {
            "description": "ISIN. This field is only available for EU stocks and selected Asian markets. Entitlement from Finnhub is required to access this field.",
            "type": "string"
          },
          "mic": {
            "description": "Primary exchange's MIC.",
            "type": "string"
          },
          "shareClassFIGI": {
            "description": "Global Share Class FIGI.",
            "type": "string"
          },
          "symbol": {
            "description": "Unique symbol used to identify this symbol used in <code>/stock/candle</code> endpoint.",
            "type": "string"
          },
          "symbol2": {
            "description": "Alternative ticker for exchanges with multiple tickers for 1 stock such as BSE.",
            "type": "string"
          },
          "type": {
            "description": "Security type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StockTranscripts": {
        "properties": {
          "id": {
            "description": "Transcript's ID used to get the <a href=\"#transcripts\">full transcript</a>.",
            "type": "string"
          },
          "quarter": {
            "description": "Quarter of earnings result in the case of earnings call transcript.",
            "format": "int64",
            "type": "integer"
          },
          "time": {
            "description": "Time of the event.",
            "formatIgnore": "date-time",
            "type": "string"
          },
          "title": {
            "description": "Title.",
            "type": "string"
          },
          "year": {
            "description": "Year of earnings result in the case of earnings call transcript.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SupplyChainRelationships": {
        "properties": {
          "data": {
            "description": "Key customers and suppliers.",
            "items": {
              "$ref": "#/components/schemas/KeyCustomersSuppliers"
            },
            "type": "array"
          },
          "symbol": {
            "description": "symbol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SupportResistance": {
        "properties": {
          "levels": {
            "description": "Array of support and resistance levels.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SymbolChange": {
        "properties": {
          "data": {
            "description": "Array of symbol change events.",
            "items": {
              "$ref": "#/components/schemas/SymbolChangeInfo"
            },
            "type": "array"
          },
          "fromDate": {
            "description": "From date.",
            "type": "string"
          },
          "toDate": {
            "description": "To date.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SymbolChangeInfo": {
        "properties": {
          "atDate": {
            "description": "Event's date.",
            "type": "string"
          },
          "newSymbol": {
            "description": "New symbol.",
            "type": "string"
          },
          "oldSymbol": {
            "description": "Old symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SymbolLookup": {
        "properties": {
          "count": {
            "description": "Number of results.",
            "format": "int64",
            "type": "integer"
          },
          "result": {
            "description": "Array of search results.",
            "items": {
              "$ref": "#/components/schemas/SymbolLookupInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SymbolLookupInfo": {
        "properties": {
          "description": {
            "description": "Symbol description",
            "type": "string"
          },
          "displaySymbol": {
            "description": "Display symbol name.",
            "type": "string"
          },
          "symbol": {
            "description": "Unique symbol used to identify this symbol used in <code>/stock/candle</code> endpoint.",
            "type": "string"
          },
          "type": {
            "description": "Security type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TechnicalAnalysis": {
        "properties": {
          "count": {
            "$ref": "#/components/schemas/Indicator",
            "description": "Number of indicators for each signal",
            "type": "object"
          },
          "signal": {
            "description": "Aggregate Signal",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TechnicalIndicator": {
        "type": "object"
      },
      "TickData": {
        "properties": {
          "c": {
            "description": "List of trade conditions. A comprehensive list of trade conditions code can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1PUxiSWPHSODbaTaoL2Vef6DgU-yFtlRGZf19oBb9Hp0/edit?usp=sharing\">here</a>",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          "count": {
            "description": "Number of ticks returned. If <code>count</code> < <code>limit</code>, all data for that date has been returned.",
            "format": "int64",
            "type": "integer"
          },
          "p": {
            "description": "List of price data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "s": {
            "description": "Symbol.",
            "type": "string"
          },
          "skip": {
            "description": "Number of ticks skipped.",
            "format": "int64",
            "type": "integer"
          },
          "t": {
            "description": "List of timestamp in UNIX ms.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "total": {
            "description": "Total number of ticks for that date.",
            "format": "int64",
            "type": "integer"
          },
          "v": {
            "description": "List of volume data.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "x": {
            "description": "List of venues/exchanges. A list of exchange codes can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",>here</a>",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Transactions": {
        "properties": {
          "change": {
            "description": "Number of share changed from the last period. A positive value suggests a <code>BUY</code> transaction. A negative value suggests a <code>SELL</code> transaction.",
            "format": "int64",
            "type": "integer"
          },
          "filingDate": {
            "description": "Filing date.",
            "format": "date",
            "type": "string"
          },
          "name": {
            "description": "Insider's name.",
            "type": "string"
          },
          "share": {
            "description": "Number of shares held after the transaction.",
            "format": "int64",
            "type": "integer"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "transactionCode": {
            "description": "Transaction code. A list of codes and their meanings can be found <a href=\"https://www.sec.gov/about/forms/form4data.pdf\" target=\"_blank\" rel=\"noopener\">here</a>.",
            "type": "string"
          },
          "transactionDate": {
            "description": "Transaction date.",
            "format": "date",
            "type": "string"
          },
          "transactionPrice": {
            "description": "Average transaction price.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "TranscriptContent": {
        "properties": {
          "name": {
            "description": "Speaker's name",
            "type": "string"
          },
          "session": {
            "description": "Earnings calls section (management discussion or Q&A)",
            "type": "string"
          },
          "speech": {
            "description": "Speaker's speech",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TranscriptParticipant": {
        "properties": {
          "description": {
            "description": "Participant's description",
            "type": "string"
          },
          "name": {
            "description": "Participant's name",
            "type": "string"
          },
          "role": {
            "description": "Whether the speak is a company's executive or an analyst",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Trend": {
        "properties": {
          "adx": {
            "description": "ADX reading",
            "format": "float",
            "type": "number"
          },
          "trending": {
            "description": "Whether market is trending or going sideway",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UpgradeDowngrade": {
        "properties": {
          "action": {
            "description": "Action can take any of the following values: <code>up(upgrade), down(downgrade), main(maintains), init(initiate), reit(reiterate)</code>.",
            "type": "string"
          },
          "company": {
            "description": "Company/analyst who did the upgrade/downgrade.",
            "type": "string"
          },
          "fromGrade": {
            "description": "From grade.",
            "type": "string"
          },
          "gradeTime": {
            "description": "Upgrade/downgrade time in UNIX timestamp.",
            "format": "int64",
            "type": "integer"
          },
          "symbol": {
            "description": "Company symbol.",
            "type": "string"
          },
          "toGrade": {
            "description": "To grade.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsaSpending": {
        "properties": {
          "actionDate": {
            "description": "Period.",
            "type": "string"
          },
          "awardDescription": {
            "description": "Description.",
            "type": "string"
          },
          "awardingAgencyName": {
            "description": "Award agency.",
            "type": "string"
          },
          "awardingOfficeName": {
            "description": "Award office name.",
            "type": "string"
          },
          "awardingSubAgencyName": {
            "description": "Award sub-agency.",
            "type": "string"
          },
          "country": {
            "description": "Recipient's country.",
            "type": "string"
          },
          "naicsCode": {
            "description": "NAICS code.",
            "type": "string"
          },
          "performanceCity": {
            "description": "Performance city.",
            "type": "string"
          },
          "performanceCongressionalDistrict": {
            "description": "Performance congressional district.",
            "type": "string"
          },
          "performanceCountry": {
            "description": "Performance country.",
            "type": "string"
          },
          "performanceCounty": {
            "description": "Performance county.",
            "type": "string"
          },
          "performanceEndDate": {
            "description": "Performance end date.",
            "type": "string"
          },
          "performanceStartDate": {
            "description": "Performance start date.",
            "type": "string"
          },
          "performanceState": {
            "description": "Performance state.",
            "type": "string"
          },
          "performanceZipCode": {
            "description": "Performance zip code.",
            "type": "string"
          },
          "permalink": {
            "description": "Permalink.",
            "type": "string"
          },
          "recipientName": {
            "description": "Company's name.",
            "type": "string"
          },
          "recipientParentName": {
            "description": "Company's name.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "totalValue": {
            "description": "Income reported by lobbying firms.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "UsaSpendingResult": {
        "properties": {
          "data": {
            "description": "Array of government's spending data points.",
            "items": {
              "$ref": "#/components/schemas/UsaSpending"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsptoPatent": {
        "properties": {
          "applicationNumber": {
            "description": "Application Number.",
            "type": "string"
          },
          "companyFilingName": {
            "description": "Array of companies' name on the patent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "filingDate": {
            "description": "Filing date.",
            "type": "string"
          },
          "filingStatus": {
            "description": "Filing status.",
            "type": "string"
          },
          "patentNumber": {
            "description": "Patent number.",
            "type": "string"
          },
          "patentType": {
            "description": "Patent's type.",
            "type": "string"
          },
          "publicationDate": {
            "description": "Publication date.",
            "type": "string"
          },
          "url": {
            "description": "URL of the original article.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsptoPatentResult": {
        "properties": {
          "data": {
            "description": "Array of patents.",
            "items": {
              "$ref": "#/components/schemas/UsptoPatent"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VisaApplication": {
        "properties": {
          "beginDate": {
            "description": "Job's start date.",
            "type": "string"
          },
          "caseNumber": {
            "description": "Case number.",
            "type": "string"
          },
          "caseStatus": {
            "description": "Case status.",
            "type": "string"
          },
          "employerName": {
            "description": "Company's name.",
            "type": "string"
          },
          "endDate": {
            "description": "Job's end date.",
            "type": "string"
          },
          "fullTimePosition": {
            "description": "Full-time position flag.",
            "type": "string"
          },
          "h1bDependent": {
            "description": "H1B dependent flag.",
            "type": "string"
          },
          "jobTitle": {
            "description": "Job Title.",
            "type": "string"
          },
          "quarter": {
            "description": "Quarter.",
            "format": "int64",
            "type": "integer"
          },
          "receivedDate": {
            "description": "Received date.",
            "type": "string"
          },
          "socCode": {
            "description": "SOC Code. A list of SOC code can be found <a href=\"https://www.bls.gov/oes/current/oes_stru.htm\" target=\"_blank\">here</a>.",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          },
          "visaClass": {
            "description": "Visa class.",
            "type": "string"
          },
          "wageLevel": {
            "description": "Wage level.",
            "type": "string"
          },
          "wageRangeFrom": {
            "description": "Wage range from.",
            "format": "float",
            "type": "number"
          },
          "wageRangeTo": {
            "description": "Wage range to.",
            "format": "float",
            "type": "number"
          },
          "wageUnitOfPay": {
            "description": "Wage unit of pay.",
            "type": "string"
          },
          "worksiteAddress": {
            "description": "Worksite address.",
            "type": "string"
          },
          "worksiteCity": {
            "description": "Worksite city.",
            "type": "string"
          },
          "worksiteCounty": {
            "description": "Worksite county.",
            "type": "string"
          },
          "worksitePostalCode": {
            "description": "Worksite postal code.",
            "type": "string"
          },
          "worksiteState": {
            "description": "Worksite state.",
            "type": "string"
          },
          "year": {
            "description": "Year.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VisaApplicationResult": {
        "properties": {
          "data": {
            "description": "Array of H1b and Permanent visa applications.",
            "items": {
              "$ref": "#/components/schemas/VisaApplication"
            },
            "type": "array"
          },
          "symbol": {
            "description": "Symbol.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "api_key": {
        "in": "query",
        "name": "token",
        "type": "apiKey"
      }
    }
  },
  "extraDocs": [
    {
      "section": null,
      "subSection": [
        {
          "description": "<p class=\"lead\">The API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. This is 1 of the most comprehensive financial API available on the market.</p> <p><strong>Base URL</strong>: <code>/api/v1</code></p><p><strong>Swagger schema</strong>: <a target=\"_blank\" href=\"/static/swagger.json\">Download</a></p>",
          "navHeader": "Introduction",
          "summary": "API Documentation",
          "urlId": "introduction"
        },
        {
          "description": "<p>All GET request require a token parameter <code>token=apiKey</code> in the URL or a header <code>X-Finnhub-Token : apiKey</code>. You can find your API Key under <a target=\"_blank\" href=\"/dashboard\">Dashboard</a>. If you are logged in, your API key will be automatically used in the examples so you can copy and paste them as is.</p>",
          "navHeader": "Authentication",
          "summary": "Authentication",
          "urlId": "authentication"
        },
        {
          "description": "<p>If your limit is exceeded, you will receive a response with status code <code>429</code>.</p><p>On top of all plan's limit, there is a 30 API calls/ second limit.</p>",
          "navHeader": "Limits",
          "summary": "Rate Limits",
          "urlId": "rate-limit"
        },
        {
          "description": "<p><a href=\"https://finsheet.io/\" target=\"_blank\">Finsheet</a> is the official spreadsheet's plugin partner using fundamental data and estimates data from Finnhub. If you are looking to complement the stock price data you already got directly from Excel and Google Sheets with some advanced data, <a href=\"https://finsheet.io/\" target=\"_blank\">Finsheet's Excel and Google Sheets plugin</a> offer an affordable way to access global fundamentals and estimates right in your spreadsheet.</p><span><img src=\"https://finsheet.io/static/img/candles.png\"></img></span>",
          "navHeader": "Excel & Google Spreadsheet",
          "newEndpoint": "New Endpoint",
          "summary": "FinSheet Excel & Google Sheets plugin",
          "urlId": "excel-plugin-google-spreadsheet"
        }
      ]
    },
    {
      "section": "Open Source",
      "subSection": [
        {
          "description": "<p>We have been incredibly humbled by the support of the open-source community. Beside these incredible projects, here are our own official libraries: </p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Language</th>\n      <th>Homepage</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"text-blue\">Python</th>\n      <td><a href=\"https://github.com/Finnhub-Stock-API/finnhub-python\" target=\"_blank\" rel=\"noopener nofollow\">finnhub-python</a></td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Go</th>\n      <td><a href=\"https://github.com/Finnhub-Stock-API/finnhub-go\" target=\"_blank\" rel=\"noopener nofollow\">finnhub-go</a></td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Javascript</th>\n      <td><a href=\"https://www.npmjs.com/package/finnhub\" target=\"_blank\" rel=\"noopener nofollow\">Finnhub NPM</a></td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Ruby</th>\n      <td><a href=\"https://github.com/Finnhub-Stock-API/finnhub-ruby\" target=\"_blank\" rel=\"noopener nofollow\">Finnhub Ruby</a></td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Kotlin</th>\n      <td><a href=\"https://github.com/Finnhub-Stock-API/finnhub-kotlin\" target=\"_blank\" rel=\"noopener nofollow\">Finnhub Kotlin</a></td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">PHP</th>\n      <td><a href=\"https://packagist.org/packages/finnhub/client\" target=\"_blank\" rel=\"noopener nofollow\">Finnhub PHP</a></td>\n    </tr>\n  </tbody>\n</table>",
          "navHeader": "Libraries",
          "summary": "Libraries",
          "urlId": "library"
        },
        {
          "description": "<p>We understand the importance of data for students, researchers,and investors. That's why at Finnhub, we have decided to create multiple Open Datasets for the community which can be downloaded in bulk below:</p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Datasets</th>\n      <th>Download</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"text-blue\">SEC Financials As Reported</th>\n      <td><a href=\"https://www.kaggle.com/finnhub/reported-financials\" target=\"_blank\" rel=\"noopener\">Kaggle</a></td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">SEC Filings Metadata</th>\n      <td><a href=\"https://www.kaggle.com/finnhub/sec-filings\" target=\"_blank\" rel=\"noopener\">Kaggle</a></td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">S&P 500 futures tick data</th>\n      <td><a href=\"https://www.kaggle.com/finnhub/sp-500-futures-tick-data-sp\" target=\"_blank\" rel=\"noopener\">Kaggle</a></td>\n    </tr>\n  </tbody>\n</table>",
          "navHeader": "Open Data",
          "summary": "Open Data",
          "urlId": "open-data"
        }
      ]
    },
    {
      "section": "Websocket",
      "subSection": [
        {
          "arguments": null,
          "description": "<p>Stream real-time trades for US stocks, forex and crypto. Trades might not be available for some forex and crypto exchanges. In that case, a price update will be sent with volume = 0. A message can contain multiple trades. 1 API key can only open 1 connection at a time.</p> <p>The following FX brokers do not support streaming: FXCM, Forex.com, FHFX. To get latest price for FX, please use the Forex Candles or All Rates endpoint.</p>",
          "examples": [
            {
              "text": "wss://ws.finnhub.io",
              "url": "wss://ws.finnhub.io?token=<token>"
            }
          ],
          "highUsage": "High Usage",
          "method": [
            "Websocket"
          ],
          "navHeader": "Trades",
          "responseAttributes": [
            {
              "description": "Message type.",
              "name": "type",
              "type": "string"
            },
            {
              "description": "List of trades or price updates.",
              "item": {
                "attributes": [
                  {
                    "description": "Symbol.",
                    "name": "s",
                    "type": "string"
                  },
                  {
                    "description": "Last price.",
                    "name": "p",
                    "type": "float"
                  },
                  {
                    "description": "UNIX milliseconds timestamp.",
                    "name": "t",
                    "type": "int"
                  },
                  {
                    "description": "Volume.",
                    "name": "v",
                    "type": "float"
                  },
                  {
                    "description": "List of trade conditions. A comprehensive list of trade conditions code can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1PUxiSWPHSODbaTaoL2Vef6DgU-yFtlRGZf19oBb9Hp0/edit?usp=sharing\">here</a>",
                    "item": {
                      "type": "string"
                    },
                    "name": "c",
                    "type": "list"
                  }
                ],
                "definition": "Trade",
                "type": "object"
              },
              "name": "data",
              "type": "list"
            }
          ],
          "sampleCode": {
            "autoGenerated": false,
            "go": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/gorilla/websocket\"\n)\n\nfunc main() {\n\tw, _, err := websocket.DefaultDialer.Dial(\"wss://ws.finnhub.io?token=<token>\", nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer w.Close()\n\n\tsymbols := []string{\"AAPL\", \"AMZN\", \"BINANCE:BTCUSDT\", \"IC MARKETS:1\"}\n\tfor _, s := range symbols {\n\t\tmsg, _ := json.Marshal(map[string]interface{}{\"type\": \"subscribe\", \"symbol\": s})\n\t\tw.WriteMessage(websocket.TextMessage, msg)\n\t}\n\n\tvar msg interface{}\n\tfor {\n\t\terr := w.ReadJSON(&msg);\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tfmt.Println(\"Message from server \", msg)\n\t}\n}\n",
            "javascript": "const socket = new WebSocket('wss://ws.finnhub.io?token=<token>');\n\n// Connection opened -> Subscribe\nsocket.addEventListener('open', function (event) {\n    socket.send(JSON.stringify({'type':'subscribe', 'symbol': 'AAPL'}))\n    socket.send(JSON.stringify({'type':'subscribe', 'symbol': 'BINANCE:BTCUSDT'}))\n    socket.send(JSON.stringify({'type':'subscribe', 'symbol': 'IC MARKETS:1'}))\n});\n\n// Listen for messages\nsocket.addEventListener('message', function (event) {\n    console.log('Message from server ', event.data);\n});\n\n// Unsubscribe\n var unsubscribe = function(symbol) {\n    socket.send(JSON.stringify({'type':'unsubscribe','symbol': symbol}))\n}\n",
            "python": "#https://pypi.org/project/websocket_client/\nimport websocket\n\ndef on_message(ws, message):\n    print(message)\n\ndef on_error(ws, error):\n    print(error)\n\ndef on_close(ws):\n    print(\"### closed ###\")\n\ndef on_open(ws):\n    ws.send('{\"type\":\"subscribe\",\"symbol\":\"AAPL\"}')\n    ws.send('{\"type\":\"subscribe\",\"symbol\":\"AMZN\"}')\n    ws.send('{\"type\":\"subscribe\",\"symbol\":\"BINANCE:BTCUSDT\"}')\n    ws.send('{\"type\":\"subscribe\",\"symbol\":\"IC MARKETS:1\"}')\n\nif __name__ == \"__main__\":\n    websocket.enableTrace(True)\n    ws = websocket.WebSocketApp(\"wss://ws.finnhub.io?token=<token>\",\n                              on_message = on_message,\n                              on_error = on_error,\n                              on_close = on_close)\n    ws.on_open = on_open\n    ws.run_forever()"
          },
          "sampleResponse": "{\n  \"data\": [\n    {\n      \"p\": 7296.89,\n      \"s\": \"BINANCE:BTCUSDT\",\n      \"t\": 1575526691134,\n      \"v\": 0.011467\n    }\n  ],\n  \"type\": \"trade\"\n}",
          "summary": "Trades - Last Price Updates",
          "title": "Websocket - Realtime streaming for US Full SIP, LSE, Forex and Crypto",
          "urlId": "websocket-trades"
        },
        {
          "arguments": null,
          "description": "Stream real-time news for US and Canadian stocks.",
          "examples": [
            {
              "text": "wss://ws.finnhub.io",
              "url": "wss://ws.finnhub.io?token=<token>"
            }
          ],
          "method": [
            "Websocket"
          ],
          "navHeader": "News",
          "premium": "Premium Access Required",
          "responseAttributes": [
            {
              "description": "Message type: <code>news</code>.",
              "name": "type",
              "type": "string"
            },
            {
              "description": "List of news.",
              "item": {
                "attributes": [
                  {
                    "description": "News category.",
                    "name": "category",
                    "type": "string"
                  },
                  {
                    "description": "Published time in UNIX timestamp.",
                    "name": "datetime",
                    "type": "timestamp"
                  },
                  {
                    "description": "News headline.",
                    "name": "headline",
                    "type": "string"
                  },
                  {
                    "description": "News ID.",
                    "name": "urlId",
                    "type": "int"
                  },
                  {
                    "description": "Thumbnail image URL.",
                    "name": "image",
                    "type": "string"
                  },
                  {
                    "description": "Related stocks and companies mentioned in the article.",
                    "name": "related",
                    "type": "string"
                  },
                  {
                    "description": "News source.",
                    "name": "source",
                    "type": "string"
                  },
                  {
                    "description": "News summary.",
                    "name": "summary",
                    "type": "string"
                  },
                  {
                    "description": "URL of the original article.",
                    "name": "url",
                    "type": "string"
                  }
                ],
                "definition": "News",
                "type": "object"
              },
              "name": "data",
              "type": "list"
            }
          ],
          "sampleCode": {
            "autoGenerated": false,
            "go": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/gorilla/websocket\"\n)\n\nfunc main() {\n\tw, _, err := websocket.DefaultDialer.Dial(\"wss://ws.finnhub.io?token=<token>\", nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer w.Close()\n\n\tsymbols := []string{\"AAPL\", \"AMZN\", \"MSFT\", \"BYND\"}\n\tfor _, s := range symbols {\n\t\tmsg, _ := json.Marshal(map[string]interface{}{\"type\": \"subscribe-news\", \"symbol\": s})\n\t\tw.WriteMessage(websocket.TextMessage, msg)\n\t}\n\n\tvar msg interface{}\n\tfor {\n\t\terr := w.ReadJSON(&msg);\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tfmt.Println(\"Message from server \", msg)\n\t}\n}\n",
            "javascript": "const socket = new WebSocket('wss://ws.finnhub.io?token=<token>');\n\n// Connection opened -> Subscribe\nsocket.addEventListener('open', function (event) {\n    socket.send(JSON.stringify({'type':'subscribe-news', 'symbol': 'AAPL'}))\n    socket.send(JSON.stringify({'type':'subscribe-news', 'symbol': 'MSFT'}))\n    socket.send(JSON.stringify({'type':'subscribe-news', 'symbol': 'AMZN'}))\n});\n\n// Listen for messages\nsocket.addEventListener('message', function (event) {\n    console.log('Message from server ', event.data);\n});\n\n// Unsubscribe\n var unsubscribe = function(symbol) {\n    socket.send(JSON.stringify({'type':'unsubscribe-news','symbol': symbol}))\n}\n",
            "python": "#https://pypi.org/project/websocket_client/\nimport websocket\n\ndef on_message(ws, message):\n    print(message)\n\ndef on_error(ws, error):\n    print(error)\n\ndef on_close(ws):\n    print(\"### closed ###\")\n\ndef on_open(ws):\n    ws.send('{\"type\":\"subscribe-news\",\"symbol\":\"AAPL\"}')\n    ws.send('{\"type\":\"subscribe-news\",\"symbol\":\"AMZN\"}')\n    ws.send('{\"type\":\"subscribe-news\",\"symbol\":\"MSFT\"}')\n    ws.send('{\"type\":\"subscribe-news\",\"symbol\":\"BYND\"}')\n\nif __name__ == \"__main__\":\n    websocket.enableTrace(True)\n    ws = websocket.WebSocketApp(\"wss://ws.finnhub.io?token=<token>\",\n                              on_message = on_message,\n                              on_error = on_error,\n                              on_close = on_close)\n    ws.on_open = on_open\n    ws.run_forever()"
          },
          "sampleResponse": "{\n  \"data\": [\n    {\n      \"category\": \"company\",\n      \"datetime\": 1679920200,\n      \"headline\": \"CanAlaska Uranium Announces Airborne Electromagnetic Survey Completed at Geikie Project in Athabasca Basin\",\n      \"id\": 119440189,\n      \"image\": \"https://media.zenfs.com/en/newsfile_64/0522ee5d9e134e6f966c6ecdfc50fb46\",\n      \"related\": \"CVVUF\",\n      \"source\": \"Yahoo\",\n      \"summary\": \"Multiple Priority Targets Associated with Regional Scale Fault Structures Preparation Underway for First Drill ProgramDrilling Continues at West McArthur JV and Key Extension ProjectsVancouver, British Columbia--(Newsfile Corp. - March 27, 2023) - CanAlaska Uranium Ltd. (TSXV: CVV) (OTCQX: CVVUF) (FSE: DH7N) (\\\"CanAlaska\\\" or the \\\"Company\\\") is pleased to announce completion of a high-resolution airborne Versatile Time Domain Electromagnetic (\\\"VTEM Plus\\\") survey on it's 60%-owned Geikie project in\",\n      \"url\": \"https://finance.yahoo.com/news/canalaska-uranium-announces-airborne-electromagnetic-123000318.html\"\n    }\n  ],\n  \"type\": \"news\"\n}",
          "summary": "News",
          "title": "Websocket - Realtime News Streaming",
          "urlId": "websocket-news"
        },
        {
          "arguments": null,
          "description": "Stream real-time press releases data for global companies. This feature is only available for Enterprise users.",
          "examples": [
            {
              "text": "wss://ws.finnhub.io",
              "url": "wss://ws.finnhub.io?token=<token>"
            }
          ],
          "method": [
            "Websocket"
          ],
          "navHeader": "Press Releases",
          "premium": "Premium Access Required",
          "responseAttributes": [
            {
              "description": "Message type: <code>news</code>.",
              "name": "type",
              "type": "string"
            },
            {
              "description": "List of news.",
              "item": {
                "attributes": [
                  {
                    "description": "Published time in UNIX timestamp.",
                    "name": "datetime",
                    "type": "timestamp"
                  },
                  {
                    "description": "News headline.",
                    "name": "headline",
                    "type": "string"
                  },
                  {
                    "description": "Related stocks and companies mentioned in the article.",
                    "name": "symbol",
                    "type": "string"
                  },
                  {
                    "description": "URL to download the full-text data.",
                    "name": "fullText",
                    "type": "string"
                  },
                  {
                    "description": "URL to read the article.",
                    "name": "url",
                    "type": "string"
                  }
                ],
                "definition": "News",
                "type": "object"
              },
              "name": "data",
              "type": "list"
            }
          ],
          "sampleCode": {
            "autoGenerated": false,
            "go": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/gorilla/websocket\"\n)\n\nfunc main() {\n\tw, _, err := websocket.DefaultDialer.Dial(\"wss://ws.finnhub.io?token=<token>\", nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer w.Close()\n\n\tsymbols := []string{\"AAPL\", \"AMZN\", \"MSFT\", \"BYND\"}\n\tfor _, s := range symbols {\n\t\tmsg, _ := json.Marshal(map[string]interface{}{\"type\": \"subscribe-pr\", \"symbol\": s})\n\t\tw.WriteMessage(websocket.TextMessage, msg)\n\t}\n\n\tvar msg interface{}\n\tfor {\n\t\terr := w.ReadJSON(&msg);\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tfmt.Println(\"Message from server \", msg)\n\t}\n}\n",
            "javascript": "const socket = new WebSocket('wss://ws.finnhub.io?token=<token>');\n\n// Connection opened -> Subscribe\nsocket.addEventListener('open', function (event) {\n    socket.send(JSON.stringify({'type':'subscribe-pr', 'symbol': 'AAPL'}))\n    socket.send(JSON.stringify({'type':'subscribe-pr', 'symbol': 'MSFT'}))\n    socket.send(JSON.stringify({'type':'subscribe-pr', 'symbol': 'AMZN'}))\n});\n\n// Listen for messages\nsocket.addEventListener('message', function (event) {\n    console.log('Message from server ', event.data);\n});\n\n// Unsubscribe\n var unsubscribe = function(symbol) {\n    socket.send(JSON.stringify({'type':'unsubscribe-pr','symbol': symbol}))\n}\n",
            "python": "#https://pypi.org/project/websocket_client/\nimport websocket\n\ndef on_message(ws, message):\n    print(message)\n\ndef on_error(ws, error):\n    print(error)\n\ndef on_close(ws):\n    print(\"### closed ###\")\n\ndef on_open(ws):\n    ws.send('{\"type\":\"subscribe-pr\",\"symbol\":\"AAPL\"}')\n    ws.send('{\"type\":\"subscribe-pr\",\"symbol\":\"AMZN\"}')\n    ws.send('{\"type\":\"subscribe-pr\",\"symbol\":\"MSFT\"}')\n    ws.send('{\"type\":\"subscribe-pr\",\"symbol\":\"BYND\"}')\n\nif __name__ == \"__main__\":\n    websocket.enableTrace(True)\n    ws = websocket.WebSocketApp(\"wss://ws.finnhub.io?token=<token>\",\n                              on_message = on_message,\n                              on_error = on_error,\n                              on_close = on_close)\n    ws.on_open = on_open\n    ws.run_forever()"
          },
          "sampleResponse": "{\n  \"data\": [\n    {\n      \"datetime\": 1637696940,\n      \"fullText\": \"https://static2.finnhub.io/file/publicdatany/pr/0eb7fb4118ec53204755719b4cc4d57e9370d3caa2fa15d5e7a8f3b4d99cc881.html\",\n      \"headline\": \"STOCKHOLDER ALERT: Monteverde &amp; Associates PC Continues to Investigate the Following Merger\",\n      \"symbol\": \"PAE,ZIXI,KRA\",\n      \"url\": \"https://finnhub.io/api/press-releases?id=0eb7fb4118ec53204755719b4cc4d57e9370d3caa2fa15d5e7a8f3b4d99cc881\"\n    }\n  ],\n  \"type\": \"pr\"\n}",
          "summary": "Press Releases",
          "title": "Websocket - Realtime Press Releases Streaming",
          "urlId": "websocket-press-releases"
        }
      ]
    }
  ],
  "orders": [
    "/search",
    "/stock/symbol",
    "/stock/market-status",
    "/stock/market-holiday",
    "/stock/profile",
    "/stock/profile2",
    "/stock/executive",
    "/news",
    "/company-news",
    "/press-releases",
    "/news-sentiment",
    "/stock/peers",
    "/stock/metric",
    "/stock/ownership",
    "/stock/fund-ownership",
    "/institutional/profile",
    "/institutional/portfolio",
    "/institutional/ownership",
    "/stock/insider-transactions",
    "/stock/insider-sentiment",
    "/stock/financials",
    "/stock/financials-reported",
    "/stock/revenue-breakdown",
    "/stock/filings",
    "/stock/filings-sentiment",
    "/stock/similarity-index",
    "/calendar/ipo",
    "/stock/dividend",
    "/sector/metrics",
    "/stock/price-metric",
    "/ca/symbol-change",
    "/ca/isin-change",
    "/stock/historical-market-cap",
    "/stock/historical-employee-count",
    "/stock/recommendation",
    "/stock/price-target",
    "/stock/upgrade-downgrade",
    "/stock/revenue-estimate",
    "/stock/eps-estimate",
    "/stock/ebitda-estimate",
    "/stock/ebit-estimate",
    "/stock/earnings",
    "/calendar/earnings",
    "/quote",
    "/stock/candle",
    "/stock/tick",
    "/stock/bbo",
    "/stock/bidask",
    "/stock/split",
    "/stock/dividend2",
    "/index/constituents",
    "/index/historical-constituents",
    "/etf/profile",
    "/etf/holdings",
    "/etf/sector",
    "/etf/country",
    "/mutual-fund/profile",
    "/mutual-fund/holdings",
    "/mutual-fund/sector",
    "/mutual-fund/country",
    "/mutual-fund/eet",
    "/mutual-fund/eet-pai",
    "/bond/profile",
    "/bond/price",
    "/bond/tick",
    "/bond/yield-curve",
    "/forex/exchange",
    "/forex/symbol",
    "/forex/candle",
    "/forex/rates",
    "/crypto/exchange",
    "/crypto/symbol",
    "/crypto/profile",
    "/crypto/candle",
    "/scan/pattern",
    "/scan/support-resistance",
    "/scan/technical-indicator",
    "/indicator",
    "/stock/transcripts/list",
    "/stock/transcripts",
    "/stock/earnings-call-live",
    "/stock/presentation",
    "/stock/social-sentiment",
    "/stock/investment-theme",
    "/stock/supply-chain",
    "/stock/esg",
    "/stock/historical-esg",
    "/stock/earnings-quality-score",
    "/stock/uspto-patent",
    "/stock/visa-application",
    "/stock/lobbying",
    "/stock/usa-spending",
    "/stock/congressional-trading",
    "/bank-branch",
    "/fda-advisory-committee-calendar",
    "/ai-chat",
    "/stock/revenue-breakdown2",
    "/stock/international-filings",
    "/global-filings/search",
    "/global-filings/search-in-filing",
    "/global-filings/filter",
    "/global-filings/download",
    "/country",
    "/calendar/economic",
    "/economic/code",
    "/economic"
  ],
  "sampleCodeTemplate": {
    "go": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    finnhub \"github.com/Finnhub-Stock-API/finnhub-go/v2\"\n)\n\nfunc main() {\n    cfg := finnhub.NewConfiguration()\n    cfg.AddDefaultHeader(\"X-Finnhub-Token\", \"<token>\")\n    finnhubClient := finnhub.NewAPIClient(cfg).DefaultApi\n    \n    <MY_CODE>\n    fmt.Printf(\"%+v\\n\", res)\n}",
    "javascript": "const finnhub = require('finnhub');\n\nconst api_key = finnhub.ApiClient.instance.authentications['api_key'];\napi_key.apiKey = \"<token>\"\nconst finnhubClient = new finnhub.DefaultApi()\n\n<MY_CODE>\n",
    "kotlin": "import io.finnhub.api.apis.DefaultApi\nimport io.finnhub.api.infrastructure.ApiClient\n\nApiClient.apiKey[\"token\"] = \"<token>\"\nval apiClient = DefaultApi()\n\n<MY_CODE>\n",
    "php": "<?php\n\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$config = Finnhub\\Configuration::getDefaultConfiguration()->setApiKey('token', '<token>');\n$client = new Finnhub\\Api\\DefaultApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\n<MY_CODE>\n\n?>",
    "python": "import finnhub\nfinnhub_client = finnhub.Client(api_key=\"<token>\")\n\n<MY_CODE>\n",
    "ruby": "require 'finnhub_ruby'\n\nFinnhubRuby.configure do |config|\n  config.api_key['api_key'] = '<token>'\nend\n\nfinnhub_client = FinnhubRuby::DefaultApi.new\n<MY_CODE>\n"
  }
}