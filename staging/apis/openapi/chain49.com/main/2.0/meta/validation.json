[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 6 absolute http references: [(('servers', 1, 'url'), 'url', 'https://chain49.p.rapidapi.com'), (('servers', 0, 'url'), 'url', 'https://api.chain49.com'), (('info', 'termsOfService'), 'termsOfService', 'https://chain49.com/terms-and-conditions'), (('info', 'x-logo', 'url'), 'url', 'https://docs.chain49.com/slate/img/horizontal-colored.png'), (('info', 'license', 'url'), 'url', 'https://www.gnu.org/licenses/agpl-3.0.en.html'), (('info', 'contact', 'url'), 'url', 'https://chain49.com/')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "6"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'X-API-Key' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'X-RapidAPI-Key' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'X-RapidAPI-Host' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/block/{blockHashOrHeight}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/block/{blockHashOrHeight}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/block-index/{blockHeight}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/block-index/{blockHeight}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tx/{txId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `confirmationETABlocks`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Bitcoin-like (unconfirmed tx).value.confirmationETABlocks]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like (unconfirmed tx)",
        "value",
        "confirmationETABlocks"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `confirmationETASeconds`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Bitcoin-like (unconfirmed tx).value.confirmationETASeconds]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like (unconfirmed tx)",
        "value",
        "confirmationETASeconds"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokenTransfers`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Ethereum-like (confirmed).value.tokenTransfers]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (confirmed)",
        "value",
        "tokenTransfers"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `ethereumSpecific`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Ethereum-like (confirmed).value.ethereumSpecific]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (confirmed)",
        "value",
        "ethereumSpecific"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `addressAliases`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Ethereum-like (confirmed).value.addressAliases]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (confirmed)",
        "value",
        "addressAliases"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `hex`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.hex]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "hex"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txid`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.txid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "txid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `overwintered`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.overwintered]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "overwintered"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `version`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.version]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "version"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `versiongroupid`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.versiongroupid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "versiongroupid"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `locktime`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.locktime]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "locktime"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `expiryheight`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.expiryheight]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "expiryheight"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vin`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vin]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vin"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vout`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vout]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vout"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vjoinsplit`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vjoinsplit]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vjoinsplit"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `valueBalance`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.valueBalance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "valueBalance"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vShieldedSpend`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vShieldedSpend]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vShieldedSpend"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vShieldedOutput`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vShieldedOutput]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vShieldedOutput"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `bindingSig`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.bindingSig]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "bindingSig"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `blockhash`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.blockhash]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "blockhash"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `confirmations`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.confirmations]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "confirmations"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `time`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.time]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "time"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `blocktime`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.blocktime]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "blocktime"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/address/{address}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `page`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.page]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "page"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalPages`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.totalPages]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "totalPages"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `itemsOnPage`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.itemsOnPage]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "itemsOnPage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `address`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.address]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "address"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `balance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.balance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "balance"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalReceived`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.totalReceived]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "totalReceived"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalSent`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.totalSent]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "totalSent"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedBalance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.unconfirmedBalance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "unconfirmedBalance"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedTxs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.unconfirmedTxs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "unconfirmedTxs"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.txs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "txs"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txids`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.txids]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "txids"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `address`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.address]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "address"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `balance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.balance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "balance"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedBalance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.unconfirmedBalance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "unconfirmedBalance"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedTxs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.unconfirmedTxs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "unconfirmedTxs"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.txs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "txs"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `nonTokenTxs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.nonTokenTxs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "nonTokenTxs"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `nonce`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.nonce]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "nonce"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokens`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.tokens]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "tokens"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `secondaryValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.secondaryValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "secondaryValue"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokensBaseValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.tokensBaseValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "tokensBaseValue"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokensSecondaryValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.tokensSecondaryValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "tokensSecondaryValue"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalBaseValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.totalBaseValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "totalBaseValue"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalSecondaryValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.totalSecondaryValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "totalSecondaryValue"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/xpub/{xpub}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/xpub/{xpub}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/utxo/{addressOrXpub}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/utxo/{addressOrXpub}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/sendtx/{hex}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/sendtx/{hex}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/sendtx.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/sendtx",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tickers-list.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tickers-list",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tickers.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tickers",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/balancehistory/{addressOrXpub}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/balancehistory/{addressOrXpub}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/rawblock/{blockHashOrHeight}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/rawblock/{blockHashOrHeight}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/estimatefee/{confirmationTarget}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/estimatefee/{confirmationTarget}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/mempool.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/mempool",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/nft/{nftContract}/{nftTokenId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/nft/{nftContract}/{nftTokenId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/rpc.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/rpc",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/rpc/{rpcMethod}/{rpcParams}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/rpc/{rpcMethod}/{rpcParams}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 6 absolute http references: [(('servers', 1, 'url'), 'url', 'https://chain49.p.rapidapi.com'), (('servers', 0, 'url'), 'url', 'https://api.chain49.com'), (('info', 'termsOfService'), 'termsOfService', 'https://chain49.com/terms-and-conditions'), (('info', 'x-logo', 'url'), 'url', 'https://docs.chain49.com/slate/img/horizontal-colored.png'), (('info', 'license', 'url'), 'url', 'https://www.gnu.org/licenses/agpl-3.0.en.html'), (('info', 'contact', 'url'), 'url', 'https://chain49.com/')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "6"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'X-API-Key' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'X-RapidAPI-Key' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'X-RapidAPI-Host' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/block/{blockHashOrHeight}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/block/{blockHashOrHeight}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/block-index/{blockHeight}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/block-index/{blockHeight}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tx/{txId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `confirmationETABlocks`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Bitcoin-like (unconfirmed tx).value.confirmationETABlocks]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like (unconfirmed tx)",
        "value",
        "confirmationETABlocks"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `confirmationETASeconds`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Bitcoin-like (unconfirmed tx).value.confirmationETASeconds]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like (unconfirmed tx)",
        "value",
        "confirmationETASeconds"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokenTransfers`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Ethereum-like (confirmed).value.tokenTransfers]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (confirmed)",
        "value",
        "tokenTransfers"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `ethereumSpecific`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Ethereum-like (confirmed).value.ethereumSpecific]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (confirmed)",
        "value",
        "ethereumSpecific"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `addressAliases`. [path: paths./{blockchain}/v2/tx/{txId}.get.responses.200.content.application/json.examples.Ethereum-like (confirmed).value.addressAliases]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (confirmed)",
        "value",
        "addressAliases"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `hex`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.hex]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "hex"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txid`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.txid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "txid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `overwintered`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.overwintered]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "overwintered"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `version`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.version]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "version"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `versiongroupid`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.versiongroupid]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "versiongroupid"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `locktime`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.locktime]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "locktime"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `expiryheight`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.expiryheight]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "expiryheight"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vin`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vin]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vin"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vout`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vout]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vout"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vjoinsplit`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vjoinsplit]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vjoinsplit"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `valueBalance`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.valueBalance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "valueBalance"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vShieldedSpend`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vShieldedSpend]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vShieldedSpend"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `vShieldedOutput`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.vShieldedOutput]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "vShieldedOutput"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `bindingSig`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.bindingSig]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "bindingSig"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `blockhash`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.blockhash]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "blockhash"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `confirmations`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.confirmations]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "confirmations"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `time`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.time]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "time"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `blocktime`. [path: paths./{blockchain}/v2/tx-specific/{txId}.get.responses.200.content.application/json.examples.zCash.value.blocktime]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tx-specific/{txId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "zCash",
        "value",
        "blocktime"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/address/{address}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `page`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.page]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "page"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalPages`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.totalPages]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "totalPages"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `itemsOnPage`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.itemsOnPage]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "itemsOnPage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `address`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.address]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "address"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `balance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.balance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "balance"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalReceived`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.totalReceived]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "totalReceived"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalSent`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.totalSent]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "totalSent"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedBalance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.unconfirmedBalance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "unconfirmedBalance"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedTxs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.unconfirmedTxs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "unconfirmedTxs"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.txs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "txs"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txids`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Bitcoin-like, details set to \"txids\".value.txids]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Bitcoin-like, details set to \"txids\"",
        "value",
        "txids"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `address`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.address]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "address"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `balance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.balance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "balance"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedBalance`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.unconfirmedBalance]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "unconfirmedBalance"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `unconfirmedTxs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.unconfirmedTxs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "unconfirmedTxs"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `txs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.txs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "txs"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `nonTokenTxs`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.nonTokenTxs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "nonTokenTxs"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `nonce`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.nonce]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "nonce"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokens`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.tokens]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "tokens"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `secondaryValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.secondaryValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "secondaryValue"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokensBaseValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.tokensBaseValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "tokensBaseValue"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `tokensSecondaryValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.tokensSecondaryValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "tokensSecondaryValue"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalBaseValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.totalBaseValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "totalBaseValue"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: must NOT have unevaluated properties `totalSecondaryValue`. [path: paths./{blockchain}/v2/address/{address}.get.responses.200.content.application/json.examples.Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\").value.totalSecondaryValue]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/address/{address}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "Ethereum-like (details set to \"tokenBalances\", secondary set to \"usd\")",
        "value",
        "totalSecondaryValue"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/xpub/{xpub}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/xpub/{xpub}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/utxo/{addressOrXpub}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/utxo/{addressOrXpub}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/sendtx/{hex}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/sendtx/{hex}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/sendtx.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/sendtx",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tickers-list.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tickers-list",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/tickers.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/tickers",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/balancehistory/{addressOrXpub}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/balancehistory/{addressOrXpub}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/rawblock/{blockHashOrHeight}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/rawblock/{blockHashOrHeight}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/estimatefee/{confirmationTarget}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/estimatefee/{confirmationTarget}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/mempool.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/mempool",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/v2/nft/{nftContract}/{nftTokenId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/v2/nft/{nftContract}/{nftTokenId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/rpc.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/rpc",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./{blockchain}/rpc/{rpcMethod}/{rpcParams}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/{blockchain}/rpc/{rpcMethod}/{rpcParams}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]