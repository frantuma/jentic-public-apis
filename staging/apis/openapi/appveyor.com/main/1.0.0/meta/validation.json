[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 62 absolute http references: [(('externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/'), (('tags', 6, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/'), (('tags', 5, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/'), (('tags', 4, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/'), (('tags', 3, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/'), (('tags', 2, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/'), (('tags', 1, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/'), (('tags', 0, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/'), (('components', 'schemas', 'ProjectWithConfiguration', 'allOf', 1, 'properties', 'scheduleCrontabExpression', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/build-configuration/#scheduled-builds'), (('paths', '/users/{userId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-user'), (('paths', '/users/{userId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#delete-user'), (('paths', '/users', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#update-user'), (('paths', '/users', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-users'), (('paths', '/roles/{roleId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-role'), (('paths', '/roles/{roleId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#delete-role'), (('paths', '/roles', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#update-role'), (('paths', '/roles', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#add-role'), (('paths', '/roles', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-roles'), (('paths', '/projects/{accountName}/{projectSlug}/settings/yaml', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project-settings-in-yaml'), (('paths', '/projects/{accountName}/{projectSlug}/settings/yaml', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-settings-in-yaml'), (('paths', '/projects/{accountName}/{projectSlug}/settings/environment-variables', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project-environment-variables'), (('paths', '/projects/{accountName}/{projectSlug}/settings/environment-variables', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-environment-variables'), (('paths', '/projects/{accountName}/{projectSlug}/settings/build-number', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project-build-number'), (('paths', '/projects/{accountName}/{projectSlug}/settings', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-settings'), (('paths', '/projects/{accountName}/{projectSlug}/history', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-history'), (('paths', '/projects/{accountName}/{projectSlug}/deployments', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-deployments'), (('paths', '/projects/{accountName}/{projectSlug}/buildcache', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#delete-project-build-cache'), (('paths', '/projects/{accountName}/{projectSlug}/build/{buildVersion}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-build-by-version'), (('paths', '/projects/{accountName}/{projectSlug}/branch/{buildBranch}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-last-branch-build'), (('paths', '/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/packaging-artifacts/#permalink-to-the-last-successful-build-artifact'), (('paths', '/projects/{accountName}/{projectSlug}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-last-build'), (('paths', '/projects/{accountName}/{projectSlug}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#delete-project'), (('paths', '/projects/status/{statusBadgeId}/branch/{buildBranch}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/status-badges/'), (('paths', '/projects/status/{statusBadgeId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/status-badges/'), (('paths', '/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/status-badges/'), (('paths', '/projects', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project'), (('paths', '/projects', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#add-project'), (('paths', '/projects', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-projects'), (('paths', '/environments/{deploymentEnvironmentId}/settings', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-environment-settings'), (('paths', '/environments/{deploymentEnvironmentId}/deployments', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-environment-deployments'), (('paths', '/environments/{deploymentEnvironmentId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#delete-environment'), (('paths', '/environments', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#update-environment'), (('paths', '/environments', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#add-environment'), (('paths', '/environments', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-environments'), (('paths', '/deployments/{deploymentId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-deployment'), (('paths', '/deployments/stop', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#cancel-deployment'), (('paths', '/deployments', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#start-deployment'), (('paths', '/collaborators/{userId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-collaborator'), (('paths', '/collaborators/{userId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#delete-collaborator'), (('paths', '/collaborators', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#update-collaborator'), (('paths', '/collaborators', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-collaborators'), (('paths', '/builds/{accountName}/{projectSlug}/{buildVersion}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#cancel-build'), (('paths', '/builds', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#re-run-build'), (('paths', '/builds', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#start-build-of-branch-most-recent-commit'), (('paths', '/buildjobs/{jobId}/log', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#download-build-log'), (('paths', '/buildjobs/{jobId}/artifacts/{artifactFileName}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/samples/download-artifacts-advanced-ps/'), (('paths', '/buildjobs/{jobId}/artifacts', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/samples/download-artifacts-advanced-ps/'), (('servers', 0, 'url'), 'url', 'https://ci.appveyor.com/api'), (('info', 'termsOfService'), 'termsOfService', 'https://www.appveyor.com/terms-of-service/'), (('info', 'x-logo', 'url'), 'url', 'https://www.appveyor.com/assets/img/appveyor-logo-256.png'), (('info', 'license', 'url'), 'url', 'https://www.appveyor.com/eula/'), (('info', 'contact', 'url'), 'url', 'https://www.appveyor.com/about/')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "62"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'apiToken' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.0.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        0,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.1.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        1,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.5.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        5,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Paths should resolve unambiguously. Found two ambiguous paths: `/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}` and `/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}`. [path: paths./projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}]",
    "severity": 2,
    "code": "no-ambiguous-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Paths should resolve unambiguously. Found two ambiguous paths: `/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}` and `/projects/{accountName}/{projectSlug}/branch/{buildBranch}`. [path: paths./projects/{accountName}/{projectSlug}/branch/{buildBranch}]",
    "severity": 2,
    "code": "no-ambiguous-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/branch/{buildBranch}"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Paths should resolve unambiguously. Found two ambiguous paths: `/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}` and `/projects/{accountName}/{projectSlug}/build/{buildVersion}`. [path: paths./projects/{accountName}/{projectSlug}/build/{buildVersion}]",
    "severity": 2,
    "code": "no-ambiguous-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/build/{buildVersion}"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./account/encrypt.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account/encrypt",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./buildjobs/{jobId}/artifacts.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./buildjobs/{jobId}/artifacts/{artifactFileName}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts/{artifactFileName}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./buildjobs/{jobId}/log.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/log",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./builds.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./builds.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./builds/{accountName}/{projectSlug}/{buildVersion}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds/{accountName}/{projectSlug}/{buildVersion}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators/{userId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators/{userId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deployments.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorName`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.authorName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "authorName"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorUsername`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.authorUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "authorUsername"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `buildNumber`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.buildNumber]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "buildNumber"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `commitId`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.commitId]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "commitId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committed`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.committed]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "committed"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerName`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.committerName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "committerName"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerUsername`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.committerUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "committerUsername"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `created`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "created"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `finished`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.finished]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "finished"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `jobs`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.jobs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "jobs"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `messages`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.messages]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "messages"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `started`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.started]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "started"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `status`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.status]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `updated`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "updated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deployments/stop.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/stop",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deployments/{deploymentId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorName`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.authorName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "authorName"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorUsername`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.authorUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "authorUsername"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `buildNumber`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.buildNumber]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "buildNumber"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `commitId`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.commitId]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "commitId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committed`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.committed]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "committed"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerName`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.committerName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "committerName"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerUsername`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.committerUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "committerUsername"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `created`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "created"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `finished`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.finished]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "finished"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `jobs`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.jobs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "jobs"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `messages`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.messages]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "messages"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `started`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.started]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "started"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `status`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.status]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "status"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `updated`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "updated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments/{deploymentEnvironmentId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `accountId`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.accountId]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "accountId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `builds`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.builds]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "builds"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `created`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "created"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `isPrivate`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.isPrivate]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "isPrivate"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `repositoryName`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.repositoryName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "repositoryName"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `repositoryScm`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.repositoryScm]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "repositoryScm"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `repositoryType`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.repositoryType]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "repositoryType"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `securityDescriptor`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.securityDescriptor]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "securityDescriptor"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `skipBranchesWithoutAppveyorYml`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.skipBranchesWithoutAppveyorYml]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "skipBranchesWithoutAppveyorYml"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `updated`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "updated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments/{deploymentEnvironmentId}/settings.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/settings",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/status/{statusBadgeId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/status/{statusBadgeId}/branch/{buildBranch}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}/branch/{buildBranch}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/branch/{buildBranch}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/branch/{buildBranch}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/build/{buildVersion}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/build/{buildVersion}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/buildcache.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/buildcache",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/deployments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `environment` property must NOT have unevaluated properties `created`. [path: paths./projects/{accountName}/{projectSlug}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.environment.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "environment",
        "created"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `environment` property must NOT have unevaluated properties `updated`. [path: paths./projects/{accountName}/{projectSlug}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.environment.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "environment",
        "updated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/history.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/history",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property must have required property 'buildWorkerImageId'. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `name` property must be equal to one of the allowed values \"Previous Ubuntu\", \"Previous Ubuntu1604\", \"Previous Ubuntu1804\", \"Previous Visual Studio 2013\", \"Previous Visual Studio 2015\", \"Previous Visual Studio 2017\", \"Ubuntu\", \"Ubuntu1604\", \"Ubuntu1804\", \"Visual Studio 2013\", \"Visual Studio 2015\", \"Visual Studio 2015 2\", \"Visual Studio 2017\", \"Visual Studio 2017 Preview\", \"Visual Studio 2019 Preview\", \"WMF 5\", \"Windows Server 2019\". [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.0.name]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        0,
        "name"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `1` property must have required property 'buildWorkerImageId'. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.1]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `name` property must be equal to one of the allowed values \"Previous Ubuntu\", \"Previous Ubuntu1604\", \"Previous Ubuntu1804\", \"Previous Visual Studio 2013\", \"Previous Visual Studio 2015\", \"Previous Visual Studio 2017\", \"Ubuntu\", \"Ubuntu1604\", \"Ubuntu1804\", \"Visual Studio 2013\", \"Visual Studio 2015\", \"Visual Studio 2015 2\", \"Visual Studio 2017\", \"Visual Studio 2017 Preview\", \"Visual Studio 2019 Preview\", \"WMF 5\", \"Windows Server 2019\". [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.1.name]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        1,
        "name"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `2` property must have required property 'buildWorkerImageId'. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.2]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        2
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `name` property must be equal to one of the allowed values \"Previous Ubuntu\", \"Previous Ubuntu1604\", \"Previous Ubuntu1804\", \"Previous Visual Studio 2013\", \"Previous Visual Studio 2015\", \"Previous Visual Studio 2017\", \"Ubuntu\", \"Ubuntu1604\", \"Ubuntu1804\", \"Visual Studio 2013\", \"Visual Studio 2015\", \"Visual Studio 2015 2\", \"Visual Studio 2017\", \"Visual Studio 2017 Preview\", \"Visual Studio 2019 Preview\", \"WMF 5\", \"Windows Server 2019\". [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.2.name]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        2,
        "name"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/build-number.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/build-number",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles/{roleId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 29,
        "character": 13
      },
      "end": {
        "line": 74,
        "character": 60
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./account/encrypt.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account/encrypt",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 83,
        "character": 12
      },
      "end": {
        "line": 136,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./buildjobs/{jobId}/artifacts.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 148,
        "character": 12
      },
      "end": {
        "line": 170,
        "character": 44
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./buildjobs/{jobId}/artifacts/{artifactFileName}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts/{artifactFileName}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 179,
        "character": 12
      },
      "end": {
        "line": 201,
        "character": 39
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./buildjobs/{jobId}/log.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/log",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 205,
        "character": 13
      },
      "end": {
        "line": 264,
        "character": 61
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./builds.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 341,
        "character": 15
      },
      "end": {
        "line": 357,
        "character": 33
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./builds/{accountName}/{projectSlug}/{buildVersion}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds/{accountName}/{projectSlug}/{buildVersion}",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 361,
        "character": 12
      },
      "end": {
        "line": 417,
        "character": 38
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 419,
        "character": 12
      },
      "end": {
        "line": 445,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 454,
        "character": 15
      },
      "end": {
        "line": 470,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators/{userId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 472,
        "character": 12
      },
      "end": {
        "line": 543,
        "character": 37
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators/{userId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 547,
        "character": 13
      },
      "end": {
        "line": 636,
        "character": 37
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./deployments.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 640,
        "character": 12
      },
      "end": {
        "line": 666,
        "character": 38
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./deployments/stop.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/stop",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 675,
        "character": 12
      },
      "end": {
        "line": 772,
        "character": 35
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./deployments/{deploymentId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 776,
        "character": 12
      },
      "end": {
        "line": 826,
        "character": 37
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 828,
        "character": 13
      },
      "end": {
        "line": 911,
        "character": 36
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 913,
        "character": 12
      },
      "end": {
        "line": 997,
        "character": 39
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1006,
        "character": 15
      },
      "end": {
        "line": 1022,
        "character": 39
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments/{deploymentEnvironmentId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1031,
        "character": 12
      },
      "end": {
        "line": 1140,
        "character": 48
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments/{deploymentEnvironmentId}/deployments.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1149,
        "character": 12
      },
      "end": {
        "line": 1230,
        "character": 45
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments/{deploymentEnvironmentId}/settings.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/settings",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1234,
        "character": 12
      },
      "end": {
        "line": 1316,
        "character": 33
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1318,
        "character": 13
      },
      "end": {
        "line": 1374,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1376,
        "character": 12
      },
      "end": {
        "line": 1402,
        "character": 35
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1417,
        "character": 12
      },
      "end": {
        "line": 1460,
        "character": 82
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1469,
        "character": 12
      },
      "end": {
        "line": 1509,
        "character": 51
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/status/{statusBadgeId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1521,
        "character": 12
      },
      "end": {
        "line": 1561,
        "character": 58
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/status/{statusBadgeId}/branch/{buildBranch}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}/branch/{buildBranch}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1573,
        "character": 15
      },
      "end": {
        "line": 1589,
        "character": 35
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1591,
        "character": 12
      },
      "end": {
        "line": 1688,
        "character": 43
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1756,
        "character": 12
      },
      "end": {
        "line": 1853,
        "character": 50
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/branch/{buildBranch}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/branch/{buildBranch}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1868,
        "character": 12
      },
      "end": {
        "line": 1965,
        "character": 49
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/build/{buildVersion}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/build/{buildVersion}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1977,
        "character": 15
      },
      "end": {
        "line": 1993,
        "character": 47
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/buildcache.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/buildcache",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2008,
        "character": 12
      },
      "end": {
        "line": 2126,
        "character": 44
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/deployments.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2138,
        "character": 12
      },
      "end": {
        "line": 2240,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/history.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/history",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2252,
        "character": 12
      },
      "end": {
        "line": 2513,
        "character": 41
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2261,
        "character": 24
      },
      "end": {
        "line": 2262,
        "character": 51
      }
    },
    "message": "\"0\" property must have required property \"buildWorkerImageId\" [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2525,
        "character": 12
      },
      "end": {
        "line": 2551,
        "character": 48
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/build-number.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/build-number",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2563,
        "character": 12
      },
      "end": {
        "line": 2617,
        "character": 54
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2619,
        "character": 12
      },
      "end": {
        "line": 2648,
        "character": 57
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2660,
        "character": 12
      },
      "end": {
        "line": 2698,
        "character": 49
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2700,
        "character": 12
      },
      "end": {
        "line": 2734,
        "character": 52
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2738,
        "character": 12
      },
      "end": {
        "line": 2790,
        "character": 30
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2792,
        "character": 13
      },
      "end": {
        "line": 2830,
        "character": 29
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2832,
        "character": 12
      },
      "end": {
        "line": 2870,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2879,
        "character": 15
      },
      "end": {
        "line": 2895,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles/{roleId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2897,
        "character": 12
      },
      "end": {
        "line": 3042,
        "character": 29
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles/{roleId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2928,
        "character": 38
      },
      "end": {
        "line": 2928,
        "character": 59
      }
    },
    "message": "\"name\" property must be equal to one of the allowed values: \"ManageApplicationAuthorizations\", \"UpdateAccountDetails\", \"UpdateBillingDetails\", \"ConfigureBuildEnvironment\", \"DenyAllProjectsEnvironments\", \"DeployToEnvironment\", \"ManageEnvironments\", \"UpdateEnvironmentSettings\", \"ManageProjects\", \"RunProjectBuild\", \"UpdateProjectSettings\", \"AddRole\", \"DeleteRole\", \"UpdateRoleDetails\", \"ConfigureApiKeys\", \"AddUser\", \"DeleteUser\", \"UpdateUserDetails\". Did you mean \"RunProjectBuild\"? [path: paths./roles/{roleId}.get.responses.200.content.application/json.examples.response.value.groups.0.permissions.3.name]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "groups",
        "0",
        "permissions",
        "3",
        "name"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3046,
        "character": 12
      },
      "end": {
        "line": 3163,
        "character": 33
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./user/join-account.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user/join-account",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3167,
        "character": 12
      },
      "end": {
        "line": 3223,
        "character": 30
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3225,
        "character": 12
      },
      "end": {
        "line": 3251,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users",
        "put"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3255,
        "character": 12
      },
      "end": {
        "line": 3301,
        "character": 41
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/invitations.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/invitations",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3303,
        "character": 13
      },
      "end": {
        "line": 3326,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/invitations.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/invitations",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3335,
        "character": 15
      },
      "end": {
        "line": 3348,
        "character": 43
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/invitations/{userInvitationId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/invitations/{userInvitationId}",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3357,
        "character": 15
      },
      "end": {
        "line": 3373,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/{userId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/{userId}",
        "delete"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3375,
        "character": 12
      },
      "end": {
        "line": 3439,
        "character": 29
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/{userId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/{userId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5070,
        "character": 31
      },
      "end": {
        "line": 5070,
        "character": 73
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Project.allOf.2.properties.nuGetFeed.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Project",
        "allOf",
        "2",
        "properties",
        "nuGetFeed",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5099,
        "character": 31
      },
      "end": {
        "line": 5099,
        "character": 164
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Project.allOf.2.properties.securityDescriptor.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Project",
        "allOf",
        "2",
        "properties",
        "securityDescriptor",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6563,
        "character": 28
      },
      "end": {
        "line": 6594,
        "character": 24
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.UserAccountSettings]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserAccountSettings"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 62 absolute http references: [(('externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/'), (('tags', 6, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/'), (('tags', 5, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/'), (('tags', 4, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/'), (('tags', 3, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/'), (('tags', 2, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/'), (('tags', 1, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/'), (('tags', 0, 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/'), (('components', 'schemas', 'ProjectWithConfiguration', 'allOf', 1, 'properties', 'scheduleCrontabExpression', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/build-configuration/#scheduled-builds'), (('paths', '/users/{userId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-user'), (('paths', '/users/{userId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#delete-user'), (('paths', '/users', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#update-user'), (('paths', '/users', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-users'), (('paths', '/roles/{roleId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-role'), (('paths', '/roles/{roleId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#delete-role'), (('paths', '/roles', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#update-role'), (('paths', '/roles', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#add-role'), (('paths', '/roles', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-roles'), (('paths', '/projects/{accountName}/{projectSlug}/settings/yaml', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project-settings-in-yaml'), (('paths', '/projects/{accountName}/{projectSlug}/settings/yaml', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-settings-in-yaml'), (('paths', '/projects/{accountName}/{projectSlug}/settings/environment-variables', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project-environment-variables'), (('paths', '/projects/{accountName}/{projectSlug}/settings/environment-variables', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-environment-variables'), (('paths', '/projects/{accountName}/{projectSlug}/settings/build-number', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project-build-number'), (('paths', '/projects/{accountName}/{projectSlug}/settings', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-settings'), (('paths', '/projects/{accountName}/{projectSlug}/history', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-history'), (('paths', '/projects/{accountName}/{projectSlug}/deployments', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-deployments'), (('paths', '/projects/{accountName}/{projectSlug}/buildcache', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#delete-project-build-cache'), (('paths', '/projects/{accountName}/{projectSlug}/build/{buildVersion}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-build-by-version'), (('paths', '/projects/{accountName}/{projectSlug}/branch/{buildBranch}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-last-branch-build'), (('paths', '/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/packaging-artifacts/#permalink-to-the-last-successful-build-artifact'), (('paths', '/projects/{accountName}/{projectSlug}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-project-last-build'), (('paths', '/projects/{accountName}/{projectSlug}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#delete-project'), (('paths', '/projects/status/{statusBadgeId}/branch/{buildBranch}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/status-badges/'), (('paths', '/projects/status/{statusBadgeId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/status-badges/'), (('paths', '/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/status-badges/'), (('paths', '/projects', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#update-project'), (('paths', '/projects', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#add-project'), (('paths', '/projects', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#get-projects'), (('paths', '/environments/{deploymentEnvironmentId}/settings', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-environment-settings'), (('paths', '/environments/{deploymentEnvironmentId}/deployments', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-environment-deployments'), (('paths', '/environments/{deploymentEnvironmentId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#delete-environment'), (('paths', '/environments', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#update-environment'), (('paths', '/environments', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#add-environment'), (('paths', '/environments', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-environments'), (('paths', '/deployments/{deploymentId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#get-deployment'), (('paths', '/deployments/stop', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#cancel-deployment'), (('paths', '/deployments', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/environments-deployments/#start-deployment'), (('paths', '/collaborators/{userId}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-collaborator'), (('paths', '/collaborators/{userId}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#delete-collaborator'), (('paths', '/collaborators', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#update-collaborator'), (('paths', '/collaborators', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/team/#get-collaborators'), (('paths', '/builds/{accountName}/{projectSlug}/{buildVersion}', 'delete', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#cancel-build'), (('paths', '/builds', 'put', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#re-run-build'), (('paths', '/builds', 'post', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#start-build-of-branch-most-recent-commit'), (('paths', '/buildjobs/{jobId}/log', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/projects-builds/#download-build-log'), (('paths', '/buildjobs/{jobId}/artifacts/{artifactFileName}', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/samples/download-artifacts-advanced-ps/'), (('paths', '/buildjobs/{jobId}/artifacts', 'get', 'externalDocs', 'url'), 'url', 'https://www.appveyor.com/docs/api/samples/download-artifacts-advanced-ps/'), (('servers', 0, 'url'), 'url', 'https://ci.appveyor.com/api'), (('info', 'termsOfService'), 'termsOfService', 'https://www.appveyor.com/terms-of-service/'), (('info', 'x-logo', 'url'), 'url', 'https://www.appveyor.com/assets/img/appveyor-logo-256.png'), (('info', 'license', 'url'), 'url', 'https://www.appveyor.com/eula/'), (('info', 'contact', 'url'), 'url', 'https://www.appveyor.com/about/')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "62"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'apiToken' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.0.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        0,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.1.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        1,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.5.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        5,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Paths should resolve unambiguously. Found two ambiguous paths: `/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}` and `/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}`. [path: paths./projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}]",
    "severity": 2,
    "code": "no-ambiguous-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Paths should resolve unambiguously. Found two ambiguous paths: `/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}` and `/projects/{accountName}/{projectSlug}/branch/{buildBranch}`. [path: paths./projects/{accountName}/{projectSlug}/branch/{buildBranch}]",
    "severity": 2,
    "code": "no-ambiguous-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/branch/{buildBranch}"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Paths should resolve unambiguously. Found two ambiguous paths: `/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}` and `/projects/{accountName}/{projectSlug}/build/{buildVersion}`. [path: paths./projects/{accountName}/{projectSlug}/build/{buildVersion}]",
    "severity": 2,
    "code": "no-ambiguous-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/build/{buildVersion}"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./account/encrypt.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account/encrypt",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./buildjobs/{jobId}/artifacts.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./buildjobs/{jobId}/artifacts/{artifactFileName}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts/{artifactFileName}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./buildjobs/{jobId}/log.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/log",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./builds.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./builds.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./builds/{accountName}/{projectSlug}/{buildVersion}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds/{accountName}/{projectSlug}/{buildVersion}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators/{userId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./collaborators/{userId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deployments.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorName`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.authorName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "authorName"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorUsername`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.authorUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "authorUsername"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `buildNumber`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.buildNumber]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "buildNumber"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `commitId`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.commitId]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "commitId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committed`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.committed]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "committed"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerName`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.committerName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "committerName"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerUsername`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.committerUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "committerUsername"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `created`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "created"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `finished`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.finished]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "finished"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `jobs`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.jobs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "jobs"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `messages`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.messages]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "messages"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `started`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.started]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "started"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `status`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.status]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `updated`. [path: paths./deployments.post.responses.200.content.application/json.examples.response.value.build.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "build",
        "updated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deployments/stop.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/stop",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deployments/{deploymentId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorName`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.authorName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "authorName"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `authorUsername`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.authorUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "authorUsername"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `buildNumber`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.buildNumber]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "buildNumber"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `commitId`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.commitId]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "commitId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committed`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.committed]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "committed"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerName`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.committerName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "committerName"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `committerUsername`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.committerUsername]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "committerUsername"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `created`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "created"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `finished`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.finished]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "finished"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `jobs`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.jobs]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "jobs"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `messages`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.messages]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "messages"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `started`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.started]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "started"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `status`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.status]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "status"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `build` property must NOT have unevaluated properties `updated`. [path: paths./deployments/{deploymentId}.get.responses.200.content.application/json.examples.response.value.deployment.build.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployment",
        "build",
        "updated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments/{deploymentEnvironmentId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `accountId`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.accountId]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "accountId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `builds`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.builds]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "builds"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `created`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "created"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `isPrivate`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.isPrivate]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "isPrivate"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `repositoryName`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.repositoryName]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "repositoryName"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `repositoryScm`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.repositoryScm]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "repositoryScm"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `repositoryType`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.repositoryType]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "repositoryType"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `securityDescriptor`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.securityDescriptor]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "securityDescriptor"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `skipBranchesWithoutAppveyorYml`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.skipBranchesWithoutAppveyorYml]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "skipBranchesWithoutAppveyorYml"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `project` property must NOT have unevaluated properties `updated`. [path: paths./environments/{deploymentEnvironmentId}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.project.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "project",
        "updated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./environments/{deploymentEnvironmentId}/settings.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/settings",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/status/{statusBadgeId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/status/{statusBadgeId}/branch/{buildBranch}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}/branch/{buildBranch}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/branch/{buildBranch}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/branch/{buildBranch}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/build/{buildVersion}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/build/{buildVersion}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/buildcache.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/buildcache",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/deployments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `environment` property must NOT have unevaluated properties `created`. [path: paths./projects/{accountName}/{projectSlug}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.environment.created]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "environment",
        "created"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `environment` property must NOT have unevaluated properties `updated`. [path: paths./projects/{accountName}/{projectSlug}/deployments.get.responses.200.content.application/json.examples.response.value.deployments.0.environment.updated]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "deployments",
        0,
        "environment",
        "updated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/history.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/history",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `0` property must have required property 'buildWorkerImageId'. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.0]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `name` property must be equal to one of the allowed values \"Previous Ubuntu\", \"Previous Ubuntu1604\", \"Previous Ubuntu1804\", \"Previous Visual Studio 2013\", \"Previous Visual Studio 2015\", \"Previous Visual Studio 2017\", \"Ubuntu\", \"Ubuntu1604\", \"Ubuntu1804\", \"Visual Studio 2013\", \"Visual Studio 2015\", \"Visual Studio 2015 2\", \"Visual Studio 2017\", \"Visual Studio 2017 Preview\", \"Visual Studio 2019 Preview\", \"WMF 5\", \"Windows Server 2019\". [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.0.name]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        0,
        "name"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `1` property must have required property 'buildWorkerImageId'. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.1]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `name` property must be equal to one of the allowed values \"Previous Ubuntu\", \"Previous Ubuntu1604\", \"Previous Ubuntu1804\", \"Previous Visual Studio 2013\", \"Previous Visual Studio 2015\", \"Previous Visual Studio 2017\", \"Ubuntu\", \"Ubuntu1604\", \"Ubuntu1804\", \"Visual Studio 2013\", \"Visual Studio 2015\", \"Visual Studio 2015 2\", \"Visual Studio 2017\", \"Visual Studio 2017 Preview\", \"Visual Studio 2019 Preview\", \"WMF 5\", \"Windows Server 2019\". [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.1.name]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        1,
        "name"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `2` property must have required property 'buildWorkerImageId'. [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.2]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        2
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `name` property must be equal to one of the allowed values \"Previous Ubuntu\", \"Previous Ubuntu1604\", \"Previous Ubuntu1804\", \"Previous Visual Studio 2013\", \"Previous Visual Studio 2015\", \"Previous Visual Studio 2017\", \"Ubuntu\", \"Ubuntu1604\", \"Ubuntu1804\", \"Visual Studio 2013\", \"Visual Studio 2015\", \"Visual Studio 2015 2\", \"Visual Studio 2017\", \"Visual Studio 2017 Preview\", \"Visual Studio 2019 Preview\", \"WMF 5\", \"Windows Server 2019\". [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.2.name]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        2,
        "name"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/build-number.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/build-number",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./roles/{roleId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 29,
        "character": 13
      },
      "end": {
        "line": 74,
        "character": 60
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./account/encrypt.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account/encrypt",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 83,
        "character": 12
      },
      "end": {
        "line": 136,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./buildjobs/{jobId}/artifacts.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 148,
        "character": 12
      },
      "end": {
        "line": 170,
        "character": 44
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./buildjobs/{jobId}/artifacts/{artifactFileName}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/artifacts/{artifactFileName}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 179,
        "character": 12
      },
      "end": {
        "line": 201,
        "character": 39
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./buildjobs/{jobId}/log.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/buildjobs/{jobId}/log",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 205,
        "character": 13
      },
      "end": {
        "line": 264,
        "character": 61
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./builds.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 341,
        "character": 15
      },
      "end": {
        "line": 357,
        "character": 33
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./builds/{accountName}/{projectSlug}/{buildVersion}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/builds/{accountName}/{projectSlug}/{buildVersion}",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 361,
        "character": 12
      },
      "end": {
        "line": 417,
        "character": 38
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 419,
        "character": 12
      },
      "end": {
        "line": 445,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 454,
        "character": 15
      },
      "end": {
        "line": 470,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators/{userId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 472,
        "character": 12
      },
      "end": {
        "line": 543,
        "character": 37
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./collaborators/{userId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/collaborators/{userId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 547,
        "character": 13
      },
      "end": {
        "line": 636,
        "character": 37
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./deployments.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 640,
        "character": 12
      },
      "end": {
        "line": 666,
        "character": 38
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./deployments/stop.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/stop",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 675,
        "character": 12
      },
      "end": {
        "line": 772,
        "character": 35
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./deployments/{deploymentId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deployments/{deploymentId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 776,
        "character": 12
      },
      "end": {
        "line": 826,
        "character": 37
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 828,
        "character": 13
      },
      "end": {
        "line": 911,
        "character": 36
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 913,
        "character": 12
      },
      "end": {
        "line": 997,
        "character": 39
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1006,
        "character": 15
      },
      "end": {
        "line": 1022,
        "character": 39
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments/{deploymentEnvironmentId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1031,
        "character": 12
      },
      "end": {
        "line": 1140,
        "character": 48
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments/{deploymentEnvironmentId}/deployments.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/deployments",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1149,
        "character": 12
      },
      "end": {
        "line": 1230,
        "character": 45
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./environments/{deploymentEnvironmentId}/settings.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/environments/{deploymentEnvironmentId}/settings",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1234,
        "character": 12
      },
      "end": {
        "line": 1316,
        "character": 33
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1318,
        "character": 13
      },
      "end": {
        "line": 1374,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1376,
        "character": 12
      },
      "end": {
        "line": 1402,
        "character": 35
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1417,
        "character": 12
      },
      "end": {
        "line": 1460,
        "character": 82
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1469,
        "character": 12
      },
      "end": {
        "line": 1509,
        "character": 51
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/status/{statusBadgeId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1521,
        "character": 12
      },
      "end": {
        "line": 1561,
        "character": 58
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/status/{statusBadgeId}/branch/{buildBranch}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/status/{statusBadgeId}/branch/{buildBranch}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1573,
        "character": 15
      },
      "end": {
        "line": 1589,
        "character": 35
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1591,
        "character": 12
      },
      "end": {
        "line": 1688,
        "character": 43
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1756,
        "character": 12
      },
      "end": {
        "line": 1853,
        "character": 50
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/branch/{buildBranch}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/branch/{buildBranch}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1868,
        "character": 12
      },
      "end": {
        "line": 1965,
        "character": 49
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/build/{buildVersion}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/build/{buildVersion}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1977,
        "character": 15
      },
      "end": {
        "line": 1993,
        "character": 47
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/buildcache.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/buildcache",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2008,
        "character": 12
      },
      "end": {
        "line": 2126,
        "character": 44
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/deployments.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/deployments",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2138,
        "character": 12
      },
      "end": {
        "line": 2240,
        "character": 40
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/history.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/history",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2252,
        "character": 12
      },
      "end": {
        "line": 2513,
        "character": 41
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2261,
        "character": 24
      },
      "end": {
        "line": 2262,
        "character": 51
      }
    },
    "message": "\"0\" property must have required property \"buildWorkerImageId\" [path: paths./projects/{accountName}/{projectSlug}/settings.get.responses.200.content.application/json.examples.response.value.images.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "images",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2525,
        "character": 12
      },
      "end": {
        "line": 2551,
        "character": 48
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/build-number.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/build-number",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2563,
        "character": 12
      },
      "end": {
        "line": 2617,
        "character": 54
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2619,
        "character": 12
      },
      "end": {
        "line": 2648,
        "character": 57
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/environment-variables.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/environment-variables",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2660,
        "character": 12
      },
      "end": {
        "line": 2698,
        "character": 49
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2700,
        "character": 12
      },
      "end": {
        "line": 2734,
        "character": 52
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./projects/{accountName}/{projectSlug}/settings/yaml.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/projects/{accountName}/{projectSlug}/settings/yaml",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2738,
        "character": 12
      },
      "end": {
        "line": 2790,
        "character": 30
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2792,
        "character": 13
      },
      "end": {
        "line": 2830,
        "character": 29
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2832,
        "character": 12
      },
      "end": {
        "line": 2870,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2879,
        "character": 15
      },
      "end": {
        "line": 2895,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles/{roleId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2897,
        "character": 12
      },
      "end": {
        "line": 3042,
        "character": 29
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./roles/{roleId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2928,
        "character": 38
      },
      "end": {
        "line": 2928,
        "character": 59
      }
    },
    "message": "\"name\" property must be equal to one of the allowed values: \"ManageApplicationAuthorizations\", \"UpdateAccountDetails\", \"UpdateBillingDetails\", \"ConfigureBuildEnvironment\", \"DenyAllProjectsEnvironments\", \"DeployToEnvironment\", \"ManageEnvironments\", \"UpdateEnvironmentSettings\", \"ManageProjects\", \"RunProjectBuild\", \"UpdateProjectSettings\", \"AddRole\", \"DeleteRole\", \"UpdateRoleDetails\", \"ConfigureApiKeys\", \"AddUser\", \"DeleteUser\", \"UpdateUserDetails\". Did you mean \"RunProjectBuild\"? [path: paths./roles/{roleId}.get.responses.200.content.application/json.examples.response.value.groups.0.permissions.3.name]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/roles/{roleId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "examples",
        "response",
        "value",
        "groups",
        "0",
        "permissions",
        "3",
        "name"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3046,
        "character": 12
      },
      "end": {
        "line": 3163,
        "character": 33
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./user/join-account.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/user/join-account",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3167,
        "character": 12
      },
      "end": {
        "line": 3223,
        "character": 30
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3225,
        "character": 12
      },
      "end": {
        "line": 3251,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users.put]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users",
        "put"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3255,
        "character": 12
      },
      "end": {
        "line": 3301,
        "character": 41
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/invitations.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/invitations",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3303,
        "character": 13
      },
      "end": {
        "line": 3326,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/invitations.post]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/invitations",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3335,
        "character": 15
      },
      "end": {
        "line": 3348,
        "character": 43
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/invitations/{userInvitationId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/invitations/{userInvitationId}",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3357,
        "character": 15
      },
      "end": {
        "line": 3373,
        "character": 32
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/{userId}.delete]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/{userId}",
        "delete"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3375,
        "character": 12
      },
      "end": {
        "line": 3439,
        "character": 29
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./users/{userId}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/{userId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5070,
        "character": 31
      },
      "end": {
        "line": 5070,
        "character": 73
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Project.allOf.2.properties.nuGetFeed.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Project",
        "allOf",
        "2",
        "properties",
        "nuGetFeed",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5099,
        "character": 31
      },
      "end": {
        "line": 5099,
        "character": 164
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Project.allOf.2.properties.securityDescriptor.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Project",
        "allOf",
        "2",
        "properties",
        "securityDescriptor",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6563,
        "character": 28
      },
      "end": {
        "line": 6594,
        "character": 24
      }
    },
    "message": "Potentially unused component has been detected. [path: components.schemas.UserAccountSettings]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserAccountSettings"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]