{
  "openapi": "3.0.0",
  "info": {
    "title": "Billingo API v3",
    "description": "This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.",
    "termsOfService": "https://www.billingo.hu/felhasznalasi-feltetelek",
    "contact": {
      "name": "Billingo Support",
      "url": "https://www.billingo.hu/kapcsolat",
      "email": "hello@billingo.hu"
    },
    "version": "3.0.7",
    "x-jentic-source-url": "https://api.swaggerhub.com/apis/Billingo/Billingo/3.0.7"
  },
  "servers": [
    {
      "url": "https://api.billingo.hu/v3",
      "description": "Billingo API"
    }
  ],
  "paths": {
    "/bank-accounts": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "summary": "List all bank account",
        "description": "Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recent bank account appearing first.",
        "operationId": "ListBankAccount",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Create a bank account",
        "description": "Create a new bank account. Returns a bank account object if the create is succeded.",
        "operationId": "CreateBankAccount",
        "requestBody": {
          "description": "BankAccount object that you would like to store.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "BankAccount created successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/bank-accounts/{id}": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Retrieve a bank account",
        "description": "Retrieves the details of an existing bank account.",
        "operationId": "GetBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Update a bank account",
        "description": "Update an existing bank accounts. Returns a bank account object if the update is succeded.",
        "operationId": "UpdateBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Bank account object that you would like to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bank account updated successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Delete a bank account",
        "description": "Delete an existing bank account.",
        "operationId": "DeleteBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Bank account deleted successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get currencies exchange rate.",
        "description": "Return with the exchange value of given currencies.",
        "operationId": "GetConversionRate",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currencies exchange rate returned.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationRate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/document-blocks": {
      "get": {
        "tags": [
          "DocumentBlock"
        ],
        "summary": "List all document blocks",
        "description": "Returns a list of your document blocks. The document blocks are returned sorted by creation date, with the most recent document blocks appearing first.",
        "operationId": "ListDocumentBlock",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBlockList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/documents": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "List all documents",
        "description": "Returns a list of your documents. The documents are returned sorted by creation date, with the most recent documents appearing first.",
        "operationId": "ListDocument",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "block_id",
            "in": "query",
            "description": "Filter documents by the identifier of your DocumentBlock.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "description": "Filter documents by the identifier of your Partner.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "payment_method",
            "in": "query",
            "description": "Filter documents by PaymentMethod value.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PaymentMethod"
            },
            "example": "cash"
          },
          {
            "name": "payment_status",
            "in": "query",
            "description": "Filter documents by PaymentStatus value.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PaymentStatus"
            },
            "example": "paid"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter documents by date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-05-15"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter documents by date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-05-15"
          },
          {
            "name": "start_number",
            "in": "query",
            "description": "Starting number of the document, should not contain year or any other formatting. Required if `start_year` given",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": "1"
          },
          {
            "name": "end_number",
            "in": "query",
            "description": "Ending number of the document, should not contain year or any other formatting. Required if `end_year` given",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": "10"
          },
          {
            "name": "start_year",
            "in": "query",
            "description": "Year for `start_number` parameter. Required if `start_number` given.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": "2020"
          },
          {
            "name": "end_year",
            "in": "query",
            "description": "Year for `end_number` parameter. Required if `end_number` given.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": "2020"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Create a document",
        "description": "Create a new document. Returns a document object if the create is succeded.",
        "operationId": "CreateDocument",
        "requestBody": {
          "description": "DocumentInsert object that you would like to store.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInsert"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document created successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/documents/{id}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Retrieve a document",
        "description": "Retrieves the details of an existing document.",
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/documents/{id}/cancel": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Cancel a document",
        "description": "Cancel a document. Returns a cancellation document object if the cancellation is succeded.",
        "operationId": "CancelDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document cancellation successfully. Cancel document returned.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/documents/{id}/create-from-proforma": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Create a document from proforma.",
        "description": "Create a new document from proforma. Returns a document object if the create is succeded.",
        "operationId": "CreateDocumentFromProforma",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Document created successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/documents/{id}/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Download a document in PDF format.",
        "description": "Download a document. Returns a document in PDF format.",
        "operationId": "DownloadDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document PDF file.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "202": {
            "description": "Document PDF has not generated yet. You should try to download again later.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/documents/{id}/online-szamla": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Retrieve a document Online Sz\u00e1mla status",
        "description": "Retrieves the details of an existing document status.",
        "operationId": "GetOnlineSzamlaStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineSzamlaStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/documents/{id}/payments": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Retrieve a payment histroy",
        "description": "Retrieves the details of payment history an existing document.",
        "operationId": "GetPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentHistory"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Document"
        ],
        "summary": "Update payment history",
        "description": "Update payment history an existing document. Returns a payment history object if the update is succeded.",
        "operationId": "UpdatePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Payment history object that you would like to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentHistory"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment history updated successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentHistory"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete all payment history on document",
        "description": "Delete all exist payment history on document.",
        "operationId": "DeletePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment history deleted successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentHistory"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/documents/{id}/public-url": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Retrieve a document download public url.",
        "description": "Retrieves public url to download an existing document.",
        "operationId": "GetPublicUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentPublicUrl"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/documents/{id}/send": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Send invoice to given email adresses.",
        "description": "Returns a list of emails, where the invoice is sent.",
        "operationId": "SendDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "List of email-s where you want to send the invoice.",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of email adresses where the invoice sent.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendDocument"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Retrieve a organization data.",
        "description": "Retrieves the data of organization.",
        "operationId": "GetOrganizationData",
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationData"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/partners": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "List all partners",
        "description": "Returns a list of your partners. The partners are returned sorted by creation date, with the most recent partners appearing first.",
        "operationId": "ListPartner",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Partner"
        ],
        "summary": "Create a partner",
        "description": "Create a new partner. Returns a partner object if the create is succeded.",
        "operationId": "CreatePartner",
        "requestBody": {
          "description": "PartnerUpsert object that you would like to store.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUpsert"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Partner created successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/partners/{id}": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "Retrieve a partner",
        "description": "Retrieves the details of an existing partner.",
        "operationId": "GetPartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Update a partner",
        "description": "Update an existing partner. Returns a partner object if the update is succeded.",
        "operationId": "UpdatePartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Partner object that you would like to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUpsert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Partner updated successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Partner"
        ],
        "summary": "Delete a partner",
        "description": "Delete an existing partner.",
        "operationId": "DeletePartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Partner deleted successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List all product",
        "description": "Returns a list of your products. The partners are returned sorted by creation date, with the most recent partners appearing first.",
        "operationId": "ListProduct",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a product",
        "description": "Create a new product. Returns a product object if the create is succeded.",
        "operationId": "CreateProduct",
        "requestBody": {
          "description": "Product object that you would like to store.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Retrieve a product",
        "description": "Retrieves the details of an existing product.",
        "operationId": "GetProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a product",
        "description": "Update an existing product. Returns a product object if the update is succeded.",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Product object that you would like to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a product",
        "description": "Delete an existing product.",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/utils/convert-legacy-id/{id}": {
      "get": {
        "tags": [
          "Util"
        ],
        "summary": "Convert legacy ID to v3 ID.",
        "description": "Retrieves the API v3 ID.",
        "operationId": "GetId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per minute.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests left for the time window.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-RateLimit-Reset": {
                "description": "The timestamp at which the current rate limit window resets.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "Retry-After": {
                "description": "How many seconds you have to wait before making new request.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Id"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClientErrorResponse": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ClientError"
          }
        },
        "type": "object",
        "example": {
          "error": {
            "message": "Authorization information (Header: %s) is missing or invalid."
          }
        }
      },
      "ServerErrorResponse": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ServerError"
          }
        },
        "type": "object",
        "example": {
          "error": {
            "message": "Internal Server Error.",
            "trace_id": "664b218f93954a3480cb0ddb8f919c3f"
          }
        }
      },
      "ValidationErrorResponse": {
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "type": "object"
      },
      "ClientError": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerError": {
        "properties": {
          "message": {
            "type": "string"
          },
          "trace_id": {
            "description": "You should send us this ID to investigate the issue.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BankAccount": {
        "required": [
          "name",
          "account_number",
          "currency"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          },
          "account_number_iban": {
            "type": "string"
          },
          "swift": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "need_qr": {
            "type": "boolean",
            "default": "false"
          }
        },
        "type": "object"
      },
      "BankAccountList": {
        "description": "A object with a data property that contains an array of up to limit bank accounts. Each entry in the array is a separate bank account object. If no more bank accounts are available, the resulting array will be empty.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          },
          "total": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "current_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string"
          },
          "next_page_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Address": {
        "required": [
          "country_code",
          "post_code",
          "city",
          "address"
        ],
        "properties": {
          "country_code": {
            "$ref": "#/components/schemas/Country"
          },
          "post_code": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Country": {
        "type": "string",
        "enum": [
          "",
          "AC",
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DG",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EA",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HN",
          "HR",
          "HT",
          "HU",
          "IC",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TA",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "XA",
          "XB",
          "XK",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "Currency": {
        "type": "string",
        "enum": [
          "AUD",
          "BGN",
          "BRL",
          "CAD",
          "CHF",
          "CNY",
          "CZK",
          "DKK",
          "EUR",
          "GBP",
          "HKD",
          "HRK",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "ISK",
          "JPY",
          "KRW",
          "LTL",
          "LVL",
          "MXN",
          "MYR",
          "NOK",
          "NZD",
          "PHP",
          "PLN",
          "RON",
          "RSD",
          "RUB",
          "SEK",
          "SGD",
          "THB",
          "TRY",
          "UAH",
          "USD",
          "ZAR"
        ]
      },
      "ConversationRate": {
        "properties": {
          "from_currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "to_currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "conversation_rate": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "Document": {
        "description": "Document object representing your invoice.",
        "properties": {
          "id": {
            "description": "The document's unique identifier.",
            "type": "integer"
          },
          "invoice_number": {
            "description": "The document's invoice number.",
            "type": "string",
            "example": "PREFIX / 2020-000001"
          },
          "type": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "cancelled": {
            "type": "boolean"
          },
          "block_id": {
            "description": "DocumentBlock's identifier.",
            "type": "integer"
          },
          "payment_status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "gross_total": {
            "description": "The document's gross total price.",
            "type": "number",
            "format": "float"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "conversion_rate": {
            "type": "number",
            "format": "float"
          },
          "invoice_date": {
            "type": "string",
            "format": "date"
          },
          "fulfillment_date": {
            "type": "string",
            "format": "date"
          },
          "due_date": {
            "type": "string",
            "format": "date"
          },
          "paid_date": {
            "type": "string",
            "format": "date"
          },
          "organization": {
            "$ref": "#/components/schemas/DocumentOrganization"
          },
          "partner": {
            "$ref": "#/components/schemas/Partner"
          },
          "electronic": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notification_status": {
            "$ref": "#/components/schemas/DocumentNotificationStatus"
          },
          "language": {
            "$ref": "#/components/schemas/DocumentLanguage"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentItem"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/DocumentSummary"
          },
          "settings": {
            "$ref": "#/components/schemas/DocumentSettings"
          }
        },
        "type": "object"
      },
      "DocumentBankAccount": {
        "required": [
          "name",
          "account_number"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          },
          "account_number_iban": {
            "type": "string"
          },
          "swift": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentInsert": {
        "required": [
          "partner_id",
          "block_id",
          "type",
          "fulfillment_date",
          "due_date",
          "payment_method",
          "language",
          "currency"
        ],
        "properties": {
          "vendor_id": {
            "type": "string"
          },
          "partner_id": {
            "type": "integer"
          },
          "block_id": {
            "type": "integer"
          },
          "bank_account_id": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/DocumentInsertType"
          },
          "fulfillment_date": {
            "type": "string",
            "format": "date"
          },
          "due_date": {
            "type": "string",
            "format": "date"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "language": {
            "$ref": "#/components/schemas/DocumentLanguage"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "conversion_rate": {
            "type": "number",
            "format": "float",
            "default": "1"
          },
          "electronic": {
            "type": "boolean",
            "default": false
          },
          "paid": {
            "type": "boolean",
            "default": false
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DocumentItemData"
                },
                {
                  "$ref": "#/components/schemas/DocumentProductData"
                }
              ]
            }
          },
          "comment": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/DocumentSettings"
          }
        },
        "type": "object"
      },
      "DocumentInsertType": {
        "type": "string",
        "enum": [
          "advance",
          "draft",
          "invoice",
          "proforma"
        ]
      },
      "DocumentItem": {
        "properties": {
          "product_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "net_unit_amount": {
            "type": "number",
            "format": "float"
          },
          "quantity": {
            "type": "number",
            "format": "float"
          },
          "net_amount": {
            "type": "number",
            "format": "float"
          },
          "gross_amount": {
            "type": "number",
            "format": "float"
          },
          "vat": {
            "$ref": "#/components/schemas/Vat"
          },
          "vat_amount": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "DocumentItemData": {
        "required": [
          "product_id",
          "quantity"
        ],
        "properties": {
          "product_id": {
            "type": "integer"
          },
          "quantity": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "DocumentLanguage": {
        "type": "string",
        "enum": [
          "de",
          "en",
          "fr",
          "hr",
          "hu",
          "it",
          "ro",
          "sk"
        ]
      },
      "DocumentList": {
        "description": "A object with a data property that contains an array of up to limit documents. Each entry in the array is a separate document object. If no more documents are available, the resulting array will be empty.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "total": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "current_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string"
          },
          "next_page_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentNotificationStatus": {
        "type": "string",
        "enum": [
          "closed",
          "downloaded",
          "failed",
          "none",
          "opened",
          "readed"
        ]
      },
      "DocumentOrganization": {
        "properties": {
          "name": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "bank_account": {
            "$ref": "#/components/schemas/DocumentBankAccount"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "small_taxpayer": {
            "type": "boolean"
          },
          "ev_number": {
            "type": "string"
          },
          "eu_tax_number": {
            "type": "string"
          },
          "cash_settled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DocumentProductData": {
        "required": [
          "name",
          "unit_price",
          "unit_price_type",
          "quantity",
          "unit",
          "vat"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "unit_price": {
            "type": "number",
            "format": "float"
          },
          "unit_price_type": {
            "$ref": "#/components/schemas/UnitPriceType"
          },
          "quantity": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "type": "string"
          },
          "vat": {
            "$ref": "#/components/schemas/Vat"
          },
          "comment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentPublicUrl": {
        "properties": {
          "public_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentSettings": {
        "properties": {
          "mediated_service": {
            "type": "boolean",
            "default": false
          },
          "without_financial_fulfillment": {
            "type": "boolean",
            "default": false
          },
          "online_payment": {
            "$ref": "#/components/schemas/OnlinePayment"
          },
          "round": {
            "$ref": "#/components/schemas/Round"
          },
          "place_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DocumentSummary": {
        "properties": {
          "net_amount": {
            "type": "number",
            "format": "float"
          },
          "net_amount_local": {
            "type": "number",
            "format": "float"
          },
          "gross_amount_local": {
            "type": "number",
            "format": "float"
          },
          "vat_amount": {
            "type": "number",
            "format": "float"
          },
          "vat_amount_local": {
            "type": "number",
            "format": "float"
          },
          "vat_rate_summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentVatRateSummary"
            }
          }
        },
        "type": "object"
      },
      "DocumentType": {
        "type": "string",
        "enum": [
          "advance",
          "canceled",
          "cancellation",
          "draft",
          "invoice",
          "proforma"
        ]
      },
      "DocumentVatRateSummary": {
        "properties": {
          "vat_name": {
            "type": "string"
          },
          "vat_percentage": {
            "type": "number",
            "format": "float"
          },
          "vat_rate_net_amount": {
            "type": "number",
            "format": "float"
          },
          "vat_rate_vat_amount": {
            "type": "number",
            "format": "float"
          },
          "vat_rate_vat_amount_local": {
            "type": "number",
            "format": "float"
          },
          "vat_rate_gross_amount": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "OnlinePayment": {
        "type": "string",
        "enum": [
          "",
          "Barion",
          "SimplePay",
          "no"
        ]
      },
      "OnlineSzamlaStatus": {
        "properties": {
          "transaction_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnlineSzamlaStatusMessage"
            }
          }
        },
        "type": "object"
      },
      "OnlineSzamlaStatusMessage": {
        "properties": {
          "validation_result_code": {
            "type": "string"
          },
          "validation_error_code": {
            "type": "string"
          },
          "human_readable_message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentHistory": {
        "required": [
          "date",
          "price",
          "payment_method"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "voucher_number": {
            "type": "string"
          },
          "conversion_rate": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "PaymentMethod": {
        "type": "string",
        "enum": [
          "aruhitel",
          "bankcard",
          "barion",
          "barter",
          "cash",
          "cash_on_delivery",
          "coupon",
          "elore_utalas",
          "ep_kartya",
          "kompenzacio",
          "levonas",
          "online_bankcard",
          "payoneer",
          "paypal",
          "paypal_utolag",
          "payu",
          "pick_pack_pont",
          "postai_csekk",
          "postautalvany",
          "skrill",
          "szep_card",
          "transferwise",
          "upwork",
          "utalvany",
          "valto",
          "wire_transfer"
        ]
      },
      "PaymentStatus": {
        "type": "string",
        "enum": [
          "expired",
          "none",
          "outstanding",
          "paid",
          "partially_paid"
        ]
      },
      "Round": {
        "type": "string",
        "enum": [
          "five",
          "none",
          "one",
          "ten"
        ]
      },
      "SendDocument": {
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "UnitPriceType": {
        "type": "string",
        "enum": [
          "gross",
          "net"
        ]
      },
      "Vat": {
        "type": "string",
        "enum": [
          "0%",
          "1%",
          "10%",
          "11%",
          "12%",
          "13%",
          "14%",
          "15%",
          "16%",
          "17%",
          "18%",
          "19%",
          "2%",
          "20%",
          "21%",
          "22%",
          "23%",
          "24%",
          "25%",
          "26%",
          "27%",
          "3%",
          "4%",
          "5%",
          "6%",
          "7%",
          "8%",
          "9%",
          "AAM",
          "AM",
          "EU",
          "EUK",
          "F.AFA",
          "FAD",
          "K.AFA",
          "MAA",
          "TAM",
          "\u00c1KK",
          "\u00c1THK"
        ]
      },
      "DocumentBlock": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "custom_field1": {
            "type": "string"
          },
          "custom_field2": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentBlockList": {
        "description": "A object with a data property that contains an array of up to limit document blocks. Each entry in the array is a separate document block object. If no more document block are available, the resulting array will be empty.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentBlock"
            }
          },
          "total": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "current_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string"
          },
          "next_page_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrganizationData": {
        "properties": {
          "tax_code": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Partner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartnerUpsert"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "PartnerList": {
        "description": "A object with a data property that contains an array of up to limit partners. Each entry in the array is a separate partner object. If no more partners are available, the resulting array will be empty.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Partner"
            }
          },
          "total": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "current_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string"
          },
          "next_page_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PartnerUpsert": {
        "required": [
          "name",
          "address"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "taxcode": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "swift": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "general_ledger_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Product": {
        "required": [
          "name",
          "currency",
          "vat",
          "unit"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "vat": {
            "$ref": "#/components/schemas/Vat"
          },
          "net_unit_price": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "type": "string"
          },
          "general_ledger_number": {
            "type": "string"
          },
          "general_ledger_taxcode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductList": {
        "description": "A object with a data property that contains an array of up to limit products. Each entry in the array is a separate product object. If no more products are available, the resulting array will be empty.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "total": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "current_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string"
          },
          "next_page_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Id": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "legacy_id": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "The request is malformed.",
        "headers": {
          "X-RateLimit-Limit": {
            "description": "Request limit per minute.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Remaining": {
            "description": "The number of requests left for the time window.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Reset": {
            "description": "The timestamp at which the current rate limit window resets.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "Retry-After": {
            "description": "How many seconds you have to wait before making new request.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ClientErrorResponse"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authorization information is missing or invalid.",
        "headers": {
          "X-RateLimit-Limit": {
            "description": "Request limit per minute.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Remaining": {
            "description": "The number of requests left for the time window.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Reset": {
            "description": "The timestamp at which the current rate limit window resets.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "Retry-After": {
            "description": "How many seconds you have to wait before making new request.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ClientErrorResponse"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Authenticated user doesn't have access to the resource.",
        "headers": {
          "X-RateLimit-Limit": {
            "description": "Request limit per minute.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Remaining": {
            "description": "The number of requests left for the time window.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Reset": {
            "description": "The timestamp at which the current rate limit window resets.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "Retry-After": {
            "description": "How many seconds you have to wait before making new request.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ClientErrorResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "Non-existent resource is requested.",
        "headers": {
          "X-RateLimit-Limit": {
            "description": "Request limit per minute.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Remaining": {
            "description": "The number of requests left for the time window.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Reset": {
            "description": "The timestamp at which the current rate limit window resets.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "Retry-After": {
            "description": "How many seconds you have to wait before making new request.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ClientErrorResponse"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Validation errors occured.",
        "headers": {
          "X-RateLimit-Limit": {
            "description": "Request limit per minute.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Remaining": {
            "description": "The number of requests left for the time window.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Reset": {
            "description": "The timestamp at which the current rate limit window resets.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "Retry-After": {
            "description": "How many seconds you have to wait before making new request.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationErrorResponse"
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal server error.",
        "headers": {
          "X-RateLimit-Limit": {
            "description": "Request limit per minute.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Remaining": {
            "description": "The number of requests left for the time window.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "X-RateLimit-Reset": {
            "description": "The timestamp at which the current rate limit window resets.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "Retry-After": {
            "description": "How many seconds you have to wait before making new request.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServerErrorResponse"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "name": "Document",
      "description": "Document object represents your invoice."
    },
    {
      "name": "DocumentBlock",
      "description": "DocumentBlock object represents your invoice pad."
    },
    {
      "name": "Partner",
      "description": "Partner object represents your client."
    },
    {
      "name": "Product",
      "description": "Product object represents your document's product."
    },
    {
      "name": "BankAccount",
      "description": "BankAccount object represents your bank account information."
    }
  ],
  "externalDocs": {
    "description": "Find out more information about Billingo API v3 usage.",
    "url": "https://support.billingo.hu/content/446136358"
  }
}