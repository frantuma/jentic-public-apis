{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "support@billbee.io",
      "name": "Billbee GmbH",
      "url": "https://www.billbee.io"
    },
    "description": "Documentation of the Billbee REST API to connect a Billbee account to external aplications.\n\n## Endpoint\n\nThe Billbee API endpoint base url is https://api.billbee.io/api/v1 \n\n## Activation\n\nYou have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.\n\n## Authorization & security\n\nBecause you can access private data with the Billbee API, every request has to be sent over https and must\n\n* Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key\n* Contain a valid user login with billbee username and api password in form of a basic auth HTTP header\n\n## Throttling\n\n50 calls per second for each API Key.\n\n10 calls per second for each API Key in combination with Billbee user.\n\nBesides that each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.\n\nWhen you exceed the throttle threshold, the API will return a HTTP 429 status code and a Retry-After-Header indicating how many seconds you will have to wait before you can call the API again.\n\n",
    "title": "Billbee API",
    "version": "V1",
    "x-swagger-net-version": "8.5.12.001",
    "x-jentic-source-url": "https://app.billbee.io/swagger/docs/v1"
  },
  "servers": [
    {
      "url": "https://app.billbee.io/"
    }
  ],
  "paths": {
    "/api/v1/automaticprovision/createaccount": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Provisioning"
        ],
        "operationId": "AutomaticProvisioning_CreateAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer"
              }
            }
          },
          "required": true
        },
        "summary": "Creates a new Billbee user account with the data passed"
      }
    },
    "/api/v1/automaticprovision/termsinfo": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Provisioning"
        ],
        "operationId": "AutomaticProvisioning_TermsInfo",
        "summary": "Returns infos about Billbee terms and conditions"
      }
    },
    "/api/v1/cloudstorages": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "CloudStorage"
        ],
        "operationId": "CloudStorageApi_GetList",
        "summary": "Gets a list of all connected cloud storage devices"
      }
    },
    "/api/v1/customer-addresses": {
      "get": {
        "parameters": [
          {
            "description": "The current page to request starting with 1 (default is 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page size for the result list. Values between 1 and 250 are allowed. (default is 50)",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "CustomerAddresses"
        ],
        "operationId": "CustomerAddresses_GetAll",
        "summary": "Get a list of all customer addresses"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "CustomerAddresses"
        ],
        "operationId": "CustomerAddresses_Create",
        "requestBody": {
          "$ref": "#/components/requestBodies/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
        },
        "summary": "Creates a new customer address"
      }
    },
    "/api/v1/customer-addresses/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the address to query",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "CustomerAddresses"
        ],
        "operationId": "CustomerAddresses_GetOne",
        "summary": "Queries a single customer address by id"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "CustomerAddresses"
        ],
        "operationId": "CustomerAddresses_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Updates a customer address by id"
      }
    },
    "/api/v1/customers": {
      "get": {
        "parameters": [
          {
            "description": "The current page to request starting with 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The pagesize for the result list. Values between 1 and 250 are allowed",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "operationId": "Customer_GetAll",
        "summary": "Get a list of all customers"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "operationId": "Customer_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateCustomerApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateCustomerApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateCustomerApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateCustomerApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateCustomerApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Creates a new customer"
      }
    },
    "/api/v1/customers/addresses/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "operationId": "Customer_GetCustomerAddress",
        "summary": "Queries a single address from a customer"
      },
      "patch": {
        "parameters": [
          {
            "description": "The id of the address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "description": "Id and CustomerId cannot be changed",
        "operationId": "Customer_PatchAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            },
            "text/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "The address fields to be changed. Please query an address via (todo) to see all fields. Note that Id and CustomerId cannot be changed.",
          "required": true
        },
        "summary": "Updates one or more fields of an address"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "description": "Id and CustomerId cannot be changed. Fields you do not send will become empty.",
        "operationId": "Customer_UpdateAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            }
          },
          "description": "The updated address. Please query an address via (todo) to see all fields. Note that Id and CustomerId cannot be changed.",
          "required": true
        },
        "summary": "Updates all fields of an address"
      }
    },
    "/api/v1/customers/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the customer to query",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "operationId": "Customer_GetOne",
        "summary": "Queries a single customer by id"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "operationId": "Customer_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Updates a customer by id"
      }
    },
    "/api/v1/customers/{id}/addresses": {
      "get": {
        "parameters": [
          {
            "description": "The id of the customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The current page to request starting with 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The pagesize for the result list. Values between 1 and 250 are allowed",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "operationId": "Customer_GetCustomerAddresses",
        "summary": "Queries a list of addresses from a customer"
      },
      "post": {
        "parameters": [
          {
            "description": "CustomerId to attach the new address to.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "description": "Id and  CustomerId will be ignored in model. If Id is set, the addition will be stopped.",
        "operationId": "Customer_AddCustomerAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
              }
            }
          },
          "description": "Model containing the address, that should be attached.",
          "required": true
        },
        "summary": "Adds a new address to a customer"
      }
    },
    "/api/v1/customers/{id}/orders": {
      "get": {
        "parameters": [
          {
            "description": "The id of the customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The current page to request starting with 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The pagesize for the result list. Values between 1 and 250 are allowed",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfRechnungsdruck.WebApp.Controllers.Api.Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfRechnungsdruck.WebApp.Controllers.Api.Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfRechnungsdruck.WebApp.Controllers.Api.Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfRechnungsdruck.WebApp.Controllers.Api.Order"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "operationId": "Customer_GetCustomerOrders",
        "summary": "Queries a list of orders from a customer"
      }
    },
    "/api/v1/enums/accountsyncstate": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "EnumApi"
        ],
        "operationId": "EnumApi_GetAccountSyncState",
        "summary": "Returns a list with all defined account sync states"
      }
    },
    "/api/v1/enums/orderstates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "EnumApi"
        ],
        "operationId": "EnumApi_GetOrderStates",
        "summary": "Returns a list with all defined orderstates"
      }
    },
    "/api/v1/enums/paymenttypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "EnumApi"
        ],
        "operationId": "EnumApi_GetPaymentTypes",
        "summary": "Returns a list with all defined paymenttypes"
      }
    },
    "/api/v1/enums/shipmenttypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "EnumApi"
        ],
        "operationId": "EnumApi_GetShipmentTypes",
        "summary": "Returns a list with all defined shipmenttypes"
      }
    },
    "/api/v1/enums/shippingcarriers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "EnumApi"
        ],
        "operationId": "EnumApi_GetShippingCarriers",
        "summary": "Returns a list with all defined shippingcarriers"
      }
    },
    "/api/v1/enums/shopaccounttype": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "EnumApi"
        ],
        "operationId": "EnumApi_GetShopAccountType",
        "summary": "Returns a list with all defined account types"
      }
    },
    "/api/v1/events": {
      "get": {
        "parameters": [
          {
            "description": "Specifies the oldest date to include in the response",
            "in": "query",
            "name": "minDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Specifies the newest date to include in the response",
            "in": "query",
            "name": "maxDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Specifies the page to request",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Specifies the pagesize. Defaults to 50, max value is 250",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filter for specific event types",
            "explode": true,
            "in": "query",
            "name": "typeId",
            "required": false,
            "schema": {
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter for specific order id",
            "in": "query",
            "name": "orderId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Events"
        ],
        "operationId": "EventApi_GetList",
        "summary": "Get a list of all events optionally filtered by date. This request is extra throttled to 2 calls per page per hour."
      }
    },
    "/api/v1/layouts": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Models.LayoutTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Models.LayoutTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Models.LayoutTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Models.LayoutTemplate"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "LayoutApi_GetList"
      }
    },
    "/api/v1/orders": {
      "get": {
        "parameters": [
          {
            "description": "Specifies the oldest order date to include in the response",
            "in": "query",
            "name": "minOrderDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Specifies the newest order date to include in the response",
            "in": "query",
            "name": "maxOrderDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Specifies the page to request",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Specifies the pagesize. Defaults to 50, max value is 250",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Specifies a list of shop ids for which invoices should be included",
            "explode": true,
            "in": "query",
            "name": "shopId",
            "required": false,
            "schema": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "description": "Specifies a list of state ids to include in the response",
            "explode": true,
            "in": "query",
            "name": "orderStateId",
            "required": false,
            "schema": {
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "description": "Specifies a list of tags the order must have attached to be included in the response",
            "explode": true,
            "in": "query",
            "name": "tag",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "If given, all delivered orders have an Id greater than or equal to the given minimumOrderId",
            "in": "query",
            "name": "minimumBillBeeOrderId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "If given, the last modification has to be newer than the given date",
            "in": "query",
            "name": "modifiedAtMin",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "If given, the last modification has to be older or equal than the given date.",
            "in": "query",
            "name": "modifiedAtMax",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The source field for the article title. 0 = Order Position (default), 1 = Article Title, 2 = Article Invoice Text",
            "in": "query",
            "name": "articleTitleSource",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1,
                2,
                3
              ],
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "If true the list of tags passed to the call are used to filter orders to not include these tags",
            "in": "query",
            "name": "excludeTags",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_GetList",
        "summary": "Get a list of all orders optionally filtered by date"
      },
      "post": {
        "parameters": [
          {
            "description": "Deprecated, if orderData.ApiAccountId is set, it will be used instead of 'shopId'",
            "in": "query",
            "name": "shopId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              }
            },
            "description": "The order was created successfully"
          },
          "400": {
            "description": "Invalid data was received in the request"
          },
          "500": {
            "description": "An internal exception occured. Order was not created"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "description": "To create an order POST an JSON object to the orders endpoint with the shown properties.\r\nNot all properties are required.",
        "operationId": "OrderApi_PostNewOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
              }
            }
          },
          "required": true
        },
        "summary": "Creates a new order in the Billbee account"
      }
    },
    "/api/v1/orders/CreateDeliveryNote/{id}": {
      "post": {
        "parameters": [
          {
            "description": "The internal billbee id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "If true, the PDF is included in the response as base64 encoded string",
            "in": "query",
            "name": "includePdf",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Optionally specify the id of a billbee connected cloud device to send the pdf to",
            "in": "query",
            "name": "sendToCloudId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders",
          "DeliveryNote"
        ],
        "operationId": "OrderApi_CreateDeliveryNote",
        "summary": "Create an delivery note for an existing order. This request is extra throttled by order and api key to a maximum of 1 per 5 minutes."
      }
    },
    "/api/v1/orders/CreateInvoice/{id}": {
      "post": {
        "parameters": [
          {
            "description": "The internal billbee id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "If true, the PDF is included in the response as base64 encoded string",
            "in": "query",
            "name": "includeInvoicePdf",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "You can pass the id of an invoice template to overwrite the assigned template for invoice creation",
            "in": "query",
            "name": "templateId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "You can pass the id of a connected cloud printer/storage to send the invoice to it",
            "in": "query",
            "name": "sendToCloudId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.Invoice"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.Invoice"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.Invoice"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders",
          "Invoice"
        ],
        "operationId": "OrderApi_CreateInvoice",
        "summary": "Create an invoice for an existing order. This request is extra throttled by order and api key to a maximum of 1 per 5 minutes."
      }
    },
    "/api/v1/orders/PatchableFields": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_GetPatchableFields",
        "summary": "Returns a list of fields which can be updated with the orders/{id} patch call"
      }
    },
    "/api/v1/orders/find/{id}/{partner}": {
      "get": {
        "parameters": [
          {
            "description": "The order id from the external system",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional the name of the shop/marketplace the order was imported from",
            "in": "path",
            "name": "partner",
            "required": true,
            "schema": {
              "default": "manual",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "deprecated": true,
        "operationId": "OrderApi_Find",
        "summary": "Find a single order by its external id (order number)"
      }
    },
    "/api/v1/orders/findbyextref/{extRef}": {
      "get": {
        "parameters": [
          {
            "description": "The extern order number of the order",
            "in": "path",
            "name": "extRef",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_GetByExtRef",
        "summary": "Get a single order by its external order number"
      }
    },
    "/api/v1/orders/invoices": {
      "get": {
        "parameters": [
          {
            "description": "Specifies the oldest invoice date to include",
            "in": "query",
            "name": "minInvoiceDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Specifies the newest invoice date to include",
            "in": "query",
            "name": "maxInvoiceDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Specifies the page to request",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Specifies the pagesize. Defaults to 50, max value is 250",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Specifies a list of shop ids for which invoices should be included",
            "explode": true,
            "in": "query",
            "name": "shopId",
            "required": false,
            "schema": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "description": "Specifies a list of state ids to include in the response",
            "explode": true,
            "in": "query",
            "name": "orderStateId",
            "required": false,
            "schema": {
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "tag",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "minPayDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxPayDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "includePositions",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If true the list of tags passed to the call are used to filter orders to not include these tags",
            "in": "query",
            "name": "excludeTags",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders",
          "Invoice"
        ],
        "operationId": "OrderApi_GetInvoiceList",
        "summary": "Get a list of all invoices optionally filtered by date. This request ist throttled to 1 per 1 minute for same page and minInvoiceDate"
      }
    },
    "/api/v1/orders/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The internal billbee id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The source field for the article title. 0 = Order Position (default), 1 = Article Title, 2 = Article Invoice Text",
            "in": "query",
            "name": "articleTitleSource",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1,
                2,
                3
              ],
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_Get",
        "summary": "Get a single order by its internal billbee id. This request is throttled to 6 calls per order in one minute"
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_PatchOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            },
            "text/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Updates one or more fields of an order"
      }
    },
    "/api/v1/orders/{id}/message": {
      "post": {
        "parameters": [
          {
            "description": "The id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_Message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Model.Api.OrderMessageModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Model.Api.OrderMessageModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Model.Api.OrderMessageModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Model.Api.OrderMessageModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Model.Api.OrderMessageModel"
              }
            }
          },
          "required": true
        },
        "summary": "Adds a message to the order"
      }
    },
    "/api/v1/orders/{id}/orderstate": {
      "put": {
        "parameters": [
          {
            "description": "The internal id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "description": "### REMARKS ###\r\nUse this call to change the state of an order to i.e. paid or sent.\r\n\r\nThe state is transfered to the external shop/marketplace if configured.\r\nThis is the list of known states:\r\n- 1: ordered\r\n- 2: confirmed\r\n- 3: paid\r\n- 4: shipped\r\n- 5: reclamation\r\n- 6: deleted\r\n- 7: closed\r\n- 8: canceled\r\n- 9: archived\r\n- 10: not used\r\n- 11: demand note 1\r\n- 12: demand note 2\r\n- 13: packed\r\n- 14: offered\r\n- 15: payment reminder\r\n- 16: fulfilling",
        "operationId": "OrderApi_UpdateState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate"
              }
            }
          },
          "description": "The data used to change the state",
          "required": true
        },
        "summary": "Changes the main state of a single order"
      }
    },
    "/api/v1/orders/{id}/parse-placeholders": {
      "post": {
        "parameters": [
          {
            "description": "The id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_ParsePlaceholders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.ParseTextContainer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.ParseTextContainer"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.ParseTextContainer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.ParseTextContainer"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.ParseTextContainer"
              }
            }
          },
          "required": true
        },
        "summary": "Parses a text and replaces all placeholders"
      }
    },
    "/api/v1/orders/{id}/send-message": {
      "post": {
        "parameters": [
          {
            "description": "The id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_SendMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel"
              }
            }
          },
          "description": "The message model",
          "required": true
        },
        "summary": "Sends a message to the buyer"
      }
    },
    "/api/v1/orders/{id}/shipment": {
      "post": {
        "parameters": [
          {
            "description": "The internal billbee id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_AddShipment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel"
              }
            }
          },
          "description": "The shipment data to create the shipment",
          "required": true
        },
        "summary": "Add a shipment to a given order"
      }
    },
    "/api/v1/orders/{id}/tags": {
      "post": {
        "parameters": [
          {
            "description": "The internal id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "description": "When a tag is already attached, it is ignored. Tags are not case sensitive. All given tags are added to the existing tags.",
        "operationId": "OrderApi_TagsCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            }
          },
          "description": "Tags to attach",
          "required": true
        },
        "summary": "Attach one or more tags to an order"
      },
      "put": {
        "parameters": [
          {
            "description": "The internal id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "description": "All existing tags will be replaced by the given list of new tags. To just add tags, use POST method.",
        "operationId": "OrderApi_TagsUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
              }
            }
          },
          "description": "Tags to attach",
          "required": true
        },
        "summary": "Sets the tags attached to an order"
      }
    },
    "/api/v1/orders/{id}/trigger-event": {
      "post": {
        "parameters": [
          {
            "description": "The id of the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "operationId": "OrderApi_TriggerEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.TriggerEventContainer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.TriggerEventContainer"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.TriggerEventContainer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.TriggerEventContainer"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.TriggerEventContainer"
              }
            }
          },
          "required": true
        },
        "summary": "Triggers a rule event"
      }
    },
    "/api/v1/products": {
      "get": {
        "parameters": [
          {
            "description": "The current page to request starting with 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The pagesize for the result list. Values between 1 and 250 are allowed",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional the oldest create date of the articles to be returned",
            "in": "query",
            "name": "minCreatedAt",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minimumBillBeeArticleId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "maximumBillBeeArticleId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetList",
        "summary": "Get a list of all products"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_CreateArticle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Creates a new product"
      }
    },
    "/api/v1/products/PatchableFields": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetPatchableFields",
        "summary": "Returns a list of fields which can be updated with the patch call"
      }
    },
    "/api/v1/products/category": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetCategory",
        "summary": "GEts a list of all defined categories"
      }
    },
    "/api/v1/products/custom-fields": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetCustomFields",
        "summary": "Queries a list of all custom fields"
      }
    },
    "/api/v1/products/custom-fields/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the custom field to query",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetCustomField",
        "summary": "Queries a single custom field"
      }
    },
    "/api/v1/products/images/delete": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_DeleteImages",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "format": "int64",
                  "type": "integer"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "format": "int64",
                  "type": "integer"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "format": "int64",
                  "type": "integer"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "format": "int64",
                  "type": "integer"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "format": "int64",
                  "type": "integer"
                },
                "type": "array"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/products/images/{imageId}": {
      "delete": {
        "parameters": [
          {
            "description": "The image id",
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_DeleteImage",
        "summary": "Deletes a single image by id"
      },
      "get": {
        "parameters": [
          {
            "description": "The Id of the image",
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetImage",
        "summary": "Returns a single image by id"
      }
    },
    "/api/v1/products/reservedamount": {
      "get": {
        "parameters": [
          {
            "description": "The id or the sku of the article to query",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Either the value id or the value sku to specify the meaning of the id parameter",
            "in": "query",
            "name": "lookupBy",
            "required": false,
            "schema": {
              "default": "id",
              "type": "string"
            }
          },
          {
            "description": "Optional the stock id if the multi stock feature is enabled",
            "in": "query",
            "name": "stockId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetReservedAmount",
        "summary": "Queries the reserved amount for a single article by id or by sku"
      }
    },
    "/api/v1/products/stocks": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.StockResponseData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.StockResponseData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.StockResponseData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.StockResponseData"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetStocks",
        "summary": "Query all defined stock locations"
      }
    },
    "/api/v1/products/updatestock": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "description": "The article is specified by sku. You have to send the absolute value for the current stock",
        "operationId": "Article_UpdateStock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update the stock qty of an article"
      }
    },
    "/api/v1/products/updatestockcode": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_UpdateStockCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update the stock code of an article"
      }
    },
    "/api/v1/products/updatestockmultiple": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                  },
                  "type": "array",
                  "xml": {
                    "name": "ApiResult`1",
                    "wrapped": true
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                  },
                  "type": "array",
                  "xml": {
                    "name": "ApiResult`1",
                    "wrapped": true
                  }
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                  },
                  "type": "array",
                  "xml": {
                    "name": "ApiResult`1",
                    "wrapped": true
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
                  },
                  "type": "array",
                  "xml": {
                    "name": "ApiResult`1",
                    "wrapped": true
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_UpdateStockMultiple",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "UpdateStockApiModel",
                  "wrapped": true
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "UpdateStockApiModel",
                  "wrapped": true
                }
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "UpdateStockApiModel",
                  "wrapped": true
                }
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "UpdateStockApiModel",
                  "wrapped": true
                }
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "UpdateStockApiModel",
                  "wrapped": true
                }
              }
            }
          },
          "required": true
        },
        "summary": "Update the stock qty for multiple articles at once"
      }
    },
    "/api/v1/products/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the Product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_DeleteArticle",
        "summary": "Deletes a product"
      },
      "get": {
        "parameters": [
          {
            "description": "The id or the sku of the article to query",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Either the value id, ean or the value sku to specify the meaning of the id parameter.",
            "in": "query",
            "name": "lookupBy",
            "required": false,
            "schema": {
              "default": "id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetArticle",
        "summary": "Queries a single article by id or by sku"
      },
      "patch": {
        "parameters": [
          {
            "description": "The id of the Product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_PatchArticle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            },
            "text/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Updates one or more fields of a product"
      }
    },
    "/api/v1/products/{productId}/images": {
      "get": {
        "parameters": [
          {
            "description": "The Id of the product",
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetImages",
        "summary": "Returns a list of all images of the product"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the product",
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "If you pass true, the images will be replaced by the passed images. Otherwise the passed images will be appended to the product.",
            "in": "query",
            "name": "replace",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_PutImages",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "ArticleImageRelationApiModel",
                  "wrapped": true
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "ArticleImageRelationApiModel",
                  "wrapped": true
                }
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "ArticleImageRelationApiModel",
                  "wrapped": true
                }
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "ArticleImageRelationApiModel",
                  "wrapped": true
                }
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                },
                "type": "array",
                "xml": {
                  "name": "ArticleImageRelationApiModel",
                  "wrapped": true
                }
              }
            }
          },
          "description": "An array of ArticleApiImageModel",
          "required": true
        },
        "summary": "Add multiple images to a product or replace the product images by the given images"
      }
    },
    "/api/v1/products/{productId}/images/{imageId}": {
      "delete": {
        "parameters": [
          {
            "description": "The product id",
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The image id",
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_DeleteImageFromProduct",
        "summary": "Deletes a single image from a product"
      },
      "get": {
        "parameters": [
          {
            "description": "The Id of the product",
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The Id of the image",
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_GetImageFromProduct",
        "summary": "Returns a single image by id"
      },
      "put": {
        "parameters": [
          {
            "description": "The product id",
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The image id. If you pass 0, the image will be added",
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products"
        ],
        "operationId": "Article_PutImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
              }
            }
          },
          "description": "The ArticleApiImageModel",
          "required": true
        },
        "summary": "Add or update an existing image of a product"
      }
    },
    "/api/v1/search": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Products",
          "Customers",
          "Orders"
        ],
        "operationId": "Search_Search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchModel"
              }
            }
          },
          "required": true
        },
        "summary": "Search for products, customers and orders.\r\nType can be \"order\", \"product\" and / or \"customer\"\r\nTerm can contain lucene query syntax"
      }
    },
    "/api/v1/shipment/ping": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "deprecated": true,
        "operationId": "Shipment_GetPing"
      }
    },
    "/api/v1/shipment/shipment": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "operationId": "Shipment_PostShipment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateShipmentApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateShipmentApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateShipmentApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateShipmentApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CreateShipmentApiModel"
              }
            }
          },
          "description": "Data to specify shipment parameters",
          "required": true
        },
        "summary": "Creates a new shipment with the selected Shippingprovider"
      }
    },
    "/api/v1/shipment/shipments": {
      "get": {
        "parameters": [
          {
            "description": "Specifies the page to request.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Specifies the pagesize. Defaults to 50, max value is 250",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Specifies the oldest shipment date to include in the response",
            "in": "query",
            "name": "createdAtMin",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Specifies the newest shipment date to include in the response",
            "in": "query",
            "name": "createdAtMax",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Get shipments for this order only.",
            "in": "query",
            "name": "orderId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Get Shipments with a shipment greater or equal than this id. New shipments have a greater id than older shipments.",
            "in": "query",
            "name": "minimumShipmentId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Get Shippings for the specified shipping provider only. <seealso cref=\"M:Rechnungsdruck.WebApp.Controllers.Api.ShipmentController.GetShippingproviders\" />",
            "in": "query",
            "name": "shippingProviderId",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Shipment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Shipment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Shipment"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "operationId": "Shipment_GetList",
        "summary": "Get a list of all shipments optionally filtered by date. All parameters are optional."
      }
    },
    "/api/v1/shipment/shippingcarriers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "operationId": "Shipment_GetShippingCarrier",
        "summary": "Queries the currently available shipping carriers."
      }
    },
    "/api/v1/shipment/shippingproviders": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "operationId": "Shipment_GetShippingproviders",
        "summary": "Query all defined shipping providers"
      }
    },
    "/api/v1/shipment/shipwithlabel": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "operationId": "Shipment_ShipWithLabel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabel"
              }
            }
          },
          "description": "Details on the order and the shipping methods, that should be used.",
          "required": true
        },
        "summary": "Creates a shipment for an order in billbee"
      }
    },
    "/api/v1/shopaccounts": {
      "get": {
        "parameters": [
          {
            "description": "The current page to request starting with 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The pagesize for the result list. Values between 1 and 250 are allowed",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "ShopAccounts"
        ],
        "operationId": "ShopAccount_QueryShopAccounts",
        "summary": "Queries a list of avaible shop accounts"
      }
    },
    "/api/v1/webhooks": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebHookManagement_DeleteAll",
        "summary": "Deletes all existing WebHook registrations."
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                  },
                  "type": "array",
                  "xml": {
                    "name": "WebHookApiModel",
                    "wrapped": true
                  }
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                  },
                  "type": "array",
                  "xml": {
                    "name": "WebHookApiModel",
                    "wrapped": true
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebHookManagement_Get",
        "summary": "Gets all registered WebHooks for a given user."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebHookManagement_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
              }
            }
          },
          "description": "The webhook to create. Attach ?noecho to the uri to prevent echo test.",
          "required": true
        },
        "summary": "Registers a new WebHook for a given user."
      }
    },
    "/api/v1/webhooks/filters": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebHookManagement_GetFilters",
        "summary": "Returns a list of all known filters you can use to register webhooks"
      }
    },
    "/api/v1/webhooks/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The WebHook ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebHookManagement_Delete",
        "summary": "Deletes an existing WebHook registration."
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebHookManagement_Lookup",
        "summary": "Looks up a registered WebHook with the given {id} for a given user."
      },
      "put": {
        "parameters": [
          {
            "description": "The WebHook ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "X-Billbee-Api-Key": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebHookManagement_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel"
              }
            }
          },
          "description": "The new webhook to use.",
          "required": true
        },
        "summary": "Updates an existing WebHook registration."
      }
    }
  },
  "components": {
    "requestBodies": {
      "Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
            }
          }
        },
        "required": true
      },
      "OrderApi_PatchOrderModel": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object"
            }
          },
          "text/json": {
            "schema": {
              "type": "object"
            }
          }
        },
        "required": true
      },
      "Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate"
            }
          }
        },
        "description": "Tags to attach",
        "required": true
      }
    },
    "schemas": {
      "Billbee.Interfaces.BillbeeAPI.Model.AdditionalFeeApiModel": {
        "description": "Stores information about additional positions like shipcost",
        "properties": {
          "Gross": {
            "format": "double",
            "type": "number"
          },
          "Net": {
            "format": "double",
            "type": "number"
          },
          "Type": {
            "type": "string"
          },
          "VatAmount": {
            "format": "double",
            "type": "number"
          },
          "VatRate": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "AdditionalFeeApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel": {
        "properties": {
          "Configuration": {
            "type": "object"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "IsNullable": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "ArticleApiCustomFieldDefinitionModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldValueModel": {
        "properties": {
          "ArticleId": {
            "format": "int64",
            "type": "integer"
          },
          "Definition": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
          },
          "DefinitionId": {
            "format": "int64",
            "type": "integer"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "Value": {
            "type": "object"
          }
        },
        "type": "object",
        "xml": {
          "name": "ArticleApiCustomFieldValueModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel": {
        "properties": {
          "BasicAttributes": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "BillOfMaterial": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.BomSubArticleApiModel"
            },
            "type": "array",
            "xml": {
              "name": "BomSubArticleApiModel",
              "wrapped": true
            }
          },
          "Category1": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleCategoryApiModel"
          },
          "Category2": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleCategoryApiModel"
          },
          "Category3": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleCategoryApiModel"
          },
          "Condition": {
            "format": "int32",
            "type": "integer"
          },
          "CostPrice": {
            "format": "double",
            "type": "number"
          },
          "CountryOfOrigin": {
            "type": "string"
          },
          "CustomFields": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldValueModel"
            },
            "type": "array",
            "xml": {
              "name": "ArticleApiCustomFieldValueModel",
              "wrapped": true
            }
          },
          "DeliveryTime": {
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "EAN": {
            "type": "string"
          },
          "ExportDescription": {
            "type": "string"
          },
          "ExportDescriptionMultiLanguage": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "HeightCm": {
            "format": "double",
            "type": "number"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "Images": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
            },
            "type": "array",
            "xml": {
              "name": "ArticleImageRelationApiModel",
              "wrapped": true
            }
          },
          "InvoiceText": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "IsCustomizable": {
            "type": "boolean"
          },
          "IsDeactivated": {
            "type": "boolean"
          },
          "IsDigital": {
            "type": "boolean"
          },
          "LengthCm": {
            "format": "double",
            "type": "number"
          },
          "LowStock": {
            "readOnly": true,
            "type": "boolean"
          },
          "Manufacturer": {
            "type": "string"
          },
          "Materials": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "Occasion": {
            "format": "int32",
            "type": "integer"
          },
          "Price": {
            "format": "double",
            "type": "number"
          },
          "Recipient": {
            "format": "int32",
            "type": "integer"
          },
          "SKU": {
            "type": "string"
          },
          "ShippingProductId": {
            "format": "int64",
            "type": "integer"
          },
          "ShortDescription": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "SoldAmount": {
            "format": "double",
            "type": "number"
          },
          "SoldAmountLast30Days": {
            "format": "double",
            "type": "number"
          },
          "SoldSumGross": {
            "format": "double",
            "type": "number"
          },
          "SoldSumGrossLast30Days": {
            "format": "double",
            "type": "number"
          },
          "SoldSumNet": {
            "format": "double",
            "type": "number"
          },
          "SoldSumNetLast30Days": {
            "format": "double",
            "type": "number"
          },
          "Sources": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleSourceApiModel"
            },
            "type": "array",
            "xml": {
              "name": "ArticleSourceApiModel",
              "wrapped": true
            }
          },
          "StockCode": {
            "type": "string"
          },
          "StockCurrent": {
            "format": "double",
            "type": "number"
          },
          "StockDesired": {
            "format": "double",
            "type": "number"
          },
          "StockReduceItemsPerSale": {
            "format": "double",
            "type": "number"
          },
          "StockWarning": {
            "format": "double",
            "type": "number"
          },
          "Stocks": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.StockArticleApiModel"
            },
            "type": "array",
            "xml": {
              "name": "StockArticleApiModel",
              "wrapped": true
            }
          },
          "Tags": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "TaricNumber": {
            "type": "string"
          },
          "Title": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "Type": {
            "format": "int32",
            "type": "integer"
          },
          "Unit": {
            "format": "int32",
            "type": "integer"
          },
          "UnitsPerItem": {
            "format": "double",
            "type": "number"
          },
          "Vat1Rate": {
            "format": "double",
            "type": "number"
          },
          "Vat2Rate": {
            "format": "double",
            "type": "number"
          },
          "VatIndex": {
            "format": "int32",
            "type": "integer"
          },
          "Weight": {
            "format": "int32",
            "type": "integer"
          },
          "WeightNet": {
            "format": "int32",
            "type": "integer"
          },
          "WidthCm": {
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "VatIndex",
          "Price",
          "Vat1Rate",
          "Vat2Rate",
          "Type",
          "IsDigital",
          "IsCustomizable"
        ],
        "type": "object",
        "xml": {
          "name": "ArticleApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ArticleCategoryApiModel": {
        "properties": {
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ArticleCategoryApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel": {
        "properties": {
          "ArticleId": {
            "format": "int64",
            "type": "integer"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "IsDefault": {
            "type": "boolean"
          },
          "Position": {
            "format": "int32",
            "type": "integer"
          },
          "ThumbPathExt": {
            "type": "string"
          },
          "ThumbUrl": {
            "type": "string"
          },
          "Url": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ArticleImageRelationApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ArticleSourceApiModel": {
        "properties": {
          "ApiAccountId": {
            "format": "int64",
            "type": "integer"
          },
          "ApiAccountName": {
            "type": "string"
          },
          "Custom": {
            "type": "object"
          },
          "ExportFactor": {
            "format": "double",
            "type": "number"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Source": {
            "type": "string"
          },
          "SourceId": {
            "type": "string"
          },
          "StockSyncInactive": {
            "type": "boolean"
          },
          "StockSyncMax": {
            "format": "double",
            "type": "number"
          },
          "StockSyncMin": {
            "format": "double",
            "type": "number"
          },
          "UnitsPerItem": {
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "Source",
          "SourceId"
        ],
        "type": "object",
        "xml": {
          "name": "ArticleSourceApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.BomSubArticleApiModel": {
        "properties": {
          "Amount": {
            "format": "double",
            "type": "number"
          },
          "ArticleId": {
            "format": "int64",
            "type": "integer"
          },
          "SKU": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "BomSubArticleApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel": {
        "properties": {
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "UsedAsPrinter": {
            "type": "boolean"
          }
        },
        "type": "object",
        "xml": {
          "name": "CloudStorageApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.CommentApiModel": {
        "properties": {
          "Created": {
            "format": "date-time",
            "type": "string"
          },
          "FromCustomer": {
            "type": "boolean"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "CommentApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.CreateCustomerApiModel": {
        "properties": {
          "Address": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
          },
          "ArchivedAt": {
            "description": "If set, the customer was already archived at the given date. Further modification is disabled.",
            "format": "date-time",
            "type": "string"
          },
          "DefaultCommercialMailAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultFax": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultMailAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultPhone1": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultPhone2": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultStatusUpdatesMailAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "Email": {
            "type": "string"
          },
          "Id": {
            "description": "The Billbee Id of the customer",
            "format": "int64",
            "type": "integer"
          },
          "LanguageId": {
            "format": "int32",
            "type": "integer"
          },
          "MetaData": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
            },
            "type": "array",
            "xml": {
              "name": "CustomerMetaDataApiModel",
              "wrapped": true
            }
          },
          "Name": {
            "type": "string"
          },
          "Number": {
            "format": "int32",
            "type": "integer"
          },
          "PriceGroupId": {
            "format": "int64",
            "type": "integer"
          },
          "RestoredAt": {
            "description": "If set, the customer was restored from the archive at the given date.",
            "format": "date-time",
            "type": "string"
          },
          "Tel1": {
            "type": "string"
          },
          "Tel2": {
            "type": "string"
          },
          "Type": {
            "description": "Customer Type",
            "format": "int32",
            "type": "integer"
          },
          "VatId": {
            "description": "The vat-id, that should be saved at the customer. Only used if CustomerVatId is not set on the order.",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "CreateCustomerApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.CreateShipmentApiModel": {
        "properties": {
          "ClientReference": {
            "description": "Optional specify a text to be included on the label. Not possible with all carriers",
            "type": "string"
          },
          "Content": {
            "description": "Optional specify a text describing the content of the shipment. Used for export shipments",
            "type": "string"
          },
          "CustomerNumber": {
            "description": "Not used anymore",
            "type": "string"
          },
          "Dimension": {
            "$ref": "#/components/schemas/Billbee.Interfaces.Shipping.ShipmentData.Dimensions"
          },
          "OrderCurrencyCode": {
            "description": "The Currency if the ordersum",
            "type": "string"
          },
          "OrderSum": {
            "description": "The value of the shipments content",
            "format": "double",
            "type": "number"
          },
          "PrinterIdForExportDocs": {
            "description": "The id of a connected Cloudprinter to sent the export docs to",
            "format": "int64",
            "type": "integer"
          },
          "PrinterName": {
            "description": "The name of a connected Cloudprinter to sent the label to",
            "type": "string"
          },
          "ProductCode": {
            "description": "The productcode to be used when creating the shipment. Values depends on the carrier used",
            "type": "string"
          },
          "ProviderName": {
            "description": "The name of the provider as specified in the billbee account",
            "type": "string"
          },
          "ReceiverAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ShipmentAddressApiModel",
            "description": "The address of the receiver"
          },
          "Services": {
            "description": "A list of services to be used when creating the shipment",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Shipping.ProductService"
            },
            "type": "array",
            "xml": {
              "name": "ProductService",
              "wrapped": true
            }
          },
          "ShipDate": {
            "description": "Optional overwrite the shipdate to be transferred to the carrier",
            "format": "date-time",
            "type": "string"
          },
          "TotalNet": {
            "description": "The value of the shipments content (net)",
            "format": "double",
            "type": "number"
          },
          "WeightInGram": {
            "description": "Optional specify the weight in gram of the shipment",
            "format": "double",
            "type": "number"
          },
          "shippingCarrier": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "CreateShipmentApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel": {
        "description": "Container for passing address data",
        "properties": {
          "AddressAddition": {
            "type": "string"
          },
          "AddressType": {
            "description": "The type of the address",
            "enum": [
              1,
              2
            ],
            "format": "int32",
            "type": "integer"
          },
          "ArchivedAt": {
            "description": "If set, the customeraddress was already archived at the given date. Further modification is disabled.",
            "format": "date-time",
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Company": {
            "description": "The name of the company",
            "type": "string"
          },
          "CountryCode": {
            "description": "The ISO2 code of the country",
            "type": "string"
          },
          "CustomerId": {
            "description": "The internal Billbee id of the customer the address belongs to",
            "format": "int64",
            "type": "integer"
          },
          "Email": {
            "type": "string"
          },
          "Fax": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "Housenumber": {
            "type": "string"
          },
          "Id": {
            "description": "The internal Billbee ID of the address record. Can be null if a new address is created",
            "format": "int64",
            "type": "integer"
          },
          "LastName": {
            "type": "string"
          },
          "Name2": {
            "description": "Optionally an additional name field",
            "type": "string"
          },
          "RestoredAt": {
            "description": "If set, the customeraddress was restored from the archive at the given date.",
            "format": "date-time",
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Street": {
            "type": "string"
          },
          "Tel1": {
            "type": "string"
          },
          "Tel2": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "CustomerAddressApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel": {
        "properties": {
          "ArchivedAt": {
            "description": "If set, the customer was already archived at the given date. Further modification is disabled.",
            "format": "date-time",
            "type": "string"
          },
          "DefaultCommercialMailAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultFax": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultMailAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultPhone1": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultPhone2": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "DefaultStatusUpdatesMailAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
          },
          "Email": {
            "type": "string"
          },
          "Id": {
            "description": "The Billbee Id of the customer",
            "format": "int64",
            "type": "integer"
          },
          "LanguageId": {
            "format": "int32",
            "type": "integer"
          },
          "MetaData": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel"
            },
            "type": "array",
            "xml": {
              "name": "CustomerMetaDataApiModel",
              "wrapped": true
            }
          },
          "Name": {
            "type": "string"
          },
          "Number": {
            "format": "int32",
            "type": "integer"
          },
          "PriceGroupId": {
            "format": "int64",
            "type": "integer"
          },
          "RestoredAt": {
            "description": "If set, the customer was restored from the archive at the given date.",
            "format": "date-time",
            "type": "string"
          },
          "Tel1": {
            "type": "string"
          },
          "Tel2": {
            "type": "string"
          },
          "Type": {
            "description": "Customer Type",
            "format": "int32",
            "type": "integer"
          },
          "VatId": {
            "description": "The vat-id, that should be saved at the customer. Only used if CustomerVatId is not set on the order.",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "CustomerApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel": {
        "properties": {
          "Deleted": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "NotFound": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object",
        "xml": {
          "name": "DeletedImagesModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData": {
        "properties": {
          "ReservedAmount": {
            "description": "The reserve (not fulfilled) qty of the article",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "GetReservedAmountResponseData"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel": {
        "properties": {
          "AdditionalFees": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.AdditionalFeeApiModel"
            },
            "type": "array",
            "xml": {
              "name": "AdditionalFeeApiModel",
              "wrapped": true
            }
          },
          "BillbeeId": {
            "format": "int64",
            "type": "integer"
          },
          "Company": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          },
          "CustomerNumber": {
            "format": "int32",
            "type": "integer"
          },
          "CustomerVatId": {
            "description": "The vat-id, that was given by the customer to fulfill this order",
            "type": "string"
          },
          "DebtorNumber": {
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "InvoiceDate": {
            "format": "date-time",
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "MerchantVatId": {
            "description": "The vat-id, that should be displayed on the invoice and other order documents",
            "type": "string"
          },
          "OrderNumber": {
            "type": "string"
          },
          "PayDate": {
            "format": "date-time",
            "type": "string"
          },
          "PaymentTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "Positions": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.InvoiceApiPositionApiModel"
            },
            "type": "array",
            "xml": {
              "name": "InvoiceApiPositionApiModel",
              "wrapped": true
            }
          },
          "Salutation": {
            "type": "string"
          },
          "ShippingCountry": {
            "description": "two letters for CountryCode Identification",
            "type": "string"
          },
          "ShopName": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "TotalGross": {
            "format": "double",
            "type": "number"
          },
          "TotalNet": {
            "format": "double",
            "type": "number"
          },
          "TransactionId": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "VatFlags": {
            "$ref": "#/components/schemas/Billbee.Interfaces.Order.VatDetailsRecognizedHistoryEntry.VatDetectionFlags",
            "description": "The current vat detection flags."
          },
          "VatMode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "InvoiceApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.InvoiceApiPositionApiModel": {
        "properties": {
          "Amount": {
            "format": "double",
            "type": "number"
          },
          "ArticleBillbeeId": {
            "format": "int32",
            "type": "integer"
          },
          "BillbeeId": {
            "format": "int64",
            "type": "integer"
          },
          "GrossValue": {
            "format": "double",
            "type": "number"
          },
          "NetValue": {
            "format": "double",
            "type": "number"
          },
          "Position": {
            "format": "int32",
            "type": "integer"
          },
          "RebatePercent": {
            "format": "double",
            "type": "number"
          },
          "Sku": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "TotalGrossValue": {
            "format": "double",
            "type": "number"
          },
          "TotalNetValue": {
            "format": "double",
            "type": "number"
          },
          "TotalVatAmount": {
            "format": "double",
            "type": "number"
          },
          "VatRate": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "InvoiceApiPositionApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.Order": {
        "description": "A class that represents the Billbee data model of a single order",
        "properties": {
          "AcceptLossOfReturnRight": {
            "description": "Customer accepts loss due to withdrawal",
            "type": "boolean"
          },
          "AdjustmentCost": {
            "format": "double",
            "type": "number"
          },
          "AdjustmentReason": {
            "type": "string"
          },
          "ApiAccountId": {
            "description": "Id of the account, this order belongs to",
            "format": "int64",
            "type": "integer"
          },
          "ApiAccountName": {
            "description": "The name of the account, this order belongs to. Will be ignored on order creation.",
            "type": "string"
          },
          "ArchivedAt": {
            "description": "If set, the order was already archived at the given date. Further modification is disabled.",
            "format": "date-time",
            "type": "string"
          },
          "BillBeeOrderId": {
            "description": "The Order.Id from the Billbee database",
            "format": "int64",
            "type": "integer"
          },
          "BillBeeParentOrderId": {
            "description": "The Id of the parent order in the Billbee database",
            "format": "int64",
            "type": "integer"
          },
          "Buyer": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderUser"
          },
          "Comments": {
            "description": "All messages / comments of the order",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CommentApiModel"
            },
            "type": "array",
            "xml": {
              "name": "CommentApiModel",
              "wrapped": true
            }
          },
          "ConfirmedAt": {
            "description": "The date on which the order was confirmed",
            "format": "date-time",
            "type": "string"
          },
          "CreatedAt": {
            "description": "The date on which the order was created",
            "format": "date-time",
            "type": "string"
          },
          "Currency": {
            "description": "The three letter currency code.",
            "type": "string"
          },
          "CustomInvoiceNote": {
            "description": "An optional multiline text which is printed on the invoice",
            "type": "string"
          },
          "Customer": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel",
            "description": "The Customer object connected with the order"
          },
          "CustomerNumber": {
            "description": "The customer number (not to be confused with the id of the customer)",
            "type": "string"
          },
          "CustomerVatId": {
            "description": "The vat-id, that was given by the customer to fulfill this order",
            "type": "string"
          },
          "DeliverySourceCountryCode": {
            "description": "An optional Country ISO2 Code of the country where order is shipped from (FBA)",
            "type": "string"
          },
          "DistributionCenter": {
            "description": "An optional code for the distribution center delivering this order",
            "type": "string"
          },
          "History": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.HistoryEntry"
            },
            "type": "array",
            "xml": {
              "name": "HistoryEntry",
              "wrapped": true
            }
          },
          "Id": {
            "description": "Id of the order in the external system (marketplace)",
            "type": "string"
          },
          "InvoiceAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderAddressApiModel",
            "description": "The billing address"
          },
          "InvoiceDate": {
            "description": "The date on which the invoice was created",
            "format": "date-time",
            "type": "string"
          },
          "InvoiceNumber": {
            "description": "The invoice number",
            "format": "int32",
            "type": "integer"
          },
          "InvoiceNumberPostfix": {
            "description": "The postfix of the invoice number",
            "type": "string"
          },
          "InvoiceNumberPrefix": {
            "description": "The prefix of the invoice number",
            "type": "string"
          },
          "IsCancelationFor": {
            "description": "An optional Order Id (externalid) for an order if this is a cancel order (shopify only at the moment)",
            "type": "string"
          },
          "IsFromBillbeeApi": {
            "description": "Indicates whether the order was created through the Billbee-Api or not.",
            "type": "boolean"
          },
          "LanguageCode": {
            "description": "The two-letter language code of the customer",
            "type": "string"
          },
          "LastModifiedAt": {
            "description": "Date of the last update, the order got",
            "format": "date-time",
            "type": "string"
          },
          "MerchantVatId": {
            "description": "The vat-id, that should be displayed on the invoice and other order documents",
            "type": "string"
          },
          "OrderItems": {
            "description": "The list of items purchased like shirt, pant, toys etc",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderItem"
            },
            "type": "array",
            "xml": {
              "name": "OrderItem",
              "wrapped": true
            }
          },
          "OrderNumber": {
            "description": "Order number of the order in the external system (marketplace)",
            "type": "string"
          },
          "PaidAmount": {
            "format": "double",
            "type": "number"
          },
          "PayedAt": {
            "description": "The date on which the order was paid",
            "format": "date-time",
            "type": "string"
          },
          "PaymentInstruction": {
            "description": "A textfield optionaly filled with a payment instruction text for printout on the invoice (z.B. Ebay Kauf auf Rechnung)",
            "type": "string"
          },
          "PaymentMethod": {
            "description": "The payment method",
            "enum": [
              1,
              2,
              3,
              4,
              6,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152
            ],
            "format": "int32",
            "type": "integer"
          },
          "PaymentReference": {
            "description": "A payment reference",
            "type": "string"
          },
          "PaymentTransactionId": {
            "description": "The id of the payment transaction. For example the transaction id of PayPal payment. Should not be used any more. Please use 'Payments' instead.",
            "type": "string"
          },
          "Payments": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.OrderPayment"
            },
            "type": "array",
            "xml": {
              "name": "OrderPayment",
              "wrapped": true
            }
          },
          "RebateDifference": {
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "RestoredAt": {
            "description": "If set, the order was restored from the archive at the given date.",
            "format": "date-time",
            "type": "string"
          },
          "Seller": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderUser"
          },
          "SellerComment": {
            "description": "An internal seller comment",
            "type": "string"
          },
          "ShipWeightKg": {
            "description": "The total weight of the shipment(s)",
            "format": "double",
            "type": "number"
          },
          "ShippedAt": {
            "description": "The date on which the order was shipped",
            "format": "date-time",
            "type": "string"
          },
          "ShippingAddress": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderAddressApiModel",
            "description": "The delivery address"
          },
          "ShippingCost": {
            "description": "The shipping cost",
            "format": "double",
            "type": "number"
          },
          "ShippingIds": {
            "description": "The shipments of the order",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Shipment"
            },
            "type": "array",
            "xml": {
              "name": "Shipment",
              "wrapped": true
            }
          },
          "ShippingProfileId": {
            "description": "Internal Id for the shipping profile for that order",
            "type": "string"
          },
          "ShippingProfileName": {
            "description": "Display Name of Shipping profile, if available",
            "type": "string"
          },
          "ShippingProviderId": {
            "description": "Internal Id for the used shipping provider",
            "format": "int64",
            "type": "integer"
          },
          "ShippingProviderName": {
            "description": "The Name for of used shipping provider",
            "type": "string"
          },
          "ShippingProviderProductId": {
            "description": "Internal Id for the used shipping product",
            "format": "int64",
            "type": "integer"
          },
          "ShippingProviderProductName": {
            "description": "The Name of the used shipping product",
            "type": "string"
          },
          "ShippingServices": {
            "description": "Additional services for the shipment",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Shipping.ProductService"
            },
            "type": "array",
            "xml": {
              "name": "ProductService",
              "wrapped": true
            }
          },
          "State": {
            "description": "The current state of the order",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17
            ],
            "format": "int32",
            "type": "integer"
          },
          "Tags": {
            "description": "The Tags of the order",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "TaxRate1": {
            "description": "The regular tax rate",
            "format": "double",
            "type": "number"
          },
          "TaxRate2": {
            "description": "The reduced tax rate",
            "format": "double",
            "type": "number"
          },
          "TotalCost": {
            "description": "The total cost excluding shipping cost",
            "format": "double",
            "type": "number"
          },
          "UpdatedAt": {
            "description": "The date on which the order was last updated",
            "format": "date-time",
            "type": "string"
          },
          "VatId": {
            "description": "The customers vat id",
            "type": "string"
          },
          "VatMode": {
            "description": "The vat mode of the order",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int32",
            "type": "integer"
          },
          "WebUrl": {
            "description": "Returns the url to open the order in Billbee.",
            "type": "string"
          }
        },
        "required": [
          "CreatedAt"
        ],
        "type": "object",
        "xml": {
          "name": "Order"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.OrderAddressApiModel": {
        "properties": {
          "BillbeeId": {
            "format": "int64",
            "type": "integer"
          },
          "City": {
            "type": "string"
          },
          "Company": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "CountryISO2": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "HouseNumber": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Line2": {
            "type": "string"
          },
          "NameAddition": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Street": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderAddressApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.OrderItem": {
        "properties": {
          "Attributes": {
            "description": "A list of product attributes for this position",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderItemAttribute"
            },
            "type": "array",
            "xml": {
              "name": "OrderItemAttribute",
              "wrapped": true
            }
          },
          "BillbeeId": {
            "description": "The billbee id of this item",
            "format": "int64",
            "type": "integer"
          },
          "Discount": {
            "description": "Sets the discount in percent",
            "format": "double",
            "type": "number"
          },
          "DontAdjustStock": {
            "description": "If true, the import of this order won't adjust the stock level at billbee.",
            "type": "boolean"
          },
          "GetPriceFromArticleIfAny": {
            "description": "If true, the price will be overwritten by the known article price in billbee if available",
            "type": "boolean"
          },
          "InvoiceSKU": {
            "description": "Contains the SKU from OrderDetail (if available) or from Product",
            "type": "string"
          },
          "IsCoupon": {
            "description": "Determines if it is a coupon, which is interpreted as tax-free payment",
            "type": "boolean"
          },
          "Product": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.SoldProduct",
            "description": "The sold product"
          },
          "Quantity": {
            "description": "The sold quantity",
            "format": "double",
            "type": "number"
          },
          "SerialNumber": {
            "description": "Contains the used serial number",
            "type": "string"
          },
          "ShippingProfileId": {
            "description": "Determines if it is a coupon, which is interpreted as tax-free payment",
            "type": "string"
          },
          "StockId": {
            "description": "Contains the stock id that is assigned to the item",
            "format": "int32",
            "type": "integer"
          },
          "TaxAmount": {
            "description": "The tax amount in the total price",
            "format": "double",
            "type": "number"
          },
          "TaxIndex": {
            "description": "The tax index.",
            "format": "int32",
            "type": "integer"
          },
          "TotalPrice": {
            "description": "The total price (unit price * quantity)",
            "format": "double",
            "type": "number"
          },
          "TransactionId": {
            "description": "Id of the individual transaction. Only required by Ebay to detect aggregated orders",
            "type": "string"
          },
          "UnrebatedTotalPrice": {
            "description": "Is just used for the billbee api",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderItem"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.OrderItemAttribute": {
        "properties": {
          "Id": {
            "description": "The internal id of this attribute",
            "type": "string"
          },
          "Name": {
            "description": "The attribute name. E.g. color",
            "type": "string"
          },
          "Price": {
            "format": "double",
            "type": "number"
          },
          "Value": {
            "description": "The attribute value. E.g. red",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderItemAttribute"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.OrderUser": {
        "properties": {
          "BillbeeShopId": {
            "description": "The Billbee internal id of the shop connection",
            "format": "int64",
            "type": "integer"
          },
          "BillbeeShopName": {
            "description": "The name of shop connection in Billbee",
            "type": "string"
          },
          "Email": {
            "description": "The email address of this customer",
            "type": "string"
          },
          "FirstName": {
            "description": "The first name of this customer",
            "type": "string"
          },
          "FullName": {
            "description": "The full name (\"firstname lastname\") of this customer",
            "readOnly": true,
            "type": "string"
          },
          "Id": {
            "description": "The Billbee internal id of this customer",
            "type": "string"
          },
          "LastName": {
            "description": "The last name of this customer",
            "type": "string"
          },
          "Nick": {
            "description": "The nick name (if available) from the original system",
            "type": "string"
          },
          "Platform": {
            "description": "The name of the platform from which this customer originated",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderUser"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ProductImage": {
        "properties": {
          "ExternalId": {
            "description": "The id of this image from the original system",
            "type": "string"
          },
          "IsDefaultImage": {
            "description": "True if the image is / should be the default image",
            "type": "boolean"
          },
          "Position": {
            "description": "The order of this image",
            "format": "int32",
            "type": "integer"
          },
          "Url": {
            "description": "The url to the image",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ProductImage"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.Shipment": {
        "description": "Represents a single shipment.",
        "properties": {
          "BillbeeId": {
            "description": "The billbee internal id of the shipment",
            "format": "int64",
            "type": "integer"
          },
          "Created": {
            "description": "The creation date",
            "format": "date-time",
            "type": "string"
          },
          "ShipmentType": {
            "description": "Shipment Type, 0 if Shipment, 1 if Retoure",
            "format": "int32",
            "type": "integer"
          },
          "Shipper": {
            "description": "The name of the shipping provider",
            "type": "string"
          },
          "ShippingCarrier": {
            "description": "The carrier used to ship the parcel with",
            "format": "int32",
            "type": "integer"
          },
          "ShippingId": {
            "description": "The id of this shipment",
            "type": "string"
          },
          "ShippingProviderId": {
            "description": "The id of the used shipping provider",
            "format": "int64",
            "type": "integer"
          },
          "ShippingProviderProductId": {
            "description": "The id of the used shipping provider product",
            "format": "int64",
            "type": "integer"
          },
          "TrackingUrl": {
            "description": "The url to track this shipment",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "Shipment"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.ShipmentAddressApiModel": {
        "properties": {
          "AddressAddition": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Company": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "CountryCodeISO3": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "FullName": {
            "readOnly": true,
            "type": "string"
          },
          "FullStreet": {
            "readOnly": true,
            "type": "string"
          },
          "Housenumber": {
            "type": "string"
          },
          "IsExportCountry": {
            "type": "boolean"
          },
          "LastName": {
            "type": "string"
          },
          "Name2": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Street": {
            "type": "string"
          },
          "Telephone": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ShipmentAddressApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.SoldProduct": {
        "properties": {
          "BillbeeId": {
            "description": "The Billbee internal id of the linked product",
            "format": "int64",
            "type": "integer"
          },
          "CountryOfOrigin": {
            "description": "The country where this article was made",
            "type": "string"
          },
          "EAN": {
            "description": "The EAN / GTIN of this product",
            "type": "string"
          },
          "Id": {
            "description": "The id of this product in the external system",
            "type": "string"
          },
          "Images": {
            "description": "The images of this product",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ProductImage"
            },
            "type": "array",
            "xml": {
              "name": "ProductImage",
              "wrapped": true
            }
          },
          "IsDigital": {
            "description": "True if the product is a digital good (download etc.), false if not",
            "type": "boolean"
          },
          "OldId": {
            "description": "This is for migration scenarios when the internal id of a product changes\r\nI.E. Etsy when switching to the new inventory management, the ids for variants will change.",
            "type": "string"
          },
          "PlatformData": {
            "description": "Optional platform specific Data as serialized JSON Object for the product",
            "type": "string"
          },
          "SKU": {
            "description": "The SKU of this product",
            "type": "string"
          },
          "SkuOrId": {
            "description": "The SKU of this product or the id if the SKU is empty",
            "readOnly": true,
            "type": "string"
          },
          "TARICCode": {
            "description": "The TARIC code",
            "type": "string"
          },
          "Title": {
            "description": "The name of this product",
            "type": "string"
          },
          "Type": {
            "description": "Indicates whether the article is 1 = normal or 2 = BOM",
            "format": "int32",
            "type": "integer"
          },
          "Weight": {
            "description": "Weight of one item in gram",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "SoldProduct"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.StockArticleApiModel": {
        "properties": {
          "Name": {
            "type": "string"
          },
          "StockCode": {
            "type": "string"
          },
          "StockCurrent": {
            "format": "double",
            "type": "number"
          },
          "StockCurrentIsCalculated": {
            "type": "boolean"
          },
          "StockDesired": {
            "format": "double",
            "type": "number"
          },
          "StockId": {
            "format": "int64",
            "type": "integer"
          },
          "StockWarning": {
            "format": "double",
            "type": "number"
          },
          "UnfulfilledAmount": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "StockArticleApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.StockResponseData": {
        "properties": {
          "Description": {
            "type": "string"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "IsDefault": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "StockResponseData"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel": {
        "properties": {
          "AutosubtractReservedAmount": {
            "description": "Automatically reduce the NewQuantity by the currently not fulfilled amount",
            "type": "boolean"
          },
          "BillbeeId": {
            "description": "Optional the ID of the Billbee product to update",
            "format": "int64",
            "type": "integer"
          },
          "DeltaQuantity": {
            "description": "This parameter is currently ignored",
            "format": "double",
            "type": "number"
          },
          "ForceSendStockToShops": {
            "description": "If true, every sent stockchange is stored and transmitted to the connected shop, even if the value has not changed",
            "type": "boolean"
          },
          "NewQuantity": {
            "description": "The new absolute stock quantity for the product you want to set",
            "format": "double",
            "type": "number"
          },
          "OldQuantity": {
            "description": "This parameter is currently ignored",
            "format": "double",
            "type": "number"
          },
          "Reason": {
            "description": "Optional a reason text for the stock update",
            "type": "string"
          },
          "Sku": {
            "description": "The SKU of the product to update",
            "type": "string"
          },
          "StockId": {
            "description": "Optional the stock id if the feature multi stock is activated",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "UpdateStockApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel": {
        "properties": {
          "BillbeeId": {
            "format": "int64",
            "type": "integer"
          },
          "Sku": {
            "type": "string"
          },
          "StockCode": {
            "type": "string"
          },
          "StockId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "UpdateStockCodeApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData": {
        "properties": {},
        "type": "object",
        "xml": {
          "name": "UpdateStockCodeResponseData"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData": {
        "properties": {
          "CurrentStock": {
            "description": "The new value for current stock after the update",
            "format": "double",
            "type": "number"
          },
          "Message": {
            "description": "A human readable message that explains the result of the operation",
            "type": "string"
          },
          "OldStock": {
            "description": "The old value for current stock before the update",
            "format": "double",
            "type": "number"
          },
          "SKU": {
            "description": "The SKU of the article to update the current stock",
            "type": "string"
          },
          "UnfulfilledAmount": {
            "description": "The value of the unfulfilled amount (reserved) of the article",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "UpdateStockResponseData"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel": {
        "properties": {
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "SubType": {
            "type": "string"
          },
          "TypeId": {
            "format": "int64",
            "type": "integer"
          },
          "TypeName": {
            "readOnly": true,
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "CustomerMetaDataApiModel"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Models.LayoutTemplate": {
        "properties": {
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "LayoutTemplate"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.Models.OrderPayment": {
        "properties": {
          "BillbeeId": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "PayDate": {
            "format": "date-time",
            "type": "string"
          },
          "PayValue": {
            "format": "double",
            "type": "number"
          },
          "PaymentType": {
            "format": "int32",
            "type": "integer"
          },
          "Purpose": {
            "type": "string"
          },
          "SourceTechnology": {
            "type": "string"
          },
          "SourceText": {
            "type": "string"
          },
          "TransactionId": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderPayment"
        }
      },
      "Billbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel": {
        "properties": {
          "AccountType": {
            "description": "Refer to https://app.billbee.io/swagger/ui/index#!/EnumApi/EnumApi_GetShopAccountType for definition",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              2147483647
            ],
            "format": "int32",
            "type": "integer"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "LastSyncDate": {
            "description": "Refer to https://app.billbee.io/swagger/ui/index#!/EnumApi/EnumApi_GetAccountSyncState for definition",
            "format": "date-time",
            "type": "string"
          },
          "LastSyncState": {
            "enum": [
              0,
              1,
              2,
              254,
              255
            ],
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ShopAccountReadApiModel"
        }
      },
      "Billbee.Interfaces.Order.HistoryEntry": {
        "properties": {
          "Created": {
            "format": "date-time",
            "type": "string"
          },
          "EmployeeName": {
            "type": "string"
          },
          "EventTypeName": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          },
          "TypeId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "HistoryEntry"
        }
      },
      "Billbee.Interfaces.Order.MultiLanguageString": {
        "properties": {
          "LanguageCode": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "MultiLanguageString"
        }
      },
      "Billbee.Interfaces.Order.VatDetailsRecognizedHistoryEntry.VatDetectionFlags": {
        "properties": {
          "CustomerHasVatId": {
            "type": "boolean"
          },
          "EuDeliveryThresholdExceeded": {
            "type": "boolean"
          },
          "IsDistanceSale": {
            "type": "boolean"
          },
          "OrderDistributionCountryIsEmpty": {
            "type": "boolean"
          },
          "OssEnabled": {
            "type": "boolean"
          },
          "RatesFrom": {
            "type": "string"
          },
          "SellerIsRegisteredInDstCountry": {
            "type": "boolean"
          },
          "SetIglWhenVatIdIsAvailableEnabled": {
            "type": "boolean"
          },
          "SrcCountryIsEqualToDstCountry": {
            "type": "boolean"
          },
          "ThirdPartyCountry": {
            "type": "boolean"
          },
          "UserProfileCountryIsEmpty": {
            "type": "boolean"
          },
          "VatIdFrom": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "VatDetectionFlags"
        }
      },
      "Billbee.Interfaces.Shipping.ProductService": {
        "properties": {
          "CanBeConfigured": {
            "readOnly": true,
            "type": "boolean"
          },
          "DisplayName": {
            "readOnly": true,
            "type": "string"
          },
          "DisplayValue": {
            "readOnly": true,
            "type": "string"
          },
          "HasDynamicValues": {
            "readOnly": true,
            "type": "boolean"
          },
          "IsRequired": {
            "readOnly": true,
            "type": "boolean"
          },
          "PossibleValueLists": {
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePairOfSystem.StringAndSystem.Collections.Generic.ListOfSystem.Collections.Generic.KeyValuePairOfSystem.Int32AndSystem.String"
            },
            "readOnly": true,
            "type": "array",
            "xml": {
              "name": "KeyValuePair`2",
              "wrapped": true
            }
          },
          "RequiresUserInput": {
            "readOnly": true,
            "type": "boolean"
          },
          "ServiceName": {
            "readOnly": true,
            "type": "string"
          },
          "ShowInput": {
            "readOnly": true,
            "type": "boolean"
          },
          "typeName": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ProductService"
        }
      },
      "Billbee.Interfaces.Shipping.ShipmentData.Dimensions": {
        "properties": {
          "height": {
            "format": "double",
            "type": "number"
          },
          "length": {
            "format": "double",
            "type": "number"
          },
          "width": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "Dimensions"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel": {
        "description": "Data of the shipment to be created",
        "properties": {
          "CarrierId": {
            "description": "Optional the id of a shipping carrier that should be assigend to the shipment\r\nWill override the carrier from the shipment product.\r\nPlease use the integer value from this Enumeration:\r\n{Billbee.Interfaces.Shipping.Enums.ShippingCarrier}",
            "format": "int32",
            "type": "integer"
          },
          "Comment": {
            "description": "Optional a text stored with the shipment",
            "type": "string"
          },
          "OrderId": {
            "description": "Optional a differing order number of the shipment if available",
            "type": "string"
          },
          "ShipmentType": {
            "description": "0 if Shipment, 1 if Retoure\r\n{Billbee.Interfaces.Shipping.Enums.ShipmentTypeEnum}",
            "format": "int32",
            "type": "integer"
          },
          "ShippingId": {
            "description": "The id of the shipment (Sendungsnummer/trackingid)",
            "type": "string"
          },
          "ShippingProviderId": {
            "description": "Optional the id of a shipping provider existing in the billbee account that should be assigned to the shipment",
            "format": "int64",
            "type": "integer"
          },
          "ShippingProviderProductId": {
            "description": "Optional the id of a shipping provider product that should be assigend to the shipment",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiAddShipmentToOrderModel"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Order": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Shipment": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfRechnungsdruck.WebApp.Controllers.Api.Order": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "TotalPages": {
            "format": "int32",
            "type": "integer"
          },
          "TotalRows": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "PagingInformation"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
            },
            "type": "array",
            "xml": {
              "name": "ArticleApiCustomFieldDefinitionModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
            },
            "type": "array",
            "xml": {
              "name": "ArticleApiModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
            },
            "type": "array",
            "xml": {
              "name": "CustomerAddressApiModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
            },
            "type": "array",
            "xml": {
              "name": "CustomerApiModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel"
            },
            "type": "array",
            "xml": {
              "name": "InvoiceApiModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.InvoiceApiModel"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Order": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
            },
            "type": "array",
            "xml": {
              "name": "Order",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Order"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Shipment": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Shipment"
            },
            "type": "array",
            "xml": {
              "name": "Shipment",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.Shipment"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel"
            },
            "type": "array",
            "xml": {
              "name": "ShopAccountReadApiModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.ShopAccountReadApiModel"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResultOfSystem.Collections.Generic.ListOfRechnungsdruck.WebApp.Controllers.Api.Order": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Order"
            },
            "type": "array",
            "xml": {
              "name": "Order",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Paging": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformationOfSystem.Collections.Generic.ListOfRechnungsdruck.WebApp.Controllers.Api.Order"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiPagedResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleApiModel": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.CustomerApiModel": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.Order": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfBillbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.Invoice": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Invoice"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfRechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult": {
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult"
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel"
            },
            "type": "array",
            "xml": {
              "name": "ArticleImageRelationApiModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel"
            },
            "type": "array",
            "xml": {
              "name": "CloudStorageApiModel",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Model.StockResponseData": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.StockResponseData"
            },
            "type": "array",
            "xml": {
              "name": "StockResponseData",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ApiResultOfSystem.Collections.Generic.ListOfBillbee.Interfaces.BillbeeAPI.Models.LayoutTemplate": {
        "properties": {
          "Data": {
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.LayoutTemplate"
            },
            "type": "array",
            "xml": {
              "name": "LayoutTemplate",
              "wrapped": true
            }
          },
          "ErrorCode": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "type": "integer"
          },
          "ErrorDescription": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ApiResult`1"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer": {
        "description": "Data used to create a new Billbee user account",
        "properties": {
          "AcceptTerms": {
            "description": "Set to true, if the user has accepted the Billbee terms &amp; conditions",
            "type": "boolean"
          },
          "Address": {
            "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer.UserAddress",
            "description": "Gets or sets the invoice address of the Billbee user"
          },
          "AffiliateCouponCode": {
            "description": "Specifies an billbee affiliate code to attach to the user",
            "type": "string"
          },
          "DefaultCurrency": {
            "description": "Optionally specify the default currency of the user",
            "type": "string"
          },
          "DefaultVatIndex": {
            "description": "Optionally specify the default vat index of the user",
            "format": "int32",
            "type": "integer"
          },
          "DefaultVatMode": {
            "description": "Optionally specify the default vat mode of the user",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int32",
            "type": "integer"
          },
          "EMail": {
            "description": "The Email address of the user to create",
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "Vat1Rate": {
            "description": "Optionally specify the vat1 (normal) rate of the user",
            "format": "double",
            "type": "number"
          },
          "Vat2Rate": {
            "description": "Optionally specify the vat2 (reduced) rate of the user",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "EMail"
        ],
        "type": "object",
        "xml": {
          "name": "CreateAccountContainer"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer.UserAddress": {
        "description": "Represents the invoice address of a Billbee user",
        "properties": {
          "Address1": {
            "type": "string"
          },
          "Address2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Company": {
            "type": "string"
          },
          "Country": {
            "description": "The ISO2 country code of the users country",
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "VatId": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "UserAddress"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.Invoice": {
        "properties": {
          "InvoiceDate": {
            "format": "date-time",
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "OrderNumber": {
            "type": "string"
          },
          "PDFData": {
            "format": "byte",
            "type": "string"
          },
          "PdfDownloadUrl": {
            "type": "string"
          },
          "TotalGross": {
            "format": "double",
            "type": "number"
          },
          "TotalNet": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "Invoice"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.Order": {
        "properties": {
          "CanCreateAutoInvoice": {
            "type": "boolean"
          },
          "CreatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "ExternalId": {
            "type": "string"
          },
          "HasInvoice": {
            "type": "boolean"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceCreatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "InvoiceDate": {
            "format": "date-time",
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "OrderStateId": {
            "format": "int32",
            "type": "integer"
          },
          "OrderStateText": {
            "type": "string"
          },
          "PaidAt": {
            "format": "date-time",
            "type": "string"
          },
          "ShippedAt": {
            "format": "date-time",
            "type": "string"
          },
          "ShopName": {
            "type": "string"
          },
          "TotalGross": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "xml": {
          "name": "Order"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.ParseTextContainer": {
        "properties": {
          "IsHtml": {
            "description": "If true, the string will be handled as html.",
            "type": "boolean"
          },
          "Language": {
            "description": "The ISO 639-1 code of the target language. Using default if not set.",
            "type": "string"
          },
          "TextToParse": {
            "description": "The text to parse and replace the placeholders in.",
            "type": "string"
          },
          "Trim": {
            "description": "If true, then the placeholder values are trimmed after usage.",
            "type": "boolean"
          }
        },
        "type": "object",
        "xml": {
          "name": "ParseTextContainer"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel": {
        "properties": {
          "AlternativeMail": {
            "description": "An alternative recipient email address",
            "type": "string"
          },
          "Body": {
            "description": "The body of the message",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          },
          "SendMode": {
            "description": "Defines, how the message is send",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "format": "int32",
            "type": "integer"
          },
          "Subject": {
            "description": "The Subject of the message",
            "items": {
              "$ref": "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
            },
            "type": "array",
            "xml": {
              "name": "MultiLanguageString",
              "wrapped": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "SendMessageModel"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.TriggerEventContainer": {
        "properties": {
          "DelayInMinutes": {
            "description": "The delay in minutes until the rule is executed",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the event",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "TriggerEventContainer"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate": {
        "description": "Specifies the parameters used to set the new state of an order",
        "properties": {
          "NewStateId": {
            "description": "The new state to set",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderStateUpdate"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate": {
        "properties": {
          "Tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderTagCreate"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.SearchController.CustomerResult": {
        "properties": {
          "Addresses": {
            "type": "string"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Number": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "CustomerResult"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.SearchController.OrderResult": {
        "properties": {
          "ArticleTexts": {
            "type": "string"
          },
          "BuyerName": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "ExternalReference": {
            "type": "string"
          },
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "InvoiceNumber": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderResult"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.SearchController.ProductResult": {
        "properties": {
          "Id": {
            "format": "int64",
            "type": "integer"
          },
          "SKU": {
            "type": "string"
          },
          "ShortText": {
            "type": "string"
          },
          "Tags": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ProductResult"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchModel": {
        "properties": {
          "SearchMode": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "format": "int32",
            "type": "integer"
          },
          "Term": {
            "type": "string"
          },
          "Type": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "xml": {
          "name": "SearchModel"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel": {
        "properties": {
          "Customers": {
            "items": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.CustomerResult"
            },
            "type": "array",
            "xml": {
              "name": "CustomerResult",
              "wrapped": true
            }
          },
          "Orders": {
            "items": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.OrderResult"
            },
            "type": "array",
            "xml": {
              "name": "OrderResult",
              "wrapped": true
            }
          },
          "Products": {
            "items": {
              "$ref": "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchController.ProductResult"
            },
            "type": "array",
            "xml": {
              "name": "ProductResult",
              "wrapped": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "SearchResultsModel"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabel": {
        "properties": {
          "ChangeStateToSend": {
            "description": "Optional parameter to automatically change the orderstate to sent after creating the shipment",
            "type": "boolean"
          },
          "ClientReference": {
            "description": "Optional specify a reference text to be included on the label. Works not with all carriers",
            "type": "string"
          },
          "Dimension": {
            "$ref": "#/components/schemas/Billbee.Interfaces.Shipping.ShipmentData.Dimensions",
            "description": "Option specify the dimensions of the package in cm"
          },
          "OrderId": {
            "description": "The Billbee internal id of the order to ship",
            "format": "int64",
            "type": "integer"
          },
          "PrinterName": {
            "description": "Optional the name of a connected cloudprinter to send the label to",
            "type": "string"
          },
          "ProductId": {
            "description": "the id of the shipping provider product to be used",
            "format": "int64",
            "type": "integer"
          },
          "ProviderId": {
            "description": "The id of the provider. You can query all providers with the shippingproviders endpoint",
            "format": "int64",
            "type": "integer"
          },
          "ShipDate": {
            "description": "Optional specify the shipdate to be transmitted to the carrier",
            "format": "date-time",
            "type": "string"
          },
          "WeightInGram": {
            "description": "Optional the shipments weight in gram to override the calculated weight",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "ShipmentWithLabel"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult": {
        "properties": {
          "Carrier": {
            "type": "string"
          },
          "ExportDocsPdf": {
            "format": "byte",
            "type": "string"
          },
          "LabelDataPdf": {
            "format": "byte",
            "type": "string"
          },
          "OrderId": {
            "format": "int64",
            "type": "integer"
          },
          "OrderReference": {
            "type": "string"
          },
          "ShippingDate": {
            "format": "date-time",
            "type": "string"
          },
          "ShippingId": {
            "type": "string"
          },
          "TrackingUrl": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "ShipmentWithLabelResult"
        }
      },
      "Rechnungsdruck.WebApp.Controllers.Api.WebHookApiModel": {
        "properties": {
          "Description": {
            "type": "string"
          },
          "Filters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "Headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "Id": {
            "type": "string"
          },
          "IsPaused": {
            "type": "boolean"
          },
          "Properties": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "Secret": {
            "type": "string"
          },
          "WebHookUri": {
            "type": "string"
          }
        },
        "required": [
          "Secret",
          "WebHookUri"
        ],
        "type": "object",
        "xml": {
          "name": "WebHookApiModel"
        }
      },
      "Rechnungsdruck.WebApp.Model.Api.OrderMessageModel": {
        "properties": {
          "IsInternal": {
            "description": "Whether the message is only for internal usage or not.",
            "type": "boolean"
          },
          "SenderName": {
            "description": "The name of the entity (e.g. Name of the API Partner) creating this message.",
            "type": "string"
          },
          "Text": {
            "description": "The text describing what happened.",
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "OrderMessageModel"
        }
      },
      "System.Collections.Generic.KeyValuePairOfSystem.Int32AndSystem.String": {
        "properties": {
          "key": {
            "format": "int32",
            "type": "integer"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "KeyValuePair`2"
        }
      },
      "System.Collections.Generic.KeyValuePairOfSystem.StringAndSystem.Collections.Generic.ListOfSystem.Collections.Generic.KeyValuePairOfSystem.Int32AndSystem.String": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePairOfSystem.Int32AndSystem.String"
            },
            "type": "array",
            "xml": {
              "name": "KeyValuePair`2",
              "wrapped": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "KeyValuePair`2"
        }
      }
    },
    "securitySchemes": {
      "X-Billbee-Api-Key": {
        "description": "To identify the app developer, each API request has to contain a valid API Key in the HTTP header X-Billbee-Api-Key.",
        "in": "header",
        "name": "X-Billbee-Api-Key",
        "type": "apiKey"
      },
      "basic": {
        "description": "To authenticate an API request, the Billbee username/email and an API password have to be provided as a BasicAuth header.",
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "tags": [
    {
      "name": "CloudStorage"
    },
    {
      "name": "CustomerAddresses"
    },
    {
      "name": "Customers"
    },
    {
      "name": "EnumApi"
    },
    {
      "name": "Events"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Products"
    },
    {
      "name": "Provisioning"
    },
    {
      "name": "Shipments"
    },
    {
      "name": "ShopAccounts"
    },
    {
      "name": "Webhooks"
    }
  ]
}