{
  "openapi": "3.0.0",
  "info": {
    "description": "\r\n<div style='line-height: 30px;'>\r\n    <strong>Welcome to the Big Red Cloud API</strong><br/>\r\n    This API enables programmatic access to Big Red Cloud data.<br/>\r\n    We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>\r\n    To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>\r\n    Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>\r\n    The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>\r\n    For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>\r\n</div>",
    "title": "Big Red Cloud API",
    "version": "v1",
    "x-jentic-source-url": "https://app.bigredcloud.com/api/swagger/docs/v1"
  },
  "servers": [
    {
      "url": "https://app.bigredcloud.com/api"
    }
  ],
  "paths": {
    "/v1/accounts": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 3,
                      "Items": [
                        {
                          "accountGroup": "Sales",
                          "accountType": "Profit and Loss",
                          "code": "000",
                          "description": "SALES",
                          "id": 355
                        },
                        {
                          "accountGroup": "Sales",
                          "accountType": "Profit and Loss",
                          "code": 8,
                          "description": "SALES STOCK",
                          "id": 428
                        },
                        {
                          "accountGroup": "Other Income",
                          "accountType": "Profit and Loss",
                          "code": "050",
                          "description": "DISCOUNT RECEIVED",
                          "id": 349
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_AccountDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_Get",
        "summary": "Returns a list of company's Accounts. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      }
    },
    "/v1/analysisCategories": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 3,
                      "Items": [
                        {
                          "accountCode": "000",
                          "accountId": 355,
                          "categoryTypeId": 19,
                          "description": "AnCat1",
                          "id": 1,
                          "orderIndex": 1
                        },
                        {
                          "accountCode": "000",
                          "accountId": 355,
                          "categoryTypeId": 19,
                          "description": "AnCat2",
                          "id": 2,
                          "orderIndex": 2
                        },
                        {
                          "accountCode": "000",
                          "accountId": 355,
                          "categoryTypeId": 19,
                          "description": "AnCat3",
                          "id": 3,
                          "orderIndex": 3
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_AnalysisCategoryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "AnalysisCategories"
        ],
        "operationId": "AnalysisCategories_Get",
        "summary": "Returns a list of company's Analysis Categories. Supports OData querying protocol.\r\nFiltering is allowed by \"categoryTypeId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields."
      }
    },
    "/v1/bankAccounts": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": "B1",
                          "accountName": "",
                          "accountNumber": "83700896",
                          "address": [
                            "Address Line 1",
                            "Address Line 2"
                          ],
                          "bankFeedSource": 0,
                          "businessIdentifierCodes": "AIBKIE2D",
                          "categoryId": 41704,
                          "creditorScheme": "XXXX",
                          "details": "Bank_111111111111111111",
                          "id": 1,
                          "internationalBankAccountNumber": "IE67 BOFI 9027 0925 7277 59",
                          "isDefaultBank": false,
                          "lastChq": "000005",
                          "nominalAcCode": "B101",
                          "oBalance": 0,
                          "sortCode": "900284",
                          "timestamp": "QUFBQUFBQUFDcXc9"
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_BankAccountQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BankAccounts"
        ],
        "operationId": "BankAccounts_Get",
        "summary": "Returns a list of company's Bank Account. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"acCode\" fields."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BankAccounts"
        ],
        "operationId": "BankAccounts_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountDto"
              }
            }
          },
          "description": "Information of Bank Account to create.",
          "required": true
        },
        "summary": "Creates a new Bank Account."
      }
    },
    "/v1/bankAccounts/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BankAccounts"
        ],
        "operationId": "BankAccounts_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_BankAccountDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Bank Accounts to process.",
          "required": true
        },
        "summary": "Processes a batch of Bank Accounts."
      }
    },
    "/v1/bankAccounts/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Bank Account to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Bank Account to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BankAccounts"
        ],
        "operationId": "BankAccounts_Delete",
        "summary": "Removes an existing Bank Account."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Bank Account to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": "B1",
                      "accountName": "",
                      "accountNumber": "83700896",
                      "address": [
                        "Address Line 1",
                        "Address Line 2"
                      ],
                      "bankFeedSource": 0,
                      "businessIdentifierCodes": "AIBKIE2D",
                      "categoryId": 41704,
                      "creditorScheme": "XXXX",
                      "details": "Bank_1",
                      "id": 1,
                      "internationalBankAccountNumber": "IE67 BOFI 9027 0925 7277 59",
                      "isDefaultBank": false,
                      "lastChq": "000005",
                      "nominalAcCode": "B101",
                      "oBalance": 0,
                      "sortCode": "900284",
                      "timestamp": "QUFBQUFBQUFDcXc9"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BankAccounts"
        ],
        "operationId": "BankAccounts_Get",
        "summary": "Returns information about a single Bank Account."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Bank Account to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BankAccounts"
        ],
        "operationId": "BankAccounts_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountDto"
              }
            }
          },
          "description": "Information of Bank Account to update.",
          "required": true
        },
        "summary": "Updates an existing Bank Account."
      }
    },
    "/v1/bookTranTypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 5,
                      "Items": [
                        {
                          "code": "",
                          "description": "Cash Receipt",
                          "id": 1
                        },
                        {
                          "code": "",
                          "description": "Cash Payment",
                          "id": 2
                        },
                        {
                          "code": "",
                          "description": "Cheques Entry",
                          "id": 3
                        },
                        {
                          "code": "",
                          "description": "Purchases Book Entry",
                          "id": 4
                        },
                        {
                          "code": "",
                          "description": "Sales Entry",
                          "id": 5
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_BookTranTypeDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BookTranTypes"
        ],
        "operationId": "BookTranTypes_Get",
        "summary": "Returns a list of global Book Transactions' Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/cashPayments": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": null,
                          "acEntries": [
                            {
                              "accountCode": "CP01",
                              "analysisCategoryId": 10433,
                              "description": "Cash Pay 01",
                              "id": 62741,
                              "value": 200
                            }
                          ],
                          "bankAccountCode": "BAK2",
                          "bankAccountId": 11111,
                          "bookTranTypeId": 2,
                          "customFields": [],
                          "detailCollection": [
                            "test"
                          ],
                          "discount": 0,
                          "entryDate": "2017-07-01T00:00:00",
                          "id": 12345,
                          "ledger": 100,
                          "lodgement": 0,
                          "note": "Supplier 1",
                          "plaidTransactionId": null,
                          "procDate": "2017-07-26T00:00:00",
                          "supplierId": 70599,
                          "timestamp": "hZGrJ31w3Qg=",
                          "total": 100
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_CashPaymentQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashPayments"
        ],
        "operationId": "CashPayments_Get",
        "summary": "Returns a list of company's Cash Payments. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashPayments"
        ],
        "operationId": "CashPayments_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashPaymentDto"
              }
            }
          },
          "description": "Information of Cash Receipt to create.",
          "required": true
        },
        "summary": "Creates a new Cash Payment."
      }
    },
    "/v1/cashPayments/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashPayments"
        ],
        "operationId": "CashPayments_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_CashPaymentDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Cash Receipts to process.",
          "required": true
        },
        "summary": "Processes a batch of Cash Payments."
      }
    },
    "/v1/cashPayments/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Cash Receipt to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Cash Receipt to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashPayments"
        ],
        "operationId": "CashPayments_Delete",
        "summary": "Removes an existing Cash Payment."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Cash Receipt to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": null,
                      "acEntries": [
                        {
                          "accountCode": "CP01",
                          "analysisCategoryId": 10433,
                          "description": "Cash Pay 01",
                          "id": 62741,
                          "value": 200
                        }
                      ],
                      "bankAccountCode": "BAK2",
                      "bankAccountId": 11111,
                      "bookTranTypeId": 2,
                      "customFields": [],
                      "detailCollection": [
                        "test"
                      ],
                      "discount": 0,
                      "entryDate": "2017-07-01T00:00:00",
                      "id": 12345,
                      "ledger": 100,
                      "lodgement": 0,
                      "note": "Supplier 1",
                      "plaidTransactionId": null,
                      "procDate": "2017-07-26T00:00:00",
                      "supplierId": 70599,
                      "timestamp": "hZGrJ31w3Qg=",
                      "total": 100
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CashPaymentDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashPayments"
        ],
        "operationId": "CashPayments_Get",
        "summary": "Returns information about a single Cash Payment."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Cash Receipt to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashPayments"
        ],
        "operationId": "CashPayments_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashPaymentDto"
              }
            }
          },
          "description": "Information of Cash Receipt to update.",
          "required": true
        },
        "summary": "Updates an existing Cash Payment."
      }
    },
    "/v1/cashReceipts": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": null,
                          "acEntries": [
                            {
                              "accountCode": "000",
                              "analysisCategoryId": 1,
                              "description": "AnCat1",
                              "id": 1,
                              "value": 30
                            }
                          ],
                          "bookTranTypeId": 1,
                          "customFields": [
                            {
                              "description": "acudf_1",
                              "id": 1,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_1"
                            }
                          ],
                          "customerId": null,
                          "detailCollection": [
                            "det_1",
                            "det_2",
                            "det_3"
                          ],
                          "discount": 0,
                          "entryDate": "2011-01-01T00:00:00",
                          "id": 1,
                          "ledger": 0,
                          "note": "note1",
                          "plaidTransactionId": null,
                          "procDate": "2011-01-05T00:00:00",
                          "timestamp": "n/OtJ31w3Qg=",
                          "total": 50,
                          "unallocated": 0,
                          "vatEntries": [
                            {
                              "amount": 50,
                              "id": 1,
                              "percentage": 15,
                              "vatRateId": 1
                            }
                          ],
                          "vatTypeId": null
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_CashReceiptQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashReceipts"
        ],
        "operationId": "CashReceipts_Get",
        "summary": "Returns a list of company's Cash Receipts. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashReceipts"
        ],
        "operationId": "CashReceipts_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashReceiptDto"
              }
            }
          },
          "description": "Information of Cash Receipt to create.",
          "required": true
        },
        "summary": "Creates a new Cash Receipt."
      }
    },
    "/v1/cashReceipts/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashReceipts"
        ],
        "operationId": "CashReceipts_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_CashReceiptDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Cash Receipts to process.",
          "required": true
        },
        "summary": "Processes a batch of Cash Receipts."
      }
    },
    "/v1/cashReceipts/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Cash Receipt to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Cash Receipt to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashReceipts"
        ],
        "operationId": "CashReceipts_Delete",
        "summary": "Removes an existing Cash Receipt."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Cash Receipt to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": null,
                      "acEntries": [
                        {
                          "accountCode": "000",
                          "analysisCategoryId": 1,
                          "description": "AnCat1",
                          "id": 1,
                          "value": 30
                        }
                      ],
                      "bookTranTypeId": 1,
                      "customFields": [
                        {
                          "description": "acudf_1",
                          "id": 1,
                          "userDefinedFieldId": 1,
                          "value": "acudfv_1"
                        }
                      ],
                      "customerId": null,
                      "detailCollection": [
                        "det_1",
                        "det_2",
                        "det_3"
                      ],
                      "discount": 0,
                      "entryDate": "2011-01-01T00:00:00",
                      "id": 1,
                      "ledger": 0,
                      "note": "note1",
                      "plaidTransactionId": null,
                      "procDate": "2011-01-05T00:00:00",
                      "timestamp": "n/OtJ31w3Qg=",
                      "total": 50,
                      "unallocated": 0,
                      "vatEntries": [
                        {
                          "amount": 50,
                          "id": 1,
                          "percentage": 15,
                          "vatRateId": 1
                        }
                      ],
                      "vatTypeId": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CashReceiptDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashReceipts"
        ],
        "operationId": "CashReceipts_Get",
        "summary": "Returns information about a single Cash Receipt."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Cash Receipt to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CashReceipts"
        ],
        "operationId": "CashReceipts_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashReceiptDto"
              }
            }
          },
          "description": "Information of Cash Receipt to update.",
          "required": true
        },
        "summary": "Updates an existing Cash Receipt."
      }
    },
    "/v1/categoryTypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "description": "Cash Receipts",
                          "id": 17
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_CategoryTypeDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CategoryTypes"
        ],
        "operationId": "CategoryTypes_Get",
        "summary": "Returns a list of company's Category Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/companySettings": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "enableVOCRReporting": true,
                      "id": 20164,
                      "useAllocations": true,
                      "value": "",
                      "vocrSettingValue": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_CompanySettingDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "operationId": "CompanySettings_Get",
        "summary": "Returns a list of company settings. Supports OData querying protocol.\r\nFiltering is forbidden."
      }
    },
    "/v1/companySetupConfig": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySetupConfigViewModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CompanySetupConfig"
        ],
        "operationId": "CompanySetupConfig_Get",
        "summary": "Returns the company configuration settings."
      }
    },
    "/v1/companySetupConfig/getCompanyLogo": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CompanySetupConfig"
        ],
        "operationId": "CompanySetupConfig_GetCompanyLogo",
        "summary": "Returns the company logo."
      }
    },
    "/v1/companySetupConfig/getCompanyOptions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyOptionDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CompanySetupConfig"
        ],
        "operationId": "CompanySetupConfig_GetCompanyOptions",
        "summary": "Returns the company option setting."
      }
    },
    "/v1/companySetupConfig/getFinancialYear": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYearDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CompanySetupConfig"
        ],
        "operationId": "CompanySetupConfig_GetFinancialYear",
        "summary": "Returns the financial year."
      }
    },
    "/v1/customers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "accountName": "",
                          "accountNumber": "12345678",
                          "additionalEmails": [
                            "email2@example.com",
                            "email2@example.com"
                          ],
                          "address": [
                            "Address Line 1",
                            "Address Line 2"
                          ],
                          "authCode": "VATEXCODE222",
                          "bank": {
                            "branch": "Bank",
                            "id": 1,
                            "name": "bank Name",
                            "sortCode": "B01"
                          },
                          "businessIdentifierCode": "AIBI02",
                          "code": "12345678",
                          "contact": "John Smith",
                          "delivery": [
                            "Delivery 1",
                            "Delivery 2"
                          ],
                          "eFTReference": "Reference",
                          "email": "customer@email.com",
                          "fax": "1234567890",
                          "id": 10589,
                          "internationalBankAccountNumber": "1233432532",
                          "mobile": "1234567890",
                          "name": "Customer Name 1",
                          "ourCode": "OURCODE111",
                          "ownerTypeId": 1,
                          "phone": "1234596970",
                          "salesRepId": 1,
                          "timestamp": "n/OtJ31w3Qg=",
                          "vatAnalysisTypeId": 1,
                          "vatReg": "VATCODE0001",
                          "vatType": 2
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_CustomerQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_Get",
        "summary": "Returns a list of company's Customers. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDto"
              }
            }
          },
          "description": "Information of Customer to create.",
          "required": true
        },
        "summary": "Creates a new Customer."
      }
    },
    "/v1/customers/GetWithoutDormant": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "accountName": "",
                          "accountNumber": "12345678",
                          "additionalEmails": [
                            "email2@example.com",
                            "email2@example.com"
                          ],
                          "address": [
                            "Address Line 1",
                            "Address Line 2"
                          ],
                          "authCode": "VATEXCODE222",
                          "bank": {
                            "branch": "Bank",
                            "id": 1,
                            "name": "bank Name",
                            "sortCode": "B01"
                          },
                          "businessIdentifierCode": "AIBI02",
                          "code": "12345678",
                          "contact": "John Smith",
                          "delivery": [
                            "Delivery 1",
                            "Delivery 2"
                          ],
                          "eFTReference": "Reference",
                          "email": "customer@email.com",
                          "fax": "1234567890",
                          "id": 10589,
                          "internationalBankAccountNumber": "1233432532",
                          "mobile": "1234567890",
                          "name": "Customer Name 1",
                          "ourCode": "OURCODE111",
                          "ownerTypeId": 1,
                          "phone": "1234596970",
                          "salesRepId": 1,
                          "timestamp": "AFawJ31w3Qg=",
                          "vatAnalysisTypeId": 1,
                          "vatReg": "VATCODE0001",
                          "vatType": 2
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_CustomerQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_GetWithoutDormant",
        "summary": "Returns a list of company's Customers without dormant records. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      }
    },
    "/v1/customers/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_CustomerDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Customers to process.",
          "required": true
        },
        "summary": "Processes a batch of Customers."
      }
    },
    "/v1/customers/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Customer to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Customer to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_Delete",
        "summary": "Removes an existing Customer."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Customer to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "If \"true\" then Customer's ledger balance will be calculated; otherwise balance will be returned as 0.",
            "in": "query",
            "name": "needBalance",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_Get",
        "summary": "Returns information about a single Customer. You may specify that Customer's ledger balance should be calculated."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Customer to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDto"
              }
            }
          },
          "description": "Information of Customer to update.",
          "required": true
        },
        "summary": "Updates an existing Customer."
      }
    },
    "/v1/customers/{itemId}/accountTrans": {
      "get": {
        "parameters": [
          {
            "description": "Id of Customer to return account transaction.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "bookTranId": 0,
                        "bookTranTypeId": 0,
                        "bookTransactionReference": "O/Bal",
                        "bookTypeDesc": "Opening Balance",
                        "credit": 0,
                        "debit": 30,
                        "id": 2,
                        "procDate": "2012-12-31T00:00:00"
                      },
                      {
                        "bookTranId": 0,
                        "bookTranTypeId": 0,
                        "bookTransactionReference": "0000001",
                        "bookTypeDesc": "Bank Payment",
                        "credit": 0,
                        "debit": 10,
                        "id": 9,
                        "procDate": "2012-12-31T00:00:00"
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountTranDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_GetAccountTrans",
        "summary": "Returns a list of Customer's account transactions."
      }
    },
    "/v1/customers/{itemId}/openingBalance": {
      "get": {
        "parameters": [
          {
            "description": "Id of Customer to return opening balances.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "currentMonth": 10,
                      "oneMonthOld": 20,
                      "threeMonthsOld": 40,
                      "twoMonthsOld": 30
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OwnerOpeningBalanceInPeriodsDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_GetOpeningBalance",
        "summary": "Returns a Customer's opening balances, calculated for the next periods: current month, one month old, two months old, three and more months old."
      }
    },
    "/v1/customers/{itemId}/openingBalanceList": {
      "get": {
        "parameters": [
          {
            "description": "Id of Customer to return opening balances transaction.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "entryDate": "2011-01-01T00:00:00",
                        "id": 1,
                        "procDate": "2011-02-01T00:00:00",
                        "reference": "O/Bal",
                        "timestamp": "AFawJ31w3Qg=",
                        "total": 10,
                        "totalVAT": 1.3,
                        "unpaid": 0,
                        "vatEntries": [
                          {
                            "amount": 8.7,
                            "vatRateId": 1
                          }
                        ]
                      },
                      {
                        "entryDate": "2011-01-01T00:00:00",
                        "id": 2,
                        "procDate": "2011-02-01T00:00:00",
                        "reference": "O/Bal",
                        "timestamp": "AFawJ31w3Qg=",
                        "total": 20,
                        "totalVAT": 3.33,
                        "unpaid": 0,
                        "vatEntries": [
                          {
                            "amount": 16.77,
                            "vatRateId": 2
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OwnerOpeningBalanceDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_GetOpeningBalanceList",
        "summary": "Returns a list of Customer's opening balance transactions."
      }
    },
    "/v1/customers/{itemId}/quotes": {
      "get": {
        "parameters": [
          {
            "description": "Id of Customer to return quotes.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QuoteDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_GetQuotes",
        "summary": "Returns a list of Customer's quotes."
      }
    },
    "/v1/email/sendEmailStatement": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Email"
        ],
        "operationId": "Email_SendEmailStatement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailStatementDto"
              }
            }
          },
          "required": true
        },
        "summary": "Sends a Statement email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Statement Customer's address."
      }
    },
    "/v1/email/sendQuote": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Email"
        ],
        "operationId": "Email_SendQuote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailQuoteDto"
              }
            }
          },
          "required": true
        },
        "summary": "Sends a Quote email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Statement Customer's address."
      }
    },
    "/v1/email/sendSalesInvoice": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Email"
        ],
        "operationId": "Email_SendSalesInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceEmailInfoDto"
              }
            }
          },
          "required": true
        },
        "summary": "Sends a Sales Invoice email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Sales Invoice Customer's address."
      }
    },
    "/v1/nominalAccounts": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "accountGroupId": 13,
                        "balance": 0,
                        "code": "000",
                        "companyId": 0,
                        "description": "SALES",
                        "group": "Sales",
                        "id": 1,
                        "month1": 0,
                        "month10": 0,
                        "month11": 0,
                        "month12": 0,
                        "month2": 0,
                        "month3": 0,
                        "month4": 0,
                        "month5": 0,
                        "month6": 0,
                        "month7": 0,
                        "month8": 0,
                        "month9": 0,
                        "oBalance": 0,
                        "timeStamp": "QUFBQUFBQUFDcXc9",
                        "type": "Profit and Loss"
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NominalAccountDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "NominalAccounts"
        ],
        "operationId": "NominalAccounts_Get",
        "summary": "Returns a list of company's Nominal Accounts. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      }
    },
    "/v1/nominalAccounts/ledger": {
      "get": {
        "parameters": [
          {
            "description": "(yyyy-MM-dd) First day of month and belong to current financial year",
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "(yyyy-MM-dd) Last day of month and belong to current financial year",
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "code": "050",
                        "description": "DISCOUNT RECEIVED",
                        "id": 0,
                        "openingBalance": 0,
                        "totalBalance": 0,
                        "totalCredit": 0,
                        "totalDebit": 0,
                        "transactions": [
                          {
                            "balance": 0,
                            "bookTypeCode": "BPB",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 1,
                            "procDate": "2023-01-01T00:00:00",
                            "reference": "EFT"
                          },
                          {
                            "balance": 0,
                            "bookTypeCode": "BPB",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 2,
                            "procDate": "2023-01-02T00:00:00",
                            "reference": "DD"
                          }
                        ]
                      },
                      {
                        "code": "137",
                        "description": "SUNDRY PURCHASES",
                        "id": 0,
                        "openingBalance": 0,
                        "totalBalance": 0,
                        "totalCredit": 0,
                        "totalDebit": 0,
                        "transactions": [
                          {
                            "balance": 0,
                            "bookTypeCode": "SB",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 10,
                            "procDate": "2023-01-01T00:00:00",
                            "reference": "000001"
                          },
                          {
                            "balance": 0,
                            "bookTypeCode": "CBR",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 11,
                            "procDate": "2023-01-02T00:00:00",
                            "reference": "000002"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NominalLedgerDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "NominalAccounts"
        ],
        "operationId": "NominalAccounts_GetLedgerListing",
        "summary": "Returns information about Nominal Ledger from all Nominal accounts."
      }
    },
    "/v1/nominalAccounts/ledger/{ids}": {
      "get": {
        "parameters": [
          {
            "description": "Ids of Nominal Accounts, can contain up to 100 semicolon delimited ids.",
            "in": "path",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "(yyyy-MM-dd) First day of month and belong to current financial year",
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "(yyyy-MM-dd) Last day of month and belong to current financial year",
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "code": "050",
                        "description": "DISCOUNT RECEIVED",
                        "id": 0,
                        "openingBalance": 0,
                        "totalBalance": 0,
                        "totalCredit": 0,
                        "totalDebit": 0,
                        "transactions": [
                          {
                            "balance": 0,
                            "bookTypeCode": "BPB",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 1,
                            "procDate": "2023-01-01T00:00:00",
                            "reference": "EFT"
                          },
                          {
                            "balance": 0,
                            "bookTypeCode": "BPB",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 2,
                            "procDate": "2023-01-02T00:00:00",
                            "reference": "DD"
                          }
                        ]
                      },
                      {
                        "code": "137",
                        "description": "SUNDRY PURCHASES",
                        "id": 0,
                        "openingBalance": 0,
                        "totalBalance": 0,
                        "totalCredit": 0,
                        "totalDebit": 0,
                        "transactions": [
                          {
                            "balance": 0,
                            "bookTypeCode": "SB",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 10,
                            "procDate": "2023-01-01T00:00:00",
                            "reference": "000001"
                          },
                          {
                            "balance": 0,
                            "bookTypeCode": "CBR",
                            "credit": 0,
                            "debit": 0,
                            "details": "",
                            "entryDate": "2023-01-01T00:00:00",
                            "id": 11,
                            "procDate": "2023-01-02T00:00:00",
                            "reference": "000002"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NominalLedgerDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "NominalAccounts"
        ],
        "operationId": "NominalAccounts_GetLedgerListing",
        "summary": "Returns information about Nominal Ledger from specific Nominal Accounts."
      }
    },
    "/v1/nominalAccounts/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Id of Nominal Account to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "accountGroupId": 13,
                      "balance": 0,
                      "code": "000",
                      "companyId": 0,
                      "description": "SALES",
                      "group": "Sales",
                      "id": 1,
                      "month1": 0,
                      "month10": 0,
                      "month11": 0,
                      "month12": 0,
                      "month2": 0,
                      "month3": 0,
                      "month4": 0,
                      "month5": 0,
                      "month6": 0,
                      "month7": 0,
                      "month8": 0,
                      "month9": 0,
                      "oBalance": 0,
                      "timeStamp": "QUFBQUFBQUFDcXc9",
                      "type": "Profit and Loss"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NominalAccountDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "NominalAccounts"
        ],
        "operationId": "NominalAccounts_Get",
        "summary": "Returns information about a single Nominal Account."
      }
    },
    "/v1/ownerTypeGroups": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 2,
                      "Items": [
                        {
                          "description": "Customer",
                          "id": 1
                        },
                        {
                          "description": "Supplier",
                          "id": 2
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_OwnerTypeGroupDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "OwnerTypeGroups"
        ],
        "operationId": "OwnerTypeGroups_Get",
        "summary": "Returns a list of global Owner Type Groups. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/ownerTypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 3,
                      "Items": [
                        {
                          "description": "Prospect",
                          "id": 1,
                          "recordTypeGroupId": 1
                        },
                        {
                          "description": "Customer",
                          "id": 2,
                          "recordTypeGroupId": 1
                        },
                        {
                          "description": "Supplier",
                          "id": 3,
                          "recordTypeGroupId": 2
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_OwnerTypeDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "OwnerTypes"
        ],
        "operationId": "OwnerTypes_Get",
        "summary": "Returns a list of global Owner Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/payments": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": "C1",
                          "acEntries": [],
                          "bankAccountCode": "B1",
                          "bankAccountId": 1,
                          "bookTranTypeId": 3,
                          "customFields": [
                            {
                              "description": "F1",
                              "id": 1,
                              "userDefinedFieldId": 1,
                              "value": "f1"
                            },
                            {
                              "description": "F2",
                              "id": 2,
                              "userDefinedFieldId": 2,
                              "value": "f2"
                            }
                          ],
                          "detailCollection": [
                            "d1",
                            "d2"
                          ],
                          "discount": 2,
                          "entryDate": "2011-07-01T00:00:00",
                          "id": 2,
                          "note": "123",
                          "plaidTransactionId": null,
                          "procDate": "2011-08-08T00:00:00",
                          "reference": "000002",
                          "supplierId": 2,
                          "timestamp": "AFawJ31w3Qg=",
                          "total": 155,
                          "transferBankCode": "",
                          "transferBankId": 1,
                          "unallocated": 155
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_PaymentQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_Get",
        "summary": "Returns a list of company's Payments. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDto"
              }
            }
          },
          "description": "Information of Payment to create.",
          "required": true
        },
        "summary": "Creates a new Payment."
      }
    },
    "/v1/payments/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_PaymentDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Payments to process.",
          "required": true
        },
        "summary": "Processes a batch of Payments."
      }
    },
    "/v1/payments/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Payment to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Payment to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_Delete",
        "summary": "Removes an existing Payment."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Payment to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": "C1",
                      "acEntries": [],
                      "bankAccountCode": "B1",
                      "bankAccountId": 1,
                      "bookTranTypeId": 3,
                      "customFields": [
                        {
                          "description": "F1",
                          "id": 1,
                          "userDefinedFieldId": 1,
                          "value": "f1"
                        },
                        {
                          "description": "F2",
                          "id": 2,
                          "userDefinedFieldId": 2,
                          "value": "f2"
                        }
                      ],
                      "detailCollection": [
                        "d1",
                        "d2"
                      ],
                      "discount": 2,
                      "entryDate": "2011-07-01T00:00:00",
                      "id": 2,
                      "note": "123",
                      "plaidTransactionId": null,
                      "procDate": "2011-08-08T00:00:00",
                      "reference": "000002",
                      "supplierId": 2,
                      "timestamp": "AFawJ31w3Qg=",
                      "total": 155,
                      "transferBankCode": "",
                      "transferBankId": 1,
                      "unallocated": 155
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PaymentDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_Get",
        "summary": "Returns information about a single Payments."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Payment to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDto"
              }
            }
          },
          "description": "Information of Payment to update.",
          "required": true
        },
        "summary": "Updates an existing Payment."
      }
    },
    "/v1/productTypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 3,
                      "Items": [
                        {
                          "description": "Prospect",
                          "id": 1,
                          "recordTypeGroupId": 1
                        },
                        {
                          "description": "Customer",
                          "id": 2,
                          "recordTypeGroupId": 1
                        },
                        {
                          "description": "Supplier",
                          "id": 3,
                          "recordTypeGroupId": 2
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_OwnerTypeDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ProductTypes"
        ],
        "operationId": "ProductTypes_Get",
        "summary": "Returns a list of global Product Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/products": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "details": [
                            "det1",
                            "det2",
                            "det3"
                          ],
                          "grossUnitPrice": false,
                          "hasDefaultVatRate": false,
                          "id": 9,
                          "productTypeId": 0,
                          "stockCode": "PRO1",
                          "timestamp": "b7iyJ31w3Qg=",
                          "unitPrice": 100,
                          "vatAnalysisTypeId": 1,
                          "vatRateId": null
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_ProductDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Products"
        ],
        "operationId": "Products_Get",
        "summary": "Returns a list of company's Products. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"stockCode\" fields."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Products"
        ],
        "operationId": "Products_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            }
          },
          "description": "Information of Product to create.",
          "required": true
        },
        "summary": "Creates a new Product."
      }
    },
    "/v1/products/GetWithoutDormant": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "details": [
                            "det1",
                            "det2",
                            "det3"
                          ],
                          "grossUnitPrice": false,
                          "hasDefaultVatRate": false,
                          "id": 9,
                          "productTypeId": 0,
                          "stockCode": "PRO1",
                          "timestamp": "b7iyJ31w3Qg=",
                          "unitPrice": 100,
                          "vatAnalysisTypeId": 1,
                          "vatRateId": null
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_ProductDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Products"
        ],
        "operationId": "Products_GetWithoutDormant",
        "summary": "Returns a list of company's Products without dormant records. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"stockCode\" fields."
      }
    },
    "/v1/products/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Products"
        ],
        "operationId": "Products_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_ProductDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Products to process.",
          "required": true
        },
        "summary": "Processes a batch of Products."
      }
    },
    "/v1/products/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Product to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Product to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Products"
        ],
        "operationId": "Products_Delete",
        "summary": "Removes an existing Product."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Product to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "details": [
                        "det1",
                        "det2",
                        "det3"
                      ],
                      "grossUnitPrice": false,
                      "hasDefaultVatRate": false,
                      "id": 9,
                      "productTypeId": 0,
                      "stockCode": "PRO1",
                      "timestamp": "b7iyJ31w3Qg=",
                      "unitPrice": 100,
                      "vatAnalysisTypeId": 1,
                      "vatRateId": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Products"
        ],
        "operationId": "Products_Get",
        "summary": "Returns information about a single Product."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Product to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Products"
        ],
        "operationId": "Products_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            }
          },
          "description": "Information of Product to update.",
          "required": true
        },
        "summary": "Updates an existing Product."
      }
    },
    "/v1/purchases": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": "SUP3",
                          "acEntries": [
                            {
                              "accountCode": "PU03",
                              "analysisCategoryId": 10441,
                              "description": "PUR 3",
                              "id": 12518,
                              "value": 90.91
                            }
                          ],
                          "bookTranTypeId": 4,
                          "customFields": [],
                          "detailCollection": [],
                          "entryDate": "2016-06-01T00:00:00",
                          "id": 13380,
                          "isDiscrepancyAccepted": null,
                          "netGoods": 0,
                          "netServices": 0,
                          "note": "Supplier 3",
                          "postponedAccounting": false,
                          "procDate": "2016-06-24T00:00:00",
                          "reference": "000001",
                          "supplierId": 10173,
                          "timestamp": "b7iyJ31w3Qg=",
                          "total": 100,
                          "totalNet": 90.91,
                          "totalVAT": 9.09,
                          "unallocated": 100,
                          "unpaid": 100,
                          "vatEntries": [
                            {
                              "amount": 90.91,
                              "id": 12267,
                              "percentage": 10,
                              "vatRateId": 10317
                            }
                          ],
                          "vatTypeId": 1
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_PurchaseQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Purchases"
        ],
        "operationId": "Purchases_Get",
        "summary": "Returns a list of company's Purchases. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Purchases"
        ],
        "operationId": "Purchases_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/PurchaseDto"
        },
        "summary": "Creates a new Purchase."
      }
    },
    "/v1/purchases/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Purchases"
        ],
        "operationId": "Purchases_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_PurchaseDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Purchases to process.",
          "required": true
        },
        "summary": "Processes a batch of Purchases."
      }
    },
    "/v1/purchases/createPurchaseWithGeneratingReference": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Purchases"
        ],
        "operationId": "Purchases_CreatePurchaseWithGeneratingReference",
        "requestBody": {
          "$ref": "#/components/requestBodies/PurchaseDto"
        },
        "summary": "Creates a new Purchase with auto generating reference."
      }
    },
    "/v1/purchases/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Purchase to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Purchase to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Purchases"
        ],
        "operationId": "Purchases_Delete",
        "summary": "Removes an existing Purchase."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Purchase to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": "SUP3",
                      "acEntries": [
                        {
                          "accountCode": "PU03",
                          "analysisCategoryId": 10441,
                          "description": "PUR 3",
                          "id": 12518,
                          "value": 90.91
                        }
                      ],
                      "bookTranTypeId": 4,
                      "customFields": [],
                      "detailCollection": [],
                      "entryDate": "2016-06-01T00:00:00",
                      "id": 13380,
                      "isDiscrepancyAccepted": false,
                      "netGoods": 0,
                      "netServices": 0,
                      "note": "Supplier 3",
                      "postponedAccounting": false,
                      "procDate": "2016-06-24T00:00:00",
                      "reference": "000001",
                      "supplierId": 10173,
                      "timestamp": "b7iyJ31w3Qg=",
                      "total": 100,
                      "totalNet": 90.91,
                      "totalVAT": 9.09,
                      "unallocated": 100,
                      "unpaid": 100,
                      "vatEntries": [
                        {
                          "amount": 90.91,
                          "id": 12267,
                          "percentage": 10,
                          "vatRateId": 10317
                        }
                      ],
                      "vatTypeId": 1
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PurchaseDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Purchases"
        ],
        "operationId": "Purchases_Get",
        "summary": "Returns information about a single Purchases."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Purchase to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Purchases"
        ],
        "operationId": "Purchases_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseDto"
              }
            }
          },
          "description": "Information of Purchase to update.",
          "required": true
        },
        "summary": "Updates an existing Purchase."
      }
    },
    "/v1/quotes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": null,
                          "closedDate": null,
                          "comments": "Sample",
                          "companyId": 40449,
                          "customFields": null,
                          "customerOwnerId": 70583,
                          "customerOwnerName": "Customer 1",
                          "ddNumber": "Sample",
                          "deliveryList": null,
                          "deliveryTo": null,
                          "entryDate": "2017-01-01T00:00:00",
                          "id": 1,
                          "layoutType": 1,
                          "note": null,
                          "poNumber": "Sample",
                          "procDate": "2017-01-05T00:00:00",
                          "productTrans": [
                            {
                              "acEntries": [
                                {
                                  "accountCode": "sample",
                                  "analysisCategoryId": 40888,
                                  "companyId": 40449,
                                  "id": 1,
                                  "quoteProductTranId": 40277,
                                  "value": 100
                                }
                              ],
                              "amount": 10,
                              "companyId": 40449,
                              "id": 40277,
                              "percentage": 0,
                              "productCode": "PRO1",
                              "productId": 20107,
                              "quantity": 1,
                              "tranNotes": [
                                "Product"
                              ],
                              "unitPrice": 100,
                              "vatAmount": 10,
                              "vatAnalysisTypeId": 0,
                              "vatRateId": 30657
                            }
                          ],
                          "reference": "000032",
                          "saleInvoiceId": 30044,
                          "saleRepCode": null,
                          "saleRepId": 75783,
                          "timeStamp": "b7iyJ31w3Qg=",
                          "total": 110,
                          "totalNet": 100,
                          "totalVat": 10,
                          "vatTypeId": 1
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_QuoteDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Get",
        "summary": "Returns a list of company's Quotes.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\"."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/QuoteDto"
        },
        "summary": "Creates a new Quote."
      }
    },
    "/v1/quotes/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_QuoteDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Quote to process.",
          "required": true
        },
        "summary": "Processes a batch of Quote."
      }
    },
    "/v1/quotes/close/{id}": {
      "put": {
        "parameters": [
          {
            "description": "Id of Quote to close",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Close",
        "summary": "Close a Quote."
      }
    },
    "/v1/quotes/createQuoteWithGeneratingReference": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Post_CreateQuoteWithGeneratingReference",
        "requestBody": {
          "$ref": "#/components/requestBodies/QuoteDto"
        },
        "summary": "Creates a new Quote with auto generating reference."
      }
    },
    "/v1/quotes/generateSaleInvoice": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Post_GenerateSaleInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteGeneratingInvoiceDto"
              }
            }
          },
          "description": "Id of Quote to generate",
          "required": true
        },
        "summary": "Generate a sale invoice from a Quote.\r\nWhen sale invoice is empty, new sale invoice will be generated from Quote."
      }
    },
    "/v1/quotes/reopen/{id}": {
      "put": {
        "parameters": [
          {
            "description": "Id of Quote to reopen",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Reopen",
        "summary": "Reopen a Quote."
      }
    },
    "/v1/quotes/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Quote to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Quote to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Delete",
        "summary": "Removes an existing Quote."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Sale Rep to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": null,
                      "closedDate": null,
                      "comments": "Sample",
                      "companyId": 40449,
                      "customFields": null,
                      "customerOwnerId": 70583,
                      "customerOwnerName": "Customer 1",
                      "ddNumber": "Sample",
                      "deliveryList": null,
                      "deliveryTo": null,
                      "entryDate": "2017-01-01T00:00:00",
                      "id": 1,
                      "layoutType": 1,
                      "note": null,
                      "poNumber": "Sample",
                      "procDate": "2017-01-05T00:00:00",
                      "productTrans": [
                        {
                          "acEntries": [
                            {
                              "accountCode": "sample",
                              "analysisCategoryId": 40888,
                              "companyId": 40449,
                              "id": 1,
                              "quoteProductTranId": 40277,
                              "value": 100
                            }
                          ],
                          "amount": 10,
                          "companyId": 40449,
                          "id": 40277,
                          "percentage": 0,
                          "productCode": "PRO1",
                          "productId": 20107,
                          "quantity": 1,
                          "tranNotes": [
                            "Product"
                          ],
                          "unitPrice": 100,
                          "vatAmount": 10,
                          "vatAnalysisTypeId": 0,
                          "vatRateId": 30657
                        }
                      ],
                      "reference": "000032",
                      "saleInvoiceId": 30044,
                      "saleRepCode": null,
                      "saleRepId": 75783,
                      "timeStamp": "b7iyJ31w3Qg=",
                      "total": 110,
                      "totalNet": 100,
                      "totalVat": 10,
                      "vatTypeId": 1
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/QuoteDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Get",
        "summary": "Returns information about a single Quote."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Quote to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quote"
        ],
        "operationId": "Quote_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteDto"
              }
            }
          },
          "description": "Information of Quote to update.",
          "required": true
        },
        "summary": "Updates an existing Quote."
      }
    },
    "/v1/sales": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": "code",
                          "acEntries": [
                            {
                              "accountCode": "000",
                              "analysisCategoryId": 1,
                              "description": "AnCat 1",
                              "id": 1,
                              "value": 20
                            },
                            {
                              "accountCode": "000",
                              "analysisCategoryId": 1,
                              "description": "AnCat 2",
                              "id": 2,
                              "value": 10
                            }
                          ],
                          "bookTranTypeId": 6,
                          "customFields": [
                            {
                              "description": "acudf_1",
                              "id": 1,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_1"
                            }
                          ],
                          "customerId": 1,
                          "details": "detail_1",
                          "entryDate": "2011-01-01T00:00:00",
                          "id": 1,
                          "loType": "1",
                          "note": "note_1",
                          "procDate": "2011-01-01T00:00:00",
                          "reference": "000001",
                          "timestamp": "b7iyJ31w3Qg=",
                          "total": 82.5,
                          "totalNet": 70,
                          "totalVAT": 12.5,
                          "unpaid": 12.5,
                          "vatEntries": [
                            {
                              "amount": 30,
                              "id": 1,
                              "percentage": 15,
                              "vatRateId": 1
                            },
                            {
                              "amount": 40,
                              "id": 2,
                              "percentage": 20,
                              "vatRateId": 2
                            }
                          ],
                          "vatTypeId": 1
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_SalesQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Sales"
        ],
        "operationId": "Sales_Get",
        "summary": "Returns a list of company's Sales Entries, Sales Invoices and Sales Credit Notes. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/salesCreditNotes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": "CUS3",
                          "bookTranTypeId": 7,
                          "customFields": [
                            {
                              "description": "acudf_1",
                              "id": 1,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_1"
                            },
                            {
                              "description": "acudf_2",
                              "id": 2,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_2"
                            }
                          ],
                          "customerId": 70585,
                          "deliveryTo": [
                            "dt_1",
                            "dt_2"
                          ],
                          "details": "detail_1",
                          "entryDate": "2016-06-01T00:00:00",
                          "id": 75813,
                          "loType": "1",
                          "netGoods": null,
                          "netServices": null,
                          "note": "Customer 3",
                          "ourReference": "ddNumber_1",
                          "procDate": "2016-06-24T00:00:00",
                          "productTrans": [
                            {
                              "acEntries": [
                                {
                                  "accountCode": "SA02",
                                  "analysisCategoryId": 40889,
                                  "description": "AnCat1",
                                  "id": 73455,
                                  "value": -200
                                }
                              ],
                              "amount": -220,
                              "amountNet": -200,
                              "id": 51820,
                              "percentage": 10,
                              "productCode": "PRO2",
                              "productId": 20108,
                              "quantity": -1,
                              "tranNotes": [
                                "tn_1",
                                "tn_2"
                              ],
                              "unitPrice": 200,
                              "vat": -20,
                              "vatAnalysisTypeId": 0,
                              "vatRateId": 30657
                            }
                          ],
                          "quoteId": null,
                          "reference": "000001",
                          "saleRepCode": null,
                          "saleRepId": 33110,
                          "timestamp": "sRq1J31w3Qg=",
                          "total": -220,
                          "totalNet": -200,
                          "totalVAT": -20,
                          "unpaid": -220,
                          "vatTypeId": 1,
                          "yourReference": "poNumber_1"
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_SalesCreditNoteQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesCreditNotes"
        ],
        "operationId": "SalesCreditNotes_Get",
        "summary": "Returns a list of company's Sales Credit Notes. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesCreditNotes"
        ],
        "operationId": "SalesCreditNotes_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
              }
            }
          },
          "description": "Information of Sales Credit Note to create.",
          "required": true
        },
        "summary": "Creates a new Sales Credit Note."
      }
    },
    "/v1/salesCreditNotes/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesCreditNotes"
        ],
        "operationId": "SalesCreditNotes_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_SalesInvoiceCreditNoteDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Sales Credit Notes to process.",
          "required": true
        },
        "summary": "Processes a batch of Sales Credit Notes."
      }
    },
    "/v1/salesCreditNotes/createCreditNoteWithGeneratingReference": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesCreditNotes"
        ],
        "operationId": "SalesCreditNotes_Post_CreateCreditNoteWithGeneratingReference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
              }
            }
          },
          "description": "Information of Sale Credit Note to create.",
          "required": true
        },
        "summary": "Creates a new Sale Credit Note with auto generating reference."
      }
    },
    "/v1/salesCreditNotes/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Sales Credit Note to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Sales Credit Note to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesCreditNotes"
        ],
        "operationId": "SalesCreditNotes_Delete",
        "summary": "Removes an existing Sales Credit Note."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Sales Credit Note to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": "CUS3",
                      "bookTranTypeId": 7,
                      "customFields": [
                        {
                          "description": "acudf_1",
                          "id": 1,
                          "userDefinedFieldId": 1,
                          "value": "acudfv_1"
                        },
                        {
                          "description": "acudf_2",
                          "id": 2,
                          "userDefinedFieldId": 1,
                          "value": "acudfv_2"
                        }
                      ],
                      "customerId": 70585,
                      "deliveryTo": [
                        "dt_1",
                        "dt_2"
                      ],
                      "details": "detail_1",
                      "entryDate": "2016-06-01T00:00:00",
                      "id": 75813,
                      "loType": "1",
                      "netGoods": null,
                      "netServices": null,
                      "note": "Customer 3",
                      "ourReference": "ddNumber_1",
                      "procDate": "2016-06-24T00:00:00",
                      "productTrans": [
                        {
                          "acEntries": [
                            {
                              "accountCode": "SA02",
                              "analysisCategoryId": 40889,
                              "description": "AnCat1",
                              "id": 73455,
                              "value": -200
                            }
                          ],
                          "amount": -220,
                          "amountNet": -200,
                          "id": 51820,
                          "percentage": 10,
                          "productCode": "PRO2",
                          "productId": 20108,
                          "quantity": -1,
                          "tranNotes": [
                            "tn_1",
                            "tn_2"
                          ],
                          "unitPrice": 200,
                          "vat": -20,
                          "vatAnalysisTypeId": 0,
                          "vatRateId": 30657
                        }
                      ],
                      "quoteId": null,
                      "reference": "000001",
                      "saleRepCode": null,
                      "saleRepId": 33110,
                      "timestamp": "sRq1J31w3Qg=",
                      "total": -220,
                      "totalNet": -200,
                      "totalVAT": -20,
                      "unpaid": -220,
                      "vatTypeId": 1,
                      "yourReference": "poNumber_1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesCreditNotes"
        ],
        "operationId": "SalesCreditNotes_Get",
        "summary": "Returns information about a single Sales Credit Note."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Sales Credit Note to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesCreditNotes"
        ],
        "operationId": "SalesCreditNotes_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
              }
            }
          },
          "description": "Information of Sales Credit Note to update.",
          "required": true
        },
        "summary": "Updates an existing Sales Credit Note."
      }
    },
    "/v1/salesEntries": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": "code",
                          "acEntries": [
                            {
                              "accountCode": "SA01",
                              "analysisCategoryId": 40888,
                              "description": "SAL 1",
                              "id": 73450,
                              "value": 636.36
                            }
                          ],
                          "bookTranTypeId": 5,
                          "customFields": [
                            {
                              "description": "acudf_1",
                              "id": 1,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_1"
                            },
                            {
                              "description": "acudf_2",
                              "id": 2,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_2"
                            }
                          ],
                          "customerId": 70583,
                          "detailCollection": [],
                          "details": "detail_1",
                          "entryDate": "2011-01-01T00:00:00",
                          "id": 1,
                          "isDiscrepancyAccepted": null,
                          "netGoods": 0,
                          "netServices": 0,
                          "note": "Customer 1",
                          "procDate": "2011-01-01T00:00:00",
                          "reference": "000001",
                          "timestamp": "sRq1J31w3Qg=",
                          "total": 700,
                          "totalNet": 636.36,
                          "totalVAT": 63.64,
                          "unpaid": 0,
                          "vatEntries": [
                            {
                              "amount": 636.36,
                              "id": 63649,
                              "percentage": 10,
                              "vatRateId": 30657
                            }
                          ],
                          "vatTypeId": 1
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_SalesEntryQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesEntries"
        ],
        "operationId": "SalesEntries_Get",
        "summary": "Returns a list of company's Sales Entries. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesEntries"
        ],
        "operationId": "SalesEntries_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesEntryDto"
              }
            }
          },
          "description": "Information of Sales Entry to create.",
          "required": true
        },
        "summary": "Creates a new Sales Entry."
      }
    },
    "/v1/salesEntries/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesEntries"
        ],
        "operationId": "SalesEntries_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_SalesEntryDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Sales Entries to process.",
          "required": true
        },
        "summary": "Processes a batch of Sales Entries."
      }
    },
    "/v1/salesEntries/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Sales Entry to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Sales Entry to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesEntries"
        ],
        "operationId": "SalesEntries_Delete",
        "summary": "Removes an existing Sales Entry."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Sales Entry to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": "code",
                      "acEntries": [
                        {
                          "accountCode": "SA01",
                          "analysisCategoryId": 40888,
                          "description": "SAL 1",
                          "id": 73450,
                          "value": 636.36
                        }
                      ],
                      "bookTranTypeId": 5,
                      "customFields": [
                        {
                          "description": "acudf_1",
                          "id": 1,
                          "userDefinedFieldId": 1,
                          "value": "acudfv_1"
                        },
                        {
                          "description": "acudf_2",
                          "id": 2,
                          "userDefinedFieldId": 1,
                          "value": "acudfv_2"
                        }
                      ],
                      "customerId": 70583,
                      "detailCollection": [],
                      "details": "detail_1",
                      "entryDate": "2011-01-01T00:00:00",
                      "id": 1,
                      "isDiscrepancyAccepted": false,
                      "netGoods": 0,
                      "netServices": 0,
                      "note": "Customer 1",
                      "procDate": "2011-01-01T00:00:00",
                      "reference": "000001",
                      "timestamp": "sRq1J31w3Qg=",
                      "total": 700,
                      "totalNet": 636.36,
                      "totalVAT": 63.64,
                      "unpaid": 0,
                      "vatEntries": [
                        {
                          "amount": 636.36,
                          "id": 63649,
                          "percentage": 10,
                          "vatRateId": 30657
                        }
                      ],
                      "vatTypeId": 1
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SalesEntryDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesEntries"
        ],
        "operationId": "SalesEntries_Get",
        "summary": "Returns information about a single Sales Entry."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Sales Entry to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesEntries"
        ],
        "operationId": "SalesEntries_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesEntryDto"
              }
            }
          },
          "description": "Information of Sales Entry to update.",
          "required": true
        },
        "summary": "Updates an existing Sales Entry."
      }
    },
    "/v1/salesInvoices": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "acCode": "CUS3",
                          "bookTranTypeId": 7,
                          "customFields": [
                            {
                              "description": "acudf_1",
                              "id": 1,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_1"
                            },
                            {
                              "description": "acudf_2",
                              "id": 2,
                              "userDefinedFieldId": 1,
                              "value": "acudfv_2"
                            }
                          ],
                          "customerId": 70585,
                          "deliveryTo": [
                            "dt_1",
                            "dt_2"
                          ],
                          "details": "detail_1",
                          "entryDate": "2016-06-01T00:00:00",
                          "id": 75813,
                          "loType": "1",
                          "netGoods": null,
                          "netServices": null,
                          "note": "Customer 3",
                          "ourReference": "ddNumber_1",
                          "procDate": "2016-06-24T00:00:00",
                          "productTrans": [
                            {
                              "acEntries": [
                                {
                                  "accountCode": "SA02",
                                  "analysisCategoryId": 40889,
                                  "description": "AnCat1",
                                  "id": 73455,
                                  "value": -200
                                }
                              ],
                              "amount": -220,
                              "amountNet": -200,
                              "id": 51820,
                              "percentage": 10,
                              "productCode": "PRO2",
                              "productId": 20108,
                              "quantity": -1,
                              "tranNotes": [
                                "tn_1",
                                "tn_2"
                              ],
                              "unitPrice": 200,
                              "vat": -20,
                              "vatAnalysisTypeId": 0,
                              "vatRateId": 30657
                            }
                          ],
                          "quoteId": null,
                          "reference": "000001",
                          "saleRepCode": null,
                          "saleRepId": 33110,
                          "timestamp": "sRq1J31w3Qg=",
                          "total": -220,
                          "totalNet": -200,
                          "totalVAT": -20,
                          "unpaid": -220,
                          "vatTypeId": 1,
                          "yourReference": "poNumber_1"
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_SalesInvoiceQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "SalesInvoices_Get",
        "summary": "Returns a list of company's Sales Invoices. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "SalesInvoices_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
              }
            }
          },
          "description": "Information of Sales Invoice to create.",
          "required": true
        },
        "summary": "Creates a new Sales Invoice."
      }
    },
    "/v1/salesInvoices/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "SalesInvoices_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_SalesInvoiceCreditNoteDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Sales Invoices to process.",
          "required": true
        },
        "summary": "Processes a batch of Sales Invoices."
      }
    },
    "/v1/salesInvoices/createSaleInvoiceWithGeneratingReference": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "SalesInvoices_Post_CreateSaleInvoiceWithGeneratingReference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
              }
            }
          },
          "description": "Information of Sale Invoice to create.",
          "required": true
        },
        "summary": "Creates a new Sale Invoice with auto generating reference."
      }
    },
    "/v1/salesInvoices/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Sales Invoice to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Sales Invoice to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "SalesInvoices_Delete",
        "summary": "Removes an existing Sales Invoice."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Sales Invoice to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "acCode": "CUS3",
                      "bookTranTypeId": 7,
                      "customFields": [
                        {
                          "description": "acudf_1",
                          "id": 1,
                          "userDefinedFieldId": 1,
                          "value": "acudfv_1"
                        },
                        {
                          "description": "acudf_2",
                          "id": 2,
                          "userDefinedFieldId": 1,
                          "value": "acudfv_2"
                        }
                      ],
                      "customerId": 70585,
                      "deliveryTo": [
                        "dt_1",
                        "dt_2"
                      ],
                      "details": "detail_1",
                      "entryDate": "2016-06-01T00:00:00",
                      "id": 75813,
                      "loType": "1",
                      "netGoods": null,
                      "netServices": null,
                      "note": "Customer 3",
                      "ourReference": "ddNumber_1",
                      "procDate": "2016-06-24T00:00:00",
                      "productTrans": [
                        {
                          "acEntries": [
                            {
                              "accountCode": "SA02",
                              "analysisCategoryId": 40889,
                              "description": "AnCat1",
                              "id": 73455,
                              "value": -200
                            }
                          ],
                          "amount": -220,
                          "amountNet": -200,
                          "id": 51820,
                          "percentage": 10,
                          "productCode": "PRO2",
                          "productId": 20108,
                          "quantity": -1,
                          "tranNotes": [
                            "tn_1",
                            "tn_2"
                          ],
                          "unitPrice": 200,
                          "vat": -20,
                          "vatAnalysisTypeId": 0,
                          "vatRateId": 30657
                        }
                      ],
                      "quoteId": null,
                      "reference": "000001",
                      "saleRepCode": null,
                      "saleRepId": 33110,
                      "timestamp": "sRq1J31w3Qg=",
                      "total": -220,
                      "totalNet": -200,
                      "totalVAT": -20,
                      "unpaid": -220,
                      "vatTypeId": 1,
                      "yourReference": "poNumber_1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "SalesInvoices_Get",
        "summary": "Returns information about a single Sales Invoice."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Sales Invoice to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "SalesInvoices_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
              }
            }
          },
          "description": "Information of Sales Invoice to update.",
          "required": true
        },
        "summary": "Updates an existing Sales Invoice."
      }
    },
    "/v1/salesReps": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "code": "SR0001",
                          "companyId": 123456,
                          "email": "example@gmail.com",
                          "id": 1,
                          "name": "Sales Rep 1",
                          "phone": "1234567890",
                          "timeStamp": "sRq1J31w3Qg="
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_SaleRepsDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesRep"
        ],
        "operationId": "SalesRep_Get",
        "summary": "Returns a list of company's SaleRep.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\"."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesRep"
        ],
        "operationId": "SalesRep_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRepsDto"
              }
            }
          },
          "description": "Information of Sale Rep to create.",
          "required": true
        },
        "summary": "Creates a new SaleRep."
      }
    },
    "/v1/salesReps/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesRep"
        ],
        "operationId": "SalesRep_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_SaleRepsDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Sale Rep to process.",
          "required": true
        },
        "summary": "Processes a batch of Sale Rep."
      }
    },
    "/v1/salesReps/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Sale Rep to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Sale Rep to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesRep"
        ],
        "operationId": "SalesRep_Delete",
        "summary": "Removes an existing Sale Rep."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Sale Rep to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleRepsDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesRep"
        ],
        "operationId": "SalesRep_Get",
        "summary": "Returns information about a single SaleRep."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Sale Rep to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SalesRep"
        ],
        "operationId": "SalesRep_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRepsDto"
              }
            }
          },
          "description": "Information of Sale Rep to update.",
          "required": true
        },
        "summary": "Updates an existing Sale Rep."
      }
    },
    "/v1/suppliers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 1,
                      "Items": [
                        {
                          "accountName": "Supplier Bank Acc",
                          "accountNumber": "12345678",
                          "additionalEmails": [
                            "email2@example.com",
                            "email3@example.com"
                          ],
                          "address": [
                            "Address Line 1",
                            "Address Line 2"
                          ],
                          "authCode": "VATEXCODE222",
                          "bank": {
                            "branch": "Bank",
                            "id": 1,
                            "name": "bank Name",
                            "sortCode": "B01"
                          },
                          "businessIdentifierCode": null,
                          "code": "S001",
                          "contact": "John Smith",
                          "eFTReference": "Reference",
                          "email": "supplier@email.com",
                          "fax": "1234567890",
                          "id": 10589,
                          "internationalBankAccountNumber": null,
                          "mobile": "1234567890",
                          "name": "Supplier Name",
                          "ourCode": "OURCODE111",
                          "ownerTypeId": 3,
                          "phone": "1234596970",
                          "postponedAccounting": false,
                          "purchaseImporterSetting": {
                            "analysisCategory": 1,
                            "nominal": 1,
                            "vatCategory": "PFRS"
                          },
                          "salesRepId": null,
                          "timestamp": "F323J31w3Qg=",
                          "vatAnalysisTypeId": 1,
                          "vatReg": "VATCODE0001",
                          "vatType": 2
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_SupplierQueryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Get",
        "summary": "Returns a list of company's Suppliers. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            }
          },
          "description": "Information of Supplier to create.",
          "required": true
        },
        "summary": "Creates a new Supplier."
      }
    },
    "/v1/suppliers/batch": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_ProcessBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BatchItem_SupplierDto_"
                },
                "type": "array"
              }
            }
          },
          "description": "Batch of Suppliers to process.",
          "required": true
        },
        "summary": "Processes a batch of Suppliers."
      }
    },
    "/v1/suppliers/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Supplier to remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp of Supplier to remove. Should be encoded in Base64.",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Delete",
        "summary": "Removes an existing Supplier."
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Supplier to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "If \"true\" then Supplier's ledger balance will be calculated; otherwise balance will be returned as 0.",
            "in": "query",
            "name": "needBalance",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "accountName": "Supplier Bank Acc",
                      "accountNumber": "12345678",
                      "additionalEmails": [
                        "email2@example.com",
                        "email3@example.com"
                      ],
                      "address": [
                        "Address Line 1",
                        "Address Line 2"
                      ],
                      "authCode": "VATEXCODE222",
                      "bank": {
                        "branch": "Bank",
                        "id": 1,
                        "name": "bank Name",
                        "sortCode": "B01"
                      },
                      "businessIdentifierCode": null,
                      "code": "S001",
                      "contact": "John Smith",
                      "eFTReference": "Reference",
                      "email": "supplier@email.com",
                      "fax": "1234567890",
                      "id": 10589,
                      "internationalBankAccountNumber": null,
                      "mobile": "1234567890",
                      "name": "Supplier Name",
                      "ourCode": "OURCODE111",
                      "ownerTypeId": 3,
                      "phone": "1234596970",
                      "postponedAccounting": false,
                      "purchaseImporterSetting": {
                        "analysisCategory": 1,
                        "nominal": 1,
                        "vatCategory": "PFRS"
                      },
                      "salesRepId": null,
                      "timestamp": "F323J31w3Qg=",
                      "vatAnalysisTypeId": 1,
                      "vatReg": "VATCODE0001",
                      "vatType": 2
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SupplierDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Get",
        "summary": "Returns information about a single Supplier. You may specify that Supplier's ledger balance should be calculated."
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Supplier to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            }
          },
          "description": "Information of Supplier to update.",
          "required": true
        },
        "summary": "Updates an existing Supplier."
      }
    },
    "/v1/suppliers/{itemId}/accountTrans": {
      "get": {
        "parameters": [
          {
            "description": "Id of Supplier to return account transaction.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "bookTranId": 0,
                        "bookTranTypeId": 0,
                        "bookTransactionReference": "O/Bal",
                        "bookTypeDesc": "Opening Balance",
                        "credit": 0,
                        "debit": 30,
                        "id": 2,
                        "procDate": "2012-12-31T00:00:00"
                      },
                      {
                        "bookTranId": 0,
                        "bookTranTypeId": 0,
                        "bookTransactionReference": "0000001",
                        "bookTypeDesc": "Bank Payment",
                        "credit": 0,
                        "debit": 10,
                        "id": 9,
                        "procDate": "2012-12-31T00:00:00"
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountTranDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_GetAccountTrans",
        "summary": "Returns a list of Supplier's account transactions."
      }
    },
    "/v1/suppliers/{itemId}/openingBalance": {
      "get": {
        "parameters": [
          {
            "description": "Id of Supplier to return opening balances.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "currentMonth": 10,
                      "oneMonthOld": 20,
                      "threeMonthsOld": 40,
                      "twoMonthsOld": 30
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OwnerOpeningBalanceInPeriodsDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_GetOpeningBalance",
        "summary": "Returns a Supplier's opening balances, calculated for the next periods: current month, one month old, two months old, three and more months old."
      }
    },
    "/v1/suppliers/{itemId}/openingBalanceList": {
      "get": {
        "parameters": [
          {
            "description": "Id of Supplier to return opening balances transaction.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "entryDate": "2011-01-01T00:00:00",
                        "id": 1,
                        "procDate": "2011-02-01T00:00:00",
                        "reference": "O/Bal",
                        "timestamp": "F323J31w3Qg=",
                        "total": 10,
                        "totalVAT": 1.3,
                        "unpaid": 0,
                        "vatEntries": [
                          {
                            "amount": 8.7,
                            "vatRateId": 1
                          }
                        ]
                      },
                      {
                        "entryDate": "2011-01-01T00:00:00",
                        "id": 2,
                        "procDate": "2011-02-01T00:00:00",
                        "reference": "O/Bal",
                        "timestamp": "F323J31w3Qg=",
                        "total": 20,
                        "totalVAT": 3.33,
                        "unpaid": 0,
                        "vatEntries": [
                          {
                            "amount": 16.77,
                            "vatRateId": 2
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OwnerOpeningBalanceDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_GetOpeningBalanceList",
        "summary": "Returns a list of Supplier's opening balance transactions."
      }
    },
    "/v1/userDefinedFields": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 5,
                      "Items": [
                        {
                          "categoryTypeId": 19,
                          "description": "acudf_1_1",
                          "id": 1,
                          "orderIndex": 1
                        },
                        {
                          "categoryTypeId": 19,
                          "description": "acudf_1_2",
                          "id": 2,
                          "orderIndex": 2
                        },
                        {
                          "categoryTypeId": 19,
                          "description": "acudf_1_3",
                          "id": 3,
                          "orderIndex": 3
                        },
                        {
                          "categoryTypeId": 17,
                          "description": "acudf_3",
                          "id": 5,
                          "orderIndex": 1
                        },
                        {
                          "categoryTypeId": 20,
                          "description": "acudf_2",
                          "id": 4,
                          "orderIndex": 1
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_UserDefinedFieldDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "UserDefinedFields"
        ],
        "operationId": "UserDefinedFields_Get",
        "summary": "Returns a list of company's User Defined Fields. Supports OData querying protocol.\r\nFiltering is allowed by \"categoryTypeId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields."
      }
    },
    "/v1/vatAnalysisTypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 3,
                      "Items": [
                        {
                          "description": "None",
                          "id": 0
                        },
                        {
                          "description": "Goods",
                          "id": 1
                        },
                        {
                          "description": "Services",
                          "id": 2
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_VatAnalysisTypeDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "VatAnalysisTypes"
        ],
        "operationId": "VatAnalysisTypes_Get",
        "summary": "Returns a list of global Vat Analysis Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/vatCategories": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 3,
                      "Items": [
                        {
                          "description": "Purchases For Resale",
                          "id": 1
                        },
                        {
                          "description": "Purchases Not For Resale",
                          "id": 2
                        },
                        {
                          "description": "Sales",
                          "id": 3
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_VatCategoryDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "VatCategories"
        ],
        "operationId": "VatCategories_Get",
        "summary": "Returns a list of global Vat Categories. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    },
    "/v1/vatCategories/vatRates": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "VatCategories"
        ],
        "operationId": "VatCategories_ProcessVatRates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/VatRatesByVatCategoryDto"
                },
                "type": "array"
              }
            }
          },
          "description": "Array of Vat Rates.",
          "required": true
        },
        "summary": "Process Vat Rates"
      }
    },
    "/v1/vatRates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 4,
                      "Items": [
                        {
                          "id": 2,
                          "isActive": true,
                          "isDefault": false,
                          "orderIndex": 2,
                          "percentage": 20,
                          "timestamp": null,
                          "vatCategoryId": 3
                        },
                        {
                          "id": 3,
                          "isActive": true,
                          "isDefault": false,
                          "orderIndex": 1,
                          "percentage": 25,
                          "timestamp": null,
                          "vatCategoryId": 1
                        },
                        {
                          "id": 1,
                          "isActive": true,
                          "isDefault": true,
                          "orderIndex": 1,
                          "percentage": 15,
                          "timestamp": null,
                          "vatCategoryId": 3
                        },
                        {
                          "id": 4,
                          "isActive": true,
                          "isDefault": false,
                          "orderIndex": 4,
                          "percentage": 30,
                          "timestamp": null,
                          "vatCategoryId": 4
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_VatRateDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "VatRates"
        ],
        "operationId": "VatRates_Get",
        "summary": "Returns a list of company's Vat Rates. Supports OData querying protocol.\r\nFiltering is allowed by \"vatCategoryId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields."
      }
    },
    "/v1/vatTypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "Count": 6,
                      "Items": [
                        {
                          "code": "",
                          "description": "Domestic",
                          "id": 1,
                          "isNotApplicable": false,
                          "isOnlyZero": false
                        },
                        {
                          "code": "E",
                          "description": "Other EU",
                          "id": 2,
                          "isNotApplicable": false,
                          "isOnlyZero": false
                        },
                        {
                          "code": "F",
                          "description": "Foreign - Non EU",
                          "id": 3,
                          "isNotApplicable": false,
                          "isOnlyZero": false
                        },
                        {
                          "code": "X",
                          "description": "VAT Exempt",
                          "id": 4,
                          "isNotApplicable": false,
                          "isOnlyZero": true
                        },
                        {
                          "code": "N",
                          "description": "Not Applicable",
                          "id": 5,
                          "isNotApplicable": true,
                          "isOnlyZero": false
                        },
                        {
                          "code": "R",
                          "description": "Reverse Charge",
                          "id": 6,
                          "isNotApplicable": false,
                          "isOnlyZero": false
                        }
                      ],
                      "NextPageLink": ""
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PageResult_VatTypeDto_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "VatTypes"
        ],
        "operationId": "VatTypes_Get",
        "summary": "Returns a list of global Vat Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      }
    }
  },
  "components": {
    "requestBodies": {
      "PurchaseDto": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PurchaseDto"
            }
          }
        },
        "description": "Information of Purchase to create.",
        "required": true
      },
      "QuoteDto": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/QuoteDto"
            }
          }
        },
        "description": "Information of Quote to create.",
        "required": true
      }
    },
    "schemas": {
      "AcEntryDto": {
        "properties": {
          "accountCode": {
            "type": "string"
          },
          "analysisCategoryId": {
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "AccountDto": {
        "properties": {
          "accountGroup": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AccountTranDto": {
        "properties": {
          "bookTranId": {
            "format": "int64",
            "type": "integer"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "bookTransactionReference": {
            "type": "string"
          },
          "bookTypeDesc": {
            "type": "string"
          },
          "credit": {
            "format": "double",
            "type": "number"
          },
          "debit": {
            "format": "double",
            "type": "number"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcudfValueDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "userDefinedFieldId": {
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AnalysisCategoryDto": {
        "properties": {
          "accountCode": {
            "type": "string"
          },
          "accountId": {
            "format": "int64",
            "type": "integer"
          },
          "categoryTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "orderIndex": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BankAccountDto": {
        "example": {
          "acCode": "B1",
          "accountName": "",
          "accountNumber": "83700896",
          "address": [
            "Address Line 1",
            "Address Line 2"
          ],
          "bankFeedSource": 0,
          "businessIdentifierCodes": "AIBKIE2D",
          "categoryId": 41704,
          "creditorScheme": "XXXX",
          "details": "Bank_1",
          "id": 1,
          "internationalBankAccountNumber": "IE67 BOFI 9027 0925 7277 59",
          "isDefaultBank": false,
          "lastChq": "000005",
          "nominalAcCode": "B101",
          "oBalance": 0,
          "sortCode": "900284",
          "timestamp": "QUFBQUFBQUFDcXc9"
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "address": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bankFeedSource": {
            "format": "int32",
            "type": "integer"
          },
          "businessIdentifierCodes": {
            "type": "string"
          },
          "categoryId": {
            "format": "int64",
            "type": "integer"
          },
          "creditorScheme": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "internationalBankAccountNumber": {
            "type": "string"
          },
          "isDefaultBank": {
            "type": "boolean"
          },
          "lastChq": {
            "type": "string"
          },
          "nominalAcCode": {
            "type": "string"
          },
          "oBalance": {
            "format": "double",
            "type": "number"
          },
          "sortCode": {
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BankAccountQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "address": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bankFeedSource": {
            "format": "int32",
            "type": "integer"
          },
          "businessIdentifierCodes": {
            "type": "string"
          },
          "categoryId": {
            "format": "int64",
            "type": "integer"
          },
          "creditorScheme": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "internationalBankAccountNumber": {
            "type": "string"
          },
          "isDefaultBank": {
            "type": "boolean"
          },
          "lastChq": {
            "type": "string"
          },
          "nominalAcCode": {
            "type": "string"
          },
          "sortCode": {
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BatchItem_BankAccountDto_": {
        "example": {
          "item": {
            "acCode": "B1",
            "accountName": "",
            "accountNumber": "83700896",
            "address": [
              "Address Line 1",
              "Address Line 2"
            ],
            "bankFeedSource": 0,
            "businessIdentifierCodes": "AIBKIE2D",
            "categoryId": 41704,
            "creditorScheme": "XXXX",
            "details": "Bank_111111111111111111",
            "id": 1,
            "internationalBankAccountNumber": "IE67 BOFI 9027 0925 7277 59",
            "isDefaultBank": false,
            "lastChq": "000005",
            "nominalAcCode": "B101",
            "oBalance": 0,
            "sortCode": "900284",
            "timestamp": "QUFBQUFBQUFDcXc9"
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/BankAccountDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_CashPaymentDto_": {
        "example": {
          "item": {
            "acEntries": [
              {
                "accountCode": "CP01",
                "analysisCategoryId": 10433,
                "description": "Cash Pay 01",
                "id": 62741,
                "value": 200
              }
            ],
            "bankAccountCode": "BAK2",
            "bankAccountId": 11111,
            "bookTranTypeId": 2,
            "customFields": [],
            "detailCollection": [
              "test"
            ],
            "discount": 0,
            "entryDate": "2017-07-01T00:00:00",
            "id": 12345,
            "ledger": 100,
            "lodgement": 0,
            "note": "Supplier 1",
            "procDate": "2017-07-26T00:00:00",
            "supplierId": 70599,
            "timestamp": "hZGrJ31w3Qg=",
            "total": 100
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CashPaymentDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_CashReceiptDto_": {
        "example": {
          "item": {
            "acEntries": [
              {
                "accountCode": "000",
                "analysisCategoryId": 1,
                "description": "AnCat1",
                "id": 1,
                "value": 30
              }
            ],
            "bookTranTypeId": 1,
            "customFields": [
              {
                "description": "acudf_1",
                "id": 1,
                "userDefinedFieldId": 1,
                "value": "acudfv_1"
              }
            ],
            "detailCollection": [
              "det_1",
              "det_2",
              "det_3"
            ],
            "discount": 0,
            "entryDate": "2011-01-01T00:00:00",
            "id": 1,
            "ledger": 0,
            "note": "note1",
            "procDate": "2011-01-05T00:00:00",
            "timestamp": "n/OtJ31w3Qg=",
            "total": 50,
            "unallocated": 0,
            "vatEntries": [
              {
                "amount": 50,
                "id": 1,
                "percentage": 15,
                "vatRateId": 1
              }
            ]
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CashReceiptDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_CustomerDto_": {
        "example": {
          "item": {
            "accountName": "",
            "accountNumber": "12345678",
            "additionalEmails": [
              "email2@example.com",
              "email3@example.com"
            ],
            "address": [
              "Address Line 1",
              "Address Line 2"
            ],
            "authCode": "VATEXCODE222",
            "bank": {
              "branch": "Bank",
              "id": 1,
              "name": "bank Name",
              "sortCode": "B01"
            },
            "businessIdentifierCode": "AIBI02",
            "code": "12345678",
            "contact": "John Smith",
            "delivery": [
              "Delivery 1",
              "Delivery 2"
            ],
            "eFTReference": "Reference",
            "email": "customer@email.com",
            "fax": "1234567890",
            "id": 10589,
            "internationalBankAccountNumber": "1233432532",
            "mobile": "1234567890",
            "name": "Customer Name 1",
            "ourCode": "OURCODE111",
            "ownerTypeId": 1,
            "phone": "1234596970",
            "salesRepId": 1,
            "timestamp": "AFawJ31w3Qg=",
            "vatAnalysisTypeId": 1,
            "vatReg": "VATCODE0001",
            "vatType": 2
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CustomerDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_PaymentDto_": {
        "example": {
          "item": {
            "acCode": "C1",
            "acEntries": [],
            "bankAccountCode": "B1",
            "bankAccountId": 1,
            "bookTranTypeId": 3,
            "customFields": [
              {
                "description": "F1",
                "id": 1,
                "userDefinedFieldId": 1,
                "value": "f1"
              },
              {
                "description": "F2",
                "id": 2,
                "userDefinedFieldId": 2,
                "value": "f2"
              }
            ],
            "detailCollection": [
              "d1",
              "d2"
            ],
            "discount": 2,
            "entryDate": "2011-07-01T00:00:00",
            "id": 2,
            "note": "123",
            "procDate": "2011-08-08T00:00:00",
            "reference": "000002",
            "supplierId": 2,
            "timestamp": "AFawJ31w3Qg=",
            "total": 155,
            "transferBankCode": "",
            "transferBankId": 1,
            "unallocated": 155
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PaymentDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_ProductDto_": {
        "example": {
          "item": {
            "details": [
              "det1",
              "det2",
              "det3"
            ],
            "grossUnitPrice": false,
            "hasDefaultVatRate": false,
            "id": 9,
            "productTypeId": 0,
            "stockCode": "PRO1",
            "timestamp": "b7iyJ31w3Qg=",
            "unitPrice": 100,
            "vatAnalysisTypeId": 1
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_PurchaseDto_": {
        "example": {
          "item": {
            "acCode": "SUP3",
            "acEntries": [
              {
                "accountCode": "PU03",
                "analysisCategoryId": 10441,
                "description": "PUR 3",
                "id": 12518,
                "value": 90.91
              }
            ],
            "bookTranTypeId": 4,
            "customFields": [],
            "detailCollection": [],
            "entryDate": "2016-06-01T00:00:00",
            "id": 13380,
            "netGoods": 0,
            "netServices": 0,
            "note": "Supplier 3",
            "procDate": "2016-06-24T00:00:00",
            "reference": "000001",
            "supplierId": 10173,
            "timestamp": "b7iyJ31w3Qg=",
            "total": 100,
            "totalNet": 90.91,
            "totalVAT": 9.09,
            "unallocated": 100,
            "unpaid": 100,
            "vatEntries": [
              {
                "amount": 90.91,
                "id": 12267,
                "percentage": 10,
                "vatRateId": 10317
              }
            ],
            "vatTypeId": 1
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PurchaseDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_QuoteDto_": {
        "example": {
          "item": {
            "comments": "Sample",
            "companyId": 40449,
            "customerOwnerId": 70583,
            "customerOwnerName": "Customer 1",
            "ddNumber": "Sample",
            "entryDate": "2017-01-01T00:00:00",
            "id": 1,
            "layoutType": 1,
            "poNumber": "Sample",
            "procDate": "2017-01-05T00:00:00",
            "productTrans": [
              {
                "acEntries": [
                  {
                    "accountCode": "sample",
                    "analysisCategoryId": 40888,
                    "companyId": 40449,
                    "id": 1,
                    "quoteProductTranId": 40277,
                    "value": 100
                  }
                ],
                "amount": 10,
                "companyId": 40449,
                "id": 40277,
                "percentage": 0,
                "productCode": "PRO1",
                "productId": 20107,
                "quantity": 1,
                "tranNotes": [
                  "Product"
                ],
                "unitPrice": 100,
                "vatAmount": 10,
                "vatAnalysisTypeId": 0,
                "vatRateId": 30657
              }
            ],
            "reference": "000032",
            "saleInvoiceId": 30044,
            "saleRepId": 75783,
            "timeStamp": "b7iyJ31w3Qg=",
            "total": 110,
            "totalNet": 100,
            "totalVat": 10,
            "vatTypeId": 1
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/QuoteDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_SaleRepsDto_": {
        "example": {
          "item": {
            "code": "SR0001",
            "companyId": 123456,
            "email": "example@gmail.com",
            "id": 1,
            "name": "Sales Rep 1",
            "phone": "1234567890",
            "timeStamp": "F323J31w3Qg="
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SaleRepsDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_SalesEntryDto_": {
        "example": {
          "item": {
            "acCode": "code",
            "acEntries": [
              {
                "accountCode": "SA01",
                "analysisCategoryId": 40888,
                "description": "SAL 1",
                "id": 73450,
                "value": 636.36
              }
            ],
            "bookTranTypeId": 5,
            "customFields": [
              {
                "description": "acudf_1",
                "id": 1,
                "userDefinedFieldId": 1,
                "value": "acudfv_1"
              },
              {
                "description": "acudf_2",
                "id": 2,
                "userDefinedFieldId": 1,
                "value": "acudfv_2"
              }
            ],
            "customerId": 70583,
            "detailCollection": [],
            "details": "detail_1",
            "entryDate": "2011-01-01T00:00:00",
            "id": 1,
            "isDiscrepancyAccepted": false,
            "netGoods": 0,
            "netServices": 0,
            "note": "Customer 1",
            "procDate": "2011-01-01T00:00:00",
            "reference": "000001",
            "timestamp": "sRq1J31w3Qg=",
            "total": 700,
            "totalNet": 636.36,
            "totalVAT": 63.64,
            "unpaid": 0,
            "vatEntries": [
              {
                "amount": 636.36,
                "id": 63649,
                "percentage": 10,
                "vatRateId": 30657
              }
            ],
            "vatTypeId": 1
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SalesEntryDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_SalesInvoiceCreditNoteDto_": {
        "example": {
          "item": {
            "acCode": "CUS3",
            "bookTranTypeId": 7,
            "customFields": [
              {
                "description": "acudf_1",
                "id": 1,
                "userDefinedFieldId": 1,
                "value": "acudfv_1"
              },
              {
                "description": "acudf_2",
                "id": 2,
                "userDefinedFieldId": 1,
                "value": "acudfv_2"
              }
            ],
            "customerId": 70585,
            "deliveryTo": [
              "dt_1",
              "dt_2"
            ],
            "details": "detail_1",
            "entryDate": "2016-06-01T00:00:00",
            "id": 75813,
            "loType": "1",
            "note": "Customer 3",
            "ourReference": "ddNumber_1",
            "procDate": "2016-06-24T00:00:00",
            "productTrans": [
              {
                "acEntries": [
                  {
                    "accountCode": "SA02",
                    "analysisCategoryId": 40889,
                    "description": "AnCat1",
                    "id": 73455,
                    "value": -200
                  }
                ],
                "amount": -220,
                "amountNet": -200,
                "id": 51820,
                "percentage": 10,
                "productCode": "PRO2",
                "productId": 20108,
                "quantity": -1,
                "tranNotes": [
                  "tn_1",
                  "tn_2"
                ],
                "unitPrice": 200,
                "vat": -20,
                "vatAnalysisTypeId": 0,
                "vatRateId": 30657
              }
            ],
            "reference": "000001",
            "saleRepId": 33110,
            "timestamp": "sRq1J31w3Qg=",
            "total": -220,
            "totalNet": -200,
            "totalVAT": -20,
            "unpaid": -220,
            "vatTypeId": 1,
            "yourReference": "poNumber_1"
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchItem_SupplierDto_": {
        "example": {
          "item": {
            "accountName": "Supplier Bank Acc",
            "accountNumber": "12345678",
            "additionalEmails": [
              "email2@example.com",
              "email3@example.com"
            ],
            "address": [
              "Address Line 1",
              "Address Line 2"
            ],
            "authCode": "VATEXCODE222",
            "bank": {
              "branch": "Bank",
              "id": 1,
              "name": "bank Name",
              "sortCode": "B01"
            },
            "code": "S001",
            "contact": "John Smith",
            "eFTReference": "Reference",
            "email": "supplier@email.com",
            "fax": "1234567890",
            "id": 10589,
            "mobile": "1234567890",
            "name": "Supplier Name",
            "ourCode": "OURCODE111",
            "ownerTypeId": 3,
            "phone": "1234596970",
            "postponedAccounting": false,
            "purchaseImporterSetting": {
              "analysisCategory": 1,
              "nominal": 1,
              "vatCategory": "PFRS"
            },
            "timestamp": "F323J31w3Qg=",
            "vatAnalysisTypeId": 1,
            "vatReg": "VATCODE0001",
            "vatType": 2
          },
          "opCode": 1
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SupplierDto"
          },
          "opCode": {
            "description": "1 - Create\r\n2 - Update\r\n3 - Delete",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BookTranTypeDto": {
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CashPaymentDto": {
        "example": {
          "acEntries": [
            {
              "accountCode": "CP01",
              "analysisCategoryId": 10433,
              "description": "Cash Pay 01",
              "id": 62741,
              "value": 200
            }
          ],
          "bankAccountCode": "BAK2",
          "bankAccountId": 11111,
          "bookTranTypeId": 2,
          "customFields": [],
          "detailCollection": [
            "test"
          ],
          "discount": 0,
          "entryDate": "2017-07-01T00:00:00",
          "id": 12345,
          "ledger": 100,
          "lodgement": 0,
          "note": "Supplier 1",
          "procDate": "2017-07-26T00:00:00",
          "supplierId": 70599,
          "timestamp": "hZGrJ31w3Qg=",
          "total": 100
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bankAccountCode": {
            "type": "string"
          },
          "bankAccountId": {
            "format": "int64",
            "type": "integer"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discount": {
            "format": "double",
            "type": "number"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ledger": {
            "format": "double",
            "type": "number"
          },
          "lodgement": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "plaidTransactionId": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "supplierId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CashPaymentQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bankAccountCode": {
            "type": "string"
          },
          "bankAccountId": {
            "format": "int64",
            "type": "integer"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discount": {
            "format": "double",
            "type": "number"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ledger": {
            "format": "double",
            "type": "number"
          },
          "lodgement": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "plaidTransactionId": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "supplierId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "unallocated": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CashReceiptDto": {
        "example": {
          "acEntries": [
            {
              "accountCode": "000",
              "analysisCategoryId": 1,
              "description": "AnCat1",
              "id": 1,
              "value": 30
            }
          ],
          "bookTranTypeId": 1,
          "customFields": [
            {
              "description": "acudf_1",
              "id": 1,
              "userDefinedFieldId": 1,
              "value": "acudfv_1"
            }
          ],
          "detailCollection": [
            "det_1",
            "det_2",
            "det_3"
          ],
          "discount": 0,
          "entryDate": "2011-01-01T00:00:00",
          "id": 1,
          "ledger": 0,
          "note": "note1",
          "procDate": "2011-01-05T00:00:00",
          "timestamp": "n/OtJ31w3Qg=",
          "total": 50,
          "unallocated": 0,
          "vatEntries": [
            {
              "amount": 50,
              "id": 1,
              "percentage": 15,
              "vatRateId": 1
            }
          ]
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discount": {
            "format": "double",
            "type": "number"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ledger": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "plaidTransactionId": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "unallocated": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/VatEntryDto"
            },
            "type": "array"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CashReceiptQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discount": {
            "format": "double",
            "type": "number"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ledger": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "plaidTransactionId": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "unallocated": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/VatEntryDto"
            },
            "type": "array"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CategoryTypeDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CompanyFinancialYearViewModel": {
        "properties": {
          "firstMonth": {
            "format": "int32",
            "type": "integer"
          },
          "startMonth": {
            "format": "int32",
            "type": "integer"
          },
          "startYear": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CompanyGeneralDetaisViewModel": {
        "properties": {
          "companyAddresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "companyName": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "currencyDescription": {
            "type": "string"
          },
          "currencyId": {
            "format": "int64",
            "type": "integer"
          },
          "currentcySymbol": {
            "type": "string"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phones": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "regionDescription": {
            "type": "string"
          },
          "regionId": {
            "format": "int64",
            "type": "integer"
          },
          "vatReg": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyOptionDto": {
        "properties": {
          "allowEntryOfGrossPriceInInvoicing": {
            "type": "boolean"
          },
          "creditInputForReverseChargeVAT": {
            "type": "boolean"
          },
          "creditNoteJournalAgeingName": {
            "type": "string"
          },
          "creditNoteJournalAgeingValue": {
            "format": "int32",
            "type": "integer"
          },
          "discrepancyAllowed": {
            "format": "double",
            "type": "number"
          },
          "enableVOCRReporting": {
            "type": "boolean"
          },
          "marginVatScheme": {
            "type": "boolean"
          },
          "printOSItemsOnly": {
            "type": "boolean"
          },
          "purchasesVatAnalysisType": {
            "format": "int64",
            "type": "integer"
          },
          "salesVatAnalysisType": {
            "format": "int64",
            "type": "integer"
          },
          "useAllocations": {
            "type": "boolean"
          },
          "useNominal": {
            "type": "boolean"
          },
          "useNominalCode": {
            "type": "boolean"
          },
          "vocrSettingValue": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CompanyOptionViewModel": {
        "properties": {
          "allowEntryOfGrossPriceInInvoicing": {
            "type": "boolean"
          },
          "creditInputForReverseChargeVAT": {
            "type": "boolean"
          },
          "creditNoteJournalAgeingName": {
            "type": "string"
          },
          "creditNoteJournalAgeingValue": {
            "format": "int32",
            "type": "integer"
          },
          "discrepancyAllowed": {
            "format": "double",
            "type": "number"
          },
          "enableVOCRReporting": {
            "type": "boolean"
          },
          "marginVatScheme": {
            "type": "boolean"
          },
          "printOSItemsOnly": {
            "type": "boolean"
          },
          "purchasesVatAnalysisType": {
            "format": "int64",
            "type": "integer"
          },
          "salesVatAnalysisType": {
            "format": "int64",
            "type": "integer"
          },
          "useAllocations": {
            "type": "boolean"
          },
          "useNominal": {
            "type": "boolean"
          },
          "useNominalCode": {
            "type": "boolean"
          },
          "vocrSettingValue": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CompanyReferenceSettingViewModel": {
        "properties": {
          "creditorsJournal": {
            "type": "boolean"
          },
          "debtorsJournal": {
            "type": "boolean"
          },
          "purchases": {
            "type": "boolean"
          },
          "sales": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CompanySettingDto": {
        "properties": {
          "enableVOCRReporting": {
            "type": "boolean"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "useAllocations": {
            "type": "boolean"
          },
          "value": {
            "type": "string"
          },
          "vocrSettingValue": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CompanySetupConfigViewModel": {
        "properties": {
          "financialYear": {
            "$ref": "#/components/schemas/CompanyFinancialYearViewModel"
          },
          "generalDetails": {
            "$ref": "#/components/schemas/CompanyGeneralDetaisViewModel"
          },
          "options": {
            "$ref": "#/components/schemas/CompanyOptionViewModel"
          },
          "referenceSettings": {
            "$ref": "#/components/schemas/CompanyReferenceSettingViewModel"
          }
        },
        "type": "object"
      },
      "CustomerDto": {
        "example": {
          "accountName": "",
          "accountNumber": "12345678",
          "additionalEmails": [
            "email2@example.com",
            "email3@example.com"
          ],
          "address": [
            "Address Line 1",
            "Address Line 2"
          ],
          "authCode": "VATEXCODE222",
          "bank": {
            "branch": "Bank",
            "id": 1,
            "name": "bank Name",
            "sortCode": "B01"
          },
          "businessIdentifierCode": "AIBI02",
          "code": "12345678",
          "contact": "John Smith",
          "delivery": [
            "Delivery 1",
            "Delivery 2"
          ],
          "eFTReference": "Reference",
          "email": "customer@email.com",
          "fax": "1234567890",
          "id": 10589,
          "internationalBankAccountNumber": "1233432532",
          "mobile": "1234567890",
          "name": "Customer Name 1",
          "ourCode": "OURCODE111",
          "ownerTypeId": 1,
          "phone": "1234596970",
          "salesRepId": 1,
          "timestamp": "AFawJ31w3Qg=",
          "vatAnalysisTypeId": 1,
          "vatReg": "VATCODE0001",
          "vatType": 2
        },
        "properties": {
          "accountName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "additionalEmails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "address": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authCode": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/EFTBankDto"
          },
          "businessIdentifierCode": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "delivery": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "eFTReference": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "internationalBankAccountNumber": {
            "type": "string"
          },
          "ledgerBalance": {
            "format": "double",
            "type": "number"
          },
          "mobile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "openingBalance": {
            "$ref": "#/components/schemas/OwnerOpeningBalanceInPeriodsDto"
          },
          "openingBalances": {
            "items": {
              "$ref": "#/components/schemas/OwnerOpeningBalanceDto"
            },
            "type": "array"
          },
          "ourCode": {
            "type": "string"
          },
          "ownerTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "salesRepId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatReg": {
            "type": "string"
          },
          "vatType": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CustomerQueryDto": {
        "properties": {
          "accountName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "additionalEmails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "address": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authCode": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/EFTBankDto"
          },
          "businessIdentifierCode": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "delivery": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "eFTReference": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "internationalBankAccountNumber": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ourCode": {
            "type": "string"
          },
          "ownerTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "salesRepId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatReg": {
            "type": "string"
          },
          "vatType": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EFTBankDto": {
        "properties": {
          "branch": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sortCode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmailQuoteDto": {
        "example": {
          "bccAddresses": [
            "bcc1@email.com",
            "bcc2@email.com",
            "bcc3@email.com"
          ],
          "messageBody": "Email message",
          "quoteId": 1,
          "toAddress": "to@email.com"
        },
        "properties": {
          "bccAddresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "messageBody": {
            "type": "string"
          },
          "quoteId": {
            "format": "int64",
            "type": "integer"
          },
          "toAddress": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmailStatementDto": {
        "example": {
          "bccAddresses": [
            "bcc1@email.com",
            "bcc2@email.com",
            "bcc3@email.com"
          ],
          "customerId": 1,
          "fromPeriod": "2016-04-07T00:00:00",
          "messageBody": "Email message",
          "minimumBalance": 4,
          "toAddress": "to@email.com",
          "toPeriod": "2016-06-07T00:00:00"
        },
        "properties": {
          "bccAddresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "fromPeriod": {
            "format": "date-time",
            "type": "string"
          },
          "messageBody": {
            "type": "string"
          },
          "minimumBalance": {
            "format": "double",
            "type": "number"
          },
          "toAddress": {
            "type": "string"
          },
          "toPeriod": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FilterClause": {
        "properties": {
          "Expression": {
            "$ref": "#/components/schemas/SingleValueNode",
            "readOnly": true
          },
          "ItemType": {
            "$ref": "#/components/schemas/IEdmTypeReference",
            "readOnly": true
          },
          "RangeVariable": {
            "$ref": "#/components/schemas/RangeVariable",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "FilterQueryOption": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "FilterClause": {
            "$ref": "#/components/schemas/FilterClause",
            "readOnly": true
          },
          "RawValue": {
            "readOnly": true,
            "type": "string"
          },
          "Validator": {
            "$ref": "#/components/schemas/FilterQueryValidator"
          }
        },
        "type": "object"
      },
      "FilterQueryValidator": {
        "properties": {},
        "type": "object"
      },
      "FinancialYearDto": {
        "properties": {
          "firstMonth": {
            "format": "int32",
            "type": "integer"
          },
          "startMonth": {
            "format": "int32",
            "type": "integer"
          },
          "startYear": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IEdmDirectValueAnnotationsManager": {
        "properties": {},
        "type": "object"
      },
      "IEdmModel": {
        "properties": {
          "DirectValueAnnotationsManager": {
            "$ref": "#/components/schemas/IEdmDirectValueAnnotationsManager",
            "readOnly": true
          },
          "ReferencedModels": {
            "items": {
              "$ref": "#/components/schemas/IEdmModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "SchemaElements": {
            "items": {
              "$ref": "#/components/schemas/IEdmSchemaElement"
            },
            "readOnly": true,
            "type": "array"
          },
          "VocabularyAnnotations": {
            "items": {
              "$ref": "#/components/schemas/IEdmVocabularyAnnotation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "IEdmSchemaElement": {
        "properties": {
          "Name": {
            "readOnly": true,
            "type": "string"
          },
          "Namespace": {
            "readOnly": true,
            "type": "string"
          },
          "SchemaElementKind": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IEdmTerm": {
        "properties": {
          "Name": {
            "readOnly": true,
            "type": "string"
          },
          "Namespace": {
            "readOnly": true,
            "type": "string"
          },
          "SchemaElementKind": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "TermKind": {
            "enum": [
              0,
              1,
              2
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IEdmType": {
        "properties": {
          "TypeKind": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IEdmTypeReference": {
        "properties": {
          "Definition": {
            "$ref": "#/components/schemas/IEdmType",
            "readOnly": true
          },
          "IsNullable": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "IEdmVocabularyAnnotatable": {
        "properties": {},
        "type": "object"
      },
      "IEdmVocabularyAnnotation": {
        "properties": {
          "Qualifier": {
            "readOnly": true,
            "type": "string"
          },
          "Target": {
            "$ref": "#/components/schemas/IEdmVocabularyAnnotatable",
            "readOnly": true
          },
          "Term": {
            "$ref": "#/components/schemas/IEdmTerm",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "InlineCountQueryOption": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "RawValue": {
            "readOnly": true,
            "type": "string"
          },
          "Value": {
            "enum": [
              0,
              1
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NominalAccountDto": {
        "properties": {
          "accountGroupId": {
            "format": "int64",
            "type": "integer"
          },
          "balance": {
            "format": "double",
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "companyId": {
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "month1": {
            "format": "double",
            "type": "number"
          },
          "month10": {
            "format": "double",
            "type": "number"
          },
          "month11": {
            "format": "double",
            "type": "number"
          },
          "month12": {
            "format": "double",
            "type": "number"
          },
          "month2": {
            "format": "double",
            "type": "number"
          },
          "month3": {
            "format": "double",
            "type": "number"
          },
          "month4": {
            "format": "double",
            "type": "number"
          },
          "month5": {
            "format": "double",
            "type": "number"
          },
          "month6": {
            "format": "double",
            "type": "number"
          },
          "month7": {
            "format": "double",
            "type": "number"
          },
          "month8": {
            "format": "double",
            "type": "number"
          },
          "month9": {
            "format": "double",
            "type": "number"
          },
          "oBalance": {
            "format": "double",
            "type": "number"
          },
          "timeStamp": {
            "format": "byte",
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NominalLedgerDto": {
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "openingBalance": {
            "format": "double",
            "type": "number"
          },
          "totalBalance": {
            "format": "double",
            "type": "number"
          },
          "totalCredit": {
            "format": "double",
            "type": "number"
          },
          "totalDebit": {
            "format": "double",
            "type": "number"
          },
          "transactions": {
            "items": {
              "$ref": "#/components/schemas/NominalLedgerTransactionDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NominalLedgerTransactionDto": {
        "properties": {
          "balance": {
            "format": "double",
            "type": "number"
          },
          "bookTypeCode": {
            "type": "string"
          },
          "credit": {
            "format": "double",
            "type": "number"
          },
          "debit": {
            "format": "double",
            "type": "number"
          },
          "details": {
            "type": "string"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ODataQueryContext": {
        "properties": {
          "ElementClrType": {
            "readOnly": true,
            "type": "string"
          },
          "ElementType": {
            "$ref": "#/components/schemas/IEdmType",
            "readOnly": true
          },
          "Model": {
            "$ref": "#/components/schemas/IEdmModel",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_AccountDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_AnalysisCategoryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_BankAccountQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_BookTranTypeDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_CashPaymentQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_CashReceiptQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_CategoryTypeDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_CompanySettingDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_CustomerQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_OwnerTypeDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_OwnerTypeGroupDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_PaymentQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_ProductDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_PurchaseQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_QuoteDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_SaleRepsDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_SalesCreditNoteQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_SalesEntryQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_SalesInvoiceQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_SalesQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_SupplierQueryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_UserDefinedFieldDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_VatAnalysisTypeDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_VatCategoryDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_VatRateDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryOptions_VatTypeDto_": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "Filter": {
            "$ref": "#/components/schemas/FilterQueryOption",
            "readOnly": true
          },
          "IfMatch": {
            "readOnly": true,
            "type": "object"
          },
          "IfNoneMatch": {
            "readOnly": true,
            "type": "object"
          },
          "InlineCount": {
            "$ref": "#/components/schemas/InlineCountQueryOption",
            "readOnly": true
          },
          "OrderBy": {
            "$ref": "#/components/schemas/OrderByQueryOption",
            "readOnly": true
          },
          "RawValues": {
            "$ref": "#/components/schemas/ODataRawQueryOptions",
            "readOnly": true
          },
          "Request": {
            "readOnly": true,
            "type": "object"
          },
          "SelectExpand": {
            "$ref": "#/components/schemas/SelectExpandQueryOption",
            "readOnly": true
          },
          "Skip": {
            "$ref": "#/components/schemas/SkipQueryOption",
            "readOnly": true
          },
          "Top": {
            "$ref": "#/components/schemas/TopQueryOption",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/ODataQueryValidator"
          }
        },
        "type": "object"
      },
      "ODataQueryValidator": {
        "properties": {},
        "type": "object"
      },
      "ODataRawQueryOptions": {
        "properties": {
          "Expand": {
            "readOnly": true,
            "type": "string"
          },
          "Filter": {
            "readOnly": true,
            "type": "string"
          },
          "Format": {
            "readOnly": true,
            "type": "string"
          },
          "InlineCount": {
            "readOnly": true,
            "type": "string"
          },
          "OrderBy": {
            "readOnly": true,
            "type": "string"
          },
          "Select": {
            "readOnly": true,
            "type": "string"
          },
          "Skip": {
            "readOnly": true,
            "type": "string"
          },
          "SkipToken": {
            "readOnly": true,
            "type": "string"
          },
          "Top": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderByClause": {
        "properties": {
          "Direction": {
            "enum": [
              0,
              1
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "Expression": {
            "$ref": "#/components/schemas/SingleValueNode",
            "readOnly": true
          },
          "ItemType": {
            "$ref": "#/components/schemas/IEdmTypeReference",
            "readOnly": true
          },
          "RangeVariable": {
            "$ref": "#/components/schemas/RangeVariable",
            "readOnly": true
          },
          "ThenBy": {
            "$ref": "#/components/schemas/OrderByClause",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderByNode": {
        "properties": {
          "Direction": {
            "enum": [
              0,
              1
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OrderByQueryOption": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "OrderByClause": {
            "$ref": "#/components/schemas/OrderByClause",
            "readOnly": true
          },
          "OrderByNodes": {
            "items": {
              "$ref": "#/components/schemas/OrderByNode"
            },
            "readOnly": true,
            "type": "array"
          },
          "RawValue": {
            "readOnly": true,
            "type": "string"
          },
          "Validator": {
            "$ref": "#/components/schemas/OrderByQueryValidator"
          }
        },
        "type": "object"
      },
      "OrderByQueryValidator": {
        "properties": {},
        "type": "object"
      },
      "OwnerOpeningBalanceDto": {
        "properties": {
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "isChanged": {
            "type": "boolean"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/OwnerOpeningBalanceVatEntryDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OwnerOpeningBalanceInPeriodsDto": {
        "properties": {
          "currentMonth": {
            "format": "double",
            "type": "number"
          },
          "oneMonthOld": {
            "format": "double",
            "type": "number"
          },
          "threeMonthsOld": {
            "format": "double",
            "type": "number"
          },
          "twoMonthsOld": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "OwnerOpeningBalanceVatEntryDto": {
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "vatRateId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OwnerTypeDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "recordTypeGroupId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OwnerTypeGroupDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PageResult_AccountDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_AnalysisCategoryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/AnalysisCategoryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_BankAccountQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/BankAccountQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_BookTranTypeDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/BookTranTypeDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_CashPaymentQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/CashPaymentQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_CashReceiptQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/CashReceiptQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_CategoryTypeDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/CategoryTypeDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_CompanySettingDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/CompanySettingDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_CustomerQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/CustomerQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_OwnerTypeDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/OwnerTypeDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_OwnerTypeGroupDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/OwnerTypeGroupDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_PaymentQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/PaymentQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_ProductDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_PurchaseQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/PurchaseQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_QuoteDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/QuoteDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_SaleRepsDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/SaleRepsDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_SalesCreditNoteQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/SalesCreditNoteQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_SalesEntryQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/SalesEntryQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_SalesInvoiceQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/SalesInvoiceQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_SalesQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/SalesQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_SupplierQueryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/SupplierQueryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_UserDefinedFieldDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/UserDefinedFieldDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_VatAnalysisTypeDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/VatAnalysisTypeDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_VatCategoryDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/VatCategoryDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_VatRateDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/VatRateDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageResult_VatTypeDto_": {
        "properties": {
          "Count": {
            "format": "int64",
            "type": "integer"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/VatTypeDto"
            },
            "type": "array"
          },
          "NextPageLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentDto": {
        "example": {
          "acCode": "C1",
          "acEntries": [],
          "bankAccountCode": "B1",
          "bankAccountId": 1,
          "bookTranTypeId": 3,
          "customFields": [
            {
              "description": "F1",
              "id": 1,
              "userDefinedFieldId": 1,
              "value": "f1"
            },
            {
              "description": "F2",
              "id": 2,
              "userDefinedFieldId": 2,
              "value": "f2"
            }
          ],
          "detailCollection": [
            "d1",
            "d2"
          ],
          "discount": 2,
          "entryDate": "2011-07-01T00:00:00",
          "id": 2,
          "note": "123",
          "procDate": "2011-08-08T00:00:00",
          "reference": "000002",
          "supplierId": 2,
          "timestamp": "AFawJ31w3Qg=",
          "total": 155,
          "transferBankCode": "",
          "transferBankId": 1,
          "unallocated": 155
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bankAccountCode": {
            "type": "string"
          },
          "bankAccountId": {
            "format": "int64",
            "type": "integer"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discount": {
            "format": "double",
            "type": "number"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "plaidTransactionId": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "supplierId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "transferBankCode": {
            "type": "string"
          },
          "transferBankId": {
            "format": "int64",
            "type": "integer"
          },
          "unallocated": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "PaymentQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bankAccountCode": {
            "type": "string"
          },
          "bankAccountId": {
            "format": "int64",
            "type": "integer"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discount": {
            "format": "double",
            "type": "number"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "plaidTransactionId": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "supplierId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "transferBankCode": {
            "type": "string"
          },
          "transferBankId": {
            "format": "int64",
            "type": "integer"
          },
          "unallocated": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductDto": {
        "example": {
          "details": [
            "det1",
            "det2",
            "det3"
          ],
          "grossUnitPrice": false,
          "hasDefaultVatRate": false,
          "id": 9,
          "productTypeId": 0,
          "stockCode": "PRO1",
          "timestamp": "b7iyJ31w3Qg=",
          "unitPrice": 100,
          "vatAnalysisTypeId": 1
        },
        "properties": {
          "details": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "grossUnitPrice": {
            "type": "boolean"
          },
          "hasDefaultVatRate": {
            "type": "boolean"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "productTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "stockCode": {
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "unitPrice": {
            "format": "double",
            "type": "number"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatRateId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProductTranDto": {
        "properties": {
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "amount": {
            "format": "double",
            "type": "number"
          },
          "amountNet": {
            "format": "double",
            "type": "number"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "percentage": {
            "format": "double",
            "type": "number"
          },
          "productCode": {
            "type": "string"
          },
          "productId": {
            "format": "int64",
            "type": "integer"
          },
          "quantity": {
            "format": "double",
            "type": "number"
          },
          "tranNotes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unitPrice": {
            "format": "double",
            "type": "number"
          },
          "vat": {
            "format": "double",
            "type": "number"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatRateId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "amountNet"
        ],
        "type": "object"
      },
      "ProductTranQueryDto": {
        "properties": {
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "amount": {
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "amountNet": {
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "percentage": {
            "format": "double",
            "type": "number"
          },
          "productCode": {
            "type": "string"
          },
          "productId": {
            "format": "int64",
            "type": "integer"
          },
          "quantity": {
            "format": "double",
            "type": "number"
          },
          "tranNotes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unitPrice": {
            "format": "double",
            "type": "number"
          },
          "vat": {
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatRateId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PurchaseDto": {
        "example": {
          "acCode": "SUP3",
          "acEntries": [
            {
              "accountCode": "PU03",
              "analysisCategoryId": 10441,
              "description": "PUR 3",
              "id": 12518,
              "value": 90.91
            }
          ],
          "bookTranTypeId": 4,
          "customFields": [],
          "detailCollection": [],
          "entryDate": "2016-06-01T00:00:00",
          "id": 0,
          "isDiscrepancyAccepted": false,
          "netGoods": 0,
          "netServices": 0,
          "note": "Supplier 3",
          "postponedAccounting": false,
          "procDate": "2016-06-24T00:00:00",
          "supplierId": 10173,
          "total": 100,
          "totalNet": 90.91,
          "totalVAT": 9.09,
          "unallocated": 100,
          "unpaid": 100,
          "vatEntries": [
            {
              "amount": 90.91,
              "id": 12267,
              "percentage": 10,
              "vatRateId": 10317
            }
          ],
          "vatTypeId": 1
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "isDiscrepancyAccepted": {
            "type": "boolean"
          },
          "netGoods": {
            "format": "double",
            "type": "number"
          },
          "netServices": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "postponedAccounting": {
            "type": "boolean"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "supplierId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unallocated": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/VatEntryDto"
            },
            "type": "array"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PurchaseImporterSettingDto": {
        "properties": {
          "analysisCategory": {
            "format": "int64",
            "type": "integer"
          },
          "nominal": {
            "format": "int64",
            "type": "integer"
          },
          "vatCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PurchaseQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "netGoods": {
            "format": "double",
            "type": "number"
          },
          "netServices": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "postponedAccounting": {
            "type": "boolean"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "supplierId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unallocated": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/VatEntryDto"
            },
            "type": "array"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QuoteAcEntriesDto": {
        "properties": {
          "accountCode": {
            "type": "string"
          },
          "analysisCategoryId": {
            "format": "int64",
            "type": "integer"
          },
          "companyId": {
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "quoteProductTranId": {
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "QuoteDto": {
        "example": {
          "comments": "Sample",
          "companyId": 40449,
          "customerOwnerId": 70583,
          "customerOwnerName": "Customer 1",
          "ddNumber": "Sample",
          "entryDate": "2017-01-01T00:00:00",
          "id": 1,
          "layoutType": 1,
          "poNumber": "Sample",
          "procDate": "2017-01-05T00:00:00",
          "productTrans": [
            {
              "acEntries": [
                {
                  "accountCode": "sample",
                  "analysisCategoryId": 40888,
                  "companyId": 40449,
                  "id": 1,
                  "quoteProductTranId": 40277,
                  "value": 100
                }
              ],
              "amount": 10,
              "companyId": 40449,
              "id": 40277,
              "percentage": 0,
              "productCode": "PRO1",
              "productId": 20107,
              "quantity": 1,
              "tranNotes": [
                "Product"
              ],
              "unitPrice": 100,
              "vatAmount": 10,
              "vatAnalysisTypeId": 0,
              "vatRateId": 30657
            }
          ],
          "saleInvoiceId": 30044,
          "saleRepId": 75783,
          "timeStamp": "b7iyJ31w3Qg=",
          "total": 110,
          "totalNet": 100,
          "totalVat": 10,
          "vatTypeId": 1
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "closedDate": {
            "format": "date-time",
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "companyId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerOwnerId": {
            "format": "int64",
            "type": "integer"
          },
          "customerOwnerName": {
            "type": "string"
          },
          "ddNumber": {
            "type": "string"
          },
          "deliveryList": {
            "type": "string"
          },
          "deliveryTo": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "layoutType": {
            "format": "int32",
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "productTrans": {
            "items": {
              "$ref": "#/components/schemas/QuoteProductTransDto"
            },
            "type": "array"
          },
          "reference": {
            "type": "string"
          },
          "saleInvoiceId": {
            "format": "int64",
            "type": "integer"
          },
          "saleRepCode": {
            "type": "string"
          },
          "saleRepId": {
            "format": "int64",
            "type": "integer"
          },
          "timeStamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVat": {
            "format": "double",
            "type": "number"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QuoteGeneratingInvoiceDto": {
        "properties": {
          "quoteId": {
            "format": "int64",
            "type": "integer"
          },
          "saleInvoice": {
            "$ref": "#/components/schemas/SalesInvoiceCreditNoteDto"
          }
        },
        "type": "object"
      },
      "QuoteProductTransDto": {
        "properties": {
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/QuoteAcEntriesDto"
            },
            "type": "array"
          },
          "amount": {
            "format": "double",
            "type": "number"
          },
          "companyId": {
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "percentage": {
            "format": "double",
            "type": "number"
          },
          "productCode": {
            "type": "string"
          },
          "productId": {
            "format": "int64",
            "type": "integer"
          },
          "quantity": {
            "format": "double",
            "type": "number"
          },
          "tranNotes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unitPrice": {
            "format": "double",
            "type": "number"
          },
          "vatAmount": {
            "format": "double",
            "type": "number"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatRateId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RangeVariable": {
        "properties": {
          "Kind": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "Name": {
            "readOnly": true,
            "type": "string"
          },
          "TypeReference": {
            "$ref": "#/components/schemas/IEdmTypeReference",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaleRepsDto": {
        "example": {
          "code": "SR0001",
          "companyId": 123456,
          "email": "example@gmail.com",
          "id": 1,
          "name": "Sales Rep 1",
          "phone": "1234567890",
          "timeStamp": "F323J31w3Qg="
        },
        "properties": {
          "code": {
            "type": "string"
          },
          "companyId": {
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "timeStamp": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SalesCreditNoteQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "deliveryTo": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "details": {
            "type": "string"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "loType": {
            "type": "string"
          },
          "netGoods": {
            "format": "double",
            "type": "number"
          },
          "netServices": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "ourReference": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "productTrans": {
            "items": {
              "$ref": "#/components/schemas/ProductTranQueryDto"
            },
            "type": "array"
          },
          "quoteId": {
            "format": "int64",
            "type": "integer"
          },
          "reference": {
            "type": "string"
          },
          "saleRepCode": {
            "type": "string"
          },
          "saleRepId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "yourReference": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SalesEntryDto": {
        "example": {
          "acCode": "code",
          "acEntries": [
            {
              "accountCode": "SA01",
              "analysisCategoryId": 40888,
              "description": "SAL 1",
              "id": 73450,
              "value": 636.36
            }
          ],
          "bookTranTypeId": 5,
          "customFields": [
            {
              "description": "acudf_1",
              "id": 1,
              "userDefinedFieldId": 1,
              "value": "acudfv_1"
            },
            {
              "description": "acudf_2",
              "id": 2,
              "userDefinedFieldId": 1,
              "value": "acudfv_2"
            }
          ],
          "customerId": 70583,
          "detailCollection": [],
          "details": "detail_1",
          "entryDate": "2011-01-01T00:00:00",
          "id": 1,
          "isDiscrepancyAccepted": false,
          "netGoods": 0,
          "netServices": 0,
          "note": "Customer 1",
          "procDate": "2011-01-01T00:00:00",
          "reference": "000001",
          "timestamp": "sRq1J31w3Qg=",
          "total": 700,
          "totalNet": 636.36,
          "totalVAT": 63.64,
          "unpaid": 0,
          "vatEntries": [
            {
              "amount": 636.36,
              "id": 63649,
              "percentage": 10,
              "vatRateId": 30657
            }
          ],
          "vatTypeId": 1
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "details": {
            "type": "string"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "isDiscrepancyAccepted": {
            "type": "boolean"
          },
          "netGoods": {
            "format": "double",
            "type": "number"
          },
          "netServices": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/VatEntryDto"
            },
            "type": "array"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SalesEntryQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "detailCollection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "details": {
            "type": "string"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "netGoods": {
            "format": "double",
            "type": "number"
          },
          "netServices": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/VatEntryDto"
            },
            "type": "array"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SalesInvoiceCreditNoteDto": {
        "example": {
          "acCode": "CUS3",
          "bookTranTypeId": 7,
          "customFields": [
            {
              "description": "acudf_1",
              "id": 1,
              "userDefinedFieldId": 1,
              "value": "acudfv_1"
            },
            {
              "description": "acudf_2",
              "id": 2,
              "userDefinedFieldId": 1,
              "value": "acudfv_2"
            }
          ],
          "customerId": 70585,
          "deliveryTo": [
            "dt_1",
            "dt_2"
          ],
          "details": "detail_1",
          "entryDate": "2016-06-01T00:00:00",
          "id": 75813,
          "loType": "1",
          "note": "Customer 3",
          "ourReference": "ddNumber_1",
          "procDate": "2016-06-24T00:00:00",
          "productTrans": [
            {
              "acEntries": [
                {
                  "accountCode": "SA02",
                  "analysisCategoryId": 40889,
                  "description": "AnCat1",
                  "id": 73455,
                  "value": -200
                }
              ],
              "amount": -220,
              "amountNet": -200,
              "id": 51820,
              "percentage": 10,
              "productCode": "PRO2",
              "productId": 20108,
              "quantity": -1,
              "tranNotes": [
                "tn_1",
                "tn_2"
              ],
              "unitPrice": 200,
              "vat": -20,
              "vatAnalysisTypeId": 0,
              "vatRateId": 30657
            }
          ],
          "saleRepId": 33110,
          "timestamp": "sRq1J31w3Qg=",
          "total": -220,
          "totalNet": -200,
          "totalVAT": -20,
          "unpaid": -220,
          "vatTypeId": 1,
          "yourReference": "poNumber_1"
        },
        "properties": {
          "acCode": {
            "type": "string"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "deliveryTo": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "details": {
            "type": "string"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "loType": {
            "type": "string"
          },
          "netGoods": {
            "format": "double",
            "type": "number"
          },
          "netServices": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "ourReference": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "productTrans": {
            "items": {
              "$ref": "#/components/schemas/ProductTranDto"
            },
            "type": "array"
          },
          "quoteId": {
            "format": "int64",
            "type": "integer"
          },
          "reference": {
            "type": "string"
          },
          "saleRepCode": {
            "type": "string"
          },
          "saleRepId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "yourReference": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SalesInvoiceEmailInfoDto": {
        "example": {
          "bccAddresses": [
            "bcc1@email.com",
            "bcc2@email.com",
            "bcc3@email.com"
          ],
          "messageBody": "Email message",
          "salesInvoiceId": 1,
          "toAddress": "to@email.com"
        },
        "properties": {
          "bccAddresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "messageBody": {
            "type": "string"
          },
          "salesInvoiceId": {
            "format": "int64",
            "type": "integer"
          },
          "toAddress": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SalesInvoiceQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "deliveryTo": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "details": {
            "type": "string"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "loType": {
            "type": "string"
          },
          "netGoods": {
            "format": "double",
            "type": "number"
          },
          "netServices": {
            "format": "double",
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "ourReference": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "productTrans": {
            "items": {
              "$ref": "#/components/schemas/ProductTranQueryDto"
            },
            "type": "array"
          },
          "quoteId": {
            "format": "int64",
            "type": "integer"
          },
          "reference": {
            "type": "string"
          },
          "saleRepCode": {
            "type": "string"
          },
          "saleRepId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "yourReference": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SalesQueryDto": {
        "properties": {
          "acCode": {
            "type": "string"
          },
          "acEntries": {
            "items": {
              "$ref": "#/components/schemas/AcEntryDto"
            },
            "type": "array"
          },
          "bookTranTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/AcudfValueDto"
            },
            "type": "array"
          },
          "customerId": {
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "type": "string"
          },
          "entryDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "loType": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "procDate": {
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "double",
            "type": "number"
          },
          "totalNet": {
            "format": "double",
            "type": "number"
          },
          "totalVAT": {
            "format": "double",
            "type": "number"
          },
          "unpaid": {
            "format": "double",
            "type": "number"
          },
          "vatEntries": {
            "items": {
              "$ref": "#/components/schemas/VatEntryDto"
            },
            "type": "array"
          },
          "vatTypeId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SelectExpandClause": {
        "properties": {
          "AllSelected": {
            "readOnly": true,
            "type": "boolean"
          },
          "SelectedItems": {
            "items": {
              "$ref": "#/components/schemas/SelectItem"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SelectExpandQueryOption": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "RawExpand": {
            "readOnly": true,
            "type": "string"
          },
          "RawSelect": {
            "readOnly": true,
            "type": "string"
          },
          "SelectExpandClause": {
            "$ref": "#/components/schemas/SelectExpandClause",
            "readOnly": true
          },
          "Validator": {
            "$ref": "#/components/schemas/SelectExpandQueryValidator"
          }
        },
        "type": "object"
      },
      "SelectExpandQueryValidator": {
        "properties": {},
        "type": "object"
      },
      "SelectItem": {
        "properties": {},
        "type": "object"
      },
      "SingleValueNode": {
        "properties": {
          "Kind": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20
            ],
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "TypeReference": {
            "$ref": "#/components/schemas/IEdmTypeReference",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SkipQueryOption": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "RawValue": {
            "readOnly": true,
            "type": "string"
          },
          "Validator": {
            "$ref": "#/components/schemas/SkipQueryValidator"
          },
          "Value": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SkipQueryValidator": {
        "properties": {},
        "type": "object"
      },
      "SupplierDto": {
        "example": {
          "accountName": "Supplier Bank Acc",
          "accountNumber": "12345678",
          "additionalEmails": [
            "email2@example.com",
            "email3@example.com"
          ],
          "address": [
            "Address Line 1",
            "Address Line 2"
          ],
          "authCode": "VATEXCODE222",
          "bank": {
            "branch": "Bank",
            "id": 1,
            "name": "bank Name",
            "sortCode": "B01"
          },
          "code": "S001",
          "contact": "John Smith",
          "eFTReference": "Reference",
          "email": "supplier@email.com",
          "fax": "1234567890",
          "id": 10589,
          "mobile": "1234567890",
          "name": "Supplier Name",
          "ourCode": "OURCODE111",
          "ownerTypeId": 3,
          "phone": "1234596970",
          "postponedAccounting": false,
          "purchaseImporterSetting": {
            "analysisCategory": 1,
            "nominal": 1,
            "vatCategory": "PFRS"
          },
          "timestamp": "F323J31w3Qg=",
          "vatAnalysisTypeId": 1,
          "vatReg": "VATCODE0001",
          "vatType": 2
        },
        "properties": {
          "accountName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "additionalEmails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "address": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authCode": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/EFTBankDto"
          },
          "businessIdentifierCode": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "eFTReference": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "internationalBankAccountNumber": {
            "type": "string"
          },
          "ledgerBalance": {
            "format": "double",
            "type": "number"
          },
          "mobile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "openingBalance": {
            "$ref": "#/components/schemas/OwnerOpeningBalanceInPeriodsDto"
          },
          "openingBalances": {
            "items": {
              "$ref": "#/components/schemas/OwnerOpeningBalanceDto"
            },
            "type": "array"
          },
          "ourCode": {
            "type": "string"
          },
          "ownerTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "postponedAccounting": {
            "type": "boolean"
          },
          "purchaseImporterSetting": {
            "$ref": "#/components/schemas/PurchaseImporterSettingDto"
          },
          "salesRepId": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatReg": {
            "type": "string"
          },
          "vatType": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SupplierQueryDto": {
        "properties": {
          "accountName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "additionalEmails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "address": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authCode": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/EFTBankDto"
          },
          "businessIdentifierCode": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "eFTReference": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "internationalBankAccountNumber": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ourCode": {
            "type": "string"
          },
          "ownerTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "postponedAccounting": {
            "type": "boolean"
          },
          "purchaseImporterSetting": {
            "$ref": "#/components/schemas/PurchaseImporterSettingDto"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "vatAnalysisTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "vatReg": {
            "type": "string"
          },
          "vatType": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopQueryOption": {
        "properties": {
          "Context": {
            "$ref": "#/components/schemas/ODataQueryContext",
            "readOnly": true
          },
          "RawValue": {
            "readOnly": true,
            "type": "string"
          },
          "Validator": {
            "$ref": "#/components/schemas/TopQueryValidator"
          },
          "Value": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopQueryValidator": {
        "properties": {},
        "type": "object"
      },
      "UserDefinedFieldDto": {
        "properties": {
          "categoryTypeId": {
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "orderIndex": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VatAnalysisTypeDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VatCategoryDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VatEntryDto": {
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "percentage": {
            "format": "double",
            "type": "number"
          },
          "vatRateId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VatRateDto": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "orderIndex": {
            "format": "int32",
            "type": "integer"
          },
          "percentage": {
            "format": "double",
            "type": "number"
          },
          "timestamp": {
            "format": "byte",
            "type": "string"
          },
          "vatCategoryId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VatRatesByVatCategoryDto": {
        "example": {
          "vatCategoryId": 1,
          "vatRates": [
            {
              "id": 0,
              "isActive": true,
              "isDefault": false,
              "orderIndex": 0,
              "percentage": 30,
              "vatCategoryId": 1
            }
          ]
        },
        "properties": {
          "vatCategoryId": {
            "format": "int64",
            "type": "integer"
          },
          "vatRates": {
            "items": {
              "$ref": "#/components/schemas/VatRateDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VatTypeDto": {
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "isNotApplicable": {
            "type": "boolean"
          },
          "isOnlyZero": {
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  }
}