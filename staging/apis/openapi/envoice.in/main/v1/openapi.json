{
  "openapi": "3.0.0",
  "info": {
    "description": "[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)\r\n<span style='margin-left: 0.5em;'>or</span>\r\n<a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>\r\n\r\n# Quickstart\r\n\r\nVisit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.\r\n\r\n<div class='postman-tutorial'>\r\n\r\n# Tutorial for running the API in postman\r\n\r\nClick on \"\"Run in Postman\"\" button\r\n<br /><br />\r\n![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)\r\n\r\n --- \r\n\r\nA new page will open.\r\nClick the \"\"Postman for windows\"\" to run postman as a desktop app.\r\nMake sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.\r\n<br /><br />\r\n![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)\r\n\r\n --- \r\n\r\nIn chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".\r\n<br /><br />\r\n![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)\r\n\r\n --- \r\n\r\nThe OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"\r\n<br /><br />\r\n![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)\r\n\r\n --- \r\n\r\nWhen testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.  \r\n<sub>\\*Eye button in top right corner </sub>\r\n<br /><br /> \r\n![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)\r\n<br /><br /> \r\n![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)\r\n\r\n --- \r\n\r\nYou don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.\r\n<br /><br />\r\n![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)\r\n\r\n --- \r\n\r\nModify the example data to suit your needs and send a request.\r\n<br /><br />\r\n![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)\r\n</div>\r\n\r\n# Webhooks\r\n\r\nWebhooks allow you to build or set up Envoice Apps which subscribe to invoice activities. \r\nWhen one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL. \r\nWebhooks can be used to update an external invoice data storage.\r\n\r\nIn order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.\r\nAll nonworking webhooks will be ignored after a certain period of time and several retry attempts.\r\nIf after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.\r\n\r\nThe payload of the webhook is in format:\r\n```\r\n{\r\n    Signature: \"\"sha256 string\"\",\r\n    Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",\r\n    Activity: {\r\n        Message: \"string\",\r\n        Link: \"share url\",\r\n        Type: int,        \r\n        InvoiceNumber: \"string\",\r\n        InvoiceId: int,        \r\n        OrderNumber: \"string\",\r\n        OrderId: int,\r\n        Id: int,\r\n        CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\r\n    }\r\n}\r\n```            ",
    "title": "API v1.0.0",
    "version": "v1",
    "x-jentic-source-url": "https://www.envoice.in/docs/api/v1/specification"
  },
  "servers": [
    {
      "url": "https://www.envoice.in/"
    }
  ],
  "paths": {
    "/api/client/all": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClientDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClientDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClientDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClientDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClientDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Client"
        ],
        "operationId": "ClientApi_All",
        "summary": "Return all clients for the account"
      }
    },
    "/api/client/candelete": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/html": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Client"
        ],
        "operationId": "ClientApi_CanDelete",
        "summary": "Check if the provided client can be deleted"
      }
    },
    "/api/client/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Client"
        ],
        "operationId": "ClientApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClientDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClientDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ClientDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClientDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing client"
      }
    },
    "/api/client/details": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Client"
        ],
        "operationId": "ClientApi_Details",
        "summary": "Return client details. Activities and invoices included."
      }
    },
    "/api/client/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Client"
        ],
        "operationId": "ClientApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create a client"
      }
    },
    "/api/client/update": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Client"
        ],
        "operationId": "ClientApi_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update an existing client"
      }
    },
    "/api/estimation/all": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "queryOptions.page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_EstimationDetailsApiModel_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_EstimationDetailsApiModel_"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_EstimationDetailsApiModel_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_EstimationDetailsApiModel_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_EstimationDetailsApiModel_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_All",
        "summary": "Return all estimation for the account"
      }
    },
    "/api/estimation/changestatus": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/html": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_ChangeStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationChangeStatusApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EstimationChangeStatusApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationChangeStatusApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/EstimationChangeStatusApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationChangeStatusApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationChangeStatusApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Change estimation status"
      }
    },
    "/api/estimation/convert": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_Convert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "format": "int32",
                "type": "integer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "format": "int32",
                "type": "integer"
              }
            },
            "application/xml": {
              "schema": {
                "format": "int32",
                "type": "integer"
              }
            },
            "text/html": {
              "schema": {
                "format": "int32",
                "type": "integer"
              }
            },
            "text/json": {
              "schema": {
                "format": "int32",
                "type": "integer"
              }
            },
            "text/xml": {
              "schema": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          "required": true
        },
        "summary": "Convert the estimation to an invoice"
      }
    },
    "/api/estimation/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EstimationDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/EstimationDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing estimation"
      }
    },
    "/api/estimation/details": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_Details",
        "summary": "Return estimation data"
      }
    },
    "/api/estimation/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EstimationCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/EstimationCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create an estimation"
      }
    },
    "/api/estimation/sendtoclient": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_SendToClient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEstimationToClientApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendEstimationToClientApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SendEstimationToClientApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SendEstimationToClientApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEstimationToClientApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SendEstimationToClientApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Send the provided estimation to the client"
      }
    },
    "/api/estimation/status": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Accepted",
                    "Rejected"
                  ],
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Accepted",
                    "Rejected"
                  ],
                  "type": "string"
                }
              },
              "text/html": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Accepted",
                    "Rejected"
                  ],
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Accepted",
                    "Rejected"
                  ],
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Accepted",
                    "Rejected"
                  ],
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_Status",
        "summary": "Retrieve the status of the estimation"
      }
    },
    "/api/estimation/update": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationUpdateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EstimationUpdateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationUpdateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/EstimationUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimationUpdateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/EstimationUpdateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update an existing estimation"
      }
    },
    "/api/estimation/uri": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationUriApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationUriApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationUriApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationUriApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationUriApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Estimation"
        ],
        "operationId": "EstimationApi_Uri",
        "summary": "Return the unique url to the client's invoice"
      }
    },
    "/api/general/countries": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "General"
        ],
        "operationId": "GeneralApi_Countries",
        "summary": "Return all of the platform supported countries"
      }
    },
    "/api/general/currencies": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "General"
        ],
        "operationId": "GeneralApi_Currencies",
        "summary": "Return all of the platform supported currencies"
      }
    },
    "/api/general/dateformats": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "General"
        ],
        "operationId": "GeneralApi_DateFormats",
        "summary": "Return all of the platform supported Date Formats"
      }
    },
    "/api/general/uilanguages": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UILanguageDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UILanguageDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UILanguageDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UILanguageDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UILanguageDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "General"
        ],
        "operationId": "GeneralApi_UiLanguages",
        "summary": "Return all of the platform supported UI languages"
      }
    },
    "/api/invoice/all": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "queryOptions.page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceDetailsApiModel_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceDetailsApiModel_"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceDetailsApiModel_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceDetailsApiModel_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceDetailsApiModel_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_All",
        "summary": "Return all invoices for the account"
      }
    },
    "/api/invoice/allcategories": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceCategoryApiModel_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceCategoryApiModel_"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceCategoryApiModel_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceCategoryApiModel_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_InvoiceCategoryApiModel_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_All",
        "summary": "Return all invoice categories for the account"
      }
    },
    "/api/invoice/changestatus": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/html": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_ChangeStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Change invoice status"
      }
    },
    "/api/invoice/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing invoice"
      }
    },
    "/api/invoice/deletecategory": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing invoice category"
      }
    },
    "/api/invoice/details": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Details",
        "summary": "Return invoice data"
      }
    },
    "/api/invoice/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create an invoice"
      }
    },
    "/api/invoice/newcategory": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create an invoice category"
      }
    },
    "/api/invoice/pdf": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "signedVersion",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Pdf",
        "summary": "Return the PDF for the invoice"
      }
    },
    "/api/invoice/sendtoaccountant": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_SendToAccountant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToAccountantApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToAccountantApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToAccountantApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToAccountantApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToAccountantApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToAccountantApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Send the provided invoice to the accountant"
      }
    },
    "/api/invoice/sendtoclient": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_SendToClient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToClientApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToClientApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToClientApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToClientApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToClientApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceToClientApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Send the provided invoice to the client"
      }
    },
    "/api/invoice/status": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Paid",
                    "Unpaid",
                    "Overdue",
                    "Void"
                  ],
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Paid",
                    "Unpaid",
                    "Overdue",
                    "Void"
                  ],
                  "type": "string"
                }
              },
              "text/html": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Paid",
                    "Unpaid",
                    "Overdue",
                    "Void"
                  ],
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Paid",
                    "Unpaid",
                    "Overdue",
                    "Void"
                  ],
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "enum": [
                    "Draft",
                    "Paid",
                    "Unpaid",
                    "Overdue",
                    "Void"
                  ],
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Status",
        "summary": "Retrieve the status of the invoice"
      }
    },
    "/api/invoice/update": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update an existing invoice"
      }
    },
    "/api/invoice/updatecategory": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceCategoryApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryUpdateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryUpdateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryUpdateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryUpdateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCategoryUpdateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update an existing invoice category"
      }
    },
    "/api/invoice/uri": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceUriApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Invoice"
        ],
        "operationId": "InvoiceApi_Uri",
        "summary": "Return the unique url to the client's invoice"
      }
    },
    "/api/order/all": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "queryOptions.page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_OrderDetailsApiModel_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_OrderDetailsApiModel_"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_OrderDetailsApiModel_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_OrderDetailsApiModel_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_OrderDetailsApiModel_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Order"
        ],
        "operationId": "OrderApi_All",
        "summary": "Return all orders for the account"
      }
    },
    "/api/order/changeshippingdetails": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Order"
        ],
        "operationId": "OrderApi_ChangeShippingDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderShippingDetailsApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrderShippingDetailsApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderShippingDetailsApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/OrderShippingDetailsApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderShippingDetailsApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderShippingDetailsApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Change order shipping details"
      }
    },
    "/api/order/changestatus": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Order"
        ],
        "operationId": "OrderApi_ChangeStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderStatusApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderStatusApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderStatusApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderStatusApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderStatusApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderStatusApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Change order status"
      }
    },
    "/api/order/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Order"
        ],
        "operationId": "OrderApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing order"
      }
    },
    "/api/order/details": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/OrderFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Order"
        ],
        "operationId": "OrderApi_Details",
        "summary": "Return order details"
      }
    },
    "/api/order/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Order"
        ],
        "operationId": "OrderApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create an order"
      }
    },
    "/api/payment/supported": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Payment"
        ],
        "operationId": "PaymentApi_Supported",
        "summary": "Return all supported payment gateways (no currencies means all are supported)"
      }
    },
    "/api/paymentlink/all": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "queryOptions.page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_PaymentLink_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_PaymentLink_"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_PaymentLink_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_PaymentLink_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_PaymentLink_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "PaymentLink"
        ],
        "operationId": "PaymentLinkApi_All",
        "summary": "Create a payment link"
      }
    },
    "/api/paymentlink/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "PaymentLink"
        ],
        "operationId": "PaymentLinkApi_Delete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PaymentLink"
        },
        "summary": "Delete an existing payment link"
      }
    },
    "/api/paymentlink/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "PaymentLink"
        ],
        "operationId": "PaymentLinkApi_New",
        "requestBody": {
          "$ref": "#/components/requestBodies/PaymentLink"
        },
        "summary": "Create a payment link"
      }
    },
    "/api/paymentlink/uri": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkUriApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkUriApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkUriApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkUriApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkUriApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "PaymentLink"
        ],
        "operationId": "PaymentLinkApi_Uri",
        "summary": "Return the unique url to the client's payment link"
      }
    },
    "/api/product/all": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "queryOptions.page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_ProductDetailsApiModel_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_ProductDetailsApiModel_"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_ProductDetailsApiModel_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_ProductDetailsApiModel_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResult_ProductDetailsApiModel_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Product"
        ],
        "operationId": "ProductApi_All",
        "summary": "Return all products for the account"
      }
    },
    "/api/product/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Product"
        ],
        "operationId": "ProductApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProductDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ProductDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing product"
      }
    },
    "/api/product/details": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFullDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFullDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFullDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFullDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFullDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Product"
        ],
        "operationId": "ProductApi_Details",
        "summary": "Return product details"
      }
    },
    "/api/product/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Product"
        ],
        "operationId": "ProductApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create a product"
      }
    },
    "/api/product/update": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Product"
        ],
        "operationId": "ProductApi_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update an existing product"
      }
    },
    "/api/tax/all": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaxDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaxDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaxDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaxDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaxDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "TaxApi_All",
        "summary": "Return all taxes for the account"
      }
    },
    "/api/tax/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "TaxApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TaxDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TaxDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/TaxDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TaxDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing tax"
      }
    },
    "/api/tax/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "TaxApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TaxCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TaxCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/TaxCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TaxCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create a tax"
      }
    },
    "/api/tax/update": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "TaxApi_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxUpdateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TaxUpdateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TaxUpdateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/TaxUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxUpdateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TaxUpdateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update an existing tax"
      }
    },
    "/api/worktype/all": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkType"
        ],
        "operationId": "WorkTypeApi_All",
        "summary": "Return all work types for the account"
      }
    },
    "/api/worktype/delete": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkType"
        ],
        "operationId": "WorkTypeApi_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeDeleteApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeDeleteApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeDeleteApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeDeleteApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeDeleteApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeDeleteApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Delete an existing work type"
      }
    },
    "/api/worktype/details": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "workTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkType"
        ],
        "operationId": "WorkTypeApi_Details",
        "summary": "Return work type details"
      }
    },
    "/api/worktype/new": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/html": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkType"
        ],
        "operationId": "WorkTypeApi_New",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeCreateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeCreateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeCreateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeCreateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeCreateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeCreateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Create a work type"
      }
    },
    "/api/worktype/search": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "queryOptions.query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.orderBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.order",
            "required": false,
            "schema": {
              "enum": [
                "None",
                "Asc",
                "Desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "queryOptions.pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDetailsApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkType"
        ],
        "operationId": "WorkTypeApi_Search",
        "summary": "Return all work types for the account that match the query param"
      }
    },
    "/api/worktype/update": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "x-auth-key",
            "required": true,
            "schema": {
              "default": "[authentication key]",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "header",
            "name": "x-auth-secret",
            "required": true,
            "schema": {
              "default": "[authentication secret]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WorkType"
        ],
        "operationId": "WorkTypeApi_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeUpdateApiModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeUpdateApiModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeUpdateApiModel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeUpdateApiModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WorkTypeUpdateApiModel"
              }
            }
          },
          "required": true
        },
        "summary": "Update an existing work type"
      }
    }
  },
  "components": {
    "requestBodies": {
      "PaymentLink": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PaymentLink"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/PaymentLink"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PaymentLink"
            }
          },
          "text/html": {
            "schema": {
              "$ref": "#/components/schemas/PaymentLink"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/PaymentLink"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/PaymentLink"
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "Activity": {
        "properties": {
          "EstimationId": {
            "format": "int32",
            "type": "integer"
          },
          "EstimationNumber": {
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "Link": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "OrderId": {
            "format": "int32",
            "type": "integer"
          },
          "OrderNumber": {
            "type": "string"
          },
          "Type": {
            "enum": [
              "Created",
              "Draft",
              "Cloned",
              "SentViaEmail",
              "SentViaSms",
              "SentReminderViaEmail",
              "SentReminderViaSms",
              "Opened",
              "Viewed",
              "Rejected",
              "Updated",
              "Paid",
              "Unpaid",
              "Overdue",
              "NewManualPayment",
              "NewPaymentWithPaypal",
              "NewPaymentWithStripe",
              "NewPaymentWithPayoneer",
              "SentToAccountant",
              "DownloadedAsPdf",
              "MarkAsPaidByTheClient",
              "OpenedAttachment",
              "NewPaymentWithSquare",
              "NewPaymentWithKlikAndPay",
              "NewPaymentWithRazorpay",
              "NewPaymentWithWepay",
              "NewPaymentWithHalkbank",
              "ChangeStatus",
              "OrderUpdated",
              "OrderCreated",
              "NewPaymentWithTwoCheckout",
              "NewPaymentWithPaymentWall",
              "NewPaymentWithBamboraEU",
              "NewPaymentWithBamboraNA",
              "Void",
              "NewPaymentWithNlb",
              "NewPaymentWithAuthorizeNet",
              "NewPaymentWithBraintree",
              "EstimationCreated",
              "EstimationDraft",
              "EstimationCloned",
              "EstimationSentViaEmail",
              "EstimationOpened",
              "EstimationViewed",
              "EstimationAccepted",
              "EstimationRejected",
              "EstimationUpdated",
              "EstimationDownloadedAsPdf",
              "InvoiceDigitallySigned"
            ],
            "type": "string"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AdditionalClientEmail": {
        "properties": {
          "Client": {
            "$ref": "#/components/schemas/Client"
          },
          "ClientId": {
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AdditionalClientEmailApiModel": {
        "properties": {
          "Email": {
            "description": "CC",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChangeOrderStatusApiModel": {
        "properties": {
          "Id": {
            "description": "Order Id",
            "format": "int32",
            "type": "integer"
          },
          "Reason": {
            "description": "Reason for status change",
            "type": "string"
          },
          "Status": {
            "description": "New status of the order",
            "enum": [
              "PendingPayment",
              "Processing",
              "Shipped",
              "Completed",
              "OnHold",
              "Cancelled",
              "Refunded",
              "Failed"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChangeStatusApiModel": {
        "properties": {
          "Id": {
            "description": "Invoice Id",
            "format": "int32",
            "type": "integer"
          },
          "Status": {
            "description": "New status of the invoice",
            "enum": [
              "Draft",
              "Paid",
              "Unpaid",
              "Overdue",
              "Void"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Client": {
        "properties": {
          "Address": {
            "type": "string"
          },
          "ClientCountryId": {
            "format": "int32",
            "type": "integer"
          },
          "ClientCurrencyId": {
            "format": "int32",
            "type": "integer"
          },
          "CompanyRegistrationNumber": {
            "type": "string"
          },
          "DefaultDueDateInDays": {
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "UiLanguageId": {
            "format": "int32",
            "type": "integer"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          },
          "Vat": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClientCreateApiModel": {
        "properties": {
          "AdditionalEmails": {
            "description": "Client additional emails contact for CC",
            "items": {
              "$ref": "#/components/schemas/AdditionalClientEmailApiModel"
            },
            "type": "array"
          },
          "Address": {
            "description": "Client business address",
            "type": "string"
          },
          "ClientCountryId": {
            "description": "Indicates the country where the clients is from",
            "format": "int32",
            "type": "integer"
          },
          "ClientCurrencyId": {
            "description": "Indicates the default system currency used by the user for the client",
            "format": "int32",
            "type": "integer"
          },
          "CompanyRegistrationNumber": {
            "description": "Client's Company Registration Number",
            "type": "string"
          },
          "DefaultDueDateInDays": {
            "description": "Client custom payment terms",
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "description": "Client email",
            "type": "string"
          },
          "Name": {
            "description": "Name of the client",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Client phone numer",
            "type": "string"
          },
          "UiLanguageId": {
            "description": "Hold a value of the language in which the invoice will be sent",
            "format": "int32",
            "type": "integer"
          },
          "Vat": {
            "description": "Client's VAT number",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClientDeleteApiModel": {
        "properties": {
          "Id": {
            "description": "Id of client to be deleted",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ClientDetailsApiModel": {
        "properties": {
          "AdditionalEmails": {
            "description": "Client additional emails contact for CC",
            "items": {
              "$ref": "#/components/schemas/AdditionalClientEmailApiModel"
            },
            "type": "array"
          },
          "Address": {
            "description": "Client business address",
            "type": "string"
          },
          "ClientCountryId": {
            "description": "Indicates the country where the clients is from",
            "format": "int32",
            "type": "integer"
          },
          "ClientCurrencyId": {
            "description": "Indicates the default system currency used by the user for the client",
            "format": "int32",
            "type": "integer"
          },
          "CompanyRegistrationNumber": {
            "description": "Client's Company Registration Number",
            "type": "string"
          },
          "CreatedOn": {
            "description": "Date of creation",
            "format": "date-time",
            "type": "string"
          },
          "DefaultDueDateInDays": {
            "description": "Client custom payment terms",
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "description": "Client email",
            "type": "string"
          },
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the client",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Client phone numer",
            "type": "string"
          },
          "UiLanguageId": {
            "description": "Hold a value of the language in which the invoice will be sent",
            "format": "int32",
            "type": "integer"
          },
          "Vat": {
            "description": "Client's VAT number",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClientUpdateApiModel": {
        "properties": {
          "AdditionalEmails": {
            "description": "Client additional emails contact for CC",
            "items": {
              "$ref": "#/components/schemas/AdditionalClientEmailApiModel"
            },
            "type": "array"
          },
          "Address": {
            "description": "Client business address",
            "type": "string"
          },
          "ClientCountryId": {
            "description": "Indicates the country where the clients is from",
            "format": "int32",
            "type": "integer"
          },
          "ClientCurrencyId": {
            "description": "Indicates the default system currency used by the user for the client",
            "format": "int32",
            "type": "integer"
          },
          "CompanyRegistrationNumber": {
            "description": "Client's Company Registration Number",
            "type": "string"
          },
          "DefaultDueDateInDays": {
            "description": "Client custom payment terms",
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "description": "Client email",
            "type": "string"
          },
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the client",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Client phone numer",
            "type": "string"
          },
          "UiLanguageId": {
            "description": "Hold a value of the language in which the invoice will be sent",
            "format": "int32",
            "type": "integer"
          },
          "Vat": {
            "description": "Client's VAT number",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Country": {
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountryDetailsApiModel": {
        "properties": {
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the country",
            "type": "string"
          },
          "Value": {
            "description": "Country short code",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Currency": {
        "properties": {
          "Code": {
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Symbol": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CurrencyApiModel": {
        "properties": {
          "Name": {
            "description": "Name of the currency",
            "type": "string"
          },
          "Value": {
            "description": "Currency short code",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CurrencyDetailsApiModel": {
        "properties": {
          "Code": {
            "description": "Currency short numeric code",
            "type": "string"
          },
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the country",
            "type": "string"
          },
          "Symbol": {
            "description": "Currency symbol",
            "type": "string"
          },
          "Value": {
            "description": "Currency short alpha code",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationActivityApiModel": {
        "properties": {
          "EstimationNumber": {
            "description": "Indicates to which estimation this activity refers to",
            "type": "string"
          },
          "Id": {
            "description": "Id of estimation activity",
            "format": "int32",
            "type": "integer"
          },
          "Link": {
            "description": "Url which point out to a certain activity action. Ex: Click to view the payment",
            "type": "string"
          },
          "Message": {
            "description": "Message associated with the activity",
            "type": "string"
          },
          "Type": {
            "description": "Type of the activity",
            "enum": [
              "Created",
              "Draft",
              "Cloned",
              "SentViaEmail",
              "SentViaSms",
              "SentReminderViaEmail",
              "SentReminderViaSms",
              "Opened",
              "Viewed",
              "Rejected",
              "Updated",
              "Paid",
              "Unpaid",
              "Overdue",
              "NewManualPayment",
              "NewPaymentWithPaypal",
              "NewPaymentWithStripe",
              "NewPaymentWithPayoneer",
              "SentToAccountant",
              "DownloadedAsPdf",
              "MarkAsPaidByTheClient",
              "OpenedAttachment",
              "NewPaymentWithSquare",
              "NewPaymentWithKlikAndPay",
              "NewPaymentWithRazorpay",
              "NewPaymentWithWepay",
              "NewPaymentWithHalkbank",
              "ChangeStatus",
              "OrderUpdated",
              "OrderCreated",
              "NewPaymentWithTwoCheckout",
              "NewPaymentWithPaymentWall",
              "NewPaymentWithBamboraEU",
              "NewPaymentWithBamboraNA",
              "Void",
              "NewPaymentWithNlb",
              "NewPaymentWithAuthorizeNet",
              "NewPaymentWithBraintree",
              "EstimationCreated",
              "EstimationDraft",
              "EstimationCloned",
              "EstimationSentViaEmail",
              "EstimationOpened",
              "EstimationViewed",
              "EstimationAccepted",
              "EstimationRejected",
              "EstimationUpdated",
              "EstimationDownloadedAsPdf",
              "InvoiceDigitallySigned"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationAttachmentApiModel": {
        "properties": {
          "Id": {
            "description": "Id of estimation attachment",
            "format": "int32",
            "type": "integer"
          },
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationChangeStatusApiModel": {
        "properties": {
          "Id": {
            "description": "Estimation Id",
            "format": "int32",
            "type": "integer"
          },
          "Status": {
            "description": "New status of the estimation",
            "enum": [
              "Draft",
              "Accepted",
              "Rejected"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationCreateApiModel": {
        "properties": {
          "Attachments": {
            "description": "List of estimation attachments",
            "items": {
              "$ref": "#/components/schemas/EstimationCreateAttachmentApiModel"
            },
            "type": "array"
          },
          "ClientId": {
            "description": "The client to whom this estimation is assigned",
            "format": "int32",
            "type": "integer"
          },
          "ClonedFromId": {
            "description": "Indicate from which estimation this estimation has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "CurrencyId": {
            "description": "Id of the currency for the estimation amounts",
            "format": "int32",
            "type": "integer"
          },
          "ExpiresOn": {
            "description": "Indicates when the estimation will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "IssuedOn": {
            "description": "Indicates when the estimation was issued",
            "format": "date-time",
            "type": "string"
          },
          "Items": {
            "description": "List of estimation items",
            "items": {
              "$ref": "#/components/schemas/EstimationCreateItemApiModel"
            },
            "type": "array"
          },
          "Notes": {
            "description": "Internal note regarding the estimation",
            "type": "string"
          },
          "Number": {
            "description": "Unique estimation number",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this estimation",
            "items": {
              "$ref": "#/components/schemas/EstimationGatewayApiModel"
            },
            "type": "array"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "Status": {
            "description": "Indicate the status of the estimation (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Accepted",
              "Rejected"
            ],
            "type": "string"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationCreateAttachmentApiModel": {
        "properties": {
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationCreateItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Amount per unit",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "Additional description attached to the estimation item",
            "type": "string"
          },
          "DiscountPercentage": {
            "description": "Discount percentage for the overall amount",
            "format": "double",
            "type": "number"
          },
          "Quantity": {
            "description": "Quantity in total used for the work type",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Tax applied on the item",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Work type (Name of the service)",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EstimationDeleteApiModel": {
        "properties": {
          "Id": {
            "description": "Id of estimation to be deleted",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EstimationDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Security access token used for accessing the estimation anonymously",
            "type": "string"
          },
          "Client": {
            "$ref": "#/components/schemas/ClientDetailsApiModel",
            "description": "Client data referened to this estimation"
          },
          "ClonedFromId": {
            "description": "Indicate from which estimation this estimation has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this estimation"
          },
          "DiscountAmount": {
            "description": "Amount that goes as a discount",
            "format": "double",
            "type": "number"
          },
          "ExpiresOn": {
            "description": "Indicates when the estimation will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "Estimation id",
            "format": "int32",
            "type": "integer"
          },
          "IssuedOn": {
            "description": "Indicates when the estimation was issued",
            "format": "date-time",
            "type": "string"
          },
          "Notes": {
            "description": "Internal note regarding the estimation",
            "type": "string"
          },
          "Number": {
            "description": "Unique estimation number",
            "type": "string"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "Status": {
            "description": "Indicate the status of the estimation (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Accepted",
              "Rejected"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Total amount of the estimation without tax",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Amount that goes to the tax",
            "format": "double",
            "type": "number"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          },
          "TotalAmount": {
            "description": "Total amount of the estimation with tax",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "EstimationFullDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Security access token used for accessing the estimation anonymously",
            "type": "string"
          },
          "Activities": {
            "description": "List of estimation activities. estimation audit log",
            "items": {
              "$ref": "#/components/schemas/EstimationActivityApiModel"
            },
            "type": "array"
          },
          "Attachments": {
            "description": "List of estimation attachments",
            "items": {
              "$ref": "#/components/schemas/EstimationAttachmentApiModel"
            },
            "type": "array"
          },
          "Client": {
            "$ref": "#/components/schemas/ClientDetailsApiModel",
            "description": "Client data referened to this estimation"
          },
          "ClonedFromId": {
            "description": "Indicate from which estimation this estimation has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this estimation"
          },
          "DiscountAmount": {
            "description": "Amount that goes as a discount",
            "format": "double",
            "type": "number"
          },
          "ExpiresOn": {
            "description": "Indicates when the estimation will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "Estimation id",
            "format": "int32",
            "type": "integer"
          },
          "IssuedOn": {
            "description": "Indicates when the estimation was issued",
            "format": "date-time",
            "type": "string"
          },
          "Items": {
            "description": "List of estimation items",
            "items": {
              "$ref": "#/components/schemas/EstimationItemApiModel"
            },
            "type": "array"
          },
          "Notes": {
            "description": "Internal note regarding the estimation",
            "type": "string"
          },
          "Number": {
            "description": "Unique estimation number",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this estimation",
            "items": {
              "$ref": "#/components/schemas/EstimationGatewayApiModel"
            },
            "type": "array"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "Status": {
            "description": "Indicate the status of the estimation (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Accepted",
              "Rejected"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Total amount of the estimation without tax",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Amount that goes to the tax",
            "format": "double",
            "type": "number"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          },
          "TotalAmount": {
            "description": "Total amount of the estimation with tax",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "EstimationGatewayApiModel": {
        "properties": {
          "Name": {
            "description": "Name of the payment gateway",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Amount per unit",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "Additional description attached to the estimation item",
            "type": "string"
          },
          "DiscountAmount": {
            "description": "Amount that goes as a discount",
            "format": "double",
            "type": "number"
          },
          "DiscountPercentage": {
            "description": "Discount percentage for the overall amount",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Id of estimation item",
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "description": "Quantity in total used for the work type",
            "format": "double",
            "type": "number"
          },
          "SubTotalAmount": {
            "description": "Sub-Total amount of the estimation item (Amount without tax)",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Amount that goes to the tax",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Tax applied on the item",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount of the estimation item",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Work type (Name of the service)",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EstimationUpdateApiModel": {
        "properties": {
          "Attachments": {
            "description": "List of estimation attachments",
            "items": {
              "$ref": "#/components/schemas/EstimationUpdateAttachmentApiModel"
            },
            "type": "array"
          },
          "ClientId": {
            "description": "The client to whom this estimation is assigned",
            "format": "int32",
            "type": "integer"
          },
          "ClonedFromId": {
            "description": "Indicate from which estimation this estimation has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "CurrencyId": {
            "description": "Id of the currency for the estimation amounts",
            "format": "int32",
            "type": "integer"
          },
          "ExpiresOn": {
            "description": "Indicates when the estimation will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "estimation id",
            "format": "int32",
            "type": "integer"
          },
          "IssuedOn": {
            "description": "Indicates when the estimation was issued",
            "format": "date-time",
            "type": "string"
          },
          "Items": {
            "description": "List of estimation items",
            "items": {
              "$ref": "#/components/schemas/EstimationUpdateItemApiModel"
            },
            "type": "array"
          },
          "Notes": {
            "description": "Internal note regarding the estimation",
            "type": "string"
          },
          "Number": {
            "description": "Unique estimation number",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this estimation",
            "items": {
              "$ref": "#/components/schemas/EstimationGatewayApiModel"
            },
            "type": "array"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "Status": {
            "description": "Indicate the status of the estimation (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Accepted",
              "Rejected"
            ],
            "type": "string"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationUpdateAttachmentApiModel": {
        "properties": {
          "Id": {
            "description": "Id of estimation attachment",
            "format": "int32",
            "type": "integer"
          },
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EstimationUpdateItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Amount per unit",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "Additional description attached to the estimation item",
            "type": "string"
          },
          "DiscountPercentage": {
            "description": "Discount percentage for the overall amount",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Id of estimation item",
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "description": "Quantity in total used for the work type",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Tax applied on the item",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Work type (Name of the service)",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EstimationUriApiModel": {
        "properties": {
          "Link": {
            "description": "Unique link to the estimation",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExternalConnection": {
        "properties": {
          "AccessToken": {
            "type": "string"
          },
          "AccessTokenSecret": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "ExpiresOn": {
            "format": "date-time",
            "type": "string"
          },
          "ExternalUserId": {
            "type": "string"
          },
          "ExternalUsername": {
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Provider": {
            "type": "string"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IErrorInfo": {
        "properties": {
          "Code": {
            "readOnly": true,
            "type": "string"
          },
          "FaultMessage": {
            "readOnly": true,
            "type": "string"
          },
          "Group": {
            "readOnly": true,
            "type": "string"
          },
          "UserVisibleMessage": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Invoice": {
        "properties": {
          "AccessToken": {
            "type": "string"
          },
          "Activities": {
            "items": {
              "$ref": "#/components/schemas/Activity"
            },
            "type": "array"
          },
          "Attachments": {
            "items": {
              "$ref": "#/components/schemas/InvoiceAttachment"
            },
            "type": "array"
          },
          "ClientId": {
            "format": "int32",
            "type": "integer"
          },
          "ClonedFromId": {
            "format": "int32",
            "type": "integer"
          },
          "CurrencyId": {
            "format": "int32",
            "type": "integer"
          },
          "DiscountAmount": {
            "format": "double",
            "type": "number"
          },
          "Duedate": {
            "format": "date-time",
            "type": "string"
          },
          "EnablePartialPayments": {
            "type": "boolean"
          },
          "EstimationId": {
            "format": "int32",
            "type": "integer"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceCategoryId": {
            "format": "int32",
            "type": "integer"
          },
          "IsDigitallySigned": {
            "type": "boolean"
          },
          "IssuedOn": {
            "format": "date-time",
            "type": "string"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItem"
            },
            "type": "array"
          },
          "Notes": {
            "type": "string"
          },
          "Number": {
            "type": "string"
          },
          "OrderId": {
            "format": "int32",
            "type": "integer"
          },
          "PaymentGateways": {
            "items": {
              "$ref": "#/components/schemas/PaymentGatewayForInvoice"
            },
            "type": "array"
          },
          "PaymentLinkId": {
            "format": "int32",
            "type": "integer"
          },
          "Payments": {
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "type": "array"
          },
          "PoNumber": {
            "type": "string"
          },
          "RecurringProfileId": {
            "format": "int32",
            "type": "integer"
          },
          "ShouldSendReminders": {
            "type": "boolean"
          },
          "Status": {
            "enum": [
              "Draft",
              "Paid",
              "Unpaid",
              "Overdue",
              "Void"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "format": "double",
            "type": "number"
          },
          "Terms": {
            "type": "string"
          },
          "TotalAmount": {
            "format": "double",
            "type": "number"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InvoiceActivityApiModel": {
        "properties": {
          "Id": {
            "description": "Id of invoice activity",
            "format": "int32",
            "type": "integer"
          },
          "InvoiceNumber": {
            "description": "Indicates to which invoice this activity refers to",
            "type": "string"
          },
          "Link": {
            "description": "Url which point out to a certain activity action. Ex: Click to view the payment",
            "type": "string"
          },
          "Message": {
            "description": "Message associated with the activity",
            "type": "string"
          },
          "Type": {
            "description": "Type of the activity",
            "enum": [
              "Created",
              "Draft",
              "Cloned",
              "SentViaEmail",
              "SentViaSms",
              "SentReminderViaEmail",
              "SentReminderViaSms",
              "Opened",
              "Viewed",
              "Rejected",
              "Updated",
              "Paid",
              "Unpaid",
              "Overdue",
              "NewManualPayment",
              "NewPaymentWithPaypal",
              "NewPaymentWithStripe",
              "NewPaymentWithPayoneer",
              "SentToAccountant",
              "DownloadedAsPdf",
              "MarkAsPaidByTheClient",
              "OpenedAttachment",
              "NewPaymentWithSquare",
              "NewPaymentWithKlikAndPay",
              "NewPaymentWithRazorpay",
              "NewPaymentWithWepay",
              "NewPaymentWithHalkbank",
              "ChangeStatus",
              "OrderUpdated",
              "OrderCreated",
              "NewPaymentWithTwoCheckout",
              "NewPaymentWithPaymentWall",
              "NewPaymentWithBamboraEU",
              "NewPaymentWithBamboraNA",
              "Void",
              "NewPaymentWithNlb",
              "NewPaymentWithAuthorizeNet",
              "NewPaymentWithBraintree",
              "EstimationCreated",
              "EstimationDraft",
              "EstimationCloned",
              "EstimationSentViaEmail",
              "EstimationOpened",
              "EstimationViewed",
              "EstimationAccepted",
              "EstimationRejected",
              "EstimationUpdated",
              "EstimationDownloadedAsPdf",
              "InvoiceDigitallySigned"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceAttachment": {
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "Link": {
            "type": "string"
          },
          "ObfuscatedFileName": {
            "type": "string"
          },
          "OriginalFileName": {
            "type": "string"
          },
          "Size": {
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceAttachmentApiModel": {
        "properties": {
          "Id": {
            "description": "Id of invoice attachment",
            "format": "int32",
            "type": "integer"
          },
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceCategoryApiModel": {
        "properties": {
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Category name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceCategoryCreateApiModel": {
        "properties": {
          "Name": {
            "description": "Category name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceCategoryDeleteApiModel": {
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InvoiceCategoryUpdateApiModel": {
        "properties": {
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Category name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceCreateApiModel": {
        "properties": {
          "Attachments": {
            "description": "List of invoice attachments",
            "items": {
              "$ref": "#/components/schemas/InvoiceCreateAttachmentApiModel"
            },
            "type": "array"
          },
          "ClientId": {
            "description": "The client to whom this invoice is assigned",
            "format": "int32",
            "type": "integer"
          },
          "ClonedFromId": {
            "description": "Indicate from which invoice this invoice has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "CurrencyId": {
            "description": "Id of the currency for the invoice amounts",
            "format": "int32",
            "type": "integer"
          },
          "Duedate": {
            "description": "Indicates when the invoice will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "InvoiceCategoryId": {
            "description": "Hold the id of the invoice category",
            "format": "int32",
            "type": "integer"
          },
          "IssuedOn": {
            "description": "Indicates when the invoice was issued",
            "format": "date-time",
            "type": "string"
          },
          "Items": {
            "description": "List of invoice items",
            "items": {
              "$ref": "#/components/schemas/InvoiceCreateItemApiModel"
            },
            "type": "array"
          },
          "Notes": {
            "description": "Internal note regarding the invoice",
            "type": "string"
          },
          "Number": {
            "description": "Unique invoice number",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this invoice",
            "items": {
              "$ref": "#/components/schemas/InvoiceGatewayApiModel"
            },
            "type": "array"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "RecurringProfile": {
            "$ref": "#/components/schemas/InvoiceRecurringApiModel",
            "description": "Hold the recurring profile"
          },
          "RecurringProfileId": {
            "description": "Hold the id of the recurring profile",
            "format": "int32",
            "type": "integer"
          },
          "ShouldSendReminders": {
            "description": "Should send email reminders to client?",
            "type": "boolean"
          },
          "Status": {
            "description": "Indicate the status of the invoice (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Paid",
              "Unpaid",
              "Overdue",
              "Void"
            ],
            "type": "string"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceCreateAttachmentApiModel": {
        "properties": {
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceCreateItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Amount per unit",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "Additional description attached to the invoice item",
            "type": "string"
          },
          "DiscountPercentage": {
            "description": "Discount percentage for the overall amount",
            "format": "double",
            "type": "number"
          },
          "Quantity": {
            "description": "Quantity in total used for the work type",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Tax applied on the item",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Work type (Name of the service)",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InvoiceDeleteApiModel": {
        "properties": {
          "Id": {
            "description": "Id of invoice to be deleted",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InvoiceDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Security access token used for accessing the invoice anonymously",
            "type": "string"
          },
          "Client": {
            "$ref": "#/components/schemas/ClientDetailsApiModel",
            "description": "Client data referened to this invoice"
          },
          "ClonedFromId": {
            "description": "Indicate from which invoice this invoice has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this invoice"
          },
          "DiscountAmount": {
            "description": "Amount that goes as a discount",
            "format": "double",
            "type": "number"
          },
          "Duedate": {
            "description": "Indicates when the invoice will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "EnablePartialPayments": {
            "description": "Indicate that the invoice allows the user to pay the invoice partially",
            "type": "boolean"
          },
          "Id": {
            "description": "Invoice id",
            "format": "int32",
            "type": "integer"
          },
          "InvoiceCategoryId": {
            "description": "Hold the id of the invoice category",
            "format": "int32",
            "type": "integer"
          },
          "IssuedOn": {
            "description": "Indicates when the invoice was issued",
            "format": "date-time",
            "type": "string"
          },
          "Notes": {
            "description": "Internal note regarding the invoice",
            "type": "string"
          },
          "Number": {
            "description": "Unique invoice number",
            "type": "string"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "RecurringProfile": {
            "$ref": "#/components/schemas/InvoiceRecurringApiModel",
            "description": "Hold the recurring profile"
          },
          "RecurringProfileId": {
            "description": "Hold the id of the recurring profile",
            "format": "int32",
            "type": "integer"
          },
          "ShouldSendReminders": {
            "description": "Should send email reminders to client?",
            "type": "boolean"
          },
          "Status": {
            "description": "Indicate the status of the invoice (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Paid",
              "Unpaid",
              "Overdue",
              "Void"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Total amount of the invoice without tax",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Amount that goes to the tax",
            "format": "double",
            "type": "number"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          },
          "TotalAmount": {
            "description": "Total amount of the invoice with tax",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "InvoiceFullDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Security access token used for accessing the invoice anonymously",
            "type": "string"
          },
          "Activities": {
            "description": "List of invoice activities. Invoice audit log",
            "items": {
              "$ref": "#/components/schemas/InvoiceActivityApiModel"
            },
            "type": "array"
          },
          "Attachments": {
            "description": "List of invoice attachments",
            "items": {
              "$ref": "#/components/schemas/InvoiceAttachmentApiModel"
            },
            "type": "array"
          },
          "Client": {
            "$ref": "#/components/schemas/ClientDetailsApiModel",
            "description": "Client data referened to this invoice"
          },
          "ClonedFromId": {
            "description": "Indicate from which invoice this invoice has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this invoice"
          },
          "DiscountAmount": {
            "description": "Amount that goes as a discount",
            "format": "double",
            "type": "number"
          },
          "Duedate": {
            "description": "Indicates when the invoice will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "EnablePartialPayments": {
            "description": "Indicate that the invoice allows the user to pay the invoice partially",
            "type": "boolean"
          },
          "Id": {
            "description": "Invoice id",
            "format": "int32",
            "type": "integer"
          },
          "InvoiceCategoryId": {
            "description": "Hold the id of the invoice category",
            "format": "int32",
            "type": "integer"
          },
          "IssuedOn": {
            "description": "Indicates when the invoice was issued",
            "format": "date-time",
            "type": "string"
          },
          "Items": {
            "description": "List of invoice items",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemApiModel"
            },
            "type": "array"
          },
          "Notes": {
            "description": "Internal note regarding the invoice",
            "type": "string"
          },
          "Number": {
            "description": "Unique invoice number",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this invoice",
            "items": {
              "$ref": "#/components/schemas/InvoiceGatewayApiModel"
            },
            "type": "array"
          },
          "Payments": {
            "description": "List of invoice payments",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentApiModel"
            },
            "type": "array"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "RecurringProfile": {
            "$ref": "#/components/schemas/InvoiceRecurringApiModel",
            "description": "Hold the recurring profile"
          },
          "RecurringProfileId": {
            "description": "Hold the id of the recurring profile",
            "format": "int32",
            "type": "integer"
          },
          "ShouldSendReminders": {
            "description": "Should send email reminders to client?",
            "type": "boolean"
          },
          "Status": {
            "description": "Indicate the status of the invoice (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Paid",
              "Unpaid",
              "Overdue",
              "Void"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Total amount of the invoice without tax",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Amount that goes to the tax",
            "format": "double",
            "type": "number"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          },
          "TotalAmount": {
            "description": "Total amount of the invoice with tax",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "InvoiceGatewayApiModel": {
        "properties": {
          "Name": {
            "description": "Name of the payment gateway",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceItem": {
        "properties": {
          "Cost": {
            "format": "double",
            "type": "number"
          },
          "Description": {
            "type": "string"
          },
          "DiscountAmount": {
            "format": "double",
            "type": "number"
          },
          "DiscountPercentage": {
            "format": "double",
            "type": "number"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "format": "double",
            "type": "number"
          },
          "SubTotalAmount": {
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InvoiceItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Amount per unit",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "Additional description attached to the invoice item",
            "type": "string"
          },
          "DiscountAmount": {
            "description": "Amount that goes as a discount",
            "format": "double",
            "type": "number"
          },
          "DiscountPercentage": {
            "description": "Discount percentage for the overall amount",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Id of invoice item",
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "description": "Quantity in total used for the work type",
            "format": "double",
            "type": "number"
          },
          "SubTotalAmount": {
            "description": "Sub-Total amount of the invoice item (Amount without tax)",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Amount that goes to the tax",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Tax applied on the item",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount of the invoice item",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Work type (Name of the service)",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InvoiceMessage": {
        "properties": {
          "AttachPdf": {
            "type": "boolean"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "Message": {
            "type": "string"
          },
          "SendToSelf": {
            "type": "boolean"
          },
          "Subject": {
            "type": "string"
          },
          "Type": {
            "enum": [
              "SendInvoice",
              "SendInvoiceReminder"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoicePaymentApiModel": {
        "properties": {
          "Amount": {
            "description": "Total amount of the payment",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Id of invoice payment",
            "format": "int32",
            "type": "integer"
          },
          "IsAutomatic": {
            "description": "Indicate if the payment is automatic or manual",
            "type": "boolean"
          },
          "Note": {
            "description": "Internal payment note",
            "type": "string"
          },
          "PaidOn": {
            "description": "When the payment was done by the client",
            "format": "date-time",
            "type": "string"
          },
          "ReferenceId": {
            "description": "Id of the payment",
            "type": "string"
          },
          "Type": {
            "description": "Type of payment",
            "enum": [
              "Other",
              "Paypal",
              "Stripe",
              "Payoneer",
              "Bank",
              "Cash",
              "Cheque",
              "Ach",
              "Sepa",
              "Square",
              "KlikAndPay",
              "Razorpay",
              "Wepay",
              "Halkbank",
              "TwoCheckout",
              "PaymentWall",
              "BamboraEU",
              "BamboraNA",
              "Nlb",
              "AuthorizeNet",
              "Braintree"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceRecurringApiModel": {
        "description": "Definition of invoice recurring profile",
        "properties": {
          "DayOfMonth": {
            "description": "Day of month when the recurrance should happen",
            "format": "int32",
            "type": "integer"
          },
          "DayOfWeek": {
            "description": "Day when the recurrance should happen",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string"
          },
          "DueDateInDays": {
            "description": "Total number of days for the client to pay the invoice after issuing it",
            "format": "int32",
            "type": "integer"
          },
          "EndOfRecurrance": {
            "description": "Indcate the date when the recurrance should stop",
            "format": "date-time",
            "type": "string"
          },
          "Month": {
            "description": "Month when the recurrance should happen",
            "format": "int32",
            "type": "integer"
          },
          "RecurrancePattern": {
            "description": "How often the recurrance occurs",
            "enum": [
              "Daily",
              "Weekly",
              "Monthly",
              "Yearly"
            ],
            "type": "string"
          },
          "RecurranceValue": {
            "description": "Recurring every [value] RecurrancePattern\r\nEx: Recur every 1 week",
            "format": "int32",
            "type": "integer"
          },
          "StartOfRecurrance": {
            "description": "Indcate the date when the recurrance has started",
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "description": "The status of the recurrance",
            "enum": [
              "Pending",
              "Active",
              "Cancelled",
              "Finished"
            ],
            "type": "string"
          },
          "Title": {
            "description": "Title of the recurring profile. \r\nEx: BRAND PACKAGE - 2017-08-16 - 2018-08-16",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceUpdateApiModel": {
        "properties": {
          "Attachments": {
            "description": "List of invoice attachments",
            "items": {
              "$ref": "#/components/schemas/InvoiceUpdateAttachmentApiModel"
            },
            "type": "array"
          },
          "ClientId": {
            "description": "The client to whom this invoice is assigned",
            "format": "int32",
            "type": "integer"
          },
          "ClonedFromId": {
            "description": "Indicate from which invoice this invoice has been cloned from",
            "format": "int32",
            "type": "integer"
          },
          "CurrencyId": {
            "description": "Id of the currency for the invoice amounts",
            "format": "int32",
            "type": "integer"
          },
          "Duedate": {
            "description": "Indicates when the invoice will be proclamed as due",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "Invoice id",
            "format": "int32",
            "type": "integer"
          },
          "InvoiceCategoryId": {
            "description": "Hold the id of the invoice category",
            "format": "int32",
            "type": "integer"
          },
          "IssuedOn": {
            "description": "Indicates when the invoice was issued",
            "format": "date-time",
            "type": "string"
          },
          "Items": {
            "description": "List of invoice items",
            "items": {
              "$ref": "#/components/schemas/InvoiceUpdateItemApiModel"
            },
            "type": "array"
          },
          "Notes": {
            "description": "Internal note regarding the invoice",
            "type": "string"
          },
          "Number": {
            "description": "Unique invoice number",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this invoice",
            "items": {
              "$ref": "#/components/schemas/InvoiceGatewayApiModel"
            },
            "type": "array"
          },
          "PoNumber": {
            "description": "Unique number generated by the buyer",
            "type": "string"
          },
          "RecurringProfile": {
            "$ref": "#/components/schemas/InvoiceRecurringApiModel",
            "description": "Hold the recurring profile"
          },
          "RecurringProfileId": {
            "description": "Hold the id of the recurring profile",
            "format": "int32",
            "type": "integer"
          },
          "ShouldSendReminders": {
            "description": "Should send email reminders to client?",
            "type": "boolean"
          },
          "Status": {
            "description": "Indicate the status of the invoice (paid/unpaid/overdue)",
            "enum": [
              "Draft",
              "Paid",
              "Unpaid",
              "Overdue",
              "Void"
            ],
            "type": "string"
          },
          "Terms": {
            "description": "Terms of agreement",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceUpdateAttachmentApiModel": {
        "properties": {
          "Id": {
            "description": "Id of invoice attachment",
            "format": "int32",
            "type": "integer"
          },
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvoiceUpdateItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Amount per unit",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "Additional description attached to the invoice item",
            "type": "string"
          },
          "DiscountPercentage": {
            "description": "Discount percentage for the overall amount",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Id of invoice item",
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "description": "Quantity in total used for the work type",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Tax applied on the item",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Work type (Name of the service)",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InvoiceUriApiModel": {
        "properties": {
          "Link": {
            "description": "Unique link to the invoice",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListResult_EstimationDetailsApiModel_": {
        "properties": {
          "Count": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessages": {
            "items": {
              "$ref": "#/components/schemas/IErrorInfo"
            },
            "type": "array"
          },
          "IsFaulted": {
            "type": "boolean"
          },
          "Result": {
            "items": {
              "$ref": "#/components/schemas/EstimationDetailsApiModel"
            },
            "type": "array"
          },
          "TotalCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListResult_InvoiceCategoryApiModel_": {
        "properties": {
          "Count": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessages": {
            "items": {
              "$ref": "#/components/schemas/IErrorInfo"
            },
            "type": "array"
          },
          "IsFaulted": {
            "type": "boolean"
          },
          "Result": {
            "items": {
              "$ref": "#/components/schemas/InvoiceCategoryApiModel"
            },
            "type": "array"
          },
          "TotalCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListResult_InvoiceDetailsApiModel_": {
        "properties": {
          "Count": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessages": {
            "items": {
              "$ref": "#/components/schemas/IErrorInfo"
            },
            "type": "array"
          },
          "IsFaulted": {
            "type": "boolean"
          },
          "Result": {
            "items": {
              "$ref": "#/components/schemas/InvoiceDetailsApiModel"
            },
            "type": "array"
          },
          "TotalCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListResult_OrderDetailsApiModel_": {
        "properties": {
          "Count": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessages": {
            "items": {
              "$ref": "#/components/schemas/IErrorInfo"
            },
            "type": "array"
          },
          "IsFaulted": {
            "type": "boolean"
          },
          "Result": {
            "items": {
              "$ref": "#/components/schemas/OrderDetailsApiModel"
            },
            "type": "array"
          },
          "TotalCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListResult_PaymentLink_": {
        "properties": {
          "Count": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessages": {
            "items": {
              "$ref": "#/components/schemas/IErrorInfo"
            },
            "type": "array"
          },
          "IsFaulted": {
            "type": "boolean"
          },
          "Result": {
            "items": {
              "$ref": "#/components/schemas/PaymentLink"
            },
            "type": "array"
          },
          "TotalCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListResult_ProductDetailsApiModel_": {
        "properties": {
          "Count": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ErrorMessages": {
            "items": {
              "$ref": "#/components/schemas/IErrorInfo"
            },
            "type": "array"
          },
          "IsFaulted": {
            "type": "boolean"
          },
          "Result": {
            "items": {
              "$ref": "#/components/schemas/ProductDetailsApiModel"
            },
            "type": "array"
          },
          "TotalCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OrderAttachmentApiModel": {
        "properties": {
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderBillingDetailsApiModel": {
        "properties": {
          "Address": {
            "description": "Client street and number",
            "type": "string"
          },
          "CountryId": {
            "description": "Client country id",
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "description": "Client email",
            "type": "string"
          },
          "Name": {
            "description": "Client name",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Client phone number",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderCreateApiModel": {
        "properties": {
          "AfterPaymentDescription": {
            "description": "After payment description",
            "type": "string"
          },
          "Attachments": {
            "description": "List of Order attachments",
            "items": {
              "$ref": "#/components/schemas/OrderAttachmentApiModel"
            },
            "type": "array"
          },
          "CouponCode": {
            "description": "Coupon to apply in order to get the discount",
            "type": "string"
          },
          "CurrencyId": {
            "description": "Foreign key Currency",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "Product description",
            "type": "string"
          },
          "DiscountAmount": {
            "description": "Discount amount",
            "format": "double",
            "type": "number"
          },
          "Items": {
            "description": "List of Order items",
            "items": {
              "$ref": "#/components/schemas/OrderItemApiModel"
            },
            "type": "array"
          },
          "Name": {
            "description": "Product alias",
            "type": "string"
          },
          "Note": {
            "description": "Customer note to seller",
            "type": "string"
          },
          "OrderBillingDetails": {
            "$ref": "#/components/schemas/OrderBillingDetailsApiModel",
            "description": "Order billing details"
          },
          "OrderShippingDetails": {
            "$ref": "#/components/schemas/OrderShippingDetailsApiModel",
            "description": "Order sshipping details"
          },
          "ProductId": {
            "description": "Product id",
            "format": "int32",
            "type": "integer"
          },
          "Referral": {
            "description": "Represent the referral for this order",
            "type": "string"
          },
          "ShippingAmount": {
            "description": "Cost for shipping the product",
            "format": "double",
            "type": "number"
          },
          "ShippingDescription": {
            "description": "Client instructions for shipping",
            "type": "string"
          },
          "Status": {
            "description": "Order status",
            "enum": [
              "PendingPayment",
              "Processing",
              "Shipped",
              "Completed",
              "OnHold",
              "Cancelled",
              "Refunded",
              "Failed"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Sub total amount",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Tax amount",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount",
            "format": "double",
            "type": "number"
          },
          "WhatHappensNextDescription": {
            "description": "What happens next description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderDeleteApiModel": {
        "properties": {
          "Id": {
            "description": "Id of order to be deleted",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OrderDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Product short link",
            "type": "string"
          },
          "AfterPaymentDescription": {
            "description": "After payment description",
            "type": "string"
          },
          "CouponCode": {
            "description": "Coupon to apply in order to get the discount",
            "type": "string"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this order"
          },
          "CurrencyId": {
            "description": "Foreign key Currency",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "Product description",
            "type": "string"
          },
          "DiscountAmount": {
            "description": "Discount amount",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Order id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Product alias",
            "type": "string"
          },
          "Note": {
            "description": "Customer note to seller",
            "type": "string"
          },
          "OrderBillingDetails": {
            "$ref": "#/components/schemas/OrderBillingDetailsApiModel",
            "description": "Order billing details"
          },
          "OrderShippingDetails": {
            "$ref": "#/components/schemas/OrderShippingDetailsApiModel",
            "description": "Order sshipping details"
          },
          "ProductId": {
            "description": "Product id",
            "format": "int32",
            "type": "integer"
          },
          "Referral": {
            "description": "Represent the referral for this order",
            "type": "string"
          },
          "ShippingAmount": {
            "description": "Cost for shipping the product",
            "format": "double",
            "type": "number"
          },
          "ShippingDescription": {
            "description": "Client instructions for shipping",
            "type": "string"
          },
          "Status": {
            "description": "Order status",
            "enum": [
              "PendingPayment",
              "Processing",
              "Shipped",
              "Completed",
              "OnHold",
              "Cancelled",
              "Refunded",
              "Failed"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Sub total amount",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Tax amount",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount",
            "format": "double",
            "type": "number"
          },
          "TotalWithShipping": {
            "description": "Total amount with shipping",
            "format": "double",
            "type": "number"
          },
          "WhatHappensNextDescription": {
            "description": "What happens next description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderFullDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Product short link",
            "type": "string"
          },
          "AfterPaymentDescription": {
            "description": "After payment description",
            "type": "string"
          },
          "Attachments": {
            "description": "List of Order attachments",
            "items": {
              "$ref": "#/components/schemas/OrderAttachmentApiModel"
            },
            "type": "array"
          },
          "CouponCode": {
            "description": "Coupon to apply in order to get the discount",
            "type": "string"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this order"
          },
          "CurrencyId": {
            "description": "Foreign key Currency",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "Product description",
            "type": "string"
          },
          "DiscountAmount": {
            "description": "Discount amount",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Order id",
            "format": "int32",
            "type": "integer"
          },
          "Items": {
            "description": "List of Order items",
            "items": {
              "$ref": "#/components/schemas/OrderItemApiModel"
            },
            "type": "array"
          },
          "Name": {
            "description": "Product alias",
            "type": "string"
          },
          "Note": {
            "description": "Customer note to seller",
            "type": "string"
          },
          "OrderBillingDetails": {
            "$ref": "#/components/schemas/OrderBillingDetailsApiModel",
            "description": "Order billing details"
          },
          "OrderShippingDetails": {
            "$ref": "#/components/schemas/OrderShippingDetailsApiModel",
            "description": "Order sshipping details"
          },
          "ProductId": {
            "description": "Product id",
            "format": "int32",
            "type": "integer"
          },
          "Referral": {
            "description": "Represent the referral for this order",
            "type": "string"
          },
          "ShippingAmount": {
            "description": "Cost for shipping the product",
            "format": "double",
            "type": "number"
          },
          "ShippingDescription": {
            "description": "Client instructions for shipping",
            "type": "string"
          },
          "Status": {
            "description": "Order status",
            "enum": [
              "PendingPayment",
              "Processing",
              "Shipped",
              "Completed",
              "OnHold",
              "Cancelled",
              "Refunded",
              "Failed"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Sub total amount",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Tax amount",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount",
            "format": "double",
            "type": "number"
          },
          "TotalWithShipping": {
            "description": "Total amount with shipping",
            "format": "double",
            "type": "number"
          },
          "WhatHappensNextDescription": {
            "description": "What happens next description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Work item cost",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "General description",
            "type": "string"
          },
          "ProductItemId": {
            "description": "Foreign key product item id",
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "description": "Work item quantity",
            "format": "double",
            "type": "number"
          },
          "ReferenceId": {
            "description": "Order SKU",
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Subtotal amount of product",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Tax amount",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Foreign key Tax id",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Tax percentage",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount of product",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Foreign key work type id",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OrderShippingDetailsApiModel": {
        "properties": {
          "Address": {
            "description": "Client street and number",
            "type": "string"
          },
          "CountryId": {
            "description": "Client country id",
            "format": "int32",
            "type": "integer"
          },
          "Email": {
            "description": "Client email",
            "type": "string"
          },
          "Name": {
            "description": "Client name",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Client phone number",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Payment": {
        "properties": {
          "Amount": {
            "format": "double",
            "type": "number"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "IsAutomatic": {
            "type": "boolean"
          },
          "Note": {
            "type": "string"
          },
          "PaidOn": {
            "format": "date-time",
            "type": "string"
          },
          "ReferenceId": {
            "type": "string"
          },
          "Type": {
            "enum": [
              "Other",
              "Paypal",
              "Stripe",
              "Payoneer",
              "Bank",
              "Cash",
              "Cheque",
              "Ach",
              "Sepa",
              "Square",
              "KlikAndPay",
              "Razorpay",
              "Wepay",
              "Halkbank",
              "TwoCheckout",
              "PaymentWall",
              "BamboraEU",
              "BamboraNA",
              "Nlb",
              "AuthorizeNet",
              "Braintree"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentGateway": {
        "properties": {
          "CanDisconnect": {
            "type": "boolean"
          },
          "ClientImportUri": {
            "type": "string"
          },
          "ConnectionType": {
            "enum": [
              "OAuth",
              "InputFields",
              "Dropdown"
            ],
            "type": "string"
          },
          "ExternalConnectionId": {
            "format": "int32",
            "type": "integer"
          },
          "Fields": {
            "items": {
              "$ref": "#/components/schemas/PaymentGatewayInputField"
            },
            "type": "array"
          },
          "IsConnected": {
            "type": "boolean"
          },
          "IsEnabled": {
            "type": "boolean"
          },
          "MaximumAmount": {
            "format": "double",
            "type": "number"
          },
          "MinimumAmount": {
            "format": "double",
            "type": "number"
          },
          "Name": {
            "type": "string"
          },
          "OAuthUri": {
            "type": "string"
          },
          "RefundUri": {
            "type": "string"
          },
          "SupportedCurrencies": {
            "items": {
              "$ref": "#/components/schemas/Currency"
            },
            "type": "array"
          },
          "SupportsClientsImport": {
            "type": "boolean"
          },
          "SupportsInstantCheckout": {
            "type": "boolean"
          },
          "SupportsRefund": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PaymentGatewayDetailsApiModel": {
        "properties": {
          "Name": {
            "description": "Name of the payment gateway",
            "type": "string"
          },
          "SupportedCurrencies": {
            "description": "List of supported currencies.",
            "items": {
              "$ref": "#/components/schemas/CurrencyApiModel"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaymentGatewayForInvoice": {
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentGatewayInputField": {
        "properties": {
          "IsConfigurable": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "enum": [
              "Input",
              "Dropdown",
              "HiddenInput"
            ],
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "Values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaymentLink": {
        "properties": {
          "AccessToken": {
            "type": "string"
          },
          "Client": {
            "$ref": "#/components/schemas/Client"
          },
          "ClientId": {
            "format": "int32",
            "type": "integer"
          },
          "Currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "CurrencyId": {
            "format": "int32",
            "type": "integer"
          },
          "DiscountAmount": {
            "format": "double",
            "type": "number"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "Items": {
            "items": {
              "$ref": "#/components/schemas/PaymentLinkItem"
            },
            "type": "array"
          },
          "Number": {
            "type": "string"
          },
          "SubTotalAmount": {
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "format": "double",
            "type": "number"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaymentLinkItem": {
        "properties": {
          "Cost": {
            "format": "double",
            "type": "number"
          },
          "DiscountAmount": {
            "format": "double",
            "type": "number"
          },
          "DiscountPercentage": {
            "format": "double",
            "type": "number"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "PaymentLinkId": {
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "format": "double",
            "type": "number"
          },
          "SubTotalAmount": {
            "format": "double",
            "type": "number"
          },
          "Tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "TaxAmount": {
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "format": "double",
            "type": "number"
          },
          "WorkType": {
            "$ref": "#/components/schemas/WorkType"
          },
          "WorkTypeId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaymentLinkUriApiModel": {
        "properties": {
          "Link": {
            "description": "Unique link to the invoice",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductAttachmentApiModel": {
        "properties": {
          "Id": {
            "description": "Product attachment id",
            "format": "int32",
            "type": "integer"
          },
          "Link": {
            "description": "Link to the file",
            "type": "string"
          },
          "ObfuscatedFileName": {
            "description": "Hashed file name to avoid url wildguessing",
            "type": "string"
          },
          "OriginalFileName": {
            "description": "Name of the file",
            "type": "string"
          },
          "Size": {
            "description": "File size number in bytes",
            "format": "int64",
            "type": "integer"
          },
          "Type": {
            "description": "Type of the link (Attached or external)",
            "enum": [
              "External",
              "Uploaded"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductCouponApiModel": {
        "properties": {
          "Code": {
            "description": "Coupon to apply in order to get the discount",
            "type": "string"
          },
          "DiscountAmount": {
            "description": "Discount amount",
            "format": "double",
            "type": "number"
          },
          "DiscountPercentage": {
            "description": "Discount percentage",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Product coupon id",
            "format": "int32",
            "type": "integer"
          },
          "ValidUntil": {
            "description": "Coupon expiration date",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductCreateApiModel": {
        "properties": {
          "AfterPaymentDescription": {
            "description": "After payment description",
            "type": "string"
          },
          "Attachments": {
            "description": "List of product attachments",
            "items": {
              "$ref": "#/components/schemas/ProductAttachmentApiModel"
            },
            "type": "array"
          },
          "ButtonCallToAction": {
            "description": "Default button call to action\r\nEx: Buy now, subscribe, ...",
            "type": "string"
          },
          "Coupons": {
            "description": "List of product coupons",
            "items": {
              "$ref": "#/components/schemas/ProductCouponApiModel"
            },
            "type": "array"
          },
          "CurrencyId": {
            "description": "Foreign key Currency",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "Product description",
            "type": "string"
          },
          "Discounts": {
            "description": "List of product discounts",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountApiModel"
            },
            "type": "array"
          },
          "IsFeatured": {
            "description": "Indicate that the product is set as featured",
            "type": "boolean"
          },
          "Items": {
            "description": "List of product items",
            "items": {
              "$ref": "#/components/schemas/ProductItemApiModel"
            },
            "type": "array"
          },
          "Name": {
            "description": "Product alias",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this product",
            "items": {
              "$ref": "#/components/schemas/ProductGatewayApiModel"
            },
            "type": "array"
          },
          "ShippingAmount": {
            "description": "Cost for shipping the product",
            "format": "double",
            "type": "number"
          },
          "ShippingDescription": {
            "description": "Client instructions for shipping",
            "type": "string"
          },
          "Status": {
            "description": "Product availability status",
            "enum": [
              "Active",
              "NotAvailable",
              "Inactive"
            ],
            "type": "string"
          },
          "WhatHappensNextDescription": {
            "description": "What happens next description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductDeleteApiModel": {
        "properties": {
          "Id": {
            "description": "Id of product to be deleted",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProductDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Product short link",
            "type": "string"
          },
          "AfterPaymentDescription": {
            "description": "After payment description",
            "type": "string"
          },
          "ButtonCallToAction": {
            "description": "Default button call to action\r\nEx: Buy now, subscribe, ...",
            "type": "string"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this product"
          },
          "CurrencyId": {
            "description": "Foreign key Currency",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "Product description",
            "type": "string"
          },
          "Id": {
            "description": "Product id",
            "format": "int32",
            "type": "integer"
          },
          "IsFeatured": {
            "description": "Indicate that the product is set as featured",
            "type": "boolean"
          },
          "Name": {
            "description": "Product alias",
            "type": "string"
          },
          "ShippingAmount": {
            "description": "Cost for shipping the product",
            "format": "double",
            "type": "number"
          },
          "ShippingDescription": {
            "description": "Client instructions for shipping",
            "type": "string"
          },
          "Status": {
            "description": "Product availability status",
            "enum": [
              "Active",
              "NotAvailable",
              "Inactive"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Subtotal amount of product",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount of product",
            "format": "double",
            "type": "number"
          },
          "TotalWithShipping": {
            "description": "Total amount of product with shipping",
            "format": "double",
            "type": "number"
          },
          "WhatHappensNextDescription": {
            "description": "What happens next description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductDiscountApiModel": {
        "properties": {
          "DiscountAmount": {
            "description": "Discount amount",
            "format": "double",
            "type": "number"
          },
          "DiscountPercentage": {
            "description": "Discount percentage",
            "format": "double",
            "type": "number"
          },
          "Id": {
            "description": "Product discount id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name",
            "type": "string"
          },
          "ValidFrom": {
            "description": "Discount start date",
            "format": "date-time",
            "type": "string"
          },
          "ValidTo": {
            "description": "Discount expiration date",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductFullDetailsApiModel": {
        "properties": {
          "AccessToken": {
            "description": "Product short link",
            "type": "string"
          },
          "AfterPaymentDescription": {
            "description": "After payment description",
            "type": "string"
          },
          "Attachments": {
            "description": "List of product attachments",
            "items": {
              "$ref": "#/components/schemas/ProductAttachmentApiModel"
            },
            "type": "array"
          },
          "ButtonCallToAction": {
            "description": "Default button call to action\r\nEx: Buy now, subscribe, ...",
            "type": "string"
          },
          "Coupons": {
            "description": "List of product coupons",
            "items": {
              "$ref": "#/components/schemas/ProductCouponApiModel"
            },
            "type": "array"
          },
          "Currency": {
            "$ref": "#/components/schemas/CurrencyDetailsApiModel",
            "description": "The currency related to this product"
          },
          "CurrencyId": {
            "description": "Foreign key Currency",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "Product description",
            "type": "string"
          },
          "Discounts": {
            "description": "List of product discounts",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountApiModel"
            },
            "type": "array"
          },
          "Id": {
            "description": "Product id",
            "format": "int32",
            "type": "integer"
          },
          "IsFeatured": {
            "description": "Indicate that the product is set as featured",
            "type": "boolean"
          },
          "Items": {
            "description": "List of product items",
            "items": {
              "$ref": "#/components/schemas/ProductItemApiModel"
            },
            "type": "array"
          },
          "Name": {
            "description": "Product alias",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this product",
            "items": {
              "$ref": "#/components/schemas/ProductGatewayApiModel"
            },
            "type": "array"
          },
          "ShippingAmount": {
            "description": "Cost for shipping the product",
            "format": "double",
            "type": "number"
          },
          "ShippingDescription": {
            "description": "Client instructions for shipping",
            "type": "string"
          },
          "Status": {
            "description": "Product availability status",
            "enum": [
              "Active",
              "NotAvailable",
              "Inactive"
            ],
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Subtotal amount of product",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount of product",
            "format": "double",
            "type": "number"
          },
          "TotalWithShipping": {
            "description": "Total amount of product with shipping",
            "format": "double",
            "type": "number"
          },
          "WhatHappensNextDescription": {
            "description": "What happens next description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductGatewayApiModel": {
        "properties": {
          "Name": {
            "description": "Payment gateway name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductItemApiModel": {
        "properties": {
          "Cost": {
            "description": "Work item cost",
            "format": "double",
            "type": "number"
          },
          "Description": {
            "description": "General description",
            "type": "string"
          },
          "Id": {
            "description": "Product item id",
            "format": "int32",
            "type": "integer"
          },
          "MinimumQuantity": {
            "description": "Minimum required quantity in order to buy a work item",
            "format": "double",
            "type": "number"
          },
          "ReferenceId": {
            "description": "Product SKU",
            "type": "string"
          },
          "SubTotalAmount": {
            "description": "Subtotal amount of product",
            "format": "double",
            "type": "number"
          },
          "TaxAmount": {
            "description": "Tax amount",
            "format": "double",
            "type": "number"
          },
          "TaxId": {
            "description": "Foreign key Tax id",
            "format": "int32",
            "type": "integer"
          },
          "TaxPercentage": {
            "description": "Tax percentage",
            "format": "double",
            "type": "number"
          },
          "TotalAmount": {
            "description": "Total amount of product",
            "format": "double",
            "type": "number"
          },
          "WorkTypeId": {
            "description": "Foreign key work type id",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProductUpdateApiModel": {
        "properties": {
          "AfterPaymentDescription": {
            "description": "After payment description",
            "type": "string"
          },
          "Attachments": {
            "description": "List of product attachments",
            "items": {
              "$ref": "#/components/schemas/ProductAttachmentApiModel"
            },
            "type": "array"
          },
          "ButtonCallToAction": {
            "description": "Default button call to action\r\nEx: Buy now, subscribe, ...",
            "type": "string"
          },
          "Coupons": {
            "description": "List of product coupons",
            "items": {
              "$ref": "#/components/schemas/ProductCouponApiModel"
            },
            "type": "array"
          },
          "CurrencyId": {
            "description": "Foreign key Currency",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "Product description",
            "type": "string"
          },
          "Discounts": {
            "description": "List of product discounts",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountApiModel"
            },
            "type": "array"
          },
          "Id": {
            "description": "Product id",
            "format": "int32",
            "type": "integer"
          },
          "IsFeatured": {
            "description": "Indicate that the product is set as featured",
            "type": "boolean"
          },
          "Items": {
            "description": "List of product items",
            "items": {
              "$ref": "#/components/schemas/ProductItemApiModel"
            },
            "type": "array"
          },
          "Name": {
            "description": "Product alias",
            "type": "string"
          },
          "PaymentGateways": {
            "description": "List of enabled payment gateways for this product",
            "items": {
              "$ref": "#/components/schemas/ProductGatewayApiModel"
            },
            "type": "array"
          },
          "ShippingAmount": {
            "description": "Cost for shipping the product",
            "format": "double",
            "type": "number"
          },
          "ShippingDescription": {
            "description": "Client instructions for shipping",
            "type": "string"
          },
          "Status": {
            "description": "Product availability status",
            "enum": [
              "Active",
              "NotAvailable",
              "Inactive"
            ],
            "type": "string"
          },
          "WhatHappensNextDescription": {
            "description": "What happens next description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryOptions": {
        "properties": {
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QueuedInvoice": {
        "properties": {
          "ClonedFromId": {
            "format": "int32",
            "type": "integer"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "RecurringProfileId": {
            "format": "int32",
            "type": "integer"
          },
          "ScheduledFor": {
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "enum": [
              "Pending",
              "Cancelled",
              "Failed",
              "Processed"
            ],
            "type": "string"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RecurringProfile": {
        "properties": {
          "DayOfMonth": {
            "format": "int32",
            "type": "integer"
          },
          "DayOfWeek": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string"
          },
          "DueDateInDays": {
            "format": "int32",
            "type": "integer"
          },
          "EndOfRecurrance": {
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "Month": {
            "format": "int32",
            "type": "integer"
          },
          "RecurrancePattern": {
            "enum": [
              "Daily",
              "Weekly",
              "Monthly",
              "Yearly"
            ],
            "type": "string"
          },
          "RecurranceValue": {
            "format": "int32",
            "type": "integer"
          },
          "StartOfRecurrance": {
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "enum": [
              "Pending",
              "Active",
              "Cancelled",
              "Finished"
            ],
            "type": "string"
          },
          "Title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchRequest": {
        "properties": {
          "Order": {
            "enum": [
              "None",
              "Asc",
              "Desc"
            ],
            "type": "string"
          },
          "OrderBy": {
            "type": "string"
          },
          "Page": {
            "format": "int32",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "type": "integer"
          },
          "Query": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SendEstimationToClientApiModel": {
        "properties": {
          "AttachPdf": {
            "description": "Should attach pdf file",
            "type": "boolean"
          },
          "EstimationId": {
            "description": "Id of the estimation",
            "format": "int32",
            "type": "integer"
          },
          "Id": {
            "description": "Id of the estimation",
            "format": "int32",
            "type": "integer"
          },
          "Message": {
            "description": "Message to be embedded in the email",
            "type": "string"
          },
          "SendToSelf": {
            "description": "Should email copy be send to self",
            "type": "boolean"
          },
          "Subject": {
            "description": "Subject for the email",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SendInvoiceToAccountantApiModel": {
        "properties": {
          "Id": {
            "description": "Id of the invoice",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SendInvoiceToClientApiModel": {
        "properties": {
          "AttachPdf": {
            "description": "Should attach pdf file",
            "type": "boolean"
          },
          "Id": {
            "description": "Id of the invoice",
            "format": "int32",
            "type": "integer"
          },
          "InvoiceId": {
            "description": "Id of the invoice",
            "format": "int32",
            "type": "integer"
          },
          "Message": {
            "description": "Message to be embedded in the email",
            "type": "string"
          },
          "SendToSelf": {
            "description": "Should email copy be send to self",
            "type": "boolean"
          },
          "Subject": {
            "description": "Subject for the email",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionPlan": {
        "properties": {
          "CancellatedOn": {
            "format": "date-time",
            "type": "string"
          },
          "CouponCode": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExternalIdentifier": {
            "type": "string"
          },
          "Features": {
            "items": {
              "enum": [
                "Api",
                "Teams",
                "Clients",
                "Shop",
                "PaymentLinks",
                "Cname"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "HasDuePayment": {
            "type": "boolean"
          },
          "HasDuePaymentSince": {
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Identifier": {
            "type": "string"
          },
          "IsActive": {
            "type": "boolean"
          },
          "IsLifetime": {
            "type": "boolean"
          },
          "LastPaymentOn": {
            "format": "date-time",
            "type": "string"
          },
          "MaxClients": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "OnHold": {
            "type": "boolean"
          },
          "OrderIdentifier": {
            "type": "string"
          },
          "Price": {
            "format": "double",
            "type": "number"
          },
          "Recurrence": {
            "enum": [
              "Monthly",
              "Yearly"
            ],
            "type": "string"
          },
          "SaleId": {
            "format": "int64",
            "type": "integer"
          },
          "Status": {
            "enum": [
              "ActiveTrial",
              "ExpiredTrial",
              "Active",
              "Canceled",
              "Fraudlent"
            ],
            "type": "string"
          },
          "SystemCancelationReason": {
            "enum": [
              "FailToCaptureFee",
              "Fraud"
            ],
            "type": "string"
          },
          "TrialEndsOn": {
            "format": "date-time",
            "type": "string"
          },
          "TrialNumberOfDays": {
            "format": "int32",
            "type": "integer"
          },
          "TrialStartsOn": {
            "format": "date-time",
            "type": "string"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          },
          "Version": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Tax": {
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Percentage": {
            "format": "double",
            "type": "number"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TaxCreateApiModel": {
        "properties": {
          "Name": {
            "description": "Name of the task",
            "type": "string"
          },
          "Percentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "TaxDeleteApiModel": {
        "properties": {
          "Id": {
            "description": "Id of tax to be deleted",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TaxDetailsApiModel": {
        "properties": {
          "CreatedOn": {
            "description": "Date of creation",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the task",
            "type": "string"
          },
          "Percentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "TaxUpdateApiModel": {
        "properties": {
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the task",
            "type": "string"
          },
          "Percentage": {
            "description": "Task percentage. Ex: 18%",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "UILanguageDetailsApiModel": {
        "properties": {
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the country",
            "type": "string"
          },
          "UiCulture": {
            "description": "Ui culture options",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UiLanguage": {
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "UiCulture": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "ActionNotificationsLastReadOn": {
            "format": "date-time",
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "ExternalConnections": {
            "items": {
              "$ref": "#/components/schemas/ExternalConnection"
            },
            "type": "array"
          },
          "HasBeenOnboarded": {
            "type": "boolean"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "IsLocked": {
            "type": "boolean"
          },
          "IsVerified": {
            "type": "boolean"
          },
          "KnowledgeNotificationsLastReadOn": {
            "format": "date-time",
            "type": "string"
          },
          "LastSeenOn": {
            "format": "date-time",
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "PasswordSalt": {
            "type": "string"
          },
          "ReferralPath": {
            "type": "string"
          },
          "ReferredUsers": {
            "format": "int32",
            "type": "integer"
          },
          "ReferrerKey": {
            "type": "string"
          },
          "Settings": {
            "$ref": "#/components/schemas/UserSettings"
          },
          "Status": {
            "enum": [
              "Normal",
              "Fraudlent",
              "Locked"
            ],
            "type": "string"
          },
          "SubscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "Type": {
            "enum": [
              "Anonymous",
              "Customer",
              "SystemAdministrator",
              "Collaborator"
            ],
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "VerifiedOn": {
            "format": "date-time",
            "type": "string"
          },
          "YearsOfExperience": {
            "enum": [
              "One",
              "OneToThree",
              "ThreeToFive",
              "SixPlus"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserSettings": {
        "properties": {
          "AccountantEmail": {
            "type": "string"
          },
          "Address": {
            "type": "string"
          },
          "ApiKey": {
            "type": "string"
          },
          "ApiSecret": {
            "type": "string"
          },
          "BackgroundImage": {
            "type": "string"
          },
          "Bank": {
            "type": "string"
          },
          "BankAccount": {
            "type": "string"
          },
          "Cname": {
            "type": "string"
          },
          "CompanyRegistrationNumber": {
            "type": "string"
          },
          "Country": {
            "$ref": "#/components/schemas/Country"
          },
          "CountryId": {
            "format": "int32",
            "type": "integer"
          },
          "Currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "CurrencyId": {
            "format": "int32",
            "type": "integer"
          },
          "CurrencySymbol": {
            "type": "string"
          },
          "DefaultDateFormat": {
            "type": "string"
          },
          "DefaultDueDateInDays": {
            "format": "int32",
            "type": "integer"
          },
          "DoNotTrack": {
            "type": "boolean"
          },
          "EnableClientPortal": {
            "type": "boolean"
          },
          "EnablePredictiveInvoicing": {
            "type": "boolean"
          },
          "EnableRecurringInvoicing": {
            "type": "boolean"
          },
          "HasInvoiceLogo": {
            "type": "boolean"
          },
          "Iban": {
            "type": "string"
          },
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceTemplate": {
            "enum": [
              "Default",
              "Template1",
              "Template2"
            ],
            "type": "string"
          },
          "InvoiceTemplateColorHex": {
            "type": "string"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "Profession": {
            "enum": [
              "Other",
              "DesignAndCreative",
              "SoftwareDevelopment",
              "ContentWritingAndMarketing",
              "Freelancers",
              "Consultants",
              "Smes",
              "Enterprise",
              "ECommerce",
              "Individual"
            ],
            "type": "string"
          },
          "ReceiveSmsNotifications": {
            "type": "boolean"
          },
          "ReferralProgram": {
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string"
          },
          "StoreCheckoutFields": {
            "enum": [
              "ShowMinimumRequiredFields",
              "ShowAllFields"
            ],
            "type": "string"
          },
          "StoreColorHex": {
            "type": "string"
          },
          "StoreCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "StoreCurrencyId": {
            "format": "int32",
            "type": "integer"
          },
          "StoreCustomJavaScript": {
            "type": "string"
          },
          "StoreDescription": {
            "type": "string"
          },
          "StoreEmail": {
            "type": "string"
          },
          "StoreLanguage": {
            "$ref": "#/components/schemas/UiLanguage"
          },
          "StoreLanguageId": {
            "format": "int32",
            "type": "integer"
          },
          "StoreName": {
            "type": "string"
          },
          "StorePurchaseEmailMessage": {
            "type": "string"
          },
          "StorePurchaseThankYouMessage": {
            "type": "string"
          },
          "StoreTextColorHex": {
            "type": "string"
          },
          "StoreUrl": {
            "type": "string"
          },
          "SubscribeToProductEmails": {
            "type": "boolean"
          },
          "Swift": {
            "type": "string"
          },
          "Terms": {
            "type": "string"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          },
          "UserSignature": {
            "type": "string"
          },
          "VatNumber": {
            "type": "string"
          },
          "YearsOfExperience": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WorkType": {
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WorkTypeCreateApiModel": {
        "properties": {
          "Title": {
            "description": "Indicates the title of of the work type (Logo design, development...)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkTypeDeleteApiModel": {
        "properties": {
          "Id": {
            "description": "Id of work type to be deleted",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WorkTypeDetailsApiModel": {
        "properties": {
          "CreatedOn": {
            "description": "Date of creation",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "description": "Indicates the title of of the work type (Logo design, development...)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkTypeUpdateApiModel": {
        "properties": {
          "Id": {
            "description": "Entity id",
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "description": "Indicates the title of of the work type (Logo design, development...)",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "x-auth-key": {
        "description": "Your account API key. Can be retrieved from your [account settings](/account/settings#api-tab).",
        "in": "header",
        "name": "x-auth-key",
        "type": "apiKey"
      },
      "x-auth-secret": {
        "description": "Your account API secret. Can be retrieved from your [account settings](/account/settings#api-tab). Keep it hidden.",
        "in": "header",
        "name": "x-auth-secret",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "x-auth-key": []
    }
  ]
}