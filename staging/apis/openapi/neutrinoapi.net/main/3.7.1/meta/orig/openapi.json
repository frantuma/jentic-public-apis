{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "tech@neutrinoapi.com",
      "name": "Neutrino API",
      "url": "https://www.neutrinoapi.com/"
    },
    "description": "The general-purpose API",
    "title": "Neutrino API",
    "version": "3.7.1",
    "x-jentic-source-url": "https://www.neutrinoapi.com/api/swagger.json"
  },
  "servers": [
    {
      "url": "https://neutrinoapi.net/"
    }
  ],
  "paths": {
    "/bad-word-filter": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadWordFilterResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Data Tools"
        ],
        "deprecated": false,
        "description": "Detect bad words, swear words and profanity in a given text",
        "operationId": "BadWordFilter",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "catalog": {
                    "default": "strict",
                    "description": "Which catalog of bad words to use, we currently maintain two bad word catalogs: <br> <ul> <li>strict - the largest database of bad words which includes profanity, obscenity, sexual, rude, cuss, dirty, swear and objectionable words and phrases. This catalog is suitable for environments of all ages including educational or children's content</li> <li>obscene - like the strict catalog but does not include any mild profanities, idiomatic phrases or words which are considered formal terminology. This catalog is suitable for adult environments where certain types of bad words are considered OK</li> </ul>",
                    "type": "string"
                  },
                  "censor-character": {
                    "description": "The character to use to censor out the bad words found",
                    "type": "string"
                  },
                  "content": {
                    "description": "The content to scan. This can be either a URL to load from, a file upload (multipart/form-data) or an HTML content string",
                    "type": "string"
                  }
                },
                "required": [
                  "content"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Bad Word Filter"
      }
    },
    "/bin-list-download": {
      "get": {
        "parameters": [
          {
            "description": "Include ISO 3-letter country codes and ISO 3-letter currency codes in the data. These will be added to columns 10 and 11 respectively",
            "in": "query",
            "name": "include-iso3",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Include 8-digit and higher BIN codes. This option includes all 6-digit BINs and all 8-digit and higher BINs (including some 9, 10 and 11 digit BINs where available)",
            "in": "query",
            "name": "include-8digit",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Include all BINs and all available fields in the CSV file (overrides any values set for 'include-iso3' or 'include-8digit')",
            "in": "query",
            "name": "include-all",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Set this option to 'gzip' to have the output file compressed using gzip",
            "in": "query",
            "name": "output-encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "default": "",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "E-commerce"
        ],
        "deprecated": false,
        "description": "Download our entire BIN database for direct use on your own systems",
        "operationId": "BINListDownload",
        "summary": "BIN List Download"
      }
    },
    "/bin-lookup": {
      "get": {
        "parameters": [
          {
            "description": "The BIN or IIN number. This is the first 6, 8 or 10 digits of a card number, use 8 (or more) digits for the highest level of accuracy",
            "in": "query",
            "name": "bin-number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Pass in the customers IP address and we will return some extra information about them",
            "in": "query",
            "name": "customer-ip",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BINLookupResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "E-commerce"
        ],
        "deprecated": false,
        "description": "Perform a BIN (Bank Identification Number) or IIN (Issuer Identification Number) lookup",
        "operationId": "BINLookup",
        "summary": "BIN Lookup"
      }
    },
    "/browser-bot": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserBotResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "WWW"
        ],
        "deprecated": false,
        "description": "Browser bot can extract content, interact with keyboard and mouse events, and execute JavaScript on a website",
        "operationId": "BrowserBot",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "delay": {
                    "default": 3,
                    "description": "Delay in seconds to wait before capturing any page data, executing selectors or JavaScript",
                    "format": "int32",
                    "type": "integer"
                  },
                  "exec": {
                    "description": "Execute JavaScript on the website. This parameter accepts JavaScript as either a string containing JavaScript or for sending multiple separate statements a JSON array or POST array can also be used. If a statement returns any value it will be returned in the 'exec-results' response. You can also use the following specially defined user interaction functions: <br> <div> sleep(seconds); Just wait/sleep for the specified number of seconds. <br>click('selector'); Click on the first element matching the given selector. <br>focus('selector'); Focus on the first element matching the given selector. <br>keys('characters'); Send the specified keyboard characters. Use click() or focus() first to send keys to a specific element. <br>enter(); Send the Enter key. <br>tab(); Send the Tab key. <br> </div>",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "ignore-certificate-errors": {
                    "default": false,
                    "description": "Ignore any TLS/SSL certificate errors and load the page anyway",
                    "type": "boolean"
                  },
                  "selector": {
                    "description": "Extract content from the page DOM using this selector. Commonly known as a CSS selector, you can find a good reference <a href=\"https://www.w3schools.com/cssref/css_selectors.asp\">here</a>",
                    "type": "string"
                  },
                  "timeout": {
                    "default": 30,
                    "description": "Timeout in seconds. Give up if still trying to load the page after this number of seconds",
                    "format": "int32",
                    "type": "integer"
                  },
                  "url": {
                    "description": "The URL to load",
                    "type": "string"
                  },
                  "user-agent": {
                    "description": "Override the browsers default user-agent string with this one",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Browser Bot"
      }
    },
    "/convert": {
      "get": {
        "parameters": [
          {
            "description": "The value to convert from (e.g. 10.95)",
            "in": "query",
            "name": "from-value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the value to convert from (e.g. USD)",
            "in": "query",
            "name": "from-type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type to convert to (e.g. EUR)",
            "in": "query",
            "name": "to-type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Convert using the rate on a historical date, accepted date formats are: YYYY-MM-DD, YYYY-MM, YYYY. Historical rates are stored with daily granularity so the date format YYYY-MM-DD is preferred for the highest precision. If an invalid date or a date too far into the past is supplied then the API will respond with 'valid' as false and an empty 'historical-date'",
            "in": "query",
            "name": "historical-date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "E-commerce"
        ],
        "deprecated": false,
        "description": "A currency and unit conversion tool",
        "operationId": "Convert",
        "summary": "Convert"
      }
    },
    "/domain-lookup": {
      "get": {
        "parameters": [
          {
            "description": "A domain name, hostname, FQDN, URL, HTML link or email address to lookup",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "For domains that we have never seen before then perform various live checks and realtime reconnaissance. <br>NOTE: this option may add additional non-deterministic delay to the request, if you require consistently fast API response times or just want to check our domain blocklists then you can disable this option",
            "in": "query",
            "name": "live",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainLookupResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Security and Networking"
        ],
        "deprecated": false,
        "description": "Retrieve domain name details and detect potentially malicious or dangerous domains",
        "operationId": "DomainLookup",
        "summary": "Domain Lookup"
      }
    },
    "/email-validate": {
      "get": {
        "parameters": [
          {
            "description": "An email address",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Automatically attempt to fix typos in the address",
            "in": "query",
            "name": "fix-typos",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailValidateResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Data Tools"
        ],
        "deprecated": false,
        "description": "Parse, validate and clean an email address",
        "operationId": "EmailValidate",
        "summary": "Email Validate"
      }
    },
    "/email-verify": {
      "get": {
        "parameters": [
          {
            "description": "An email address",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Automatically attempt to fix typos in the address",
            "in": "query",
            "name": "fix-typos",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerifyResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Security and Networking"
        ],
        "deprecated": false,
        "description": "SMTP based email address verification",
        "operationId": "EmailVerify",
        "summary": "Email Verify"
      }
    },
    "/geocode-address": {
      "get": {
        "parameters": [
          {
            "description": "The full address, partial address or name of a place to try and locate. Comma separated address components are preferred.",
            "in": "query",
            "name": "address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The house/building number to locate",
            "in": "query",
            "name": "house-number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The street/road name to locate",
            "in": "query",
            "name": "street",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The city/town name to locate",
            "in": "query",
            "name": "city",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The county/region name to locate",
            "in": "query",
            "name": "county",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The state name to locate",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The postal code to locate",
            "in": "query",
            "name": "postal-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit result to this country (the default is no country bias)",
            "in": "query",
            "name": "country-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The language to display results in, available languages are: <ul> <li>de, en, es, fr, it, pt, ru, zh</li> </ul>",
            "in": "query",
            "name": "language-code",
            "required": false,
            "schema": {
              "default": "en",
              "type": "string"
            }
          },
          {
            "description": "If no matches are found for the given address, start performing a recursive fuzzy search until a geolocation is found. This option is recommended for processing user input or implementing auto-complete. We use a combination of approximate string matching and data cleansing to find possible location matches",
            "in": "query",
            "name": "fuzzy-search",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeocodeAddressResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Geolocation"
        ],
        "deprecated": false,
        "description": "Geocode an address, partial address or just the name of a place",
        "operationId": "GeocodeAddress",
        "summary": "Geocode Address"
      }
    },
    "/geocode-reverse": {
      "get": {
        "parameters": [
          {
            "description": "The location latitude in decimal degrees format",
            "in": "query",
            "name": "latitude",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The location longitude in decimal degrees format",
            "in": "query",
            "name": "longitude",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The language to display results in, available languages are: <ul> <li>de, en, es, fr, it, pt, ru</li> </ul>",
            "in": "query",
            "name": "language-code",
            "required": false,
            "schema": {
              "default": "en",
              "type": "string"
            }
          },
          {
            "description": "The zoom level to respond with: <br> <ul> <li>address - the most precise address available</li> <li>street - the street level</li> <li>city - the city level</li> <li>state - the state level</li> <li>country - the country level</li> </ul>",
            "in": "query",
            "name": "zoom",
            "required": false,
            "schema": {
              "default": "address",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeocodeReverseResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Geolocation"
        ],
        "deprecated": false,
        "description": "Convert a geographic coordinate (latitude and longitude) into a real world address",
        "operationId": "GeocodeReverse",
        "summary": "Geocode Reverse"
      }
    },
    "/hlr-lookup": {
      "get": {
        "parameters": [
          {
            "description": "A phone number",
            "in": "query",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ISO 2-letter country code, assume numbers are based in this country. <br>If not set numbers are assumed to be in international format (with or without the leading + sign)",
            "in": "query",
            "name": "country-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HLRLookupResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Telephony"
        ],
        "deprecated": false,
        "description": "Connect to the global mobile cellular network and retrieve the status of a mobile device",
        "operationId": "HLRLookup",
        "summary": "HLR Lookup"
      }
    },
    "/host-reputation": {
      "get": {
        "parameters": [
          {
            "description": "An IP address, domain name, FQDN or URL. <br>If you supply a domain/URL it will be checked against the URI DNSBL lists",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only check lists with this rating or better",
            "in": "query",
            "name": "list-rating",
            "required": false,
            "schema": {
              "default": 3,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Only check these DNSBL zones/hosts. Multiple zones can be supplied as comma-separated values",
            "in": "query",
            "name": "zones",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostReputationResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Security and Networking"
        ],
        "deprecated": false,
        "description": "Check the reputation of an IP address, domain name or URL against a comprehensive list of blacklists and blocklists",
        "operationId": "HostReputation",
        "summary": "Host Reputation"
      }
    },
    "/html-clean": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "default": "",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "WWW"
        ],
        "deprecated": false,
        "description": "Clean and sanitize untrusted HTML",
        "operationId": "HTMLClean",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "content": {
                    "description": "The HTML content. This can be either a URL to load from, a file upload (multipart/form-data) or an HTML content string",
                    "type": "string"
                  },
                  "output-type": {
                    "description": "The level of sanitization, possible values are: <br><b>plain-text</b>: reduce the content to plain text only (no HTML tags at all) <br><b>simple-text</b>: allow only very basic text formatting tags like b, em, i, strong, u <br><b>basic-html</b>: allow advanced text formatting and hyper links <br><b>basic-html-with-images</b>: same as basic html but also allows image tags <br><b>advanced-html</b>: same as basic html with images but also allows many more common HTML tags like table, ul, dl, pre <br>",
                    "type": "string"
                  }
                },
                "required": [
                  "content"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "HTML Clean"
      }
    },
    "/html-render": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "default": "",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Imaging"
        ],
        "deprecated": false,
        "description": "Render HTML content to PDF, JPG or PNG",
        "operationId": "HTMLRender",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "bg-color": {
                    "description": "For image rendering set the background color in hexadecimal notation (e.g. #0000ff). For PNG output the special value of 'transparent' can be used to create a transparent PNG",
                    "type": "string"
                  },
                  "content": {
                    "description": "The HTML content. This can be either a URL to load from, a file upload (multipart/form-data) or an HTML content string",
                    "type": "string"
                  },
                  "css": {
                    "description": "Inject custom CSS into the HTML. e.g. 'body { background-color: red;}'",
                    "type": "string"
                  },
                  "delay": {
                    "default": 0,
                    "description": "Number of seconds to wait before rendering the page (can be useful for pages with animations etc)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "exec": {
                    "description": "Execute JavaScript on the website. This parameter accepts JavaScript as either a string containing JavaScript or for sending multiple separate statements a JSON array or POST array can also be used. You can also use the following specially defined user interaction functions: <br> <div> sleep(seconds); Just wait/sleep for the specified number of seconds. <br>click('selector'); Click on the first element matching the given selector. <br>focus('selector'); Focus on the first element matching the given selector. <br>keys('characters'); Send the specified keyboard characters. Use click() or focus() first to send keys to a specific element. <br>enter(); Send the Enter key. <br>tab(); Send the Tab key. <br> </div>",
                    "type": "string"
                  },
                  "footer": {
                    "description": "The footer HTML to insert into each page. The following dynamic tags are supported: {date}, {title}, {url}, {pageNumber}, {totalPages}",
                    "type": "string"
                  },
                  "format": {
                    "default": "PDF",
                    "description": "Which format to output, available options are: PDF, PNG, JPG",
                    "type": "string"
                  },
                  "grayscale": {
                    "default": false,
                    "description": "Render the final document in grayscale",
                    "type": "boolean"
                  },
                  "header": {
                    "description": "The header HTML to insert into each page. The following dynamic tags are supported: {date}, {title}, {url}, {pageNumber}, {totalPages}",
                    "type": "string"
                  },
                  "ignore-certificate-errors": {
                    "default": false,
                    "description": "Ignore any TLS/SSL certificate errors",
                    "type": "boolean"
                  },
                  "image-height": {
                    "description": "If rendering to an image format (PNG or JPG) use this image height (in pixels). The default is automatic which dynamically sets the image height based on the content",
                    "format": "int32",
                    "type": "integer"
                  },
                  "image-width": {
                    "default": 1024,
                    "description": "If rendering to an image format (PNG or JPG) use this image width (in pixels)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "landscape": {
                    "default": false,
                    "description": "Set the document to landscape orientation",
                    "type": "boolean"
                  },
                  "margin": {
                    "default": 0,
                    "description": "The document margin (in mm)",
                    "format": "double",
                    "type": "number"
                  },
                  "margin-bottom": {
                    "default": 0,
                    "description": "The document bottom margin (in mm)",
                    "format": "double",
                    "type": "number"
                  },
                  "margin-left": {
                    "default": 0,
                    "description": "The document left margin (in mm)",
                    "format": "double",
                    "type": "number"
                  },
                  "margin-right": {
                    "default": 0,
                    "description": "The document right margin (in mm)",
                    "format": "double",
                    "type": "number"
                  },
                  "margin-top": {
                    "default": 0,
                    "description": "The document top margin (in mm)",
                    "format": "double",
                    "type": "number"
                  },
                  "page-height": {
                    "description": "Set the PDF page height explicitly (in mm)",
                    "format": "double",
                    "type": "number"
                  },
                  "page-size": {
                    "default": "A4",
                    "description": "Set the document page size, can be one of: A0 - A9, B0 - B10, Comm10E, DLE or Letter",
                    "type": "string"
                  },
                  "page-width": {
                    "description": "Set the PDF page width explicitly (in mm)",
                    "format": "double",
                    "type": "number"
                  },
                  "timeout": {
                    "default": 300,
                    "description": "Timeout in seconds. Give up if still trying to load the HTML content after this number of seconds",
                    "format": "int32",
                    "type": "integer"
                  },
                  "title": {
                    "description": "The document title",
                    "type": "string"
                  },
                  "user-agent": {
                    "description": "Override the browsers default user-agent string with this one",
                    "type": "string"
                  },
                  "zoom": {
                    "default": 1,
                    "description": "Set the zoom factor when rendering the page (2.0 for double size, 0.5 for half size)",
                    "format": "double",
                    "type": "number"
                  }
                },
                "required": [
                  "content"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "HTML Render"
      }
    },
    "/image-resize": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "default": "",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Imaging"
        ],
        "deprecated": false,
        "description": "Resize an image and output as either JPEG or PNG",
        "operationId": "ImageResize",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "bg-color": {
                    "default": "transparent",
                    "description": "The image background color in hexadecimal notation (e.g. #0000ff). For PNG output the special value of 'transparent' can also be used. For JPG output the default is black (#000000)",
                    "type": "string"
                  },
                  "format": {
                    "default": "png",
                    "description": "The output image format, can be either png or jpg",
                    "type": "string"
                  },
                  "height": {
                    "description": "The height to resize to (in px). If you don't set this field then the height will be automatic based on the requested width and image aspect ratio",
                    "format": "int32",
                    "type": "integer"
                  },
                  "image-url": {
                    "description": "The URL or Base64 encoded Data URL for the source image. You can also upload an image file directly using multipart/form-data",
                    "type": "string"
                  },
                  "resize-mode": {
                    "default": "scale",
                    "description": "The resize mode to use, we support 3 main resizing modes: <ul> <li><b>scale</b><br>Resize to within the width and height specified while preserving aspect ratio. In this mode the width or height will be automatically adjusted to fit the aspect ratio</li> <li><b>pad</b><br>Resize to exactly the width and height specified while preserving aspect ratio and pad any space left over. Any padded space will be filled in with the 'bg-color' value</li> <li><b>crop</b><br>Resize to exactly the width and height specified while preserving aspect ratio and crop any space which fall outside the area. The cropping window is centered on the original image</li> </ul>",
                    "type": "string"
                  },
                  "width": {
                    "description": "The width to resize to (in px)",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "image-url"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Image Resize"
      }
    },
    "/image-watermark": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "default": "",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Imaging"
        ],
        "deprecated": false,
        "description": "Watermark one image with another image",
        "operationId": "ImageWatermark",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "bg-color": {
                    "default": "transparent",
                    "description": "The image background color in hexadecimal notation (e.g. #0000ff). For PNG output the special value of 'transparent' can also be used. For JPG output the default is black (#000000)",
                    "type": "string"
                  },
                  "format": {
                    "default": "png",
                    "description": "The output image format, can be either png or jpg",
                    "type": "string"
                  },
                  "height": {
                    "description": "If set resize the resulting image to this height (in px)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "image-url": {
                    "description": "The URL or Base64 encoded Data URL for the source image. You can also upload an image file directly using multipart/form-data",
                    "type": "string"
                  },
                  "opacity": {
                    "default": 50,
                    "description": "The opacity of the watermark (0 to 100)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "position": {
                    "default": "center",
                    "description": "The position of the watermark image, possible values are: <br>center, top-left, top-center, top-right, bottom-left, bottom-center, bottom-right",
                    "type": "string"
                  },
                  "resize-mode": {
                    "default": "scale",
                    "description": "The resize mode to use, we support 3 main resizing modes: <ul> <li><b>scale</b><br>Resize to within the width and height specified while preserving aspect ratio. In this mode the width or height will be automatically adjusted to fit the aspect ratio</li> <li><b>pad</b><br>Resize to exactly the width and height specified while preserving aspect ratio and pad any space left over. Any padded space will be filled in with the 'bg-color' value</li> <li><b>crop</b><br>Resize to exactly the width and height specified while preserving aspect ratio and crop any space which fall outside the area. The cropping window is centered on the original image</li> </ul>",
                    "type": "string"
                  },
                  "watermark-url": {
                    "description": "The URL or Base64 encoded Data URL for the watermark image. You can also upload an image file directly using multipart/form-data",
                    "type": "string"
                  },
                  "width": {
                    "description": "If set resize the resulting image to this width (in px)",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "image-url"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Image Watermark"
      }
    },
    "/ip-blocklist": {
      "get": {
        "parameters": [
          {
            "description": "An IPv4 or IPv6 address. Accepts standard IP notation (with or without port number), CIDR notation and IPv6 compressed notation. If multiple IPs are passed using comma-separated values the first non-bogon address on the list will be checked",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include public VPN provider IP addresses. <br><b>NOTE</b>: For more advanced VPN detection including the ability to identify private and stealth VPNs use the <a href=\"https://www.neutrinoapi.com/api/ip-probe/\">IP Probe API</a>",
            "in": "query",
            "name": "vpn-lookup",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPBlocklistResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Security and Networking"
        ],
        "deprecated": false,
        "description": "The IP Blocklist API will detect potentially malicious or dangerous IP addresses",
        "operationId": "IPBlocklist",
        "summary": "IP Blocklist"
      }
    },
    "/ip-blocklist-download": {
      "get": {
        "parameters": [
          {
            "description": "The data format. Can be either CSV or TXT",
            "in": "query",
            "name": "format",
            "required": false,
            "schema": {
              "default": "csv",
              "type": "string"
            }
          },
          {
            "description": "Output IPs using CIDR notation. This option should be preferred but is off by default for backwards compatibility",
            "in": "query",
            "name": "cidr",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Output the IPv6 version of the blocklist, the default is to output IPv4 only. Note that this option enables CIDR notation too as this is the only notation currently supported for IPv6",
            "in": "query",
            "name": "ip6",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The category of IP addresses to include in the download file, possible values are: <br> <ul> <li>all - all IPs available on your current plan (excludes VPN providers for any plans lower than Tier 3)</li> <li>bot - all IPs hosting a malicious bot or part of a botnet. This is a broad category which includes brute-force crackers</li> <li>exploit-bot - all IPs hosting an exploit finding bot or running exploit scanning software</li> <li>hijacked - all IPs that are part of a hijacked netblock or a netblock controlled by a criminal organization</li> <li>malware - all IPs involved in distributing or running malware or spyware</li> <li>proxy - all IPs detected as an anonymous web proxy or anonymous HTTP proxy</li> <li>spam-bot - all IPs hosting a spam bot, comment spamming or any other spamming type software</li> <li>spider - all IPs running a hostile web spider / web crawler</li> <li>tor - all IPs that are Tor nodes or running a Tor related service</li> <li>vpn - all IPs belonging to public VPN providers (only available for Tier 3 or higher accounts)</li> </ul>",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "default": "all",
              "type": "string"
            }
          },
          {
            "description": "Set this option to 'gzip' to have the output file compressed using gzip",
            "in": "query",
            "name": "output-encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Do not download the file but just return the current files MurmurHash3 checksum. You can use this feature to check if the file has changed since a previous check",
            "in": "query",
            "name": "checksum",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "default": "",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Security and Networking"
        ],
        "deprecated": false,
        "description": "This API is a direct feed to our IP blocklist data",
        "operationId": "IPBlocklistDownload",
        "summary": "IP Blocklist Download"
      }
    },
    "/ip-info": {
      "get": {
        "parameters": [
          {
            "description": "An IPv4 or IPv6 address. Accepts standard IP notation and also CIDR notation",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Do a reverse DNS (PTR) lookup. This option can add extra delay to the request so only use it if you need it",
            "in": "query",
            "name": "reverse-lookup",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPInfoResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Geolocation"
        ],
        "deprecated": false,
        "description": "Get location information about an IP address and do reverse DNS (PTR) lookups",
        "operationId": "IPInfo",
        "summary": "IP Info"
      }
    },
    "/ip-probe": {
      "get": {
        "parameters": [
          {
            "description": "An IPv4 or IPv6 address. Accepts standard IP notation and also CIDR notation",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPProbeResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Security and Networking"
        ],
        "deprecated": false,
        "description": "Execute a realtime network probe against an IPv4 or IPv6 address",
        "operationId": "IPProbe",
        "summary": "IP Probe"
      }
    },
    "/phone-playback": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhonePlaybackResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Telephony"
        ],
        "deprecated": false,
        "description": "Make an automated call to any valid phone number and playback an audio message",
        "operationId": "PhonePlayback",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "audio-url": {
                    "description": "A URL to a valid audio file. Accepted audio formats are: <ul> <li>MP3</li> <li>WAV</li> <li>OGG</li> </ul>You can use the following MP3 URL for testing: <br>https://www.neutrinoapi.com/test-files/test1.mp3",
                    "type": "string"
                  },
                  "limit": {
                    "default": 3,
                    "description": "Limit the total number of calls allowed to the supplied phone number, if the limit is reached within the TTL then error code 14 will be returned",
                    "format": "int32",
                    "type": "integer"
                  },
                  "limit-ttl": {
                    "default": 1,
                    "description": "Set the TTL in number of days that the 'limit' option will remember a phone number (the default is 1 day and the maximum is 365 days)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "number": {
                    "description": "The phone number to call. Must be in valid international format",
                    "type": "string"
                  }
                },
                "required": [
                  "number"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Phone Playback"
      }
    },
    "/phone-validate": {
      "get": {
        "parameters": [
          {
            "description": "A phone number. This can be in international format (E.164) or local format. If passing local format you must also set either the 'country-code' OR 'ip' options as well",
            "in": "query",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ISO 2-letter country code, assume numbers are based in this country. If not set numbers are assumed to be in international format (with or without the leading + sign)",
            "in": "query",
            "name": "country-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Pass in a users IP address and we will assume numbers are based in the country of the IP address",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneValidateResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Data Tools"
        ],
        "deprecated": false,
        "description": "Parse, validate and get location information about a phone number",
        "operationId": "PhoneValidate",
        "summary": "Phone Validate"
      }
    },
    "/phone-verify": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneVerifyResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Telephony"
        ],
        "deprecated": false,
        "description": "Make an automated call to any valid phone number and playback a unique security code",
        "operationId": "PhoneVerify",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "code-length": {
                    "default": 6,
                    "description": "The number of digits to use in the security code (between 4 and 12)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "country-code": {
                    "description": "ISO 2-letter country code, assume numbers are based in this country. <br>If not set numbers are assumed to be in international format (with or without the leading + sign)",
                    "type": "string"
                  },
                  "language-code": {
                    "default": "en",
                    "description": "The language to playback the verification code in, available languages are: <ul> <li>de - German</li> <li>en - English</li> <li>es - Spanish</li> <li>fr - French</li> <li>it - Italian</li> <li>pt - Portuguese</li> <li>ru - Russian</li> </ul>",
                    "type": "string"
                  },
                  "limit": {
                    "default": 3,
                    "description": "Limit the total number of calls allowed to the supplied phone number, if the limit is reached within the TTL then error code 14 will be returned",
                    "format": "int32",
                    "type": "integer"
                  },
                  "limit-ttl": {
                    "default": 1,
                    "description": "Set the TTL in number of days that the 'limit' option will remember a phone number (the default is 1 day and the maximum is 365 days)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "number": {
                    "description": "The phone number to send the verification code to",
                    "type": "string"
                  },
                  "playback-delay": {
                    "default": 800,
                    "description": "The delay in milliseconds between the playback of each security code",
                    "format": "int32",
                    "type": "integer"
                  },
                  "security-code": {
                    "description": "Pass in your own security code. This is useful if you have implemented TOTP or similar 2FA methods. If not set then we will generate a secure random code",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "number"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Phone Verify"
      }
    },
    "/qr-code": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "default": "",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Imaging"
        ],
        "deprecated": false,
        "description": "Generate a QR code as a PNG image",
        "operationId": "QRCode",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "bg-color": {
                    "default": "#ffffff",
                    "description": "The QR code background color",
                    "type": "string"
                  },
                  "code-format": {
                    "default": "qr",
                    "description": "The barcode format to output. Accepted formats are: qr, c128",
                    "type": "string"
                  },
                  "content": {
                    "description": "The content to encode into the QR code (e.g. a URL or a phone number)",
                    "type": "string"
                  },
                  "fg-color": {
                    "default": "#000000",
                    "description": "The QR code foreground color",
                    "type": "string"
                  },
                  "height": {
                    "default": 256,
                    "description": "The height of the QR code (in px)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "width": {
                    "default": 256,
                    "description": "The width of the QR code (in px)",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "content"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "QR Code"
      }
    },
    "/sms-verify": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSVerifyResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Telephony"
        ],
        "deprecated": false,
        "description": "Send a unique security code to any mobile device via SMS",
        "operationId": "SMSVerify",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "brand-name": {
                    "description": "Set a custom brand or product name in the verification message",
                    "type": "string"
                  },
                  "code-length": {
                    "default": 5,
                    "description": "The number of digits to use in the security code (must be between 4 and 12)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "country-code": {
                    "description": "ISO 2-letter country code, assume numbers are based in this country. <br>If not set numbers are assumed to be in international format (with or without the leading + sign)",
                    "type": "string"
                  },
                  "language-code": {
                    "default": "en",
                    "description": "The language to send the verification code in, available languages are: <ul> <li>de - German</li> <li>en - English</li> <li>es - Spanish</li> <li>fr - French</li> <li>it - Italian</li> <li>pt - Portuguese</li> <li>ru - Russian</li> </ul>",
                    "type": "string"
                  },
                  "limit": {
                    "default": 10,
                    "description": "Limit the total number of SMS allowed to the supplied phone number, if the limit is reached within the TTL then error code 14 will be returned",
                    "format": "int32",
                    "type": "integer"
                  },
                  "limit-ttl": {
                    "default": 1,
                    "description": "Set the TTL in number of days that the 'limit' option will remember a phone number (the default is 1 day and the maximum is 365 days)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "number": {
                    "description": "The phone number to send a verification code to",
                    "type": "string"
                  },
                  "security-code": {
                    "description": "Pass in your own security code. This is useful if you have implemented TOTP or similar 2FA methods. If not set then we will generate a secure random code",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "number"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "SMS Verify"
      }
    },
    "/ua-lookup": {
      "get": {
        "parameters": [
          {
            "description": "The user-agent string to lookup. For client hints use the 'UA' header or the JSON data directly from 'navigator.userAgentData.brands' or 'navigator.userAgentData.getHighEntropyValues()'",
            "in": "query",
            "name": "ua",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "For client hints this corresponds to the 'UA-Full-Version' header or 'uaFullVersion' from NavigatorUAData",
            "in": "query",
            "name": "ua-version",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "For client hints this corresponds to the 'UA-Platform' header or 'platform' from NavigatorUAData",
            "in": "query",
            "name": "ua-platform",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "For client hints this corresponds to the 'UA-Platform-Version' header or 'platformVersion' from NavigatorUAData",
            "in": "query",
            "name": "ua-platform-version",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "For client hints this corresponds to the 'UA-Mobile' header or 'mobile' from NavigatorUAData",
            "in": "query",
            "name": "ua-mobile",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "For client hints this corresponds to the 'UA-Model' header or 'model' from NavigatorUAData. <br>You can also use this parameter to lookup a device directly by its model name, model code or hardware code, on android you can get the model name from: https://developer.android.com/reference/android/os/Build.html#MODEL",
            "in": "query",
            "name": "device-model",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This parameter is only used in combination with 'device-model' when doing direct device lookups without any user-agent data. Set this to the brand or manufacturer name, this is required for accurate device detection with ambiguous model names. On android you can get the device brand from: https://developer.android.com/reference/android/os/Build#MANUFACTURER",
            "in": "query",
            "name": "device-brand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UALookupResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Data Tools"
        ],
        "deprecated": false,
        "description": "Parse, validate and get detailed user-agent information from a user agent string or from client hints",
        "operationId": "UALookup",
        "summary": "UA Lookup"
      }
    },
    "/url-info": {
      "get": {
        "parameters": [
          {
            "description": "The URL to probe",
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If this URL responds with html, text, json or xml then return the response. This option is useful if you want to perform further processing on the URL content (e.g. with the HTML Extract or HTML Clean APIs)",
            "in": "query",
            "name": "fetch-content",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Ignore any TLS/SSL certificate errors and load the URL anyway",
            "in": "query",
            "name": "ignore-certificate-errors",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Timeout in seconds. Give up if still trying to load the URL after this number of seconds",
            "in": "query",
            "name": "timeout",
            "required": false,
            "schema": {
              "default": 60,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "If the request fails for any reason try again this many times",
            "in": "query",
            "name": "retry",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/URLInfoResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "WWW"
        ],
        "deprecated": false,
        "description": "Parse, analyze and retrieve content from the supplied URL",
        "operationId": "URLInfo",
        "summary": "URL Info"
      }
    },
    "/verify-security-code": {
      "get": {
        "parameters": [
          {
            "description": "The security code to verify",
            "in": "query",
            "name": "security-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set then enable additional brute-force protection by limiting the number of attempts by the supplied value. This can be set to any unique identifier you would like to limit by, for example a hash of the users email, phone number or IP address. Requests to this API will be ignored after approximately 10 failed verification attempts",
            "in": "query",
            "name": "limit-by",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySecurityCodeResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "Your API request has been rejected. Check error code for details"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "You have failed to authenticate"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused a fatal exception"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            },
            "description": "We messed up, sorry! Your request has caused an error"
          }
        },
        "tags": [
          "Telephony"
        ],
        "deprecated": false,
        "description": "Check if a security code sent via SMS Verify or Phone Verify is valid",
        "operationId": "VerifySecurityCode",
        "summary": "Verify Security Code"
      }
    }
  },
  "components": {
    "schemas": {
      "APIError": {
        "properties": {
          "api-error": {
            "description": "API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "format": "int32",
            "type": "integer"
          },
          "api-error-msg": {
            "description": "API error message",
            "type": "string"
          }
        },
        "required": [
          "api-error",
          "api-error-msg"
        ],
        "title": "APIError",
        "type": "object"
      },
      "BINLookupResponse": {
        "description": "Structure of bin-lookup",
        "example": {
          "bin-number": "48334884",
          "card-brand": "VISA",
          "card-category": "PLATINUM",
          "card-type": "CREDIT",
          "country": "NEW ZEALAND",
          "country-code": "NZ",
          "country-code3": "NZL",
          "currency-code": "NZD",
          "ip-blocklisted": false,
          "ip-blocklists": [],
          "ip-city": "",
          "ip-country": "",
          "ip-country-code": "",
          "ip-country-code3": "",
          "ip-matches-bin": false,
          "ip-region": "",
          "is-commercial": false,
          "is-prepaid": false,
          "issuer": "KIWIBANK, LTD.",
          "issuer-phone": "",
          "issuer-website": "http://www.kiwibank.co.nz",
          "valid": true
        },
        "properties": {
          "bin-number": {
            "description": "The BIN number returned. You may count the number of digits in this field to determine if the BIN is likely to be based on an 8-digit or 6-digit card",
            "type": "string"
          },
          "card-brand": {
            "description": "The card brand (e.g. Visa or Mastercard)",
            "type": "string"
          },
          "card-category": {
            "description": "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
            "type": "string"
          },
          "card-type": {
            "description": "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
            "type": "string"
          },
          "country": {
            "description": "The full country name of the issuer",
            "type": "string"
          },
          "country-code": {
            "description": "The ISO 2-letter country code of the issuer",
            "type": "string"
          },
          "country-code3": {
            "description": "The ISO 3-letter country code of the issuer",
            "type": "string"
          },
          "currency-code": {
            "description": "ISO 4217 currency code associated with the country of the issuer",
            "type": "string"
          },
          "ip-blocklisted": {
            "description": "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
            "type": "boolean"
          },
          "ip-blocklists": {
            "description": "An array of strings indicating which blocklists this IP is listed on",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ip-city": {
            "description": "The city of the customers IP (if detectable)",
            "type": "string"
          },
          "ip-country": {
            "description": "The country of the customers IP",
            "type": "string"
          },
          "ip-country-code": {
            "description": "The ISO 2-letter country code of the customers IP",
            "type": "string"
          },
          "ip-country-code3": {
            "description": "The ISO 3-letter country code of the customers IP",
            "type": "string"
          },
          "ip-matches-bin": {
            "description": "True if the customers IP country matches the BIN country",
            "type": "boolean"
          },
          "ip-region": {
            "description": "The region of the customers IP (if detectable)",
            "type": "string"
          },
          "is-commercial": {
            "description": "Is this a commercial/business use card",
            "type": "boolean"
          },
          "is-prepaid": {
            "description": "Is this a prepaid or prepaid reloadable card",
            "type": "boolean"
          },
          "issuer": {
            "description": "The card issuer",
            "type": "string"
          },
          "issuer-phone": {
            "description": "The card issuers phone number",
            "type": "string"
          },
          "issuer-website": {
            "description": "The card issuers website",
            "type": "string"
          },
          "valid": {
            "description": "Is this a valid BIN or IIN number",
            "type": "boolean"
          }
        },
        "required": [
          "country",
          "ip-city",
          "ip-matches-bin",
          "card-type",
          "card-category",
          "ip-country-code",
          "ip-country",
          "issuer",
          "ip-blocklisted",
          "valid",
          "ip-blocklists",
          "issuer-website",
          "country-code",
          "ip-region",
          "card-brand",
          "issuer-phone",
          "country-code3",
          "currency-code",
          "ip-country-code3",
          "is-commercial",
          "is-prepaid",
          "bin-number"
        ],
        "title": "BINLookupResponse",
        "type": "object"
      },
      "BadWordFilterResponse": {
        "description": "Structure of bad-word-filter",
        "example": {
          "bad-words-list": [
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED",
            "REDACTED"
          ],
          "bad-words-total": 50,
          "censored-content": "",
          "is-bad": true
        },
        "properties": {
          "bad-words-list": {
            "description": "An array of the bad words found",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bad-words-total": {
            "description": "Total number of bad words detected",
            "format": "int32",
            "type": "integer"
          },
          "censored-content": {
            "description": "The censored content (only set if censor-character has been set)",
            "type": "string"
          },
          "is-bad": {
            "description": "Does the text contain bad words",
            "type": "boolean"
          }
        },
        "required": [
          "bad-words-list",
          "bad-words-total",
          "censored-content",
          "is-bad"
        ],
        "title": "BadWordFilterResponse",
        "type": "object"
      },
      "Blacklist": {
        "description": "Structure of lists",
        "properties": {
          "is-listed": {
            "description": "True if the host is currently black-listed",
            "type": "boolean"
          },
          "list-host": {
            "description": "The hostname of the DNSBL",
            "type": "string"
          },
          "list-name": {
            "description": "The name of the DNSBL",
            "type": "string"
          },
          "list-rating": {
            "description": "The list rating [1-3] with 1 being the best rating and 3 the lowest rating",
            "format": "int32",
            "type": "integer"
          },
          "response-time": {
            "description": "The DNSBL server response time in milliseconds",
            "format": "int32",
            "type": "integer"
          },
          "return-code": {
            "description": "The specific return code for this listing (only set if listed)",
            "type": "string"
          },
          "txt-record": {
            "description": "The TXT record returned for this listing (only set if listed)",
            "type": "string"
          }
        },
        "required": [
          "is-listed",
          "list-host",
          "list-rating",
          "list-name",
          "txt-record",
          "return-code",
          "response-time"
        ],
        "title": "Blacklist",
        "type": "object"
      },
      "BlocklistSensor": {
        "description": "Structure of sensors",
        "properties": {
          "blocklist": {
            "description": "The primary blocklist category this sensor belongs to",
            "type": "string"
          },
          "description": {
            "description": "Contains details about the sensor source and what type of malicious activity was detected",
            "type": "string"
          },
          "id": {
            "description": "The sensor ID. This is a permanent and unique ID for each sensor",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "blocklist",
          "description"
        ],
        "title": "BlocklistSensor",
        "type": "object"
      },
      "BrowserBotResponse": {
        "description": "Structure of browser-bot",
        "example": {
          "content": "<html>...</html>",
          "content-size": 100671,
          "elements": [
            {
              "class": "button button-selected",
              "href": "https://www.neutrinoapi.com/",
              "html": "<a href=\"https://www.neutrinoapi.com/\" class=\"button button-selected\">Overview</a>",
              "id": "",
              "text": "Overview"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/api/api-basics/",
              "html": "<a href=\"https://www.neutrinoapi.com/api/api-basics/\" class=\"button \">API&nbsp;Docs</a>",
              "id": "",
              "text": "API Docs"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/plans/",
              "html": "<a href=\"https://www.neutrinoapi.com/plans/\" class=\"button \">Plans</a>",
              "id": "",
              "text": "Plans"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/signup/",
              "html": "<a href=\"https://www.neutrinoapi.com/signup/\" class=\"button \">Sign&nbsp;Up</a>",
              "id": "",
              "text": "Sign Up"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/updates/",
              "html": "<a href=\"https://www.neutrinoapi.com/updates/\" class=\"button \">Updates</a>",
              "id": "",
              "text": "Updates"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/status/",
              "html": "<a href=\"https://www.neutrinoapi.com/status/\" class=\"button \">Status</a>",
              "id": "",
              "text": "Status"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/about-us/",
              "html": "<a href=\"https://www.neutrinoapi.com/about-us/\" class=\"button \">About</a>",
              "id": "",
              "text": "About"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/contact-us/",
              "html": "<a href=\"https://www.neutrinoapi.com/contact-us/\" class=\"button \">Contact</a>",
              "id": "",
              "text": "Contact"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/account/login/",
              "html": "<a href=\"https://www.neutrinoapi.com/account/login/\" class=\"button \">Login</a>",
              "id": "",
              "text": "Login"
            },
            {
              "class": "button button-selected",
              "href": "https://www.neutrinoapi.com/",
              "html": "<a href=\"https://www.neutrinoapi.com/\" class=\"button button-selected\">Overview</a>",
              "id": "",
              "text": "Overview"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/api/api-basics/",
              "html": "<a href=\"https://www.neutrinoapi.com/api/api-basics/\" class=\"button \">API&nbsp;Docs</a>",
              "id": "",
              "text": "API Docs"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/plans/",
              "html": "<a href=\"https://www.neutrinoapi.com/plans/\" class=\"button \">Plans</a>",
              "id": "",
              "text": "Plans"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/signup/",
              "html": "<a href=\"https://www.neutrinoapi.com/signup/\" class=\"button \">Sign&nbsp;Up</a>",
              "id": "",
              "text": "Sign Up"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/updates/",
              "html": "<a href=\"https://www.neutrinoapi.com/updates/\" class=\"button \">Updates</a>",
              "id": "",
              "text": "Updates"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/status/",
              "html": "<a href=\"https://www.neutrinoapi.com/status/\" class=\"button \">Status</a>",
              "id": "",
              "text": "Status"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/about-us/",
              "html": "<a href=\"https://www.neutrinoapi.com/about-us/\" class=\"button \">About</a>",
              "id": "",
              "text": "About"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/contact-us/",
              "html": "<a href=\"https://www.neutrinoapi.com/contact-us/\" class=\"button \">Contact</a>",
              "id": "",
              "text": "Contact"
            },
            {
              "class": "button ",
              "href": "https://www.neutrinoapi.com/account/login/",
              "html": "<a href=\"https://www.neutrinoapi.com/account/login/\" class=\"button \">Login</a>",
              "id": "",
              "text": "Login"
            }
          ],
          "error-message": "",
          "exec-results": [
            {
              "result": "",
              "statement": "[click('#button-id'), sleep(1), click('.class'), keys('1234'), enter()]"
            }
          ],
          "http-redirect-url": "",
          "http-status-code": 200,
          "http-status-message": "OK",
          "is-error": false,
          "is-http-ok": true,
          "is-http-redirect": false,
          "is-secure": true,
          "is-timeout": false,
          "language-code": "en",
          "load-time": 0.843650624,
          "mime-type": "text/html",
          "response-headers": {
            "alt-svc": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000",
            "content-encoding": "gzip",
            "content-security-policy": "default-src 'self'; base-uri 'none'; object-src 'none'; frame-ancestors 'none'; frame-src 'none'; form-action 'self' secure.ewaypayments.com; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; report-uri https://www.neutrinoapi.com/csp-report/",
            "content-type": "text/html; charset=UTF-8",
            "date": "Mon, 10 Mar 2025 22:15:13 GMT",
            "referrer-policy": "strict-origin",
            "server": "nginx",
            "strict-transport-security": "max-age=31536000",
            "via": "1.1 google",
            "x-content-type-options": "nosniff"
          },
          "security-details": {
            "cipher": "AES_128_GCM",
            "issuer": "GlobalSign RSA OV SSL CA 2018",
            "protocol": "TLS 1.3",
            "subject-name": "*.neutrinoapi.com"
          },
          "server-hostname": "139.243.244.35.bc.googleusercontent.com",
          "server-ip": "35.244.243.139",
          "title": "Neutrino API - Power tools for Developers",
          "url": "https://www.neutrinoapi.com/",
          "url-components": {
            "host": "www.neutrinoapi.com",
            "path": "/",
            "port": 443,
            "protocol": "https",
            "query": {},
            "url": "https://www.neutrinoapi.com/"
          },
          "url-valid": true
        },
        "properties": {
          "content": {
            "description": "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
            "type": "string"
          },
          "content-size": {
            "description": "The size of the returned content in bytes",
            "format": "int32",
            "type": "integer"
          },
          "elements": {
            "description": "Array containing all the elements matching the supplied selector",
            "items": {
              "$ref": "#/components/schemas/HTMLElement"
            },
            "type": "array"
          },
          "error-message": {
            "description": "Contains the error message if an error has occurred ('is-error' will be true)",
            "type": "string"
          },
          "exec-results": {
            "description": "If you executed any JavaScript this array holds the results as objects",
            "items": {
              "$ref": "#/components/schemas/ExecResult"
            },
            "type": "array"
          },
          "http-redirect-url": {
            "description": "The redirected URL if the URL responded with an HTTP redirect",
            "type": "string"
          },
          "http-status-code": {
            "description": "The HTTP status code the URL returned",
            "format": "int32",
            "type": "integer"
          },
          "http-status-message": {
            "description": "The HTTP status message the URL returned",
            "type": "string"
          },
          "is-error": {
            "description": "True if an error has occurred loading the page. Check the 'error-message' field for details",
            "type": "boolean"
          },
          "is-http-ok": {
            "description": "True if the HTTP status is OK (200)",
            "type": "boolean"
          },
          "is-http-redirect": {
            "description": "True if the URL responded with an HTTP redirect",
            "type": "boolean"
          },
          "is-secure": {
            "description": "True if the page is secured using TLS/SSL",
            "type": "boolean"
          },
          "is-timeout": {
            "description": "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
            "type": "boolean"
          },
          "language-code": {
            "description": "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
            "type": "string"
          },
          "load-time": {
            "description": "The number of seconds taken to load the page (from initial request until DOM ready)",
            "format": "double",
            "type": "number"
          },
          "mime-type": {
            "description": "The document MIME type",
            "type": "string"
          },
          "response-headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map containing all the HTTP response headers the URL responded with",
            "type": "object"
          },
          "security-details": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map containing details of the TLS/SSL setup",
            "type": "object"
          },
          "server-hostname": {
            "description": "The HTTP servers hostname (PTR/RDNS record)",
            "type": "string"
          },
          "server-ip": {
            "description": "The HTTP servers IP address",
            "type": "string"
          },
          "title": {
            "description": "The document title",
            "type": "string"
          },
          "url": {
            "description": "The requested URL. This may not be the same as the final destination URL, if the URL redirects then it will be set in 'http-redirect-url' and 'is-http-redirect' will also be true",
            "type": "string"
          },
          "url-components": {
            "$ref": "#/components/schemas/URLComponents"
          },
          "url-valid": {
            "description": "True if the URL supplied is valid",
            "type": "boolean"
          }
        },
        "required": [
          "url",
          "content",
          "mime-type",
          "title",
          "is-error",
          "is-timeout",
          "error-message",
          "http-status-code",
          "http-status-message",
          "is-http-ok",
          "is-http-redirect",
          "http-redirect-url",
          "server-ip",
          "load-time",
          "response-headers",
          "is-secure",
          "security-details",
          "elements",
          "exec-results",
          "language-code",
          "url-components",
          "url-valid",
          "content-size",
          "server-hostname"
        ],
        "title": "BrowserBotResponse",
        "type": "object"
      },
      "ConvertResponse": {
        "description": "Structure of convert",
        "example": {
          "from-name": "United States Dollar",
          "from-symbol": "$",
          "from-type": "USD",
          "from-value": "100",
          "historical-date": "",
          "result": "92.3066",
          "result-float": 92.3066,
          "to-name": "Euro",
          "to-symbol": "\u20ac",
          "to-type": "EUR",
          "valid": true
        },
        "properties": {
          "from-name": {
            "description": "The full name of the type being converted from",
            "type": "string"
          },
          "from-symbol": {
            "description": "The standard UTF-8 symbol used to represent the type being converted from",
            "type": "string"
          },
          "from-type": {
            "description": "The type of the value being converted from",
            "type": "string"
          },
          "from-value": {
            "description": "The value being converted from",
            "type": "string"
          },
          "historical-date": {
            "description": "If a historical conversion was made using the 'historical-date' request option this will contain the exact date used for the conversion in ISO format: YYYY-MM-DD",
            "type": "string"
          },
          "result": {
            "description": "The result of the conversion in string format",
            "type": "string"
          },
          "result-float": {
            "description": "The result of the conversion as a floating-point number",
            "format": "double",
            "type": "number"
          },
          "to-name": {
            "description": "The full name of the type being converted to",
            "type": "string"
          },
          "to-symbol": {
            "description": "The standard UTF-8 symbol used to represent the type being converted to",
            "type": "string"
          },
          "to-type": {
            "description": "The type being converted to",
            "type": "string"
          },
          "valid": {
            "description": "True if the conversion was successful and produced a valid result",
            "type": "boolean"
          }
        },
        "required": [
          "valid",
          "result",
          "from-value",
          "to-type",
          "from-type",
          "result-float",
          "from-name",
          "from-symbol",
          "to-name",
          "to-symbol",
          "historical-date"
        ],
        "title": "ConvertResponse",
        "type": "object"
      },
      "DomainLookupResponse": {
        "description": "Structure of domain-lookup",
        "example": {
          "age": 4194,
          "blocklists": [],
          "dns-provider": "r4ns.com",
          "domain": "neutrinoapi.com",
          "fqdn": "neutrinoapi.com",
          "is-adult": false,
          "is-gov": false,
          "is-malicious": false,
          "is-opennic": false,
          "is-pending": false,
          "is-subdomain": false,
          "mail-provider": "isx.net.nz",
          "rank": 746021,
          "registered-date": "2013-09-15",
          "registrar-id": 468,
          "registrar-name": "Amazon Registrar, Inc.",
          "sensors": [],
          "tld": "com",
          "tld-cc": "",
          "valid": true
        },
        "properties": {
          "age": {
            "description": "The number of days since the domain was registered. A domain age of under 90 days is generally considered to be potentially risky. A value of 0 indicates no registration date was found for this domain",
            "format": "int32",
            "type": "integer"
          },
          "blocklists": {
            "description": "An array of strings indicating which blocklist categories this domain is listed on. Current possible values are: <br> <ul> <li>phishing - Domain has recently been hosting phishing links or involved in the sending of phishing messages</li> <li>malware - Domain has recently been hosting malware or involved in the distribution of malware</li> <li>spam - Domain has recently been sending spam either directly or indirectly</li> <li>anonymizer - Domain is involved in anonymizer activity such as disposable email, hosting proxies or tor services</li> <li>nefarious - Domain is involved in nefarious or malicious activity such as hacking, fraud or other abusive behavior</li> </ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns-provider": {
            "description": "The primary domain of the DNS provider for this domain",
            "type": "string"
          },
          "domain": {
            "description": "The primary domain name excluding any subdomains. This is also referred to as the second-level domain (SLD)",
            "type": "string"
          },
          "fqdn": {
            "description": "The fully qualified domain name (FQDN)",
            "type": "string"
          },
          "is-adult": {
            "description": "This domain is hosting adult content such as porn, webcams, escorts, etc",
            "type": "boolean"
          },
          "is-gov": {
            "description": "Is this domain under a government or military TLD",
            "type": "boolean"
          },
          "is-malicious": {
            "description": "Consider this domain malicious as it is currently listed on at least 1 blocklist",
            "type": "boolean"
          },
          "is-opennic": {
            "description": "Is this domain under an OpenNIC TLD",
            "type": "boolean"
          },
          "is-pending": {
            "description": "True if this domain is unseen and is currently being processed in the background. This field only matters when the 'live' lookup setting has been explicitly disabled and indicates that not all domain data my be present yet",
            "type": "boolean"
          },
          "is-subdomain": {
            "description": "Is the FQDN a subdomain of the primary domain",
            "type": "boolean"
          },
          "mail-provider": {
            "description": "The primary domain of the email provider for this domain. An empty value indicates the domain has no valid MX records",
            "type": "string"
          },
          "rank": {
            "description": "The domains estimated global traffic rank with the highest rank being 1. A value of 0 indicates the domain is currently ranked outside of the top 1M of domains",
            "format": "int32",
            "type": "integer"
          },
          "registered-date": {
            "description": "The ISO date this domain was registered or first seen on the internet. An empty value indicates we could not reliably determine the date",
            "type": "string"
          },
          "registrar-id": {
            "description": "The IANA registrar ID (0 if no registrar ID was found)",
            "format": "int32",
            "type": "integer"
          },
          "registrar-name": {
            "description": "The name of the domain registrar owning this domain",
            "type": "string"
          },
          "sensors": {
            "description": "An array of objects containing details on which specific blocklist sensors have detected this domain",
            "items": {
              "$ref": "#/components/schemas/BlocklistSensor"
            },
            "type": "array"
          },
          "tld": {
            "description": "The top-level domain (TLD)",
            "type": "string"
          },
          "tld-cc": {
            "description": "For a country code top-level domain (ccTLD) this will contain the associated ISO 2-letter country code",
            "type": "string"
          },
          "valid": {
            "description": "True if a valid domain was found. For a domain to be considered valid it must be registered and have valid DNS NS records",
            "type": "boolean"
          }
        },
        "required": [
          "domain",
          "is-malicious",
          "blocklists",
          "sensors",
          "valid",
          "fqdn",
          "is-subdomain",
          "tld",
          "tld-cc",
          "rank",
          "is-gov",
          "is-opennic",
          "is-pending",
          "is-adult",
          "registered-date",
          "age",
          "registrar-name",
          "registrar-id",
          "dns-provider",
          "mail-provider"
        ],
        "title": "DomainLookupResponse",
        "type": "object"
      },
      "EmailValidateResponse": {
        "description": "Structure of email-validate",
        "example": {
          "domain": "neutrinoapi.com",
          "domain-error": false,
          "domain-status": "ok",
          "email": "tech@neutrinoapi.com",
          "is-disposable": false,
          "is-freemail": false,
          "is-personal": false,
          "mx-ip": "111.65.230.108",
          "provider": "isx.net.nz",
          "syntax-error": false,
          "typos-fixed": false,
          "valid": true
        },
        "properties": {
          "domain": {
            "description": "The domain name of this email address",
            "type": "string"
          },
          "domain-error": {
            "description": "True if this address has any domain name or DNS related errors. Check the 'domain-status' field for the detailed error reason",
            "type": "boolean"
          },
          "domain-status": {
            "description": "The email domain status, possible values are: <br> <ul> <li>ok - the domain is in working order and can receive email</li> <li>invalid - the domain is not a conformant hostname. May contain invalid syntax or characters</li> <li>no-service - the domain owner has indicated there is no mail service on the domain (also known as the 'Null MX')</li> <li>no-mail - the domain has no valid MX records so cannot receive email</li> <li>mx-invalid - MX records contain invalid or non-conformant hostname values</li> <li>mx-bogon - MX records point to bogon IP addresses</li> <li>resolv-error - MX records do not resolve to any valid IP addresses</li> </ul>",
            "type": "string"
          },
          "email": {
            "description": "The complete email address. If you enabled the 'fix-typos' option then this will be the corrected address",
            "type": "string"
          },
          "is-disposable": {
            "description": "True if this address is a disposable, temporary or darknet related email address",
            "type": "boolean"
          },
          "is-freemail": {
            "description": "True if this address is from a free email provider",
            "type": "boolean"
          },
          "is-personal": {
            "description": "True if this address likely belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
            "type": "boolean"
          },
          "mx-ip": {
            "description": "The first resolved IP address of the primary MX server, may be empty if there are domain errors present",
            "type": "string"
          },
          "provider": {
            "description": "The domain name of the email hosting provider",
            "type": "string"
          },
          "syntax-error": {
            "description": "True if this address has any syntax errors or is not in RFC compliant formatting",
            "type": "boolean"
          },
          "typos-fixed": {
            "description": "True if any typos have been fixed. The 'fix-typos' option must be enabled for this to work",
            "type": "boolean"
          },
          "valid": {
            "description": "Is this a valid email address. To be valid an email must have: correct syntax, a registered and active domain name, correct DNS records and operational MX servers",
            "type": "boolean"
          }
        },
        "required": [
          "valid",
          "syntax-error",
          "domain",
          "domain-error",
          "is-freemail",
          "email",
          "is-disposable",
          "typos-fixed",
          "is-personal",
          "provider",
          "mx-ip",
          "domain-status"
        ],
        "title": "EmailValidateResponse",
        "type": "object"
      },
      "EmailVerifyResponse": {
        "description": "Structure of email-verify",
        "example": {
          "domain": "neutrinoapi.com",
          "domain-error": false,
          "domain-status": "ok",
          "email": "tech@neutrinoapi.com",
          "is-catch-all": false,
          "is-deferred": false,
          "is-disposable": false,
          "is-freemail": false,
          "is-personal": false,
          "mx-ip": "111.65.230.108",
          "provider": "isx.net.nz",
          "smtp-response": "250 Accepted",
          "smtp-status": "ok",
          "syntax-error": false,
          "typos-fixed": false,
          "valid": true,
          "verified": true
        },
        "properties": {
          "domain": {
            "description": "The domain name of this email address",
            "type": "string"
          },
          "domain-error": {
            "description": "True if this address has any domain name or DNS related errors. Check the 'domain-status' field for the detailed error reason",
            "type": "boolean"
          },
          "domain-status": {
            "description": "The email domain status, possible values are: <br> <ul> <li>ok - the domain is in working order and can receive email</li> <li>invalid - the domain is not a conformant hostname. May contain invalid syntax or characters</li> <li>no-service - the domain owner has indicated there is no mail service on the domain (also known as the 'Null MX')</li> <li>no-mail - the domain has no valid MX records so cannot receive email</li> <li>mx-invalid - MX records contain invalid or non-conformant hostname values</li> <li>mx-bogon - MX records point to bogon IP addresses</li> <li>resolv-error - MX records do not resolve to any valid IP addresses</li> </ul>",
            "type": "string"
          },
          "email": {
            "description": "The complete email address. If you enabled the 'fix-typos' option then this will be the corrected address",
            "type": "string"
          },
          "is-catch-all": {
            "description": "True if this email domain has a catch-all policy. A catch-all domain will accept mail for any username so therefor the 'smtp-status' will always be 'ok'",
            "type": "boolean"
          },
          "is-deferred": {
            "description": "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
            "type": "boolean"
          },
          "is-disposable": {
            "description": "True if this address is a disposable, temporary or darknet related email address",
            "type": "boolean"
          },
          "is-freemail": {
            "description": "True if this address is from a free email provider",
            "type": "boolean"
          },
          "is-personal": {
            "description": "True if this address likely belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
            "type": "boolean"
          },
          "mx-ip": {
            "description": "The first resolved IP address of the primary MX server, may be empty if there are domain errors present",
            "type": "string"
          },
          "provider": {
            "description": "The domain name of the email hosting provider",
            "type": "string"
          },
          "smtp-response": {
            "description": "The raw SMTP response message received during verification",
            "type": "string"
          },
          "smtp-status": {
            "description": "The SMTP username verification status for this address: <br> <ul> <li>ok - verification was successful, this is a real username that can receive mail</li> <li>absent - this username or domain is not registered with the email service provider</li> <li>invalid - not a valid email address, check the 'domain-status' field for specific details</li> <li>unresponsive - the mail servers for this domain have repeatedly timed-out or refused multiple connection attempts</li> <li>unknown - sorry, we could not reliably determine the status of this username</li> </ul>",
            "type": "string"
          },
          "syntax-error": {
            "description": "True if this address has any syntax errors or is not in RFC compliant formatting",
            "type": "boolean"
          },
          "typos-fixed": {
            "description": "True if any typos have been fixed. The 'fix-typos' option must be enabled for this to work",
            "type": "boolean"
          },
          "valid": {
            "description": "Is this a valid email address. To be valid an email must have: correct syntax, a registered and active domain name, correct DNS records and operational MX servers",
            "type": "boolean"
          },
          "verified": {
            "description": "True if this email address has passed SMTP username verification. Check the 'smtp-status' and 'domain-status' fields for specific verification details",
            "type": "boolean"
          }
        },
        "required": [
          "valid",
          "verified",
          "email",
          "typos-fixed",
          "syntax-error",
          "domain-error",
          "domain",
          "provider",
          "is-freemail",
          "is-disposable",
          "is-personal",
          "smtp-status",
          "smtp-response",
          "is-catch-all",
          "is-deferred",
          "mx-ip",
          "domain-status"
        ],
        "title": "EmailVerifyResponse",
        "type": "object"
      },
      "ExecResult": {
        "description": "Structure of exec-results",
        "properties": {
          "result": {
            "description": "The result of the executed JavaScript statement. Will be empty if the statement returned nothing",
            "type": "string"
          },
          "statement": {
            "description": "The JavaScript statement that was executed",
            "type": "string"
          }
        },
        "required": [
          "statement",
          "result"
        ],
        "title": "ExecResult",
        "type": "object"
      },
      "GeocodeAddressResponse": {
        "description": "Structure of geocode-address",
        "example": {
          "found": 1,
          "locations": [
            {
              "address": "1 Molesworth Street, Pipitea, Wellington 6140, New Zealand",
              "address-components": {
                "city": "Wellington",
                "country": "New Zealand",
                "county": "Wellington City",
                "house-number": "1",
                "postal-code": "6140",
                "road": "Molesworth Street",
                "state": "Wellington",
                "suburb": "Pipitea"
              },
              "city": "Wellington",
              "country": "New Zealand",
              "country-code": "NZ",
              "country-code3": "NZL",
              "currency-code": "NZD",
              "language-code": "en",
              "latitude": -41.2775847,
              "location-tags": [
                "house"
              ],
              "location-type": "address",
              "longitude": 174.7775229,
              "postal-address": "1 Molesworth Street\nPipitea\nWellington 6140\nNew Zealand",
              "postal-code": "6140",
              "region-code": "WGN",
              "state": "Wellington",
              "timezone": {
                "abbr": "NZDT",
                "date": "2025-03-11",
                "id": "Pacific/Auckland",
                "name": "New Zealand Daylight Time",
                "offset": "+13:00",
                "time": "11:15:11.904568"
              }
            }
          ]
        },
        "properties": {
          "found": {
            "description": "The number of possible matching locations found",
            "format": "int32",
            "type": "integer"
          },
          "locations": {
            "description": "Array of matching location objects",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "type": "array"
          }
        },
        "required": [
          "found",
          "locations"
        ],
        "title": "GeocodeAddressResponse",
        "type": "object"
      },
      "GeocodeReverseResponse": {
        "description": "Structure of geocode-reverse",
        "example": {
          "address": "1 Molesworth Street, Pipitea, Wellington 6140, New Zealand",
          "address-components": {
            "city": "Wellington",
            "country": "New Zealand",
            "county": "Wellington City",
            "house-number": "1",
            "postal-code": "6140",
            "road": "Molesworth Street",
            "state": "Wellington",
            "suburb": "Pipitea"
          },
          "city": "Wellington",
          "country": "New Zealand",
          "country-code": "NZ",
          "country-code3": "NZL",
          "currency-code": "NZD",
          "found": true,
          "language-code": "en",
          "latitude": -41.2775847,
          "location-tags": [
            "house"
          ],
          "location-type": "address",
          "longitude": 174.7775229,
          "postal-address": "1 Molesworth Street\nPipitea\nWellington 6140\nNew Zealand",
          "postal-code": "6140",
          "region-code": "WGN",
          "state": "Wellington",
          "timezone": {
            "abbr": "NZDT",
            "date": "2025-03-11",
            "id": "Pacific/Auckland",
            "name": "New Zealand Daylight Time",
            "offset": "+13:00",
            "time": "11:15:09.73809"
          }
        },
        "properties": {
          "address": {
            "description": "The complete address using comma-separated values",
            "type": "string"
          },
          "address-components": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The components which make up the address such as road, city, state, etc",
            "type": "object"
          },
          "city": {
            "description": "The city of the location",
            "type": "string"
          },
          "country": {
            "description": "The country of the location",
            "type": "string"
          },
          "country-code": {
            "description": "The ISO 2-letter country code of the location",
            "type": "string"
          },
          "country-code3": {
            "description": "The ISO 3-letter country code of the location",
            "type": "string"
          },
          "currency-code": {
            "description": "ISO 4217 currency code associated with the country",
            "type": "string"
          },
          "found": {
            "description": "True if these coordinates map to a real location",
            "type": "boolean"
          },
          "language-code": {
            "description": "The ISO 2-letter language code for the official language spoken in the country",
            "type": "string"
          },
          "latitude": {
            "description": "The location latitude",
            "format": "double",
            "type": "number"
          },
          "location-tags": {
            "description": "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "location-type": {
            "description": "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
            "type": "string"
          },
          "longitude": {
            "description": "The location longitude",
            "format": "double",
            "type": "number"
          },
          "postal-address": {
            "description": "The formatted address using local standards suitable for printing on an envelope",
            "type": "string"
          },
          "postal-code": {
            "description": "The postal code for the location",
            "type": "string"
          },
          "region-code": {
            "description": "The ISO 3166-2 region code for the location",
            "type": "string"
          },
          "state": {
            "description": "The state of the location",
            "type": "string"
          },
          "timezone": {
            "$ref": "#/components/schemas/Timezone"
          }
        },
        "required": [
          "country",
          "found",
          "address",
          "city",
          "country-code",
          "postal-code",
          "state",
          "address-components",
          "country-code3",
          "currency-code",
          "location-type",
          "location-tags",
          "latitude",
          "longitude",
          "timezone",
          "region-code",
          "postal-address",
          "language-code"
        ],
        "title": "GeocodeReverseResponse",
        "type": "object"
      },
      "HLRLookupResponse": {
        "description": "Structure of hlr-lookup",
        "example": {
          "country": "United States",
          "country-code": "US",
          "country-code3": "USA",
          "currency-code": "USD",
          "current-network": "Sinch Voice",
          "hlr-status": "voip",
          "hlr-valid": false,
          "imsi": "",
          "international-calling-code": "1",
          "international-number": "+12106100045",
          "is-mobile": false,
          "is-ported": true,
          "is-roaming": false,
          "local-number": "(210) 610-0045",
          "location": "San Antonio, TX",
          "mcc": "",
          "mnc": "",
          "msc": "LANDLINE",
          "msin": "",
          "network-tags": "NSR-10X-Port/1",
          "number-type": "voip",
          "number-valid": true,
          "origin-network": "BANDWIDTH.COM",
          "ported-network": "Sinch Voice",
          "roaming-country-code": ""
        },
        "properties": {
          "country": {
            "description": "The phone number country",
            "type": "string"
          },
          "country-code": {
            "description": "The number location as an ISO 2-letter country code",
            "type": "string"
          },
          "country-code3": {
            "description": "The number location as an ISO 3-letter country code",
            "type": "string"
          },
          "currency-code": {
            "description": "ISO 4217 currency code associated with the country",
            "type": "string"
          },
          "current-network": {
            "description": "The currently used network/carrier name",
            "type": "string"
          },
          "hlr-status": {
            "description": "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
            "type": "string"
          },
          "hlr-valid": {
            "description": "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
            "type": "boolean"
          },
          "imsi": {
            "description": "The mobile IMSI number (International Mobile Subscriber Identity)",
            "type": "string"
          },
          "international-calling-code": {
            "description": "The international calling code",
            "type": "string"
          },
          "international-number": {
            "description": "The number represented in full international format",
            "type": "string"
          },
          "is-mobile": {
            "description": "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
            "type": "boolean"
          },
          "is-ported": {
            "description": "Has this number been ported to another network",
            "type": "boolean"
          },
          "is-roaming": {
            "description": "Is this number currently roaming from its origin country",
            "type": "boolean"
          },
          "local-number": {
            "description": "The number represented in local dialing format",
            "type": "string"
          },
          "location": {
            "description": "The number location. Could be a city, region or country depending on the type of number",
            "type": "string"
          },
          "mcc": {
            "description": "The mobile MCC number (Mobile Country Code)",
            "type": "string"
          },
          "mnc": {
            "description": "The mobile MNC number (Mobile Network Code)",
            "type": "string"
          },
          "msc": {
            "description": "The mobile MSC number (Mobile Switching Center)",
            "type": "string"
          },
          "msin": {
            "description": "The mobile MSIN number (Mobile Subscription Identification Number)",
            "type": "string"
          },
          "network-tags": {
            "description": "Contains any additional details about the current network such as former network names and mobile technology utilized",
            "type": "string"
          },
          "number-type": {
            "description": "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
            "type": "string"
          },
          "number-valid": {
            "description": "True if this a valid phone number",
            "type": "boolean"
          },
          "origin-network": {
            "description": "The origin network/carrier name",
            "type": "string"
          },
          "ported-network": {
            "description": "The ported to network/carrier name (only set if the number has been ported)",
            "type": "string"
          },
          "roaming-country-code": {
            "description": "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
            "type": "string"
          }
        },
        "required": [
          "number-valid",
          "international-calling-code",
          "mnc",
          "number-type",
          "hlr-valid",
          "hlr-status",
          "ported-network",
          "imsi",
          "mcc",
          "international-number",
          "local-number",
          "country-code",
          "is-ported",
          "msin",
          "location",
          "origin-network",
          "is-mobile",
          "is-roaming",
          "country",
          "country-code3",
          "currency-code",
          "roaming-country-code",
          "msc",
          "current-network",
          "network-tags"
        ],
        "title": "HLRLookupResponse",
        "type": "object"
      },
      "HTMLElement": {
        "description": "Structure of elements",
        "properties": {
          "class": {
            "description": "The 'class' attribute of the element",
            "type": "string"
          },
          "href": {
            "description": "The 'href' attribute of the element",
            "type": "string"
          },
          "html": {
            "description": "The raw HTML of the element",
            "type": "string"
          },
          "id": {
            "description": "The 'id' attribute of the element",
            "type": "string"
          },
          "text": {
            "description": "The plain-text content of the element with normalized whitespace",
            "type": "string"
          }
        },
        "required": [
          "class",
          "href",
          "html",
          "id",
          "text"
        ],
        "title": "HTMLElement",
        "type": "object"
      },
      "HostReputationResponse": {
        "description": "Structure of host-reputation",
        "example": {
          "host": "neutrinoapi.com",
          "is-listed": false,
          "list-count": 0,
          "lists": [
            {
              "is-listed": false,
              "list-host": "uribl.zeustracker.abuse.ch",
              "list-name": "abuse.ch ZeuS Tracker Domain",
              "list-rating": 3,
              "response-time": 233,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "uribl.abuse.ro",
              "list-name": "abuse.ro URI RBL",
              "list-rating": 3,
              "response-time": 309,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "dblack.mail.abusix.zone",
              "list-name": "Abusix Domain Spam",
              "list-rating": 2,
              "response-time": 38,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "bsb.empty.us",
              "list-name": "Blog Spam Blocklist (empty.us)",
              "list-rating": 3,
              "response-time": 135,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "bsb.spamlookup.net",
              "list-name": "Blog Spam Blocklist (spamlookup.net)",
              "list-rating": 3,
              "response-time": 23,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "bl.fmb.la",
              "list-name": "fmb.la",
              "list-rating": 3,
              "response-time": 256,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "dbl.nordspam.com",
              "list-name": "NordSpam Domain Blacklist",
              "list-rating": 2,
              "response-time": 17,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "ubl.nszones.com",
              "list-name": "nsZones.com SURBL",
              "list-rating": 3,
              "response-time": 160,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "rhsbl.rymsho.ru",
              "list-name": "Rymsho's RHSBL",
              "list-rating": 3,
              "response-time": 42,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "public.sarbl.org",
              "list-name": "SARBL",
              "list-rating": 2,
              "response-time": 201,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "rhsbl.scientificspam.net",
              "list-name": "Scientific Spam",
              "list-rating": 2,
              "response-time": 21,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "nomail.rhsbl.sorbs.net",
              "list-name": "SORBS Domain names indicating no email sender",
              "list-rating": 2,
              "response-time": 112,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "badconf.rhsbl.sorbs.net",
              "list-name": "SORBS Domain names pointing to bad addresses",
              "list-rating": 2,
              "response-time": 108,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "fresh.spameatingmonkey.net",
              "list-name": "Spam Eating Monkey SEM-FRESH",
              "list-rating": 2,
              "response-time": 131,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "fresh10.spameatingmonkey.net",
              "list-name": "Spam Eating Monkey SEM-FRESH10",
              "list-rating": 2,
              "response-time": 136,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "fresh15.spameatingmonkey.net",
              "list-name": "Spam Eating Monkey SEM-FRESH15",
              "list-rating": 2,
              "response-time": 131,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "uribl.spameatingmonkey.net",
              "list-name": "Spam Eating Monkey SEM-URI",
              "list-rating": 2,
              "response-time": 130,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "urired.spameatingmonkey.net",
              "list-name": "Spam Eating Monkey SEM-URIRED",
              "list-rating": 2,
              "response-time": 131,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "dbl.spamhaus.org",
              "list-name": "Spamhaus DBL Domain Block List",
              "list-rating": 1,
              "response-time": 58,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "dbl.suomispam.net",
              "list-name": "Suomispam Domain Blacklist",
              "list-rating": 2,
              "response-time": 24,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "multi.surbl.org",
              "list-name": "SURBL multi (Combined SURBL list)",
              "list-rating": 1,
              "response-time": 106,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "uribl.swinog.ch",
              "list-name": "Swinog URIBL",
              "list-rating": 2,
              "response-time": 55,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "dob.sibl.support-intelligence.net",
              "list-name": "The Day Old Bread List (aka DOB)",
              "list-rating": 3,
              "response-time": 168,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "black.uribl.com",
              "list-name": "URIBL black",
              "list-rating": 1,
              "response-time": 261,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "uri.blacklist.woody.ch",
              "list-name": "Woody's SMTP Blacklist URIBL",
              "list-rating": 3,
              "response-time": 3229,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "rhsbl.zapbl.net",
              "list-name": "ZapBL RHSBL",
              "list-rating": 3,
              "response-time": 36,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "zebl.zoneedit.com",
              "list-name": "ZoneEdit combined RHSBL",
              "list-rating": 3,
              "response-time": 129,
              "return-code": "",
              "txt-record": ""
            },
            {
              "is-listed": false,
              "list-host": "ban.zebl.zoneedit.com",
              "list-name": "ZoneEdit deny DNS services domains",
              "list-rating": 3,
              "response-time": 129,
              "return-code": "",
              "txt-record": ""
            }
          ]
        },
        "properties": {
          "host": {
            "description": "The IP address or host name",
            "type": "string"
          },
          "is-listed": {
            "description": "Is this host blacklisted",
            "type": "boolean"
          },
          "list-count": {
            "description": "The number of DNSBLs the host is listed on",
            "format": "int32",
            "type": "integer"
          },
          "lists": {
            "description": "Array of objects for each DNSBL checked",
            "items": {
              "$ref": "#/components/schemas/Blacklist"
            },
            "type": "array"
          }
        },
        "required": [
          "is-listed",
          "lists",
          "list-count",
          "host"
        ],
        "title": "HostReputationResponse",
        "type": "object"
      },
      "IPBlocklistResponse": {
        "description": "Structure of ip-blocklist",
        "example": {
          "blocklists": [
            "bot",
            "exploit-bot",
            "proxy",
            "spam-bot",
            "tor",
            "vpn"
          ],
          "cidr": "104.244.72.0/24",
          "ip": "104.244.72.115",
          "is-bot": true,
          "is-dshield": false,
          "is-exploit-bot": true,
          "is-hijacked": false,
          "is-listed": true,
          "is-malware": false,
          "is-proxy": true,
          "is-spam-bot": true,
          "is-spider": false,
          "is-spyware": false,
          "is-tor": true,
          "is-vpn": true,
          "last-seen": 1741406274,
          "list-count": 29,
          "sensors": [
            {
              "blocklist": "tor",
              "description": "Tor router",
              "id": 1
            },
            {
              "blocklist": "bot",
              "description": "CINS army list",
              "id": 6
            },
            {
              "blocklist": "exploit-bot",
              "description": "Vulnerability scanning or DDoS bot",
              "id": 17
            },
            {
              "blocklist": "spam-bot",
              "description": "Comment and forum spammers",
              "id": 19
            },
            {
              "blocklist": "bot",
              "description": "Brute force bot (SSH, SMTP, IMAP or HTTP)",
              "id": 20
            },
            {
              "blocklist": "bot",
              "description": "Hacking or attack bot",
              "id": 22
            },
            {
              "blocklist": "tor",
              "description": "Tor node",
              "id": 32
            },
            {
              "blocklist": "exploit-bot",
              "description": "Exploit attacks against website",
              "id": 33
            },
            {
              "blocklist": "spam-bot",
              "description": "HTTP form spam bot",
              "id": 34
            },
            {
              "blocklist": "tor",
              "description": "Tor exit node",
              "id": 38
            },
            {
              "blocklist": "bot",
              "description": "Web server attack source",
              "id": 39
            },
            {
              "blocklist": "spam-bot",
              "description": "Harvester, spam or comment spam host",
              "id": 50
            },
            {
              "blocklist": "proxy",
              "description": "Public HTTP proxy",
              "id": 53
            },
            {
              "blocklist": "vpn",
              "description": "VPN service hosting",
              "id": 54
            },
            {
              "blocklist": "tor",
              "description": "Tor exit node",
              "id": 55
            },
            {
              "blocklist": "spam-bot",
              "description": "Forum, blog or other website spammer",
              "id": 58
            },
            {
              "blocklist": "bot",
              "description": "IP connected to a known honeypot",
              "id": 59
            },
            {
              "blocklist": "bot",
              "description": "Brute force bot (SSH)",
              "id": 60
            },
            {
              "blocklist": "bot",
              "description": "Brute force bot (SMTP)",
              "id": 61
            },
            {
              "blocklist": "bot",
              "description": "Brute force bot (Apache HTTP)",
              "id": 62
            },
            {
              "blocklist": "bot",
              "description": "Brute force bot (IMAP)",
              "id": 63
            },
            {
              "blocklist": "bot",
              "description": "Brute force bot (Website Logins)",
              "id": 66
            },
            {
              "blocklist": "exploit-bot",
              "description": "Hacking, exploit or other attack source",
              "id": 67
            },
            {
              "blocklist": "bot",
              "description": "Scanning or brute force attacks (last 30 days)",
              "id": 68
            },
            {
              "blocklist": "bot",
              "description": "Hacked IP or spam source",
              "id": 69
            },
            {
              "blocklist": "exploit-bot",
              "description": "HTTP attack source",
              "id": 73
            },
            {
              "blocklist": "spam-bot",
              "description": "Email/SMTP attack source",
              "id": 74
            },
            {
              "blocklist": "bot",
              "description": "SSH attack source",
              "id": 75
            },
            {
              "blocklist": "bot",
              "description": "Abuse source (hacking or spam)",
              "id": 76
            }
          ]
        },
        "properties": {
          "blocklists": {
            "description": "An array of strings indicating which blocklist categories this IP is listed on. Current possible values are: <br> <ul> <li>tor - IP is a Tor node or running a Tor related service</li> <li>proxy - IP has been detected as an anonymous web proxy or HTTP proxy</li> <li>vpn - IP belongs to a public VPN provider</li> <li>bot - IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers</li> <li>spam-bot - IP address is hosting a spam bot, comment spamming or any other spamming type software</li> <li>exploit-bot - IP is hosting an exploit finding bot or is running exploit scanning software</li> <li>hijacked - IP is part of a hijacked netblock or a netblock controlled by a criminal organization</li> <li>malware - IP is currently involved in distributing or is running malware</li> <li>spyware - IP is currently involved in distributing or is running spyware</li> <li>spider - IP is running a hostile web spider / web crawler</li> <li>dshield - IP has been flagged as a significant attack source by DShield (dshield.org)</li> </ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cidr": {
            "description": "The CIDR address for this listing (only set if the IP is listed)",
            "type": "string"
          },
          "ip": {
            "description": "The IP address",
            "type": "string"
          },
          "is-bot": {
            "description": "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
            "type": "boolean"
          },
          "is-dshield": {
            "description": "IP has been flagged as a significant attack source by DShield (dshield.org)",
            "type": "boolean"
          },
          "is-exploit-bot": {
            "description": "IP is hosting an exploit finding bot or is running exploit scanning software",
            "type": "boolean"
          },
          "is-hijacked": {
            "description": "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
            "type": "boolean"
          },
          "is-listed": {
            "description": "Is this IP on a blocklist",
            "type": "boolean"
          },
          "is-malware": {
            "description": "IP is involved in distributing or is running malware",
            "type": "boolean"
          },
          "is-proxy": {
            "description": "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
            "type": "boolean"
          },
          "is-spam-bot": {
            "description": "IP address is hosting a spam bot, comment spamming or any other spamming type software",
            "type": "boolean"
          },
          "is-spider": {
            "description": "IP is running a hostile web spider / web crawler",
            "type": "boolean"
          },
          "is-spyware": {
            "description": "IP is involved in distributing or is running spyware",
            "type": "boolean"
          },
          "is-tor": {
            "description": "IP is a Tor node or running a Tor related service",
            "type": "boolean"
          },
          "is-vpn": {
            "description": "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
            "type": "boolean"
          },
          "last-seen": {
            "description": "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
            "format": "int32",
            "type": "integer"
          },
          "list-count": {
            "description": "The number of blocklists the IP is listed on",
            "format": "int32",
            "type": "integer"
          },
          "sensors": {
            "description": "An array of objects containing details on which specific sensors detected the IP",
            "items": {
              "$ref": "#/components/schemas/BlocklistSensor"
            },
            "type": "array"
          }
        },
        "required": [
          "ip",
          "is-bot",
          "is-exploit-bot",
          "is-malware",
          "is-spider",
          "is-dshield",
          "list-count",
          "is-proxy",
          "is-hijacked",
          "is-tor",
          "is-spyware",
          "is-spam-bot",
          "is-listed",
          "is-vpn",
          "last-seen",
          "blocklists",
          "sensors",
          "cidr"
        ],
        "title": "IPBlocklistResponse",
        "type": "object"
      },
      "IPInfoResponse": {
        "description": "Structure of ip-info",
        "example": {
          "city": "Brisbane",
          "continent-code": "OC",
          "country": "Australia",
          "country-code": "AU",
          "country-code3": "AUS",
          "currency-code": "AUD",
          "host-domain": "",
          "hostname": "",
          "ip": "1.1.1.1",
          "is-bogon": false,
          "is-v4-mapped": false,
          "is-v6": false,
          "language-code": "en",
          "latitude": -27.46754,
          "longitude": 153.02809,
          "region": "Queensland",
          "region-code": "QLD",
          "timezone": {
            "abbr": "AEST",
            "date": "2025-03-11",
            "id": "Australia/Brisbane",
            "name": "Australian Eastern Standard Time",
            "offset": "+10:00",
            "time": "08:15:09.007568"
          },
          "valid": true
        },
        "properties": {
          "city": {
            "description": "Name of the city (if detectable)",
            "type": "string"
          },
          "continent-code": {
            "description": "ISO 2-letter continent code",
            "type": "string"
          },
          "country": {
            "description": "Full country name",
            "type": "string"
          },
          "country-code": {
            "description": "ISO 2-letter country code",
            "type": "string"
          },
          "country-code3": {
            "description": "ISO 3-letter country code",
            "type": "string"
          },
          "currency-code": {
            "description": "ISO 4217 currency code associated with the country",
            "type": "string"
          },
          "host-domain": {
            "description": "The IPs host domain (only set if reverse-lookup has been used)",
            "type": "string"
          },
          "hostname": {
            "description": "The IPs full hostname (only set if reverse-lookup has been used)",
            "type": "string"
          },
          "ip": {
            "description": "The IPv4 or IPv6 address returned",
            "type": "string"
          },
          "is-bogon": {
            "description": "True if this is a bogon IP address such as a private network, local network or reserved address",
            "type": "boolean"
          },
          "is-v4-mapped": {
            "description": "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
            "type": "boolean"
          },
          "is-v6": {
            "description": "True if this is a IPv6 address. False if IPv4",
            "type": "boolean"
          },
          "language-code": {
            "description": "The ISO 2-letter language code for the official language spoken in the country",
            "type": "string"
          },
          "latitude": {
            "description": "Location latitude",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "Location longitude",
            "format": "double",
            "type": "number"
          },
          "region": {
            "description": "Name of the region (if detectable)",
            "type": "string"
          },
          "region-code": {
            "description": "ISO 3166-2 region code (if detectable)",
            "type": "string"
          },
          "timezone": {
            "$ref": "#/components/schemas/Timezone"
          },
          "valid": {
            "description": "True if this is a valid IPv4 or IPv6 address",
            "type": "boolean"
          }
        },
        "required": [
          "valid",
          "country",
          "hostname",
          "city",
          "country-code",
          "latitude",
          "region",
          "longitude",
          "continent-code",
          "ip",
          "country-code3",
          "currency-code",
          "host-domain",
          "timezone",
          "is-v6",
          "is-v4-mapped",
          "is-bogon",
          "region-code",
          "language-code"
        ],
        "title": "IPInfoResponse",
        "type": "object"
      },
      "IPProbeResponse": {
        "description": "Structure of ip-probe",
        "example": {
          "as-age": 33,
          "as-cidr": "194.233.98.0/24",
          "as-country-code": "DE",
          "as-country-code3": "DEU",
          "as-description": "TEFINCOMSA-AS-AP TEFINCOM S.A., PA, Packethub S.A",
          "as-domains": [
            "nordvpn.com",
            "packethub.tech",
            "packethub.net",
            "terratransit.de",
            "dedipath.com"
          ],
          "asn": "136787",
          "city": "Atlanta",
          "continent-code": "NA",
          "country": "United States of America",
          "country-code": "US",
          "country-code3": "USA",
          "currency-code": "USD",
          "host-domain": "",
          "hostname": "",
          "ip": "194.233.98.38",
          "is-bogon": false,
          "is-hosting": false,
          "is-isp": false,
          "is-proxy": false,
          "is-v4-mapped": false,
          "is-v6": false,
          "is-vpn": true,
          "provider-description": "The best online VPN service for speed NordVPN: Online VPN service that encrypts your internet traffic and hides your IP with physical location. Upgrade your privacy and security now",
          "provider-domain": "nordvpn.com",
          "provider-type": "vpn",
          "provider-website": "https://nordvpn.com/",
          "region": "Georgia",
          "region-code": "GA",
          "valid": true,
          "vpn-domain": "nordvpn.com"
        },
        "properties": {
          "as-age": {
            "description": "The age of the autonomous system (AS) in number of years since registration",
            "format": "int32",
            "type": "integer"
          },
          "as-cidr": {
            "description": "The autonomous system (AS) CIDR range",
            "type": "string"
          },
          "as-country-code": {
            "description": "The autonomous system (AS) ISO 2-letter country code",
            "type": "string"
          },
          "as-country-code3": {
            "description": "The autonomous system (AS) ISO 3-letter country code",
            "type": "string"
          },
          "as-description": {
            "description": "The autonomous system (AS) description / company name",
            "type": "string"
          },
          "as-domains": {
            "description": "Array of all the domains associated with the autonomous system (AS)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "asn": {
            "description": "The autonomous system (AS) number",
            "type": "string"
          },
          "city": {
            "description": "Full city name (if detectable)",
            "type": "string"
          },
          "continent-code": {
            "description": "ISO 2-letter continent code",
            "type": "string"
          },
          "country": {
            "description": "Full country name",
            "type": "string"
          },
          "country-code": {
            "description": "ISO 2-letter country code",
            "type": "string"
          },
          "country-code3": {
            "description": "ISO 3-letter country code",
            "type": "string"
          },
          "currency-code": {
            "description": "ISO 4217 currency code associated with the country",
            "type": "string"
          },
          "host-domain": {
            "description": "The IPs host domain",
            "type": "string"
          },
          "hostname": {
            "description": "The IPs full hostname (PTR)",
            "type": "string"
          },
          "ip": {
            "description": "The IPv4 or IPv6 address returned",
            "type": "string"
          },
          "is-bogon": {
            "description": "True if this is a bogon IP address such as a private network, local network or reserved address",
            "type": "boolean"
          },
          "is-hosting": {
            "description": "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
            "type": "boolean"
          },
          "is-isp": {
            "description": "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
            "type": "boolean"
          },
          "is-proxy": {
            "description": "True if this IP is a proxy",
            "type": "boolean"
          },
          "is-v4-mapped": {
            "description": "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
            "type": "boolean"
          },
          "is-v6": {
            "description": "True if this is a IPv6 address. False if IPv4",
            "type": "boolean"
          },
          "is-vpn": {
            "description": "True if this IP ia a VPN",
            "type": "boolean"
          },
          "provider-description": {
            "description": "A description of the provider (usually extracted from the providers website)",
            "type": "string"
          },
          "provider-domain": {
            "description": "The domain name of the provider",
            "type": "string"
          },
          "provider-type": {
            "description": "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
            "type": "string"
          },
          "provider-website": {
            "description": "The website URL for the provider",
            "type": "string"
          },
          "region": {
            "description": "Full region name (if detectable)",
            "type": "string"
          },
          "region-code": {
            "description": "ISO 3166-2 region code (if detectable)",
            "type": "string"
          },
          "valid": {
            "description": "True if this is a valid IPv4 or IPv6 address",
            "type": "boolean"
          },
          "vpn-domain": {
            "description": "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
            "type": "string"
          }
        },
        "required": [
          "valid",
          "country",
          "provider-type",
          "country-code",
          "hostname",
          "provider-domain",
          "city",
          "provider-website",
          "ip",
          "region",
          "provider-description",
          "continent-code",
          "is-hosting",
          "is-isp",
          "country-code3",
          "currency-code",
          "is-vpn",
          "is-proxy",
          "asn",
          "as-cidr",
          "as-country-code",
          "as-country-code3",
          "as-domains",
          "as-description",
          "as-age",
          "host-domain",
          "vpn-domain",
          "is-v6",
          "is-v4-mapped",
          "is-bogon",
          "region-code"
        ],
        "title": "IPProbeResponse",
        "type": "object"
      },
      "Location": {
        "description": "Structure of locations",
        "properties": {
          "address": {
            "description": "The complete address using comma-separated values",
            "type": "string"
          },
          "address-components": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The components which make up the address such as road, city, state, etc",
            "type": "object"
          },
          "city": {
            "description": "The city of the location",
            "type": "string"
          },
          "country": {
            "description": "The country of the location",
            "type": "string"
          },
          "country-code": {
            "description": "The ISO 2-letter country code of the location",
            "type": "string"
          },
          "country-code3": {
            "description": "The ISO 3-letter country code of the location",
            "type": "string"
          },
          "currency-code": {
            "description": "ISO 4217 currency code associated with the country",
            "type": "string"
          },
          "language-code": {
            "description": "The ISO 2-letter language code for the official language spoken in the country",
            "type": "string"
          },
          "latitude": {
            "description": "The location latitude",
            "format": "double",
            "type": "number"
          },
          "location-tags": {
            "description": "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "location-type": {
            "description": "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
            "type": "string"
          },
          "longitude": {
            "description": "The location longitude",
            "format": "double",
            "type": "number"
          },
          "postal-address": {
            "description": "The formatted address using local standards suitable for printing on an envelope",
            "type": "string"
          },
          "postal-code": {
            "description": "The postal code for the location",
            "type": "string"
          },
          "region-code": {
            "description": "The ISO 3166-2 region code for the location",
            "type": "string"
          },
          "state": {
            "description": "The state of the location",
            "type": "string"
          },
          "timezone": {
            "$ref": "#/components/schemas/Timezone"
          }
        },
        "required": [
          "country",
          "address",
          "city",
          "country-code",
          "country-code3",
          "latitude",
          "postal-code",
          "longitude",
          "state",
          "address-components",
          "currency-code",
          "location-type",
          "location-tags",
          "timezone",
          "region-code",
          "postal-address",
          "language-code"
        ],
        "title": "Location",
        "type": "object"
      },
      "PhonePlaybackResponse": {
        "description": "Structure of phone-playback",
        "properties": {
          "calling": {
            "description": "True if the call is being made now",
            "type": "boolean"
          },
          "number-valid": {
            "description": "True if this a valid phone number",
            "type": "boolean"
          }
        },
        "required": [
          "calling",
          "number-valid"
        ],
        "title": "PhonePlaybackResponse",
        "type": "object"
      },
      "PhoneValidateResponse": {
        "description": "Structure of phone-validate",
        "example": {
          "country": "New Zealand",
          "country-code": "NZ",
          "country-code3": "NZL",
          "currency-code": "NZD",
          "international-calling-code": "64",
          "international-number": "+6495552000",
          "is-mobile": false,
          "local-number": "09 555 2000",
          "location": "Auckland",
          "prefix-network": "",
          "type": "fixed-line",
          "valid": true
        },
        "properties": {
          "country": {
            "description": "The phone number country",
            "type": "string"
          },
          "country-code": {
            "description": "The phone number country as an ISO 2-letter country code",
            "type": "string"
          },
          "country-code3": {
            "description": "The phone number country as an ISO 3-letter country code",
            "type": "string"
          },
          "currency-code": {
            "description": "ISO 4217 currency code associated with the country",
            "type": "string"
          },
          "international-calling-code": {
            "description": "The international calling code",
            "type": "string"
          },
          "international-number": {
            "description": "The number represented in full international format (E.164)",
            "type": "string"
          },
          "is-mobile": {
            "description": "True if this is a mobile number. If the number type is unknown this value will be false",
            "type": "boolean"
          },
          "local-number": {
            "description": "The number represented in local dialing format",
            "type": "string"
          },
          "location": {
            "description": "The phone number location. Could be the city, region or country depending on the type of number",
            "type": "string"
          },
          "prefix-network": {
            "description": "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
            "type": "string"
          },
          "type": {
            "description": "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
            "type": "string"
          },
          "valid": {
            "description": "Is this a valid phone number",
            "type": "boolean"
          }
        },
        "required": [
          "valid",
          "international-calling-code",
          "country-code",
          "location",
          "is-mobile",
          "type",
          "international-number",
          "local-number",
          "country",
          "country-code3",
          "currency-code",
          "prefix-network"
        ],
        "title": "PhoneValidateResponse",
        "type": "object"
      },
      "PhoneVerifyResponse": {
        "description": "Structure of phone-verify",
        "properties": {
          "calling": {
            "description": "True if the call is being made now",
            "type": "boolean"
          },
          "number-valid": {
            "description": "True if this a valid phone number",
            "type": "boolean"
          },
          "security-code": {
            "description": "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
            "type": "string"
          }
        },
        "required": [
          "number-valid",
          "calling",
          "security-code"
        ],
        "title": "PhoneVerifyResponse",
        "type": "object"
      },
      "SMSVerifyResponse": {
        "description": "Structure of sms-verify",
        "properties": {
          "number-valid": {
            "description": "True if this a valid phone number",
            "type": "boolean"
          },
          "security-code": {
            "description": "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
            "type": "string"
          },
          "sent": {
            "description": "True if the SMS has been sent",
            "type": "boolean"
          }
        },
        "required": [
          "number-valid",
          "security-code",
          "sent"
        ],
        "title": "SMSVerifyResponse",
        "type": "object"
      },
      "Timezone": {
        "description": "Structure of timezone",
        "properties": {
          "abbr": {
            "description": "The time zone abbreviation",
            "example": "EDT",
            "type": "string"
          },
          "date": {
            "description": "The current date at the time zone (ISO 8601 format 'YYYY-MM-DD')",
            "example": "2021-01-01",
            "type": "string"
          },
          "id": {
            "description": "The time zone ID as per the IANA time zone database (tzdata). If empty then no valid timezone was detected",
            "example": "America/New_York",
            "type": "string"
          },
          "name": {
            "description": "The full time zone name",
            "example": "Eastern Daylight Time",
            "type": "string"
          },
          "offset": {
            "description": "The UTC offset for the time zone (ISO 8601 format '\u00b1hh:mm')",
            "type": "string"
          },
          "time": {
            "description": "The current time at the time zone (ISO 8601 format 'hh:mm:ss.sss')",
            "example": "12:30:00.00",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "abbr",
          "date",
          "time",
          "offset"
        ],
        "title": "Timezone",
        "type": "object"
      },
      "UALookupResponse": {
        "description": "Structure of ua-lookup",
        "example": {
          "browser-engine": "Blink",
          "browser-release": "2020",
          "device-brand": "Samsung",
          "device-height-px": 1066,
          "device-model": "Galaxy S21 Ultra 5G",
          "device-model-code": "SM-G9980",
          "device-pixel-ratio": 3,
          "device-ppi": 515,
          "device-price": 1300,
          "device-release": "2021",
          "device-resolution": "1440x3200",
          "device-width-px": 480,
          "is-mobile": true,
          "is-webview": false,
          "name": "Chrome",
          "os": "Android 11",
          "os-family": "Android",
          "os-version": "11",
          "os-version-major": "11",
          "type": "phone",
          "ua": "Mozilla/5.0 (Linux; Android 11; SM-G9980U1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.101 Mobile Safari/537.36",
          "version": "87.0.4280.101",
          "version-major": "87"
        },
        "properties": {
          "browser-engine": {
            "description": "If the client is a web browser which underlying browser engine does it use",
            "type": "string"
          },
          "browser-release": {
            "description": "If the client is a web browser which year was this browser version released",
            "type": "string"
          },
          "device-brand": {
            "description": "The device brand / manufacturer",
            "type": "string"
          },
          "device-height-px": {
            "description": "The device display height in CSS 'px'",
            "format": "double",
            "type": "number"
          },
          "device-model": {
            "description": "The device model",
            "type": "string"
          },
          "device-model-code": {
            "description": "The device model code",
            "type": "string"
          },
          "device-pixel-ratio": {
            "description": "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
            "format": "double",
            "type": "number"
          },
          "device-ppi": {
            "description": "The device display PPI (pixels per inch)",
            "format": "double",
            "type": "number"
          },
          "device-price": {
            "description": "The average device price on release in USD",
            "format": "double",
            "type": "number"
          },
          "device-release": {
            "description": "The year when this device model was released",
            "type": "string"
          },
          "device-resolution": {
            "description": "The device display resolution in physical pixels (e.g. 720x1280)",
            "type": "string"
          },
          "device-width-px": {
            "description": "The device display width in CSS 'px'",
            "format": "double",
            "type": "number"
          },
          "is-mobile": {
            "description": "Is this a mobile device (e.g. a phone or tablet)",
            "type": "boolean"
          },
          "is-webview": {
            "description": "Is this a WebView / embedded software client",
            "type": "boolean"
          },
          "name": {
            "description": "The client software name",
            "type": "string"
          },
          "os": {
            "description": "The full operating system name",
            "type": "string"
          },
          "os-family": {
            "description": "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
            "type": "string"
          },
          "os-version": {
            "description": "The operating system full version",
            "type": "string"
          },
          "os-version-major": {
            "description": "The operating system major version",
            "type": "string"
          },
          "type": {
            "description": "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
            "type": "string"
          },
          "ua": {
            "description": "The user agent string",
            "type": "string"
          },
          "version": {
            "description": "The client software full version",
            "type": "string"
          },
          "version-major": {
            "description": "The client software major version",
            "type": "string"
          }
        },
        "required": [
          "ua",
          "type",
          "name",
          "version",
          "version-major",
          "browser-engine",
          "browser-release",
          "os",
          "os-family",
          "os-version",
          "os-version-major",
          "is-mobile",
          "is-webview",
          "device-brand",
          "device-model",
          "device-model-code",
          "device-release",
          "device-price",
          "device-resolution",
          "device-ppi",
          "device-pixel-ratio",
          "device-width-px",
          "device-height-px"
        ],
        "title": "UALookupResponse",
        "type": "object"
      },
      "URLComponents": {
        "description": "Structure of url-components",
        "properties": {
          "host": {
            "description": "The host of the URL. Will be either a domain name, sub-domain or IP address",
            "type": "string"
          },
          "path": {
            "description": "The path of the URL. This is the part coming after the host and specifies which resource to load",
            "type": "string"
          },
          "port": {
            "description": "The port of the URL. This is usually 443 for HTTPS and 80 for HTTP unless otherwise specified in the URL",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "The protocol of the URL. For a website URL this will be either 'https' or 'http'",
            "type": "string"
          },
          "query": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The query of the URL. Contains a key/value map of any HTTP GET query parameters present in the URL",
            "type": "object"
          },
          "url": {
            "description": "The complete and final URL",
            "type": "string"
          }
        },
        "required": [
          "url",
          "host",
          "protocol",
          "path",
          "port",
          "query"
        ],
        "title": "URLComponents",
        "type": "object"
      },
      "URLInfoResponse": {
        "description": "Structure of url-info",
        "example": {
          "content": "",
          "content-encoding": "gzip",
          "content-size": 100667,
          "content-type": "text/html; charset=UTF-8",
          "http-ok": true,
          "http-redirect": false,
          "http-status": 200,
          "http-status-message": "OK",
          "is-error": false,
          "is-timeout": false,
          "language-code": "en",
          "load-time": 0.22505768,
          "query": {},
          "real": true,
          "server-city": "Kansas City",
          "server-country": "United States of America",
          "server-country-code": "US",
          "server-hostname": "139.243.244.35.bc.googleusercontent.com",
          "server-ip": "35.244.243.139",
          "server-name": "nginx",
          "server-region": "Missouri",
          "title": "Neutrino API - Power tools for Developers",
          "url": "https://www.neutrinoapi.com/",
          "url-path": "/",
          "url-port": 443,
          "url-protocol": "https",
          "valid": true
        },
        "properties": {
          "content": {
            "description": "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
            "type": "string"
          },
          "content-encoding": {
            "description": "The encoding format the URL uses",
            "type": "string"
          },
          "content-size": {
            "description": "The size of the URL content in bytes",
            "format": "int32",
            "type": "integer"
          },
          "content-type": {
            "description": "The content-type this URL serves",
            "type": "string"
          },
          "http-ok": {
            "description": "True if this URL responded with an HTTP OK (200) status",
            "type": "boolean"
          },
          "http-redirect": {
            "description": "True if this URL responded with an HTTP redirect",
            "type": "boolean"
          },
          "http-status": {
            "description": "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
            "format": "int32",
            "type": "integer"
          },
          "http-status-message": {
            "description": "The HTTP status message assoicated with the status code",
            "type": "string"
          },
          "is-error": {
            "description": "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
            "type": "boolean"
          },
          "is-timeout": {
            "description": "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
            "type": "boolean"
          },
          "language-code": {
            "description": "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
            "type": "string"
          },
          "load-time": {
            "description": "The time taken to load the URL content in seconds",
            "format": "double",
            "type": "number"
          },
          "query": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A key-value map of the URL query paramaters",
            "type": "object"
          },
          "real": {
            "description": "Is this URL actually serving real content",
            "type": "boolean"
          },
          "server-city": {
            "description": "The servers IP geo-location: full city name (if detectable)",
            "type": "string"
          },
          "server-country": {
            "description": "The servers IP geo-location: full country name",
            "type": "string"
          },
          "server-country-code": {
            "description": "The servers IP geo-location: ISO 2-letter country code",
            "type": "string"
          },
          "server-hostname": {
            "description": "The servers hostname (PTR record)",
            "type": "string"
          },
          "server-ip": {
            "description": "The IP address of the server hosting this URL",
            "type": "string"
          },
          "server-name": {
            "description": "The name of the server software hosting this URL",
            "type": "string"
          },
          "server-region": {
            "description": "The servers IP geo-location: full region name (if detectable)",
            "type": "string"
          },
          "title": {
            "description": "The document title",
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
            "type": "string"
          },
          "url-path": {
            "description": "The URL path",
            "type": "string"
          },
          "url-port": {
            "description": "The URL port",
            "format": "int32",
            "type": "integer"
          },
          "url-protocol": {
            "description": "The URL protocol, usually http or https",
            "type": "string"
          },
          "valid": {
            "description": "Is this a valid well-formed URL",
            "type": "boolean"
          }
        },
        "required": [
          "http-status-message",
          "server-region",
          "query",
          "server-name",
          "url-port",
          "server-country",
          "real",
          "server-city",
          "url-path",
          "url",
          "valid",
          "server-hostname",
          "load-time",
          "http-ok",
          "content-size",
          "http-status",
          "server-country-code",
          "content-encoding",
          "server-ip",
          "url-protocol",
          "content-type",
          "http-redirect",
          "content",
          "is-timeout",
          "title",
          "language-code",
          "is-error"
        ],
        "title": "URLInfoResponse",
        "type": "object"
      },
      "VerifySecurityCodeResponse": {
        "description": "Structure of verify-security-code",
        "example": {
          "verified": false
        },
        "properties": {
          "verified": {
            "description": "True if the code is valid",
            "type": "boolean"
          }
        },
        "required": [
          "verified"
        ],
        "title": "VerifySecurityCodeResponse",
        "type": "object"
      }
    },
    "securitySchemes": {
      "api-key": {
        "description": "One of your API keys",
        "in": "header",
        "name": "api-key",
        "type": "apiKey"
      },
      "user-id": {
        "description": "Your user ID",
        "in": "header",
        "name": "user-id",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "api-key": [],
      "user-id": []
    }
  ],
  "tags": [
    {
      "description": "APIs for imaging and rendering",
      "name": "Imaging"
    },
    {
      "description": "APIs for live telephony",
      "name": "Telephony"
    },
    {
      "description": "APIs for processing, cleaning and validating data",
      "name": "Data Tools"
    },
    {
      "description": "APIs for security and networking tasks",
      "name": "Security and Networking"
    },
    {
      "description": "APIs for geolocation tasks",
      "name": "Geolocation"
    },
    {
      "description": "APIs for E-commerce tasks",
      "name": "E-commerce"
    },
    {
      "description": "APIs for website and HTML processing",
      "name": "WWW"
    }
  ]
}