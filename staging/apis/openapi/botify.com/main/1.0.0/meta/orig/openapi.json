{
  "openapi": "3.0.0",
  "info": {
    "description": "Botify Saas API",
    "title": "Botify API",
    "version": "1.0.0",
    "x-codegen-settings": {
      "arraySerialization": "CSV",
      "brandLabel": "Botify",
      "collectParameters": true,
      "nodeHttpClient": "NODE_SUPERAGENT",
      "useConstructorsForConfig": false,
      "useControllerPostfix": false,
      "useEnumPostfix": false,
      "useMethodPrefix": false,
      "useModelPostfix": false
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/botify-labs/botify-sdk-js/master/swagger.json"
  },
  "servers": [
    {
      "url": "https://api.botify.com/v1"
    }
  ],
  "paths": {
    "/analyses/{username}/{project_slug}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/Analysis"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Project"
        ],
        "description": "List all analyses for a project",
        "operationId": "getProjectAnalyses",
        "summary": "List all analyses for a project"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisDetail"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Get an Analysis detail",
        "operationId": "getAnalysisSummary",
        "summary": "Get an Analysis detail"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlStatistics"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Return global statistics for an analysis",
        "operationId": "getCrawlStatistics",
        "summary": "Return global statistics for an analysis"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/time": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "max number of elements to retrieve",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Aggregation frequency",
            "in": "query",
            "name": "frequency",
            "required": true,
            "schema": {
              "enum": [
                "1mn",
                "5mn",
                "60mn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlStatisticsTime"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min) for an analysis",
        "operationId": "getCrawlStatisticsByFrequency",
        "summary": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min)"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/urls/{list_type}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "URLs list type (crawled URLs or error URLs)",
          "in": "path",
          "name": "list_type",
          "required": true,
          "schema": {
            "enum": [
              "crawled",
              "errors"
            ],
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "description": "Successful operation",
                    "schema": {
                      "$ref": "#/components/schemas/CrawlStatisticsUrls"
                    }
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)",
        "operationId": "getCrawlStatisticsUrls",
        "summary": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/ganalytics/orphan_urls/{medium}/{source}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Type of traffic, value: 'organic' (from search engine)or 'social' (from a social network)",
          "in": "path",
          "name": "medium",
          "required": true,
          "schema": {
            "enum": [
              "organic",
              "social"
            ],
            "type": "string"
          }
        },
        {
          "description": "Traffic source, value: name of the search engine or social network",
          "in": "path",
          "name": "source",
          "required": true,
          "schema": {
            "enum": [
              "all",
              "aol",
              "ask",
              "baidu",
              "bing",
              "facebook",
              "google",
              "google+",
              "linkedin",
              "naver",
              "pinterest",
              "reddit",
              "tumblr",
              "twitter",
              "yahoo",
              "yandex"
            ],
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/CrawlOrphanURLs"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)",
        "operationId": "getGanalyticsOrphanURLs",
        "summary": "List of Orphan URLs"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/links/percentiles": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinksPercentiles"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Get inlinks percentiles",
        "operationId": "getLinksPercentiles",
        "summary": "Get inlinks percentiles"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/pagerank/lost": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageRankLost"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Lost pagerank",
        "operationId": "getPageRankLost",
        "summary": "Lost pagerank"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/report": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitemapsReport"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc.)",
        "operationId": "getSitemapsReport",
        "summary": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/out_of_config": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Sample list of URLs which were found in your sitemaps but outside of the crawl perimeter defined for the project, for instance domain/subdomain or protocol (HTTP/HTTPS) not allowed in the crawl settings.",
        "operationId": "getSitemapsSamplesOutOfConfig",
        "summary": "Sample list of URLs which were found in your sitemaps but outside of the"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/sitemap_only": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Sample list of URLs which were found in your sitemaps, within the project allowed scope (allowed domains/subdomains/protocols), but not found by the Botify crawler.",
        "operationId": "getSitemapsSamplesSitemapsOnly",
        "summary": "Sample list of URLs which were found in your sitemaps, within the project"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/domains": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/LinksTopDomains"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Top domains",
        "operationId": "getLinksTopDomains",
        "summary": "Top domains"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/subdomains": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/LinksTopDomains"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Top subddomains",
        "operationId": "getLinksTopSubdomains",
        "summary": "Top subddomains"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Analysis context to execute the query",
            "in": "query",
            "name": "area",
            "required": false,
            "schema": {
              "default": "current",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "type": "string"
            }
          },
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/UrlDetail"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Executes a query and returns a paginated response",
        "operationId": "getUrls",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlsQuery"
              }
            }
          }
        },
        "summary": "Executes a query and returns a paginated response"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/aggs": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "area",
            "required": false,
            "schema": {
              "default": "current",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "description": "Successful operation",
                    "schema": {
                      "$ref": "#/components/schemas/UrlsAggs"
                    }
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Query aggregator. It accepts multiple queries",
        "operationId": "getUrlsAggs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlsAggsQueries"
              }
            }
          }
        },
        "summary": "Query aggregator"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/datamodel": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "area",
            "required": false,
            "schema": {
              "default": "current",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlDatamodel"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Gets an Analysis datamodel",
        "operationId": "getUrlsDatamodel",
        "summary": "Gets an Analysis datamodel"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/CsvExportStatus"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "A list of the CSV Exports requests and their current status",
        "operationId": "getUrlsExports",
        "summary": "A list of the CSV Exports requests and their current status"
      },
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "area",
            "required": false,
            "schema": {
              "default": "current",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CsvExportStatus"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Creates a new UrlExport object and starts a task that will export the results into a csv. Returns the model id that manages the task",
        "operationId": "createUrlsExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlsQuery"
              }
            }
          }
        },
        "summary": "Creates a new UrlExport object and starts a task that will export the results into a csv"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export/{url_export_id}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Url Export ID",
          "in": "path",
          "name": "url_export_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CsvExportStatus"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Checks the status of an CSVUrlExportJob object. Returns json object with the status.",
        "operationId": "getUrlsExportStatus",
        "summary": "Checks the status of an CSVUrlExportJob object"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/suggested_filters": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "area",
            "required": false,
            "schema": {
              "default": "current",
              "enum": [
                "current",
                "new"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlsAggsQuery"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Return most frequent segments (= suggested patterns in the previous version) for a Botify Query.",
        "operationId": "getUrlsSuggestedFilters",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlsAggsQuery"
              }
            }
          }
        },
        "summary": "Return most frequent segments (= suggested patterns in the previous version)"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/{url}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "(Urlencoded) Searched URL",
          "in": "path",
          "name": "url",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "comma separated list of fields to return (c.f. URLs Datamodel)",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlDetail"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Analysis"
        ],
        "description": "Gets the detail of an URL for an analysis",
        "operationId": "getUrlDetail",
        "summary": "Gets the detail of an URL for an analysis"
      }
    },
    "/projects/{username}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "User"
        ],
        "description": "List all active projects for the user",
        "operationId": "getUserProjects",
        "summary": "List all active projects for the user"
      }
    },
    "/projects/{username}/{project_slug}/features/url_rewriting/rules_validator": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/URLRewritingRulesSerializer"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Match and replace parts of a URL based on rules passed in POST data.",
        "operationId": "testUrlRewritingRules",
        "summary": "Match and replace parts of a URL based on rules passed in POST data"
      }
    },
    "/projects/{username}/{project_slug}/filters": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "next": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "page": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "previous": {
                      "description": "",
                      "readOnly": true,
                      "type": "string"
                    },
                    "results": {
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/ProjectSavedFilter"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "size": {
                      "description": "",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Project"
        ],
        "description": "List all the project's saved filters (each filter's name, ID and filter value)",
        "operationId": "getSavedFilters",
        "summary": "List all the project's saved filters (each filter's name, ID and filter value)"
      }
    },
    "/projects/{username}/{project_slug}/filters/{identifier}": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Saved Filter's identifier",
          "in": "path",
          "name": "identifier",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSavedFilter"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Retrieves a specific saved filter's name, ID and filter value",
        "operationId": "getSavedFilter",
        "summary": "Retrieves a specific saved filter's name, ID and filter value"
      }
    },
    "/projects/{username}/{project_slug}/urls/aggs": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Analysis context to execute the queries",
            "in": "query",
            "name": "area",
            "required": false,
            "schema": {
              "default": "current",
              "enum": [
                "current",
                "disappeared",
                "new"
              ],
              "type": "string"
            }
          },
          {
            "description": "Last analysis on the trend",
            "in": "query",
            "name": "last_analysis_slug",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Max number of analysis to return",
            "in": "query",
            "name": "nb_analyses",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": "20",
              "minimum": "1",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Default"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPayload"
                }
              }
            },
            "description": "error payload"
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Project Query aggregator. It accepts multiple queries that will be executed on all completed analyses in the project",
        "operationId": "getProjectUrlsAggs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlsAggsQueries"
              }
            }
          }
        },
        "summary": "Project Query aggregator"
      }
    }
  },
  "components": {
    "requestBodies": {
      "UrlsAggsQueries": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UrlsAggsQueries"
            }
          }
        }
      },
      "UrlsQuery": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UrlsQuery"
            }
          }
        }
      }
    },
    "schemas": {
      "Analysis": {
        "properties": {
          "config": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "date_created": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_finished": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_last_modified": {
            "description": "Date of last modified analysis",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_launched": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "features": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "slug": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_done": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_in_queue": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "description": "",
            "readOnly": false
          }
        },
        "required": [
          "user"
        ],
        "type": "object"
      },
      "AnalysisDetail": {
        "properties": {
          "config": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "date_finished": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_last_modified": {
            "description": "Date of last modified analysis",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_launched": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "failures": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "features": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "red_button_domain": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "slug": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_done": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_in_queue": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "description": "",
            "readOnly": false
          }
        },
        "required": [
          "user"
        ],
        "type": "object"
      },
      "CrawlDatamodel": {
        "properties": {
          "fields": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlDatamodelField"
            },
            "readOnly": false,
            "type": "array"
          },
          "groups": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlDatamodelGroup"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "fields",
          "groups"
        ],
        "type": "object"
      },
      "CrawlDatamodelField": {
        "properties": {
          "group": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "multiple": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "permissions": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "subtype": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "type": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "multiple",
          "name",
          "subtype",
          "group",
          "type",
          "id",
          "permissions"
        ],
        "type": "object"
      },
      "CrawlDatamodelGroup": {
        "properties": {
          "id": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "type": "object"
      },
      "CrawlOrphanURLs": {
        "properties": {
          "url": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "visits": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "url",
          "visits"
        ],
        "type": "object"
      },
      "CrawlStatistics": {
        "properties": {
          "depth_current": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "last_upd_dt": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "pages_dones": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_2xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_3xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_4xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_5xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_networkerror": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_xxx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_known": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "depth_current",
          "pages_dones_networkerror",
          "pages_dones_3xx",
          "pages_dones",
          "pages_dones_2xx",
          "last_upd_dt",
          "pages_dones_5xx",
          "pages_dones_xxx",
          "pages_dones_4xx",
          "pages_known"
        ],
        "type": "object"
      },
      "CrawlStatisticsTime": {
        "properties": {
          "avg_delay": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          },
          "avg_size": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          },
          "frequency": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "http_code_2xx": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          },
          "http_code_3xx": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          },
          "http_code_4xx": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          },
          "http_code_5xx": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          },
          "http_code_xxx": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          },
          "last_update_date": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "new_urls": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CrawlStatisticsTimePoint"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "avg_delay",
          "http_code_2xx",
          "http_code_3xx",
          "http_code_4xx",
          "http_code_5xx",
          "http_code_xxx",
          "frequency",
          "last_update_date",
          "avg_size",
          "new_urls"
        ],
        "type": "object"
      },
      "CrawlStatisticsTimePoint": {
        "properties": {
          "count": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "datetime": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "count",
          "datetime"
        ],
        "type": "object"
      },
      "CrawlStatisticsUrls": {
        "properties": {
          "content_type": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "date": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "delay_first_byte": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "delay_last_byte": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "gzip": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "http": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "length": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "redirects_to": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "url": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "http",
          "url",
          "delay_last_byte",
          "gzip",
          "length",
          "content_type",
          "date",
          "delay_first_byte"
        ],
        "type": "object"
      },
      "CsvExportStatus": {
        "properties": {
          "area": {
            "default": "current",
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "date_created": {
            "description": "",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "job_id": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "job_status": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "job_url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "nb_results": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 0,
            "readOnly": false,
            "type": "integer"
          },
          "query": {
            "$ref": "#/components/schemas/UrlsQuery",
            "description": "",
            "readOnly": false
          },
          "results": {
            "description": "",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "Default": {
        "properties": {},
        "type": "object"
      },
      "DefaultPayload": {
        "description": "default payload for object for all HTTP codes that are not covered individually",
        "properties": {
          "error": {
            "properties": {
              "error_code": {
                "description": "Error Code",
                "type": "string"
              },
              "error_detail": {
                "description": "If available, detailed error",
                "type": "object"
              },
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "FieldValues": {
        "properties": {
          "count": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "results": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/FieldValuesResult"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "count",
          "results"
        ],
        "type": "object"
      },
      "FieldValuesResult": {
        "properties": {
          "nb_urls": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "value": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "value",
          "nb_urls"
        ],
        "type": "object"
      },
      "LinksPercentiles": {
        "properties": {
          "domain": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "percentiles": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/LinksPercentilesItem"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "domain",
          "percentiles"
        ],
        "type": "object"
      },
      "LinksPercentilesItem": {
        "properties": {
          "avg": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "id": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "max": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "metric_total": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "min": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "url_total": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "min",
          "max",
          "url_total",
          "metric_total",
          "avg",
          "id"
        ],
        "type": "object"
      },
      "LinksTopDomains": {
        "properties": {
          "domain": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "follow_links": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "follow_samples": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/LinksTopDomainsSamples"
            },
            "readOnly": false,
            "type": "array"
          },
          "nofollow_links": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "nofollow_samples": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/LinksTopDomainsSamples"
            },
            "readOnly": false,
            "type": "array"
          },
          "unique_follow_links": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "unique_nofollow_links": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "follow_links",
          "nofollow_links",
          "domain",
          "follow_samples",
          "nofollow_samples",
          "unique_follow_links",
          "unique_nofollow_links"
        ],
        "type": "object"
      },
      "LinksTopDomainsSamples": {
        "properties": {
          "sources": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "unique_links": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "url": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "url",
          "sources",
          "unique_links"
        ],
        "type": "object"
      },
      "PageRankLost": {
        "properties": {
          "external": {
            "description": "",
            "format": "float",
            "readOnly": false,
            "type": "number"
          },
          "non_crawled": {
            "description": "",
            "format": "float",
            "readOnly": false,
            "type": "number"
          },
          "robots_txt": {
            "description": "",
            "format": "float",
            "readOnly": false,
            "type": "number"
          }
        },
        "required": [
          "non_crawled",
          "external",
          "robots_txt"
        ],
        "type": "object"
      },
      "Project": {
        "properties": {
          "active": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "current_settings": {
            "$ref": "#/components/schemas/ProjectSettingsSerializer",
            "description": "",
            "readOnly": false
          },
          "date_created": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "slug": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "description": "",
            "readOnly": false
          }
        },
        "required": [
          "name",
          "slug",
          "user",
          "current_settings"
        ],
        "type": "object"
      },
      "ProjectSavedFilter": {
        "properties": {
          "filters": {
            "description": "",
            "readOnly": false,
            "type": "object"
          },
          "identifier": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "name",
          "filters"
        ],
        "type": "object"
      },
      "ProjectSettingsSerializer": {
        "properties": {
          "allowed_domains": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "blacklisted_domains": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "compare_crawl": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "crawl_gzip": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "extra_headers": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "google_analytics_account_email": {
            "description": "Keep email in case user delete his social auth connection",
            "readOnly": false,
            "type": "string"
          },
          "google_analytics_nb_days": {
            "description": "",
            "format": "int64",
            "maximum": 90,
            "minimum": 1,
            "readOnly": false,
            "type": "integer"
          },
          "google_analytics_site_id": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": false,
            "type": "integer"
          },
          "google_social_auth_id": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": false,
            "type": "integer"
          },
          "has_robots_txt": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "header_settings": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "max_depth": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 0,
            "readOnly": false,
            "type": "integer"
          },
          "max_nb_pages": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 1,
            "readOnly": false,
            "type": "integer"
          },
          "max_pages_per_sec": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 1,
            "readOnly": false,
            "type": "integer"
          },
          "respect_nofollow": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "sitemaps": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "start_urls": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "user_agent": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "start_urls",
          "max_nb_pages",
          "blacklisted_domains",
          "allowed_domains",
          "sitemaps",
          "header_settings"
        ],
        "type": "object"
      },
      "RewritingRuleSerializer": {
        "properties": {
          "ignore_case": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "regex": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "replace": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "regex",
          "replace",
          "ignore_case"
        ],
        "type": "object"
      },
      "SitemapsReport": {
        "properties": {
          "count": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "errors": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/SitemapsReportSitemap"
            },
            "readOnly": false,
            "type": "array"
          },
          "sitemap_indexes": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/SitemapsReportSitemap"
            },
            "readOnly": false,
            "type": "array"
          },
          "sitemap_only": {
            "$ref": "#/components/schemas/SitemapsReportOnly",
            "description": "",
            "readOnly": false
          },
          "sitemaps": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/SitemapsReportSitemap"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "count",
          "sitemap_only",
          "sitemap_indexes",
          "sitemaps",
          "errors"
        ],
        "type": "object"
      },
      "SitemapsReportOnly": {
        "properties": {
          "in_configuration": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "out_of_configuration": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "out_of_configuration",
          "in_configuration"
        ],
        "type": "object"
      },
      "SitemapsReportSitemap": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/SitemapsReportSitemapError",
            "description": "",
            "readOnly": false
          },
          "file_type": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "invalid_urls": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "sitemap_indexes": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "url": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "valid_urls": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "SitemapsReportSitemapError": {
        "properties": {
          "message": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "type": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "type": "object"
      },
      "URLRewritingRulesSerializer": {
        "properties": {
          "rules": {
            "description": "",
            "items": {
              "$ref": "#/components/schemas/RewritingRuleSerializer"
            },
            "readOnly": false,
            "type": "array"
          },
          "urls": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "urls",
          "rules"
        ],
        "type": "object"
      },
      "UrlDetail": {
        "properties": {},
        "type": "object"
      },
      "UrlsAgg": {
        "properties": {
          "aggs": {
            "description": "",
            "items": {
              "type": "object"
            },
            "readOnly": false,
            "type": "array"
          },
          "count": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "count"
        ],
        "type": "object"
      },
      "UrlsAggs": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UrlsAgg",
            "description": "",
            "readOnly": false
          },
          "error": {
            "$ref": "#/components/schemas/UrlsErrorAgg",
            "description": "",
            "readOnly": false
          },
          "status": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "UrlsAggsQueries": {
        "items": {
          "$ref": "#/components/schemas/UrlsAggsQuery"
        },
        "type": "array"
      },
      "UrlsAggsQuery": {
        "properties": {
          "aggs": {
            "description": "",
            "items": {
              "type": "object"
            },
            "readOnly": false,
            "type": "array"
          },
          "filters": {
            "description": "",
            "readOnly": false,
            "type": "object"
          }
        },
        "type": "object"
      },
      "UrlsErrorAgg": {
        "properties": {
          "error_code": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "message": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "message",
          "error_code"
        ],
        "type": "object"
      },
      "UrlsQuery": {
        "properties": {
          "fields": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "filters": {
            "description": "",
            "readOnly": false,
            "type": "object"
          },
          "sort": {
            "description": "",
            "items": {
              "type": "object"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "company_name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "date_joined": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "email": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "first_name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "is_organization": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "last_name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "login": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "string": {
        "properties": {},
        "type": "object"
      }
    },
    "securitySchemes": {
      "DjangoRestToken": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "DjangoRestToken": []
    }
  ]
}