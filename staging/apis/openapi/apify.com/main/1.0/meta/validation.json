[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 32 absolute http references: [(('paths', '/v2/store', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'https://...'), (('paths', '/v2/store', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'https://...'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/c/d'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/c/d'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'put', 'requestBody', 'content', 'application/json', 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'put', 'requestBody', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'post', 'requestBody', 'content', 'application/json', 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'post', 'requestBody', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'delete', 'responses', '204', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'unprocessedRequests', 0, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'responses', '201', 'content', 'application/json', 'example', 'data', 'unprocessedRequests', 0, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'responses', '201', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'unprocessedRequests', 0, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'example', 1, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'example', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'schema', 'example', 1, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'schema', 'example', 0, 'url'), 'url', 'http://example.com'), (('servers', 0, 'url'), 'url', 'https://api.apify.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "32"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "root-spec repaired: {\"values_changed\": {\"root['info']['description']\": {\"new_value\": \"The Apify API provides programmatic access to the Apify platform, allowing you to manage and run Actors, access datasets, key-value stores, request queues, and other Apify platform resources. The API uses RESTful endpoints and returns JSON responses.\", \"old_value\": \"\\n> **UPDATE 2025-01-14:**\\n> We have rolled out this new Apify API Documentation. In case of any issues, please [report here](https://github.com/apify/apify-docs/issues).\\n > The old API Documentation is still [available here](https://docs.apify.com/api/v2-old).\\n \\nThe Apify API (version 2) provides programmatic access to the [Apify\\nplatform](https://docs.apify.com). The API is organized\\naround [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer)\\n HTTP endpoints.\\n\\nYou can download the complete OpenAPI schema of Apify API in the [YAML](http://docs.apify.com/api/openapi.yaml) or [JSON](http://docs.apify.com/api/openapi.json) formats. The source code is also available on [GitHub](https://github.com/apify/apify-docs/tree/master/apify-api/openapi).\\n \\nAll requests and responses (including errors) are encoded in\\n[JSON](http://www.json.org/) format with UTF-8 encoding,\\nwith a few exceptions that are explicitly described in the reference.\\n\\nTo access the API using [Node.js](https://nodejs.org/en/), we recommend the\\n[`apify-client`](https://docs.apify.com/api/client/js) [NPM\\n package](https://www.npmjs.com/package/apify-client).\\n\\nTo access the API using [Python](https://www.python.org/), we recommend the\\n[`apify-client`](https://docs.apify.com/api/client/python) [PyPI\\npackage](https://pypi.org/project/apify-client/).\\nThe clients' functions correspond to the API endpoints and have the same\\nparameters. This simplifies development of apps that depend on the Apify\\nplatform.\\n\\n**Note:** All requests with JSON payloads need to specify the `Content-Type:\\napplication/json` HTTP header!\\nAll API endpoints support the `method` query parameter that can override the\\nHTTP method.\\nFor example, if you want to call a POST endpoint using a GET request, simply\\nadd the query parameter `method=POST` to the URL and send the GET request.\\nThis feature is especially useful if you want to call Apify API endpoints\\nfrom services that can only send GET requests.\\n\\n## Authentication\\n <span id=\\\"/introduction/authentication\\\"></span>\\n\\nYou can find your API token on the\\n[Integrations](https://console.apify.com/account#/integrations) page in the\\nApify Console.\\n\\nTo use your token in a request, either:\\n\\n- Add the token to your request's `Authorization` header as `Bearer <token>`.\\nE.g., `Authorization: Bearer xxxxxxx`.\\n[More info](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization).\\n (Recommended).\\n- Add it as the `token` parameter to your request URL. (Less secure).\\n \\nUsing your token in the request header is more secure than using it as a URL\\n parameter because URLs are often stored\\nin browser history and server logs. This creates a chance for someone\\nunauthorized to access your API token.\\n\\n**Do not share your API token or password with untrusted parties.**\\n\\nFor more information, see our\\n[integrations](https://docs.apify.com/platform/integrations) documentation.\\n \\n## Basic usage\\n<span id=\\\"/introduction/basic-usage\\\"></span>\\n\\nTo run an Actor, send a POST request to the [Run\\nActor](#/reference/actors/run-collection/run-actor) endpoint using either the\\nActor ID code (e.g. `vKg4IjxZbEYTYeW8T`) or its name (e.g.\\n`janedoe~my-actor`):\\n\\n`https://api.apify.com/v2/acts/[actor_id]/runs`\\n \\nIf the Actor is not runnable anonymously, you will receive a 401 or 403\\n[response code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).\\nThis means you need to add your [secret API\\ntoken](https://console.apify.com/account#/integrations) to the request's\\n`Authorization` header ([recommended](#/introduction/authentication)) or as a\\nURL query parameter `?token=[your_token]` (less secure).\\n\\nOptionally, you can include the query parameters described in the [Run\\nActor](#/reference/actors/run-collection/run-actor) section to customize your\\nrun.\\n\\nIf you're using Node.js, the best way to run an Actor is using the\\n`Apify.call()` method from the [Apify\\nSDK](https://sdk.apify.com/docs/api/apify#apifycallactid-input-options). It\\nruns the Actor using the account you are currently logged into (determined\\n by the [secret API token](https://console.apify.com/account#/integrations)).\\n The result is an [Actor run\\nobject](https://sdk.apify.com/docs/typedefs/actor-run) and its output (if\\nany).\\n\\nA typical workflow is as follows:\\n\\n1. Run an Actor or task using the [Run\\nActor](#/reference/actors/run-collection/run-actor) or [Run\\ntask](#/reference/actor-tasks/run-collection/run-task) API endpoints.\\n 2. Monitor the Actor run by periodically polling its progress using the [Get\\n run](#/reference/actor-runs/run-object-and-its-storages/get-run) API\\nendpoint.\\n 3. Fetch the results from the [Get\\nitems](#/reference/datasets/item-collection/get-items) API endpoint using the\\n`defaultDatasetId`, which you receive in the Run request response.\\nAdditional data may be stored in a key-value store. You can fetch them from\\nthe [Get record](#/reference/key-value-stores/record/get-record) API endpoint\\n using the `defaultKeyValueStoreId` and the store's `key`.\\n\\n**Note**: Instead of periodic polling, you can also run your\\n[Actor](#/reference/actors/run-actor-synchronously) or\\n[task](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\nsynchronously. This will ensure that the request waits for 300 seconds (5\\nminutes) for the run to finish and returns its output. If the run takes\\nlonger, the request will time out and throw an error.\\n\\n## Response structure\\n<span id=\\\"/introduction/response-structure\\\"></span>\\n\\nMost API endpoints return a JSON object with the `data` property:\\n\\n```\\n{\\n    \\\"data\\\": {\\n        ...\\n    }\\n}\\n```\\n\\nHowever, there are a few explicitly described exceptions, such as\\nDataset [Get items](#/reference/datasets/item-collection/get-items) or\\nKey-value store [Get record](#/reference/key-value-stores/record/get-record)\\n API endpoints, which return data in other formats.\\nIn case of an error, the response has the HTTP status code in the range of\\n4xx or 5xx and the `data` property is replaced with `error`. For example:\\n\\n```\\n{\\n    \\\"error\\\": {\\n        \\\"type\\\": \\\"record-not-found\\\",\\n        \\\"message\\\": \\\"Store was not found.\\\"\\n    }\\n }\\n```\\n\\nSee [Errors](#/introduction/errors) for more details.\\n\\n## Pagination\\n <span id=\\\"/introduction/pagination\\\"></span>\\n\\nAll API endpoints that return a list of records\\n(e.g. [Get list of\\nActors](#/reference/actors/actor-collection/get-list-of-actors))\\n enforce pagination in order to limit the size of their responses.\\n\\nMost of these API endpoints are paginated using the `offset` and `limit`\\nquery parameters.\\n The only exception is [Get list of\\nkeys](#/reference/key-value-stores/key-collection/get-list-of-keys),\\n which is paginated using the `exclusiveStartKey` query parameter.\\n\\n**IMPORTANT**: Each API endpoint that supports pagination enforces a certain\\nmaximum value for the `limit` parameter,\\nin order to reduce the load on Apify servers.\\nThe maximum limit could change in future so you should never\\nrely on a specific value and check the responses of these API endpoints.\\n\\n### Using offset\\n<span id=\\\"/introduction/pagination/using-offset\\\"></span>\\n\\nMost API endpoints that return a list of records enable pagination using the\\nfollowing query parameters:\\n\\n<table>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>Limits the response to contain a specific maximum number of items, e.g. <code>limit=20</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>offset</code></td>\\n    <td>Skips a number of items from the beginning of the list, e.g. <code>offset=100</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>desc</code></td>\\n    <td>\\n    By default, items are sorted in the order in which they were created or added to the list.\\n    This feature is useful when fetching all the items, because it ensures that items\\n    created after the client started the pagination will not be skipped.\\n    If you specify the <code>desc=1</code> parameter, the items will be returned in the reverse order,\\n    i.e. from the newest to the oldest items.\\n    </td>\\n  </tr>\\n</table>\\n\\nThe response of these API endpoints is always a JSON object with the\\nfollowing structure:\\n\\n```\\n{\\n    \\\"data\\\": {\\n        \\\"total\\\": 2560,\\n        \\\"offset\\\": 250,\\n        \\\"limit\\\": 1000,\\n        \\\"count\\\": 1000,\\n        \\\"desc\\\": false,\\n        \\\"items\\\": [\\n            { 1st object },\\n            { 2nd object },\\n            ...\\n            { 1000th object }\\n        ]\\n    }\\n}\\n```\\n\\nThe following table describes the meaning of the response properties:\\n\\n<table>\\n  <tr>\\n    <th>Property</th>\\n    <th>Description</th>\\n  </tr>\\n  <tr>\\n    <td><code>total</code></td>\\n    <td>The total number of items available in the list.</td>\\n  </tr>\\n  <tr>\\n    <td><code>offset</code></td>\\n    <td>The number of items that were skipped at the start.\\n    This is equal to the <code>offset</code> query parameter if it was provided, otherwise it is <code>0</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>The maximum number of items that can be returned in the HTTP response.\\n    It equals to the <code>limit</code> query parameter if it was provided or\\n    the maximum limit enforced for the particular API endpoint, whichever is smaller.</td>\\n  </tr>\\n  <tr>\\n    <td><code>count</code></td>\\n    <td>The actual number of items returned in the HTTP response.</td>\\n  </tr>\\n  <tr>\\n    <td><code>desc</code></td>\\n    <td><code>true</code> if data were requested in descending order and <code>false</code> otherwise.</td>\\n  </tr>\\n  <tr>\\n    <td><code>items</code></td>\\n    <td>An array of requested items.</td>\\n  </tr>\\n</table>\\n\\n### Using key\\n<span id=\\\"/introduction/pagination/using-key\\\"></span>\\n\\nThe records in the [key-value\\n store](https://docs.apify.com/platform/storage/key-value-store)\\nare not ordered based on numerical indexes,\\nbut rather by their keys in the UTF-8 binary order.\\n Therefore the [Get list of\\nkeys](#/reference/key-value-stores/key-collection/get-list-of-keys)\\n API endpoint only supports pagination using the following query parameters:\\n\\n<table>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>Limits the response to contain a specific maximum number items, e.g. <code>limit=20</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>exclusiveStartKey</code></td>\\n    <td>Skips all records with keys up to the given key including the given key,\\n    in the UTF-8 binary order.</td>\\n  </tr>\\n</table>\\n\\nThe response of the API endpoint is always a JSON object with following\\nstructure:\\n\\n```\\n{\\n    \\\"data\\\": {\\n        \\\"limit\\\": 1000,\\n        \\\"isTruncated\\\": true,\\n        \\\"exclusiveStartKey\\\" : \\\"my-key\\\",\\n        \\\"nextExclusiveStartKey\\\": \\\"some-other-key\\\",\\n        \\\"items\\\": [\\n            { 1st object },\\n            { 2nd object },\\n            ...\\n            { 1000th object }\\n        ]\\n    }\\n}\\n```\\n\\nThe following table describes the meaning of the response properties:\\n\\n<table>\\n  <tr>\\n    <th>Property</th>\\n    <th>Description</th>\\n  </tr>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>The maximum number of items that can be returned in the HTTP response.\\n    It equals to the <code>limit</code> query parameter if it was provided or\\n    the maximum limit enforced for the particular endpoint, whichever is smaller.</td>\\n  </tr>\\n  <tr>\\n    <td><code>isTruncated</code></td>\\n    <td><code>true</code> if there are more items left to be queried. Otherwise <code>false</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>exclusiveStartKey</code></td>\\n    <td>The last key that was skipped at the start. Is `null` for the first page.</td>\\n  </tr>\\n  <tr>\\n    <td><code>nextExclusiveStartKey</code></td>\\n    <td>The value for the <code>exclusiveStartKey</code> parameter to query the next page of items.</td>\\n  </tr>\\n</table>\\n\\n## Errors\\n<span id=\\\"/introduction/errors\\\"></span>\\n\\nThe Apify API uses common HTTP status codes: `2xx` range for success, `4xx`\\nrange for errors caused by the caller\\n(invalid requests) and `5xx` range for server errors (these are rare).\\nEach error response contains a JSON object defining the `error` property,\\nwhich is an object with\\nthe `type` and `message` properties that contain the error code and a\\nhuman-readable error description, respectively.\\n\\nFor example:\\n\\n```\\n{\\n    \\\"error\\\": {\\n        \\\"type\\\": \\\"record-not-found\\\",\\n        \\\"message\\\": \\\"Store was not found.\\\"\\n    }\\n}\\n ```\\n\\nHere is the table of the most common errors that can occur for many API\\nendpoints:\\n\\n<table>\\n  <tr>\\n    <th>status</th>\\n    <th>type</th>\\n    <th>message</th>\\n  </tr>\\n  <tr>\\n    <td><code>400</code></td>\\n    <td><code>invalid-request</code></td>\\n    <td>POST data must be a JSON object</td>\\n  </tr>\\n  <tr>\\n    <td><code>400</code></td>\\n    <td><code>invalid-value</code></td>\\n    <td>Invalid value provided: Comments required</td>\\n  </tr>\\n  <tr>\\n    <td><code>400</code></td>\\n    <td><code>invalid-record-key</code></td>\\n    <td>Record key contains invalid character</td>\\n  </tr>\\n  <tr>\\n    <td><code>401</code></td>\\n    <td><code>token-not-provided</code></td>\\n    <td>Authentication token was not provided</td>\\n  </tr>\\n  <tr>\\n    <td><code>404</code></td>\\n    <td><code>record-not-found</code></td>\\n    <td>Store was not found</td>\\n  </tr>\\n  <tr>\\n    <td><code>429</code></td>\\n    <td><code>rate-limit-exceeded</code></td>\\n    <td>You have exceeded the rate limit of 30 requests per second</td>\\n  </tr>\\n  <tr>\\n    <td><code>405</code></td>\\n    <td><code>method-not-allowed</code></td>\\n    <td>This API endpoint can only be accessed using the following HTTP methods: OPTIONS, POST</td>\\n  </tr>\\n</table>\\n \\n## Rate limiting\\n<span id=\\\"/introduction/rate-limiting\\\"></span>\\n\\nAll API endpoints limit the rate of requests in order to prevent overloading of Apify servers by misbehaving clients.\\n\\nThere are two kinds of rate limits - a global rate limit and a per-resource rate limit.\\n\\n### Global rate limit\\n<span id=\\\"/introduction/rate-limiting/global-rate-limit\\\"></span>\\n\\nThe global rate limit is set to _250 000 requests per minute_.\\nFor [authenticated](#/introduction/authentication) requests, it is counted per user,\\nand for unauthenticated requests, it is counted per IP address.\\n\\n### Per-resource rate limit\\n<span id=\\\"/introduction/rate-limiting/per-resource-rate-limit\\\"></span>\\n\\nThe default per-resource rate limit is _30 requests per second per resource_, which in this context means a single Actor, a single Actor run, a single dataset, single key-value store etc.\\nThe default rate limit is applied to every API endpoint except a few select ones, which have higher rate limits.\\nEach API endpoint returns its rate limit in `X-RateLimit-Limit` header.\\n\\nThese endpoints have a rate limit of _100 requests per second per resource_:\\n\\n* CRUD ([get](#/reference/key-value-stores/record/get-record),\\n  [put](#/reference/key-value-stores/record/put-record),\\n  [delete](#/reference/key-value-stores/record/delete-record))\\n  operations on key-value store records\\n\\nThese endpoints have a rate limit of _200 requests per second per resource_:\\n* [Run Actor](#/reference/actors/run-collection/run-actor)\\n * [Run Actor task asynchronously](#/reference/actor-tasks/runs-collection/run-task-asynchronously)\\n * [Run Actor task synchronously](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\n * [Metamorph Actor run](#/reference/actors/metamorph-run/metamorph-run)\\n* [Push items](#/reference/datasets/item-collection/put-items) to dataset\\n* CRUD\\n  ([add](#/reference/request-queues/request-collection/add-request),\\n  [get](#/reference/request-queues/request-collection/get-request),\\n  [update](#/reference/request-queues/request-collection/update-request),\\n  [delete](#/reference/request-queues/request-collection/delete-request))\\n  operations on requests in request queues\\n\\n### Rate limit exceeded errors\\n <span id=\\\"/introduction/rate-limiting/rate-limit-exceeded-errors\\\"></span>\\n\\n If the client is sending too many requests, the API endpoints respond with the HTTP status code `429 Too Many Requests`\\nand the following body:\\n\\n```\\n{\\n    \\\"error\\\": {\\n        \\\"type\\\": \\\"rate-limit-exceeded\\\",\\n        \\\"message\\\": \\\"You have exceeded the rate limit of ... requests per second\\\"\\n    }\\n}\\n ```\\n\\n### Retrying rate-limited requests with exponential backoff\\n<span id=\\\"/introduction/rate-limiting/retrying-rate-limited-requests-with-exponential-backoff\\\"></span>\\n\\nIf the client receives the rate limit error, it should wait a certain period of time and then retry the request.\\nIf the error happens again, the client should double the wait period and retry the request,\\nand so on. This algorithm is known as _exponential backoff_\\nand it can be described using the following pseudo-code:\\n\\n1. Define a variable `DELAY=500`\\n2. Send the HTTP request to the API endpoint\\n3. If the response has status code not equal to `429` then you are done. Otherwise:\\n   * Wait for a period of time chosen randomly from the interval `DELAY` to `2*DELAY` milliseconds\\n   * Double the future wait period by setting `DELAY = 2*DELAY`\\n   * Continue with step 2\\n\\nIf all requests sent by the client implement the above steps,\\nthe client will automatically use the maximum available bandwidth for its requests.\\n\\nNote that the Apify API clients [for JavaScript](https://docs.apify.com/api/client/js)\\nand [for Python](https://docs.apify.com/api/client/python)\\n use the exponential backoff algorithm transparently, so that you do not need to worry about it.\\n\\n## Referring to resources\\n<span id=\\\"/introduction/referring-to-resources\\\"></span>\\n\\nThere are three main ways to refer to a resource you're accessing via API.\\n\\n- the resource ID (e.g. `iKkPcIgVvwmztduf8`)\\n- `username~resourcename` - when using this access method, you will need to\\nuse your API token, and access will only work if you have the correct\\npermissions.\\n- `~resourcename` - for this, you need to use an API token, and the\\n`resourcename` refers to a resource in the API token owner's account.\\n\", \"diff\": \"--- \\n+++ \\n@@ -1,475 +1 @@\\n-\\n-> **UPDATE 2025-01-14:**\\n-> We have rolled out this new Apify API Documentation. In case of any issues, please [report here](https://github.com/apify/apify-docs/issues).\\n- > The old API Documentation is still [available here](https://docs.apify.com/api/v2-old).\\n- \\n-The Apify API (version 2) provides programmatic access to the [Apify\\n-platform](https://docs.apify.com). The API is organized\\n-around [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer)\\n- HTTP endpoints.\\n-\\n-You can download the complete OpenAPI schema of Apify API in the [YAML](http://docs.apify.com/api/openapi.yaml) or [JSON](http://docs.apify.com/api/openapi.json) formats. The source code is also available on [GitHub](https://github.com/apify/apify-docs/tree/master/apify-api/openapi).\\n- \\n-All requests and responses (including errors) are encoded in\\n-[JSON](http://www.json.org/) format with UTF-8 encoding,\\n-with a few exceptions that are explicitly described in the reference.\\n-\\n-To access the API using [Node.js](https://nodejs.org/en/), we recommend the\\n-[`apify-client`](https://docs.apify.com/api/client/js) [NPM\\n- package](https://www.npmjs.com/package/apify-client).\\n-\\n-To access the API using [Python](https://www.python.org/), we recommend the\\n-[`apify-client`](https://docs.apify.com/api/client/python) [PyPI\\n-package](https://pypi.org/project/apify-client/).\\n-The clients' functions correspond to the API endpoints and have the same\\n-parameters. This simplifies development of apps that depend on the Apify\\n-platform.\\n-\\n-**Note:** All requests with JSON payloads need to specify the `Content-Type:\\n-application/json` HTTP header!\\n-All API endpoints support the `method` query parameter that can override the\\n-HTTP method.\\n-For example, if you want to call a POST endpoint using a GET request, simply\\n-add the query parameter `method=POST` to the URL and send the GET request.\\n-This feature is especially useful if you want to call Apify API endpoints\\n-from services that can only send GET requests.\\n-\\n-## Authentication\\n- <span id=\\\"/introduction/authentication\\\"></span>\\n-\\n-You can find your API token on the\\n-[Integrations](https://console.apify.com/account#/integrations) page in the\\n-Apify Console.\\n-\\n-To use your token in a request, either:\\n-\\n-- Add the token to your request's `Authorization` header as `Bearer <token>`.\\n-E.g., `Authorization: Bearer xxxxxxx`.\\n-[More info](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization).\\n- (Recommended).\\n-- Add it as the `token` parameter to your request URL. (Less secure).\\n- \\n-Using your token in the request header is more secure than using it as a URL\\n- parameter because URLs are often stored\\n-in browser history and server logs. This creates a chance for someone\\n-unauthorized to access your API token.\\n-\\n-**Do not share your API token or password with untrusted parties.**\\n-\\n-For more information, see our\\n-[integrations](https://docs.apify.com/platform/integrations) documentation.\\n- \\n-## Basic usage\\n-<span id=\\\"/introduction/basic-usage\\\"></span>\\n-\\n-To run an Actor, send a POST request to the [Run\\n-Actor](#/reference/actors/run-collection/run-actor) endpoint using either the\\n-Actor ID code (e.g. `vKg4IjxZbEYTYeW8T`) or its name (e.g.\\n-`janedoe~my-actor`):\\n-\\n-`https://api.apify.com/v2/acts/[actor_id]/runs`\\n- \\n-If the Actor is not runnable anonymously, you will receive a 401 or 403\\n-[response code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).\\n-This means you need to add your [secret API\\n-token](https://console.apify.com/account#/integrations) to the request's\\n-`Authorization` header ([recommended](#/introduction/authentication)) or as a\\n-URL query parameter `?token=[your_token]` (less secure).\\n-\\n-Optionally, you can include the query parameters described in the [Run\\n-Actor](#/reference/actors/run-collection/run-actor) section to customize your\\n-run.\\n-\\n-If you're using Node.js, the best way to run an Actor is using the\\n-`Apify.call()` method from the [Apify\\n-SDK](https://sdk.apify.com/docs/api/apify#apifycallactid-input-options). It\\n-runs the Actor using the account you are currently logged into (determined\\n- by the [secret API token](https://console.apify.com/account#/integrations)).\\n- The result is an [Actor run\\n-object](https://sdk.apify.com/docs/typedefs/actor-run) and its output (if\\n-any).\\n-\\n-A typical workflow is as follows:\\n-\\n-1. Run an Actor or task using the [Run\\n-Actor](#/reference/actors/run-collection/run-actor) or [Run\\n-task](#/reference/actor-tasks/run-collection/run-task) API endpoints.\\n- 2. Monitor the Actor run by periodically polling its progress using the [Get\\n- run](#/reference/actor-runs/run-object-and-its-storages/get-run) API\\n-endpoint.\\n- 3. Fetch the results from the [Get\\n-items](#/reference/datasets/item-collection/get-items) API endpoint using the\\n-`defaultDatasetId`, which you receive in the Run request response.\\n-Additional data may be stored in a key-value store. You can fetch them from\\n-the [Get record](#/reference/key-value-stores/record/get-record) API endpoint\\n- using the `defaultKeyValueStoreId` and the store's `key`.\\n-\\n-**Note**: Instead of periodic polling, you can also run your\\n-[Actor](#/reference/actors/run-actor-synchronously) or\\n-[task](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\n-synchronously. This will ensure that the request waits for 300 seconds (5\\n-minutes) for the run to finish and returns its output. If the run takes\\n-longer, the request will time out and throw an error.\\n-\\n-## Response structure\\n-<span id=\\\"/introduction/response-structure\\\"></span>\\n-\\n-Most API endpoints return a JSON object with the `data` property:\\n-\\n-```\\n-{\\n-    \\\"data\\\": {\\n-        ...\\n-    }\\n-}\\n-```\\n-\\n-However, there are a few explicitly described exceptions, such as\\n-Dataset [Get items](#/reference/datasets/item-collection/get-items) or\\n-Key-value store [Get record](#/reference/key-value-stores/record/get-record)\\n- API endpoints, which return data in other formats.\\n-In case of an error, the response has the HTTP status code in the range of\\n-4xx or 5xx and the `data` property is replaced with `error`. For example:\\n-\\n-```\\n-{\\n-    \\\"error\\\": {\\n-        \\\"type\\\": \\\"record-not-found\\\",\\n-        \\\"message\\\": \\\"Store was not found.\\\"\\n-    }\\n- }\\n-```\\n-\\n-See [Errors](#/introduction/errors) for more details.\\n-\\n-## Pagination\\n- <span id=\\\"/introduction/pagination\\\"></span>\\n-\\n-All API endpoints that return a list of records\\n-(e.g. [Get list of\\n-Actors](#/reference/actors/actor-collection/get-list-of-actors))\\n- enforce pagination in order to limit the size of their responses.\\n-\\n-Most of these API endpoints are paginated using the `offset` and `limit`\\n-query parameters.\\n- The only exception is [Get list of\\n-keys](#/reference/key-value-stores/key-collection/get-list-of-keys),\\n- which is paginated using the `exclusiveStartKey` query parameter.\\n-\\n-**IMPORTANT**: Each API endpoint that supports pagination enforces a certain\\n-maximum value for the `limit` parameter,\\n-in order to reduce the load on Apify servers.\\n-The maximum limit could change in future so you should never\\n-rely on a specific value and check the responses of these API endpoints.\\n-\\n-### Using offset\\n-<span id=\\\"/introduction/pagination/using-offset\\\"></span>\\n-\\n-Most API endpoints that return a list of records enable pagination using the\\n-following query parameters:\\n-\\n-<table>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>Limits the response to contain a specific maximum number of items, e.g. <code>limit=20</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>offset</code></td>\\n-    <td>Skips a number of items from the beginning of the list, e.g. <code>offset=100</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>desc</code></td>\\n-    <td>\\n-    By default, items are sorted in the order in which they were created or added to the list.\\n-    This feature is useful when fetching all the items, because it ensures that items\\n-    created after the client started the pagination will not be skipped.\\n-    If you specify the <code>desc=1</code> parameter, the items will be returned in the reverse order,\\n-    i.e. from the newest to the oldest items.\\n-    </td>\\n-  </tr>\\n-</table>\\n-\\n-The response of these API endpoints is always a JSON object with the\\n-following structure:\\n-\\n-```\\n-{\\n-    \\\"data\\\": {\\n-        \\\"total\\\": 2560,\\n-        \\\"offset\\\": 250,\\n-        \\\"limit\\\": 1000,\\n-        \\\"count\\\": 1000,\\n-        \\\"desc\\\": false,\\n-        \\\"items\\\": [\\n-            { 1st object },\\n-            { 2nd object },\\n-            ...\\n-            { 1000th object }\\n-        ]\\n-    }\\n-}\\n-```\\n-\\n-The following table describes the meaning of the response properties:\\n-\\n-<table>\\n-  <tr>\\n-    <th>Property</th>\\n-    <th>Description</th>\\n-  </tr>\\n-  <tr>\\n-    <td><code>total</code></td>\\n-    <td>The total number of items available in the list.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>offset</code></td>\\n-    <td>The number of items that were skipped at the start.\\n-    This is equal to the <code>offset</code> query parameter if it was provided, otherwise it is <code>0</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>The maximum number of items that can be returned in the HTTP response.\\n-    It equals to the <code>limit</code> query parameter if it was provided or\\n-    the maximum limit enforced for the particular API endpoint, whichever is smaller.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>count</code></td>\\n-    <td>The actual number of items returned in the HTTP response.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>desc</code></td>\\n-    <td><code>true</code> if data were requested in descending order and <code>false</code> otherwise.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>items</code></td>\\n-    <td>An array of requested items.</td>\\n-  </tr>\\n-</table>\\n-\\n-### Using key\\n-<span id=\\\"/introduction/pagination/using-key\\\"></span>\\n-\\n-The records in the [key-value\\n- store](https://docs.apify.com/platform/storage/key-value-store)\\n-are not ordered based on numerical indexes,\\n-but rather by their keys in the UTF-8 binary order.\\n- Therefore the [Get list of\\n-keys](#/reference/key-value-stores/key-collection/get-list-of-keys)\\n- API endpoint only supports pagination using the following query parameters:\\n-\\n-<table>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>Limits the response to contain a specific maximum number items, e.g. <code>limit=20</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>exclusiveStartKey</code></td>\\n-    <td>Skips all records with keys up to the given key including the given key,\\n-    in the UTF-8 binary order.</td>\\n-  </tr>\\n-</table>\\n-\\n-The response of the API endpoint is always a JSON object with following\\n-structure:\\n-\\n-```\\n-{\\n-    \\\"data\\\": {\\n-        \\\"limit\\\": 1000,\\n-        \\\"isTruncated\\\": true,\\n-        \\\"exclusiveStartKey\\\" : \\\"my-key\\\",\\n-        \\\"nextExclusiveStartKey\\\": \\\"some-other-key\\\",\\n-        \\\"items\\\": [\\n-            { 1st object },\\n-            { 2nd object },\\n-            ...\\n-            { 1000th object }\\n-        ]\\n-    }\\n-}\\n-```\\n-\\n-The following table describes the meaning of the response properties:\\n-\\n-<table>\\n-  <tr>\\n-    <th>Property</th>\\n-    <th>Description</th>\\n-  </tr>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>The maximum number of items that can be returned in the HTTP response.\\n-    It equals to the <code>limit</code> query parameter if it was provided or\\n-    the maximum limit enforced for the particular endpoint, whichever is smaller.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>isTruncated</code></td>\\n-    <td><code>true</code> if there are more items left to be queried. Otherwise <code>false</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>exclusiveStartKey</code></td>\\n-    <td>The last key that was skipped at the start. Is `null` for the first page.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>nextExclusiveStartKey</code></td>\\n-    <td>The value for the <code>exclusiveStartKey</code> parameter to query the next page of items.</td>\\n-  </tr>\\n-</table>\\n-\\n-## Errors\\n-<span id=\\\"/introduction/errors\\\"></span>\\n-\\n-The Apify API uses common HTTP status codes: `2xx` range for success, `4xx`\\n-range for errors caused by the caller\\n-(invalid requests) and `5xx` range for server errors (these are rare).\\n-Each error response contains a JSON object defining the `error` property,\\n-which is an object with\\n-the `type` and `message` properties that contain the error code and a\\n-human-readable error description, respectively.\\n-\\n-For example:\\n-\\n-```\\n-{\\n-    \\\"error\\\": {\\n-        \\\"type\\\": \\\"record-not-found\\\",\\n-        \\\"message\\\": \\\"Store was not found.\\\"\\n-    }\\n-}\\n- ```\\n-\\n-Here is the table of the most common errors that can occur for many API\\n-endpoints:\\n-\\n-<table>\\n-  <tr>\\n-    <th>status</th>\\n-    <th>type</th>\\n-    <th>message</th>\\n-  </tr>\\n-  <tr>\\n-    <td><code>400</code></td>\\n-    <td><code>invalid-request</code></td>\\n-    <td>POST data must be a JSON object</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>400</code></td>\\n-    <td><code>invalid-value</code></td>\\n-    <td>Invalid value provided: Comments required</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>400</code></td>\\n-    <td><code>invalid-record-key</code></td>\\n-    <td>Record key contains invalid character</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>401</code></td>\\n-    <td><code>token-not-provided</code></td>\\n-    <td>Authentication token was not provided</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>404</code></td>\\n-    <td><code>record-not-found</code></td>\\n-    <td>Store was not found</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>429</code></td>\\n-    <td><code>rate-limit-exceeded</code></td>\\n-    <td>You have exceeded the rate limit of 30 requests per second</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>405</code></td>\\n-    <td><code>method-not-allowed</code></td>\\n-    <td>This API endpoint can only be accessed using the following HTTP methods: OPTIONS, POST</td>\\n-  </tr>\\n-</table>\\n- \\n-## Rate limiting\\n-<span id=\\\"/introduction/rate-limiting\\\"></span>\\n-\\n-All API endpoints limit the rate of requests in order to prevent overloading of Apify servers by misbehaving clients.\\n-\\n-There are two kinds of rate limits - a global rate limit and a per-resource rate limit.\\n-\\n-### Global rate limit\\n-<span id=\\\"/introduction/rate-limiting/global-rate-limit\\\"></span>\\n-\\n-The global rate limit is set to _250 000 requests per minute_.\\n-For [authenticated](#/introduction/authentication) requests, it is counted per user,\\n-and for unauthenticated requests, it is counted per IP address.\\n-\\n-### Per-resource rate limit\\n-<span id=\\\"/introduction/rate-limiting/per-resource-rate-limit\\\"></span>\\n-\\n-The default per-resource rate limit is _30 requests per second per resource_, which in this context means a single Actor, a single Actor run, a single dataset, single key-value store etc.\\n-The default rate limit is applied to every API endpoint except a few select ones, which have higher rate limits.\\n-Each API endpoint returns its rate limit in `X-RateLimit-Limit` header.\\n-\\n-These endpoints have a rate limit of _100 requests per second per resource_:\\n-\\n-* CRUD ([get](#/reference/key-value-stores/record/get-record),\\n-  [put](#/reference/key-value-stores/record/put-record),\\n-  [delete](#/reference/key-value-stores/record/delete-record))\\n-  operations on key-value store records\\n-\\n-These endpoints have a rate limit of _200 requests per second per resource_:\\n-* [Run Actor](#/reference/actors/run-collection/run-actor)\\n- * [Run Actor task asynchronously](#/reference/actor-tasks/runs-collection/run-task-asynchronously)\\n- * [Run Actor task synchronously](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\n- * [Metamorph Actor run](#/reference/actors/metamorph-run/metamorph-run)\\n-* [Push items](#/reference/datasets/item-collection/put-items) to dataset\\n-* CRUD\\n-  ([add](#/reference/request-queues/request-collection/add-request),\\n-  [get](#/reference/request-queues/request-collection/get-request),\\n-  [update](#/reference/request-queues/request-collection/update-request),\\n-  [delete](#/reference/request-queues/request-collection/delete-request))\\n-  operations on requests in request queues\\n-\\n-### Rate limit exceeded errors\\n- <span id=\\\"/introduction/rate-limiting/rate-limit-exceeded-errors\\\"></span>\\n-\\n- If the client is sending too many requests, the API endpoints respond with the HTTP status code `429 Too Many Requests`\\n-and the following body:\\n-\\n-```\\n-{\\n-    \\\"error\\\": {\\n-        \\\"type\\\": \\\"rate-limit-exceeded\\\",\\n-        \\\"message\\\": \\\"You have exceeded the rate limit of ... requests per second\\\"\\n-    }\\n-}\\n- ```\\n-\\n-### Retrying rate-limited requests with exponential backoff\\n-<span id=\\\"/introduction/rate-limiting/retrying-rate-limited-requests-with-exponential-backoff\\\"></span>\\n-\\n-If the client receives the rate limit error, it should wait a certain period of time and then retry the request.\\n-If the error happens again, the client should double the wait period and retry the request,\\n-and so on. This algorithm is known as _exponential backoff_\\n-and it can be described using the following pseudo-code:\\n-\\n-1. Define a variable `DELAY=500`\\n-2. Send the HTTP request to the API endpoint\\n-3. If the response has status code not equal to `429` then you are done. Otherwise:\\n-   * Wait for a period of time chosen randomly from the interval `DELAY` to `2*DELAY` milliseconds\\n-   * Double the future wait period by setting `DELAY = 2*DELAY`\\n-   * Continue with step 2\\n-\\n-If all requests sent by the client implement the above steps,\\n-the client will automatically use the maximum available bandwidth for its requests.\\n-\\n-Note that the Apify API clients [for JavaScript](https://docs.apify.com/api/client/js)\\n-and [for Python](https://docs.apify.com/api/client/python)\\n- use the exponential backoff algorithm transparently, so that you do not need to worry about it.\\n-\\n-## Referring to resources\\n-<span id=\\\"/introduction/referring-to-resources\\\"></span>\\n-\\n-There are three main ways to refer to a resource you're accessing via API.\\n-\\n-- the resource ID (e.g. `iKkPcIgVvwmztduf8`)\\n-- `username~resourcename` - when using this access method, you will need to\\n-use your API token, and access will only work if you have the correct\\n-permissions.\\n-- `~resourcename` - for this, you need to use an API token, and the\\n-`resourcename` refers to a resource in the API token owner's account.\\n+The Apify API provides programmatic access to the Apify platform, allowing you to manage and run Actors, access datasets, key-value stores, request queues, and other Apify platform resources. The API uses RESTful endpoints and returns JSON responses.\"}, \"root['info']['version']\": {\"new_value\": \"2\", \"old_value\": \"\"}}}",
    "severity": 3,
    "code": "repair-root-spec-iteration-diff",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'apiKey' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'httpBearer' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 12
      }
    },
    "message": "OpenAPISpecValidator Error validating spec - list indices must be integers or slices, not str",
    "severity": 1,
    "code": "openapi-spec-validator-error",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `string` but got `null`. [path: tags.8.x-displayName]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        8,
        "x-displayName"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `string` but got `null`. [path: tags.14.x-displayName]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        14,
        "x-displayName"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Version.properties.sourceType.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Version",
        "properties",
        "sourceType",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateActorRequest.properties.defaultRunOptions.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateActorRequest",
        "properties",
        "defaultRunOptions",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Actor.properties.exampleRunInput.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Actor",
        "properties",
        "exampleRunInput",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Actor.properties.taggedBuilds.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Actor",
        "properties",
        "taggedBuilds",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.TaggedBuilds.properties.latest.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TaggedBuilds",
        "properties",
        "latest",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateActorRequest.properties.defaultRunOptions.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateActorRequest",
        "properties",
        "defaultRunOptions",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateOrUpdateVersionRequest.properties.sourceType.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateOrUpdateVersionRequest",
        "properties",
        "sourceType",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.WebhookShort.properties.lastDispatch.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookShort",
        "properties",
        "lastDispatch",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.WebhookShort.properties.stats.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookShort",
        "properties",
        "stats",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.usage.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "usage",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.usageUsd.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "usageUsd",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: components.schemas.Build.properties.actorDefinition.oneOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "actorDefinition",
        "oneOf",
        1,
        "type"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Run.properties.usage.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Run",
        "properties",
        "usage",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Run.properties.usageUsd.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Run",
        "properties",
        "usageUsd",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.TaskShort.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TaskShort",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateTaskRequest.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateTaskRequest",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateTaskRequest.properties.input.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateTaskRequest",
        "properties",
        "input",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Task.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Task",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Task.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Task",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Task.properties.input.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Task",
        "properties",
        "input",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateTaskRequest.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateTaskRequest",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateTaskRequest.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateTaskRequest",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateTaskRequest.properties.input.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateTaskRequest",
        "properties",
        "input",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Webhook.properties.lastDispatch.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Webhook",
        "properties",
        "lastDispatch",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Webhook.properties.stats.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Webhook",
        "properties",
        "stats",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.WebhookUpdate.properties.condition.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookUpdate",
        "properties",
        "condition",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleCreateActions.properties.runInput.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleCreateActions",
        "properties",
        "runInput",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleCreateActions.properties.runOptions.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleCreateActions",
        "properties",
        "runOptions",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleResponseDataActions.properties.runInput.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleResponseDataActions",
        "properties",
        "runInput",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleResponseDataActions.properties.runOptions.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleResponseDataActions",
        "properties",
        "runOptions",
        "nullable"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts.post.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}.put.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}.put.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "delete",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/versions.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/versions.post.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/versions/{versionNumber}.put.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "put",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "delete",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}",
        "put",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}",
        "delete",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/webhooks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/webhooks",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/default.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/default",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds/default.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/default",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/{buildId}/openapi.json.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/openapi.json",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/{buildId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds/{buildId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/{buildId}/abort.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/abort",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds/{buildId}/abort.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/abort",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: type must be object. [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.get.responses.201.content.application/json.example]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "get",
        "responses",
        201,
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: type must be object. [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.post.responses.201.content.application/json.example]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}/resurrect.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/resurrect",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}/resurrect.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/resurrect",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/last.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/last",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/last.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/last",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}/abort.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/abort",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}/abort.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/abort",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}/metamorph.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/metamorph",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}/metamorph.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/metamorph",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks.post.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}.put.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}.put.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "delete",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/input.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/input",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/input.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/input",
        "put",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/webhooks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/webhooks",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}/webhooks.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/webhooks",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/runs.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/runs",
        "get",
        "responses"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 137,
        "character": 24
      },
      "end": {
        "line": 170,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts.post.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 197,
        "character": 26
      },
      "end": {
        "line": 268,
        "character": 64
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 321,
        "character": 26
      },
      "end": {
        "line": 392,
        "character": 64
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 441,
        "character": 24
      },
      "end": {
        "line": 474,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}.put.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 490,
        "character": 26
      },
      "end": {
        "line": 561,
        "character": 64
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}.put.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 659,
        "character": 26
      },
      "end": {
        "line": 693,
        "character": 87
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/versions.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 739,
        "character": 24
      },
      "end": {
        "line": 742,
        "character": 79
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/versions.post.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "post",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 876,
        "character": 24
      },
      "end": {
        "line": 893,
        "character": 33
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/versions/{versionNumber}.put.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1601,
        "character": 26
      },
      "end": {
        "line": 1634,
        "character": 42
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1705,
        "character": 26
      },
      "end": {
        "line": 1738,
        "character": 42
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds/default.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/default",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1863,
        "character": 26
      },
      "end": {
        "line": 1896,
        "character": 42
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds/{buildId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1953,
        "character": 26
      },
      "end": {
        "line": 1978,
        "character": 49
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds/{buildId}/abort.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/abort",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2268,
        "character": 26
      },
      "end": {
        "line": 2344,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3063,
        "character": 28
      },
      "end": {
        "line": 3066,
        "character": 56
      }
    },
    "message": "\"example\" property type must be object [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.post.responses.201.content.application/json.schema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "schema",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3070,
        "character": 26
      },
      "end": {
        "line": 3073,
        "character": 54
      }
    },
    "message": "\"example\" property type must be object [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3472,
        "character": 26
      },
      "end": {
        "line": 3475,
        "character": 54
      }
    },
    "message": "\"example\" property type must be object [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.get.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "get",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3600,
        "character": 26
      },
      "end": {
        "line": 3676,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}/resurrect.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/resurrect",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3733,
        "character": 26
      },
      "end": {
        "line": 3809,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/last.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/last",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3877,
        "character": 26
      },
      "end": {
        "line": 3953,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4021,
        "character": 26
      },
      "end": {
        "line": 4095,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}/abort.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/abort",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4175,
        "character": 26
      },
      "end": {
        "line": 4257,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}/metamorph.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/metamorph",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4353,
        "character": 26
      },
      "end": {
        "line": 4386,
        "character": 40
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4441,
        "character": 24
      },
      "end": {
        "line": 4447,
        "character": 37
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks.post.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4482,
        "character": 26
      },
      "end": {
        "line": 4501,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4561,
        "character": 26
      },
      "end": {
        "line": 4580,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4628,
        "character": 24
      },
      "end": {
        "line": 4646,
        "character": 34
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}.put.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4670,
        "character": 26
      },
      "end": {
        "line": 4689,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}.put.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4964,
        "character": 26
      },
      "end": {
        "line": 5027,
        "character": 46
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}/webhooks.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/webhooks",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5347,
        "character": 26
      },
      "end": {
        "line": 5425,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}/runs.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/runs",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6542,
        "character": 26
      },
      "end": {
        "line": 6618,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}/runs/last.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/runs/last",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6804,
        "character": 26
      },
      "end": {
        "line": 6880,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6951,
        "character": 26
      },
      "end": {
        "line": 7027,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}.put.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7121,
        "character": 26
      },
      "end": {
        "line": 7195,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/abort.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/abort",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7270,
        "character": 26
      },
      "end": {
        "line": 7352,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/metamorph.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/metamorph",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7404,
        "character": 26
      },
      "end": {
        "line": 7480,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/reboot.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/reboot",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7564,
        "character": 26
      },
      "end": {
        "line": 7640,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/resurrect.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/resurrect",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8187,
        "character": 25
      },
      "end": {
        "line": 8195,
        "character": 36
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/key-value-stores.post.responses.201.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/key-value-stores",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8868,
        "character": 25
      },
      "end": {
        "line": 8879,
        "character": 32
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/datasets.post.responses.201.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/datasets",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8942,
        "character": 25
      },
      "end": {
        "line": 8953,
        "character": 32
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/datasets/{datasetId}.get.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/datasets/{datasetId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9017,
        "character": 25
      },
      "end": {
        "line": 9028,
        "character": 32
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/datasets/{datasetId}.put.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/datasets/{datasetId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9775,
        "character": 25
      },
      "end": {
        "line": 9785,
        "character": 46
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/request-queues.post.responses.201.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9865,
        "character": 25
      },
      "end": {
        "line": 9875,
        "character": 46
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/request-queues/{queueId}.get.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9968,
        "character": 25
      },
      "end": {
        "line": 9978,
        "character": 46
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/request-queues/{queueId}.put.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 10155,
        "character": 22
      },
      "end": {
        "line": 10158,
        "character": 50
      }
    },
    "message": "\"0\" property must have required property \"uniqueKey\" [path: paths./v2/request-queues/{queueId}/requests/batch.post.responses.201.content.application/json.example.data.processedRequests.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}/requests/batch",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data",
        "processedRequests",
        "0"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 10269,
        "character": 22
      },
      "end": {
        "line": 10270,
        "character": 57
      }
    },
    "message": "\"0\" property must have required property \"requestId\" [path: paths./v2/request-queues/{queueId}/requests/batch.delete.responses.204.content.application/json.example.data.processedRequests.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}/requests/batch",
        "delete",
        "responses",
        "204",
        "content",
        "application/json",
        "example",
        "data",
        "processedRequests",
        "0"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 10411,
        "character": 26
      },
      "end": {
        "line": 10451,
        "character": 58
      }
    },
    "message": "reference \"dnjkDMKLmdlkmlkmld\" resolves to more than one schema [path: paths./v2/request-queues/{queueId}/requests.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}/requests",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 12366,
        "character": 22
      },
      "end": {
        "line": 12386,
        "character": 48
      }
    },
    "message": "\"0\" property must have required property \"userFullName\" [path: paths./v2/store.get.responses.200.content.application/json.example.data.items.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/store",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data",
        "items",
        "0"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 13329,
        "character": 22
      },
      "end": {
        "line": 13330,
        "character": 31
      }
    },
    "message": "\"example\" property type must be string [path: components.schemas.ExampleRunInput.properties.body.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ExampleRunInput",
        "properties",
        "body",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 14288,
        "character": 24
      },
      "end": {
        "line": 14288,
        "character": 30
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"number\"?. [path: components.schemas.Build.properties.actorDefinition.oneOf.1.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "actorDefinition",
        "oneOf",
        "1",
        "type"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 14293,
        "character": 18
      },
      "end": {
        "line": 14372,
        "character": 36
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: components.schemas.Build.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 14951,
        "character": 18
      },
      "end": {
        "line": 14976,
        "character": 41
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: components.schemas.PostAbortBuildResponse.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PostAbortBuildResponse",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 16082,
        "character": 20
      },
      "end": {
        "line": 16091,
        "character": 38
      }
    },
    "message": "\"0\" property must have required property \"consoleUrl\" [path: components.schemas.GetListOfKeyValueStoresResponse.properties.data.allOf.1.example.items.0]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "GetListOfKeyValueStoresResponse",
        "properties",
        "data",
        "allOf",
        "1",
        "example",
        "items",
        "0"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 17570,
        "character": 26
      },
      "end": {
        "line": 17571,
        "character": 30
      }
    },
    "message": "\"example\" property type must be string,null [path: components.schemas.WebhookDispatch.properties.calls.properties.responseBody.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookDispatch",
        "properties",
        "calls",
        "properties",
        "responseBody",
        "example"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 18301,
        "character": 20
      },
      "end": {
        "line": 18303,
        "character": 57
      }
    },
    "message": "\"items\" property must be object. [path: components.schemas.Proxy.properties.groups.items]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Proxy",
        "properties",
        "groups",
        "items"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 18615,
        "character": 31
      },
      "end": {
        "line": 18617,
        "character": 51
      }
    },
    "message": "\"SERVICE_USAGE_ITEM\" property must have required property \"baseUnitPriceUsd\" [path: components.schemas.ServiceUsage.example.SERVICE_USAGE_ITEM]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ServiceUsage",
        "example",
        "SERVICE_USAGE_ITEM"
      ],
      "target": "repair-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 32 absolute http references: [(('paths', '/v2/store', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'https://...'), (('paths', '/v2/store', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'https://...'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a'), (('paths', '/v2/request-queues/{queueId}/head/lock', 'post', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/c/d'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 2, 'url'), 'url', 'http://example.com/c/d'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com/a/b'), (('paths', '/v2/request-queues/{queueId}/head', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'put', 'requestBody', 'content', 'application/json', 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'put', 'requestBody', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/{requestId}', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'post', 'requestBody', 'content', 'application/json', 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'post', 'requestBody', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 1, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'items', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'delete', 'responses', '204', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'unprocessedRequests', 0, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'responses', '201', 'content', 'application/json', 'example', 'data', 'unprocessedRequests', 0, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'responses', '201', 'content', 'application/json', 'schema', 'allOf', 1, 'example', 'data', 'unprocessedRequests', 0, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'example', 1, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'example', 0, 'url'), 'url', 'http://example.com'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'schema', 'example', 1, 'url'), 'url', 'http://example.com/2'), (('paths', '/v2/request-queues/{queueId}/requests/batch', 'post', 'requestBody', 'content', 'application/json', 'schema', 'example', 0, 'url'), 'url', 'http://example.com'), (('servers', 0, 'url'), 'url', 'https://api.apify.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "32"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "bundled-spec repaired: {\"values_changed\": {\"root['info']['description']\": {\"new_value\": \"The Apify API provides programmatic access to the Apify platform, allowing you to manage Actors, runs, datasets, key-value stores, request queues, webhooks, schedules, and more. This RESTful API enables automation of web scraping workflows and integration with the Apify ecosystem.\", \"old_value\": \"\\n> **UPDATE 2025-01-14:**\\n> We have rolled out this new Apify API Documentation. In case of any issues, please [report here](https://github.com/apify/apify-docs/issues).\\n > The old API Documentation is still [available here](https://docs.apify.com/api/v2-old).\\n \\nThe Apify API (version 2) provides programmatic access to the [Apify\\nplatform](https://docs.apify.com). The API is organized\\naround [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer)\\n HTTP endpoints.\\n\\nYou can download the complete OpenAPI schema of Apify API in the [YAML](http://docs.apify.com/api/openapi.yaml) or [JSON](http://docs.apify.com/api/openapi.json) formats. The source code is also available on [GitHub](https://github.com/apify/apify-docs/tree/master/apify-api/openapi).\\n \\nAll requests and responses (including errors) are encoded in\\n[JSON](http://www.json.org/) format with UTF-8 encoding,\\nwith a few exceptions that are explicitly described in the reference.\\n\\nTo access the API using [Node.js](https://nodejs.org/en/), we recommend the\\n[`apify-client`](https://docs.apify.com/api/client/js) [NPM\\n package](https://www.npmjs.com/package/apify-client).\\n\\nTo access the API using [Python](https://www.python.org/), we recommend the\\n[`apify-client`](https://docs.apify.com/api/client/python) [PyPI\\npackage](https://pypi.org/project/apify-client/).\\nThe clients' functions correspond to the API endpoints and have the same\\nparameters. This simplifies development of apps that depend on the Apify\\nplatform.\\n\\n**Note:** All requests with JSON payloads need to specify the `Content-Type:\\napplication/json` HTTP header!\\nAll API endpoints support the `method` query parameter that can override the\\nHTTP method.\\nFor example, if you want to call a POST endpoint using a GET request, simply\\nadd the query parameter `method=POST` to the URL and send the GET request.\\nThis feature is especially useful if you want to call Apify API endpoints\\nfrom services that can only send GET requests.\\n\\n## Authentication\\n <span id=\\\"/introduction/authentication\\\"></span>\\n\\nYou can find your API token on the\\n[Integrations](https://console.apify.com/account#/integrations) page in the\\nApify Console.\\n\\nTo use your token in a request, either:\\n\\n- Add the token to your request's `Authorization` header as `Bearer <token>`.\\nE.g., `Authorization: Bearer xxxxxxx`.\\n[More info](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization).\\n (Recommended).\\n- Add it as the `token` parameter to your request URL. (Less secure).\\n \\nUsing your token in the request header is more secure than using it as a URL\\n parameter because URLs are often stored\\nin browser history and server logs. This creates a chance for someone\\nunauthorized to access your API token.\\n\\n**Do not share your API token or password with untrusted parties.**\\n\\nFor more information, see our\\n[integrations](https://docs.apify.com/platform/integrations) documentation.\\n \\n## Basic usage\\n<span id=\\\"/introduction/basic-usage\\\"></span>\\n\\nTo run an Actor, send a POST request to the [Run\\nActor](#/reference/actors/run-collection/run-actor) endpoint using either the\\nActor ID code (e.g. `vKg4IjxZbEYTYeW8T`) or its name (e.g.\\n`janedoe~my-actor`):\\n\\n`https://api.apify.com/v2/acts/[actor_id]/runs`\\n \\nIf the Actor is not runnable anonymously, you will receive a 401 or 403\\n[response code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).\\nThis means you need to add your [secret API\\ntoken](https://console.apify.com/account#/integrations) to the request's\\n`Authorization` header ([recommended](#/introduction/authentication)) or as a\\nURL query parameter `?token=[your_token]` (less secure).\\n\\nOptionally, you can include the query parameters described in the [Run\\nActor](#/reference/actors/run-collection/run-actor) section to customize your\\nrun.\\n\\nIf you're using Node.js, the best way to run an Actor is using the\\n`Apify.call()` method from the [Apify\\nSDK](https://sdk.apify.com/docs/api/apify#apifycallactid-input-options). It\\nruns the Actor using the account you are currently logged into (determined\\n by the [secret API token](https://console.apify.com/account#/integrations)).\\n The result is an [Actor run\\nobject](https://sdk.apify.com/docs/typedefs/actor-run) and its output (if\\nany).\\n\\nA typical workflow is as follows:\\n\\n1. Run an Actor or task using the [Run\\nActor](#/reference/actors/run-collection/run-actor) or [Run\\ntask](#/reference/actor-tasks/run-collection/run-task) API endpoints.\\n 2. Monitor the Actor run by periodically polling its progress using the [Get\\n run](#/reference/actor-runs/run-object-and-its-storages/get-run) API\\nendpoint.\\n 3. Fetch the results from the [Get\\nitems](#/reference/datasets/item-collection/get-items) API endpoint using the\\n`defaultDatasetId`, which you receive in the Run request response.\\nAdditional data may be stored in a key-value store. You can fetch them from\\nthe [Get record](#/reference/key-value-stores/record/get-record) API endpoint\\n using the `defaultKeyValueStoreId` and the store's `key`.\\n\\n**Note**: Instead of periodic polling, you can also run your\\n[Actor](#/reference/actors/run-actor-synchronously) or\\n[task](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\nsynchronously. This will ensure that the request waits for 300 seconds (5\\nminutes) for the run to finish and returns its output. If the run takes\\nlonger, the request will time out and throw an error.\\n\\n## Response structure\\n<span id=\\\"/introduction/response-structure\\\"></span>\\n\\nMost API endpoints return a JSON object with the `data` property:\\n\\n```\\n{\\n    \\\"data\\\": {\\n        ...\\n    }\\n}\\n```\\n\\nHowever, there are a few explicitly described exceptions, such as\\nDataset [Get items](#/reference/datasets/item-collection/get-items) or\\nKey-value store [Get record](#/reference/key-value-stores/record/get-record)\\n API endpoints, which return data in other formats.\\nIn case of an error, the response has the HTTP status code in the range of\\n4xx or 5xx and the `data` property is replaced with `error`. For example:\\n\\n```\\n{\\n    \\\"error\\\": {\\n        \\\"type\\\": \\\"record-not-found\\\",\\n        \\\"message\\\": \\\"Store was not found.\\\"\\n    }\\n }\\n```\\n\\nSee [Errors](#/introduction/errors) for more details.\\n\\n## Pagination\\n <span id=\\\"/introduction/pagination\\\"></span>\\n\\nAll API endpoints that return a list of records\\n(e.g. [Get list of\\nActors](#/reference/actors/actor-collection/get-list-of-actors))\\n enforce pagination in order to limit the size of their responses.\\n\\nMost of these API endpoints are paginated using the `offset` and `limit`\\nquery parameters.\\n The only exception is [Get list of\\nkeys](#/reference/key-value-stores/key-collection/get-list-of-keys),\\n which is paginated using the `exclusiveStartKey` query parameter.\\n\\n**IMPORTANT**: Each API endpoint that supports pagination enforces a certain\\nmaximum value for the `limit` parameter,\\nin order to reduce the load on Apify servers.\\nThe maximum limit could change in future so you should never\\nrely on a specific value and check the responses of these API endpoints.\\n\\n### Using offset\\n<span id=\\\"/introduction/pagination/using-offset\\\"></span>\\n\\nMost API endpoints that return a list of records enable pagination using the\\nfollowing query parameters:\\n\\n<table>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>Limits the response to contain a specific maximum number of items, e.g. <code>limit=20</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>offset</code></td>\\n    <td>Skips a number of items from the beginning of the list, e.g. <code>offset=100</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>desc</code></td>\\n    <td>\\n    By default, items are sorted in the order in which they were created or added to the list.\\n    This feature is useful when fetching all the items, because it ensures that items\\n    created after the client started the pagination will not be skipped.\\n    If you specify the <code>desc=1</code> parameter, the items will be returned in the reverse order,\\n    i.e. from the newest to the oldest items.\\n    </td>\\n  </tr>\\n</table>\\n\\nThe response of these API endpoints is always a JSON object with the\\nfollowing structure:\\n\\n```\\n{\\n    \\\"data\\\": {\\n        \\\"total\\\": 2560,\\n        \\\"offset\\\": 250,\\n        \\\"limit\\\": 1000,\\n        \\\"count\\\": 1000,\\n        \\\"desc\\\": false,\\n        \\\"items\\\": [\\n            { 1st object },\\n            { 2nd object },\\n            ...\\n            { 1000th object }\\n        ]\\n    }\\n}\\n```\\n\\nThe following table describes the meaning of the response properties:\\n\\n<table>\\n  <tr>\\n    <th>Property</th>\\n    <th>Description</th>\\n  </tr>\\n  <tr>\\n    <td><code>total</code></td>\\n    <td>The total number of items available in the list.</td>\\n  </tr>\\n  <tr>\\n    <td><code>offset</code></td>\\n    <td>The number of items that were skipped at the start.\\n    This is equal to the <code>offset</code> query parameter if it was provided, otherwise it is <code>0</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>The maximum number of items that can be returned in the HTTP response.\\n    It equals to the <code>limit</code> query parameter if it was provided or\\n    the maximum limit enforced for the particular API endpoint, whichever is smaller.</td>\\n  </tr>\\n  <tr>\\n    <td><code>count</code></td>\\n    <td>The actual number of items returned in the HTTP response.</td>\\n  </tr>\\n  <tr>\\n    <td><code>desc</code></td>\\n    <td><code>true</code> if data were requested in descending order and <code>false</code> otherwise.</td>\\n  </tr>\\n  <tr>\\n    <td><code>items</code></td>\\n    <td>An array of requested items.</td>\\n  </tr>\\n</table>\\n\\n### Using key\\n<span id=\\\"/introduction/pagination/using-key\\\"></span>\\n\\nThe records in the [key-value\\n store](https://docs.apify.com/platform/storage/key-value-store)\\nare not ordered based on numerical indexes,\\nbut rather by their keys in the UTF-8 binary order.\\n Therefore the [Get list of\\nkeys](#/reference/key-value-stores/key-collection/get-list-of-keys)\\n API endpoint only supports pagination using the following query parameters:\\n\\n<table>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>Limits the response to contain a specific maximum number items, e.g. <code>limit=20</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>exclusiveStartKey</code></td>\\n    <td>Skips all records with keys up to the given key including the given key,\\n    in the UTF-8 binary order.</td>\\n  </tr>\\n</table>\\n\\nThe response of the API endpoint is always a JSON object with following\\nstructure:\\n\\n```\\n{\\n    \\\"data\\\": {\\n        \\\"limit\\\": 1000,\\n        \\\"isTruncated\\\": true,\\n        \\\"exclusiveStartKey\\\" : \\\"my-key\\\",\\n        \\\"nextExclusiveStartKey\\\": \\\"some-other-key\\\",\\n        \\\"items\\\": [\\n            { 1st object },\\n            { 2nd object },\\n            ...\\n            { 1000th object }\\n        ]\\n    }\\n}\\n```\\n\\nThe following table describes the meaning of the response properties:\\n\\n<table>\\n  <tr>\\n    <th>Property</th>\\n    <th>Description</th>\\n  </tr>\\n  <tr>\\n    <td><code>limit</code></td>\\n    <td>The maximum number of items that can be returned in the HTTP response.\\n    It equals to the <code>limit</code> query parameter if it was provided or\\n    the maximum limit enforced for the particular endpoint, whichever is smaller.</td>\\n  </tr>\\n  <tr>\\n    <td><code>isTruncated</code></td>\\n    <td><code>true</code> if there are more items left to be queried. Otherwise <code>false</code>.</td>\\n  </tr>\\n  <tr>\\n    <td><code>exclusiveStartKey</code></td>\\n    <td>The last key that was skipped at the start. Is `null` for the first page.</td>\\n  </tr>\\n  <tr>\\n    <td><code>nextExclusiveStartKey</code></td>\\n    <td>The value for the <code>exclusiveStartKey</code> parameter to query the next page of items.</td>\\n  </tr>\\n</table>\\n\\n## Errors\\n<span id=\\\"/introduction/errors\\\"></span>\\n\\nThe Apify API uses common HTTP status codes: `2xx` range for success, `4xx`\\nrange for errors caused by the caller\\n(invalid requests) and `5xx` range for server errors (these are rare).\\nEach error response contains a JSON object defining the `error` property,\\nwhich is an object with\\nthe `type` and `message` properties that contain the error code and a\\nhuman-readable error description, respectively.\\n\\nFor example:\\n\\n```\\n{\\n    \\\"error\\\": {\\n        \\\"type\\\": \\\"record-not-found\\\",\\n        \\\"message\\\": \\\"Store was not found.\\\"\\n    }\\n}\\n ```\\n\\nHere is the table of the most common errors that can occur for many API\\nendpoints:\\n\\n<table>\\n  <tr>\\n    <th>status</th>\\n    <th>type</th>\\n    <th>message</th>\\n  </tr>\\n  <tr>\\n    <td><code>400</code></td>\\n    <td><code>invalid-request</code></td>\\n    <td>POST data must be a JSON object</td>\\n  </tr>\\n  <tr>\\n    <td><code>400</code></td>\\n    <td><code>invalid-value</code></td>\\n    <td>Invalid value provided: Comments required</td>\\n  </tr>\\n  <tr>\\n    <td><code>400</code></td>\\n    <td><code>invalid-record-key</code></td>\\n    <td>Record key contains invalid character</td>\\n  </tr>\\n  <tr>\\n    <td><code>401</code></td>\\n    <td><code>token-not-provided</code></td>\\n    <td>Authentication token was not provided</td>\\n  </tr>\\n  <tr>\\n    <td><code>404</code></td>\\n    <td><code>record-not-found</code></td>\\n    <td>Store was not found</td>\\n  </tr>\\n  <tr>\\n    <td><code>429</code></td>\\n    <td><code>rate-limit-exceeded</code></td>\\n    <td>You have exceeded the rate limit of 30 requests per second</td>\\n  </tr>\\n  <tr>\\n    <td><code>405</code></td>\\n    <td><code>method-not-allowed</code></td>\\n    <td>This API endpoint can only be accessed using the following HTTP methods: OPTIONS, POST</td>\\n  </tr>\\n</table>\\n \\n## Rate limiting\\n<span id=\\\"/introduction/rate-limiting\\\"></span>\\n\\nAll API endpoints limit the rate of requests in order to prevent overloading of Apify servers by misbehaving clients.\\n\\nThere are two kinds of rate limits - a global rate limit and a per-resource rate limit.\\n\\n### Global rate limit\\n<span id=\\\"/introduction/rate-limiting/global-rate-limit\\\"></span>\\n\\nThe global rate limit is set to _250 000 requests per minute_.\\nFor [authenticated](#/introduction/authentication) requests, it is counted per user,\\nand for unauthenticated requests, it is counted per IP address.\\n\\n### Per-resource rate limit\\n<span id=\\\"/introduction/rate-limiting/per-resource-rate-limit\\\"></span>\\n\\nThe default per-resource rate limit is _30 requests per second per resource_, which in this context means a single Actor, a single Actor run, a single dataset, single key-value store etc.\\nThe default rate limit is applied to every API endpoint except a few select ones, which have higher rate limits.\\nEach API endpoint returns its rate limit in `X-RateLimit-Limit` header.\\n\\nThese endpoints have a rate limit of _100 requests per second per resource_:\\n\\n* CRUD ([get](#/reference/key-value-stores/record/get-record),\\n  [put](#/reference/key-value-stores/record/put-record),\\n  [delete](#/reference/key-value-stores/record/delete-record))\\n  operations on key-value store records\\n\\nThese endpoints have a rate limit of _200 requests per second per resource_:\\n* [Run Actor](#/reference/actors/run-collection/run-actor)\\n * [Run Actor task asynchronously](#/reference/actor-tasks/runs-collection/run-task-asynchronously)\\n * [Run Actor task synchronously](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\n * [Metamorph Actor run](#/reference/actors/metamorph-run/metamorph-run)\\n* [Push items](#/reference/datasets/item-collection/put-items) to dataset\\n* CRUD\\n  ([add](#/reference/request-queues/request-collection/add-request),\\n  [get](#/reference/request-queues/request-collection/get-request),\\n  [update](#/reference/request-queues/request-collection/update-request),\\n  [delete](#/reference/request-queues/request-collection/delete-request))\\n  operations on requests in request queues\\n\\n### Rate limit exceeded errors\\n <span id=\\\"/introduction/rate-limiting/rate-limit-exceeded-errors\\\"></span>\\n\\n If the client is sending too many requests, the API endpoints respond with the HTTP status code `429 Too Many Requests`\\nand the following body:\\n\\n```\\n{\\n    \\\"error\\\": {\\n        \\\"type\\\": \\\"rate-limit-exceeded\\\",\\n        \\\"message\\\": \\\"You have exceeded the rate limit of ... requests per second\\\"\\n    }\\n}\\n ```\\n\\n### Retrying rate-limited requests with exponential backoff\\n<span id=\\\"/introduction/rate-limiting/retrying-rate-limited-requests-with-exponential-backoff\\\"></span>\\n\\nIf the client receives the rate limit error, it should wait a certain period of time and then retry the request.\\nIf the error happens again, the client should double the wait period and retry the request,\\nand so on. This algorithm is known as _exponential backoff_\\nand it can be described using the following pseudo-code:\\n\\n1. Define a variable `DELAY=500`\\n2. Send the HTTP request to the API endpoint\\n3. If the response has status code not equal to `429` then you are done. Otherwise:\\n   * Wait for a period of time chosen randomly from the interval `DELAY` to `2*DELAY` milliseconds\\n   * Double the future wait period by setting `DELAY = 2*DELAY`\\n   * Continue with step 2\\n\\nIf all requests sent by the client implement the above steps,\\nthe client will automatically use the maximum available bandwidth for its requests.\\n\\nNote that the Apify API clients [for JavaScript](https://docs.apify.com/api/client/js)\\nand [for Python](https://docs.apify.com/api/client/python)\\n use the exponential backoff algorithm transparently, so that you do not need to worry about it.\\n\\n## Referring to resources\\n<span id=\\\"/introduction/referring-to-resources\\\"></span>\\n\\nThere are three main ways to refer to a resource you're accessing via API.\\n\\n- the resource ID (e.g. `iKkPcIgVvwmztduf8`)\\n- `username~resourcename` - when using this access method, you will need to\\nuse your API token, and access will only work if you have the correct\\npermissions.\\n- `~resourcename` - for this, you need to use an API token, and the\\n`resourcename` refers to a resource in the API token owner's account.\\n\", \"diff\": \"--- \\n+++ \\n@@ -1,475 +1 @@\\n-\\n-> **UPDATE 2025-01-14:**\\n-> We have rolled out this new Apify API Documentation. In case of any issues, please [report here](https://github.com/apify/apify-docs/issues).\\n- > The old API Documentation is still [available here](https://docs.apify.com/api/v2-old).\\n- \\n-The Apify API (version 2) provides programmatic access to the [Apify\\n-platform](https://docs.apify.com). The API is organized\\n-around [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer)\\n- HTTP endpoints.\\n-\\n-You can download the complete OpenAPI schema of Apify API in the [YAML](http://docs.apify.com/api/openapi.yaml) or [JSON](http://docs.apify.com/api/openapi.json) formats. The source code is also available on [GitHub](https://github.com/apify/apify-docs/tree/master/apify-api/openapi).\\n- \\n-All requests and responses (including errors) are encoded in\\n-[JSON](http://www.json.org/) format with UTF-8 encoding,\\n-with a few exceptions that are explicitly described in the reference.\\n-\\n-To access the API using [Node.js](https://nodejs.org/en/), we recommend the\\n-[`apify-client`](https://docs.apify.com/api/client/js) [NPM\\n- package](https://www.npmjs.com/package/apify-client).\\n-\\n-To access the API using [Python](https://www.python.org/), we recommend the\\n-[`apify-client`](https://docs.apify.com/api/client/python) [PyPI\\n-package](https://pypi.org/project/apify-client/).\\n-The clients' functions correspond to the API endpoints and have the same\\n-parameters. This simplifies development of apps that depend on the Apify\\n-platform.\\n-\\n-**Note:** All requests with JSON payloads need to specify the `Content-Type:\\n-application/json` HTTP header!\\n-All API endpoints support the `method` query parameter that can override the\\n-HTTP method.\\n-For example, if you want to call a POST endpoint using a GET request, simply\\n-add the query parameter `method=POST` to the URL and send the GET request.\\n-This feature is especially useful if you want to call Apify API endpoints\\n-from services that can only send GET requests.\\n-\\n-## Authentication\\n- <span id=\\\"/introduction/authentication\\\"></span>\\n-\\n-You can find your API token on the\\n-[Integrations](https://console.apify.com/account#/integrations) page in the\\n-Apify Console.\\n-\\n-To use your token in a request, either:\\n-\\n-- Add the token to your request's `Authorization` header as `Bearer <token>`.\\n-E.g., `Authorization: Bearer xxxxxxx`.\\n-[More info](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization).\\n- (Recommended).\\n-- Add it as the `token` parameter to your request URL. (Less secure).\\n- \\n-Using your token in the request header is more secure than using it as a URL\\n- parameter because URLs are often stored\\n-in browser history and server logs. This creates a chance for someone\\n-unauthorized to access your API token.\\n-\\n-**Do not share your API token or password with untrusted parties.**\\n-\\n-For more information, see our\\n-[integrations](https://docs.apify.com/platform/integrations) documentation.\\n- \\n-## Basic usage\\n-<span id=\\\"/introduction/basic-usage\\\"></span>\\n-\\n-To run an Actor, send a POST request to the [Run\\n-Actor](#/reference/actors/run-collection/run-actor) endpoint using either the\\n-Actor ID code (e.g. `vKg4IjxZbEYTYeW8T`) or its name (e.g.\\n-`janedoe~my-actor`):\\n-\\n-`https://api.apify.com/v2/acts/[actor_id]/runs`\\n- \\n-If the Actor is not runnable anonymously, you will receive a 401 or 403\\n-[response code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).\\n-This means you need to add your [secret API\\n-token](https://console.apify.com/account#/integrations) to the request's\\n-`Authorization` header ([recommended](#/introduction/authentication)) or as a\\n-URL query parameter `?token=[your_token]` (less secure).\\n-\\n-Optionally, you can include the query parameters described in the [Run\\n-Actor](#/reference/actors/run-collection/run-actor) section to customize your\\n-run.\\n-\\n-If you're using Node.js, the best way to run an Actor is using the\\n-`Apify.call()` method from the [Apify\\n-SDK](https://sdk.apify.com/docs/api/apify#apifycallactid-input-options). It\\n-runs the Actor using the account you are currently logged into (determined\\n- by the [secret API token](https://console.apify.com/account#/integrations)).\\n- The result is an [Actor run\\n-object](https://sdk.apify.com/docs/typedefs/actor-run) and its output (if\\n-any).\\n-\\n-A typical workflow is as follows:\\n-\\n-1. Run an Actor or task using the [Run\\n-Actor](#/reference/actors/run-collection/run-actor) or [Run\\n-task](#/reference/actor-tasks/run-collection/run-task) API endpoints.\\n- 2. Monitor the Actor run by periodically polling its progress using the [Get\\n- run](#/reference/actor-runs/run-object-and-its-storages/get-run) API\\n-endpoint.\\n- 3. Fetch the results from the [Get\\n-items](#/reference/datasets/item-collection/get-items) API endpoint using the\\n-`defaultDatasetId`, which you receive in the Run request response.\\n-Additional data may be stored in a key-value store. You can fetch them from\\n-the [Get record](#/reference/key-value-stores/record/get-record) API endpoint\\n- using the `defaultKeyValueStoreId` and the store's `key`.\\n-\\n-**Note**: Instead of periodic polling, you can also run your\\n-[Actor](#/reference/actors/run-actor-synchronously) or\\n-[task](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\n-synchronously. This will ensure that the request waits for 300 seconds (5\\n-minutes) for the run to finish and returns its output. If the run takes\\n-longer, the request will time out and throw an error.\\n-\\n-## Response structure\\n-<span id=\\\"/introduction/response-structure\\\"></span>\\n-\\n-Most API endpoints return a JSON object with the `data` property:\\n-\\n-```\\n-{\\n-    \\\"data\\\": {\\n-        ...\\n-    }\\n-}\\n-```\\n-\\n-However, there are a few explicitly described exceptions, such as\\n-Dataset [Get items](#/reference/datasets/item-collection/get-items) or\\n-Key-value store [Get record](#/reference/key-value-stores/record/get-record)\\n- API endpoints, which return data in other formats.\\n-In case of an error, the response has the HTTP status code in the range of\\n-4xx or 5xx and the `data` property is replaced with `error`. For example:\\n-\\n-```\\n-{\\n-    \\\"error\\\": {\\n-        \\\"type\\\": \\\"record-not-found\\\",\\n-        \\\"message\\\": \\\"Store was not found.\\\"\\n-    }\\n- }\\n-```\\n-\\n-See [Errors](#/introduction/errors) for more details.\\n-\\n-## Pagination\\n- <span id=\\\"/introduction/pagination\\\"></span>\\n-\\n-All API endpoints that return a list of records\\n-(e.g. [Get list of\\n-Actors](#/reference/actors/actor-collection/get-list-of-actors))\\n- enforce pagination in order to limit the size of their responses.\\n-\\n-Most of these API endpoints are paginated using the `offset` and `limit`\\n-query parameters.\\n- The only exception is [Get list of\\n-keys](#/reference/key-value-stores/key-collection/get-list-of-keys),\\n- which is paginated using the `exclusiveStartKey` query parameter.\\n-\\n-**IMPORTANT**: Each API endpoint that supports pagination enforces a certain\\n-maximum value for the `limit` parameter,\\n-in order to reduce the load on Apify servers.\\n-The maximum limit could change in future so you should never\\n-rely on a specific value and check the responses of these API endpoints.\\n-\\n-### Using offset\\n-<span id=\\\"/introduction/pagination/using-offset\\\"></span>\\n-\\n-Most API endpoints that return a list of records enable pagination using the\\n-following query parameters:\\n-\\n-<table>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>Limits the response to contain a specific maximum number of items, e.g. <code>limit=20</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>offset</code></td>\\n-    <td>Skips a number of items from the beginning of the list, e.g. <code>offset=100</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>desc</code></td>\\n-    <td>\\n-    By default, items are sorted in the order in which they were created or added to the list.\\n-    This feature is useful when fetching all the items, because it ensures that items\\n-    created after the client started the pagination will not be skipped.\\n-    If you specify the <code>desc=1</code> parameter, the items will be returned in the reverse order,\\n-    i.e. from the newest to the oldest items.\\n-    </td>\\n-  </tr>\\n-</table>\\n-\\n-The response of these API endpoints is always a JSON object with the\\n-following structure:\\n-\\n-```\\n-{\\n-    \\\"data\\\": {\\n-        \\\"total\\\": 2560,\\n-        \\\"offset\\\": 250,\\n-        \\\"limit\\\": 1000,\\n-        \\\"count\\\": 1000,\\n-        \\\"desc\\\": false,\\n-        \\\"items\\\": [\\n-            { 1st object },\\n-            { 2nd object },\\n-            ...\\n-            { 1000th object }\\n-        ]\\n-    }\\n-}\\n-```\\n-\\n-The following table describes the meaning of the response properties:\\n-\\n-<table>\\n-  <tr>\\n-    <th>Property</th>\\n-    <th>Description</th>\\n-  </tr>\\n-  <tr>\\n-    <td><code>total</code></td>\\n-    <td>The total number of items available in the list.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>offset</code></td>\\n-    <td>The number of items that were skipped at the start.\\n-    This is equal to the <code>offset</code> query parameter if it was provided, otherwise it is <code>0</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>The maximum number of items that can be returned in the HTTP response.\\n-    It equals to the <code>limit</code> query parameter if it was provided or\\n-    the maximum limit enforced for the particular API endpoint, whichever is smaller.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>count</code></td>\\n-    <td>The actual number of items returned in the HTTP response.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>desc</code></td>\\n-    <td><code>true</code> if data were requested in descending order and <code>false</code> otherwise.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>items</code></td>\\n-    <td>An array of requested items.</td>\\n-  </tr>\\n-</table>\\n-\\n-### Using key\\n-<span id=\\\"/introduction/pagination/using-key\\\"></span>\\n-\\n-The records in the [key-value\\n- store](https://docs.apify.com/platform/storage/key-value-store)\\n-are not ordered based on numerical indexes,\\n-but rather by their keys in the UTF-8 binary order.\\n- Therefore the [Get list of\\n-keys](#/reference/key-value-stores/key-collection/get-list-of-keys)\\n- API endpoint only supports pagination using the following query parameters:\\n-\\n-<table>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>Limits the response to contain a specific maximum number items, e.g. <code>limit=20</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>exclusiveStartKey</code></td>\\n-    <td>Skips all records with keys up to the given key including the given key,\\n-    in the UTF-8 binary order.</td>\\n-  </tr>\\n-</table>\\n-\\n-The response of the API endpoint is always a JSON object with following\\n-structure:\\n-\\n-```\\n-{\\n-    \\\"data\\\": {\\n-        \\\"limit\\\": 1000,\\n-        \\\"isTruncated\\\": true,\\n-        \\\"exclusiveStartKey\\\" : \\\"my-key\\\",\\n-        \\\"nextExclusiveStartKey\\\": \\\"some-other-key\\\",\\n-        \\\"items\\\": [\\n-            { 1st object },\\n-            { 2nd object },\\n-            ...\\n-            { 1000th object }\\n-        ]\\n-    }\\n-}\\n-```\\n-\\n-The following table describes the meaning of the response properties:\\n-\\n-<table>\\n-  <tr>\\n-    <th>Property</th>\\n-    <th>Description</th>\\n-  </tr>\\n-  <tr>\\n-    <td><code>limit</code></td>\\n-    <td>The maximum number of items that can be returned in the HTTP response.\\n-    It equals to the <code>limit</code> query parameter if it was provided or\\n-    the maximum limit enforced for the particular endpoint, whichever is smaller.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>isTruncated</code></td>\\n-    <td><code>true</code> if there are more items left to be queried. Otherwise <code>false</code>.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>exclusiveStartKey</code></td>\\n-    <td>The last key that was skipped at the start. Is `null` for the first page.</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>nextExclusiveStartKey</code></td>\\n-    <td>The value for the <code>exclusiveStartKey</code> parameter to query the next page of items.</td>\\n-  </tr>\\n-</table>\\n-\\n-## Errors\\n-<span id=\\\"/introduction/errors\\\"></span>\\n-\\n-The Apify API uses common HTTP status codes: `2xx` range for success, `4xx`\\n-range for errors caused by the caller\\n-(invalid requests) and `5xx` range for server errors (these are rare).\\n-Each error response contains a JSON object defining the `error` property,\\n-which is an object with\\n-the `type` and `message` properties that contain the error code and a\\n-human-readable error description, respectively.\\n-\\n-For example:\\n-\\n-```\\n-{\\n-    \\\"error\\\": {\\n-        \\\"type\\\": \\\"record-not-found\\\",\\n-        \\\"message\\\": \\\"Store was not found.\\\"\\n-    }\\n-}\\n- ```\\n-\\n-Here is the table of the most common errors that can occur for many API\\n-endpoints:\\n-\\n-<table>\\n-  <tr>\\n-    <th>status</th>\\n-    <th>type</th>\\n-    <th>message</th>\\n-  </tr>\\n-  <tr>\\n-    <td><code>400</code></td>\\n-    <td><code>invalid-request</code></td>\\n-    <td>POST data must be a JSON object</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>400</code></td>\\n-    <td><code>invalid-value</code></td>\\n-    <td>Invalid value provided: Comments required</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>400</code></td>\\n-    <td><code>invalid-record-key</code></td>\\n-    <td>Record key contains invalid character</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>401</code></td>\\n-    <td><code>token-not-provided</code></td>\\n-    <td>Authentication token was not provided</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>404</code></td>\\n-    <td><code>record-not-found</code></td>\\n-    <td>Store was not found</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>429</code></td>\\n-    <td><code>rate-limit-exceeded</code></td>\\n-    <td>You have exceeded the rate limit of 30 requests per second</td>\\n-  </tr>\\n-  <tr>\\n-    <td><code>405</code></td>\\n-    <td><code>method-not-allowed</code></td>\\n-    <td>This API endpoint can only be accessed using the following HTTP methods: OPTIONS, POST</td>\\n-  </tr>\\n-</table>\\n- \\n-## Rate limiting\\n-<span id=\\\"/introduction/rate-limiting\\\"></span>\\n-\\n-All API endpoints limit the rate of requests in order to prevent overloading of Apify servers by misbehaving clients.\\n-\\n-There are two kinds of rate limits - a global rate limit and a per-resource rate limit.\\n-\\n-### Global rate limit\\n-<span id=\\\"/introduction/rate-limiting/global-rate-limit\\\"></span>\\n-\\n-The global rate limit is set to _250 000 requests per minute_.\\n-For [authenticated](#/introduction/authentication) requests, it is counted per user,\\n-and for unauthenticated requests, it is counted per IP address.\\n-\\n-### Per-resource rate limit\\n-<span id=\\\"/introduction/rate-limiting/per-resource-rate-limit\\\"></span>\\n-\\n-The default per-resource rate limit is _30 requests per second per resource_, which in this context means a single Actor, a single Actor run, a single dataset, single key-value store etc.\\n-The default rate limit is applied to every API endpoint except a few select ones, which have higher rate limits.\\n-Each API endpoint returns its rate limit in `X-RateLimit-Limit` header.\\n-\\n-These endpoints have a rate limit of _100 requests per second per resource_:\\n-\\n-* CRUD ([get](#/reference/key-value-stores/record/get-record),\\n-  [put](#/reference/key-value-stores/record/put-record),\\n-  [delete](#/reference/key-value-stores/record/delete-record))\\n-  operations on key-value store records\\n-\\n-These endpoints have a rate limit of _200 requests per second per resource_:\\n-* [Run Actor](#/reference/actors/run-collection/run-actor)\\n- * [Run Actor task asynchronously](#/reference/actor-tasks/runs-collection/run-task-asynchronously)\\n- * [Run Actor task synchronously](#/reference/actor-tasks/runs-collection/run-task-synchronously)\\n- * [Metamorph Actor run](#/reference/actors/metamorph-run/metamorph-run)\\n-* [Push items](#/reference/datasets/item-collection/put-items) to dataset\\n-* CRUD\\n-  ([add](#/reference/request-queues/request-collection/add-request),\\n-  [get](#/reference/request-queues/request-collection/get-request),\\n-  [update](#/reference/request-queues/request-collection/update-request),\\n-  [delete](#/reference/request-queues/request-collection/delete-request))\\n-  operations on requests in request queues\\n-\\n-### Rate limit exceeded errors\\n- <span id=\\\"/introduction/rate-limiting/rate-limit-exceeded-errors\\\"></span>\\n-\\n- If the client is sending too many requests, the API endpoints respond with the HTTP status code `429 Too Many Requests`\\n-and the following body:\\n-\\n-```\\n-{\\n-    \\\"error\\\": {\\n-        \\\"type\\\": \\\"rate-limit-exceeded\\\",\\n-        \\\"message\\\": \\\"You have exceeded the rate limit of ... requests per second\\\"\\n-    }\\n-}\\n- ```\\n-\\n-### Retrying rate-limited requests with exponential backoff\\n-<span id=\\\"/introduction/rate-limiting/retrying-rate-limited-requests-with-exponential-backoff\\\"></span>\\n-\\n-If the client receives the rate limit error, it should wait a certain period of time and then retry the request.\\n-If the error happens again, the client should double the wait period and retry the request,\\n-and so on. This algorithm is known as _exponential backoff_\\n-and it can be described using the following pseudo-code:\\n-\\n-1. Define a variable `DELAY=500`\\n-2. Send the HTTP request to the API endpoint\\n-3. If the response has status code not equal to `429` then you are done. Otherwise:\\n-   * Wait for a period of time chosen randomly from the interval `DELAY` to `2*DELAY` milliseconds\\n-   * Double the future wait period by setting `DELAY = 2*DELAY`\\n-   * Continue with step 2\\n-\\n-If all requests sent by the client implement the above steps,\\n-the client will automatically use the maximum available bandwidth for its requests.\\n-\\n-Note that the Apify API clients [for JavaScript](https://docs.apify.com/api/client/js)\\n-and [for Python](https://docs.apify.com/api/client/python)\\n- use the exponential backoff algorithm transparently, so that you do not need to worry about it.\\n-\\n-## Referring to resources\\n-<span id=\\\"/introduction/referring-to-resources\\\"></span>\\n-\\n-There are three main ways to refer to a resource you're accessing via API.\\n-\\n-- the resource ID (e.g. `iKkPcIgVvwmztduf8`)\\n-- `username~resourcename` - when using this access method, you will need to\\n-use your API token, and access will only work if you have the correct\\n-permissions.\\n-- `~resourcename` - for this, you need to use an API token, and the\\n-`resourcename` refers to a resource in the API token owner's account.\\n+The Apify API provides programmatic access to the Apify platform, allowing you to manage Actors, runs, datasets, key-value stores, request queues, webhooks, schedules, and more. This RESTful API enables automation of web scraping workflows and integration with the Apify ecosystem.\"}, \"root['info']['version']\": {\"new_value\": \"2.0\", \"old_value\": \"\"}}}",
    "severity": 3,
    "code": "repair-bundled-spec-iteration-diff",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'apiKey' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'httpBearer' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 12
      }
    },
    "message": "OpenAPISpecValidator Error validating spec - list indices must be integers or slices, not str",
    "severity": 1,
    "code": "openapi-spec-validator-error",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `string` but got `null`. [path: tags.8.x-displayName]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        8,
        "x-displayName"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `string` but got `null`. [path: tags.14.x-displayName]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        14,
        "x-displayName"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Version.properties.sourceType.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Version",
        "properties",
        "sourceType",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateActorRequest.properties.defaultRunOptions.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateActorRequest",
        "properties",
        "defaultRunOptions",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Actor.properties.exampleRunInput.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Actor",
        "properties",
        "exampleRunInput",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Actor.properties.taggedBuilds.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Actor",
        "properties",
        "taggedBuilds",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.TaggedBuilds.properties.latest.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TaggedBuilds",
        "properties",
        "latest",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateActorRequest.properties.defaultRunOptions.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateActorRequest",
        "properties",
        "defaultRunOptions",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateOrUpdateVersionRequest.properties.sourceType.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateOrUpdateVersionRequest",
        "properties",
        "sourceType",
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.WebhookShort.properties.lastDispatch.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookShort",
        "properties",
        "lastDispatch",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.WebhookShort.properties.stats.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookShort",
        "properties",
        "stats",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.usage.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "usage",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Build.properties.usageUsd.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "usageUsd",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: components.schemas.Build.properties.actorDefinition.oneOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "actorDefinition",
        "oneOf",
        1,
        "type"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Run.properties.usage.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Run",
        "properties",
        "usage",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Run.properties.usageUsd.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Run",
        "properties",
        "usageUsd",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.TaskShort.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TaskShort",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateTaskRequest.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateTaskRequest",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.CreateTaskRequest.properties.input.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CreateTaskRequest",
        "properties",
        "input",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Task.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Task",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Task.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Task",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Task.properties.input.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Task",
        "properties",
        "input",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateTaskRequest.properties.stats.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateTaskRequest",
        "properties",
        "stats",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateTaskRequest.properties.options.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateTaskRequest",
        "properties",
        "options",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UpdateTaskRequest.properties.input.allOf.0.oneOf.0.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UpdateTaskRequest",
        "properties",
        "input",
        "allOf",
        0,
        "oneOf",
        0,
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Webhook.properties.lastDispatch.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Webhook",
        "properties",
        "lastDispatch",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.Webhook.properties.stats.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Webhook",
        "properties",
        "stats",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.WebhookUpdate.properties.condition.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookUpdate",
        "properties",
        "condition",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleCreateActions.properties.runInput.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleCreateActions",
        "properties",
        "runInput",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleCreateActions.properties.runOptions.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleCreateActions",
        "properties",
        "runOptions",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleResponseDataActions.properties.runInput.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleResponseDataActions",
        "properties",
        "runInput",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.ScheduleResponseDataActions.properties.runOptions.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ScheduleResponseDataActions",
        "properties",
        "runOptions",
        "nullable"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts.post.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}.put.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}.put.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "delete",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/versions.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/versions.post.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/versions/{versionNumber}.put.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "put",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "delete",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}",
        "put",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}",
        "delete",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/webhooks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/webhooks",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/default.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/default",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds/default.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/default",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/{buildId}/openapi.json.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/openapi.json",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/{buildId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds/{buildId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/builds/{buildId}/abort.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/abort",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/builds/{buildId}/abort.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/abort",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: type must be object. [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.get.responses.201.content.application/json.example]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "get",
        "responses",
        201,
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: type must be object. [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.post.responses.201.content.application/json.example]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}/resurrect.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/resurrect",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}/resurrect.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/resurrect",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/last.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/last",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/last.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/last",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}/abort.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/abort",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}/abort.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/abort",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/acts/{actorId}/runs/{runId}/metamorph.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/metamorph",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/acts/{actorId}/runs/{runId}/metamorph.post.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/metamorph",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks.post.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks.post.responses.201.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}.put.requestBody.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}.put.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "delete",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/input.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/input",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/input.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/input",
        "put",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/webhooks.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/webhooks",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example validation errored: \"nullable\" cannot be used without \"type\". [path: paths./v2/actor-tasks/{actorTaskId}/webhooks.get.responses.200.content.application/json.schema]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/webhooks",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./v2/actor-tasks/{actorTaskId}/runs.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/runs",
        "get",
        "responses"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 137,
        "character": 24
      },
      "end": {
        "line": 170,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts.post.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 197,
        "character": 26
      },
      "end": {
        "line": 268,
        "character": 64
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 321,
        "character": 26
      },
      "end": {
        "line": 392,
        "character": 64
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 441,
        "character": 24
      },
      "end": {
        "line": 474,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}.put.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 490,
        "character": 26
      },
      "end": {
        "line": 561,
        "character": 64
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}.put.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 659,
        "character": 26
      },
      "end": {
        "line": 693,
        "character": 87
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/versions.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 739,
        "character": 24
      },
      "end": {
        "line": 742,
        "character": 79
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/versions.post.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions",
        "post",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 876,
        "character": 24
      },
      "end": {
        "line": 893,
        "character": 33
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/versions/{versionNumber}.put.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/versions/{versionNumber}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1601,
        "character": 26
      },
      "end": {
        "line": 1634,
        "character": 42
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1705,
        "character": 26
      },
      "end": {
        "line": 1738,
        "character": 42
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds/default.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/default",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1863,
        "character": 26
      },
      "end": {
        "line": 1896,
        "character": 42
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds/{buildId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1953,
        "character": 26
      },
      "end": {
        "line": 1978,
        "character": 49
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/builds/{buildId}/abort.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/builds/{buildId}/abort",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2268,
        "character": 26
      },
      "end": {
        "line": 2344,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3063,
        "character": 28
      },
      "end": {
        "line": 3066,
        "character": 56
      }
    },
    "message": "\"example\" property type must be object [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.post.responses.201.content.application/json.schema.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "schema",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3070,
        "character": 26
      },
      "end": {
        "line": 3073,
        "character": 54
      }
    },
    "message": "\"example\" property type must be object [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3472,
        "character": 26
      },
      "end": {
        "line": 3475,
        "character": 54
      }
    },
    "message": "\"example\" property type must be object [path: paths./v2/acts/{actorId}/run-sync-get-dataset-items.get.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/run-sync-get-dataset-items",
        "get",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3600,
        "character": 26
      },
      "end": {
        "line": 3676,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}/resurrect.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/resurrect",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3733,
        "character": 26
      },
      "end": {
        "line": 3809,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/last.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/last",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3877,
        "character": 26
      },
      "end": {
        "line": 3953,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4021,
        "character": 26
      },
      "end": {
        "line": 4095,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}/abort.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/abort",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4175,
        "character": 26
      },
      "end": {
        "line": 4257,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/acts/{actorId}/runs/{runId}/metamorph.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/acts/{actorId}/runs/{runId}/metamorph",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4353,
        "character": 26
      },
      "end": {
        "line": 4386,
        "character": 40
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4441,
        "character": 24
      },
      "end": {
        "line": 4447,
        "character": 37
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks.post.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4482,
        "character": 26
      },
      "end": {
        "line": 4501,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4561,
        "character": 26
      },
      "end": {
        "line": 4580,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4628,
        "character": 24
      },
      "end": {
        "line": 4646,
        "character": 34
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}.put.requestBody.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "requestBody",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4670,
        "character": 26
      },
      "end": {
        "line": 4689,
        "character": 38
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}.put.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4964,
        "character": 26
      },
      "end": {
        "line": 5027,
        "character": 46
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}/webhooks.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/webhooks",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5347,
        "character": 26
      },
      "end": {
        "line": 5425,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}/runs.post.responses.201.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/runs",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6542,
        "character": 26
      },
      "end": {
        "line": 6618,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-tasks/{actorTaskId}/runs/last.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-tasks/{actorTaskId}/runs/last",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6804,
        "character": 26
      },
      "end": {
        "line": 6880,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 6951,
        "character": 26
      },
      "end": {
        "line": 7027,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}.put.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7121,
        "character": 26
      },
      "end": {
        "line": 7195,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/abort.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/abort",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7270,
        "character": 26
      },
      "end": {
        "line": 7352,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/metamorph.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/metamorph",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7404,
        "character": 26
      },
      "end": {
        "line": 7480,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/reboot.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/reboot",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 7564,
        "character": 26
      },
      "end": {
        "line": 7640,
        "character": 43
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: paths./v2/actor-runs/{runId}/resurrect.post.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/actor-runs/{runId}/resurrect",
        "post",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8187,
        "character": 25
      },
      "end": {
        "line": 8195,
        "character": 36
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/key-value-stores.post.responses.201.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/key-value-stores",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8868,
        "character": 25
      },
      "end": {
        "line": 8879,
        "character": 32
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/datasets.post.responses.201.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/datasets",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 8942,
        "character": 25
      },
      "end": {
        "line": 8953,
        "character": 32
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/datasets/{datasetId}.get.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/datasets/{datasetId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9017,
        "character": 25
      },
      "end": {
        "line": 9028,
        "character": 32
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/datasets/{datasetId}.put.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/datasets/{datasetId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9775,
        "character": 25
      },
      "end": {
        "line": 9785,
        "character": 46
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/request-queues.post.responses.201.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9865,
        "character": 25
      },
      "end": {
        "line": 9875,
        "character": 46
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/request-queues/{queueId}.get.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 9968,
        "character": 25
      },
      "end": {
        "line": 9978,
        "character": 46
      }
    },
    "message": "\"data\" property must have required property \"consoleUrl\" [path: paths./v2/request-queues/{queueId}.put.responses.200.content.application/json.example.data]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}",
        "put",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 10155,
        "character": 22
      },
      "end": {
        "line": 10158,
        "character": 50
      }
    },
    "message": "\"0\" property must have required property \"uniqueKey\" [path: paths./v2/request-queues/{queueId}/requests/batch.post.responses.201.content.application/json.example.data.processedRequests.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}/requests/batch",
        "post",
        "responses",
        "201",
        "content",
        "application/json",
        "example",
        "data",
        "processedRequests",
        "0"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 10269,
        "character": 22
      },
      "end": {
        "line": 10270,
        "character": 57
      }
    },
    "message": "\"0\" property must have required property \"requestId\" [path: paths./v2/request-queues/{queueId}/requests/batch.delete.responses.204.content.application/json.example.data.processedRequests.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}/requests/batch",
        "delete",
        "responses",
        "204",
        "content",
        "application/json",
        "example",
        "data",
        "processedRequests",
        "0"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 10411,
        "character": 26
      },
      "end": {
        "line": 10451,
        "character": 58
      }
    },
    "message": "reference \"dnjkDMKLmdlkmlkmld\" resolves to more than one schema [path: paths./v2/request-queues/{queueId}/requests.get.responses.200.content.application/json.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/request-queues/{queueId}/requests",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 12366,
        "character": 22
      },
      "end": {
        "line": 12386,
        "character": 48
      }
    },
    "message": "\"0\" property must have required property \"userFullName\" [path: paths./v2/store.get.responses.200.content.application/json.example.data.items.0]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/store",
        "get",
        "responses",
        "200",
        "content",
        "application/json",
        "example",
        "data",
        "items",
        "0"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 13329,
        "character": 22
      },
      "end": {
        "line": 13330,
        "character": 31
      }
    },
    "message": "\"example\" property type must be string [path: components.schemas.ExampleRunInput.properties.body.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ExampleRunInput",
        "properties",
        "body",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 14288,
        "character": 24
      },
      "end": {
        "line": 14288,
        "character": 30
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"number\"?. [path: components.schemas.Build.properties.actorDefinition.oneOf.1.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "properties",
        "actorDefinition",
        "oneOf",
        "1",
        "type"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 14293,
        "character": 18
      },
      "end": {
        "line": 14372,
        "character": 36
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: components.schemas.Build.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Build",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 14951,
        "character": 18
      },
      "end": {
        "line": 14976,
        "character": 41
      }
    },
    "message": "\"nullable\" cannot be used without \"type\" [path: components.schemas.PostAbortBuildResponse.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "PostAbortBuildResponse",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 16082,
        "character": 20
      },
      "end": {
        "line": 16091,
        "character": 38
      }
    },
    "message": "\"0\" property must have required property \"consoleUrl\" [path: components.schemas.GetListOfKeyValueStoresResponse.properties.data.allOf.1.example.items.0]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "GetListOfKeyValueStoresResponse",
        "properties",
        "data",
        "allOf",
        "1",
        "example",
        "items",
        "0"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 17570,
        "character": 26
      },
      "end": {
        "line": 17571,
        "character": 30
      }
    },
    "message": "\"example\" property type must be string,null [path: components.schemas.WebhookDispatch.properties.calls.properties.responseBody.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "WebhookDispatch",
        "properties",
        "calls",
        "properties",
        "responseBody",
        "example"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 18301,
        "character": 20
      },
      "end": {
        "line": 18303,
        "character": 57
      }
    },
    "message": "\"items\" property must be object. [path: components.schemas.Proxy.properties.groups.items]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Proxy",
        "properties",
        "groups",
        "items"
      ],
      "target": "repair-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 18615,
        "character": 31
      },
      "end": {
        "line": 18617,
        "character": 51
      }
    },
    "message": "\"SERVICE_USAGE_ITEM\" property must have required property \"baseUnitPriceUsd\" [path: components.schemas.ServiceUsage.example.SERVICE_USAGE_ITEM]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ServiceUsage",
        "example",
        "SERVICE_USAGE_ITEM"
      ],
      "target": "repair-url_bundled-spec"
    }
  }
]