{
  "openapi": "3.0.3",
  "info": {
    "title": "Probely's API Reference Documentation",
    "version": "1.2.0",
    "description": "Probely's API endpoints complete reference documentation built from the OpenAPI spec. To download the spec, use the Export button on this page.",
    "contact": {
      "email": "support@probely.com",
      "url": "https://probely.com"
    },
    "x-jentic-source-url": "https://developers.probely.com/openapi.yaml"
  },
  "paths": {
    "/account/available-slots/": {
      "get": {
        "operationId": "account_available_slots_retrieve",
        "description": "Endpoint for interacting with a available slots for accounts.",
        "summary": "Retrieve the Number of Free Slots for Targets with Unlimited Scans",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAvailableSlots"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/billing/": {
      "get": {
        "operationId": "account_billing_retrieve",
        "description": " ",
        "summary": "Retrieve Billing Information",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "first_name": "Pedro",
                      "last_name": "Miguel",
                      "company": "Probely",
                      "email": "name@example.org",
                      "address": "Fake street 19",
                      "city": "Lisbon",
                      "country": "Portugal",
                      "zip": "1200-123",
                      "vat_number": "123456789"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "account_billing_update",
        "description": " ",
        "summary": "Update Billing Information",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billing"
              },
              "examples": {
                "Example": {
                  "value": {
                    "first_name": "Pedro",
                    "last_name": "Miguel",
                    "company": "Probely",
                    "email": "name@example.org",
                    "address": "Fake street 19",
                    "city": "Lisbon",
                    "country": "Portugal",
                    "zip": "1200-123",
                    "vat_number": "123456789"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Billing"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Billing"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "first_name": "Pedro",
                      "last_name": "Miguel",
                      "company": "Probely",
                      "email": "name@example.org",
                      "address": "Fake street 19",
                      "city": "Lisbon",
                      "country": "Portugal",
                      "zip": "1200-123",
                      "vat_number": "123456789"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "account_billing_partial_update",
        "description": " ",
        "summary": "Partial Update Billing Information",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBilling"
              },
              "examples": {
                "Example": {
                  "value": {
                    "first_name": "Pedro",
                    "last_name": "Miguel",
                    "company": "Probely",
                    "email": "name@example.org",
                    "address": "Fake street 19",
                    "city": "Lisbon",
                    "country": "Portugal",
                    "zip": "1200-123",
                    "vat_number": "123456789"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBilling"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBilling"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "first_name": "Pedro",
                      "last_name": "Miguel",
                      "company": "Probely",
                      "email": "name@example.org",
                      "address": "Fake street 19",
                      "city": "Lisbon",
                      "country": "Portugal",
                      "zip": "1200-123",
                      "vat_number": "123456789"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/credits/": {
      "get": {
        "operationId": "account_credits_retrieve",
        "description": " ",
        "summary": "Retrieve Credits Details",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCredits"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/credits/top-up/": {
      "post": {
        "operationId": "account_credits_top_up_create",
        "description": " ",
        "summary": "Purchase Credits",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditsPurchase"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreditsPurchase"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreditsPurchase"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargebeeInvoice"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/credits/top-up/settings/": {
      "get": {
        "operationId": "account_credits_top_up_settings_retrieve",
        "description": " ",
        "summary": "Retrieve Credits Auto Top-up Settings",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsAutoTopUp"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "account_credits_top_up_settings_update",
        "description": " ",
        "summary": "Update Credits Auto Top-up Settings",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditsAutoTopUp"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreditsAutoTopUp"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreditsAutoTopUp"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsAutoTopUp"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "account_credits_top_up_settings_partial_update",
        "description": " ",
        "summary": "Partial Update Credits Auto Top-up Settings",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCreditsAutoTopUp"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCreditsAutoTopUp"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCreditsAutoTopUp"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsAutoTopUp"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/credits/usage/": {
      "get": {
        "operationId": "account_credits_usage_list",
        "description": " ",
        "summary": "List Credits Usage",
        "parameters": [
          {
            "in": "query",
            "name": "end_dt",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "earned",
                  "expired",
                  "purchased",
                  "used"
                ]
              }
            },
            "description": "* `purchased` - PURCHASED\n* `expired` - EXPIRED\n* `used` - USED\n* `earned` - EARNED",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "scope__name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_dt",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target__label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nName of the label.  \nThe maximum length is 255 characters.\n",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCreditsUsageList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/credits/usage/report/": {
      "get": {
        "operationId": "account_credits_usage_report_retrieve",
        "description": " ",
        "summary": "Download a CSV file with Credits Usage entries.",
        "parameters": [
          {
            "in": "query",
            "name": "end_dt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Include instances created **before** ISO-formatted timestamp"
          },
          {
            "in": "query",
            "name": "operation",
            "schema": {
              "type": "string",
              "enum": [
                "earned",
                "expired",
                "purchased",
                "used"
              ]
            },
            "description": "Filter by operation. Multiple values are allowed.",
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "start_dt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Include instances created **after** ISO-formatted timestamp"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "string"
            },
            "description": "`Base58` ID to filter instances by the target linked to the entry",
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target__label",
            "schema": {
              "type": "string"
            },
            "description": "Filter by the name of the target's label.",
            "explode": false,
            "style": "form"
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "CSVFileHeaderExample": {
                    "value": "timestamp,description,amount,balance,on_hold,balance,full_balance,scan,target",
                    "summary": "CSV file header example"
                  }
                }
              }
            },
            "description": "Download a CSV file with Credits Usage entries"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/entitlements/": {
      "get": {
        "operationId": "account_entitlements_retrieve",
        "description": "Account entitlements give detailed information of what features are available and what limits the account is subject to.",
        "summary": "Retrieve Entitlements",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entitlement"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/invoices/": {
      "get": {
        "operationId": "account_invoices_list",
        "description": "List past invoices.",
        "summary": "List Invoices",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInvoiceModelList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/invoices/{id}/pdf/": {
      "get": {
        "operationId": "account_invoices_pdf_retrieve",
        "description": " ",
        "summary": "Retrieve Invoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "PDF is not ready for download, try again later."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/subscription/": {
      "get": {
        "operationId": "account_subscription_retrieve",
        "description": "Details about the accounts subscription (subscribed plan, billing cycle, etc..).",
        "summary": "Retrieve Subscription Information",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionOverview"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account/unlimited/": {
      "get": {
        "operationId": "account_unlimited_list",
        "description": " ",
        "summary": "List Targets with Unlimited Scans",
        "parameters": [
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnlimitedScope"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "account_unlimited_update",
        "description": " ",
        "summary": "Bulk Update Targets with Unlimited Scans",
        "parameters": [
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnlimitedScope"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnlimitedScope"
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnlimitedScope"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnlimitedScope"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "account_unlimited_partial_update",
        "description": " ",
        "summary": "Bulk Partial Update Targets with Unlimited Scans",
        "parameters": [
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnlimitedScope"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnlimitedScope"
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnlimitedScope"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnlimitedScope"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "account_unlimited_destroy",
        "description": " ",
        "summary": "Bulk Disable Targets with Unlimited Scans",
        "parameters": [
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnlimitedScope"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-user-roles/": {
      "get": {
        "operationId": "api_user_roles_list",
        "description": " ",
        "summary": "List API User Roles",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "API Users"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserRoleList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_user_roles_create",
        "description": " ",
        "summary": "Create API User Role",
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-user-roles/{id}/": {
      "get": {
        "operationId": "api_user_roles_retrieve",
        "description": " ",
        "summary": "Retrieve API User Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "API Users"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "api_user_roles_destroy",
        "description": " ",
        "summary": "Delete API User Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "API Users"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-user-roles/bulk/create/": {
      "post": {
        "operationId": "api_user_roles_bulk_create_create",
        "description": "Add roles to multiple API users in one operation.",
        "summary": "Bulk Create API User Roles",
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleCreateRequest"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleCreateRequest"
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleCreateRequest"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRole"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-user-roles/bulk/delete/": {
      "post": {
        "operationId": "api_user_roles_bulk_delete_create",
        "description": " ",
        "summary": "Bulk Delete API User Roles",
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDelete"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-user-roles/bulk/operations/": {
      "post": {
        "operationId": "api_user_roles_bulk_operations_create",
        "description": "Add/delete multiple API user roles in one operation.",
        "summary": "Bulk Operations on API User Roles",
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleOperationsRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleOperationsRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleOperationsRequest"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleOperationsResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-users/": {
      "get": {
        "operationId": "api_users_list",
        "description": " ",
        "summary": "List API Users",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "active",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "exclude",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to exclude from the response."
          },
          {
            "in": "query",
            "name": "exclude_target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between user labels:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "mfa_enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "no_access",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "API Users"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAPIUserList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_users_create",
        "description": " ",
        "summary": "Create API User",
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUser"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-users/{id}/": {
      "get": {
        "operationId": "api_users_retrieve",
        "description": " ",
        "summary": "Retrieve API User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "API Users"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUser"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "api_users_update",
        "description": " ",
        "summary": "Update API User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUser"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "api_users_partial_update",
        "description": " ",
        "summary": "Partial Update API User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUser"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "api_users_destroy",
        "description": " ",
        "summary": "Disable API User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "API Users"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUser"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-users/{user_id}/targets/": {
      "get": {
        "operationId": "api_users_targets_list",
        "description": " ",
        "summary": "List API User Targets",
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "API Users"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserScopeList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api-users/bulk/update/": {
      "post": {
        "operationId": "api_users_bulk_update_create",
        "description": " ",
        "summary": "Bulk Update API Users",
        "tags": [
          "API Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBulkUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserBulkUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserBulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUser"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/audit-log/download/": {
      "get": {
        "operationId": "audit_log_download_retrieve",
        "description": " ",
        "summary": "Download a CSV file with AuditLog entries.",
        "parameters": [
          {
            "in": "query",
            "name": "end_dt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Include instances created **before** ISO-formatted timestamp"
          },
          {
            "in": "query",
            "name": "start_dt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Include instances created **after** ISO-formatted timestamp"
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "string"
            },
            "description": "`Base58` ID to filter instances by the user linked to the entry"
          }
        ],
        "tags": [
          "Audit Log"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "CSVFileHeaderExample": {
                    "value": "user_id,username,user_name,date,action,object_model,object_id,field,old_value,new_value",
                    "summary": "CSV file header example"
                  }
                }
              }
            },
            "description": "CSV file with audit log entries"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/credits-packs/": {
      "get": {
        "operationId": "credits_packs_list",
        "description": " ",
        "summary": "List Credits Packs",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCreditsPackList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/credits-packs/{id}/": {
      "get": {
        "operationId": "credits_packs_retrieve",
        "description": " ",
        "summary": "Retrieve Credits Pack",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this addon.",
            "required": true
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsPack"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/aggregated-risk-trend/": {
      "get": {
        "operationId": "dashboard_aggregated_risk_trend_retrieve",
        "description": " ",
        "summary": "List Aggregated Risk Trends",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number"
                    },
                    "stop": {
                      "type": "number"
                    },
                    "step": {
                      "type": "number"
                    },
                    "results": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/average-fix-time/": {
      "get": {
        "operationId": "dashboard_average_fix_time_retrieve",
        "description": " ",
        "summary": "List Average Fix Times",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "csv",
                "json"
              ]
            }
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "<vuln name>": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "<vuln name>": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/fixed-vulnerabilities-trend/": {
      "get": {
        "operationId": "dashboard_fixed_vulnerabilities_trend_retrieve",
        "description": " ",
        "summary": "Get Fixed Vulnerabilities Trend",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "stop": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "step": {
                      "type": "number",
                      "example": 604800
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "fixed": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "example": [
                              "2025-03-10T13:27:03.944188Z",
                              10
                            ],
                            "items": {
                              "minItems": 2,
                              "maxItems": 2,
                              "anyOf": [
                                {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          }
                        },
                        "pending": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "example": [
                              "2025-03-10T13:27:03.944208Z",
                              20
                            ],
                            "items": {
                              "minItems": 2,
                              "maxItems": 2,
                              "anyOf": [
                                {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/needs-attention-pie/": {
      "get": {
        "operationId": "dashboard_needs_attention_pie_retrieve",
        "description": " ",
        "summary": "Retrieve Attention Pie",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "array"
                      },
                      "example": [
                        [
                          "needing attention",
                          0,
                          "needs_attention"
                        ],
                        [
                          "no issues found",
                          0,
                          "no_issues_found"
                        ]
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/needs-attention-top/": {
      "get": {
        "operationId": "dashboard_needs_attention_top_retrieve",
        "description": " ",
        "summary": "List Top Items needing attention",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "csv",
                "json"
              ]
            }
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "Example ID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Example name"
                      },
                      "url": {
                        "type": "string",
                        "example": "Example URL"
                      },
                      "highs": {
                        "type": "number",
                        "example": 1
                      },
                      "mediums": {
                        "type": "number",
                        "example": 2
                      },
                      "lows": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "Example ID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Example name"
                      },
                      "url": {
                        "type": "string",
                        "example": "Example URL"
                      },
                      "highs": {
                        "type": "number",
                        "example": 1
                      },
                      "mediums": {
                        "type": "number",
                        "example": 2
                      },
                      "lows": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/risk-trend/": {
      "get": {
        "operationId": "dashboard_risk_trend_retrieve",
        "description": " ",
        "summary": "List Risk Trends",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "csv",
                "json"
              ]
            }
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "trend": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "number"
                          },
                          "stop": {
                            "type": "number"
                          },
                          "step": {
                            "type": "number"
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "example": [
                                [
                                  "2022-01-01",
                                  3
                                ]
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "trend": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "number"
                          },
                          "stop": {
                            "type": "number"
                          },
                          "step": {
                            "type": "number"
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "example": [
                                [
                                  "2022-01-01",
                                  3
                                ]
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/severity-trend/": {
      "get": {
        "operationId": "dashboard_severity_trend_retrieve",
        "description": " ",
        "summary": "List Severity Trends",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "csv",
                "json"
              ]
            }
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number"
                    },
                    "stop": {
                      "type": "number"
                    },
                    "step": {
                      "type": "number"
                    },
                    "results": {
                      "type": "number"
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number"
                    },
                    "stop": {
                      "type": "number"
                    },
                    "step": {
                      "type": "number"
                    },
                    "results": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/dashboard/top-vulnerabilities/": {
      "get": {
        "operationId": "dashboard_top_vulnerabilities_retrieve",
        "description": " ",
        "summary": "List Top Vulnerabilities",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/definitions/": {
      "get": {
        "operationId": "definitions_list",
        "description": " ",
        "summary": "List Vulnerability Definitions",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "passive",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "x-spec-enum-id": "00695357157ec7c5",
                "nullable": true,
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "Default vulnerability severity.\n\n* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Vulnerabilities"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVulnerabilityDefinitionList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/definitions/{id}/": {
      "get": {
        "operationId": "definitions_retrieve",
        "description": " ",
        "summary": "Retrieve Vulnerability Definition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Vulnerabilities"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityDefinition"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/assets/": {
      "get": {
        "operationId": "discovery_assets_list",
        "description": "Call auditlog tasks if applicable to query.",
        "summary": "List Discovered Assets",
        "parameters": [
          {
            "in": "query",
            "name": "has_target",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by discovered assets with a target created.  \nIf false, filter results by discovered assets with no target created.  \nIf not specified, this filter is ignored. \n"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs of discovered assets to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nOwner labels to filter results, as a query string.  \nFor example, \"owner=Probely\" or \"owner=Probely&owner=QA\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "owner_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between owner labels:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "x-spec-enum-id": "4bbc7459db401a3f",
                "nullable": true,
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "\nScan assessment risk of discovered assets to filter results:\n\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "score",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "d0ca3d99ed433a35",
                "enum": [
                  "",
                  "A",
                  "A+",
                  "B",
                  "C",
                  "D",
                  "E",
                  "F",
                  "NA",
                  "R"
                ]
              }
            },
            "description": "\nSecurity Headers assessment score of discovered assets to filter results:  \n\n\n* `` - \n* `A+` - A+\n* `A` - A\n* `B` - B\n* `C` - C\n* `D` - D\n* `E` - E\n* `F` - F\n* `R` - R\n* `NA` - NA",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "source",
            "schema": {
              "type": "string"
            },
            "description": "\nSource of discovered assets to filter results.  \n"
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "b565a8ca3ff0eba5",
                "enum": [
                  "ACTIVE",
                  "ARCHIVED",
                  "HIDDEN",
                  "NEW"
                ]
              }
            },
            "description": "\nState of discovered assets to filter results:  \n\n\n* `NEW` - New\n* `ACTIVE` - Active\n* `HIDDEN` - Hidden\n* `ARCHIVED` - Archived",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "technology",
            "schema": {
              "type": "string"
            },
            "description": "\nTechnology found in the discovered assets to filter results.\n"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "beefe81f2bb3c2db",
                "enum": [
                  "api",
                  "web"
                ]
              }
            },
            "description": "\nType of discovered assets to filter results:  \n\n\n* `web` - Web\n* `api` - API",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDiscoveryAssetList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/assets/{discovery_asset_id}/logs/": {
      "get": {
        "operationId": "discovery_assets_logs_list",
        "description": " ",
        "summary": "List Discovered Asset's Logs",
        "parameters": [
          {
            "in": "path",
            "name": "discovery_asset_id",
            "schema": {
              "type": "string"
            },
            "description": "\nIdentifier of the discovery asset.  \nA unique Base58 value identifying this object.\n",
            "required": true
          },
          {
            "in": "query",
            "name": "event_type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "b3d8f0a97da4b12a",
                "nullable": true,
                "enum": [
                  "domain",
                  "first_seen",
                  "ip",
                  "note",
                  "owner",
                  "risk",
                  "scan",
                  "score",
                  "technology"
                ]
              }
            },
            "description": "\nType of event to filter results:  \n\n\n* `first_seen` - First Seen\n* `domain` - Domain\n* `ip` - IP\n* `risk` - Risk\n* `scan` - Scan\n* `note` - Note\n* `owner` - Owner\n* `score` - Score\n* `technology` - Technology",
            "explode": true,
            "style": "form"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDiscoveryAssetLogList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/assets/{id}/": {
      "get": {
        "operationId": "discovery_assets_retrieve",
        "description": "Call auditlog tasks if applicable to query.",
        "summary": "Retrieve Discovered Asset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryAsset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "discovery_assets_update",
        "description": "Call auditlog tasks if applicable to query.",
        "summary": "Update Discovered Asset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryAsset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryAsset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryAsset"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryAsset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "discovery_assets_partial_update",
        "description": "Call auditlog tasks if applicable to query.",
        "summary": "Partial Update Discovered Asset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedDiscoveryAsset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedDiscoveryAsset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedDiscoveryAsset"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryAsset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/assets/{id}/create_target/": {
      "post": {
        "operationId": "discovery_assets_create_target_create",
        "description": "Call auditlog tasks if applicable to query.",
        "summary": "Create Target for Discovered Asset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryAssetCreateTargetSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryAssetCreateTargetSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryAssetCreateTargetSchema"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryAssetCreateTargetResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/assets/{id}/download_api_schema_file/": {
      "get": {
        "operationId": "discovery_assets_download_api_schema_file_retrieve",
        "description": " ",
        "summary": "Download API Schema File",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/assets/stats/": {
      "get": {
        "operationId": "discovery_assets_stats_retrieve",
        "description": "Call auditlog tasks if applicable to query.",
        "summary": "Get Asset Discovery Statistics",
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryAssetStats"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/settings/": {
      "get": {
        "operationId": "discovery_settings_retrieve",
        "description": " ",
        "summary": "Retrieve Discovery settings",
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveDiscoveryAsset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "discovery_settings_update",
        "description": " ",
        "summary": "Update Asset Discovery Settings",
        "tags": [
          "Asset Discovery"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveDiscoveryAsset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveDiscoveryAsset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveDiscoveryAsset"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveDiscoveryAsset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "discovery_settings_partial_update",
        "description": " ",
        "summary": "Partially Update Asset Discovery Settings",
        "tags": [
          "Asset Discovery"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedArchiveDiscoveryAsset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedArchiveDiscoveryAsset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedArchiveDiscoveryAsset"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveDiscoveryAsset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/sources/": {
      "get": {
        "operationId": "discovery_sources_list",
        "description": " ",
        "summary": "List Asset Discovery Sources",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSourceList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/discovery/status/": {
      "get": {
        "operationId": "discovery_status_retrieve",
        "description": " ",
        "summary": "Get Asset Discovery Status",
        "tags": [
          "Asset Discovery"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryStatusSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/domains/": {
      "get": {
        "operationId": "domains_list",
        "description": " ",
        "summary": "List Domains",
        "parameters": [
          {
            "in": "query",
            "name": "discovery_enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search_fld",
            "schema": {
              "type": "string"
            },
            "description": "Search FLD"
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDomainSchemaList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "domains_create",
        "description": " ",
        "summary": "Create Domain",
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/domains/{id}/": {
      "get": {
        "operationId": "domains_retrieve",
        "description": " ",
        "summary": "Retrieve Domain",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "domains_update",
        "description": " ",
        "summary": "Update Domain",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "domains_partial_update",
        "description": " ",
        "summary": "Partial Update to Domain",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedDomain"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedDomain"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedDomain"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "domains_destroy",
        "description": " ",
        "summary": "Delete Domain",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/domains/{id}/verify/": {
      "post": {
        "operationId": "domains_verify_create",
        "description": " ",
        "summary": "Verify Domain Ownership",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainVerificationMethod"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DomainVerificationMethod"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DomainVerificationMethod"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/events/": {
      "get": {
        "operationId": "events_list",
        "description": " ",
        "summary": "List Account's Events",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/events/{id}/": {
      "get": {
        "operationId": "events_retrieve",
        "description": " ",
        "summary": "Retrieve Account's Event",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/findings/": {
      "get": {
        "operationId": "findings_list",
        "description": " ",
        "summary": "List Account's Findings",
        "parameters": [
          {
            "in": "query",
            "name": "assignee",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "changed_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was changed, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "changed_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was changed, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `id` filter validation.  \nIf any `id` filter is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between labels:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "in": "query",
            "name": "lastfound_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was last found to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "lastfound_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was last found to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "new",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "scan",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "x-spec-enum-id": "00695357157ec7c5",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "\nSeverity of the vulnerability finding:  \n\n\n* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "80a7afa887252954",
                "enum": [
                  "accepted",
                  "fixed",
                  "invalid",
                  "notfixed",
                  "retesting"
                ]
              }
            },
            "description": "\nState of the vulnerability finding:  \n(Read more about [the meaning of vulnerability findings states](https://help.probely.com/en/articles/6673828-what-is-the-meaning-of-a-finding-s-state))\n\n\n* `notfixed` - Not Fixed\n* `invalid` - Invalid\n* `accepted` - Accepted\n* `fixed` - Fixed\n* `retesting` - Re-testing",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target_label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target_label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Findings"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFindingList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/findings/{id}/": {
      "get": {
        "operationId": "findings_retrieve",
        "description": "Query Findings by their compound Id.",
        "summary": "Retrieve Account's Finding",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this finding.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "findings_update",
        "description": " ",
        "summary": "Update Account's Finding",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this finding.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Finding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Finding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Finding"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "findings_partial_update",
        "description": " ",
        "summary": "Partial Update Account's Finding",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this finding.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/findings/bulk/report/": {
      "post": {
        "operationId": "findings_bulk_report_create",
        "description": " ",
        "summary": "Select Findings for Report",
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingId"
              },
              "examples": {
                "Example": {
                  "value": {
                    "ids": [
                      {
                        "target_id": "289nqnDwp1Wi",
                        "finding_id": 1
                      },
                      {
                        "target_id": "2endVWWueTMp",
                        "finding_id": 1
                      }
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingId"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingId"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "<token>"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/findings/bulk/retest/": {
      "post": {
        "operationId": "findings_bulk_retest_create",
        "description": " ",
        "summary": "Bulk Retest Account's Findings",
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkRetestRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkRetestRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkRetestRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/findings/bulk/update/": {
      "post": {
        "operationId": "findings_bulk_update_create",
        "description": " ",
        "summary": "Bulk Update Account's Findings",
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/findings/report/": {
      "get": {
        "operationId": "findings_report_retrieve",
        "description": " ",
        "summary": "Retrieve Selected Findings Report",
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/frameworks/": {
      "get": {
        "operationId": "frameworks_list",
        "description": " ",
        "summary": "List Frameworks",
        "parameters": [
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Technologies (Frameworks)"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFrameworkList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/frameworks/{id}/": {
      "get": {
        "operationId": "frameworks_retrieve",
        "description": " ",
        "summary": "Retrieve Framework",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Technologies (Frameworks)"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Framework"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/integrations/aws/": {
      "get": {
        "operationId": "integrations_aws_retrieve",
        "description": " ",
        "summary": "Retrieve AWS Configuration",
        "tags": [
          "AWS Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "integrations_aws_update",
        "description": " ",
        "summary": "Update AWS Configuration",
        "tags": [
          "AWS Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AWSAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AWSAccount"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "integrations_aws_partial_update",
        "description": " ",
        "summary": "Partial Update AWS Configuration",
        "tags": [
          "AWS Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAWSAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAWSAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAWSAccount"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "integrations_aws_destroy",
        "description": " ",
        "summary": "Delete AWS Configuration",
        "tags": [
          "AWS Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/integrations/aws/refresh/": {
      "post": {
        "operationId": "integrations_aws_refresh_create",
        "description": " ",
        "summary": "Refresh AWS Records",
        "tags": [
          "AWS Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Refresh started successfully."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "AWS account not installed."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/integrations/azure-devops/": {
      "get": {
        "operationId": "integrations_azure_devops_retrieve",
        "description": " ",
        "summary": "Retrieve Azure DevOps Account Config",
        "tags": [
          "Azure DevOps Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "integrations_azure_devops_update",
        "description": " ",
        "summary": "Update Azure DevOps Account Config",
        "tags": [
          "Azure DevOps Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsAccount"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "integrations_azure_devops_partial_update",
        "description": " ",
        "summary": "Patch Azure DevOps Account Config",
        "tags": [
          "Azure DevOps Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsAccount"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "integrations_azure_devops_destroy",
        "description": " ",
        "summary": "Delete Azure DevOps Account Config",
        "tags": [
          "Azure DevOps Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/integrations/cloudflare/": {
      "get": {
        "operationId": "integrations_cloudflare_retrieve",
        "description": " ",
        "summary": "Get Cloudflare Account instance data",
        "tags": [
          "Cloudflare Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudflareAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "integrations_cloudflare_update",
        "description": " ",
        "summary": "Update a Cloudflare Account instance",
        "tags": [
          "Cloudflare Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudflareAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CloudflareAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CloudflareAccount"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudflareAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "integrations_cloudflare_partial_update",
        "description": " ",
        "summary": "Partial Update a Cloudflare Account instance",
        "tags": [
          "Cloudflare Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCloudflareAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCloudflareAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCloudflareAccount"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudflareAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "integrations_cloudflare_destroy",
        "description": " ",
        "summary": "Delete a Cloudflare Account instance",
        "tags": [
          "Cloudflare Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/integrations/cloudflare/refresh/": {
      "post": {
        "operationId": "integrations_cloudflare_refresh_create",
        "description": " ",
        "summary": "Refresh Cloudflare Records",
        "tags": [
          "Cloudflare Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Refresh started successfully."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Cloudflare account not installed."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/integrations/jira-server/": {
      "get": {
        "operationId": "integrations_jira_server_retrieve",
        "description": " ",
        "summary": "Get Jira Server Account instance data",
        "tags": [
          "Jira Server Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "integrations_jira_server_update",
        "description": " ",
        "summary": "Update a Jira Server Account instance",
        "tags": [
          "Jira Server Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerAccount"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "integrations_jira_server_partial_update",
        "description": " ",
        "summary": "Partial Update a Jira Server Account instance",
        "tags": [
          "Jira Server Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerAccount"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerAccount"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "integrations_jira_server_destroy",
        "description": " ",
        "summary": "Delete a Jira Server Account instance",
        "tags": [
          "Jira Server Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/labels/findings/": {
      "get": {
        "operationId": "labels_findings_list",
        "description": " ",
        "summary": "List Finding Labels",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Finding Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFindingLabelList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "labels_findings_create",
        "description": " ",
        "summary": "Create Finding Label",
        "tags": [
          "Finding Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingLabel"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindingLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/labels/findings/{id}/": {
      "get": {
        "operationId": "labels_findings_retrieve",
        "description": " ",
        "summary": "Retrieve Finding Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Finding Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindingLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "labels_findings_update",
        "description": " ",
        "summary": "Update Finding Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Finding Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingLabel"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindingLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "labels_findings_partial_update",
        "description": " ",
        "summary": "Partial Update Finding Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Finding Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFindingLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFindingLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFindingLabel"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindingLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "labels_findings_destroy",
        "description": " ",
        "summary": "Delete Finding Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Finding Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/labels/targets/": {
      "get": {
        "operationId": "labels_targets_list",
        "description": " ",
        "summary": "List Target Labels",
        "parameters": [
          {
            "in": "query",
            "name": "assigned",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of target labels to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `id` filter validation.  \nIf any `id` filter is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Target Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScopeLabelList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "labels_targets_create",
        "description": " ",
        "summary": "Create Target Label",
        "tags": [
          "Target Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScopeLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScopeLabel"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/labels/targets/{id}/": {
      "get": {
        "operationId": "labels_targets_retrieve",
        "description": " ",
        "summary": "Retrieve Target Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Target Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "labels_targets_update",
        "description": " ",
        "summary": "Update Target Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Target Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScopeLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScopeLabel"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "labels_targets_partial_update",
        "description": " ",
        "summary": "Partial Update Target Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Target Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScopeLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScopeLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScopeLabel"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "labels_targets_destroy",
        "description": " ",
        "summary": "Delete Target Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Target Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/labels/users/": {
      "get": {
        "operationId": "labels_users_list",
        "description": " ",
        "summary": "List User Labels",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "User Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserLabelList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "labels_users_create",
        "description": " ",
        "summary": "Create User Label",
        "tags": [
          "User Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserLabel"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/labels/users/{id}/": {
      "get": {
        "operationId": "labels_users_retrieve",
        "description": " ",
        "summary": "Retrieve User Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "labels_users_update",
        "description": " ",
        "summary": "Update User Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserLabel"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "labels_users_partial_update",
        "description": " ",
        "summary": "Partial Update User Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Labels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserLabel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserLabel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserLabel"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLabel"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "labels_users_destroy",
        "description": " ",
        "summary": "Delete User Label",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Labels"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/permissions/": {
      "get": {
        "operationId": "permissions_list",
        "description": " ",
        "summary": "List Permissions",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Roles & Permissions"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHighLevelPermissionList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/plans/": {
      "get": {
        "operationId": "plans_list",
        "description": " ",
        "summary": "List Plans",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPlanList"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "count": 6,
                      "page_total": 1,
                      "page": 1,
                      "length": 10,
                      "results": [
                        {
                          "id": "enterprise-base-eur",
                          "name": "Enterprise Plan",
                          "family": "enterprise",
                          "description": "",
                          "is_trial": true,
                          "charge_model": "flat_fee",
                          "period": 1,
                          "period_unit": "year",
                          "allowed_scan_profiles": [
                            "lightning",
                            "safe",
                            "normal",
                            "full"
                          ],
                          "allowed_credits_packs": []
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/profile/": {
      "get": {
        "operationId": "profile_list",
        "description": " ",
        "summary": "Retrieve Profile",
        "parameters": [
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profile"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/profile/change_password/": {
      "post": {
        "operationId": "profile_change_password_create",
        "description": " ",
        "summary": "Change Password",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password Changed"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/profile/notifications/": {
      "get": {
        "operationId": "profile_notifications_retrieve",
        "description": " ",
        "summary": "Retrieve Notifications Configuration",
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "profile_notifications_update",
        "description": " ",
        "summary": "Update Notifications Configuration",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettings"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettings"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettings"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "profile_notifications_partial_update",
        "description": " ",
        "summary": "Partial Update Notifications Configuration",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedNotificationSettings"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedNotificationSettings"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedNotificationSettings"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/profile/permissions/": {
      "get": {
        "operationId": "profile_permissions_retrieve",
        "description": " ",
        "summary": "List Permissions",
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePermissionsSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/profile/roles/": {
      "get": {
        "operationId": "profile_roles_list",
        "description": " ",
        "summary": "List Roles",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProfileUserRoleList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/profile/targets/": {
      "get": {
        "operationId": "profile_targets_list",
        "description": " ",
        "summary": "List Targets",
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserScopeList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/report/": {
      "get": {
        "operationId": "report_list",
        "description": " ",
        "summary": "List Report Requests",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedReportRequestList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "report_create",
        "description": " ",
        "summary": "Generate Report",
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportFilters"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ReportFilters"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReportFilters"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRequest"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/report/{id}/": {
      "get": {
        "operationId": "report_retrieve",
        "description": " ",
        "summary": "Retrieve Report Request",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Unspecified response body"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "report_update",
        "description": " ",
        "summary": "Update Report Request",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequest"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRequest"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "report_partial_update",
        "description": " ",
        "summary": "Partial Update to Report Request",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReportRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReportRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReportRequest"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRequest"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/report/{id}/download/": {
      "get": {
        "operationId": "report_download_retrieve",
        "description": " ",
        "summary": "Download Report",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": ""
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Accepted for processing"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/report/{id}/status/": {
      "get": {
        "operationId": "report_status_retrieve",
        "description": "Returns 200 if report generation is complete or 202 if report generation is still in progress.",
        "summary": "Report Generation Status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRequest"
                }
              }
            },
            "description": ""
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRequest"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/report/types/": {
      "get": {
        "operationId": "report_types_retrieve",
        "description": " ",
        "summary": "Get all stored report types",
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "default"
                          },
                          "name": {
                            "type": "string",
                            "example": "default"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description of report type"
                          },
                          "order": {
                            "type": "integer",
                            "example": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/roles/": {
      "get": {
        "operationId": "roles_list",
        "description": " ",
        "summary": "List Roles",
        "parameters": [
          {
            "in": "query",
            "name": "assignable_to",
            "schema": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          {
            "in": "query",
            "name": "custom",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Roles & Permissions"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRoleList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "roles_create",
        "description": " ",
        "summary": "Create Role",
        "tags": [
          "Roles & Permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/roles/{id}/": {
      "get": {
        "operationId": "roles_retrieve",
        "description": " ",
        "summary": "Retrieve Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Roles & Permissions"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "roles_update",
        "description": " ",
        "summary": "Update Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Roles & Permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "roles_partial_update",
        "description": " ",
        "summary": "Partial Update Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Roles & Permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRole"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRole"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRole"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "roles_destroy",
        "description": " ",
        "summary": "Delete Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Roles & Permissions"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scan-profiles/": {
      "get": {
        "operationId": "scan_profiles_list",
        "description": " ",
        "summary": "List Scan Profiles",
        "parameters": [
          {
            "in": "query",
            "name": "archived",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, the scan profile is no longer in use.  \nIf false, the scan profile can be used.\n"
          },
          {
            "in": "query",
            "name": "builtin",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, it is a built-in scan profile, which cannot be changed.  \nIf false, it is a custom scan profile.\n"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "api",
                "web"
              ]
            },
            "description": "Target type:\n\n* `web` - Scan a Web application, including Single Page Applications (SPA) that rely on one or more APIs.\n* `api` - Scan a standalone API defined by an OpenAPI / Swagger schema, or by a Postman Collection."
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            },
            "description": "If true, the scan profile only allows targets with verified domains."
          }
        ],
        "tags": [
          "Scan Profiles"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScanProfileList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "scan_profiles_create",
        "description": " ",
        "summary": "Create Custom Scan Profile",
        "tags": [
          "Scan Profiles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScanProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateScanProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateScanProfile"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanProfile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scan-profiles/{id}/": {
      "get": {
        "operationId": "scan_profiles_retrieve",
        "description": " ",
        "summary": "Retrieve Scan Profile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "\nIdentifier of the scan profile.  \nCustom scan profiles are always prefixed by \"sp-\".\nThe maximum length is 256 characters.\n"
            },
            "required": true
          }
        ],
        "tags": [
          "Scan Profiles"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanProfile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "scan_profiles_update",
        "description": " ",
        "summary": "Update Custom Scan Profile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "\nIdentifier of the scan profile.  \nCustom scan profiles are always prefixed by \"sp-\".\nThe maximum length is 256 characters.\n"
            },
            "required": true
          }
        ],
        "tags": [
          "Scan Profiles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScanProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScanProfile"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanProfile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "scan_profiles_partial_update",
        "description": " ",
        "summary": "Parcial Update Custom Scan Profile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "\nIdentifier of the scan profile.  \nCustom scan profiles are always prefixed by \"sp-\".\nThe maximum length is 256 characters.\n"
            },
            "required": true
          }
        ],
        "tags": [
          "Scan Profiles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScanProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScanProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScanProfile"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanProfile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scanning-agents/": {
      "get": {
        "operationId": "scanning_agents_list",
        "description": " ",
        "summary": "List Scanning Agents",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "scopes_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between agent scopes:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  "connected",
                  "connected_with_issues",
                  "disconnected"
                ]
              }
            },
            "description": "Filter by status\n\n* `connected` - Connected\n* `connected_with_issues` - Connected with issues\n* `disconnected` - Disconnected",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Scanning Agents"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScanningAgentSchemaList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "scanning_agents_create",
        "description": " ",
        "summary": "Create Scanning Agent",
        "tags": [
          "Scanning Agents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgentSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgentSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgentSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanningAgentSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scanning-agents/{hek}/config-files/": {
      "get": {
        "operationId": "scanning_agents_config_files_retrieve",
        "description": " ",
        "summary": "Get Configuration File",
        "parameters": [
          {
            "in": "path",
            "name": "hek",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Scanning Agents"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "content": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scanning-agents/{id}/": {
      "get": {
        "operationId": "scanning_agents_retrieve",
        "description": " ",
        "summary": "Retrieve Scanning Agent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this scanning agent.",
            "required": true
          }
        ],
        "tags": [
          "Scanning Agents"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanningAgentSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "scanning_agents_update",
        "description": " ",
        "summary": "Update Scanning Agent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this scanning agent.",
            "required": true
          }
        ],
        "tags": [
          "Scanning Agents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgentSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgentSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgentSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanningAgentSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "scanning_agents_partial_update",
        "description": " ",
        "summary": "Partial Update Scanning Agent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this scanning agent.",
            "required": true
          }
        ],
        "tags": [
          "Scanning Agents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScanningAgentSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScanningAgentSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScanningAgentSchema"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanningAgentSchema"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "scanning_agents_destroy",
        "description": " ",
        "summary": "Delete Scanning Agent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this scanning agent.",
            "required": true
          }
        ],
        "tags": [
          "Scanning Agents"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scanning-agents/{id}/generate/": {
      "post": {
        "operationId": "scanning_agents_generate_create",
        "description": " ",
        "summary": "Create Token",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this scanning agent.",
            "required": true
          }
        ],
        "tags": [
          "Scanning Agents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "<TOKEN>"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/": {
      "get": {
        "operationId": "scans_list",
        "description": " ",
        "summary": "List Account's Scans",
        "parameters": [
          {
            "in": "query",
            "name": "completed__gt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which scans completed (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "completed__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which scans completed (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "completed__lt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time until which the scans completed (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "completed__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time until which the scans completed (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of scans to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `id` filter validation.  \nIf any `id` filter is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "partial",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "started__gt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which the scans started (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which the scans started (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started__lt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which the scans started (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time until which the scans started (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the scan started to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "started_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the scan started to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "391b377c86087507",
                "enum": [
                  "canceled",
                  "canceling",
                  "completed",
                  "completed_with_errors",
                  "failed",
                  "finishing_up",
                  "paused",
                  "pausing",
                  "queued",
                  "resuming",
                  "started",
                  "under_review"
                ]
              }
            },
            "description": "Status of the scan:\n\n* `canceled` - Canceled\n* `canceling` - Canceling\n* `completed` - Completed\n* `completed_with_errors` - Completed with errors - DEPRECATED\n* `failed` - Failed\n* `paused` - Paused\n* `pausing` - Pausing\n* `queued` - Queued\n* `resuming` - Resuming\n* `started` - Started\n* `under_review` - Under Review\n* `finishing_up` - Finishing up",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Scan target.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "warning",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of warnings to filter results.  \nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAssessmentList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/{id}/": {
      "get": {
        "operationId": "scans_retrieve",
        "description": " ",
        "summary": "Retrieve Account's Scans",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/bulk/cancel/": {
      "post": {
        "operationId": "scans_bulk_cancel_create",
        "description": " ",
        "summary": "Bulk Cancel Scans",
        "parameters": [
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `scans` payload validation.  \nIf any `scans` payload is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "<scan_id>": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "23FmxSYYJQNW": [
                            "Unable to resume a scan that is not paused."
                          ]
                        }
                      ]
                    },
                    "<field_name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "This field is required."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/bulk/pause/": {
      "post": {
        "operationId": "scans_bulk_pause_create",
        "description": " ",
        "summary": "Bulk Pause Scans",
        "parameters": [
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `scans` payload validation.  \nIf any `scans` payload is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "<scan_id>": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "23FmxSYYJQNW": [
                            "Unable to resume a scan that is not paused."
                          ]
                        }
                      ]
                    },
                    "<field_name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "This field is required."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/bulk/resume/": {
      "post": {
        "operationId": "scans_bulk_resume_create",
        "description": " ",
        "summary": "Bulk Resume Scans",
        "parameters": [
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `scans` payload validation.  \nIf any `scans` payload is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchemaResume"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchemaResume"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchemaResume"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scans": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This list may not be empty.",
                        {
                          "23FmxSYYJQNW": [
                            "Unable to resume a scan that is not paused."
                          ]
                        },
                        {
                          "1QH4KEfvMid9": [
                            "Failed to resume this scan. Kindly contact Support for resolution"
                          ]
                        }
                      ]
                    },
                    "overrides": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ignore_blackout_period": "Field error."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/bulk/start/": {
      "post": {
        "operationId": "scans_bulk_start_create",
        "description": " ",
        "summary": "Bulk Start Scans",
        "parameters": [
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `targets` payload validation.  \nIf any `targets` payload is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchemaStart"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchemaStart"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkScansSchemaStart"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "targets": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This list may not be empty.",
                        {
                          "23FmxSYYJQNW": [
                            "A scan is already in progress for this target."
                          ]
                        },
                        {
                          "1QH4KEfvMid9": [
                            "Could not start."
                          ]
                        }
                      ]
                    },
                    "overrides": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "scan_profile": "Invalid pk 'pk_value' - object does not exist."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/warnings/": {
      "get": {
        "operationId": "scans_warnings_list",
        "description": " ",
        "summary": "List Scan Warnings",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWarningList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scans/warnings/{id}/": {
      "get": {
        "operationId": "scans_warnings_retrieve",
        "description": " ",
        "summary": "Retrive Scan Warning",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this warning.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warning"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scheduledscans/": {
      "get": {
        "operationId": "scheduledscans_list",
        "description": " ",
        "summary": "List Account's Scheduled Scans",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScheduledScanList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scheduledscans/bulk/": {
      "post": {
        "operationId": "scheduledscans_bulk_create",
        "description": " ",
        "summary": "Bulk Create Scheduled Scans",
        "tags": [
          "Scheduled Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkScheduledScanCreateSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkScheduledScanCreateSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkScheduledScanCreateSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduledScan"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "targets": {
                      "type": "array",
                      "properties": {
                        "<target_id>": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This list may not be empty.",
                        {
                          "23FmxSYYJQNW": [
                            "Scheduled scan not saved as it may conflict with blackout period."
                          ]
                        }
                      ]
                    },
                    "scheduledscan": {
                      "type": "array",
                      "properties": {
                        "<field_name>": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This field is required.",
                        {
                          "scan_profile": [
                            "Invalid pk 'scan_profile_pk' - object does not exist"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "scheduledscans_bulk_update",
        "description": " ",
        "summary": "Bulk Update Scheduled Scans",
        "tags": [
          "Scheduled Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkScheduledScanUpdateSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkScheduledScanUpdateSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkScheduledScanUpdateSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduledScan"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scheduledscans": {
                      "type": "array",
                      "properties": {
                        "<target_id>": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This list may not be empty.",
                        {
                          "23FmxSYYJQNW": [
                            "Scheduled scan not saved as it may conflict with blackout period."
                          ]
                        }
                      ]
                    },
                    "scheduledscan": {
                      "type": "array",
                      "properties": {
                        "<field_name>": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This field is required.",
                        {
                          "scan_profile": [
                            "Invalid pk 'scan_profile_pk' - object does not exist"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "scheduledscans_bulk_partial_update",
        "description": " ",
        "summary": "Bulk Update Scheduled Scans",
        "tags": [
          "Scheduled Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBulkScheduledScanUpdateSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBulkScheduledScanUpdateSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBulkScheduledScanUpdateSchema"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduledScan"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scheduledscans": {
                      "type": "array",
                      "properties": {
                        "<target_id>": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This list may not be empty.",
                        {
                          "23FmxSYYJQNW": [
                            "Scheduled scan not saved as it may conflict with blackout period."
                          ]
                        }
                      ]
                    },
                    "scheduledscan": {
                      "type": "array",
                      "properties": {
                        "<field_name>": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This field is required.",
                        {
                          "scan_profile": [
                            "Invalid pk 'scan_profile_pk' - object does not exist"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "scheduledscans_bulk_destroy",
        "description": " ",
        "summary": "Bulk Delete Scheduled Scans",
        "tags": [
          "Scheduled Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scheduledscans": {
                      "type": "array",
                      "properties": {
                        "<target_id>": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        "This list may not be empty.",
                        {
                          "23FmxSYYJQNW": [
                            "You do not have the required permission for this action."
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/stored-reports/": {
      "get": {
        "operationId": "stored_reports_list",
        "description": " ",
        "summary": "List Findings Scheduled Reports",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedStoredReportList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "stored_reports_create",
        "description": " ",
        "summary": "Create Findings Scheduled Report",
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredReport"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/stored-reports/{id}/": {
      "get": {
        "operationId": "stored_reports_retrieve",
        "description": " ",
        "summary": "Retrieve Findings Scheduled Report",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredReport"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "stored_reports_update",
        "description": " ",
        "summary": "Update Findings Scheduled Report",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredReport"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "stored_reports_partial_update",
        "description": " ",
        "summary": "Partial Update Findings Scheduled Report",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStoredReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStoredReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStoredReport"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredReport"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "stored_reports_destroy",
        "description": " ",
        "summary": "Delete Findings Scheduled Report",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/stored-reports/{id}/generate/": {
      "post": {
        "operationId": "stored_reports_generate_create",
        "description": " ",
        "summary": "Get report download URL",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/stored-reports/preview/": {
      "post": {
        "operationId": "stored_reports_preview_create",
        "description": " ",
        "summary": "Download Findings Scheduled Report Preview",
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoredReport"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/": {
      "get": {
        "operationId": "targets_list",
        "description": " ",
        "summary": "List Targets",
        "parameters": [
          {
            "in": "query",
            "name": "exclude",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to exclude from the response."
          },
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "string"
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `id` filter validation.  \nIf any `id` filter is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "string"
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "ordering",
            "schema": {
              "type": "string",
              "enum": [
                "changed",
                "latest_scan_date",
                "name",
                "risk",
                "target__name"
              ]
            },
            "description": "\nWhich field to use when ordering the results.  \nAscending order is the default. For descending order, prefix the field with `-`.  \nFor example, `latest_scan_date` and `-latest_scan_date`.  \nField to order by: \n* `target__name`\n* `risk`\n* `latest_scan_date`\n* `changed`\n* `name`\n"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "string"
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "\nType of target to filter results.  \nPossible values are \"single\" for a web application and \"api\" for an API.\n"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by verified targets.  \nIf false, filter results by unverified targets.\n"
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScopeResponseList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "targets_create",
        "description": " ",
        "summary": "Create Target",
        "parameters": [
          {
            "in": "query",
            "name": "check_fullpath",
            "schema": {
              "type": "string"
            },
            "description": "\nIf true, validates and raises an error if the target's URL contains any query strings or paths that restrict the scope of the target scan.  \nFor example, it raises an error for a URL like `https://example.com/admin` since it restricts the target scans to only what is under `admin`. \nThe URL would have to be `https://example.com` to cover the whole scope. \nThen, you can add or restrict specific areas to be scanned under the target's scope (using `site.whitelist` and `site.blacklist` respectively).  \nIf false or not defined, no validation is done.\n"
          },
          {
            "in": "query",
            "name": "duplicate_check",
            "schema": {
              "type": "string"
            },
            "description": "\nIf true, validates and raises an error if there is already another target using the same URL.  \nIf false or not defined, no validation is done.  \n"
          },
          {
            "in": "query",
            "name": "skip_fullpath_warning",
            "schema": {
              "type": "string"
            },
            "description": "\nIf true, ignores warnings issued when `check_fullpath` is true.  \nIf false or not defined, warnings are taken into account.  \n"
          },
          {
            "in": "query",
            "name": "skip_reachability_check",
            "schema": {
              "type": "string"
            },
            "description": "\nIf false or not defined, makes a request to the target to try reach it and raises an error if it fails.  \nIf true, skips this validation.\n"
          },
          {
            "in": "query",
            "name": "skip_redirect_check",
            "schema": {
              "type": "string"
            },
            "description": "\nIf false or not defined, validates and raises an error if the target's URL is redirected.  \nIf true, skips this validation (if there aren't more than 6 redirects).\n"
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeBaseSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScopeBaseSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScopeBaseSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/": {
      "get": {
        "operationId": "targets_retrieve",
        "description": " ",
        "summary": "Retrieve Target",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_update",
        "description": " ",
        "summary": "Update Target",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScopeRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScopeRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_partial_update",
        "description": " ",
        "summary": "Partial Update Target",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScopeRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScopeRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScopeRequest"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_destroy",
        "description": " ",
        "summary": "Delete Target",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/api-auth/": {
      "delete": {
        "operationId": "targets_api_auth_destroy",
        "description": " ",
        "summary": "Clear API Authentication Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/average_fix_time/": {
      "get": {
        "operationId": "targets_average_fix_time_retrieve",
        "description": " ",
        "summary": "Average Fix Time Graph",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "<vuln name>": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/basic-auth/": {
      "delete": {
        "operationId": "targets_basic_auth_destroy",
        "description": " ",
        "summary": "Clear Basic Authentication Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/check_api_login/": {
      "post": {
        "operationId": "targets_check_api_login_create",
        "description": " ",
        "summary": "Test Log In to API",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIScanLoginOptions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/APIScanLoginOptions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/APIScanLoginOptions"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "[\"user.username\", \"user.email\"]"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/download_api_schema_file/": {
      "get": {
        "operationId": "targets_download_api_schema_file_retrieve",
        "description": " ",
        "summary": "Download API Schema File",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/form-login/": {
      "delete": {
        "operationId": "targets_form_login_destroy",
        "description": "Endpoint for interacting with Scopes (AKA Targets).",
        "summary": "Clear Login Form Configuration.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/integrations/azure-devops/": {
      "get": {
        "operationId": "targets_integrations_azure_devops_retrieve",
        "description": " ",
        "summary": "Retrieve Azure DevOps Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Azure DevOps Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_integrations_azure_devops_update",
        "description": " ",
        "summary": "Update Azure DevOps Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Azure DevOps Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsScope"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_integrations_azure_devops_partial_update",
        "description": " ",
        "summary": "Patch Azure DevOps Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Azure DevOps Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsScope"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_integrations_azure_devops_destroy",
        "description": " ",
        "summary": "Delete Azure DevOps Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Azure DevOps Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/integrations/jira-cloud/": {
      "get": {
        "operationId": "targets_integrations_jira_cloud_retrieve",
        "description": " ",
        "summary": "Retrieve Jira Cloud Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Cloud Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraCloudScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_integrations_jira_cloud_update",
        "description": " ",
        "summary": "Update Jira Cloud Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Cloud Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JiraCloudScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JiraCloudScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JiraCloudScope"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraCloudScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_integrations_jira_cloud_partial_update",
        "description": " ",
        "summary": "Partial Update of Jira Cloud Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Cloud Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraCloudScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraCloudScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraCloudScope"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraCloudScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_integrations_jira_cloud_destroy",
        "description": " ",
        "summary": "Delete Jira Cloud Target Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Cloud Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/integrations/jira-server/": {
      "get": {
        "operationId": "targets_integrations_jira_server_retrieve",
        "description": " ",
        "summary": "Retrieve Jira Server Target instance data",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Server Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_integrations_jira_server_update",
        "description": " ",
        "summary": "Update a Jira Server Target instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Server Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerScope"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_integrations_jira_server_partial_update",
        "description": " ",
        "summary": "Partial Update a Jira Server Target instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Server Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerScope"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_integrations_jira_server_destroy",
        "description": " ",
        "summary": "Delete a Jira Server Target instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Server Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/integrations/slack/": {
      "get": {
        "operationId": "targets_integrations_slack_retrieve",
        "description": " ",
        "summary": "Retrieve Slack Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Slack Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_integrations_slack_update",
        "description": " ",
        "summary": "Update Slack Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Slack Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlackScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SlackScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SlackScope"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_integrations_slack_partial_update",
        "description": " ",
        "summary": "Partial Update Slack Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Slack Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSlackScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSlackScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSlackScope"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_integrations_slack_destroy",
        "description": " ",
        "summary": "Delete Slack Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Slack Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/login-video/": {
      "get": {
        "operationId": "targets_login_video_retrieve",
        "description": "Streams the login video file for the specified target. If no login video is found, returns a 404.",
        "summary": "Retrieve Login Video",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "Binary video file (e.g. mp4)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/logout-detection/": {
      "delete": {
        "operationId": "targets_logout_detection_destroy",
        "description": " ",
        "summary": "Clear Logout Detection Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/move-team/": {
      "post": {
        "operationId": "targets_move_team_create",
        "description": " ",
        "summary": "Move Target to Another Team",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTeam"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MoveTeam"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MoveTeam"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/otp/": {
      "delete": {
        "operationId": "targets_otp_destroy",
        "description": " ",
        "summary": "Clear 2FA Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/otp/{otp_url_token}/": {
      "post": {
        "operationId": "targets_otp_create",
        "description": " ",
        "summary": "Send OTP",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "otp_url_token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOTPSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendOTPSchema"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SendOTPSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/otp/reset/": {
      "post": {
        "operationId": "targets_otp_reset_create",
        "description": " ",
        "summary": "Reset OTP URL",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "object",
                      "properties": {
                        "otp_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/risk_trend/": {
      "get": {
        "operationId": "targets_risk_trend_retrieve",
        "description": " ",
        "summary": "Risk Trend Graph",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string"
                    },
                    "stop": {
                      "type": "string"
                    },
                    "step": {
                      "type": "string"
                    },
                    "results": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/scan_now/": {
      "post": {
        "operationId": "targets_scan_now_create",
        "description": " ",
        "summary": "Start a scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanOptions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScanOptions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScanOptions"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/sequence-login/": {
      "delete": {
        "operationId": "targets_sequence_login_destroy",
        "description": " ",
        "summary": "Clear Login Sequence Configuration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/severity_trend/": {
      "get": {
        "operationId": "targets_severity_trend_retrieve",
        "description": " ",
        "summary": "Severity Trend Graph",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string"
                    },
                    "stop": {
                      "type": "string"
                    },
                    "step": {
                      "type": "string"
                    },
                    "results": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/top_vulns/": {
      "get": {
        "operationId": "targets_top_vulns_retrieve",
        "description": " ",
        "summary": "Top Vulnerabilities Graph",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{id}/upload_api_schema_file/": {
      "post": {
        "operationId": "targets_upload_api_schema_file_create",
        "description": " ",
        "summary": "Upload API Schema File",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{scope}/findings/{id}/integrations/azure-devops/": {
      "get": {
        "operationId": "targets_findings_integrations_azure_devops_retrieve",
        "description": " ",
        "summary": "Retrieve Azure DevOps Finding Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Azure DevOps Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_findings_integrations_azure_devops_update",
        "description": " ",
        "summary": "Update Azure DevOps Finding Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Azure DevOps Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AzureDevOpsFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_findings_integrations_azure_devops_partial_update",
        "description": " ",
        "summary": "Patch Azure DevOps Finding Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Azure DevOps Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAzureDevOpsFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{scope}/findings/{id}/integrations/jira-cloud/": {
      "get": {
        "operationId": "targets_findings_integrations_jira_cloud_retrieve",
        "description": " ",
        "summary": "Retrieve Jira Cloud Finding Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Cloud Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraCloudFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_findings_integrations_jira_cloud_update",
        "description": " ",
        "summary": "Update Jira Cloud Finding Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Cloud Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JiraCloudFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JiraCloudFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JiraCloudFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraCloudFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_findings_integrations_jira_cloud_partial_update",
        "description": " ",
        "summary": "Partial Update of Jira Cloud Finding Config",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Cloud Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraCloudFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraCloudFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraCloudFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraCloudFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{scope}/findings/{id}/integrations/jira-server/": {
      "get": {
        "operationId": "targets_findings_integrations_jira_server_retrieve",
        "description": " ",
        "summary": "Retrieve Jira Server Finding instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Server Integration"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_findings_integrations_jira_server_update",
        "description": " ",
        "summary": "Update a Jira Server Finding instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Server Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JiraServerFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_findings_integrations_jira_server_partial_update",
        "description": " ",
        "summary": "Partial Update of Jira Server Finding instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Jira Server Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedJiraServerFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JiraServerFinding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/assets/": {
      "get": {
        "operationId": "targets_assets_list_2",
        "description": " ",
        "summary": "List Extra Hosts",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "skip_reachability_check",
            "schema": {
              "type": "string"
            },
            "description": "\nIf false or not defined, makes a request to the target to try reach it and raises an error if it fails.  \nIf true, skips this validation.\n"
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Extra Hosts"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAssetList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "targets_assets_create",
        "description": " ",
        "summary": "Create Extra Host",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Extra Hosts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetWrite"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AssetWrite"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssetWrite"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/assets/{id}/": {
      "get": {
        "operationId": "targets_assets_retrieve",
        "description": " ",
        "summary": "Retrieve Extra Host",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Extra Hosts"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_assets_update",
        "description": " ",
        "summary": "Update Extra Host",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Extra Hosts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_assets_partial_update",
        "description": " ",
        "summary": "Partial Update Extra Host",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Extra Hosts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAsset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAsset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAsset"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_assets_destroy",
        "description": " ",
        "summary": "Delete Extra Host",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Extra Hosts"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/events/": {
      "get": {
        "operationId": "targets_events_list",
        "description": " ",
        "summary": "List Target's Events",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/events/{id}/": {
      "get": {
        "operationId": "targets_events_retrieve",
        "description": " ",
        "summary": "Retrieve Target's Event",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/": {
      "get": {
        "operationId": "targets_findings_list",
        "description": " ",
        "summary": "List Target's Findings",
        "parameters": [
          {
            "in": "query",
            "name": "assignee",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "changed_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was changed, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "changed_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was changed, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "exclude",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to exclude from the response."
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between labels:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "in": "query",
            "name": "lastfound_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was last found to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "lastfound_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the vulnerability was last found to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "new",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "scan",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "x-spec-enum-id": "00695357157ec7c5",
                "enum": [
                  10,
                  20,
                  30
                ]
              }
            },
            "description": "\nSeverity of the vulnerability finding:  \n\n\n* `10` - low\n* `20` - medium\n* `30` - high",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "80a7afa887252954",
                "enum": [
                  "accepted",
                  "fixed",
                  "invalid",
                  "notfixed",
                  "retesting"
                ]
              }
            },
            "description": "\nState of the vulnerability finding:  \n(Read more about [the meaning of vulnerability findings states](https://help.probely.com/en/articles/6673828-what-is-the-meaning-of-a-finding-s-state))\n\n\n* `notfixed` - Not Fixed\n* `invalid` - Invalid\n* `accepted` - Accepted\n* `fixed` - Fixed\n* `retesting` - Re-testing",
            "explode": true,
            "style": "form"
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFindingList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/{finding_id}/logs/": {
      "get": {
        "operationId": "targets_findings_logs_list",
        "description": " ",
        "summary": "List Findings Activity",
        "parameters": [
          {
            "in": "path",
            "name": "finding_id",
            "schema": {
              "type": "string"
            },
            "description": "Finding ID",
            "required": true
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "message_type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "f8c1d1bb6c994277",
                "nullable": true,
                "enum": [
                  "accepted",
                  "assign",
                  "fixed",
                  "found",
                  "invalid",
                  "note",
                  "retest",
                  "retest_failed",
                  "update"
                ]
              }
            },
            "description": "* `found` - Found\n* `invalid` - Invalid\n* `accepted` - Accepted Risk\n* `fixed` - Fixed\n* `note` - Note\n* `update` - Update\n* `assign` - Assign\n* `retest` - Retest\n* `retest_failed` - Retest Failed",
            "explode": true,
            "style": "form"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFindingActivityList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/{id}/": {
      "get": {
        "operationId": "targets_findings_retrieve",
        "description": " ",
        "summary": "Retrieve Target's Finding",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483648
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_findings_update",
        "description": " ",
        "summary": "Update Target's Finding",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483648
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Finding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Finding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Finding"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_findings_partial_update",
        "description": " ",
        "summary": "Partial Update Target's Finding",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483648
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFinding"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFinding"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFinding"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finding"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/{id}/retest/": {
      "post": {
        "operationId": "targets_findings_retest_create",
        "description": " ",
        "summary": "Retest Target's Finding",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483648
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/bulk/report/": {
      "post": {
        "operationId": "targets_findings_bulk_report_create",
        "description": " ",
        "summary": "Create Target's Findings Report",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingId"
              },
              "examples": {
                "Example": {
                  "value": {
                    "ids": [
                      1,
                      5,
                      23
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingId"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingId"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "<token>"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/bulk/retest/": {
      "post": {
        "operationId": "targets_findings_bulk_retest_create",
        "description": " ",
        "summary": "Bulk Retest Target's Findings",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkRetestRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkRetestRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkRetestRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/bulk/update/": {
      "post": {
        "operationId": "targets_findings_bulk_update_create",
        "description": " ",
        "summary": "Bulk Update Target's Findings",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Findings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FindingBulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/findings/report/": {
      "get": {
        "operationId": "targets_findings_report_retrieve",
        "description": " ",
        "summary": "Retrieve Target's Findings Report",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredReport"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/logout/": {
      "get": {
        "operationId": "targets_logout_list",
        "description": " ",
        "summary": "List Logout Detectors",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedLogoutDetectorList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "targets_logout_create",
        "description": " ",
        "summary": "Create Logout Detector",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDetector"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDetector"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDetector"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutDetector"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/logout/{id}/": {
      "get": {
        "operationId": "targets_logout_retrieve",
        "description": " ",
        "summary": "Retrieve Logout Detector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutDetector"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_logout_update",
        "description": " ",
        "summary": "Update Logout Detector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDetector"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDetector"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDetector"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutDetector"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_logout_partial_update",
        "description": " ",
        "summary": "Partial Update Logout Detector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedLogoutDetector"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedLogoutDetector"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedLogoutDetector"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutDetector"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_logout_destroy",
        "description": " ",
        "summary": "Delete Logout Detector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/reduced-scopes/": {
      "get": {
        "operationId": "targets_reduced_scopes_list",
        "description": " ",
        "summary": "List Reduced Scopes",
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Reduced Scopes"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedReducedScopeList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "targets_reduced_scopes_create",
        "description": " ",
        "summary": "Create Reduced Scope",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Reduced Scopes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReducedScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ReducedScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReducedScope"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReducedScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/reduced-scopes/{id}/": {
      "get": {
        "operationId": "targets_reduced_scopes_retrieve",
        "description": " ",
        "summary": "Retrieve Reduced Scope",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Reduced Scopes"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReducedScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_reduced_scopes_update",
        "description": " ",
        "summary": "Update Reduced Scope",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Reduced Scopes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReducedScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ReducedScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReducedScope"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReducedScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_reduced_scopes_partial_update",
        "description": " ",
        "summary": "Partial Update Reduced Scope",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Reduced Scopes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReducedScope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReducedScope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReducedScope"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReducedScope"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_reduced_scopes_destroy",
        "description": " ",
        "summary": "Delete Reduced Scope",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Reduced Scopes"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scan/": {
      "get": {
        "operationId": "targets_scan_list",
        "description": " ",
        "summary": "Retrieve Target's Current Scan",
        "parameters": [
          {
            "in": "query",
            "name": "exclude",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to exclude from the response."
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scan/cancel/": {
      "post": {
        "operationId": "targets_scan_cancel_create",
        "description": " ",
        "summary": "Cancel Target's Current Scan",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scan/pause/": {
      "post": {
        "operationId": "targets_scan_pause_create",
        "description": " ",
        "summary": "Pause Target's Current Scan",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scan/resume/": {
      "post": {
        "operationId": "targets_scan_resume_create",
        "description": " ",
        "summary": "Resume Target's Current Scan",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeOptions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResumeOptions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ResumeOptions"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/": {
      "get": {
        "operationId": "targets_scans_list",
        "description": " ",
        "summary": "List Target's Scans",
        "parameters": [
          {
            "in": "query",
            "name": "completed__gt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which scans completed (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "completed__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which scans completed (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "completed__lt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time until which the scans completed (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "completed__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time until which the scans completed (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "partial",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "started__gt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which the scans started (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which the scans started (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started__lt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time from which the scans started (exclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time until which the scans started (inclusively) to filter results, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\".\n"
          },
          {
            "in": "query",
            "name": "started_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the scan started to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "started_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nDate and time of when the scan started to filter results, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "x-spec-enum-id": "391b377c86087507",
                "enum": [
                  "canceled",
                  "canceling",
                  "completed",
                  "completed_with_errors",
                  "failed",
                  "finishing_up",
                  "paused",
                  "pausing",
                  "queued",
                  "resuming",
                  "started",
                  "under_review"
                ]
              }
            },
            "description": "Status of the scan:\n\n* `canceled` - Canceled\n* `canceling` - Canceling\n* `completed` - Completed\n* `completed_with_errors` - Completed with errors - DEPRECATED\n* `failed` - Failed\n* `paused` - Paused\n* `pausing` - Pausing\n* `queued` - Queued\n* `resuming` - Resuming\n* `started` - Started\n* `under_review` - Under Review\n* `finishing_up` - Finishing up",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Scan target.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "warning",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of warnings to filter results.  \nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAssessmentList"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "count": 6,
                      "page_total": 1,
                      "page": 1,
                      "length": 10,
                      "results": [
                        {
                          "id": "MyThjkIs2Wca",
                          "target": {
                            "id": "MyThjkIs2Wca",
                            "name": "",
                            "site": {
                              "id": "MyThjkIs2Wca",
                              "name": "[PwC] Example Site",
                              "desc": "",
                              "url": "https://www.example.pt/",
                              "host": "www.example.pt",
                              "has_form_login": false,
                              "form_login_url": "https://example.com",
                              "form_login_check_pattern": "",
                              "form_login": [
                                {
                                  "name": "username",
                                  "value": "testuser1"
                                },
                                {
                                  "name": "password",
                                  "value": "testuserpassword"
                                }
                              ],
                              "logout_detection_enabled": false,
                              "has_sequence_login": true,
                              "has_sequence_navigation": false,
                              "has_basic_auth": false,
                              "basic_auth": {
                                "username": "",
                                "password": ""
                              },
                              "headers": [],
                              "cookies": [],
                              "whitelist": [],
                              "blacklist": [],
                              "changed": "2023-10-20T20:44:12.556924Z",
                              "changed_by": {
                                "id": "-sDw5jjjtJ3Y",
                                "email": "testuser@example.pt",
                                "name": "testuser"
                              },
                              "auth_enabled": false,
                              "logout_condition": "any",
                              "check_session_url": "",
                              "has_otp": false,
                              "otp_secret": "",
                              "otp_algorithm": "SHA1",
                              "otp_digits": 6,
                              "otp_field": "",
                              "otp_submit": "",
                              "otp_login_sequence_totp_value": "",
                              "otp_type": "totp",
                              "otp_url": "",
                              "stack": [
                                {
                                  "id": "MyThjkIs2Wca",
                                  "name": "IIS",
                                  "desc": ""
                                },
                                {
                                  "id": "MyThjkIs2Wca",
                                  "name": "Microsoft ASP.NET",
                                  "desc": ""
                                },
                                {
                                  "id": "MyThjkIs2Wca",
                                  "name": "Windows Server",
                                  "desc": ""
                                }
                              ],
                              "verified": false,
                              "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                              "verification_date": null,
                              "verification_method": "",
                              "verification_last_error": "",
                              "api_scan_settings": null
                            },
                            "type": "single",
                            "desc": "",
                            "labels": [
                              {
                                "id": "MyThjkIs2Wca",
                                "name": "PwC",
                                "color": "",
                                "changed_by": {
                                  "id": "MyThjkIs2Wca",
                                  "email": "",
                                  "name": "Example"
                                },
                                "changed": "2022-06-02T09:31:29.238031Z"
                              }
                            ],
                            "has_assets": false,
                            "report_fileformat": "docx",
                            "scanning_agent": null,
                            "teams": [
                              {
                                "id": "MyThjkIs2Wca",
                                "name": "Example Team"
                              }
                            ],
                            "blackout_period": {
                              "begin": "02:00:00",
                              "cease": "03:00:00",
                              "weekdays": [
                                1
                              ],
                              "enabled": true,
                              "timezone": "Africa/Lagos",
                              "changed": "2023-10-30T18:11:32.548246Z",
                              "changed_by": {
                                "id": "-sDw5JJJtV3Y",
                                "email": "testuser@example.pt",
                                "name": "Testuser"
                              }
                            }
                          },
                          "status": "completed",
                          "started": "2024-01-25T01:05:08.102608Z",
                          "completed": "2024-01-25T01:07:34.570500Z",
                          "scan_profile": {
                            "id": "lightning",
                            "name": "Lightning",
                            "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                            "builtin": true
                          },
                          "lows": 5,
                          "mediums": 1,
                          "highs": 0,
                          "created": "2024-01-25T01:05:05.894103Z",
                          "unlimited": true,
                          "changed": "2024-01-25T01:07:45.896140Z",
                          "changed_by": {
                            "id": "-sDw5iRCtV3Y",
                            "email": "tesuser@example.pt",
                            "name": "Testuser"
                          },
                          "stack": [],
                          "crawler": {
                            "state": "ended",
                            "status": [
                              4.0,
                              4.0
                            ],
                            "warning": [
                              {
                                "code": "login_failed",
                                "message": "Cannot login, please review your login settings."
                              },
                              {
                                "code": "target_status",
                                "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                              }
                            ],
                            "error": [],
                            "full_status": {
                              "type": "feedback",
                              "ts": 1706720605.0290248,
                              "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                              "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                              "stage": "crawler",
                              "module": "anansi",
                              "subtype": "status",
                              "data": {
                                "type": "feedback",
                                "allExtraHosts": [],
                                "countTimeoutEndpoints": 0.0,
                                "crawlingEndpoints": [],
                                "countLoginFailed": 1.0,
                                "lastLogin": [
                                  {
                                    "status": "failed",
                                    "timestamp": 1706720567048.0
                                  }
                                ],
                                "status": {
                                  "500": 4.0
                                },
                                "outOfScopeHostsCount": {},
                                "allHostnames": [
                                  "example.com"
                                ],
                                "version": 2.0,
                                "countNetworkErrorEndpoints": 0.0,
                                "total": 4.0,
                                "lastCrawledEndpoints": [
                                  {
                                    "jobId": 2.0,
                                    "status": 500.0,
                                    "method": "GET",
                                    "url": "https://example.com/"
                                  },
                                  {
                                    "jobId": 3.0,
                                    "status": 500.0,
                                    "method": "GET",
                                    "url": "https://example.com/"
                                  },
                                  {
                                    "jobId": 4.0,
                                    "status": 500.0,
                                    "method": "GET",
                                    "url": "https://example.com/"
                                  }
                                ],
                                "doingLogin": false,
                                "done": 4.0,
                                "rejected": 0.0,
                                "countLoginSuccess": 0.0,
                                "statusByHost": {
                                  "example.com": {
                                    "500": 4.0
                                  }
                                }
                              }
                            }
                          },
                          "fingerprinter": {
                            "state": "ended",
                            "count": 1,
                            "warning": [],
                            "error": []
                          },
                          "scanner": {
                            "state": "ended",
                            "status": [
                              1,
                              1
                            ],
                            "warning": [],
                            "error": [],
                            "full_status": {
                              "type": "feedback",
                              "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                              "subtype": "status",
                              "stage": "scanner",
                              "module": "zap",
                              "data": {
                                "done": 79,
                                "total": 400,
                                "scannerState": {
                                  "numberRequestBeingScanned": 2,
                                  "currentAverageRtt": 16.444445,
                                  "averageRtt": 16.444445,
                                  "nStatus3xx": "0",
                                  "nStatus4xx": "0",
                                  "nStatus5xx": "0",
                                  "nConnectionErrors": "0",
                                  "nTimeouts": "0",
                                  "nRequests": "9",
                                  "sampleOfRequestBeingScanned": [
                                    {
                                      "httpMethod": "GET",
                                      "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                    },
                                    {
                                      "httpMethod": "GET",
                                      "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "has_sequence_navigation": false,
                          "incremental": false,
                          "reduced_scope": true,
                          "crawl_sequences_only": false,
                          "ignore_blackout_period": false,
                          "user_data": null
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/{id}/": {
      "get": {
        "operationId": "targets_scans_retrieve",
        "description": " ",
        "summary": "Retrieve Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "MyThjkIs2Wca",
                      "target": {
                        "id": "MyThjkIs2Wca",
                        "name": "",
                        "site": {
                          "id": "MyThjkIs2Wca",
                          "name": "[PwC] Example Site",
                          "desc": "",
                          "url": "https://www.example.pt/",
                          "host": "www.example.pt",
                          "has_form_login": false,
                          "form_login_url": "https://example.com",
                          "form_login_check_pattern": "",
                          "form_login": [
                            {
                              "name": "username",
                              "value": "testuser1"
                            },
                            {
                              "name": "password",
                              "value": "testuserpassword"
                            }
                          ],
                          "logout_detection_enabled": false,
                          "has_sequence_login": true,
                          "has_sequence_navigation": false,
                          "has_basic_auth": false,
                          "basic_auth": {
                            "username": "",
                            "password": ""
                          },
                          "headers": [],
                          "cookies": [],
                          "whitelist": [],
                          "blacklist": [],
                          "changed": "2023-10-20T20:44:12.556924Z",
                          "changed_by": {
                            "id": "-sDw5jjjtJ3Y",
                            "email": "testuser@example.pt",
                            "name": "testuser"
                          },
                          "auth_enabled": false,
                          "logout_condition": "any",
                          "check_session_url": "",
                          "has_otp": false,
                          "otp_secret": "",
                          "otp_algorithm": "SHA1",
                          "otp_digits": 6,
                          "otp_field": "",
                          "otp_submit": "",
                          "otp_login_sequence_totp_value": "",
                          "otp_type": "totp",
                          "otp_url": "",
                          "stack": [
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "IIS",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Microsoft ASP.NET",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Windows Server",
                              "desc": ""
                            }
                          ],
                          "verified": false,
                          "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                          "verification_date": null,
                          "verification_method": "",
                          "verification_last_error": "",
                          "api_scan_settings": null
                        },
                        "type": "single",
                        "desc": "",
                        "labels": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "PwC",
                            "color": "",
                            "changed_by": {
                              "id": "MyThjkIs2Wca",
                              "email": "",
                              "name": "Example"
                            },
                            "changed": "2022-06-02T09:31:29.238031Z"
                          }
                        ],
                        "has_assets": false,
                        "report_fileformat": "docx",
                        "scanning_agent": null,
                        "teams": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Example Team"
                          }
                        ],
                        "blackout_period": {
                          "begin": "02:00:00",
                          "cease": "03:00:00",
                          "weekdays": [
                            1
                          ],
                          "enabled": true,
                          "timezone": "Africa/Lagos",
                          "changed": "2023-10-30T18:11:32.548246Z",
                          "changed_by": {
                            "id": "-sDw5JJJtV3Y",
                            "email": "testuser@example.pt",
                            "name": "Testuser"
                          }
                        }
                      },
                      "status": "completed",
                      "started": "2024-01-25T01:05:08.102608Z",
                      "completed": "2024-01-25T01:07:34.570500Z",
                      "scan_profile": {
                        "id": "lightning",
                        "name": "Lightning",
                        "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                        "builtin": true
                      },
                      "lows": 5,
                      "mediums": 1,
                      "highs": 0,
                      "created": "2024-01-25T01:05:05.894103Z",
                      "unlimited": true,
                      "changed": "2024-01-25T01:07:45.896140Z",
                      "changed_by": {
                        "id": "-sDw5iRCtV3Y",
                        "email": "tesuser@example.pt",
                        "name": "Testuser"
                      },
                      "stack": [],
                      "crawler": {
                        "state": "ended",
                        "status": [
                          4.0,
                          4.0
                        ],
                        "warning": [
                          {
                            "code": "login_failed",
                            "message": "Cannot login, please review your login settings."
                          },
                          {
                            "code": "target_status",
                            "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                          }
                        ],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "ts": 1706720605.0290248,
                          "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                          "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                          "stage": "crawler",
                          "module": "anansi",
                          "subtype": "status",
                          "data": {
                            "type": "feedback",
                            "allExtraHosts": [],
                            "countTimeoutEndpoints": 0.0,
                            "crawlingEndpoints": [],
                            "countLoginFailed": 1.0,
                            "lastLogin": [
                              {
                                "status": "failed",
                                "timestamp": 1706720567048.0
                              }
                            ],
                            "status": {
                              "500": 4.0
                            },
                            "outOfScopeHostsCount": {},
                            "allHostnames": [
                              "example.com"
                            ],
                            "version": 2.0,
                            "countNetworkErrorEndpoints": 0.0,
                            "total": 4.0,
                            "lastCrawledEndpoints": [
                              {
                                "jobId": 2.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 3.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 4.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              }
                            ],
                            "doingLogin": false,
                            "done": 4.0,
                            "rejected": 0.0,
                            "countLoginSuccess": 0.0,
                            "statusByHost": {
                              "example.com": {
                                "500": 4.0
                              }
                            }
                          }
                        }
                      },
                      "fingerprinter": {
                        "state": "ended",
                        "count": 1,
                        "warning": [],
                        "error": []
                      },
                      "scanner": {
                        "state": "ended",
                        "status": [
                          1,
                          1
                        ],
                        "warning": [],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                          "subtype": "status",
                          "stage": "scanner",
                          "module": "zap",
                          "data": {
                            "done": 79,
                            "total": 400,
                            "scannerState": {
                              "numberRequestBeingScanned": 2,
                              "currentAverageRtt": 16.444445,
                              "averageRtt": 16.444445,
                              "nStatus3xx": "0",
                              "nStatus4xx": "0",
                              "nStatus5xx": "0",
                              "nConnectionErrors": "0",
                              "nTimeouts": "0",
                              "nRequests": "9",
                              "sampleOfRequestBeingScanned": [
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                },
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "has_sequence_navigation": false,
                      "incremental": false,
                      "reduced_scope": true,
                      "crawl_sequences_only": false,
                      "ignore_blackout_period": false,
                      "user_data": null
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_scans_update",
        "description": " ",
        "summary": "Update Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              },
              "examples": {
                "Example": {
                  "value": {
                    "id": "MyThjkIs2Wca",
                    "target": {
                      "id": "MyThjkIs2Wca",
                      "name": "",
                      "site": {
                        "id": "MyThjkIs2Wca",
                        "name": "[PwC] Example Site",
                        "desc": "",
                        "url": "https://www.example.pt/",
                        "host": "www.example.pt",
                        "has_form_login": false,
                        "form_login_url": "https://example.com",
                        "form_login_check_pattern": "",
                        "form_login": [
                          {
                            "name": "username",
                            "value": "testuser1"
                          },
                          {
                            "name": "password",
                            "value": "testuserpassword"
                          }
                        ],
                        "logout_detection_enabled": false,
                        "has_sequence_login": true,
                        "has_sequence_navigation": false,
                        "has_basic_auth": false,
                        "basic_auth": {
                          "username": "",
                          "password": ""
                        },
                        "headers": [],
                        "cookies": [],
                        "whitelist": [],
                        "blacklist": [],
                        "changed": "2023-10-20T20:44:12.556924Z",
                        "changed_by": {
                          "id": "-sDw5jjjtJ3Y",
                          "email": "testuser@example.pt",
                          "name": "testuser"
                        },
                        "auth_enabled": false,
                        "logout_condition": "any",
                        "check_session_url": "",
                        "has_otp": false,
                        "otp_secret": "",
                        "otp_algorithm": "SHA1",
                        "otp_digits": 6,
                        "otp_field": "",
                        "otp_submit": "",
                        "otp_login_sequence_totp_value": "",
                        "otp_type": "totp",
                        "otp_url": "",
                        "stack": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "IIS",
                            "desc": ""
                          },
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Microsoft ASP.NET",
                            "desc": ""
                          },
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Windows Server",
                            "desc": ""
                          }
                        ],
                        "verified": false,
                        "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                        "verification_date": null,
                        "verification_method": "",
                        "verification_last_error": "",
                        "api_scan_settings": null
                      },
                      "type": "single",
                      "desc": "",
                      "labels": [
                        {
                          "id": "MyThjkIs2Wca",
                          "name": "PwC",
                          "color": "",
                          "changed_by": {
                            "id": "MyThjkIs2Wca",
                            "email": "",
                            "name": "Example"
                          },
                          "changed": "2022-06-02T09:31:29.238031Z"
                        }
                      ],
                      "has_assets": false,
                      "report_fileformat": "docx",
                      "scanning_agent": null,
                      "teams": [
                        {
                          "id": "MyThjkIs2Wca",
                          "name": "Example Team"
                        }
                      ],
                      "blackout_period": {
                        "begin": "02:00:00",
                        "cease": "03:00:00",
                        "weekdays": [
                          1
                        ],
                        "enabled": true,
                        "timezone": "Africa/Lagos",
                        "changed": "2023-10-30T18:11:32.548246Z",
                        "changed_by": {
                          "id": "-sDw5JJJtV3Y",
                          "email": "testuser@example.pt",
                          "name": "Testuser"
                        }
                      }
                    },
                    "status": "completed",
                    "started": "2024-01-25T01:05:08.102608Z",
                    "completed": "2024-01-25T01:07:34.570500Z",
                    "scan_profile": {
                      "id": "lightning",
                      "name": "Lightning",
                      "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                      "builtin": true
                    },
                    "lows": 5,
                    "mediums": 1,
                    "highs": 0,
                    "created": "2024-01-25T01:05:05.894103Z",
                    "unlimited": true,
                    "changed": "2024-01-25T01:07:45.896140Z",
                    "changed_by": {
                      "id": "-sDw5iRCtV3Y",
                      "email": "tesuser@example.pt",
                      "name": "Testuser"
                    },
                    "stack": [],
                    "crawler": {
                      "state": "ended",
                      "status": [
                        4.0,
                        4.0
                      ],
                      "warning": [
                        {
                          "code": "login_failed",
                          "message": "Cannot login, please review your login settings."
                        },
                        {
                          "code": "target_status",
                          "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                        }
                      ],
                      "error": [],
                      "full_status": {
                        "type": "feedback",
                        "ts": 1706720605.0290248,
                        "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                        "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                        "stage": "crawler",
                        "module": "anansi",
                        "subtype": "status",
                        "data": {
                          "type": "feedback",
                          "allExtraHosts": [],
                          "countTimeoutEndpoints": 0.0,
                          "crawlingEndpoints": [],
                          "countLoginFailed": 1.0,
                          "lastLogin": [
                            {
                              "status": "failed",
                              "timestamp": 1706720567048.0
                            }
                          ],
                          "status": {
                            "500": 4.0
                          },
                          "outOfScopeHostsCount": {},
                          "allHostnames": [
                            "example.com"
                          ],
                          "version": 2.0,
                          "countNetworkErrorEndpoints": 0.0,
                          "total": 4.0,
                          "lastCrawledEndpoints": [
                            {
                              "jobId": 2.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            },
                            {
                              "jobId": 3.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            },
                            {
                              "jobId": 4.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            }
                          ],
                          "doingLogin": false,
                          "done": 4.0,
                          "rejected": 0.0,
                          "countLoginSuccess": 0.0,
                          "statusByHost": {
                            "example.com": {
                              "500": 4.0
                            }
                          }
                        }
                      }
                    },
                    "fingerprinter": {
                      "state": "ended",
                      "count": 1,
                      "warning": [],
                      "error": []
                    },
                    "scanner": {
                      "state": "ended",
                      "status": [
                        1,
                        1
                      ],
                      "warning": [],
                      "error": [],
                      "full_status": {
                        "type": "feedback",
                        "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                        "subtype": "status",
                        "stage": "scanner",
                        "module": "zap",
                        "data": {
                          "done": 79,
                          "total": 400,
                          "scannerState": {
                            "numberRequestBeingScanned": 2,
                            "currentAverageRtt": 16.444445,
                            "averageRtt": 16.444445,
                            "nStatus3xx": "0",
                            "nStatus4xx": "0",
                            "nStatus5xx": "0",
                            "nConnectionErrors": "0",
                            "nTimeouts": "0",
                            "nRequests": "9",
                            "sampleOfRequestBeingScanned": [
                              {
                                "httpMethod": "GET",
                                "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                              },
                              {
                                "httpMethod": "GET",
                                "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "has_sequence_navigation": false,
                    "incremental": false,
                    "reduced_scope": true,
                    "crawl_sequences_only": false,
                    "ignore_blackout_period": false,
                    "user_data": null
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "MyThjkIs2Wca",
                      "target": {
                        "id": "MyThjkIs2Wca",
                        "name": "",
                        "site": {
                          "id": "MyThjkIs2Wca",
                          "name": "[PwC] Example Site",
                          "desc": "",
                          "url": "https://www.example.pt/",
                          "host": "www.example.pt",
                          "has_form_login": false,
                          "form_login_url": "https://example.com",
                          "form_login_check_pattern": "",
                          "form_login": [
                            {
                              "name": "username",
                              "value": "testuser1"
                            },
                            {
                              "name": "password",
                              "value": "testuserpassword"
                            }
                          ],
                          "logout_detection_enabled": false,
                          "has_sequence_login": true,
                          "has_sequence_navigation": false,
                          "has_basic_auth": false,
                          "basic_auth": {
                            "username": "",
                            "password": ""
                          },
                          "headers": [],
                          "cookies": [],
                          "whitelist": [],
                          "blacklist": [],
                          "changed": "2023-10-20T20:44:12.556924Z",
                          "changed_by": {
                            "id": "-sDw5jjjtJ3Y",
                            "email": "testuser@example.pt",
                            "name": "testuser"
                          },
                          "auth_enabled": false,
                          "logout_condition": "any",
                          "check_session_url": "",
                          "has_otp": false,
                          "otp_secret": "",
                          "otp_algorithm": "SHA1",
                          "otp_digits": 6,
                          "otp_field": "",
                          "otp_submit": "",
                          "otp_login_sequence_totp_value": "",
                          "otp_type": "totp",
                          "otp_url": "",
                          "stack": [
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "IIS",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Microsoft ASP.NET",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Windows Server",
                              "desc": ""
                            }
                          ],
                          "verified": false,
                          "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                          "verification_date": null,
                          "verification_method": "",
                          "verification_last_error": "",
                          "api_scan_settings": null
                        },
                        "type": "single",
                        "desc": "",
                        "labels": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "PwC",
                            "color": "",
                            "changed_by": {
                              "id": "MyThjkIs2Wca",
                              "email": "",
                              "name": "Example"
                            },
                            "changed": "2022-06-02T09:31:29.238031Z"
                          }
                        ],
                        "has_assets": false,
                        "report_fileformat": "docx",
                        "scanning_agent": null,
                        "teams": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Example Team"
                          }
                        ],
                        "blackout_period": {
                          "begin": "02:00:00",
                          "cease": "03:00:00",
                          "weekdays": [
                            1
                          ],
                          "enabled": true,
                          "timezone": "Africa/Lagos",
                          "changed": "2023-10-30T18:11:32.548246Z",
                          "changed_by": {
                            "id": "-sDw5JJJtV3Y",
                            "email": "testuser@example.pt",
                            "name": "Testuser"
                          }
                        }
                      },
                      "status": "completed",
                      "started": "2024-01-25T01:05:08.102608Z",
                      "completed": "2024-01-25T01:07:34.570500Z",
                      "scan_profile": {
                        "id": "lightning",
                        "name": "Lightning",
                        "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                        "builtin": true
                      },
                      "lows": 5,
                      "mediums": 1,
                      "highs": 0,
                      "created": "2024-01-25T01:05:05.894103Z",
                      "unlimited": true,
                      "changed": "2024-01-25T01:07:45.896140Z",
                      "changed_by": {
                        "id": "-sDw5iRCtV3Y",
                        "email": "tesuser@example.pt",
                        "name": "Testuser"
                      },
                      "stack": [],
                      "crawler": {
                        "state": "ended",
                        "status": [
                          4.0,
                          4.0
                        ],
                        "warning": [
                          {
                            "code": "login_failed",
                            "message": "Cannot login, please review your login settings."
                          },
                          {
                            "code": "target_status",
                            "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                          }
                        ],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "ts": 1706720605.0290248,
                          "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                          "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                          "stage": "crawler",
                          "module": "anansi",
                          "subtype": "status",
                          "data": {
                            "type": "feedback",
                            "allExtraHosts": [],
                            "countTimeoutEndpoints": 0.0,
                            "crawlingEndpoints": [],
                            "countLoginFailed": 1.0,
                            "lastLogin": [
                              {
                                "status": "failed",
                                "timestamp": 1706720567048.0
                              }
                            ],
                            "status": {
                              "500": 4.0
                            },
                            "outOfScopeHostsCount": {},
                            "allHostnames": [
                              "example.com"
                            ],
                            "version": 2.0,
                            "countNetworkErrorEndpoints": 0.0,
                            "total": 4.0,
                            "lastCrawledEndpoints": [
                              {
                                "jobId": 2.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 3.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 4.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              }
                            ],
                            "doingLogin": false,
                            "done": 4.0,
                            "rejected": 0.0,
                            "countLoginSuccess": 0.0,
                            "statusByHost": {
                              "example.com": {
                                "500": 4.0
                              }
                            }
                          }
                        }
                      },
                      "fingerprinter": {
                        "state": "ended",
                        "count": 1,
                        "warning": [],
                        "error": []
                      },
                      "scanner": {
                        "state": "ended",
                        "status": [
                          1,
                          1
                        ],
                        "warning": [],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                          "subtype": "status",
                          "stage": "scanner",
                          "module": "zap",
                          "data": {
                            "done": 79,
                            "total": 400,
                            "scannerState": {
                              "numberRequestBeingScanned": 2,
                              "currentAverageRtt": 16.444445,
                              "averageRtt": 16.444445,
                              "nStatus3xx": "0",
                              "nStatus4xx": "0",
                              "nStatus5xx": "0",
                              "nConnectionErrors": "0",
                              "nTimeouts": "0",
                              "nRequests": "9",
                              "sampleOfRequestBeingScanned": [
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                },
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "has_sequence_navigation": false,
                      "incremental": false,
                      "reduced_scope": true,
                      "crawl_sequences_only": false,
                      "ignore_blackout_period": false,
                      "user_data": null
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_scans_partial_update",
        "description": " ",
        "summary": "Partial Update Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAssessment"
              },
              "examples": {
                "Example": {
                  "value": {
                    "id": "MyThjkIs2Wca",
                    "target": {
                      "id": "MyThjkIs2Wca",
                      "name": "",
                      "site": {
                        "id": "MyThjkIs2Wca",
                        "name": "[PwC] Example Site",
                        "desc": "",
                        "url": "https://www.example.pt/",
                        "host": "www.example.pt",
                        "has_form_login": false,
                        "form_login_url": "https://example.com",
                        "form_login_check_pattern": "",
                        "form_login": [
                          {
                            "name": "username",
                            "value": "testuser1"
                          },
                          {
                            "name": "password",
                            "value": "testuserpassword"
                          }
                        ],
                        "logout_detection_enabled": false,
                        "has_sequence_login": true,
                        "has_sequence_navigation": false,
                        "has_basic_auth": false,
                        "basic_auth": {
                          "username": "",
                          "password": ""
                        },
                        "headers": [],
                        "cookies": [],
                        "whitelist": [],
                        "blacklist": [],
                        "changed": "2023-10-20T20:44:12.556924Z",
                        "changed_by": {
                          "id": "-sDw5jjjtJ3Y",
                          "email": "testuser@example.pt",
                          "name": "testuser"
                        },
                        "auth_enabled": false,
                        "logout_condition": "any",
                        "check_session_url": "",
                        "has_otp": false,
                        "otp_secret": "",
                        "otp_algorithm": "SHA1",
                        "otp_digits": 6,
                        "otp_field": "",
                        "otp_submit": "",
                        "otp_login_sequence_totp_value": "",
                        "otp_type": "totp",
                        "otp_url": "",
                        "stack": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "IIS",
                            "desc": ""
                          },
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Microsoft ASP.NET",
                            "desc": ""
                          },
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Windows Server",
                            "desc": ""
                          }
                        ],
                        "verified": false,
                        "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                        "verification_date": null,
                        "verification_method": "",
                        "verification_last_error": "",
                        "api_scan_settings": null
                      },
                      "type": "single",
                      "desc": "",
                      "labels": [
                        {
                          "id": "MyThjkIs2Wca",
                          "name": "PwC",
                          "color": "",
                          "changed_by": {
                            "id": "MyThjkIs2Wca",
                            "email": "",
                            "name": "Example"
                          },
                          "changed": "2022-06-02T09:31:29.238031Z"
                        }
                      ],
                      "has_assets": false,
                      "report_fileformat": "docx",
                      "scanning_agent": null,
                      "teams": [
                        {
                          "id": "MyThjkIs2Wca",
                          "name": "Example Team"
                        }
                      ],
                      "blackout_period": {
                        "begin": "02:00:00",
                        "cease": "03:00:00",
                        "weekdays": [
                          1
                        ],
                        "enabled": true,
                        "timezone": "Africa/Lagos",
                        "changed": "2023-10-30T18:11:32.548246Z",
                        "changed_by": {
                          "id": "-sDw5JJJtV3Y",
                          "email": "testuser@example.pt",
                          "name": "Testuser"
                        }
                      }
                    },
                    "status": "completed",
                    "started": "2024-01-25T01:05:08.102608Z",
                    "completed": "2024-01-25T01:07:34.570500Z",
                    "scan_profile": {
                      "id": "lightning",
                      "name": "Lightning",
                      "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                      "builtin": true
                    },
                    "lows": 5,
                    "mediums": 1,
                    "highs": 0,
                    "created": "2024-01-25T01:05:05.894103Z",
                    "unlimited": true,
                    "changed": "2024-01-25T01:07:45.896140Z",
                    "changed_by": {
                      "id": "-sDw5iRCtV3Y",
                      "email": "tesuser@example.pt",
                      "name": "Testuser"
                    },
                    "stack": [],
                    "crawler": {
                      "state": "ended",
                      "status": [
                        4.0,
                        4.0
                      ],
                      "warning": [
                        {
                          "code": "login_failed",
                          "message": "Cannot login, please review your login settings."
                        },
                        {
                          "code": "target_status",
                          "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                        }
                      ],
                      "error": [],
                      "full_status": {
                        "type": "feedback",
                        "ts": 1706720605.0290248,
                        "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                        "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                        "stage": "crawler",
                        "module": "anansi",
                        "subtype": "status",
                        "data": {
                          "type": "feedback",
                          "allExtraHosts": [],
                          "countTimeoutEndpoints": 0.0,
                          "crawlingEndpoints": [],
                          "countLoginFailed": 1.0,
                          "lastLogin": [
                            {
                              "status": "failed",
                              "timestamp": 1706720567048.0
                            }
                          ],
                          "status": {
                            "500": 4.0
                          },
                          "outOfScopeHostsCount": {},
                          "allHostnames": [
                            "example.com"
                          ],
                          "version": 2.0,
                          "countNetworkErrorEndpoints": 0.0,
                          "total": 4.0,
                          "lastCrawledEndpoints": [
                            {
                              "jobId": 2.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            },
                            {
                              "jobId": 3.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            },
                            {
                              "jobId": 4.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            }
                          ],
                          "doingLogin": false,
                          "done": 4.0,
                          "rejected": 0.0,
                          "countLoginSuccess": 0.0,
                          "statusByHost": {
                            "example.com": {
                              "500": 4.0
                            }
                          }
                        }
                      }
                    },
                    "fingerprinter": {
                      "state": "ended",
                      "count": 1,
                      "warning": [],
                      "error": []
                    },
                    "scanner": {
                      "state": "ended",
                      "status": [
                        1,
                        1
                      ],
                      "warning": [],
                      "error": [],
                      "full_status": {
                        "type": "feedback",
                        "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                        "subtype": "status",
                        "stage": "scanner",
                        "module": "zap",
                        "data": {
                          "done": 79,
                          "total": 400,
                          "scannerState": {
                            "numberRequestBeingScanned": 2,
                            "currentAverageRtt": 16.444445,
                            "averageRtt": 16.444445,
                            "nStatus3xx": "0",
                            "nStatus4xx": "0",
                            "nStatus5xx": "0",
                            "nConnectionErrors": "0",
                            "nTimeouts": "0",
                            "nRequests": "9",
                            "sampleOfRequestBeingScanned": [
                              {
                                "httpMethod": "GET",
                                "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                              },
                              {
                                "httpMethod": "GET",
                                "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "has_sequence_navigation": false,
                    "incremental": false,
                    "reduced_scope": true,
                    "crawl_sequences_only": false,
                    "ignore_blackout_period": false,
                    "user_data": null
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAssessment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAssessment"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "MyThjkIs2Wca",
                      "target": {
                        "id": "MyThjkIs2Wca",
                        "name": "",
                        "site": {
                          "id": "MyThjkIs2Wca",
                          "name": "[PwC] Example Site",
                          "desc": "",
                          "url": "https://www.example.pt/",
                          "host": "www.example.pt",
                          "has_form_login": false,
                          "form_login_url": "https://example.com",
                          "form_login_check_pattern": "",
                          "form_login": [
                            {
                              "name": "username",
                              "value": "testuser1"
                            },
                            {
                              "name": "password",
                              "value": "testuserpassword"
                            }
                          ],
                          "logout_detection_enabled": false,
                          "has_sequence_login": true,
                          "has_sequence_navigation": false,
                          "has_basic_auth": false,
                          "basic_auth": {
                            "username": "",
                            "password": ""
                          },
                          "headers": [],
                          "cookies": [],
                          "whitelist": [],
                          "blacklist": [],
                          "changed": "2023-10-20T20:44:12.556924Z",
                          "changed_by": {
                            "id": "-sDw5jjjtJ3Y",
                            "email": "testuser@example.pt",
                            "name": "testuser"
                          },
                          "auth_enabled": false,
                          "logout_condition": "any",
                          "check_session_url": "",
                          "has_otp": false,
                          "otp_secret": "",
                          "otp_algorithm": "SHA1",
                          "otp_digits": 6,
                          "otp_field": "",
                          "otp_submit": "",
                          "otp_login_sequence_totp_value": "",
                          "otp_type": "totp",
                          "otp_url": "",
                          "stack": [
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "IIS",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Microsoft ASP.NET",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Windows Server",
                              "desc": ""
                            }
                          ],
                          "verified": false,
                          "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                          "verification_date": null,
                          "verification_method": "",
                          "verification_last_error": "",
                          "api_scan_settings": null
                        },
                        "type": "single",
                        "desc": "",
                        "labels": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "PwC",
                            "color": "",
                            "changed_by": {
                              "id": "MyThjkIs2Wca",
                              "email": "",
                              "name": "Example"
                            },
                            "changed": "2022-06-02T09:31:29.238031Z"
                          }
                        ],
                        "has_assets": false,
                        "report_fileformat": "docx",
                        "scanning_agent": null,
                        "teams": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Example Team"
                          }
                        ],
                        "blackout_period": {
                          "begin": "02:00:00",
                          "cease": "03:00:00",
                          "weekdays": [
                            1
                          ],
                          "enabled": true,
                          "timezone": "Africa/Lagos",
                          "changed": "2023-10-30T18:11:32.548246Z",
                          "changed_by": {
                            "id": "-sDw5JJJtV3Y",
                            "email": "testuser@example.pt",
                            "name": "Testuser"
                          }
                        }
                      },
                      "status": "completed",
                      "started": "2024-01-25T01:05:08.102608Z",
                      "completed": "2024-01-25T01:07:34.570500Z",
                      "scan_profile": {
                        "id": "lightning",
                        "name": "Lightning",
                        "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                        "builtin": true
                      },
                      "lows": 5,
                      "mediums": 1,
                      "highs": 0,
                      "created": "2024-01-25T01:05:05.894103Z",
                      "unlimited": true,
                      "changed": "2024-01-25T01:07:45.896140Z",
                      "changed_by": {
                        "id": "-sDw5iRCtV3Y",
                        "email": "tesuser@example.pt",
                        "name": "Testuser"
                      },
                      "stack": [],
                      "crawler": {
                        "state": "ended",
                        "status": [
                          4.0,
                          4.0
                        ],
                        "warning": [
                          {
                            "code": "login_failed",
                            "message": "Cannot login, please review your login settings."
                          },
                          {
                            "code": "target_status",
                            "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                          }
                        ],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "ts": 1706720605.0290248,
                          "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                          "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                          "stage": "crawler",
                          "module": "anansi",
                          "subtype": "status",
                          "data": {
                            "type": "feedback",
                            "allExtraHosts": [],
                            "countTimeoutEndpoints": 0.0,
                            "crawlingEndpoints": [],
                            "countLoginFailed": 1.0,
                            "lastLogin": [
                              {
                                "status": "failed",
                                "timestamp": 1706720567048.0
                              }
                            ],
                            "status": {
                              "500": 4.0
                            },
                            "outOfScopeHostsCount": {},
                            "allHostnames": [
                              "example.com"
                            ],
                            "version": 2.0,
                            "countNetworkErrorEndpoints": 0.0,
                            "total": 4.0,
                            "lastCrawledEndpoints": [
                              {
                                "jobId": 2.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 3.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 4.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              }
                            ],
                            "doingLogin": false,
                            "done": 4.0,
                            "rejected": 0.0,
                            "countLoginSuccess": 0.0,
                            "statusByHost": {
                              "example.com": {
                                "500": 4.0
                              }
                            }
                          }
                        }
                      },
                      "fingerprinter": {
                        "state": "ended",
                        "count": 1,
                        "warning": [],
                        "error": []
                      },
                      "scanner": {
                        "state": "ended",
                        "status": [
                          1,
                          1
                        ],
                        "warning": [],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                          "subtype": "status",
                          "stage": "scanner",
                          "module": "zap",
                          "data": {
                            "done": 79,
                            "total": 400,
                            "scannerState": {
                              "numberRequestBeingScanned": 2,
                              "currentAverageRtt": 16.444445,
                              "averageRtt": 16.444445,
                              "nStatus3xx": "0",
                              "nStatus4xx": "0",
                              "nStatus5xx": "0",
                              "nConnectionErrors": "0",
                              "nTimeouts": "0",
                              "nRequests": "9",
                              "sampleOfRequestBeingScanned": [
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                },
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "has_sequence_navigation": false,
                      "incremental": false,
                      "reduced_scope": true,
                      "crawl_sequences_only": false,
                      "ignore_blackout_period": false,
                      "user_data": null
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/{id}/cancel/": {
      "post": {
        "operationId": "targets_scans_cancel_create",
        "description": " ",
        "summary": "Cancel Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "MyThjkIs2Wca",
                      "target": {
                        "id": "MyThjkIs2Wca",
                        "name": "",
                        "site": {
                          "id": "MyThjkIs2Wca",
                          "name": "[PwC] Example Site",
                          "desc": "",
                          "url": "https://www.example.pt/",
                          "host": "www.example.pt",
                          "has_form_login": false,
                          "form_login_url": "https://example.com",
                          "form_login_check_pattern": "",
                          "form_login": [
                            {
                              "name": "username",
                              "value": "testuser1"
                            },
                            {
                              "name": "password",
                              "value": "testuserpassword"
                            }
                          ],
                          "logout_detection_enabled": false,
                          "has_sequence_login": true,
                          "has_sequence_navigation": false,
                          "has_basic_auth": false,
                          "basic_auth": {
                            "username": "",
                            "password": ""
                          },
                          "headers": [],
                          "cookies": [],
                          "whitelist": [],
                          "blacklist": [],
                          "changed": "2023-10-20T20:44:12.556924Z",
                          "changed_by": {
                            "id": "-sDw5jjjtJ3Y",
                            "email": "testuser@example.pt",
                            "name": "testuser"
                          },
                          "auth_enabled": false,
                          "logout_condition": "any",
                          "check_session_url": "",
                          "has_otp": false,
                          "otp_secret": "",
                          "otp_algorithm": "SHA1",
                          "otp_digits": 6,
                          "otp_field": "",
                          "otp_submit": "",
                          "otp_login_sequence_totp_value": "",
                          "otp_type": "totp",
                          "otp_url": "",
                          "stack": [
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "IIS",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Microsoft ASP.NET",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Windows Server",
                              "desc": ""
                            }
                          ],
                          "verified": false,
                          "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                          "verification_date": null,
                          "verification_method": "",
                          "verification_last_error": "",
                          "api_scan_settings": null
                        },
                        "type": "single",
                        "desc": "",
                        "labels": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "PwC",
                            "color": "",
                            "changed_by": {
                              "id": "MyThjkIs2Wca",
                              "email": "",
                              "name": "Example"
                            },
                            "changed": "2022-06-02T09:31:29.238031Z"
                          }
                        ],
                        "has_assets": false,
                        "report_fileformat": "docx",
                        "scanning_agent": null,
                        "teams": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Example Team"
                          }
                        ],
                        "blackout_period": {
                          "begin": "02:00:00",
                          "cease": "03:00:00",
                          "weekdays": [
                            1
                          ],
                          "enabled": true,
                          "timezone": "Africa/Lagos",
                          "changed": "2023-10-30T18:11:32.548246Z",
                          "changed_by": {
                            "id": "-sDw5JJJtV3Y",
                            "email": "testuser@example.pt",
                            "name": "Testuser"
                          }
                        }
                      },
                      "status": "completed",
                      "started": "2024-01-25T01:05:08.102608Z",
                      "completed": "2024-01-25T01:07:34.570500Z",
                      "scan_profile": {
                        "id": "lightning",
                        "name": "Lightning",
                        "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                        "builtin": true
                      },
                      "lows": 5,
                      "mediums": 1,
                      "highs": 0,
                      "created": "2024-01-25T01:05:05.894103Z",
                      "unlimited": true,
                      "changed": "2024-01-25T01:07:45.896140Z",
                      "changed_by": {
                        "id": "-sDw5iRCtV3Y",
                        "email": "tesuser@example.pt",
                        "name": "Testuser"
                      },
                      "stack": [],
                      "crawler": {
                        "state": "ended",
                        "status": [
                          4.0,
                          4.0
                        ],
                        "warning": [
                          {
                            "code": "login_failed",
                            "message": "Cannot login, please review your login settings."
                          },
                          {
                            "code": "target_status",
                            "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                          }
                        ],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "ts": 1706720605.0290248,
                          "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                          "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                          "stage": "crawler",
                          "module": "anansi",
                          "subtype": "status",
                          "data": {
                            "type": "feedback",
                            "allExtraHosts": [],
                            "countTimeoutEndpoints": 0.0,
                            "crawlingEndpoints": [],
                            "countLoginFailed": 1.0,
                            "lastLogin": [
                              {
                                "status": "failed",
                                "timestamp": 1706720567048.0
                              }
                            ],
                            "status": {
                              "500": 4.0
                            },
                            "outOfScopeHostsCount": {},
                            "allHostnames": [
                              "example.com"
                            ],
                            "version": 2.0,
                            "countNetworkErrorEndpoints": 0.0,
                            "total": 4.0,
                            "lastCrawledEndpoints": [
                              {
                                "jobId": 2.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 3.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 4.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              }
                            ],
                            "doingLogin": false,
                            "done": 4.0,
                            "rejected": 0.0,
                            "countLoginSuccess": 0.0,
                            "statusByHost": {
                              "example.com": {
                                "500": 4.0
                              }
                            }
                          }
                        }
                      },
                      "fingerprinter": {
                        "state": "ended",
                        "count": 1,
                        "warning": [],
                        "error": []
                      },
                      "scanner": {
                        "state": "ended",
                        "status": [
                          1,
                          1
                        ],
                        "warning": [],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                          "subtype": "status",
                          "stage": "scanner",
                          "module": "zap",
                          "data": {
                            "done": 79,
                            "total": 400,
                            "scannerState": {
                              "numberRequestBeingScanned": 2,
                              "currentAverageRtt": 16.444445,
                              "averageRtt": 16.444445,
                              "nStatus3xx": "0",
                              "nStatus4xx": "0",
                              "nStatus5xx": "0",
                              "nConnectionErrors": "0",
                              "nTimeouts": "0",
                              "nRequests": "9",
                              "sampleOfRequestBeingScanned": [
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                },
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "has_sequence_navigation": false,
                      "incremental": false,
                      "reduced_scope": true,
                      "crawl_sequences_only": false,
                      "ignore_blackout_period": false,
                      "user_data": null
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/{id}/endpoints/": {
      "get": {
        "operationId": "targets_scans_endpoints_retrieve",
        "description": " ",
        "summary": "Export Coverage Report",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "CSVFileHeaderExample": {
                    "value": "request_method,url,status_code,result,reason,info",
                    "summary": "CSV file header example"
                  }
                }
              }
            },
            "description": "CSV file with scanned endpoints"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/{id}/pause/": {
      "post": {
        "operationId": "targets_scans_pause_create",
        "description": " ",
        "summary": "Pause Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "MyThjkIs2Wca",
                      "target": {
                        "id": "MyThjkIs2Wca",
                        "name": "",
                        "site": {
                          "id": "MyThjkIs2Wca",
                          "name": "[PwC] Example Site",
                          "desc": "",
                          "url": "https://www.example.pt/",
                          "host": "www.example.pt",
                          "has_form_login": false,
                          "form_login_url": "https://example.com",
                          "form_login_check_pattern": "",
                          "form_login": [
                            {
                              "name": "username",
                              "value": "testuser1"
                            },
                            {
                              "name": "password",
                              "value": "testuserpassword"
                            }
                          ],
                          "logout_detection_enabled": false,
                          "has_sequence_login": true,
                          "has_sequence_navigation": false,
                          "has_basic_auth": false,
                          "basic_auth": {
                            "username": "",
                            "password": ""
                          },
                          "headers": [],
                          "cookies": [],
                          "whitelist": [],
                          "blacklist": [],
                          "changed": "2023-10-20T20:44:12.556924Z",
                          "changed_by": {
                            "id": "-sDw5jjjtJ3Y",
                            "email": "testuser@example.pt",
                            "name": "testuser"
                          },
                          "auth_enabled": false,
                          "logout_condition": "any",
                          "check_session_url": "",
                          "has_otp": false,
                          "otp_secret": "",
                          "otp_algorithm": "SHA1",
                          "otp_digits": 6,
                          "otp_field": "",
                          "otp_submit": "",
                          "otp_login_sequence_totp_value": "",
                          "otp_type": "totp",
                          "otp_url": "",
                          "stack": [
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "IIS",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Microsoft ASP.NET",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Windows Server",
                              "desc": ""
                            }
                          ],
                          "verified": false,
                          "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                          "verification_date": null,
                          "verification_method": "",
                          "verification_last_error": "",
                          "api_scan_settings": null
                        },
                        "type": "single",
                        "desc": "",
                        "labels": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "PwC",
                            "color": "",
                            "changed_by": {
                              "id": "MyThjkIs2Wca",
                              "email": "",
                              "name": "Example"
                            },
                            "changed": "2022-06-02T09:31:29.238031Z"
                          }
                        ],
                        "has_assets": false,
                        "report_fileformat": "docx",
                        "scanning_agent": null,
                        "teams": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Example Team"
                          }
                        ],
                        "blackout_period": {
                          "begin": "02:00:00",
                          "cease": "03:00:00",
                          "weekdays": [
                            1
                          ],
                          "enabled": true,
                          "timezone": "Africa/Lagos",
                          "changed": "2023-10-30T18:11:32.548246Z",
                          "changed_by": {
                            "id": "-sDw5JJJtV3Y",
                            "email": "testuser@example.pt",
                            "name": "Testuser"
                          }
                        }
                      },
                      "status": "completed",
                      "started": "2024-01-25T01:05:08.102608Z",
                      "completed": "2024-01-25T01:07:34.570500Z",
                      "scan_profile": {
                        "id": "lightning",
                        "name": "Lightning",
                        "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                        "builtin": true
                      },
                      "lows": 5,
                      "mediums": 1,
                      "highs": 0,
                      "created": "2024-01-25T01:05:05.894103Z",
                      "unlimited": true,
                      "changed": "2024-01-25T01:07:45.896140Z",
                      "changed_by": {
                        "id": "-sDw5iRCtV3Y",
                        "email": "tesuser@example.pt",
                        "name": "Testuser"
                      },
                      "stack": [],
                      "crawler": {
                        "state": "ended",
                        "status": [
                          4.0,
                          4.0
                        ],
                        "warning": [
                          {
                            "code": "login_failed",
                            "message": "Cannot login, please review your login settings."
                          },
                          {
                            "code": "target_status",
                            "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                          }
                        ],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "ts": 1706720605.0290248,
                          "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                          "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                          "stage": "crawler",
                          "module": "anansi",
                          "subtype": "status",
                          "data": {
                            "type": "feedback",
                            "allExtraHosts": [],
                            "countTimeoutEndpoints": 0.0,
                            "crawlingEndpoints": [],
                            "countLoginFailed": 1.0,
                            "lastLogin": [
                              {
                                "status": "failed",
                                "timestamp": 1706720567048.0
                              }
                            ],
                            "status": {
                              "500": 4.0
                            },
                            "outOfScopeHostsCount": {},
                            "allHostnames": [
                              "example.com"
                            ],
                            "version": 2.0,
                            "countNetworkErrorEndpoints": 0.0,
                            "total": 4.0,
                            "lastCrawledEndpoints": [
                              {
                                "jobId": 2.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 3.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 4.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              }
                            ],
                            "doingLogin": false,
                            "done": 4.0,
                            "rejected": 0.0,
                            "countLoginSuccess": 0.0,
                            "statusByHost": {
                              "example.com": {
                                "500": 4.0
                              }
                            }
                          }
                        }
                      },
                      "fingerprinter": {
                        "state": "ended",
                        "count": 1,
                        "warning": [],
                        "error": []
                      },
                      "scanner": {
                        "state": "ended",
                        "status": [
                          1,
                          1
                        ],
                        "warning": [],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                          "subtype": "status",
                          "stage": "scanner",
                          "module": "zap",
                          "data": {
                            "done": 79,
                            "total": 400,
                            "scannerState": {
                              "numberRequestBeingScanned": 2,
                              "currentAverageRtt": 16.444445,
                              "averageRtt": 16.444445,
                              "nStatus3xx": "0",
                              "nStatus4xx": "0",
                              "nStatus5xx": "0",
                              "nConnectionErrors": "0",
                              "nTimeouts": "0",
                              "nRequests": "9",
                              "sampleOfRequestBeingScanned": [
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                },
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "has_sequence_navigation": false,
                      "incremental": false,
                      "reduced_scope": true,
                      "crawl_sequences_only": false,
                      "ignore_blackout_period": false,
                      "user_data": null
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/{id}/report/": {
      "get": {
        "operationId": "targets_scans_report_retrieve",
        "description": " ",
        "summary": "Download Scan Report",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "report_type",
            "schema": {
              "type": "string",
              "enum": [
                "default",
                "executive_summary",
                "hipaa",
                "iso27001",
                "owasp",
                "pci",
                "pci4"
              ]
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/{id}/resume/": {
      "post": {
        "operationId": "targets_scans_resume_create",
        "description": " ",
        "summary": "Resume Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeOptions"
              },
              "examples": {
                "Example": {
                  "value": {
                    "id": "MyThjkIs2Wca",
                    "target": {
                      "id": "MyThjkIs2Wca",
                      "name": "",
                      "site": {
                        "id": "MyThjkIs2Wca",
                        "name": "[PwC] Example Site",
                        "desc": "",
                        "url": "https://www.example.pt/",
                        "host": "www.example.pt",
                        "has_form_login": false,
                        "form_login_url": "https://example.com",
                        "form_login_check_pattern": "",
                        "form_login": [
                          {
                            "name": "username",
                            "value": "testuser1"
                          },
                          {
                            "name": "password",
                            "value": "testuserpassword"
                          }
                        ],
                        "logout_detection_enabled": false,
                        "has_sequence_login": true,
                        "has_sequence_navigation": false,
                        "has_basic_auth": false,
                        "basic_auth": {
                          "username": "",
                          "password": ""
                        },
                        "headers": [],
                        "cookies": [],
                        "whitelist": [],
                        "blacklist": [],
                        "changed": "2023-10-20T20:44:12.556924Z",
                        "changed_by": {
                          "id": "-sDw5jjjtJ3Y",
                          "email": "testuser@example.pt",
                          "name": "testuser"
                        },
                        "auth_enabled": false,
                        "logout_condition": "any",
                        "check_session_url": "",
                        "has_otp": false,
                        "otp_secret": "",
                        "otp_algorithm": "SHA1",
                        "otp_digits": 6,
                        "otp_field": "",
                        "otp_submit": "",
                        "otp_login_sequence_totp_value": "",
                        "otp_type": "totp",
                        "otp_url": "",
                        "stack": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "IIS",
                            "desc": ""
                          },
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Microsoft ASP.NET",
                            "desc": ""
                          },
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Windows Server",
                            "desc": ""
                          }
                        ],
                        "verified": false,
                        "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                        "verification_date": null,
                        "verification_method": "",
                        "verification_last_error": "",
                        "api_scan_settings": null
                      },
                      "type": "single",
                      "desc": "",
                      "labels": [
                        {
                          "id": "MyThjkIs2Wca",
                          "name": "PwC",
                          "color": "",
                          "changed_by": {
                            "id": "MyThjkIs2Wca",
                            "email": "",
                            "name": "Example"
                          },
                          "changed": "2022-06-02T09:31:29.238031Z"
                        }
                      ],
                      "has_assets": false,
                      "report_fileformat": "docx",
                      "scanning_agent": null,
                      "teams": [
                        {
                          "id": "MyThjkIs2Wca",
                          "name": "Example Team"
                        }
                      ],
                      "blackout_period": {
                        "begin": "02:00:00",
                        "cease": "03:00:00",
                        "weekdays": [
                          1
                        ],
                        "enabled": true,
                        "timezone": "Africa/Lagos",
                        "changed": "2023-10-30T18:11:32.548246Z",
                        "changed_by": {
                          "id": "-sDw5JJJtV3Y",
                          "email": "testuser@example.pt",
                          "name": "Testuser"
                        }
                      }
                    },
                    "status": "completed",
                    "started": "2024-01-25T01:05:08.102608Z",
                    "completed": "2024-01-25T01:07:34.570500Z",
                    "scan_profile": {
                      "id": "lightning",
                      "name": "Lightning",
                      "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                      "builtin": true
                    },
                    "lows": 5,
                    "mediums": 1,
                    "highs": 0,
                    "created": "2024-01-25T01:05:05.894103Z",
                    "unlimited": true,
                    "changed": "2024-01-25T01:07:45.896140Z",
                    "changed_by": {
                      "id": "-sDw5iRCtV3Y",
                      "email": "tesuser@example.pt",
                      "name": "Testuser"
                    },
                    "stack": [],
                    "crawler": {
                      "state": "ended",
                      "status": [
                        4.0,
                        4.0
                      ],
                      "warning": [
                        {
                          "code": "login_failed",
                          "message": "Cannot login, please review your login settings."
                        },
                        {
                          "code": "target_status",
                          "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                        }
                      ],
                      "error": [],
                      "full_status": {
                        "type": "feedback",
                        "ts": 1706720605.0290248,
                        "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                        "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                        "stage": "crawler",
                        "module": "anansi",
                        "subtype": "status",
                        "data": {
                          "type": "feedback",
                          "allExtraHosts": [],
                          "countTimeoutEndpoints": 0.0,
                          "crawlingEndpoints": [],
                          "countLoginFailed": 1.0,
                          "lastLogin": [
                            {
                              "status": "failed",
                              "timestamp": 1706720567048.0
                            }
                          ],
                          "status": {
                            "500": 4.0
                          },
                          "outOfScopeHostsCount": {},
                          "allHostnames": [
                            "example.com"
                          ],
                          "version": 2.0,
                          "countNetworkErrorEndpoints": 0.0,
                          "total": 4.0,
                          "lastCrawledEndpoints": [
                            {
                              "jobId": 2.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            },
                            {
                              "jobId": 3.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            },
                            {
                              "jobId": 4.0,
                              "status": 500.0,
                              "method": "GET",
                              "url": "https://example.com/"
                            }
                          ],
                          "doingLogin": false,
                          "done": 4.0,
                          "rejected": 0.0,
                          "countLoginSuccess": 0.0,
                          "statusByHost": {
                            "example.com": {
                              "500": 4.0
                            }
                          }
                        }
                      }
                    },
                    "fingerprinter": {
                      "state": "ended",
                      "count": 1,
                      "warning": [],
                      "error": []
                    },
                    "scanner": {
                      "state": "ended",
                      "status": [
                        1,
                        1
                      ],
                      "warning": [],
                      "error": [],
                      "full_status": {
                        "type": "feedback",
                        "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                        "subtype": "status",
                        "stage": "scanner",
                        "module": "zap",
                        "data": {
                          "done": 79,
                          "total": 400,
                          "scannerState": {
                            "numberRequestBeingScanned": 2,
                            "currentAverageRtt": 16.444445,
                            "averageRtt": 16.444445,
                            "nStatus3xx": "0",
                            "nStatus4xx": "0",
                            "nStatus5xx": "0",
                            "nConnectionErrors": "0",
                            "nTimeouts": "0",
                            "nRequests": "9",
                            "sampleOfRequestBeingScanned": [
                              {
                                "httpMethod": "GET",
                                "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                              },
                              {
                                "httpMethod": "GET",
                                "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "has_sequence_navigation": false,
                    "incremental": false,
                    "reduced_scope": true,
                    "crawl_sequences_only": false,
                    "ignore_blackout_period": false,
                    "user_data": null
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResumeOptions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ResumeOptions"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "MyThjkIs2Wca",
                      "target": {
                        "id": "MyThjkIs2Wca",
                        "name": "",
                        "site": {
                          "id": "MyThjkIs2Wca",
                          "name": "[PwC] Example Site",
                          "desc": "",
                          "url": "https://www.example.pt/",
                          "host": "www.example.pt",
                          "has_form_login": false,
                          "form_login_url": "https://example.com",
                          "form_login_check_pattern": "",
                          "form_login": [
                            {
                              "name": "username",
                              "value": "testuser1"
                            },
                            {
                              "name": "password",
                              "value": "testuserpassword"
                            }
                          ],
                          "logout_detection_enabled": false,
                          "has_sequence_login": true,
                          "has_sequence_navigation": false,
                          "has_basic_auth": false,
                          "basic_auth": {
                            "username": "",
                            "password": ""
                          },
                          "headers": [],
                          "cookies": [],
                          "whitelist": [],
                          "blacklist": [],
                          "changed": "2023-10-20T20:44:12.556924Z",
                          "changed_by": {
                            "id": "-sDw5jjjtJ3Y",
                            "email": "testuser@example.pt",
                            "name": "testuser"
                          },
                          "auth_enabled": false,
                          "logout_condition": "any",
                          "check_session_url": "",
                          "has_otp": false,
                          "otp_secret": "",
                          "otp_algorithm": "SHA1",
                          "otp_digits": 6,
                          "otp_field": "",
                          "otp_submit": "",
                          "otp_login_sequence_totp_value": "",
                          "otp_type": "totp",
                          "otp_url": "",
                          "stack": [
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "IIS",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Microsoft ASP.NET",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Windows Server",
                              "desc": ""
                            }
                          ],
                          "verified": false,
                          "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                          "verification_date": null,
                          "verification_method": "",
                          "verification_last_error": "",
                          "api_scan_settings": null
                        },
                        "type": "single",
                        "desc": "",
                        "labels": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "PwC",
                            "color": "",
                            "changed_by": {
                              "id": "MyThjkIs2Wca",
                              "email": "",
                              "name": "Example"
                            },
                            "changed": "2022-06-02T09:31:29.238031Z"
                          }
                        ],
                        "has_assets": false,
                        "report_fileformat": "docx",
                        "scanning_agent": null,
                        "teams": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Example Team"
                          }
                        ],
                        "blackout_period": {
                          "begin": "02:00:00",
                          "cease": "03:00:00",
                          "weekdays": [
                            1
                          ],
                          "enabled": true,
                          "timezone": "Africa/Lagos",
                          "changed": "2023-10-30T18:11:32.548246Z",
                          "changed_by": {
                            "id": "-sDw5JJJtV3Y",
                            "email": "testuser@example.pt",
                            "name": "Testuser"
                          }
                        }
                      },
                      "status": "completed",
                      "started": "2024-01-25T01:05:08.102608Z",
                      "completed": "2024-01-25T01:07:34.570500Z",
                      "scan_profile": {
                        "id": "lightning",
                        "name": "Lightning",
                        "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                        "builtin": true
                      },
                      "lows": 5,
                      "mediums": 1,
                      "highs": 0,
                      "created": "2024-01-25T01:05:05.894103Z",
                      "unlimited": true,
                      "changed": "2024-01-25T01:07:45.896140Z",
                      "changed_by": {
                        "id": "-sDw5iRCtV3Y",
                        "email": "tesuser@example.pt",
                        "name": "Testuser"
                      },
                      "stack": [],
                      "crawler": {
                        "state": "ended",
                        "status": [
                          4.0,
                          4.0
                        ],
                        "warning": [
                          {
                            "code": "login_failed",
                            "message": "Cannot login, please review your login settings."
                          },
                          {
                            "code": "target_status",
                            "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                          }
                        ],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "ts": 1706720605.0290248,
                          "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                          "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                          "stage": "crawler",
                          "module": "anansi",
                          "subtype": "status",
                          "data": {
                            "type": "feedback",
                            "allExtraHosts": [],
                            "countTimeoutEndpoints": 0.0,
                            "crawlingEndpoints": [],
                            "countLoginFailed": 1.0,
                            "lastLogin": [
                              {
                                "status": "failed",
                                "timestamp": 1706720567048.0
                              }
                            ],
                            "status": {
                              "500": 4.0
                            },
                            "outOfScopeHostsCount": {},
                            "allHostnames": [
                              "example.com"
                            ],
                            "version": 2.0,
                            "countNetworkErrorEndpoints": 0.0,
                            "total": 4.0,
                            "lastCrawledEndpoints": [
                              {
                                "jobId": 2.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 3.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 4.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              }
                            ],
                            "doingLogin": false,
                            "done": 4.0,
                            "rejected": 0.0,
                            "countLoginSuccess": 0.0,
                            "statusByHost": {
                              "example.com": {
                                "500": 4.0
                              }
                            }
                          }
                        }
                      },
                      "fingerprinter": {
                        "state": "ended",
                        "count": 1,
                        "warning": [],
                        "error": []
                      },
                      "scanner": {
                        "state": "ended",
                        "status": [
                          1,
                          1
                        ],
                        "warning": [],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                          "subtype": "status",
                          "stage": "scanner",
                          "module": "zap",
                          "data": {
                            "done": 79,
                            "total": 400,
                            "scannerState": {
                              "numberRequestBeingScanned": 2,
                              "currentAverageRtt": 16.444445,
                              "averageRtt": 16.444445,
                              "nStatus3xx": "0",
                              "nStatus4xx": "0",
                              "nStatus5xx": "0",
                              "nConnectionErrors": "0",
                              "nTimeouts": "0",
                              "nRequests": "9",
                              "sampleOfRequestBeingScanned": [
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                },
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "has_sequence_navigation": false,
                      "incremental": false,
                      "reduced_scope": true,
                      "crawl_sequences_only": false,
                      "ignore_blackout_period": false,
                      "user_data": null
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/dates/": {
      "get": {
        "operationId": "targets_scans_dates_retrieve",
        "description": " ",
        "summary": "List Scan Dates",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "MyThjkIs2Wca",
                      "target": {
                        "id": "MyThjkIs2Wca",
                        "name": "",
                        "site": {
                          "id": "MyThjkIs2Wca",
                          "name": "[PwC] Example Site",
                          "desc": "",
                          "url": "https://www.example.pt/",
                          "host": "www.example.pt",
                          "has_form_login": false,
                          "form_login_url": "https://example.com",
                          "form_login_check_pattern": "",
                          "form_login": [
                            {
                              "name": "username",
                              "value": "testuser1"
                            },
                            {
                              "name": "password",
                              "value": "testuserpassword"
                            }
                          ],
                          "logout_detection_enabled": false,
                          "has_sequence_login": true,
                          "has_sequence_navigation": false,
                          "has_basic_auth": false,
                          "basic_auth": {
                            "username": "",
                            "password": ""
                          },
                          "headers": [],
                          "cookies": [],
                          "whitelist": [],
                          "blacklist": [],
                          "changed": "2023-10-20T20:44:12.556924Z",
                          "changed_by": {
                            "id": "-sDw5jjjtJ3Y",
                            "email": "testuser@example.pt",
                            "name": "testuser"
                          },
                          "auth_enabled": false,
                          "logout_condition": "any",
                          "check_session_url": "",
                          "has_otp": false,
                          "otp_secret": "",
                          "otp_algorithm": "SHA1",
                          "otp_digits": 6,
                          "otp_field": "",
                          "otp_submit": "",
                          "otp_login_sequence_totp_value": "",
                          "otp_type": "totp",
                          "otp_url": "",
                          "stack": [
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "IIS",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Microsoft ASP.NET",
                              "desc": ""
                            },
                            {
                              "id": "MyThjkIs2Wca",
                              "name": "Windows Server",
                              "desc": ""
                            }
                          ],
                          "verified": false,
                          "verification_token": "07080d0e-1234-ABCD-1234-fcbb57e2fe0c",
                          "verification_date": null,
                          "verification_method": "",
                          "verification_last_error": "",
                          "api_scan_settings": null
                        },
                        "type": "single",
                        "desc": "",
                        "labels": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "PwC",
                            "color": "",
                            "changed_by": {
                              "id": "MyThjkIs2Wca",
                              "email": "",
                              "name": "Example"
                            },
                            "changed": "2022-06-02T09:31:29.238031Z"
                          }
                        ],
                        "has_assets": false,
                        "report_fileformat": "docx",
                        "scanning_agent": null,
                        "teams": [
                          {
                            "id": "MyThjkIs2Wca",
                            "name": "Example Team"
                          }
                        ],
                        "blackout_period": {
                          "begin": "02:00:00",
                          "cease": "03:00:00",
                          "weekdays": [
                            1
                          ],
                          "enabled": true,
                          "timezone": "Africa/Lagos",
                          "changed": "2023-10-30T18:11:32.548246Z",
                          "changed_by": {
                            "id": "-sDw5JJJtV3Y",
                            "email": "testuser@example.pt",
                            "name": "Testuser"
                          }
                        }
                      },
                      "status": "completed",
                      "started": "2024-01-25T01:05:08.102608Z",
                      "completed": "2024-01-25T01:07:34.570500Z",
                      "scan_profile": {
                        "id": "lightning",
                        "name": "Lightning",
                        "description": "Fast scan that checks vulnerabilities related to SSL/TLS, HTTP security headers, and cookies attributes.",
                        "builtin": true
                      },
                      "lows": 5,
                      "mediums": 1,
                      "highs": 0,
                      "created": "2024-01-25T01:05:05.894103Z",
                      "unlimited": true,
                      "changed": "2024-01-25T01:07:45.896140Z",
                      "changed_by": {
                        "id": "-sDw5iRCtV3Y",
                        "email": "tesuser@example.pt",
                        "name": "Testuser"
                      },
                      "stack": [],
                      "crawler": {
                        "state": "ended",
                        "status": [
                          4.0,
                          4.0
                        ],
                        "warning": [
                          {
                            "code": "login_failed",
                            "message": "Cannot login, please review your login settings."
                          },
                          {
                            "code": "target_status",
                            "message": "The target is responding with an HTTP 500 code. Please make sure that this is intended. If Probely's requests are being throttled, ignored, or rejected, this will result in poor scan results."
                          }
                        ],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "ts": 1706720605.0290248,
                          "iid": "c144f028-9110-XXXX-1234-5d2b10161f43",
                          "aid": "b3448314-41c8-XXXX-1234-fd1af2a9f1fb",
                          "stage": "crawler",
                          "module": "anansi",
                          "subtype": "status",
                          "data": {
                            "type": "feedback",
                            "allExtraHosts": [],
                            "countTimeoutEndpoints": 0.0,
                            "crawlingEndpoints": [],
                            "countLoginFailed": 1.0,
                            "lastLogin": [
                              {
                                "status": "failed",
                                "timestamp": 1706720567048.0
                              }
                            ],
                            "status": {
                              "500": 4.0
                            },
                            "outOfScopeHostsCount": {},
                            "allHostnames": [
                              "example.com"
                            ],
                            "version": 2.0,
                            "countNetworkErrorEndpoints": 0.0,
                            "total": 4.0,
                            "lastCrawledEndpoints": [
                              {
                                "jobId": 2.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 3.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              },
                              {
                                "jobId": 4.0,
                                "status": 500.0,
                                "method": "GET",
                                "url": "https://example.com/"
                              }
                            ],
                            "doingLogin": false,
                            "done": 4.0,
                            "rejected": 0.0,
                            "countLoginSuccess": 0.0,
                            "statusByHost": {
                              "example.com": {
                                "500": 4.0
                              }
                            }
                          }
                        }
                      },
                      "fingerprinter": {
                        "state": "ended",
                        "count": 1,
                        "warning": [],
                        "error": []
                      },
                      "scanner": {
                        "state": "ended",
                        "status": [
                          1,
                          1
                        ],
                        "warning": [],
                        "error": [],
                        "full_status": {
                          "type": "feedback",
                          "aid": "494b2a40-5e8d-4d6c-808b-ac81194917d4",
                          "subtype": "status",
                          "stage": "scanner",
                          "module": "zap",
                          "data": {
                            "done": 79,
                            "total": 400,
                            "scannerState": {
                              "numberRequestBeingScanned": 2,
                              "currentAverageRtt": 16.444445,
                              "averageRtt": 16.444445,
                              "nStatus3xx": "0",
                              "nStatus4xx": "0",
                              "nStatus5xx": "0",
                              "nConnectionErrors": "0",
                              "nTimeouts": "0",
                              "nRequests": "9",
                              "sampleOfRequestBeingScanned": [
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__122__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                },
                                {
                                  "httpMethod": "GET",
                                  "url": "http://127.0.0.1:9999/dynamicResponseGenerator/XXX__120__XXX?x1=aaaaaa&x2=aaaaaa&x3=aaaaaa&x4=aaaaaa&x5=aaaaaa&x6=aaaaaa"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "has_sequence_navigation": false,
                      "incremental": false,
                      "reduced_scope": true,
                      "crawl_sequences_only": false,
                      "ignore_blackout_period": false,
                      "user_data": null
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scans/retrieve_page/": {
      "get": {
        "operationId": "targets_scans_retrieve_page_retrieve",
        "description": " ",
        "summary": "Retrieve Page Number for Scan Date",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "example": 6
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid JWT."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scheduledscans/": {
      "get": {
        "operationId": "targets_scheduledscans_list",
        "description": " ",
        "summary": "List Target's Scheduled Scans",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScheduledScanList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "targets_scheduledscans_create",
        "description": " ",
        "summary": "Create Target's Scheduled Scan",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledScan"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scheduledscans/{id}/": {
      "get": {
        "operationId": "targets_scheduledscans_retrieve",
        "description": " ",
        "summary": "Retrieve Target's Scheduled Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledScan"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_scheduledscans_update",
        "description": " ",
        "summary": "Update Target's Scheduled Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledScan"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_scheduledscans_partial_update",
        "description": " ",
        "summary": "Partial Update Target's Scheduled Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScheduledScan"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScheduledScan"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedScheduledScan"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledScan"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_scheduledscans_destroy",
        "description": " ",
        "summary": "Delete Target's Scheduled Scan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/scheduledscans/expanded/": {
      "get": {
        "operationId": "targets_scheduledscans_expanded_retrieve",
        "description": " ",
        "summary": "List Target's Scheduled Scans (Expanded)",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Scans"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/sequences/": {
      "get": {
        "operationId": "targets_sequences_list",
        "description": " ",
        "summary": "List Sequences",
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "string",
              "enum": [
                "content",
                "target"
              ]
            },
            "description": "\nExtra fields to include in response:\n\n* content - Add file contents to response under `content` key\n* target - Add target to response under `target` key\n"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "x-spec-enum-id": "fab4d916e03c4321",
              "enum": [
                "login",
                "navigation"
              ]
            },
            "description": "* `login` - Login\n* `navigation` - Navigation"
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSequencesList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "targets_sequences_create",
        "description": " ",
        "summary": "Create Sequence",
        "parameters": [
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "string",
              "enum": [
                "target"
              ]
            },
            "description": "\nExtra fields to include in response:\n\n* target - Add target to response under `target` key\n"
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sequences"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/sequences/{id}/": {
      "get": {
        "operationId": "targets_sequences_retrieve",
        "description": " ",
        "summary": "Retrieve Sequence",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "string",
              "enum": [
                "content",
                "target"
              ]
            },
            "description": "\nExtra fields to include in response:\n\n* content - Add file contents to response under `content` key\n* target - Add target to response under `target` key\n"
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sequences"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_sequences_update",
        "description": " ",
        "summary": "Update Sequence",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "string",
              "enum": [
                "target"
              ]
            },
            "description": "\nExtra fields to include in response:\n\n* target - Add target to response under `target` key\n"
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sequences"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_sequences_partial_update",
        "description": " ",
        "summary": "Partial Update Sequence",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "string",
              "enum": [
                "target"
              ]
            },
            "description": "\nExtra fields to include in response:\n\n* target - Add target to response under `target` key\n"
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSequences"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSequences"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSequences"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sequences"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_sequences_destroy",
        "description": " ",
        "summary": "Delete Sequence",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/sequences/{id}/order/": {
      "post": {
        "operationId": "targets_sequences_order_create",
        "description": " ",
        "summary": "Re-order Sequences",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Sequences"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sequences"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/webhooks/": {
      "get": {
        "operationId": "targets_webhooks_list",
        "description": " ",
        "summary": "List Target's Webhooks",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "targets_webhooks_create",
        "description": " ",
        "summary": "Create Target's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/{target_id}/webhooks/{id}/": {
      "get": {
        "operationId": "targets_webhooks_retrieve",
        "description": " ",
        "summary": "Retrieve Target's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "targets_webhooks_update",
        "description": " ",
        "summary": "Update Target's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.r of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "targets_webhooks_partial_update",
        "description": " ",
        "summary": "Partial Update Target's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWebhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWebhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWebhook"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "targets_webhooks_destroy",
        "description": " ",
        "summary": "Delete Target's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          },
          {
            "in": "path",
            "name": "target_id",
            "schema": {
              "type": "string"
            },
            "description": "Identifier of the target.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/average_fix_time/": {
      "get": {
        "operationId": "targets_all_average_fix_time_retrieve",
        "description": " ",
        "summary": "Average Fix Time Graph",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "<vuln name>": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/needs_attention_pie/": {
      "get": {
        "operationId": "targets_all_needs_attention_pie_retrieve",
        "description": " ",
        "summary": "Targets with open vulnerabilities pie chart data",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "array"
                      },
                      "example": [
                        [
                          "needing attention",
                          0,
                          "needs_attention"
                        ],
                        [
                          "no issues found",
                          0,
                          "no_issues_found"
                        ]
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/needs_attention_top/": {
      "get": {
        "operationId": "targets_all_needs_attention_top_retrieve",
        "description": " ",
        "summary": "Targets with top number of open vulnerabilities",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "Example ID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Example name"
                      },
                      "url": {
                        "type": "string",
                        "example": "Example URL"
                      },
                      "highs": {
                        "type": "number",
                        "example": 1
                      },
                      "mediums": {
                        "type": "number",
                        "example": 2
                      },
                      "lows": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/risk_trend/": {
      "get": {
        "operationId": "targets_all_risk_trend_retrieve",
        "description": " ",
        "summary": "Risk Trend Graph",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string"
                    },
                    "stop": {
                      "type": "string"
                    },
                    "step": {
                      "type": "string"
                    },
                    "results": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/scans/": {
      "get": {
        "operationId": "targets_all_scans_retrieve",
        "description": " ",
        "summary": "List all Scans of Target",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/scheduledscans/expanded/": {
      "get": {
        "operationId": "targets_all_scheduledscans_expanded_retrieve",
        "description": " ",
        "summary": "Account Scheduled Scans",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/severity_trend/": {
      "get": {
        "operationId": "targets_all_severity_trend_retrieve",
        "description": " ",
        "summary": "Severity Trend Graph",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string"
                    },
                    "stop": {
                      "type": "string"
                    },
                    "step": {
                      "type": "string"
                    },
                    "results": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/all/top_vulns/": {
      "get": {
        "operationId": "targets_all_top_vulns_retrieve",
        "description": " ",
        "summary": "Top Vulnerabilities Graph",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/assets/": {
      "get": {
        "operationId": "targets_assets_list",
        "description": " ",
        "summary": "List Account's Extra Hosts",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of Extra Hosts to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `id` filter validation.  \nIf any `id` filter is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nExtra Host's target to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Extra Hosts"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAcccountAssetsList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/bulk/delete/": {
      "post": {
        "operationId": "targets_bulk_delete_create",
        "description": "Disable multiple Targets in one operation.",
        "summary": "Bulk Delete Targets",
        "parameters": [
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `ids` payload validation.  \nIf any `ids` payload is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/bulk/move-team/": {
      "post": {
        "operationId": "targets_bulk_move_team_create",
        "description": " ",
        "summary": "Move Targets to Another Team",
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkMoveTeam"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkMoveTeam"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkMoveTeam"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkMoveTeam"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/bulk/update/": {
      "post": {
        "operationId": "targets_bulk_update_create",
        "description": "Update multiple Targets in one operation.",
        "summary": "Bulk Update Targets",
        "parameters": [
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `ids` payload validation.  \nIf any `ids` payload is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          }
        ],
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeBulkUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScopeBulkUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScopeBulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/download/": {
      "get": {
        "operationId": "targets_download_retrieve",
        "description": " ",
        "summary": "Export Targets",
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/sequences/": {
      "get": {
        "operationId": "accounts_target_sequences_list",
        "description": " ",
        "summary": "List Account's Sequences",
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of Asset Sequence to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "string",
              "enum": [
                "content"
              ]
            },
            "description": "\nExtra fields to include in response:\n* content - Add file contents to response under `content` key\n"
          },
          {
            "in": "query",
            "name": "is_id_404_validation",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "\nIf true, triggers custom response for `id` filter validation.  \nIf any `id` filter is invalid, returns a 404 with the following content:  \n```\n{\n    \"detail\": \"Not Found\",\n    \"is_id_404_validation\": true,\n    \"invalid_ids\": [\n        \"9vebyEVLNoZX\",\n        \"6CuzJtJmMp48\"\n    ]\n}\n```\n"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "x-spec-enum-id": "fab4d916e03c4321",
              "enum": [
                "login",
                "navigation"
              ]
            },
            "description": "* `login` - Login\n* `navigation` - Navigation"
          }
        ],
        "tags": [
          "Navigation and Login Sequences"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAccountSequencesList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/targets/upload/": {
      "post": {
        "operationId": "targets_upload_create",
        "description": "\nThe upload functionality allows the automatic creation of new targets from multiple file formats (`.yaml`, `.csv`, `.json`).\n\nAnd one can optionally add scheduled scan data when uploading target data.\n\nThe following are the required internal data structures.\n\n### CSV data\n\nThe fields about scheduled scan data can be left empty if not necessary.\n\n```csv\n\"name\",\"url\",\"scan_profile\",\"scheduledscan_datetime\",\"scheduledscan_recurrence\",\"labels\"\n\"My target\",\"https://mytarget.url.com\",\"Normal\",\"2022-12-30T12:34:56.224739\",\"m\",\"['label1', 'label2']\"\n\"My other target\",\"https://www.mytargetsite2.com\",\"Normal\",\"\",\"\",\"['label3', 'label2']\"\n```\n\n### YAML data\n\n```yaml\n- name: My target\n    site:\n        name: My target site\n        desc: My target site description\n        url: https://mytarget.url.com\n        # optional site fields\n        form_login_url: https://mytarget.url.com/login\n        form_login_check_pattern: \"\"\n        form_login: []\n        headers: []\n        cookies: []\n        whitelist: []\n    scan_profile: normal\n    type: single\n    # optional target fields\n    report_type: default\n    # optional scheduled_scan data\n    scheduled_scan:\n        date_time: \"2022-12-30T12:34:56.224739\"\n        recurrence: \"d\"\n        timezome: \"Europe/Madrid\"\n```\n\n### JSON data\n\nData format with nested `ScheduledScan` data:\n\n```json\n[\n    {\n        \"name\": \"My target\",\n        \"site\": {\n            \"name\": \"My target site\",\n            \"desc\": \"My target description\",\n            \"url\": \"https://mytarget.url.com\",\n            # optional site fields\n            \"form_login_url\": \"https://mytarget.url.com/login,\n            \"form_login_check_pattern\": \"\",\n            \"form_login\": [],\n            \"headers\": [],\n            \"cookies\": [],\n            \"whitelist\": []\n        },\n        \"scan_profile\": \"Normal\",\n        // optional scheduled_scan data\n        \"scheduled_scan\": {\n            \"date_time\": \"2022-12-30T12:34:56.224739\",\n            \"recurrence\": \"d\",\n            \"timezone\": \"Europe/Madrid\"\n        }\n    }\n]\n```\n\nData format with flat `ScheduledScan` data:\n\n```json\n[\n    {\n        \"name\": \"My target\",\n        \"site\": {\n            \"name\": \"My target site\",\n            \"desc\": \"My target description\",\n            \"url\": \"https://mytarget.url.com\"\n            # optional site fields\n            \"form_login_url\": \"https://mytarget.url.com/login,\n            \"form_login_check_pattern\": \"\",\n            \"form_login\": [],\n            \"headers\": [],\n            \"cookies\": [],\n            \"whitelist\": []\n        },\n        \"scan_profile\": \"Normal\",\n        // optional scheduled_scan data\n        \"scheduledscan_datetime\": \"2022-12-30T12:34:56.224739\",\n        \"scheduledscan_recurrence\": \"m\"\n    },\n]\n```\n\n",
        "summary": "Import Targets",
        "tags": [
          "Targets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Scope"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Scope"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Scope"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "target_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "<target id>"
                      }
                    },
                    "scan_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "<target id>"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/teams/": {
      "get": {
        "operationId": "teams_list",
        "description": " ",
        "summary": "List Teams",
        "parameters": [
          {
            "in": "query",
            "name": "can_create_target",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "can_move",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "teams_create",
        "description": " ",
        "summary": "Create Team",
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/teams/{id}/": {
      "get": {
        "operationId": "teams_retrieve",
        "description": " ",
        "summary": "Retrieve Team",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "teams_update",
        "description": " ",
        "summary": "Update Team",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "teams_partial_update",
        "description": " ",
        "summary": "Partial Update Team",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedTeam"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedTeam"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedTeam"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "teams_destroy",
        "description": " ",
        "summary": "Delete Team",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/teams/available-slots/": {
      "get": {
        "operationId": "teams_available_slots_retrieve",
        "description": " ",
        "summary": "Retrieve the Number of Free Slots for Targets in the Team",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "slots": {
                      "type": "integer",
                      "example": 23
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user-roles/": {
      "get": {
        "operationId": "user_roles_list",
        "description": " ",
        "summary": "List User Roles",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "User Roles"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserRoleList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "user_roles_create",
        "description": " ",
        "summary": "Create User Role",
        "tags": [
          "User Roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user-roles/{id}/": {
      "get": {
        "operationId": "user_roles_retrieve",
        "description": " ",
        "summary": "Retrieve User Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Roles"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "user_roles_destroy",
        "description": " ",
        "summary": "Delete User Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Roles"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user-roles/bulk/create/": {
      "post": {
        "operationId": "user_roles_bulk_create_create",
        "description": "Add roles to multiple users in one operation.",
        "summary": "Bulk Create User Roles",
        "tags": [
          "User Roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleCreateRequest"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleCreateRequest"
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleCreateRequest"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRole"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user-roles/bulk/delete/": {
      "post": {
        "operationId": "user_roles_bulk_delete_create",
        "description": " ",
        "summary": "Bulk Delete User Roles",
        "tags": [
          "User Roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDelete"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user-roles/bulk/operations/": {
      "post": {
        "operationId": "user_roles_bulk_operations_create",
        "description": "add/delete multiple user roles in one operation.",
        "summary": "Bulk Operations User Roles",
        "tags": [
          "User Roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleOperationsRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleOperationsRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleOperationsRequest"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleOperationsResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/users/": {
      "get": {
        "operationId": "users_list",
        "description": " ",
        "summary": "List Users",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "active",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "exclude",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to exclude from the response."
          },
          {
            "in": "query",
            "name": "exclude_target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between user labels:  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "mfa_enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "no_access",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "A unique Base58 value identifying this object.",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "target",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserResponseList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "users_create",
        "description": " ",
        "summary": "Create User",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/users/{id}/": {
      "get": {
        "operationId": "users_retrieve",
        "description": " ",
        "summary": "Retrieve User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "users_update",
        "description": " ",
        "summary": "Update User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "users_partial_update",
        "description": " ",
        "summary": "Partial Update User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "users_destroy",
        "description": " ",
        "summary": "Disable User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/users/{user_id}/targets/": {
      "get": {
        "operationId": "users_targets_list",
        "description": " ",
        "summary": "List Targets",
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "exclude_team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to exclude from results, as a query string.  \nFor example, \"exclude_team=Frontend\" or \"exclude_team=Frontend&exclude_team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nIdentifiers of targets to filter results.\nMultiple choices are possible by repeating the query_param.\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nTarget label IDs to filter results, as a query string.  \n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "label_logical_operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "description": "\nLogical operator to apply between target labels.  \n(Defaults to `or`)\n\n\n* `and` - and\n* `or` - or"
          },
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "risk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  0,
                  10,
                  20,
                  30,
                  null
                ]
              }
            },
            "description": "Target risk to filter results:\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "scan_profile",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "\nIdentifiers of the scan profiles to filter results, separated by commas.\n",
            "explode": true,
            "style": "form"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "team",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nNames of the teams to filter results, as a query string.  \nFor example, \"team=Frontend\" or \"team=Frontend&team=Backend\".\n",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "unlimited",
            "schema": {
              "type": "boolean"
            },
            "description": "\nIf true, filter results by targets with unlimited scans.  \nIf false, filter results by targets that use credits.\n"
          },
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "verified",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserScopeList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/users/bulk/update/": {
      "post": {
        "operationId": "users_bulk_update_create",
        "description": " ",
        "summary": "Bulk Update Users",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBulkUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserBulkUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserBulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/webhooks/": {
      "get": {
        "operationId": "webhooks_list",
        "description": " ",
        "summary": "List Account's Webhooks",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebhookList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "webhooks_create",
        "description": " ",
        "summary": "Create Account's Webhook",
        "tags": [
          "Events"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/webhooks/{id}/": {
      "get": {
        "operationId": "webhooks_retrieve",
        "description": " ",
        "summary": "Retrieve Account's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "webhooks_update",
        "description": " ",
        "summary": "Update Account's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "webhooks_partial_update",
        "description": " ",
        "summary": "Partial Update Account's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWebhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWebhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWebhook"
              }
            }
          }
        },
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "webhooks_destroy",
        "description": " ",
        "summary": "Delete Account's Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "A unique Base58 value identifying this object."
            },
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/wizard/targets": {
      "get": {
        "operationId": "wizard_targets_list",
        "description": " ",
        "summary": "List Wizard Targets",
        "parameters": [
          {
            "name": "length",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Targets"
        ],
        "security": [
          {
            "JWT Authentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScopeAutoSettingList"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field name>": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors related to field <field name>."
                      }
                    },
                    "non_field_errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Errors not related to any field specific field."
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unexpected error while handling your request."
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIScanLoginOptions": {
        "type": "object",
        "properties": {
          "media_type": {
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded"
            ],
            "type": "string",
            "x-spec-enum-id": "f842db395ebd9c6a",
            "description": "Format of the payload:\n\n* `application/json` - The payload is in JSON format in the request body.\n* `application/x-www-form-urlencoded` - The payload is encoded in the request URL."
          },
          "api_login_url": {
            "type": "string",
            "description": "\nURL to make the authentication request to the API.  \nThe maximum length is 2048 characters.\n",
            "maxLength": 2048
          },
          "api_login_payload": {
            "type": "string",
            "description": "\nPayload to send in the authentication request.  \nThe maximum length is 4096 characters.\n",
            "maxLength": 4096
          },
          "api_login_token_field": {
            "type": "string",
            "description": "\nField containing the authentication token in the response to the authentication request.  \nThe maximum length is 256 characters.\n",
            "maxLength": 256
          },
          "token_prefix": {
            "type": "string",
            "description": "\nPrefix to add to the authentication token.  \nFor example, \"Bearer\" or \"JWT\".  \nThe maximum length is 16 characters.\n",
            "maxLength": 16
          },
          "token_parameter_name": {
            "type": "string",
            "description": "\nParameter name to send the authentication token.  \nFor example, \"Authorization\".  \nThe maximum length is 256 characters.\n",
            "maxLength": 256
          },
          "token_parameter_location": {
            "enum": [
              "cookie",
              "header"
            ],
            "type": "string",
            "x-spec-enum-id": "046347d091ce344d",
            "description": "Where to send the parameter name with the authentication token and the prefix:\n\n* `cookie` - Cookie\n* `header` - Header"
          }
        },
        "required": [
          "api_login_payload",
          "api_login_token_field",
          "api_login_url",
          "media_type",
          "token_parameter_location",
          "token_parameter_name",
          "token_prefix"
        ]
      },
      "APIScanSettings": {
        "type": "object",
        "properties": {
          "api_schema_type": {
            "enum": [
              "openapi",
              "postman"
            ],
            "type": "string",
            "x-spec-enum-id": "2f035a92a0da5c01",
            "description": "Type of schema that defines the API:\n\n* `openapi` - OpenAPI schema.\n* `postman` - Postman collection."
          },
          "api_schema_url": {
            "type": "string",
            "nullable": true
          },
          "api_schema_file": {
            "type": "string",
            "nullable": true
          },
          "custom_api_parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            }
          },
          "media_type": {
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded"
            ],
            "type": "string",
            "x-spec-enum-id": "f842db395ebd9c6a",
            "description": "Format of the payload:\n\n* `application/json` - The payload is in JSON format in the request body.\n* `application/x-www-form-urlencoded` - The payload is encoded in the request URL."
          },
          "api_login_url": {
            "type": "string",
            "description": "\nURL to make the authentication request to the API.  \nThe maximum length is 2048 characters.\n",
            "maxLength": 2048
          },
          "api_login_payload": {
            "type": "string",
            "description": "\nPayload to send in the authentication request.  \nThe maximum length is 4096 characters.\n",
            "maxLength": 4096
          },
          "api_login_enabled": {
            "type": "boolean"
          },
          "api_login_token_field": {
            "type": "string",
            "description": "\nField containing the authentication token in the response to the authentication request.  \nThe maximum length is 256 characters.\n",
            "maxLength": 256
          },
          "token_prefix": {
            "type": "string",
            "description": "\nPrefix to add to the authentication token.  \nFor example, \"Bearer\" or \"JWT\".  \nThe maximum length is 16 characters.\n",
            "maxLength": 16
          },
          "token_parameter_name": {
            "type": "string",
            "description": "\nParameter name to send the authentication token.  \nFor example, \"Authorization\".  \nThe maximum length is 256 characters.\n",
            "maxLength": 256
          },
          "token_parameter_location": {
            "enum": [
              "cookie",
              "header"
            ],
            "type": "string",
            "x-spec-enum-id": "046347d091ce344d",
            "description": "Where to send the parameter name with the authentication token and the prefix:\n\n* `cookie` - Cookie\n* `header` - Header"
          }
        }
      },
      "APIUser": {
        "type": "object",
        "description": "Remove field user_roles if the request users doesn't have\nuser_management high level permission",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the user can authenticate to Probely to interact with apps and the API.  \nIf false, the user's access to Probely's apps and API is blocked.  \nDefaults to true.\n"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLabel"
            }
          },
          "user_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleUserRole"
            },
            "description": "Roles of the user."
          },
          "is_apiuser": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is an app that interacts with Probely through the API.  \nIf false, it is a human who interacts with Probely through our web interface.  \nDefaults to false.\"\n"
          },
          "key": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "changed",
          "changed_by",
          "id",
          "is_apiuser",
          "key",
          "labels",
          "name"
        ]
      },
      "AWSAccount": {
        "type": "object",
        "properties": {
          "access_key": {
            "type": "string",
            "pattern": "^[A-Z0-9]{20,40}$"
          },
          "secret_key": {
            "type": "string",
            "pattern": "^[0-9A-Za-z+\\/=]{40}$"
          },
          "enabled": {
            "type": "boolean"
          },
          "list_zones_permission": {
            "type": "boolean",
            "readOnly": true
          },
          "list_record_sets_permission": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "access_key",
          "list_record_sets_permission",
          "list_zones_permission",
          "secret_key"
        ]
      },
      "AcccountAssets": {
        "type": "object",
        "description": "AKA Account's extra-hosts Serializer",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "readOnly": true,
            "description": "\nTechnologies identified in the target during scans.  \nThe scanning engine uses them to fine-tune vulnerability tests and improve the explanation of how to fix vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain.\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "\nMethod used in the verification of the domain:\n(Read-only)\n\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "readOnly": true,
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "readOnly": true,
            "description": "Custom cookies to send."
          },
          "include": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the extra host is in the scope of the scan.  \nIf false, the extra host is not in the scope of the scan.  \nDefaults to true.\n"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "pattern": "^(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\\u00a1-\\uffff0-9](?:[a-z\\u00a1-\\uffff0-9_-]{0,61}[a-z\\u00a1-\\uffff0-9])?(?:\\.(?!-)[a-z\\u00a1-\\uffff0-9-]{1,63}(?<!-))*(\\.(?!-)(?:[a-z\\u00a1-\\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?)?))(?::\\d{2,5})?$"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "changed",
          "changed_by",
          "cookies",
          "desc",
          "headers",
          "host",
          "id",
          "include",
          "name",
          "stack",
          "target",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token",
          "verified"
        ]
      },
      "AccountAvailableSlots": {
        "type": "object",
        "properties": {
          "available_slots": {
            "type": "integer",
            "nullable": true,
            "readOnly": true,
            "description": "\nNumber of free slots of targets with unlimited scans.  \nCalculated for targets with unlimited scans as follows:  \nFree slots = Account slots - Slots in use - Slots reserved for teams\n"
          }
        },
        "required": [
          "available_slots"
        ]
      },
      "AccountCredits": {
        "type": "object",
        "properties": {
          "promotional_credits": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of promotional credits available."
          },
          "purchased_credits": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of purchased credits available."
          },
          "outstanding_credits": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of credits in debt. A positive number means debt."
          },
          "on_hold_promotional": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of promotional credits assigned to running scans."
          },
          "on_hold_purchased": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of purchased credits assigned to running scans."
          },
          "promotional_expiration_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Date of expiration of the promotional credits, in ISO 8601 UTC format. For example, \"2023-08-09\"."
          },
          "purchased_expiration_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Date of expiration of the purchased credits, in ISO 8601 UTC format. For example, \"2023-08-09\"."
          },
          "balance": {
            "type": "integer",
            "description": "Total number of credits available.\n\nCalculated from promotional, purchased, and outstanding credits.",
            "readOnly": true
          }
        },
        "required": [
          "balance"
        ]
      },
      "AccountSequences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "maxLength": 255
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true
          },
          "requires_authentication": {
            "type": "boolean",
            "readOnly": true
          },
          "type": {
            "enum": [
              "login",
              "navigation"
            ],
            "type": "string",
            "description": "* `login` - Login\n* `navigation` - Navigation",
            "x-spec-enum-id": "fab4d916e03c4321",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "index": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 0,
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "enabled",
          "id",
          "index",
          "name",
          "requires_authentication",
          "target",
          "type"
        ]
      },
      "AccountSubscriptionOverview": {
        "type": "object",
        "description": "Prepare data for Account Pricing Overview.",
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "subscription_status": {
            "enum": [
              "future",
              "in_trial",
              "active",
              "non_renewing",
              "cancelled",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "1b4f724f8bff4707",
            "description": "Subscription status\n\n* `future` - Future\n* `in_trial` - In Trial\n* `active` - Active\n* `non_renewing` - Non Renewing\n* `cancelled` - Canceled"
          },
          "has_used_trial": {
            "type": "boolean"
          },
          "trial_end": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time the trial period ends."
          },
          "next_billing_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time for next billing cycle."
          },
          "next_billing_amount": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Amount to pay for next subscription renewal (in cents)."
          },
          "plan_amount": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Plan cost in cents."
          },
          "auto_collection": {
            "type": "boolean",
            "description": "Auto-collection enabled."
          },
          "number_free_ultd_targets": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of promotional targets with unlimited scans."
          },
          "max_ultd_targets": {
            "type": "integer",
            "readOnly": true
          },
          "number_paid_ultd_targets": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of subscribed targets with unlimited scans. DO NOT change this for pro plans!!"
          },
          "number_used_ultd_targets": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of targets with unlimited scans in use."
          },
          "number_available_ultd_targets": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of targets with unlimited scans available."
          },
          "number_available_ultd_targets_minus_team_quotas": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of targets with unlimited scans available and which have not been assigned to any team's quota."
          },
          "number_used_credit_targets": {
            "type": "integer",
            "description": "Return number of targets that can spend credits.",
            "readOnly": true
          },
          "number_available_credit_targets": {
            "type": "integer",
            "readOnly": true
          },
          "past_year_ultd_target_changes": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of unlimited scans' target changes in the past year."
          },
          "max_yearly_ultd_target_changes": {
            "type": "integer",
            "readOnly": true,
            "description": "Maximum number of allowed unlimited scans' target changes in a year."
          },
          "next_allowed_ultd_target_change": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "description": "Date time when unlimited scans' target changes are next allowed (if already at maximum)."
          },
          "channel": {
            "enum": [
              "self-service",
              "assisted-sales",
              "partners",
              "resellers",
              null
            ],
            "type": "string",
            "x-spec-enum-id": "d1543ffb4d0df5c5",
            "nullable": true,
            "description": "Customer channel\n\n* `self-service` - Self Service\n* `assisted-sales` - Assisted Sales\n* `partners` - Partners\n* `resellers` - Resellers"
          }
        },
        "required": [
          "max_ultd_targets",
          "max_yearly_ultd_target_changes",
          "next_allowed_ultd_target_change",
          "number_available_credit_targets",
          "number_used_credit_targets",
          "past_year_ultd_target_changes",
          "plan"
        ]
      },
      "ActivityUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "description": "Email of the user.",
            "maxLength": 254
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "\nName of the user.\n"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ArchiveDiscoveryAsset": {
        "type": "object",
        "properties": {
          "archive_discovery_asset_after": {
            "type": "integer",
            "maximum": 365,
            "minimum": 1
          },
          "archive_discovery_asset_enabled": {
            "type": "boolean"
          }
        }
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true
          },
          "status": {
            "enum": [
              "canceled",
              "canceling",
              "completed",
              "completed_with_errors",
              "failed",
              "paused",
              "pausing",
              "queued",
              "resuming",
              "started",
              "under_review",
              "finishing_up"
            ],
            "type": "string",
            "x-spec-enum-id": "391b377c86087507",
            "readOnly": true,
            "description": "Status of the scan:\n\n* `canceled` - Canceled\n* `canceling` - Canceling\n* `completed` - Completed\n* `completed_with_errors` - Completed with errors - DEPRECATED\n* `failed` - Failed\n* `paused` - Paused\n* `pausing` - Pausing\n* `queued` - Queued\n* `resuming` - Resuming\n* `started` - Started\n* `under_review` - Under Review\n* `finishing_up` - Finishing up"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan started."
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan was completed."
          },
          "scan_profile": {
            "type": "string",
            "readOnly": true,
            "description": "\nIdentifier of the scan profile.\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with high severity."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "unlimited": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan had unlimited credits.\nIf false, the scan consumed credits.\nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "readOnly": true,
            "description": "\nTechnologies found in the scan.\nThe scanning engine uses them to fine-tune vulnerability tests and texts about how to fix the vulnerabilities.\n"
          },
          "crawler": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Crawler"
              }
            ],
            "readOnly": true,
            "description": "Information on the crawler execution."
          },
          "fingerprinter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FingerprinterSchema"
              }
            ],
            "readOnly": true,
            "description": "Information on the fingerprinter execution."
          },
          "scanner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Scanner"
              }
            ],
            "readOnly": true,
            "description": "Information on the scanner execution."
          },
          "target_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanTargetOptions"
              }
            ],
            "description": "\nOptions of the target for the scan.\n"
          },
          "has_sequence_navigation": {
            "type": "boolean",
            "description": "\nIf true, the scan includes sequence navigations.  \nLearn more about [How to set up Navigation Sequences?](https://help.probely.com/en/articles/6657065-how-to-set-up-navigation-sequences).\n"
          },
          "incremental": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan was incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan used a reduced scope to narrow the coverage to defined URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan only crawled navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).\n"
          },
          "ignore_blackout_period": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan ignored the blackout period defined in the target settings.\n"
          },
          "runtime": {
            "type": "string",
            "description": "\nTotal time the scan has been actively running.  \nFor example, \"02 00:00:10.123456\".\n"
          },
          "duration": {
            "type": "string",
            "description": "\nTotal time from the start of the scan to its completion, or to the moment of the query, if not completed. \nFor example, \"02 00:00:10.123456\".\n"
          },
          "user_data": {
            "type": "string",
            "description": "Store scan metadata."
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "readOnly": true,
            "description": "Scan Warnings list."
          },
          "scheduled": {
            "type": "boolean",
            "readOnly": true,
            "description": "Scan started by scheduling."
          }
        },
        "required": [
          "changed",
          "changed_by",
          "completed",
          "crawl_sequences_only",
          "crawler",
          "created",
          "fingerprinter",
          "highs",
          "id",
          "ignore_blackout_period",
          "incremental",
          "login_video",
          "lows",
          "mediums",
          "reduced_scope",
          "scan_profile",
          "scanner",
          "scheduled",
          "stack",
          "started",
          "status",
          "target",
          "target_options",
          "unlimited",
          "warnings"
        ]
      },
      "Asset": {
        "type": "object",
        "description": "Model deals with setting verified to False if host changes.",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "description": "\nTechnologies identified in the target during scans.  \nThe scanning engine uses them to fine-tune vulnerability tests and improve the explanation of how to fix vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain.\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "\nMethod used in the verification of the domain:\n(Read-only)\n\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "include": {
            "type": "boolean",
            "description": "\nIf true, the extra host is in the scope of the scan.  \nIf false, the extra host is not in the scope of the scan.  \nDefaults to true.\n"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "pattern": "^(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\\u00a1-\\uffff0-9](?:[a-z\\u00a1-\\uffff0-9_-]{0,61}[a-z\\u00a1-\\uffff0-9])?(?:\\.(?!-)[a-z\\u00a1-\\uffff0-9-]{1,63}(?<!-))*(\\.(?!-)(?:[a-z\\u00a1-\\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?)?))(?::\\d{2,5})?$"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "host",
          "id",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token",
          "verified"
        ]
      },
      "AssetWrite": {
        "type": "object",
        "description": "Include host as required for Asset creation.",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "description": "\nTechnologies identified in the target during scans.  \nThe scanning engine uses them to fine-tune vulnerability tests and improve the explanation of how to fix vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain.\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "\nMethod used in the verification of the domain:\n(Read-only)\n\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "include": {
            "type": "boolean",
            "description": "\nIf true, the extra host is in the scope of the scan.  \nIf false, the extra host is not in the scope of the scan.  \nDefaults to true.\n"
          },
          "host": {
            "type": "string",
            "pattern": "^(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\\u00a1-\\uffff0-9](?:[a-z\\u00a1-\\uffff0-9_-]{0,61}[a-z\\u00a1-\\uffff0-9])?(?:\\.(?!-)[a-z\\u00a1-\\uffff0-9-]{1,63}(?<!-))*(\\.(?!-)(?:[a-z\\u00a1-\\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?)?))(?::\\d{2,5})?$"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "host",
          "id",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token",
          "verified"
        ]
      },
      "AzureDevOpsAccount": {
        "type": "object",
        "properties": {
          "organization_name": {
            "type": "string",
            "maxLength": 254
          },
          "connected": {
            "type": "boolean",
            "readOnly": true
          },
          "reauthentication_failed": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "connected",
          "reauthentication_failed"
        ]
      },
      "AzureDevOpsFinding": {
        "type": "object",
        "properties": {
          "selective_sync": {
            "type": "boolean"
          },
          "work_item_id": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "work_item_id"
        ]
      },
      "AzureDevOpsScope": {
        "type": "object",
        "properties": {
          "project": {
            "type": "object",
            "additionalProperties": {}
          },
          "work_item_type": {
            "type": "string",
            "maxLength": 254
          },
          "auto_sync": {
            "type": "boolean",
            "description": "Sync findings to Azure DevOps"
          },
          "auto_sync_closed": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "project",
          "work_item_type"
        ]
      },
      "BasicAuth": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 255
          },
          "password": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "password",
          "username"
        ]
      },
      "Billing": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "default": "",
            "description": "First name of billing contact.",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "default": "",
            "description": "Last name of billing contact.",
            "maxLength": 150
          },
          "company": {
            "type": "string",
            "default": "",
            "description": "Company name for billing purposes.",
            "maxLength": 250
          },
          "email": {
            "type": "string",
            "format": "email",
            "default": "",
            "description": "E-mail for billing purposes.",
            "maxLength": 70
          },
          "address": {
            "type": "string",
            "default": "",
            "description": "Company address for billing purposes.",
            "maxLength": 150
          },
          "city": {
            "type": "string",
            "default": "",
            "maxLength": 50
          },
          "country": {
            "type": "string",
            "default": "",
            "description": "Company country for billing purposes.",
            "maxLength": 50
          },
          "state": {
            "type": "string",
            "default": "",
            "description": "Company state for billing purposes.",
            "maxLength": 50
          },
          "zip": {
            "type": "string",
            "default": "",
            "description": "Company zip code for billing purposes.",
            "maxLength": 20
          },
          "vat_number": {
            "type": "string",
            "description": "Company VAT number for billing purposes.",
            "maxLength": 70
          },
          "reg_number": {
            "type": "string",
            "description": "Company registration number for billing purposes.",
            "maxLength": 70
          },
          "other": {
            "type": "string",
            "description": "Additional information that should be in invoices.",
            "maxLength": 70
          },
          "currency_code": {
            "type": "string",
            "readOnly": true,
            "description": "Currency code information."
          }
        },
        "required": [
          "currency_code"
        ]
      },
      "BlackoutPeriod": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "time",
            "description": "\nTime of when the blackout period starts, in ISO 8601 UTC format.  \nFor example, \"13:27\".\n"
          },
          "cease": {
            "type": "string",
            "format": "time",
            "description": "\nTime of when the blackout period ceases, in ISO 8601 UTC format.  \nFor example, \"13:27\".\n"
          },
          "weekdays": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "enabled": {
            "type": "boolean",
            "description": "\nIf true, the blackout period is enabled.\n"
          },
          "timezone": {
            "type": "string",
            "maxLength": 64
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          }
        },
        "required": [
          "begin",
          "cease",
          "changed",
          "changed_by",
          "weekdays"
        ]
      },
      "BulkDelete": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ids"
        ]
      },
      "BulkMoveTeam": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ID"
            },
            "description": "Identifier of the team to move the targets to."
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of the targets to move, separated by commas."
          }
        },
        "required": [
          "ids",
          "teams"
        ]
      },
      "BulkScansSchema": {
        "type": "object",
        "properties": {
          "scans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanIdSchema"
            }
          }
        },
        "required": [
          "scans"
        ]
      },
      "BulkScansSchemaResume": {
        "type": "object",
        "properties": {
          "scans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanIdSchema"
            }
          },
          "overrides": {
            "$ref": "#/components/schemas/ResumeOptions"
          }
        },
        "required": [
          "scans"
        ]
      },
      "BulkScansSchemaStart": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanIdSchema"
            }
          },
          "overrides": {
            "$ref": "#/components/schemas/ScanOptions"
          }
        },
        "required": [
          "targets"
        ]
      },
      "BulkScheduledScanCreateSchema": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkScheduledScanScopeTargetSchema"
            }
          },
          "scheduledscan": {
            "$ref": "#/components/schemas/ScheduledScan"
          }
        },
        "required": [
          "scheduledscan",
          "targets"
        ]
      },
      "BulkScheduledScanScopeTargetSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "BulkScheduledScanUpdateSchema": {
        "type": "object",
        "properties": {
          "scheduledscans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkScheduledScanScopeTargetSchema"
            }
          },
          "scheduledscan": {
            "$ref": "#/components/schemas/ScheduledScan"
          }
        },
        "required": [
          "scheduledscan",
          "scheduledscans"
        ]
      },
      "ChangePassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "New password."
          },
          "confpassword": {
            "type": "string",
            "description": "Confirmation of the new password."
          },
          "current_password": {
            "type": "string",
            "description": "Current password."
          }
        },
        "required": [
          "confpassword",
          "current_password",
          "password"
        ]
      },
      "ChargebeeInvoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sub_total": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "amount_due": {
            "type": "integer"
          },
          "amount_paid": {
            "type": "integer"
          },
          "currency_code": {
            "type": "string"
          },
          "credits_applied": {
            "type": "integer"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tax"
            }
          }
        },
        "required": [
          "amount_due",
          "amount_paid",
          "credits_applied",
          "currency_code",
          "discounts",
          "line_items",
          "sub_total",
          "taxes",
          "total"
        ]
      },
      "CloudflareAccount": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]{32,64}$"
          },
          "token_name": {
            "type": "string",
            "maxLength": 256
          },
          "enabled": {
            "type": "boolean"
          },
          "zone_read_permission": {
            "type": "boolean",
            "readOnly": true
          },
          "dns_read_permission": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "dns_read_permission",
          "token",
          "token_name",
          "zone_read_permission"
        ]
      },
      "CodedError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "CookieHeader": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "allow_testing": {
            "type": "boolean",
            "default": false
          },
          "authentication": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "Crawler": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "\nState of the crawler execution.  \nFor example, \"started\" or \"ended\".            \n"
          },
          "status": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "\nList with two numbers where the first is the crawled URLs and the second is the total of URLs to crawl.\n"
          },
          "warning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlerWarning"
            },
            "description": "\nList of warnings occurred during the crawler execution.\n"
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodedError"
            },
            "description": "\nList of errors occurred during the crawler execution.\n"
          },
          "full_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CrawlerFullStatus"
              }
            ],
            "nullable": true,
            "description": "\nDetailed information on the crawler execution.\n"
          }
        },
        "required": [
          "error",
          "state",
          "status",
          "warning"
        ]
      },
      "CrawlerData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "\nType of information.  \nWhen present, the value is \"feedback\".\n"
          },
          "countTimeoutEndpoints": {
            "type": "integer",
            "description": "\nNumber of requests with timeouts during the crawler execution.\n"
          },
          "countLoginFailed": {
            "type": "integer",
            "description": "\nNumber of failed login attempts during the crawler execution.\n"
          },
          "version": {
            "type": "integer",
            "description": "\nVersion number.\n"
          },
          "countNetworkErrorEndpoints": {
            "type": "integer",
            "description": "\nNumber of network errors during the crawler execution.\n"
          },
          "doingLogin": {
            "type": "boolean",
            "description": "\nIf true, the crawler is currently trying to log in to the target.\n"
          },
          "done": {
            "type": "integer",
            "description": "\nNumber of URLs crawled.\n"
          },
          "rejected": {
            "type": "integer",
            "description": "\nNumber of URLs deduplicated during the crawler execution.\n"
          },
          "total": {
            "type": "integer",
            "description": "\nTotal number of URLs to crawl.\n"
          },
          "allExtraHosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "\nList of extra hosts.\n"
          },
          "crawlingEndpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LastCrawledEndpoints"
            },
            "description": "\nList of details about endpoints currently being crawled.\n"
          },
          "lastLogin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LastLogin"
            },
            "description": "\nList of the last logins.\n"
          },
          "status": {
            "type": "object",
            "additionalProperties": {},
            "description": "\nObject with all HTTP response codes obtained during the crawler execution and how many of each.\n"
          },
          "outOfScopeHostsCount": {
            "type": "object",
            "additionalProperties": {},
            "description": "\nList of URLs out of the target's scope and the number of times the crawler hit them.\n"
          },
          "allHostnames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "\nList of all hostnames to crawl.\n"
          },
          "lastCrawledEndpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LastCrawledEndpoints"
            },
            "description": "\nList of the last crawled URLs.\n"
          },
          "statusByHost": {
            "type": "object",
            "additionalProperties": {},
            "description": "\nList of HTTP response codes obtained during the crawler execution and how many of each, grouped by hostname.\n"
          }
        },
        "required": [
          "done",
          "total"
        ]
      },
      "CrawlerFullStatus": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "\nType of information.  \nWhen present, the value is \"feedback\".\n"
          },
          "iid": {
            "type": "string",
            "format": "uuid",
            "description": "\nInternal information.\n"
          },
          "aid": {
            "type": "string",
            "format": "uuid",
            "description": "\nInternal information.\n"
          },
          "ts": {
            "type": "number",
            "format": "double",
            "description": "\nTimestamp of the crawler execution.\n"
          },
          "subtype": {
            "type": "string",
            "description": "\nSub-type of the type of information.  \nThe value is \"status\".\n"
          },
          "stage": {
            "type": "string",
            "description": "\nStage of the scan.  \nThe value is \"crawler\".\n"
          },
          "module": {
            "type": "string",
            "description": "\nModule of the crawler that is executing.\n"
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CrawlerData"
              }
            ],
            "description": "\nFurther details on the crawler execution.\n"
          }
        },
        "required": [
          "aid",
          "data",
          "iid",
          "module",
          "stage",
          "subtype",
          "ts"
        ]
      },
      "CrawlerWarning": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "\nWarning code.\n"
          },
          "message": {
            "type": "string",
            "description": "\nWarning message.\n"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "CreateScanProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "\nIdentifier of the custom scan profile.  \nIt must start with \"sp-\".\n"
          },
          "name": {
            "type": "string",
            "description": "\nName of the scan profile.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the scan profile."
          },
          "archived": {
            "type": "boolean",
            "description": "\nIf true, the scan profile is no longer in use.  \nIf false, the scan profile can be used.\n"
          },
          "type": {
            "enum": [
              "web",
              "api"
            ],
            "type": "string",
            "x-spec-enum-id": "582a96eeca57f580",
            "description": "Target type:\n\n* `web` - Scan a Web application, including Single Page Applications (SPA) that rely on one or more APIs.\n* `api` - Scan a standalone API defined by an OpenAPI schema, or by a Postman Collection."
          },
          "speed": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "0a4ea7859b51ffa4",
            "description": "\nScan speed:  \n(Defaults to `20`)\n\n\n* `10` - Slow - Does roughly half the number of parallel requests of the Normal speed.\n* `20` - Normal - Offers a good balance between scan duration and the number of requests performed at the same time to the target.\n* `30` - Fast - Does roughly twice the number of parallel requests of the Normal speed.",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "payloads": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "8aeeb4b792381be8",
            "description": "\nScan payloads:  \n(Defaults to `20`)\n\n\n* `10` - Light - Uses slightly less payloads than Normal, reducing scan time while still detecting the most common situations.\n* `20` - Normal - Uses a set of payloads that maximizes detection without increasing the scan time excessively, delivering a good compromise.\n* `30` - Thorough - Includes a more extensive set of payloads to detect very uncommon situations. Scan time increases significantly.",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleVulnerabilityDefinition"
            },
            "description": "Vulnerabilities for the scanner to verify."
          },
          "methods": {
            "enum": [
              "all",
              "safe",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "4aacecc81fc3a5e8",
            "description": "\nScan methods:  \n(Defaults to `all`)\n\n\n* `all` - All methods - Allow any HTTP method to be used during the scan.\n* `safe` - Only safe methods - Ideal set for production targets, allowing only the following HTTP methods: GET, HEAD, OPTIONS, TRACE, and CONNECT."
          },
          "can_scan_unverified": {
            "type": "boolean",
            "readOnly": true,
            "description": "If true, the scan profile allows targets with unverified domains."
          },
          "delay": {
            "type": "integer",
            "maximum": 5000,
            "minimum": 0,
            "nullable": true,
            "description": "\nTime delay in milliseconds between requests for each scanning thread.  \nIt is an approximate value and is more accurate for slower scan speed settings.  \nIf not defined, there is no delay between requests.  \nThe maximum delay is 5000ms.  \n"
          },
          "max_run_time": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "nullable": true,
            "description": "\nThe maximum time the scan is allowed to run.  \nFor example, \"750s\", \"25m\", \"2h\", or \"1d\".  \nSuffix the value with \"s\" for seconds, \"m\" for minutes, \"h\" for hours, and \"d\" for days.  \nIf the units are not specified the value is considered to be in seconds.  \n"
          },
          "dedup_enabled": {
            "type": "boolean",
            "description": "\nIf true, the scan deduplicates pages with the same SimHash to scan only a few of them.  \nIf false, the scan does not deduplicate pages, which can increase the scan duration significantly.  \nDefaults to true.  \n"
          },
          "auto_patterns_enabled": {
            "type": "boolean",
            "description": "\nIf true, the scan detects URL patterns to identify similar pages to scan only a few of them.  \nIf false, the scan does not detect patterns, which can increase the scan duration significantly.\nDefaults to true.  \n"
          },
          "max_urls": {
            "type": "integer",
            "maximum": 50000,
            "minimum": 1,
            "description": "\nMaximum number of URLs the crawler can visit.  \nThe value must be between 1 and 50000.  \nDefaults to 5000, which is a good compromise between coverage and scan time.  \n"
          },
          "builtin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is a [built-in scan profile](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences), which cannot be changed.  \nIf false, it is a [custom scan profile](https://help.probely.com/en/articles/8524283-how-to-customize-a-scan-profile) and the id must start with \"sp-\".\n"
          }
        },
        "required": [
          "builtin",
          "can_scan_unverified",
          "id",
          "type",
          "vulnerabilities"
        ]
      },
      "CreditsAutoTopUp": {
        "type": "object",
        "properties": {
          "auto_top_up_on_expiration": {
            "type": "boolean",
            "description": "If true, buy credits automatically on the expiration date of purchased credits."
          },
          "auto_top_up_on_insufficient": {
            "type": "boolean",
            "description": "If true, buy credits automatically when the account balance is insufficient to perfom scans."
          },
          "auto_top_up_credits_pack": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreditsPack"
              }
            ],
            "nullable": true,
            "description": "Credits pack to buy automatically."
          }
        }
      },
      "CreditsPack": {
        "type": "object",
        "description": "Return serializer_class with all fields as read_only except key. The key is the field use to retrieve the object in `to_internal_value`.\n\nThis is for the drf-spectacular documentation generation.",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 100
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "maxLength": 50
          },
          "price": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true
          },
          "currency_code": {
            "enum": [
              "USD",
              "EUR",
              "GBP",
              ""
            ],
            "type": "string",
            "description": "* `USD` - USD\n* `EUR` - EUR\n* `GBP` - GBP",
            "x-spec-enum-id": "7e3503849300ac14",
            "readOnly": true
          },
          "pack_amount": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "readOnly": true
          },
          "discount": {
            "type": "integer",
            "readOnly": true
          },
          "savings": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "currency_code",
          "discount",
          "id",
          "name",
          "pack_amount",
          "price",
          "savings"
        ]
      },
      "CreditsPurchase": {
        "type": "object",
        "properties": {
          "pack_id": {
            "type": "string",
            "description": "Identifier of the credits pack to purchase.",
            "maxLength": 100
          },
          "coupon_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Identifiers of the credits coupons to purchase."
          }
        },
        "required": [
          "pack_id"
        ]
      },
      "CreditsUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "\nDate and time of the credits usage, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 150
          },
          "amount": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "Number of credits used."
          },
          "balance": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "Number of credits available after the usage."
          },
          "on_hold": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "Number of credits used and on hold on running scans."
          },
          "full_balance": {
            "type": "integer",
            "readOnly": true,
            "description": "Accrued number of credits: balance + on_hold."
          },
          "scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Scan where the credits were used."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true,
            "description": "Target where the credits were used."
          }
        },
        "required": [
          "full_balance",
          "scan",
          "target",
          "timestamp"
        ]
      },
      "DPOScopeRequest": {
        "type": "object",
        "properties": {
          "tier": {
            "enum": [
              "account",
              "team",
              "target"
            ],
            "type": "string",
            "description": "* `account` - account\n* `team` - team\n* `target` - target",
            "x-spec-enum-id": "7bb4550545c50719"
          },
          "team": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "target": {
            "$ref": "#/components/schemas/ObjectId"
          }
        },
        "required": [
          "tier"
        ]
      },
      "DPOScopeResponse": {
        "type": "object",
        "properties": {
          "tier": {
            "enum": [
              "account",
              "team",
              "scope"
            ],
            "type": "string",
            "description": "* `account` - account\n* `team` - team\n* `scope` - scope",
            "x-spec-enum-id": "015e238f97345725"
          },
          "team": {
            "$ref": "#/components/schemas/ObjectIdName"
          },
          "target": {
            "$ref": "#/components/schemas/ObjectIdName"
          }
        },
        "required": [
          "tier"
        ]
      },
      "DPOScopeSchema": {
        "type": "object",
        "properties": {
          "tier": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/DPOTargetSchema"
          },
          "team": {
            "$ref": "#/components/schemas/DPOTeamSchema"
          }
        },
        "required": [
          "tier"
        ]
      },
      "DPOTargetSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "Target URL."
          }
        },
        "required": [
          "id",
          "name",
          "url"
        ]
      },
      "DPOTeamSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Discount": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "description"
        ]
      },
      "DiscoveryAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "account": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "\nName of the discovered asset.  \nThe maximum length is 256 characters.\n",
            "maxLength": 256
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "\nURL of the discovered asset.\n"
          },
          "type": {
            "enum": [
              "web",
              "api"
            ],
            "type": "string",
            "x-spec-enum-id": "beefe81f2bb3c2db",
            "readOnly": true,
            "description": "\nType of discovered asset:  \n(Defaults to `api`)  \n\n\n* `web` - Web\n* `api` - API"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of when the discovered asset was last seen, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\u201d.\n"
          },
          "first_seen": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of when the asset was firstly discovered, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\u201d.\n"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Source"
            },
            "readOnly": true,
            "description": "\nSources from which the asset was discovered.\n"
          },
          "technologies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "desc": {
                  "type": "string"
                }
              }
            },
            "readOnly": true,
            "description": "\nTechnologies found in the discovered asset.\n"
          },
          "authorities": {
            "type": "string",
            "readOnly": true,
            "description": "\nAuthorities of the discovered asset.\n"
          },
          "risk": {
            "enum": [
              null,
              0,
              10,
              20,
              30
            ],
            "x-spec-enum-id": "4bbc7459db401a3f",
            "readOnly": true,
            "nullable": true,
            "description": "\nScan assessment risk of the discovered asset:  \n(Defaults to `null`)\n\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk."
          },
          "score": {
            "enum": [
              "",
              "A+",
              "A",
              "B",
              "C",
              "D",
              "E",
              "F",
              "R"
            ],
            "type": "string",
            "x-spec-enum-id": "d0ca3d99ed433a35",
            "readOnly": true,
            "description": "\nSecurity Headers assessment score of the discovered asset.  \n\n\n* `` - \n* `A+` - A+\n* `A` - A\n* `B` - B\n* `C` - C\n* `D` - D\n* `E` - E\n* `F` - F\n* `R` - R"
          },
          "security_headers_url": {
            "type": "string",
            "readOnly": true
          },
          "state": {
            "enum": [
              "NEW",
              "ACTIVE",
              "HIDDEN",
              "ARCHIVED"
            ],
            "type": "string",
            "x-spec-enum-id": "b565a8ca3ff0eba5",
            "description": "\nState of the discovered asset:  \n(Defaults to `NEW`)  \n\n\n* `NEW` - New\n* `ACTIVE` - Active\n* `HIDDEN` - Hidden\n* `ARCHIVED` - Archived"
          },
          "screenshot": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": "\nScreenshot of the discovered asset.  \n"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryScope"
              }
            ],
            "readOnly": true,
            "description": "\nTarget of the discovered asset.\n"
          },
          "owners": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UserLabel"
                }
              ],
              "nullable": true
            },
            "description": "\nOwner labels of the discovered asset.  \nFor example, \"owner=Probely\" or \"owner=Probely&owner=QA\".\n"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Comment on the object."
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "\nTarget labels of the discovered asset.\n"
          },
          "redirect_from": {
            "readOnly": true,
            "nullable": true,
            "description": "\nURLs redirected to the discovered asset.  \n"
          },
          "redirect_to": {
            "type": "string",
            "readOnly": true,
            "description": "\nURL the discovered asset is redirected to.  \n"
          },
          "api_schema_file": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "account",
          "api_schema_file",
          "authorities",
          "first_seen",
          "id",
          "last_seen",
          "name",
          "redirect_from",
          "redirect_to",
          "risk",
          "score",
          "screenshot",
          "security_headers_url",
          "sources",
          "target",
          "technologies",
          "type",
          "url"
        ]
      },
      "DiscoveryAssetCreateAssetSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "description": "Hostname of the target."
          },
          "has_form_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a login form.  \nRead more about [how to set up target authentication (login form)](https://help.probely.com/en/articles/3292779-how-to-set-up-target-authentication-login-form).  \nDefaults to false.\n"
          },
          "form_login_url": {
            "type": "string",
            "description": "URL of the login form of the target.",
            "format": "uri"
          },
          "form_login_check_pattern": {
            "type": "string",
            "description": "\nPattern to check a successful login.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "form_login": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            },
            "description": "Field and value pairs to fill the login form."
          },
          "logout_detection_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, detects any undesired logouts that may occur during scans to log back in.  \nRequires `check_session_url` and `logout_detectors` to be defined.  \nDefaults to false.\n"
          },
          "has_sequence_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a recorded login sequence.  \nRead more about [how to set up target authentication (login sequence)](https://help.probely.com/en/articles/5402869-how-to-record-a-sequence-with-probely-s-sequence-recorder-plugin).  \nDefaults to false.  \n"
          },
          "has_basic_auth": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through username and password credentials.  \nDefaults to false.\n"
          },
          "basic_auth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicAuth"
              }
            ],
            "description": "Username and password credentials for the basic auth."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "whitelist": {
            "description": "\nAdditional paths to crawl and scan.\nFor example, \"archive/search?query=probely\".\nOnly relative paths are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "blacklist": {
            "description": "\nURLs to avoid scanning.\nFor example, \"https://example.com/pic-delete.php*\" or \"*.archive.example.com\".\nURLs need to be absolute and wildcards (`*`) are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "auth_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target has authentication.  \nDefaults to false.\n"
          },
          "logout_condition": {
            "enum": [
              "any",
              "all"
            ],
            "type": "string",
            "x-spec-enum-id": "3ecbcf8a1a1bb9a4",
            "description": "Type of combination of the logout conditions:\n\n* `any` - Is logged out if any condition is verified.\n* `all` - Is logged out only if all condition are verified."
          },
          "check_session_url": {
            "type": "string",
            "description": "URL to check session."
          },
          "has_otp": {
            "type": "boolean",
            "description": "\nIf true, the target has two-factor authentication (2FA).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).  \nDefaults to false.  \n"
          },
          "otp_secret": {
            "type": "string",
            "description": "\nThe seed/secret obtained when the QR code is displayed to be scanned by the third-party authenticator (TPA) app installed on the phone (e.g., Google Authenticator, 1Password, Authy, Microsoft Authenticator, etc.).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).\n"
          },
          "otp_algorithm": {
            "enum": [
              "SHA1",
              "SHA256",
              "SHA512"
            ],
            "type": "string",
            "x-spec-enum-id": "f070a44720b314e8",
            "default": "SHA1",
            "description": "\nSecure hash algorithm (SHA) to generate the one-time password (OTP):  \n(Defaults to `SHA1`)\n\n\n* `SHA1` - Sha1\n* `SHA256` - Sha256\n* `SHA512` - Sha512"
          },
          "otp_digits": {
            "enum": [
              6,
              7,
              8
            ],
            "type": "integer",
            "x-spec-enum-id": "50e5a8b8120242e7",
            "default": 6,
            "description": "\nNumber of digits of the one-time password (OTP):  \n(Defaults to `6`)\n\n\n* `6` - Six\n* `7` - Seven\n* `8` - Eight",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "otp_field": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to enter the one-time password (OTP).  \nFor example, a text input field.\nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_submit": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to submit the one-time password (OTP).\nFor example, a button.  \nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_login_sequence_totp_value": {
            "type": "string",
            "description": "\nOne-time password (OTP) obtained at the time when the login sequence was recorded, i.e., the time-based one-time password (TOTP).  \nDefaults to \"\".\n",
            "maxLength": 8,
            "minLength": 6
          },
          "otp_type": {
            "type": "string"
          },
          "otp_url": {
            "type": "string",
            "readOnly": true
          },
          "stack": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "\nTechnologies to consider in the scan.  \nThe scanning engine uses them to fine-tune vulnerability tests and texts about how to fix the vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "readOnly": true,
            "description": "\nToken used to verify the domain.\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "Method used in the domain verification:\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "api_scan_settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/APIScanSettings"
              }
            ],
            "description": "Scanning settings if the target is an API."
          }
        },
        "required": [
          "api_scan_settings",
          "changed",
          "changed_by",
          "host",
          "id",
          "otp_url",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token",
          "verified"
        ]
      },
      "DiscoveryAssetCreateScopeSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryAssetCreateAssetSchema"
              }
            ],
            "description": "\nCore settings of the targets.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresoved vulnerability findings with high severity."
          },
          "risk": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "last_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Last scan done for the target."
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "next_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            ],
            "readOnly": true,
            "description": "Next scheduled scan for the target."
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadOnlyAsset"
            },
            "readOnly": true
          },
          "scan_profile": {
            "type": "string",
            "description": "\nIdentifier of the scan profile.\n"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "unlimited": {
            "type": "boolean",
            "description": "\nIf true, the target has unlimited scans.  \nIf false, the target scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "x-spec-enum-id": "4b86a2e9dd6eee38",
            "description": "\nType of [scan report](https://help.probely.com/en/articles/2659844-types-of-compliance-reports-you-can-generate-with-probely) produced for the target:  \n(Defaults to `default`)\n\n\n* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "allowed_scan_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleScanProfile"
            },
            "readOnly": true,
            "description": "[Scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) allowed for the target.",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the target."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true,
            "description": "\nScanning agent of the target.\nLearn more on [how to scan internal applications with a scanning agent](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "include_deduplicated_endpoints": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, scans include deduplicated endpoints.  \nIf false or null, scans exclude deduplicated endpoints.  \nA deduplicated endpoint has the same simhash as another scanned endpoint.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleTeam"
            }
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "description": "Time window during which scans are temporarily interrupted."
          },
          "fail_fast": {
            "type": "boolean",
            "description": "\nIf true, scans fail on recoverable errors.  \nIf false, scans continue on recoverable errors.  \nDefaults to true. \n"
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "incremental": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can have reduced scope to narrow the coverage to defined URLs.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_incremental": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can have reduced scope to narrow the coverage to defined URLs.     \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can only crawl navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can only crawl navigation sequences to narrow the coverage.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          }
        },
        "required": [
          "allowed_scan_profiles",
          "assets",
          "changed",
          "changed_by",
          "highs",
          "id",
          "last_scan",
          "login_video",
          "lows",
          "mediums",
          "next_scan",
          "risk",
          "running_scan"
        ]
      },
      "DiscoveryAssetCreateTargetResponse": {
        "type": "object",
        "properties": {
          "target": {
            "$ref": "#/components/schemas/Scope"
          },
          "scan": {
            "$ref": "#/components/schemas/Assessment"
          }
        },
        "required": [
          "target"
        ]
      },
      "DiscoveryAssetCreateTargetSchema": {
        "type": "object",
        "properties": {
          "is_create_and_scan": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target is created, and a scan is automatically started to identify its vulnerabilities.  \nIf false, the target is created without starting a scan.  \nDefaults to false. \n"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryAssetCreateScopeSchema"
              }
            ],
            "description": "\nTarget to be created.\n"
          }
        }
      },
      "DiscoveryAssetLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "change": {
            "type": "string",
            "readOnly": true,
            "description": "\nType of change made to the log:\n* `created` - Created.\n* `changed` - Changed.\n* `deleted` - Deleted.\n* `comment` - Commented.  \n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "description": "\nTimestamp of the most recent change to the discovery asset, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityUser"
              }
            ],
            "description": "\nUser responsible for the log entry.\n"
          },
          "field": {
            "type": "string",
            "nullable": true,
            "description": "\nField that changed in the discovered asset.\n",
            "maxLength": 50
          },
          "value": {
            "description": "\nThe current value of the changed field in the discovered asset.  \n",
            "readOnly": true
          },
          "old_value": {
            "readOnly": true,
            "description": "\nThe previous value of the changed field in the discovered asset.  \n"
          },
          "message": {
            "type": "string",
            "readOnly": true,
            "description": "\nLogged message, which can include HTML tags.  \nFor example, \"\\<strong\\>Scan\\<\\/strong\\> performed.\".\n"
          },
          "history_type": {
            "enum": [
              "+",
              "-",
              "~"
            ],
            "type": "string",
            "x-spec-enum-id": "88ac96eea1a63d67",
            "description": "\nType of change made to the discovery asset.  \n\n\n* `+` - +\n* `-` - -\n* `~` - ~"
          }
        },
        "required": [
          "change",
          "changed",
          "changed_by",
          "history_type",
          "id",
          "message",
          "old_value",
          "value"
        ]
      },
      "DiscoveryAssetStats": {
        "type": "object",
        "properties": {
          "discovery_assets_count": {
            "type": "integer",
            "description": "\nTotal number of assets discovered so far.\n"
          },
          "new_state_discovery_assets_count": {
            "type": "integer",
            "description": "\nTotal number of discovered assets marked as new, i.e., needing analysis.\n"
          },
          "scanned_discovery_assets_percentage": {
            "type": "integer",
            "description": "\nPercentage of discovered assets added as targets and scanned.\n"
          },
          "high_risk_discovery_assets_percentage": {
            "type": "integer",
            "description": "\nPercentage of discovered assets added as targets, scanned, and identified as `High` risk. \n"
          },
          "low_score_discovery_assets_percentage": {
            "type": "integer",
            "description": "\nPercentage of assets with a Security Headers assessment score of `C` or less.\n"
          }
        },
        "required": [
          "discovery_assets_count",
          "high_risk_discovery_assets_percentage",
          "low_score_discovery_assets_percentage",
          "new_state_discovery_assets_count",
          "scanned_discovery_assets_percentage"
        ]
      },
      "DiscoveryScan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "type": {
            "enum": [
              "regular",
              "scheduled"
            ],
            "type": "string",
            "x-spec-enum-id": "402c32b78b665137",
            "description": "\nType of asset discovery scan:\n\n\n* `regular` - Regular\n* `scheduled` - Scheduled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of when the asset discovery scan was created, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "\nDate and time of when the asset discovery scan started, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "\nDate and time of when the asset discovery scan completed, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "status": {
            "enum": [
              "queued",
              "canceling",
              "canceled",
              "pending",
              "in_progress",
              "completed",
              "failed"
            ],
            "type": "string",
            "x-spec-enum-id": "20a65af93817b20b",
            "description": "\nStatus of the asset discovery scan:  \n(Defaults to `pending`)\n\n\n* `queued` - Queued\n* `canceling` - Canceling\n* `canceled` - Canceled\n* `pending` - Pending\n* `in_progress` - In progress\n* `completed` - Completed\n* `failed` - Failed"
          },
          "domain_then": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Domain"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "domain_then",
          "id"
        ]
      },
      "DiscoveryScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.  \nDefaults to \"\".\n"
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "readOnly": true,
            "description": "Time window during which scans are temporarily interrupted."
          }
        },
        "required": [
          "blackout_period",
          "id",
          "running_scan"
        ]
      },
      "DiscoveryStatusSchema": {
        "type": "object",
        "properties": {
          "running_scans_count": {
            "type": "integer",
            "description": "\nNumber of asset discovery scans currently running.\n"
          },
          "last_complete_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryScan"
              }
            ],
            "description": "\nLast complete asset discovery scan.\n"
          },
          "next_scheduled_scan_at": {
            "type": "string",
            "format": "date-time",
            "description": "\nDate and time of when the next asset discovery scan will start, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          }
        },
        "required": [
          "last_complete_scan",
          "next_scheduled_scan_at",
          "running_scans_count"
        ]
      },
      "Domain": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "\nDomain name with an associated IP address or an IP address itself.  \nFor example, \"my.example.com\", \"example.com\", or \"37.139.17.48\".  \nThe maximum length is 256 characters.\n",
            "pattern": "^(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\\u00a1-\\uffff0-9](?:[a-z\\u00a1-\\uffff0-9_-]{0,61}[a-z\\u00a1-\\uffff0-9])?(?:\\.(?!-)[a-z\\u00a1-\\uffff0-9-]{1,63}(?<!-))*(\\.(?!-)(?:[a-z\\u00a1-\\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?)?))(?::\\d{2,5})?$"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain.  \nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "Method used in the domain verification:\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "\nError of the last verification of the domain.  \nEmpty if no error occurred.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.  \nRead-only.\n"
          },
          "basic_auth_username": {
            "type": "string",
            "nullable": true,
            "description": "Username used for basic authentication."
          },
          "basic_auth_password": {
            "type": "string",
            "nullable": true,
            "description": "Password used for basic authentication."
          },
          "port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true,
            "description": "\nIP Port to send the requests to.  \nIf not defined, uses the default ports for HTTPS and HTTP (if the verification method requires making HTTP requests).\n"
          },
          "discovery_enabled": {
            "type": "boolean",
            "description": "\nIf true, the domain is available for use in Asset Discovery.  \nIf false, the domain can only be used in targets.  \nThis parameter is only applicable if you are entitled to use Asset Discovery. You can contact Probely support to enable the feature.  \nLearn more about Asset Discovery in the [Overview of Asset Discovery](https://help.probely.com/en/articles/9220762-overview-of-probely-s-asset-discovery).  \nDefaults to true.\n"
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Source"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "hostname",
          "id",
          "source",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token",
          "verified"
        ]
      },
      "DomainSchema": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "\nDomain name with an associated IP address or an IP address itself.  \nFor example, \"my.example.com\", \"example.com\", or \"37.139.17.48\".  \nThe maximum length is 256 characters.\n",
            "pattern": "^(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\\u00a1-\\uffff0-9](?:[a-z\\u00a1-\\uffff0-9_-]{0,61}[a-z\\u00a1-\\uffff0-9])?(?:\\.(?!-)[a-z\\u00a1-\\uffff0-9-]{1,63}(?<!-))*(\\.(?!-)(?:[a-z\\u00a1-\\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?)?))(?::\\d{2,5})?$"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain.  \nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "Method used in the domain verification:\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "\nError of the last verification of the domain.  \nEmpty if no error occurred.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.  \nRead-only.\n"
          },
          "basic_auth_username": {
            "type": "string",
            "nullable": true,
            "description": "Username used for basic authentication."
          },
          "basic_auth_password": {
            "type": "string",
            "nullable": true,
            "description": "Password used for basic authentication."
          },
          "port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true,
            "description": "\nIP Port to send the requests to.  \nIf not defined, uses the default ports for HTTPS and HTTP (if the verification method requires making HTTP requests).\n"
          },
          "discovery_enabled": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the domain is available for use in Asset Discovery.  \nIf false, the domain can only be used in targets.  \nThis parameter is only applicable if you are entitled to use Asset Discovery. You can contact Probely support to enable the feature.  \nLearn more about Asset Discovery in the [Overview of Asset Discovery](https://help.probely.com/en/articles/9220762-overview-of-probely-s-asset-discovery).  \nDefaults to true.\n"
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Source"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "hostname",
          "id",
          "source",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token",
          "verified"
        ]
      },
      "DomainVerificationMethod": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "file",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag"
            ],
            "type": "string",
            "description": "* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n",
            "x-spec-enum-id": "4cb0c138ca407bbc"
          }
        },
        "required": [
          "type"
        ]
      },
      "Entitlement": {
        "type": "object",
        "properties": {
          "pool_size": {
            "type": "integer"
          },
          "allow_extra_users": {
            "type": "boolean"
          },
          "max_users": {
            "type": "integer"
          },
          "max_scan_freq": {
            "type": "string"
          },
          "max_scan_number": {
            "type": "integer"
          },
          "max_credit_targets": {
            "type": "integer"
          },
          "allow_billing": {
            "type": "boolean"
          },
          "allow_create_and_destroy_targets": {
            "type": "boolean"
          },
          "max_ultd_targets": {
            "type": "integer"
          },
          "allow_scope_labels": {
            "type": "boolean"
          },
          "allowed_scope_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "spa_limit": {
            "type": "integer"
          },
          "scanning_agent_limit": {
            "type": "integer"
          },
          "verify_target_ownership": {
            "type": "boolean"
          },
          "allowed_builtin_scan_profiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allow_custom_scan_profiles": {
            "type": "boolean"
          },
          "allow_bulk_scan": {
            "type": "boolean"
          },
          "allow_pause_and_resume_scan": {
            "type": "boolean"
          },
          "allow_partial_scan": {
            "type": "boolean"
          },
          "allow_scanning_2fa_targets": {
            "type": "boolean"
          },
          "allow_teams": {
            "type": "boolean"
          },
          "allow_bulk": {
            "type": "boolean"
          },
          "allow_dashboard": {
            "type": "boolean"
          },
          "allow_roles": {
            "type": "boolean"
          },
          "allow_scanning_agent": {
            "type": "boolean"
          },
          "allow_user_labels": {
            "type": "boolean"
          },
          "allow_custom_roles": {
            "type": "boolean"
          },
          "allow_sso": {
            "type": "boolean"
          },
          "allow_target_import_export": {
            "type": "boolean"
          },
          "allow_full_coverage_report": {
            "type": "boolean"
          },
          "allow_audit_log": {
            "type": "boolean"
          },
          "allow_discovery": {
            "type": "boolean"
          },
          "allow_aws": {
            "type": "boolean"
          },
          "allow_cloudflare": {
            "type": "boolean"
          },
          "allow_azure_devops": {
            "type": "boolean"
          },
          "allow_jira_cloud": {
            "type": "boolean"
          },
          "allow_jira_server": {
            "type": "boolean"
          },
          "allow_slack": {
            "type": "boolean"
          },
          "allow_defectdojo": {
            "type": "boolean"
          },
          "allow_webhooks": {
            "type": "boolean"
          },
          "allow_shortcut": {
            "type": "boolean"
          },
          "allow_heroku_sso": {
            "type": "boolean"
          },
          "allowed_report_file_formats": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowed_report_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allow_stored_reports": {
            "type": "boolean"
          },
          "allowed_stored_report_file_formats": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowed_stored_report_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allow_buying_credits": {
            "type": "boolean"
          },
          "allow_credits": {
            "type": "boolean"
          },
          "allow_unlimited": {
            "type": "boolean"
          },
          "allow_ultd_change": {
            "type": "boolean"
          },
          "number_unused_slots": {
            "type": "integer"
          },
          "allowed_credits_packs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditsPack"
            }
          },
          "credits_hourly_cost": {
            "type": "integer"
          },
          "credits_cap": {
            "type": "integer"
          },
          "credits_lightning_cost": {
            "type": "integer"
          },
          "credits_auth_cost": {
            "type": "integer"
          },
          "allowed_monthly_promotional_credits": {
            "type": "integer"
          },
          "number_available_ultd_targets_minus_team_quotas": {
            "type": "integer"
          },
          "allowed_builtin_roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allow_target_roles": {
            "type": "boolean"
          },
          "is_snyk_customer": {
            "type": "boolean"
          }
        },
        "required": [
          "allow_audit_log",
          "allow_aws",
          "allow_azure_devops",
          "allow_billing",
          "allow_bulk",
          "allow_bulk_scan",
          "allow_buying_credits",
          "allow_cloudflare",
          "allow_create_and_destroy_targets",
          "allow_credits",
          "allow_custom_roles",
          "allow_custom_scan_profiles",
          "allow_dashboard",
          "allow_defectdojo",
          "allow_discovery",
          "allow_extra_users",
          "allow_full_coverage_report",
          "allow_heroku_sso",
          "allow_jira_cloud",
          "allow_jira_server",
          "allow_partial_scan",
          "allow_pause_and_resume_scan",
          "allow_roles",
          "allow_scanning_2fa_targets",
          "allow_scanning_agent",
          "allow_scope_labels",
          "allow_shortcut",
          "allow_slack",
          "allow_sso",
          "allow_stored_reports",
          "allow_target_import_export",
          "allow_target_roles",
          "allow_teams",
          "allow_ultd_change",
          "allow_unlimited",
          "allow_user_labels",
          "allow_webhooks",
          "allowed_builtin_roles",
          "allowed_builtin_scan_profiles",
          "allowed_credits_packs",
          "allowed_monthly_promotional_credits",
          "allowed_report_file_formats",
          "allowed_report_types",
          "allowed_scope_types",
          "allowed_stored_report_file_formats",
          "allowed_stored_report_types",
          "credits_auth_cost",
          "credits_cap",
          "credits_hourly_cost",
          "credits_lightning_cost",
          "is_snyk_customer",
          "max_credit_targets",
          "max_scan_freq",
          "max_scan_number",
          "max_ultd_targets",
          "max_users",
          "number_available_ultd_targets_minus_team_quotas",
          "number_unused_slots",
          "pool_size",
          "scanning_agent_limit",
          "spa_limit",
          "verify_target_ownership"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "event_type": {
            "enum": [
              "user_created",
              "user_deleted",
              "target_created",
              "target_deleted",
              "target_verification_failed",
              "scan_started",
              "scan_canceled",
              "scan_completed",
              "scan_failed",
              "finding_detected",
              "finding_fixed"
            ],
            "type": "string",
            "x-spec-enum-id": "1928d41cf8b1c55e",
            "description": "Type of event:\n\n* `user_created` - User Created\n* `user_deleted` - User Deleted\n* `target_created` - Target Created\n* `target_deleted` - Target Deleted\n* `target_verification_failed` - Target Verification Failed\n* `scan_started` - Scan Started\n* `scan_canceled` - Scan Canceled\n* `scan_completed` - Scan Completed\n* `scan_failed` - Scan Failed\n* `finding_detected` - Finding Detected\n* `finding_fixed` - Finding Fixed"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of when the event occurred, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "object_type": {
            "type": "string",
            "readOnly": true,
            "description": "\nType of object returned in the content of the event.  \nCan have one of the following strings: \"user\", \"target\", \"scan\", or \"finding\".\n"
          },
          "content": {
            "type": "string",
            "readOnly": true,
            "description": "\nContent of the event.  \nCan have one of the following objects: User, Target, Scan, or Finding.\n"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEvent"
            },
            "description": "Webhooks of the event."
          }
        },
        "required": [
          "content",
          "event_type",
          "id",
          "object_type",
          "occurred_at",
          "webhooks"
        ]
      },
      "Finding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Global ID in the format: <TARGET_ID>-<FINDING_ID>"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true
          },
          "scans": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Scans that originated the vulnerability finding."
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindingLabel"
            }
          },
          "fix": {
            "type": "string",
            "description": "Description of how to fix the vulnerability.",
            "readOnly": true
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestResponsePairMarkdown"
            },
            "readOnly": true,
            "description": "Pairs of requests and responses of the vulnerability finding."
          },
          "evidence": {
            "type": "string",
            "readOnly": true,
            "description": "Evidence with proof of the vulnerability finding."
          },
          "extra": {
            "type": "string",
            "readOnly": true,
            "description": "Extra details about the vulnerability finding."
          },
          "definition": {
            "$ref": "#/components/schemas/SimpleVulnerabilityDefinition"
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "\nURL of the vulnerability finding.\nFor example, \"http://www.example.com/user/show-details\".\nThe maximum length is 66000 characters.\n",
            "maxLength": 66000
          },
          "path": {
            "type": "string",
            "description": "URL path of the vulnerability finding.\nFor example, \"user/show-details\".",
            "readOnly": true
          },
          "method": {
            "enum": [
              "get",
              "post",
              "trace",
              "options",
              "put",
              "delete"
            ],
            "type": "string",
            "x-spec-enum-id": "2831241c17867f72",
            "readOnly": true,
            "description": "HTTP method used in the request:\n\n* `get` - GET\n* `post` - POST\n* `trace` - TRACE\n* `options` - OPTIONS\n* `put` - PUT\n* `delete` - DELETE"
          },
          "insertion_point": {
            "enum": [
              "cookie",
              "parameter",
              "arbitrary_url_param",
              "header",
              "url_folder",
              "url_filename",
              "json_parameter",
              "request_body",
              "multipart_parameter",
              "graphql_parameter",
              "non_standard_parameter",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "b3fd7c42edd27853",
            "description": "Insertion point of the parameter:\n\n* `cookie` - Cookie\n* `parameter` - Parameter\n* `arbitrary_url_param` - Parameter\n* `header` - Header\n* `url_folder` - URL Path\n* `url_filename` - URL Path\n* `json_parameter` - JSON Parameter\n* `request_body` - Request Body\n* `multipart_parameter` - Multipart Parameter\n* `graphql_parameter` - GraphQL Parameter\n* `non_standard_parameter` - Non Standard Parameter"
          },
          "parameter": {
            "type": "string",
            "description": "\nName of the inserted parameter.  \nThe maximum length is 1024 characters.\n",
            "maxLength": 1024
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "Value of the inserted parameter."
          },
          "params": {
            "type": "string",
            "description": "Query parameters of the vulnerability finding, in JSON format.\nFor example, \"{'name': ['Joe Smith'], 'phone': ['+919999999999', '+628888888888']}\"",
            "readOnly": true
          },
          "assignee": {
            "$ref": "#/components/schemas/SimpleUser"
          },
          "state": {
            "enum": [
              "notfixed",
              "invalid",
              "accepted",
              "fixed"
            ],
            "type": "string",
            "x-spec-enum-id": "80a7afa887252954",
            "description": "\nState of the vulnerability finding:  \n(Read more about [the meaning of vulnerability findings states](https://help.probely.com/en/articles/6673828-what-is-the-meaning-of-a-finding-s-state))\n\n\n* `notfixed` - Not Fixed\n* `invalid` - Invalid\n* `accepted` - Accepted\n* `fixed` - Fixed"
          },
          "severity": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "00695357157ec7c5",
            "description": "\nSeverity of the vulnerability finding:  \n\n\n* `10` - low\n* `20` - medium\n* `30` - high",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "cvss_score": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "nullable": true,
            "description": "Score of the vulnerability finding according to the Common Vulnerability Scoring System (CVSS)."
          },
          "cvss_vector": {
            "type": "string",
            "readOnly": true,
            "description": "Vector with the metrics of the score of the vulnerability finding according to the Common Vulnerability Scoring System (CVSS)."
          },
          "last_found": {
            "type": "string",
            "format": "date-time",
            "description": "\nDate and time of when the vulnerability was last found, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "retesting": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the vulnerability will be retested.  \nIf, after the retest, the vulnerability is no longer found, the vulnerability finding is marked as fixed. Otherwise, it is marked as not fixed.  \n"
          },
          "new": {
            "type": "boolean",
            "description": "\nIf true, this is a newly found vulnerability.\nIf false, this vulnerability has been found in previous scans.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Timestamp of the Finding's creation."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Comment on the object."
          }
        },
        "required": [
          "assignee",
          "changed",
          "changed_by",
          "created_at",
          "cvss_score",
          "cvss_vector",
          "definition",
          "evidence",
          "extra",
          "fix",
          "id",
          "labels",
          "method",
          "new",
          "params",
          "path",
          "requests",
          "retesting",
          "target",
          "url",
          "value"
        ]
      },
      "FindingActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "change": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time"
          },
          "changed_by": {
            "$ref": "#/components/schemas/ActivityUser"
          },
          "field": {
            "type": "string",
            "nullable": true,
            "maxLength": 50
          },
          "value": {
            "description": "Given the *incoming* primitive data, return the value for this field\nthat should be validated and transformed to a native value.",
            "readOnly": true,
            "default": {}
          },
          "old_value": {
            "readOnly": true,
            "default": {}
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "message_type": {
            "enum": [
              "found",
              "invalid",
              "accepted",
              "fixed",
              "note",
              "update",
              "assign",
              "retest",
              "retest_failed",
              null
            ],
            "type": "string",
            "description": "* `found` - Found\n* `invalid` - Invalid\n* `accepted` - Accepted Risk\n* `fixed` - Fixed\n* `note` - Note\n* `update` - Update\n* `assign` - Assign\n* `retest` - Retest\n* `retest_failed` - Retest Failed",
            "x-spec-enum-id": "f8c1d1bb6c994277",
            "nullable": true
          },
          "finding_history_type": {
            "type": "string",
            "maxLength": 1
          }
        },
        "required": [
          "change",
          "changed_by",
          "finding_history_type",
          "id",
          "message",
          "old_value",
          "value"
        ]
      },
      "FindingBulkRetestRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of object IDs."
          },
          "ignore_blackout_period": {
            "type": "boolean",
            "description": "\nIf true, the scan ignores the blackout period defined in the target settings.\n"
          },
          "scan_profile": {
            "type": "string",
            "description": "\nScan profile to use.  \nUse the endpoint [List Scan Profiles](#tag/Scan-Profiles/operation/scan_profiles_list) to get all the available scan profiles.  \nIf no scan profile is specified, the scan profile will be the one specified in the target settings.\n"
          },
          "reduced_scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReducedScope"
            },
            "description": "Configuration to reduce the scope of the scan."
          }
        },
        "required": [
          "ids"
        ]
      },
      "FindingBulkUpdateRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of object IDs."
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "target": {
            "type": "string",
            "description": "Target scanned to find vulnerabilities.",
            "readOnly": true
          },
          "scans": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Scans that originated the vulnerability finding."
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FindingLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the vulnerability finding."
          },
          "fix": {
            "type": "string",
            "description": "Description of how to fix the vulnerability.",
            "readOnly": true
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestResponsePairMarkdown"
            },
            "readOnly": true,
            "description": "Pairs of requests and responses of the vulnerability finding."
          },
          "evidence": {
            "type": "string",
            "readOnly": true,
            "description": "Evidence with proof of the vulnerability finding."
          },
          "extra": {
            "type": "string",
            "readOnly": true,
            "description": "Extra details about the vulnerability finding."
          },
          "definition": {
            "type": "string",
            "description": "Definition of the vulnerability."
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "\nURL of the vulnerability finding.\nFor example, \"http://www.example.com/user/show-details\".\nThe maximum length is 66000 characters.\n",
            "maxLength": 66000
          },
          "path": {
            "type": "string",
            "description": "URL path of the vulnerability finding.\nFor example, \"user/show-details\".",
            "readOnly": true
          },
          "method": {
            "enum": [
              "get",
              "post",
              "trace",
              "options",
              "put",
              "delete"
            ],
            "type": "string",
            "x-spec-enum-id": "2831241c17867f72",
            "readOnly": true,
            "description": "HTTP method used in the request:\n\n* `get` - GET\n* `post` - POST\n* `trace` - TRACE\n* `options` - OPTIONS\n* `put` - PUT\n* `delete` - DELETE"
          },
          "insertion_point": {
            "enum": [
              "cookie",
              "parameter",
              "arbitrary_url_param",
              "header",
              "url_folder",
              "url_filename",
              "json_parameter",
              "request_body",
              "multipart_parameter",
              "graphql_parameter",
              "non_standard_parameter",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "b3fd7c42edd27853",
            "description": "Insertion point of the parameter:\n\n* `cookie` - Cookie\n* `parameter` - Parameter\n* `arbitrary_url_param` - Parameter\n* `header` - Header\n* `url_folder` - URL Path\n* `url_filename` - URL Path\n* `json_parameter` - JSON Parameter\n* `request_body` - Request Body\n* `multipart_parameter` - Multipart Parameter\n* `graphql_parameter` - GraphQL Parameter\n* `non_standard_parameter` - Non Standard Parameter"
          },
          "parameter": {
            "type": "string",
            "description": "\nName of the inserted parameter.  \nThe maximum length is 1024 characters.\n",
            "maxLength": 1024
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "Value of the inserted parameter."
          },
          "params": {
            "type": "string",
            "description": "Query parameters of the vulnerability finding, in JSON format.\nFor example, \"{'name': ['Joe Smith'], 'phone': ['+919999999999', '+628888888888']}\"",
            "readOnly": true
          },
          "assignee": {
            "type": "string",
            "description": "User who is assigned to fix the vulnerability.",
            "nullable": true
          },
          "state": {
            "enum": [
              "notfixed",
              "invalid",
              "accepted",
              "fixed"
            ],
            "type": "string",
            "x-spec-enum-id": "80a7afa887252954",
            "description": "\nState of the vulnerability finding:  \n(Read more about [the meaning of vulnerability findings states](https://help.probely.com/en/articles/6673828-what-is-the-meaning-of-a-finding-s-state))\n\n\n* `notfixed` - Not Fixed\n* `invalid` - Invalid\n* `accepted` - Accepted\n* `fixed` - Fixed"
          },
          "severity": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "00695357157ec7c5",
            "description": "\nSeverity of the vulnerability finding:  \n\n\n* `10` - low\n* `20` - medium\n* `30` - high",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "cvss_score": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "nullable": true,
            "description": "Score of the vulnerability finding according to the Common Vulnerability Scoring System (CVSS)."
          },
          "cvss_vector": {
            "type": "string",
            "readOnly": true,
            "description": "Vector with the metrics of the score of the vulnerability finding according to the Common Vulnerability Scoring System (CVSS)."
          },
          "last_found": {
            "type": "string",
            "format": "date-time",
            "description": "\nDate and time of when the vulnerability was last found, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "retesting": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the vulnerability will be retested.  \nIf, after the retest, the vulnerability is no longer found, the vulnerability finding is marked as fixed. Otherwise, it is marked as not fixed.  \n"
          },
          "new": {
            "type": "boolean",
            "description": "\nIf true, this is a newly found vulnerability.\nIf false, this vulnerability has been found in previous scans.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Timestamp of the Finding's creation."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Comment on the object."
          }
        },
        "required": [
          "changed",
          "changed_by",
          "created_at",
          "cvss_score",
          "cvss_vector",
          "definition",
          "evidence",
          "extra",
          "fix",
          "id",
          "ids",
          "method",
          "new",
          "params",
          "path",
          "requests",
          "retesting",
          "target",
          "url",
          "value"
        ]
      },
      "FindingId": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniqueFinding"
            },
            "description": "List of composed keys identifying findings of targets."
          }
        },
        "required": [
          "ids"
        ]
      },
      "FindingLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the label.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "description": "\nColor of the label, in RGB hexadecimal format prefixed with \"#\".  \nFor example, \"#00FF00\" for green.\n",
            "pattern": "^[a-zA-Z0-9#_-]*$"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "id",
          "name"
        ]
      },
      "FingerprinterSchema": {
        "type": "object",
        "description": "Used for the fingerprinter.",
        "properties": {
          "state": {
            "type": "string",
            "description": "\nState of the fingerprinter execution.  \nFor example, \"started\" or \"ended\".\n"
          },
          "count": {
            "type": "integer",
            "description": "\nNumber of technologies (frameworks) detected by the fingerprinter.\n"
          },
          "warning": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "\nList of warnings occurred during the fingerprinter execution.\n"
          },
          "error": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "\nList of errors occurred during the fingerprinter execution.\n"
          }
        },
        "required": [
          "count",
          "error",
          "state",
          "warning"
        ]
      },
      "Framework": {
        "type": "object",
        "description": "Return serializer_class with all fields as read_only except key. The key is the field use to retrieve the object in `to_internal_value`.\n\nThis is for the drf-spectacular documentation generation.",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "title": "Framework Name",
            "description": "\nName of the technology.  \nFor example, \"PHP, \"SQLite\", \"Python\", \"Apache\", or \"Wordpress\".  \nThe maximum lenght is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "title": "Framework Description",
            "description": "\nDescription of the technology.  \nDefaults to \"\".\n"
          }
        },
        "required": [
          "desc",
          "id",
          "name"
        ]
      },
      "HighLevelPermission": {
        "type": "object",
        "description": "Return serializer_class with all fields as read_only except key. The key is the field use to retrieve the object in `to_internal_value`.\n\nThis is for the drf-spectacular documentation generation.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Textual identifier.",
            "maxLength": 255
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Permission name.",
            "maxLength": 255
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ID": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "IDList": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of object IDs."
          }
        },
        "required": [
          "ids"
        ]
      },
      "InvoiceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "reference": {
            "type": "string",
            "readOnly": true
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "readOnly": true
          },
          "currency_code": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "amount",
          "currency_code",
          "datetime",
          "description",
          "id",
          "reference"
        ]
      },
      "JiraCloudFinding": {
        "type": "object",
        "properties": {
          "selective_sync": {
            "type": "boolean"
          },
          "issue_id": {
            "type": "string",
            "readOnly": true
          },
          "link": {
            "type": "string",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 32
          }
        },
        "required": [
          "issue_id",
          "link"
        ]
      },
      "JiraCloudScope": {
        "type": "object",
        "properties": {
          "auto_sync": {
            "type": "boolean"
          },
          "auto_sync_closed": {
            "type": "boolean",
            "default": false
          },
          "project_id": {
            "type": "string"
          },
          "issue_type_id": {
            "type": "string"
          },
          "status_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "priority_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "issue_type_id",
          "project_id"
        ]
      },
      "JiraServerAccount": {
        "type": "object",
        "properties": {
          "base_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_key": {
            "type": "string",
            "maxLength": 1024
          },
          "consumer_secret": {
            "type": "string"
          },
          "verify_tls": {
            "type": "boolean"
          },
          "skip_jira_webhooks": {
            "type": "boolean"
          }
        },
        "required": [
          "base_url",
          "consumer_key",
          "consumer_secret",
          "verify_tls"
        ]
      },
      "JiraServerFinding": {
        "type": "object",
        "properties": {
          "selective_sync": {
            "type": "boolean"
          },
          "issue_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "issue_id"
        ]
      },
      "JiraServerScope": {
        "type": "object",
        "properties": {
          "auto_sync": {
            "type": "boolean"
          },
          "auto_sync_closed": {
            "type": "boolean",
            "default": false
          },
          "project_id": {
            "type": "string"
          },
          "issue_type_id": {
            "type": "string"
          },
          "status_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "priority_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "issue_type_id",
          "project_id"
        ]
      },
      "LastCrawledEndpoints": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "integer",
            "description": "\nIdentifier of the crawler job.\n"
          },
          "status": {
            "type": "integer",
            "description": "\nHTTP response status code for the crawler request.\n"
          },
          "method": {
            "type": "string",
            "description": "\nHTTP method of the crawler request.\n"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "\nURL of the crawler request.\n"
          }
        },
        "required": [
          "method",
          "status",
          "url"
        ]
      },
      "LastLogin": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "\nStatus of the login attempt.\n"
          },
          "timestamp": {
            "type": "integer",
            "description": "\nTimestamp of the login attempt.\n"
          }
        },
        "required": [
          "status",
          "timestamp"
        ]
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "unit_amount": {
            "type": "integer"
          },
          "tax_amount": {
            "type": "integer"
          },
          "discount_amount": {
            "type": "integer"
          },
          "amount": {
            "type": "integer"
          },
          "date_from": {
            "type": "integer"
          },
          "date_to": {
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "date_from",
          "date_to",
          "description",
          "discount_amount",
          "quantity",
          "tax_amount",
          "unit_amount"
        ]
      },
      "LogoutDetector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "type": {
            "enum": [
              "text",
              "url",
              "sel"
            ],
            "type": "string",
            "x-spec-enum-id": "5e2906359619acbc",
            "description": "Type of element for the logout detection:\n\n* `text` - A string of text that exists after a logout.\n* `url` - A redirect to a URL that occurs after a logout.\n* `sel` - A CSS selector that exists after a logout."
          },
          "value": {
            "type": "string",
            "description": "\nThe value of the element for the logout detection.  \nThe maximum length is 2048 characters.\n",
            "maxLength": 2048
          }
        },
        "required": [
          "id",
          "value"
        ]
      },
      "MoveTeam": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ID"
            },
            "description": "Identifier of the team to move the targets to."
          }
        },
        "required": [
          "teams"
        ]
      },
      "NameValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "NotificationSettings": {
        "type": "object",
        "properties": {
          "end_scan_emails": {
            "enum": [
              "new_findings",
              "always",
              "started_by",
              "never",
              ""
            ],
            "type": "string",
            "description": "* `new_findings` - New Findings\n* `always` - Always\n* `started_by` - Started by\n* `never` - Never",
            "x-spec-enum-id": "83560b6b75b1828e"
          },
          "promotional_topup_notification": {
            "type": "boolean",
            "description": "\nIf true, the user gets email of promotional top-up notification\nDefault true\n"
          }
        }
      },
      "ObjectId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "maxLength": 12,
            "minLength": 12
          }
        },
        "required": [
          "id"
        ]
      },
      "ObjectIdName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "maxLength": 12,
            "minLength": 12
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "PaginatedAPIUserList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIUser"
            }
          }
        }
      },
      "PaginatedAcccountAssetsList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AcccountAssets"
            }
          }
        }
      },
      "PaginatedAccountSequencesList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountSequences"
            }
          }
        }
      },
      "PaginatedAssessmentList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assessment"
            }
          }
        }
      },
      "PaginatedAssetList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "PaginatedCreditsPackList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditsPack"
            }
          }
        }
      },
      "PaginatedCreditsUsageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditsUsage"
            }
          }
        }
      },
      "PaginatedDiscoveryAssetList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveryAsset"
            }
          }
        }
      },
      "PaginatedDiscoveryAssetLogList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveryAssetLog"
            }
          }
        }
      },
      "PaginatedDomainSchemaList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainSchema"
            }
          }
        }
      },
      "PaginatedEventList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "PaginatedFindingActivityList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindingActivity"
            }
          }
        }
      },
      "PaginatedFindingLabelList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindingLabel"
            }
          }
        }
      },
      "PaginatedFindingList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Finding"
            }
          }
        }
      },
      "PaginatedFrameworkList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Framework"
        }
      },
      "PaginatedHighLevelPermissionList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLevelPermission"
            }
          }
        }
      },
      "PaginatedInvoiceModelList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModel"
            }
          }
        }
      },
      "PaginatedLogoutDetectorList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogoutDetector"
            }
          }
        }
      },
      "PaginatedPlanList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plan"
            }
          }
        }
      },
      "PaginatedProfileUserRoleList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileUserRole"
            }
          }
        }
      },
      "PaginatedReducedScopeList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReducedScope"
            }
          }
        }
      },
      "PaginatedReportRequestList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportRequest"
            }
          }
        }
      },
      "PaginatedRoleList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "PaginatedScanProfileList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanProfile"
            }
          }
        }
      },
      "PaginatedScanningAgentSchemaList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanningAgentSchema"
            }
          }
        }
      },
      "PaginatedScheduledScanList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledScan"
            }
          }
        }
      },
      "PaginatedScopeAutoSettingList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeAutoSetting"
            }
          }
        }
      },
      "PaginatedScopeLabelList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeLabel"
            }
          }
        }
      },
      "PaginatedScopeResponseList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeResponse"
            }
          }
        }
      },
      "PaginatedSequencesList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sequences"
            }
          }
        }
      },
      "PaginatedSourceList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Source"
            }
          }
        }
      },
      "PaginatedStoredReportList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoredReport"
            }
          }
        }
      },
      "PaginatedTeamList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          }
        }
      },
      "PaginatedUserLabelList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLabel"
            }
          }
        }
      },
      "PaginatedUserResponseList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          }
        }
      },
      "PaginatedUserRoleList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        }
      },
      "PaginatedUserScopeList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScope"
            }
          }
        }
      },
      "PaginatedVulnerabilityDefinitionList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VulnerabilityDefinition"
            }
          }
        }
      },
      "PaginatedWarningList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            }
          }
        }
      },
      "PaginatedWebhookList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of results.",
            "example": 6
          },
          "page_total": {
            "type": "integer",
            "description": "Total number of pages.",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "\nNumber of the current page.  \nThe first page is 1.  \nDefaults to 1 if no specific page is requested.\n",
            "example": 1
          },
          "length": {
            "type": "integer",
            "description": "Number of results returned per page.",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "PatchedAWSAccount": {
        "type": "object",
        "properties": {
          "access_key": {
            "type": "string",
            "pattern": "^[A-Z0-9]{20,40}$"
          },
          "secret_key": {
            "type": "string",
            "pattern": "^[0-9A-Za-z+\\/=]{40}$"
          },
          "enabled": {
            "type": "boolean"
          },
          "list_zones_permission": {
            "type": "boolean",
            "readOnly": true
          },
          "list_record_sets_permission": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "PatchedArchiveDiscoveryAsset": {
        "type": "object",
        "properties": {
          "archive_discovery_asset_after": {
            "type": "integer",
            "maximum": 365,
            "minimum": 1
          },
          "archive_discovery_asset_enabled": {
            "type": "boolean"
          }
        }
      },
      "PatchedAssessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true
          },
          "status": {
            "enum": [
              "canceled",
              "canceling",
              "completed",
              "completed_with_errors",
              "failed",
              "paused",
              "pausing",
              "queued",
              "resuming",
              "started",
              "under_review",
              "finishing_up"
            ],
            "type": "string",
            "x-spec-enum-id": "391b377c86087507",
            "readOnly": true,
            "description": "Status of the scan:\n\n* `canceled` - Canceled\n* `canceling` - Canceling\n* `completed` - Completed\n* `completed_with_errors` - Completed with errors - DEPRECATED\n* `failed` - Failed\n* `paused` - Paused\n* `pausing` - Pausing\n* `queued` - Queued\n* `resuming` - Resuming\n* `started` - Started\n* `under_review` - Under Review\n* `finishing_up` - Finishing up"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan started."
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan was completed."
          },
          "scan_profile": {
            "type": "string",
            "readOnly": true,
            "description": "\nIdentifier of the scan profile.\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with high severity."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "unlimited": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan had unlimited credits.\nIf false, the scan consumed credits.\nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "readOnly": true,
            "description": "\nTechnologies found in the scan.\nThe scanning engine uses them to fine-tune vulnerability tests and texts about how to fix the vulnerabilities.\n"
          },
          "crawler": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Crawler"
              }
            ],
            "readOnly": true,
            "description": "Information on the crawler execution."
          },
          "fingerprinter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FingerprinterSchema"
              }
            ],
            "readOnly": true,
            "description": "Information on the fingerprinter execution."
          },
          "scanner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Scanner"
              }
            ],
            "readOnly": true,
            "description": "Information on the scanner execution."
          },
          "target_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanTargetOptions"
              }
            ],
            "readOnly": true,
            "description": "\nOptions of the target for the scan.\n"
          },
          "has_sequence_navigation": {
            "type": "boolean",
            "description": "\nIf true, the scan includes sequence navigations.  \nLearn more about [How to set up Navigation Sequences?](https://help.probely.com/en/articles/6657065-how-to-set-up-navigation-sequences).\n"
          },
          "incremental": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan was incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan used a reduced scope to narrow the coverage to defined URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan only crawled navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).\n"
          },
          "ignore_blackout_period": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan ignored the blackout period defined in the target settings.\n"
          },
          "runtime": {
            "type": "string",
            "description": "\nTotal time the scan has been actively running.  \nFor example, \"02 00:00:10.123456\".\n"
          },
          "duration": {
            "type": "string",
            "description": "\nTotal time from the start of the scan to its completion, or to the moment of the query, if not completed. \nFor example, \"02 00:00:10.123456\".\n"
          },
          "user_data": {
            "type": "string",
            "description": "Store scan metadata."
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "readOnly": true,
            "description": "Scan Warnings list."
          },
          "scheduled": {
            "type": "boolean",
            "readOnly": true,
            "description": "Scan started by scheduling."
          }
        }
      },
      "PatchedAsset": {
        "type": "object",
        "description": "Model deals with setting verified to False if host changes.",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "description": "\nTechnologies identified in the target during scans.  \nThe scanning engine uses them to fine-tune vulnerability tests and improve the explanation of how to fix vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain.\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "\nMethod used in the verification of the domain:\n(Read-only)\n\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "include": {
            "type": "boolean",
            "description": "\nIf true, the extra host is in the scope of the scan.  \nIf false, the extra host is not in the scope of the scan.  \nDefaults to true.\n"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "pattern": "^(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\\u00a1-\\uffff0-9](?:[a-z\\u00a1-\\uffff0-9_-]{0,61}[a-z\\u00a1-\\uffff0-9])?(?:\\.(?!-)[a-z\\u00a1-\\uffff0-9-]{1,63}(?<!-))*(\\.(?!-)(?:[a-z\\u00a1-\\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?)?))(?::\\d{2,5})?$"
          }
        }
      },
      "PatchedAzureDevOpsAccount": {
        "type": "object",
        "properties": {
          "organization_name": {
            "type": "string",
            "maxLength": 254
          },
          "connected": {
            "type": "boolean",
            "readOnly": true
          },
          "reauthentication_failed": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "PatchedAzureDevOpsFinding": {
        "type": "object",
        "properties": {
          "selective_sync": {
            "type": "boolean"
          },
          "work_item_id": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "PatchedAzureDevOpsScope": {
        "type": "object",
        "properties": {
          "project": {
            "type": "object",
            "additionalProperties": {}
          },
          "work_item_type": {
            "type": "string",
            "maxLength": 254
          },
          "auto_sync": {
            "type": "boolean",
            "description": "Sync findings to Azure DevOps"
          },
          "auto_sync_closed": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PatchedBilling": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "default": "",
            "description": "First name of billing contact.",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "default": "",
            "description": "Last name of billing contact.",
            "maxLength": 150
          },
          "company": {
            "type": "string",
            "default": "",
            "description": "Company name for billing purposes.",
            "maxLength": 250
          },
          "email": {
            "type": "string",
            "format": "email",
            "default": "",
            "description": "E-mail for billing purposes.",
            "maxLength": 70
          },
          "address": {
            "type": "string",
            "default": "",
            "description": "Company address for billing purposes.",
            "maxLength": 150
          },
          "city": {
            "type": "string",
            "default": "",
            "maxLength": 50
          },
          "country": {
            "type": "string",
            "default": "",
            "description": "Company country for billing purposes.",
            "maxLength": 50
          },
          "state": {
            "type": "string",
            "default": "",
            "description": "Company state for billing purposes.",
            "maxLength": 50
          },
          "zip": {
            "type": "string",
            "default": "",
            "description": "Company zip code for billing purposes.",
            "maxLength": 20
          },
          "vat_number": {
            "type": "string",
            "description": "Company VAT number for billing purposes.",
            "maxLength": 70
          },
          "reg_number": {
            "type": "string",
            "description": "Company registration number for billing purposes.",
            "maxLength": 70
          },
          "other": {
            "type": "string",
            "description": "Additional information that should be in invoices.",
            "maxLength": 70
          },
          "currency_code": {
            "type": "string",
            "readOnly": true,
            "description": "Currency code information."
          }
        }
      },
      "PatchedBulkScheduledScanUpdateSchema": {
        "type": "object",
        "properties": {
          "scheduledscans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkScheduledScanScopeTargetSchema"
            }
          },
          "scheduledscan": {
            "$ref": "#/components/schemas/ScheduledScan"
          }
        }
      },
      "PatchedCloudflareAccount": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]{32,64}$"
          },
          "token_name": {
            "type": "string",
            "maxLength": 256
          },
          "enabled": {
            "type": "boolean"
          },
          "zone_read_permission": {
            "type": "boolean",
            "readOnly": true
          },
          "dns_read_permission": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "PatchedCreditsAutoTopUp": {
        "type": "object",
        "properties": {
          "auto_top_up_on_expiration": {
            "type": "boolean",
            "description": "If true, buy credits automatically on the expiration date of purchased credits."
          },
          "auto_top_up_on_insufficient": {
            "type": "boolean",
            "description": "If true, buy credits automatically when the account balance is insufficient to perfom scans."
          },
          "auto_top_up_credits_pack": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreditsPack"
              }
            ],
            "nullable": true,
            "description": "Credits pack to buy automatically."
          }
        }
      },
      "PatchedDiscoveryAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "account": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "\nName of the discovered asset.  \nThe maximum length is 256 characters.\n",
            "maxLength": 256
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "\nURL of the discovered asset.\n"
          },
          "type": {
            "enum": [
              "web",
              "api"
            ],
            "type": "string",
            "x-spec-enum-id": "beefe81f2bb3c2db",
            "readOnly": true,
            "description": "\nType of discovered asset:  \n(Defaults to `api`)  \n\n\n* `web` - Web\n* `api` - API"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of when the discovered asset was last seen, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\u201d.\n"
          },
          "first_seen": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of when the asset was firstly discovered, in ISO 8601 UTC format.  \nFor example, \u201c2023-08-09T13:27:43.8208302\u201d.\n"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Source"
            },
            "readOnly": true,
            "description": "\nSources from which the asset was discovered.\n"
          },
          "technologies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "desc": {
                  "type": "string"
                }
              }
            },
            "readOnly": true,
            "description": "\nTechnologies found in the discovered asset.\n"
          },
          "authorities": {
            "type": "string",
            "readOnly": true,
            "description": "\nAuthorities of the discovered asset.\n"
          },
          "risk": {
            "enum": [
              null,
              0,
              10,
              20,
              30
            ],
            "x-spec-enum-id": "4bbc7459db401a3f",
            "readOnly": true,
            "nullable": true,
            "description": "\nScan assessment risk of the discovered asset:  \n(Defaults to `null`)\n\n\n* `None` - Not applicable.\n* `0` - No risk.\n* `10` - Low risk.\n* `20` - Medium risk.\n* `30` - High risk."
          },
          "score": {
            "enum": [
              "",
              "A+",
              "A",
              "B",
              "C",
              "D",
              "E",
              "F",
              "R"
            ],
            "type": "string",
            "x-spec-enum-id": "d0ca3d99ed433a35",
            "readOnly": true,
            "description": "\nSecurity Headers assessment score of the discovered asset.  \n\n\n* `` - \n* `A+` - A+\n* `A` - A\n* `B` - B\n* `C` - C\n* `D` - D\n* `E` - E\n* `F` - F\n* `R` - R"
          },
          "security_headers_url": {
            "type": "string",
            "readOnly": true
          },
          "state": {
            "enum": [
              "NEW",
              "ACTIVE",
              "HIDDEN",
              "ARCHIVED"
            ],
            "type": "string",
            "x-spec-enum-id": "b565a8ca3ff0eba5",
            "description": "\nState of the discovered asset:  \n(Defaults to `NEW`)  \n\n\n* `NEW` - New\n* `ACTIVE` - Active\n* `HIDDEN` - Hidden\n* `ARCHIVED` - Archived"
          },
          "screenshot": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": "\nScreenshot of the discovered asset.  \n"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryScope"
              }
            ],
            "readOnly": true,
            "description": "\nTarget of the discovered asset.\n"
          },
          "owners": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UserLabel"
                }
              ],
              "nullable": true
            },
            "description": "\nOwner labels of the discovered asset.  \nFor example, \"owner=Probely\" or \"owner=Probely&owner=QA\".\n"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Comment on the object."
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "\nTarget labels of the discovered asset.\n"
          },
          "redirect_from": {
            "readOnly": true,
            "nullable": true,
            "description": "\nURLs redirected to the discovered asset.  \n"
          },
          "redirect_to": {
            "type": "string",
            "readOnly": true,
            "description": "\nURL the discovered asset is redirected to.  \n"
          },
          "api_schema_file": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "PatchedDomain": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "\nDomain name with an associated IP address or an IP address itself.  \nFor example, \"my.example.com\", \"example.com\", or \"37.139.17.48\".  \nThe maximum length is 256 characters.\n",
            "pattern": "^(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\\u00a1-\\uffff0-9](?:[a-z\\u00a1-\\uffff0-9_-]{0,61}[a-z\\u00a1-\\uffff0-9])?(?:\\.(?!-)[a-z\\u00a1-\\uffff0-9-]{1,63}(?<!-))*(\\.(?!-)(?:[a-z\\u00a1-\\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?)?))(?::\\d{2,5})?$"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain.  \nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "Method used in the domain verification:\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "\nError of the last verification of the domain.  \nEmpty if no error occurred.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.  \nRead-only.\n"
          },
          "basic_auth_username": {
            "type": "string",
            "nullable": true,
            "description": "Username used for basic authentication."
          },
          "basic_auth_password": {
            "type": "string",
            "nullable": true,
            "description": "Password used for basic authentication."
          },
          "port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true,
            "description": "\nIP Port to send the requests to.  \nIf not defined, uses the default ports for HTTPS and HTTP (if the verification method requires making HTTP requests).\n"
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Source"
              }
            ],
            "readOnly": true
          }
        }
      },
      "PatchedFinding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "target": {
            "type": "string",
            "description": "Target scanned to find vulnerabilities.",
            "readOnly": true
          },
          "scans": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Scans that originated the vulnerability finding."
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FindingLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the vulnerability finding."
          },
          "fix": {
            "type": "string",
            "description": "Description of how to fix the vulnerability.",
            "readOnly": true
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestResponsePairMarkdown"
            },
            "readOnly": true,
            "description": "Pairs of requests and responses of the vulnerability finding."
          },
          "evidence": {
            "type": "string",
            "readOnly": true,
            "description": "Evidence with proof of the vulnerability finding."
          },
          "extra": {
            "type": "string",
            "readOnly": true,
            "description": "Extra details about the vulnerability finding."
          },
          "definition": {
            "type": "string",
            "description": "Definition of the vulnerability."
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "\nURL of the vulnerability finding.\nFor example, \"http://www.example.com/user/show-details\".\nThe maximum length is 66000 characters.\n",
            "maxLength": 66000
          },
          "path": {
            "type": "string",
            "description": "URL path of the vulnerability finding.\nFor example, \"user/show-details\".",
            "readOnly": true
          },
          "method": {
            "enum": [
              "get",
              "post",
              "trace",
              "options",
              "put",
              "delete"
            ],
            "type": "string",
            "x-spec-enum-id": "2831241c17867f72",
            "readOnly": true,
            "description": "HTTP method used in the request:\n\n* `get` - GET\n* `post` - POST\n* `trace` - TRACE\n* `options` - OPTIONS\n* `put` - PUT\n* `delete` - DELETE"
          },
          "insertion_point": {
            "enum": [
              "cookie",
              "parameter",
              "arbitrary_url_param",
              "header",
              "url_folder",
              "url_filename",
              "json_parameter",
              "request_body",
              "multipart_parameter",
              "graphql_parameter",
              "non_standard_parameter",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "b3fd7c42edd27853",
            "description": "Insertion point of the parameter:\n\n* `cookie` - Cookie\n* `parameter` - Parameter\n* `arbitrary_url_param` - Parameter\n* `header` - Header\n* `url_folder` - URL Path\n* `url_filename` - URL Path\n* `json_parameter` - JSON Parameter\n* `request_body` - Request Body\n* `multipart_parameter` - Multipart Parameter\n* `graphql_parameter` - GraphQL Parameter\n* `non_standard_parameter` - Non Standard Parameter"
          },
          "parameter": {
            "type": "string",
            "description": "\nName of the inserted parameter.  \nThe maximum length is 1024 characters.\n",
            "maxLength": 1024
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "Value of the inserted parameter."
          },
          "params": {
            "type": "string",
            "description": "Query parameters of the vulnerability finding, in JSON format.\nFor example, \"{'name': ['Joe Smith'], 'phone': ['+919999999999', '+628888888888']}\"",
            "readOnly": true
          },
          "assignee": {
            "type": "string",
            "description": "User who is assigned to fix the vulnerability.",
            "nullable": true
          },
          "state": {
            "enum": [
              "notfixed",
              "invalid",
              "accepted",
              "fixed"
            ],
            "type": "string",
            "x-spec-enum-id": "80a7afa887252954",
            "description": "\nState of the vulnerability finding:  \n(Read more about [the meaning of vulnerability findings states](https://help.probely.com/en/articles/6673828-what-is-the-meaning-of-a-finding-s-state))\n\n\n* `notfixed` - Not Fixed\n* `invalid` - Invalid\n* `accepted` - Accepted\n* `fixed` - Fixed"
          },
          "severity": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "00695357157ec7c5",
            "description": "\nSeverity of the vulnerability finding:  \n\n\n* `10` - low\n* `20` - medium\n* `30` - high",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "cvss_score": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "nullable": true,
            "description": "Score of the vulnerability finding according to the Common Vulnerability Scoring System (CVSS)."
          },
          "cvss_vector": {
            "type": "string",
            "readOnly": true,
            "description": "Vector with the metrics of the score of the vulnerability finding according to the Common Vulnerability Scoring System (CVSS)."
          },
          "last_found": {
            "type": "string",
            "format": "date-time",
            "description": "\nDate and time of when the vulnerability was last found, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\"\n"
          },
          "retesting": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the vulnerability will be retested.  \nIf, after the retest, the vulnerability is no longer found, the vulnerability finding is marked as fixed. Otherwise, it is marked as not fixed.  \n"
          },
          "new": {
            "type": "boolean",
            "description": "\nIf true, this is a newly found vulnerability.\nIf false, this vulnerability has been found in previous scans.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Timestamp of the Finding's creation."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Comment on the object."
          }
        }
      },
      "PatchedFindingLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the label.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "description": "\nColor of the label, in RGB hexadecimal format prefixed with \"#\".  \nFor example, \"#00FF00\" for green.\n",
            "pattern": "^[a-zA-Z0-9#_-]*$"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          }
        }
      },
      "PatchedJiraCloudFinding": {
        "type": "object",
        "properties": {
          "selective_sync": {
            "type": "boolean"
          },
          "issue_id": {
            "type": "string",
            "readOnly": true
          },
          "link": {
            "type": "string",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 32
          }
        }
      },
      "PatchedJiraCloudScope": {
        "type": "object",
        "properties": {
          "auto_sync": {
            "type": "boolean"
          },
          "auto_sync_closed": {
            "type": "boolean",
            "default": false
          },
          "project_id": {
            "type": "string"
          },
          "issue_type_id": {
            "type": "string"
          },
          "status_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "priority_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        }
      },
      "PatchedJiraServerAccount": {
        "type": "object",
        "properties": {
          "base_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_key": {
            "type": "string",
            "maxLength": 1024
          },
          "consumer_secret": {
            "type": "string"
          },
          "verify_tls": {
            "type": "boolean"
          },
          "skip_jira_webhooks": {
            "type": "boolean"
          }
        }
      },
      "PatchedJiraServerFinding": {
        "type": "object",
        "properties": {
          "selective_sync": {
            "type": "boolean"
          },
          "issue_id": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PatchedJiraServerScope": {
        "type": "object",
        "properties": {
          "auto_sync": {
            "type": "boolean"
          },
          "auto_sync_closed": {
            "type": "boolean",
            "default": false
          },
          "project_id": {
            "type": "string"
          },
          "issue_type_id": {
            "type": "string"
          },
          "status_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "priority_mapping": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        }
      },
      "PatchedLogoutDetector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "type": {
            "enum": [
              "text",
              "url",
              "sel"
            ],
            "type": "string",
            "x-spec-enum-id": "5e2906359619acbc",
            "description": "Type of element for the logout detection:\n\n* `text` - A string of text that exists after a logout.\n* `url` - A redirect to a URL that occurs after a logout.\n* `sel` - A CSS selector that exists after a logout."
          },
          "value": {
            "type": "string",
            "description": "\nThe value of the element for the logout detection.  \nThe maximum length is 2048 characters.\n",
            "maxLength": 2048
          }
        }
      },
      "PatchedNotificationSettings": {
        "type": "object",
        "properties": {
          "end_scan_emails": {
            "enum": [
              "new_findings",
              "always",
              "started_by",
              "never",
              ""
            ],
            "type": "string",
            "description": "* `new_findings` - New Findings\n* `always` - Always\n* `started_by` - Started by\n* `never` - Never",
            "x-spec-enum-id": "83560b6b75b1828e"
          },
          "promotional_topup_notification": {
            "type": "boolean",
            "description": "\nIf true, the user gets email of promotional top-up notification\nDefault true\n"
          }
        }
      },
      "PatchedReducedScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "url": {
            "type": "string",
            "description": "\nURL to scan.\nThe maximum length is 2048 characters.\n",
            "format": "uri",
            "maxLength": 2048
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "PatchedReportRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "user": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "readOnly": true
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the report submission date, in ISO 8601 UTC format.  \nFor example, '2023-08-09T13:27.43.8208302'\n"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "\nDate and time when the report file was generated, in ISO 8601 UTC format.  \nFor example, '2023-08-09T13:27.43.8208302'\n"
          },
          "is_email_notification_enabled": {
            "type": "boolean",
            "description": "\nIf true, email notifications are enabled, and the report will be sent to the user via email.\nIf false, email notifications are disabled.\nDefaults to false.\n"
          },
          "filters": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "readOnly": true
          },
          "ttl": {
            "type": "string",
            "readOnly": true,
            "description": "The time-to-live (TTL) for the report file, indicating how long it remains available."
          },
          "timezone": {
            "type": "string",
            "description": "Time zone name according to the IANA standard (e.g., 'America/New_York', 'Europe/London').",
            "maxLength": 64
          }
        }
      },
      "PatchedRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "Role's name.",
            "maxLength": 255
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLevelPermission"
            }
          },
          "custom": {
            "type": "boolean",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Short description."
          }
        }
      },
      "PatchedScanProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "\nIdentifier of the scan profile.  \nCustom scan profiles are always prefixed by \"sp-\".\n"
          },
          "name": {
            "type": "string",
            "description": "\nName of the scan profile.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the scan profile."
          },
          "archived": {
            "type": "boolean",
            "description": "\nIf true, the scan profile is no longer in use.  \nIf false, the scan profile can be used.\n"
          },
          "type": {
            "enum": [
              "web",
              "api"
            ],
            "type": "string",
            "x-spec-enum-id": "582a96eeca57f580",
            "description": "Target type:\n\n* `web` - Scan a Web application, including Single Page Applications (SPA) that rely on one or more APIs.\n* `api` - Scan a standalone API defined by an OpenAPI schema, or by a Postman Collection."
          },
          "speed": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "0a4ea7859b51ffa4",
            "description": "\nScan speed:  \n(Defaults to `20`)\n\n\n* `10` - Slow - Does roughly half the number of parallel requests of the Normal speed.\n* `20` - Normal - Offers a good balance between scan duration and the number of requests performed at the same time to the target.\n* `30` - Fast - Does roughly twice the number of parallel requests of the Normal speed.",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "payloads": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "8aeeb4b792381be8",
            "description": "\nScan payloads:  \n(Defaults to `20`)\n\n\n* `10` - Light - Uses slightly less payloads than Normal, reducing scan time while still detecting the most common situations.\n* `20` - Normal - Uses a set of payloads that maximizes detection without increasing the scan time excessively, delivering a good compromise.\n* `30` - Thorough - Includes a more extensive set of payloads to detect very uncommon situations. Scan time increases significantly.",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleVulnerabilityDefinition"
            },
            "description": "Vulnerabilities for the scanner to verify."
          },
          "methods": {
            "enum": [
              "all",
              "safe",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "4aacecc81fc3a5e8",
            "description": "\nScan methods:  \n(Defaults to `all`)\n\n\n* `all` - All methods - Allow any HTTP method to be used during the scan.\n* `safe` - Only safe methods - Ideal set for production targets, allowing only the following HTTP methods: GET, HEAD, OPTIONS, TRACE, and CONNECT."
          },
          "can_scan_unverified": {
            "type": "boolean",
            "readOnly": true,
            "description": "If true, the scan profile allows targets with unverified domains."
          },
          "delay": {
            "type": "integer",
            "maximum": 5000,
            "minimum": 0,
            "nullable": true,
            "description": "\nTime delay in milliseconds between requests for each scanning thread.  \nIt is an approximate value and is more accurate for slower scan speed settings.  \nIf not defined, there is no delay between requests.  \nThe maximum delay is 5000ms.  \n"
          },
          "max_run_time": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "nullable": true,
            "description": "\nThe maximum time the scan is allowed to run.  \nFor example, \"750s\", \"25m\", \"2h\", or \"1d\".  \nSuffix the value with \"s\" for seconds, \"m\" for minutes, \"h\" for hours, and \"d\" for days.  \nIf the units are not specified the value is considered to be in seconds.  \n"
          },
          "dedup_enabled": {
            "type": "boolean",
            "description": "\nIf true, the scan deduplicates pages with the same SimHash to scan only a few of them.  \nIf false, the scan does not deduplicate pages, which can increase the scan duration significantly.  \nDefaults to true.  \n"
          },
          "auto_patterns_enabled": {
            "type": "boolean",
            "description": "\nIf true, the scan detects URL patterns to identify similar pages to scan only a few of them.  \nIf false, the scan does not detect patterns, which can increase the scan duration significantly.\nDefaults to true.  \n"
          },
          "max_urls": {
            "type": "integer",
            "maximum": 50000,
            "minimum": 1,
            "description": "\nMaximum number of URLs the crawler can visit.  \nThe value must be between 1 and 50000.  \nDefaults to 5000, which is a good compromise between coverage and scan time.  \n"
          },
          "builtin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is a [built-in scan profile](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences), which cannot be changed.  \nIf false, it is a [custom scan profile](https://help.probely.com/en/articles/8524283-how-to-customize-a-scan-profile) and the id must start with \"sp-\".\n"
          }
        }
      },
      "PatchedScanningAgentSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "installer_generated": {
            "type": "boolean",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ],
              "nullable": true
            },
            "nullable": true
          },
          "online": {
            "type": "boolean",
            "readOnly": true
          },
          "fallback": {
            "type": "boolean",
            "readOnly": true
          },
          "rx_bytes": {
            "type": "integer",
            "readOnly": true
          },
          "tx_bytes": {
            "type": "integer",
            "readOnly": true
          },
          "latest_handshake": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "PatchedScheduledScan": {
        "type": "object",
        "description": "Serializer for scheduled/recurrent scans",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true
          },
          "date_time": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of next scan scheduled."
          },
          "recurrence": {
            "enum": [
              "h",
              "d",
              "w",
              "m",
              "q",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "dfedcfc0a8f9b3cc",
            "description": "Scheduled scan recurrence.\n\n* `h` - Hourly\n* `d` - Daily\n* `w` - Weekly\n* `m` - Monthly\n* `q` - Quarterly"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "readOnly": true,
            "description": "Time window during which scans are temporarily interrupted."
          },
          "timezone": {
            "type": "string",
            "description": "Timezone to use for scheduled scan timestamp.",
            "maxLength": 64
          },
          "run_on_day_of_week": {
            "type": "boolean",
            "description": "Schedule scan to run on specific monthly day of week (for monthly/quarterly recurrence)."
          },
          "scheduled_day_of_week": {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              null
            ],
            "type": "integer",
            "x-spec-enum-id": "51d3c97a46e1cea2",
            "nullable": true,
            "description": "Day of week to run scan on - monday to sunday (for run on day of week option).\n\n* `1` - Monday\n* `2` - Tuesday\n* `3` - Wednesday\n* `4` - Thursday\n* `5` - Friday\n* `6` - Saturday\n* `7` - Sunday",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "week_index": {
            "enum": [
              "first",
              "second",
              "third",
              "fourth",
              "last",
              "",
              null
            ],
            "type": "string",
            "x-spec-enum-id": "e0570dabd95f5da0",
            "nullable": true,
            "description": "Which week of the month to run scan on (with `run_on_day_of_week` enabled).\n\n* `first` - First\n* `second` - Second\n* `third` - Third\n* `fourth` - Fourth\n* `last` - Last"
          },
          "partial_scan": {
            "type": "boolean",
            "description": "Future scans set as partial scans, use in conjunction with `incremental` and `reduced_scope`."
          },
          "override_target_settings": {
            "type": "boolean",
            "description": "Override scan target's scan settings, use in conjunction with `override_target_settings`."
          },
          "incremental": {
            "type": "boolean",
            "description": "Future scans set to incremental, use in conjunction with `partial_scan` and `override_target_settings`."
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "Future scans set as reduced scope, use in conjunction with `partial_scan` and `override_target_settings`."
          },
          "scan_profile": {
            "type": "string",
            "nullable": true,
            "description": "\nScan profile to use.  \nUse the endpoint [List Scan Profiles](#tag/Scan-Profiles/operation/scan_profiles_list) to get all the available scan profiles.  \nIf no scan profile is specified, the scan profile will be the one specified in the target settings.\n"
          },
          "unlimited": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PatchedScopeLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the label.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "description": "\nColor of the label, in RGB hexadecimal format prefixed with \"#\".  \nFor example, \"#00FF00\" for green.\n",
            "pattern": "^[a-zA-Z0-9#_-]*$"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          }
        }
      },
      "PatchedScopeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchedTarget"
              }
            ],
            "description": "\nCore settings of the target.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresoved vulnerability findings with high severity."
          },
          "risk": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "last_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Last scan done for the target."
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "next_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            ],
            "readOnly": true,
            "description": "Next scheduled scan for the target."
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadOnlyAsset"
            },
            "readOnly": true
          },
          "scan_profile": {
            "type": "string",
            "description": "\nIdentifier of the scan profile.\n"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "unlimited": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the target has unlimited scans.  \nIf false, the target scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "x-spec-enum-id": "4b86a2e9dd6eee38",
            "description": "\nType of [scan report](https://help.probely.com/en/articles/2659844-types-of-compliance-reports-you-can-generate-with-probely) produced for the target:  \n(Defaults to `default`)\n\n\n* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "allowed_scan_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleScanProfile"
            },
            "readOnly": true,
            "description": "[Scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) allowed for the target.",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the target."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true,
            "description": "\nScanning agent of the target.\nLearn more on [how to scan internal applications with a scanning agent](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "include_deduplicated_endpoints": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, scans include deduplicated endpoints.  \nIf false or null, scans exclude deduplicated endpoints.  \nA deduplicated endpoint has the same simhash as another scanned endpoint.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ]
            },
            "readOnly": true
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "description": "Time window during which scans are temporarily interrupted."
          },
          "fail_fast": {
            "type": "boolean",
            "description": "\nIf true, scans fail on recoverable errors.  \nIf false, scans continue on recoverable errors.  \nDefaults to true. \n"
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "incremental": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can have reduced scope to narrow the coverage to defined URLs.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_incremental": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can have reduced scope to narrow the coverage to defined URLs.     \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can only crawl navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can only crawl navigation sequences to narrow the coverage.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          }
        }
      },
      "PatchedSequences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "requires_authentication": {
            "type": "boolean"
          },
          "type": {
            "enum": [
              "login",
              "navigation"
            ],
            "type": "string",
            "description": "* `login` - Login\n* `navigation` - Navigation",
            "x-spec-enum-id": "fab4d916e03c4321"
          },
          "enabled": {
            "type": "boolean"
          },
          "index": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "content": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PatchedSlackScope": {
        "type": "object",
        "properties": {
          "webhook_url": {
            "type": "string",
            "pattern": "^https://hooks.slack.com/services/(?:.*)$"
          },
          "notify_scan_started": {
            "type": "boolean"
          },
          "notify_scan_completed": {
            "type": "boolean"
          },
          "notify_high_findings": {
            "type": "boolean"
          },
          "notify_medium_findings": {
            "type": "boolean"
          },
          "notify_low_findings": {
            "type": "boolean"
          },
          "notify_finding_fixed": {
            "type": "boolean"
          },
          "notify_login_failed": {
            "type": "boolean",
            "default": false
          },
          "notify_retest_completed": {
            "type": "boolean"
          }
        }
      },
      "PatchedStoredReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "Name of the report.",
            "maxLength": 255
          },
          "date_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "\nDate and time when the next report will be generated, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "recurrence": {
            "enum": [
              "h",
              "d",
              "w",
              "m",
              "q",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "dfedcfc0a8f9b3cc",
            "description": "\nRecurrence of the report generation:  \n(if `\"\"` it's a one-time report)\n\n\n* `h` - Hourly\n* `d` - Daily\n* `w` - Weekly\n* `m` - Monthly\n* `q` - Quarterly"
          },
          "timezone": {
            "type": "string",
            "description": "\nTwo-letter country code for the time zone of the `date_time`, as an ISO 3166-1 alpha-2 code.\n",
            "maxLength": 64
          },
          "on_day_of_week": {
            "type": "boolean",
            "description": "\nIf true, the report is scheduled to be generated on a specific week.  \nIf false, the report is generated on the day set in `date_time`.  \nThis is only applicable if the `recurrence` is monthly or quarterly.  \nDefaults to false.\n"
          },
          "scheduled_day_of_week": {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              null
            ],
            "type": "integer",
            "x-spec-enum-id": "51d3c97a46e1cea2",
            "nullable": true,
            "description": "\nThe day of the week on which the report is generated:  \n(This is only applicable if `on_day_of_week` is true)\n\n\n* `1` - Monday\n* `2` - Tuesday\n* `3` - Wednesday\n* `4` - Thursday\n* `5` - Friday\n* `6` - Saturday\n* `7` - Sunday",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "week_index": {
            "enum": [
              "first",
              "second",
              "third",
              "fourth",
              "last",
              "",
              null
            ],
            "type": "string",
            "x-spec-enum-id": "e0570dabd95f5da0",
            "nullable": true,
            "description": "\nThe week of the month in which the report is generated:  \n(This is only applicable if `on_day_of_week` is true)\n\n\n* `first` - First\n* `second` - Second\n* `third` - Third\n* `fourth` - Fourth\n* `last` - Last"
          },
          "filters": {
            "$ref": "#/components/schemas/ReportFilters"
          },
          "report_type": {
            "type": "string",
            "default": "default"
          },
          "report_fileformat": {
            "type": "string",
            "default": "pdf"
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the report is generated.  \nDefaults to true.\n"
          }
        }
      },
      "PatchedTarget": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "url": {
            "type": "string",
            "description": "URL of the target.",
            "format": "uri"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "description": "Hostname of the target."
          },
          "has_form_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a login form.  \nRead more about [how to set up target authentication (login form)](https://help.probely.com/en/articles/3292779-how-to-set-up-target-authentication-login-form).  \nDefaults to false.\n"
          },
          "form_login_url": {
            "type": "string",
            "description": "URL of the login form of the target.",
            "format": "uri"
          },
          "form_login_check_pattern": {
            "type": "string",
            "description": "\nPattern to check a successful login.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "form_login": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            },
            "description": "Field and value pairs to fill the login form."
          },
          "logout_detection_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, detects any undesired logouts that may occur during scans to log back in.  \nRequires `check_session_url` and `logout_detectors` to be defined.  \nDefaults to false.\n"
          },
          "has_sequence_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a recorded login sequence.  \nRead more about [how to set up target authentication (login sequence)](https://help.probely.com/en/articles/5402869-how-to-record-a-sequence-with-probely-s-sequence-recorder-plugin).  \nDefaults to false.  \n"
          },
          "has_basic_auth": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through username and password credentials.  \nDefaults to false.\n"
          },
          "basic_auth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicAuth"
              }
            ],
            "description": "Username and password credentials for the basic auth."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "whitelist": {
            "description": "\nAdditional paths to crawl and scan.\nFor example, \"archive/search?query=probely\".\nOnly relative paths are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "blacklist": {
            "description": "\nURLs to avoid scanning.\nFor example, \"https://example.com/pic-delete.php*\" or \"*.archive.example.com\".\nURLs need to be absolute and wildcards (`*`) are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "auth_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target has authentication.  \nDefaults to false.\n"
          },
          "logout_condition": {
            "enum": [
              "any",
              "all"
            ],
            "type": "string",
            "x-spec-enum-id": "3ecbcf8a1a1bb9a4",
            "description": "Type of combination of the logout conditions:\n\n* `any` - Is logged out if any condition is verified.\n* `all` - Is logged out only if all condition are verified."
          },
          "check_session_url": {
            "type": "string",
            "description": "URL to check session."
          },
          "has_otp": {
            "type": "boolean",
            "description": "\nIf true, the target has two-factor authentication (2FA).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).  \nDefaults to false.  \n"
          },
          "otp_secret": {
            "type": "string",
            "description": "\nThe seed/secret obtained when the QR code is displayed to be scanned by the third-party authenticator (TPA) app installed on the phone (e.g., Google Authenticator, 1Password, Authy, Microsoft Authenticator, etc.).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).\n"
          },
          "otp_algorithm": {
            "enum": [
              "SHA1",
              "SHA256",
              "SHA512"
            ],
            "type": "string",
            "x-spec-enum-id": "f070a44720b314e8",
            "default": "SHA1",
            "description": "\nSecure hash algorithm (SHA) to generate the one-time password (OTP):  \n(Defaults to `SHA1`)\n\n\n* `SHA1` - Sha1\n* `SHA256` - Sha256\n* `SHA512` - Sha512"
          },
          "otp_digits": {
            "enum": [
              6,
              7,
              8
            ],
            "type": "integer",
            "x-spec-enum-id": "50e5a8b8120242e7",
            "default": 6,
            "description": "\nNumber of digits of the one-time password (OTP):  \n(Defaults to `6`)\n\n\n* `6` - Six\n* `7` - Seven\n* `8` - Eight",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "otp_field": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to enter the one-time password (OTP).  \nFor example, a text input field.\nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_submit": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to submit the one-time password (OTP).\nFor example, a button.  \nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_login_sequence_totp_value": {
            "type": "string",
            "description": "\nOne-time password (OTP) obtained at the time when the login sequence was recorded, i.e., the time-based one-time password (TOTP).  \nDefaults to \"\".\n",
            "maxLength": 8,
            "minLength": 6
          },
          "otp_type": {
            "type": "string"
          },
          "otp_url": {
            "type": "string",
            "readOnly": true
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "description": "\nTechnologies identified in the target during scans.  \nThe scanning engine uses them to fine-tune vulnerability tests and improve the explanation of how to fix vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "readOnly": true,
            "description": "\nToken used to verify the domain.\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "Method used in the domain verification:\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "api_scan_settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/APIScanSettings"
              }
            ],
            "description": "Scanning settings if the target is an API."
          }
        }
      },
      "PatchedTeam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the team.  \nMaximum length is 255 characters. \n",
            "maxLength": 255
          },
          "num_api_keys": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of API Keys added to the team."
          },
          "num_users": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of users in the team."
          },
          "num_targets": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of targets added to the team."
          },
          "quota": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "nullable": true,
            "description": "Number of targets the team can create."
          },
          "reserve": {
            "type": "boolean",
            "description": "\nIf true, the account has target slots reserved for the team to ensure the fulfillment of the team's quota.  \nDefaults to false.\n"
          },
          "targets": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/VerySimpleScope"
                }
              ]
            },
            "description": "Targets of the team."
          },
          "scanning_agents": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScanningAgent"
                }
              ]
            },
            "description": "\nScanning agents of the team.  \nLearn more about [How to scan internal applications with a Scanning Agent?](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "num_available_targets": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of available targets."
          }
        }
      },
      "PatchedUserLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the label.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "description": "\nColor of the label, in RGB hexadecimal format prefixed with \"#\".  \nFor example, \"#00FF00\" for green.\n",
            "pattern": "^[a-zA-Z0-9#_-]*$"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          }
        }
      },
      "PatchedUserUpdateRequest": {
        "type": "object",
        "description": "Remove field user_roles if the request users doesn't have\nuser_management high level permission",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": "Email of the user."
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          },
          "title": {
            "enum": [
              "ceo",
              "cto",
              "cso",
              "seceng",
              "dev",
              "devop",
              "manager",
              "other",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "9b7b3ace78860881",
            "description": "Job title:\n\n* `ceo` - Chief Executive Officer\n* `cto` - Chief Technology Officer\n* `cso` - Chief Security Officer\n* `seceng` - Security engineer\n* `dev` - Developer\n* `devop` - Developer Operations\n* `manager` - Manager\n* `other` - Other"
          },
          "is_billing_admin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has permissions to manage billing.\nRead-only.\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the user can authenticate to Probely to interact with apps and the API.  \nIf false, the user's access to Probely's apps and API is blocked.  \nDefaults to true.\n"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLabel"
            }
          },
          "user_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleUserRoleResponse"
            },
            "readOnly": true
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of the last login of the user, in ISO 8601 UTC format. <br>For example, \"2023-08-09T13:27:43.8208302\""
          },
          "is_apiuser": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is an app that interacts with Probely through the API.  \nIf false, it is a human who interacts with Probely through our web interface.  \nDefaults to false.\"\n"
          },
          "mfa_enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has MFA (Multi-Factor Authentication) enabled at login.  \nDefaults to true.\n"
          }
        }
      },
      "PatchedWebhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "Name of the webhook.",
            "maxLength": 255
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "check_cert": {
            "type": "boolean",
            "description": "If true, verify the HTTPS certificate of the webhook URL. Defaults to true."
          },
          "api_version": {
            "enum": [
              "v1"
            ],
            "type": "string",
            "x-spec-enum-id": "aa56d68e8b664ff0",
            "description": "API version of the webhook.\n\n* `v1` - V1"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          }
        }
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Plan identifier.",
            "maxLength": 255
          },
          "name": {
            "type": "string",
            "description": "Plan name.",
            "maxLength": 50
          },
          "family": {
            "type": "string",
            "nullable": true,
            "description": "Plan family."
          },
          "description": {
            "type": "string",
            "description": "Plan description.",
            "maxLength": 500
          },
          "is_trial": {
            "type": "boolean",
            "description": "Does plan include trial."
          },
          "charge_model": {
            "enum": [
              "per_unit",
              "flat_fee",
              "volume",
              "tiered"
            ],
            "type": "string",
            "description": "* `per_unit` - per_unit\n* `flat_fee` - flat_fee\n* `volume` - volume\n* `tiered` - tiered",
            "x-spec-enum-id": "1e8a7f0bd4c71cbf"
          },
          "price": {
            "type": "integer",
            "readOnly": true
          },
          "currency_code": {
            "enum": [
              "USD",
              "EUR",
              "GBP"
            ],
            "type": "string",
            "description": "* `USD` - USD\n* `EUR` - EUR\n* `GBP` - GBP",
            "x-spec-enum-id": "7e3503849300ac14"
          },
          "period": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "Plan billing is done every N units."
          },
          "period_unit": {
            "enum": [
              "week",
              "month",
              "year"
            ],
            "type": "string",
            "x-spec-enum-id": "6b418aed0b2c716b",
            "description": "Unit for the plan billing cycle.\n\n* `week` - Week\n* `month` - Month\n* `year` - Year"
          },
          "allowed_builtin_scan_profiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "allowed_credits_packs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditsPack"
            }
          },
          "discount": {
            "type": "integer",
            "readOnly": true
          },
          "savings": {
            "type": "integer",
            "readOnly": true
          },
          "tiers": {
            "nullable": true
          }
        },
        "required": [
          "allowed_builtin_scan_profiles",
          "allowed_credits_packs",
          "charge_model",
          "currency_code",
          "discount",
          "id",
          "price",
          "savings"
        ]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": "Email of the user."
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          },
          "title": {
            "enum": [
              "ceo",
              "cto",
              "cso",
              "seceng",
              "dev",
              "devop",
              "manager",
              "other",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "9b7b3ace78860881",
            "description": "Job title:\n\n* `ceo` - Chief Executive Officer\n* `cto` - Chief Technology Officer\n* `cso` - Chief Security Officer\n* `seceng` - Security engineer\n* `dev` - Developer\n* `devop` - Developer Operations\n* `manager` - Manager\n* `other` - Other"
          },
          "is_billing_admin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has permissions to manage billing.\nRead-only.\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the user can authenticate to Probely to interact with apps and the API.  \nIf false, the user's access to Probely's apps and API is blocked.  \nDefaults to true.\n"
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UserLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the user."
          },
          "user_roles": {
            "type": "string",
            "readOnly": true,
            "description": "Roles of the user."
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of the last login of the user, in ISO 8601 UTC format. <br>For example, \"2023-08-09T13:27:43.8208302\""
          },
          "is_apiuser": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is an app that interacts with Probely through the API.  \nIf false, it is a human who interacts with Probely through our web interface.  \nDefaults to false.\"\n"
          },
          "intercom_user_id": {
            "type": "string",
            "description": "Identifier of the user in Intercom.\nRead-only.",
            "readOnly": true
          },
          "is_sso": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, Single Sign-on (SSO) is set in the account and it is how the user authenticates.  \nIf false, the user authenticates with username and password.  \nRead-only.\n"
          },
          "is_owner": {
            "type": "boolean",
            "description": "If true, the user is responsible for the account and the main point of contact.\nRead-only.",
            "readOnly": true
          },
          "mfa_enabled": {
            "type": "boolean"
          },
          "first_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time of user's first login"
          },
          "snyk_app_public_url": {
            "type": "string",
            "readOnly": true,
            "description": "URL of the Snyk application for the user's Snyk Customer."
          }
        },
        "required": [
          "changed",
          "changed_by",
          "email",
          "id",
          "intercom_user_id",
          "is_apiuser",
          "is_billing_admin",
          "is_owner",
          "is_sso",
          "last_login",
          "name",
          "snyk_app_public_url",
          "user_roles"
        ]
      },
      "ProfilePermissionsSchema": {
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLevelPermission"
            },
            "description": "List of account permissions"
          },
          "targets": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HighLevelPermission"
              }
            },
            "description": "Lists of permissions per target"
          },
          "teams": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HighLevelPermission"
              }
            },
            "description": "Lists of permissions per team"
          }
        }
      },
      "ProfileUserRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "user": {
            "$ref": "#/components/schemas/SimpleUser"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "scope": {
            "$ref": "#/components/schemas/DPOScopeSchema"
          }
        },
        "required": [
          "id",
          "role",
          "scope",
          "user"
        ]
      },
      "ReadOnlyAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "account": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "description": "Extra host of the target."
          },
          "desc": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "description": "\nTechnologies identified in the target during scans.  \nThe scanning engine uses them to fine-tune vulnerability tests and improve the explanation of how to fix vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "\nToken used to verify the domain\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "\nMethod used in the verification of the domain:\n(Read-only)\n\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "readOnly": true,
            "description": "\nCustom headers to send.\nRead-only.\n"
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "include": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the extra host is in the scope of the scan.  \nIf false, the extra host is not in the scope of the scan.  \nDefaults to true.\n"
          }
        },
        "required": [
          "account",
          "changed",
          "changed_by",
          "desc",
          "headers",
          "host",
          "id",
          "include",
          "name",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token"
        ]
      },
      "ReducedScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "url": {
            "type": "string",
            "description": "\nURL to scan.\nThe maximum length is 2048 characters.\n",
            "format": "uri",
            "maxLength": 2048
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "url"
        ]
      },
      "ReportFilters": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Filter findings by severity"
          },
          "state": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter findings by state"
          },
          "assignee": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter findings by assignee's user ID"
          },
          "label": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter findings by label ID"
          },
          "new": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, filter results by new findings.  \nIf false, filter results by old findings.\n"
          },
          "target_label": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter findings by target label ID"
          },
          "target": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter findings by target ID"
          },
          "team": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter findings by team ID"
          },
          "search": {
            "type": "string",
            "description": "Search findings",
            "maxLength": 1024
          },
          "assessment": {
            "type": "string",
            "description": "Filter findings by assessment ID"
          },
          "findings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter findings by IDs"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "description": "* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA",
            "x-spec-enum-id": "4b86a2e9dd6eee38"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "Format for the report to produce.\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          }
        }
      },
      "ReportRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "user": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "readOnly": true
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the report submission date, in ISO 8601 UTC format.  \nFor example, '2023-08-09T13:27.43.8208302'\n"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "\nDate and time when the report file was generated, in ISO 8601 UTC format.  \nFor example, '2023-08-09T13:27.43.8208302'\n"
          },
          "is_email_notification_enabled": {
            "type": "boolean",
            "description": "\nIf true, email notifications are enabled, and the report will be sent to the user via email.\nIf false, email notifications are disabled.\nDefaults to false.\n"
          },
          "filters": {
            "type": "string",
            "description": "A unique Base58 value identifying this object.",
            "readOnly": true
          },
          "ttl": {
            "type": "string",
            "readOnly": true,
            "description": "The time-to-live (TTL) for the report file, indicating how long it remains available."
          },
          "timezone": {
            "type": "string",
            "description": "Time zone name according to the IANA standard (e.g., 'America/New_York', 'Europe/London').",
            "maxLength": 64
          }
        },
        "required": [
          "filters",
          "generated_at",
          "id",
          "submitted_at",
          "ttl",
          "user"
        ]
      },
      "RequestResponsePairMarkdown": {
        "type": "object",
        "properties": {
          "request": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResumeOptions": {
        "type": "object",
        "properties": {
          "ignore_blackout_period": {
            "type": "boolean",
            "description": "\nIf true, the scan ignores the blackout period defined in the target settings.\n"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "Role's name.",
            "maxLength": 255
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLevelPermission"
            }
          },
          "custom": {
            "type": "boolean",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Short description."
          }
        },
        "required": [
          "custom",
          "id",
          "name"
        ]
      },
      "RunningAssessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "status": {
            "enum": [
              "canceled",
              "canceling",
              "completed",
              "completed_with_errors",
              "failed",
              "paused",
              "pausing",
              "queued",
              "resuming",
              "started",
              "under_review",
              "finishing_up"
            ],
            "type": "string",
            "x-spec-enum-id": "391b377c86087507",
            "readOnly": true,
            "description": "Status of the scan:\n\n* `canceled` - Canceled\n* `canceling` - Canceling\n* `completed` - Completed\n* `completed_with_errors` - Completed with errors - DEPRECATED\n* `failed` - Failed\n* `paused` - Paused\n* `pausing` - Pausing\n* `queued` - Queued\n* `resuming` - Resuming\n* `started` - Started\n* `under_review` - Under Review\n* `finishing_up` - Finishing up"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan started."
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan was completed."
          },
          "scan_profile": {
            "type": "string",
            "readOnly": true,
            "description": "\nIdentifier of the scan profile.\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with high severity."
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "crawler": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Crawler"
              }
            ],
            "description": "\nStatus of the crawler.\n"
          },
          "fingerprinter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FingerprinterSchema"
              }
            ],
            "description": "\nStatus of the fingerprinter.\n"
          },
          "scanner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Scanner"
              }
            ],
            "description": "\nStatus of the scanner.\n"
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "description": "\nTechnologies found in the scan.  \nThe scanning engine uses them to fine-tune vulnerability tests and texts about how to fix the vulnerabilities.\n"
          }
        },
        "required": [
          "completed",
          "created",
          "highs",
          "id",
          "lows",
          "mediums",
          "scan_profile",
          "started",
          "status"
        ]
      },
      "ScanIdSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ScanOptions": {
        "type": "object",
        "properties": {
          "ignore_blackout_period": {
            "type": "boolean",
            "description": "\nIf true, the scan ignores the blackout period defined in the target settings.\n"
          },
          "scan_profile": {
            "type": "string",
            "description": "\nScan profile to use.  \nUse the endpoint [List Scan Profiles](#tag/Scan-Profiles/operation/scan_profiles_list) to get all the available scan profiles.  \nIf no scan profile is specified, the scan profile will be the one specified in the target settings.\n"
          },
          "reduced_scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReducedScope"
            },
            "description": "Configuration to reduce the scope of the scan."
          }
        }
      },
      "ScanProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "\nIdentifier of the scan profile.  \nCustom scan profiles are always prefixed by \"sp-\".\n"
          },
          "name": {
            "type": "string",
            "description": "\nName of the scan profile.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the scan profile."
          },
          "archived": {
            "type": "boolean",
            "description": "\nIf true, the scan profile is no longer in use.  \nIf false, the scan profile can be used.\n"
          },
          "type": {
            "enum": [
              "web",
              "api"
            ],
            "type": "string",
            "x-spec-enum-id": "582a96eeca57f580",
            "description": "Target type:\n\n* `web` - Scan a Web application, including Single Page Applications (SPA) that rely on one or more APIs.\n* `api` - Scan a standalone API defined by an OpenAPI schema, or by a Postman Collection."
          },
          "speed": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "0a4ea7859b51ffa4",
            "description": "\nScan speed:  \n(Defaults to `20`)\n\n\n* `10` - Slow - Does roughly half the number of parallel requests of the Normal speed.\n* `20` - Normal - Offers a good balance between scan duration and the number of requests performed at the same time to the target.\n* `30` - Fast - Does roughly twice the number of parallel requests of the Normal speed.",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "payloads": {
            "enum": [
              10,
              20,
              30
            ],
            "type": "integer",
            "x-spec-enum-id": "8aeeb4b792381be8",
            "description": "\nScan payloads:  \n(Defaults to `20`)\n\n\n* `10` - Light - Uses slightly less payloads than Normal, reducing scan time while still detecting the most common situations.\n* `20` - Normal - Uses a set of payloads that maximizes detection without increasing the scan time excessively, delivering a good compromise.\n* `30` - Thorough - Includes a more extensive set of payloads to detect very uncommon situations. Scan time increases significantly.",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleVulnerabilityDefinition"
            },
            "description": "Vulnerabilities for the scanner to verify."
          },
          "methods": {
            "enum": [
              "all",
              "safe",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "4aacecc81fc3a5e8",
            "description": "\nScan methods:  \n(Defaults to `all`)\n\n\n* `all` - All methods - Allow any HTTP method to be used during the scan.\n* `safe` - Only safe methods - Ideal set for production targets, allowing only the following HTTP methods: GET, HEAD, OPTIONS, TRACE, and CONNECT."
          },
          "can_scan_unverified": {
            "type": "boolean",
            "readOnly": true,
            "description": "If true, the scan profile allows targets with unverified domains."
          },
          "delay": {
            "type": "integer",
            "maximum": 5000,
            "minimum": 0,
            "nullable": true,
            "description": "\nTime delay in milliseconds between requests for each scanning thread.  \nIt is an approximate value and is more accurate for slower scan speed settings.  \nIf not defined, there is no delay between requests.  \nThe maximum delay is 5000ms.  \n"
          },
          "max_run_time": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "nullable": true,
            "description": "\nThe maximum time the scan is allowed to run.  \nFor example, \"750s\", \"25m\", \"2h\", or \"1d\".  \nSuffix the value with \"s\" for seconds, \"m\" for minutes, \"h\" for hours, and \"d\" for days.  \nIf the units are not specified the value is considered to be in seconds.  \n"
          },
          "dedup_enabled": {
            "type": "boolean",
            "description": "\nIf true, the scan deduplicates pages with the same SimHash to scan only a few of them.  \nIf false, the scan does not deduplicate pages, which can increase the scan duration significantly.  \nDefaults to true.  \n"
          },
          "auto_patterns_enabled": {
            "type": "boolean",
            "description": "\nIf true, the scan detects URL patterns to identify similar pages to scan only a few of them.  \nIf false, the scan does not detect patterns, which can increase the scan duration significantly.\nDefaults to true.  \n"
          },
          "max_urls": {
            "type": "integer",
            "maximum": 50000,
            "minimum": 1,
            "description": "\nMaximum number of URLs the crawler can visit.  \nThe value must be between 1 and 50000.  \nDefaults to 5000, which is a good compromise between coverage and scan time.  \n"
          },
          "builtin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is a [built-in scan profile](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences), which cannot be changed.  \nIf false, it is a [custom scan profile](https://help.probely.com/en/articles/8524283-how-to-customize-a-scan-profile) and the id must start with \"sp-\".\n"
          }
        },
        "required": [
          "builtin",
          "can_scan_unverified",
          "id",
          "type",
          "vulnerabilities"
        ]
      },
      "ScanTargetOptions": {
        "type": "object",
        "properties": {
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetSerializerBase"
              }
            ],
            "description": "\nThe core settings of the target for the scan.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "has_assets": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the scan includes extra hosts from the target.  \nLearn more about [What are the extra hosts in scope for?](https://help.probely.com/en/articles/1975501-what-are-the-extra-hosts-in-scope-for).\n"
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgentSchema"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "has_assets",
          "scanning_agent"
        ]
      },
      "Scanner": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "\nState of the scanner execution.  \nFor example, \"started\" or \"ended\".            \n"
          },
          "status": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "\nList with two numbers where the first is the scanned URLs and the second is the total of URLs to scan.\n"
          },
          "warning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannerWarning"
            },
            "description": "\nList of warnings occurred during the scanner execution.\n"
          },
          "error": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "description": "\nList of errors occurred during the scanner execution, can be strings or objects.\n"
          },
          "full_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScannerFullStatus"
              }
            ],
            "nullable": true,
            "description": "\nDetailed information on the scanner execution.\n"
          }
        },
        "required": [
          "error",
          "state",
          "status",
          "warning"
        ]
      },
      "ScannerData": {
        "type": "object",
        "properties": {
          "done": {
            "type": "integer",
            "description": "\nNumber of URLs scanned.\n"
          },
          "total": {
            "type": "integer",
            "description": "\nTotal number of URLs to scan.\n"
          },
          "scannerState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScannerState"
              }
            ],
            "description": "\nDetails on the scanner state.\n"
          }
        },
        "required": [
          "done",
          "total"
        ]
      },
      "ScannerFullStatus": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "\nType of information.  \nWhen present, the value is \"feedback\".\n"
          },
          "iid": {
            "type": "string",
            "format": "uuid",
            "description": "\nInternal information.\n"
          },
          "aid": {
            "type": "string",
            "format": "uuid",
            "description": "\nInternal information.\n"
          },
          "ts": {
            "type": "number",
            "format": "double",
            "description": "\nTimestamp of the scanner execution.\n"
          },
          "subtype": {
            "type": "string",
            "description": "\nSub-type of the type of information.  \nThe value is \"status\".\n"
          },
          "stage": {
            "type": "string",
            "description": "\nStage of the scan.  \nThe value is \"scanner\".\n"
          },
          "module": {
            "type": "string",
            "description": "\nModule of the scanner that is executing.\n"
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScannerData"
              }
            ],
            "description": "\nFurther details on the scanner execution.\n"
          }
        },
        "required": [
          "aid",
          "data",
          "iid",
          "module",
          "stage",
          "subtype",
          "ts"
        ]
      },
      "ScannerState": {
        "type": "object",
        "properties": {
          "numberOfRequestBeingScanned": {
            "type": "integer",
            "description": "\nNumber of scanner requests executing.\n"
          },
          "currentAverageRtt": {
            "type": "number",
            "format": "double",
            "description": "\nCurrent average response time to scanner requests.\n"
          },
          "averageRtt": {
            "type": "number",
            "format": "double",
            "description": "\nOverall average response time to scanner requests.\n"
          },
          "nStatus3xx": {
            "type": "string",
            "description": "\nNumber of HTTP 3XX response status codes during the scanner execution.\n"
          },
          "nStatus4xx": {
            "type": "string",
            "description": "\nNumber of HTTP 4XX response status codes during the scanner execution.\n"
          },
          "nStatus5xx": {
            "type": "string",
            "description": "\nNumber of HTTP 5XX response status codes during the scanner execution.\n"
          },
          "nConnectionErrors": {
            "type": "string",
            "description": "\nNumber of connection errors during the scanner execution.\n"
          },
          "nTimeouts": {
            "type": "string",
            "description": "\nNumber of request timeouts during the scanner execution.\n"
          },
          "nRequests": {
            "type": "string",
            "description": "\nNumber of requests executed by the scanner.\n"
          },
          "sampleOfRequestBeingScanned": {
            "$ref": "#/components/schemas/ScannerStateSampleOfRequestBeingScanned"
          }
        },
        "required": [
          "averageRtt",
          "currentAverageRtt",
          "nConnectionErrors",
          "nRequests",
          "nStatus3xx",
          "nStatus4xx",
          "nStatus5xx",
          "nTimeouts"
        ]
      },
      "ScannerStateSampleOfRequestBeingScanned": {
        "type": "object",
        "description": "List of the current scanner requests.",
        "properties": {
          "httpMethod": {
            "type": "string",
            "description": "\nHTTP method of the scanner request.\n"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "\nURL of the scanner request.\n"
          }
        },
        "required": [
          "httpMethod",
          "url"
        ]
      },
      "ScannerWarning": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "\nWarning code.\n"
          },
          "message": {
            "type": "string",
            "description": "\nWarning message.\n"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "ScanningAgent": {
        "type": "object",
        "description": "Return serializer_class with all fields as read_only except key. The key is the field use to retrieve the object in `to_internal_value`.\n\nThis is for the drf-spectacular documentation generation.",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "maxLength": 255
          },
          "installer_generated": {
            "type": "boolean",
            "readOnly": true
          },
          "online": {
            "type": "boolean",
            "readOnly": true
          },
          "fallback": {
            "type": "boolean",
            "readOnly": true
          },
          "rx_bytes": {
            "type": "integer",
            "readOnly": true
          },
          "tx_bytes": {
            "type": "integer",
            "readOnly": true
          },
          "latest_handshake": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "fallback",
          "installer_generated",
          "latest_handshake",
          "name",
          "online",
          "rx_bytes",
          "tx_bytes"
        ]
      },
      "ScanningAgentSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "installer_generated": {
            "type": "boolean",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ],
              "nullable": true
            },
            "nullable": true
          },
          "online": {
            "type": "boolean",
            "readOnly": true
          },
          "fallback": {
            "type": "boolean",
            "readOnly": true
          },
          "rx_bytes": {
            "type": "integer",
            "readOnly": true
          },
          "tx_bytes": {
            "type": "integer",
            "readOnly": true
          },
          "latest_handshake": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "fallback",
          "id",
          "installer_generated",
          "latest_handshake",
          "name",
          "online",
          "rx_bytes",
          "tx_bytes"
        ]
      },
      "ScheduledScan": {
        "type": "object",
        "description": "Serializer for scheduled/recurrent scans",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleScope"
              }
            ],
            "readOnly": true
          },
          "date_time": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of next scan scheduled."
          },
          "recurrence": {
            "enum": [
              "h",
              "d",
              "w",
              "m",
              "q",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "dfedcfc0a8f9b3cc",
            "description": "Scheduled scan recurrence.\n\n* `h` - Hourly\n* `d` - Daily\n* `w` - Weekly\n* `m` - Monthly\n* `q` - Quarterly"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "readOnly": true,
            "description": "Time window during which scans are temporarily interrupted."
          },
          "timezone": {
            "type": "string",
            "description": "Timezone to use for scheduled scan timestamp.",
            "maxLength": 64
          },
          "run_on_day_of_week": {
            "type": "boolean",
            "description": "Schedule scan to run on specific monthly day of week (for monthly/quarterly recurrence)."
          },
          "scheduled_day_of_week": {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              null
            ],
            "type": "integer",
            "x-spec-enum-id": "51d3c97a46e1cea2",
            "nullable": true,
            "description": "Day of week to run scan on - monday to sunday (for run on day of week option).\n\n* `1` - Monday\n* `2` - Tuesday\n* `3` - Wednesday\n* `4` - Thursday\n* `5` - Friday\n* `6` - Saturday\n* `7` - Sunday",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "week_index": {
            "enum": [
              "first",
              "second",
              "third",
              "fourth",
              "last",
              "",
              null
            ],
            "type": "string",
            "x-spec-enum-id": "e0570dabd95f5da0",
            "nullable": true,
            "description": "Which week of the month to run scan on (with `run_on_day_of_week` enabled).\n\n* `first` - First\n* `second` - Second\n* `third` - Third\n* `fourth` - Fourth\n* `last` - Last"
          },
          "partial_scan": {
            "type": "boolean",
            "description": "Future scans set as partial scans, use in conjunction with `incremental` and `reduced_scope`."
          },
          "override_target_settings": {
            "type": "boolean",
            "description": "Override scan target's scan settings, use in conjunction with `override_target_settings`."
          },
          "incremental": {
            "type": "boolean",
            "description": "Future scans set to incremental, use in conjunction with `partial_scan` and `override_target_settings`."
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "Future scans set as reduced scope, use in conjunction with `partial_scan` and `override_target_settings`."
          },
          "scan_profile": {
            "type": "string",
            "nullable": true,
            "description": "\nScan profile to use.  \nUse the endpoint [List Scan Profiles](#tag/Scan-Profiles/operation/scan_profiles_list) to get all the available scan profiles.  \nIf no scan profile is specified, the scan profile will be the one specified in the target settings.\n"
          },
          "unlimited": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "blackout_period",
          "changed",
          "changed_by",
          "date_time",
          "id",
          "target",
          "unlimited"
        ]
      },
      "Scope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchedTarget"
              }
            ],
            "description": "\nCore settings of the target.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresoved vulnerability findings with high severity."
          },
          "risk": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "last_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Last scan done for the target."
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "next_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            ],
            "readOnly": true,
            "description": "Next scheduled scan for the target."
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadOnlyAsset"
            },
            "readOnly": true
          },
          "scan_profile": {
            "type": "string",
            "description": "\nIdentifier of the scan profile.\n"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "unlimited": {
            "type": "boolean",
            "description": "\nIf true, the target has unlimited scans.  \nIf false, the target scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "x-spec-enum-id": "4b86a2e9dd6eee38",
            "description": "\nType of [scan report](https://help.probely.com/en/articles/2659844-types-of-compliance-reports-you-can-generate-with-probely) produced for the target:  \n(Defaults to `default`)\n\n\n* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "allowed_scan_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleScanProfile"
            },
            "readOnly": true,
            "description": "[Scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) allowed for the target.",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the target."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true,
            "description": "\nScanning agent of the target.\nLearn more on [how to scan internal applications with a scanning agent](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "include_deduplicated_endpoints": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, scans include deduplicated endpoints.  \nIf false or null, scans exclude deduplicated endpoints.  \nA deduplicated endpoint has the same simhash as another scanned endpoint.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleTeam"
            }
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "description": "Time window during which scans are temporarily interrupted."
          },
          "fail_fast": {
            "type": "boolean",
            "description": "\nIf true, scans fail on recoverable errors.  \nIf false, scans continue on recoverable errors.  \nDefaults to true. \n"
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "incremental": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can have reduced scope to narrow the coverage to defined URLs.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_incremental": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can have reduced scope to narrow the coverage to defined URLs.     \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can only crawl navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can only crawl navigation sequences to narrow the coverage.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          }
        },
        "required": [
          "allowed_scan_profiles",
          "assets",
          "changed",
          "changed_by",
          "highs",
          "id",
          "last_scan",
          "login_video",
          "lows",
          "mediums",
          "next_scan",
          "risk",
          "running_scan",
          "site"
        ]
      },
      "ScopeAutoSetting": {
        "type": "object",
        "properties": {
          "scope_type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "url": {
            "type": "string",
            "description": "URL of the target.",
            "maxLength": 2048
          },
          "target_data": {
            "nullable": true
          },
          "api_scan_settings": {
            "nullable": true
          },
          "login_sequence": {
            "nullable": true
          }
        },
        "required": [
          "url"
        ]
      },
      "ScopeBaseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchedTarget"
              }
            ],
            "description": "\nCore settings of the target.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresoved vulnerability findings with high severity."
          },
          "risk": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "last_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Last scan done for the target."
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "next_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            ],
            "readOnly": true,
            "description": "Next scheduled scan for the target."
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadOnlyAsset"
            },
            "readOnly": true
          },
          "scan_profile": {
            "type": "string",
            "description": "\nIdentifier of the scan profile.\n"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "unlimited": {
            "type": "boolean",
            "description": "\nIf true, the target has unlimited scans.  \nIf false, the target scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "x-spec-enum-id": "4b86a2e9dd6eee38",
            "description": "\nType of [scan report](https://help.probely.com/en/articles/2659844-types-of-compliance-reports-you-can-generate-with-probely) produced for the target:  \n(Defaults to `default`)\n\n\n* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "allowed_scan_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleScanProfile"
            },
            "readOnly": true,
            "description": "[Scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) allowed for the target.",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the target."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true,
            "description": "\nScanning agent of the target.\nLearn more on [how to scan internal applications with a scanning agent](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "include_deduplicated_endpoints": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, scans include deduplicated endpoints.  \nIf false or null, scans exclude deduplicated endpoints.  \nA deduplicated endpoint has the same simhash as another scanned endpoint.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleTeam"
            }
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "description": "Time window during which scans are temporarily interrupted."
          },
          "fail_fast": {
            "type": "boolean",
            "description": "\nIf true, scans fail on recoverable errors.  \nIf false, scans continue on recoverable errors.  \nDefaults to true. \n"
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "incremental": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can have reduced scope to narrow the coverage to defined URLs.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_incremental": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can have reduced scope to narrow the coverage to defined URLs.     \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can only crawl navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can only crawl navigation sequences to narrow the coverage.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          }
        },
        "required": [
          "allowed_scan_profiles",
          "assets",
          "changed",
          "changed_by",
          "highs",
          "id",
          "last_scan",
          "login_video",
          "lows",
          "mediums",
          "next_scan",
          "risk",
          "running_scan",
          "site"
        ]
      },
      "ScopeBulkUpdateRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of object IDs."
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchedTarget"
              }
            ],
            "description": "\nCore settings of the target.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresoved vulnerability findings with high severity."
          },
          "risk": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "last_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Last scan done for the target."
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "next_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            ],
            "readOnly": true,
            "description": "Next scheduled scan for the target."
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadOnlyAsset"
            },
            "readOnly": true
          },
          "scan_profile": {
            "type": "string",
            "description": "\nIdentifier of the scan profile.\n"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "unlimited": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the target has unlimited scans.  \nIf false, the target scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "x-spec-enum-id": "4b86a2e9dd6eee38",
            "description": "\nType of [scan report](https://help.probely.com/en/articles/2659844-types-of-compliance-reports-you-can-generate-with-probely) produced for the target:  \n(Defaults to `default`)\n\n\n* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "allowed_scan_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleScanProfile"
            },
            "readOnly": true,
            "description": "[Scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) allowed for the target.",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the target."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true,
            "description": "\nScanning agent of the target.\nLearn more on [how to scan internal applications with a scanning agent](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "include_deduplicated_endpoints": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, scans include deduplicated endpoints.  \nIf false or null, scans exclude deduplicated endpoints.  \nA deduplicated endpoint has the same simhash as another scanned endpoint.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ]
            },
            "readOnly": true
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "description": "Time window during which scans are temporarily interrupted."
          },
          "fail_fast": {
            "type": "boolean",
            "description": "\nIf true, scans fail on recoverable errors.  \nIf false, scans continue on recoverable errors.  \nDefaults to true. \n"
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "incremental": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can have reduced scope to narrow the coverage to defined URLs.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_incremental": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can have reduced scope to narrow the coverage to defined URLs.     \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can only crawl navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can only crawl navigation sequences to narrow the coverage.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          }
        },
        "required": [
          "allowed_scan_profiles",
          "assets",
          "changed",
          "changed_by",
          "highs",
          "id",
          "ids",
          "last_scan",
          "login_video",
          "lows",
          "mediums",
          "next_scan",
          "risk",
          "running_scan",
          "site",
          "teams",
          "unlimited"
        ]
      },
      "ScopeLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the label.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "description": "\nColor of the label, in RGB hexadecimal format prefixed with \"#\".  \nFor example, \"#00FF00\" for green.\n",
            "pattern": "^[a-zA-Z0-9#_-]*$"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "id",
          "name"
        ]
      },
      "ScopeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchedTarget"
              }
            ],
            "description": "\nCore settings of the target.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresoved vulnerability findings with high severity."
          },
          "risk": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "last_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Last scan done for the target."
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "next_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            ],
            "readOnly": true,
            "description": "Next scheduled scan for the target."
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadOnlyAsset"
            },
            "readOnly": true
          },
          "scan_profile": {
            "type": "string",
            "description": "\nIdentifier of the scan profile.\n"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "unlimited": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the target has unlimited scans.  \nIf false, the target scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "x-spec-enum-id": "4b86a2e9dd6eee38",
            "description": "\nType of [scan report](https://help.probely.com/en/articles/2659844-types-of-compliance-reports-you-can-generate-with-probely) produced for the target:  \n(Defaults to `default`)\n\n\n* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "allowed_scan_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleScanProfile"
            },
            "readOnly": true,
            "description": "[Scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) allowed for the target.",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLabel"
                }
              ],
              "nullable": true
            },
            "description": "Labels of the target."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true,
            "description": "\nScanning agent of the target.\nLearn more on [how to scan internal applications with a scanning agent](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "include_deduplicated_endpoints": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, scans include deduplicated endpoints.  \nIf false or null, scans exclude deduplicated endpoints.  \nA deduplicated endpoint has the same simhash as another scanned endpoint.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ]
            },
            "readOnly": true
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "description": "Time window during which scans are temporarily interrupted."
          },
          "fail_fast": {
            "type": "boolean",
            "description": "\nIf true, scans fail on recoverable errors.  \nIf false, scans continue on recoverable errors.  \nDefaults to true. \n"
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "incremental": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can have reduced scope to narrow the coverage to defined URLs.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_incremental": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can have reduced scope to narrow the coverage to defined URLs.     \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can only crawl navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can only crawl navigation sequences to narrow the coverage.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          }
        },
        "required": [
          "allowed_scan_profiles",
          "assets",
          "changed",
          "changed_by",
          "highs",
          "id",
          "last_scan",
          "login_video",
          "lows",
          "mediums",
          "next_scan",
          "risk",
          "running_scan",
          "site",
          "teams",
          "unlimited"
        ]
      },
      "ScopeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "$ref": "#/components/schemas/Target"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresolved vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of unresoved vulnerability findings with high severity."
          },
          "risk": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "last_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAssessment"
              }
            ],
            "readOnly": true,
            "description": "Last scan done for the target."
          },
          "running_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunningAssessment"
              }
            ],
            "readOnly": true,
            "description": "Current scan running for the target."
          },
          "next_scan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledScan"
              }
            ],
            "readOnly": true,
            "description": "Next scheduled scan for the target."
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadOnlyAsset"
            },
            "readOnly": true
          },
          "scan_profile": {
            "$ref": "#/components/schemas/SimpleScanProfile"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "unlimited": {
            "type": "boolean",
            "description": "\nIf true, the target has unlimited scans.  \nIf false, the target scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).\n"
          },
          "report_type": {
            "enum": [
              "default",
              "executive_summary",
              "owasp",
              "pci",
              "pci4",
              "iso27001",
              "hipaa"
            ],
            "type": "string",
            "x-spec-enum-id": "4b86a2e9dd6eee38",
            "description": "\nType of [scan report](https://help.probely.com/en/articles/2659844-types-of-compliance-reports-you-can-generate-with-probely) produced for the target:  \n(Defaults to `default`)\n\n\n* `default` - Standard\n* `executive_summary` - Executive Summary\n* `owasp` - OWASP Top 10\n* `pci` - PCI v3.2.1\n* `pci4` - PCI v4.0.1\n* `iso27001` - ISO 27001\n* `hipaa` - HIPAA"
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "allowed_scan_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleScanProfile"
            },
            "readOnly": true,
            "description": "[Scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) allowed for the target.",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeLabel"
            }
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true,
            "description": "\nScanning agent of the target.\nLearn more on [how to scan internal applications with a scanning agent](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "include_deduplicated_endpoints": {
            "type": "boolean",
            "nullable": true,
            "description": "\nIf true, scans include deduplicated endpoints.  \nIf false or null, scans exclude deduplicated endpoints.  \nA deduplicated endpoint has the same simhash as another scanned endpoint.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleTeam"
            }
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "description": "Time window during which scans are temporarily interrupted."
          },
          "fail_fast": {
            "type": "boolean",
            "description": "\nIf true, scans fail on recoverable errors.  \nIf false, scans continue on recoverable errors.  \nDefaults to true. \n"
          },
          "login_video": {
            "type": "string",
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "incremental": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can have reduced scope to narrow the coverage to defined URLs.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_incremental": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can be incremental to narrow the coverage to new and updated URLs.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_reduced_scope": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can have reduced scope to narrow the coverage to defined URLs.     \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, on-demand scans can only crawl navigation sequences to narrow the coverage.  \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          },
          "schedule_crawl_sequences_only": {
            "type": "boolean",
            "description": "\nIf true, scheduled scans can only crawl navigation sequences to narrow the coverage.    \nLearn more about [partial scans](https://help.probely.com/en/articles/5721020-what-are-partial-scans-and-why-are-they-relevant).  \nDefaults to false.\n"
          }
        },
        "required": [
          "allowed_scan_profiles",
          "assets",
          "changed",
          "changed_by",
          "highs",
          "id",
          "labels",
          "last_scan",
          "login_video",
          "lows",
          "mediums",
          "next_scan",
          "risk",
          "running_scan",
          "scan_profile",
          "site"
        ]
      },
      "SendOTPSchema": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string"
          }
        },
        "required": [
          "otp"
        ]
      },
      "Sequences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "requires_authentication": {
            "type": "boolean"
          },
          "type": {
            "enum": [
              "login",
              "navigation"
            ],
            "type": "string",
            "description": "* `login` - Login\n* `navigation` - Navigation",
            "x-spec-enum-id": "fab4d916e03c4321"
          },
          "enabled": {
            "type": "boolean"
          },
          "index": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "id",
          "index",
          "name"
        ]
      },
      "SimpleAssessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "status": {
            "enum": [
              "canceled",
              "canceling",
              "completed",
              "completed_with_errors",
              "failed",
              "paused",
              "pausing",
              "queued",
              "resuming",
              "started",
              "under_review",
              "finishing_up"
            ],
            "type": "string",
            "x-spec-enum-id": "391b377c86087507",
            "readOnly": true,
            "description": "Status of the scan:\n\n* `canceled` - Canceled\n* `canceling` - Canceling\n* `completed` - Completed\n* `completed_with_errors` - Completed with errors - DEPRECATED\n* `failed` - Failed\n* `paused` - Paused\n* `pausing` - Pausing\n* `queued` - Queued\n* `resuming` - Resuming\n* `started` - Started\n* `under_review` - Under Review\n* `finishing_up` - Finishing up"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan started."
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of when the scan was completed."
          },
          "scan_profile": {
            "type": "string",
            "readOnly": true,
            "description": "\nIdentifier of the scan profile.\n"
          },
          "lows": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with low severity."
          },
          "mediums": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with medium severity."
          },
          "highs": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "description": "Number of vulnerability findings with high severity."
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "completed",
          "created",
          "highs",
          "id",
          "lows",
          "mediums",
          "scan_profile",
          "started",
          "status"
        ]
      },
      "SimpleRole": {
        "type": "object",
        "description": "Return serializer_class with all fields as read_only except key. The key is the field use to retrieve the object in `to_internal_value`.\n\nThis is for the drf-spectacular documentation generation.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Role's name.",
            "maxLength": 255
          }
        },
        "required": [
          "name"
        ]
      },
      "SimpleScanProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "\nName of the scan profile.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the scan profile."
          },
          "builtin": {
            "type": "string",
            "readOnly": true,
            "description": "\nIf true, it is a [built-in scan profile](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences), which cannot be changed.  \nIf false, it is a [custom scan profile](https://help.probely.com/en/articles/8524283-how-to-customize-a-scan-profile) and the name must start with \"sp-\".\n"
          }
        },
        "required": [
          "builtin",
          "id"
        ]
      },
      "SimpleScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "\nName of the target.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255,
            "deprecated": true
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Target"
              }
            ],
            "description": "\nCore settings of the target.  \nIncludes basic target information (like the name, description, and URL) and scanning information (like the authentication and navigation sequences).\n"
          },
          "type": {
            "type": "string",
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.  \nDefaults to \"\".\n",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeLabel"
            }
          },
          "has_assets": {
            "type": "boolean",
            "readOnly": true
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ],
              "nullable": true
            },
            "readOnly": true
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "readOnly": true,
            "description": "Time window during which scans are temporarily interrupted."
          }
        },
        "required": [
          "blackout_period",
          "has_assets",
          "id",
          "teams"
        ]
      },
      "SimpleTarget": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "url": {
            "type": "string",
            "description": "URL of the target.",
            "maxLength": 2048
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          }
        },
        "required": [
          "changed",
          "changed_by",
          "id"
        ]
      },
      "SimpleTeam": {
        "type": "object",
        "description": "Return serializer_class with all fields as read_only except key. The key is the field use to retrieve the object in `to_internal_value`.\n\nThis is for the drf-spectacular documentation generation.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "SimpleUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "description": "Email of the user.",
            "maxLength": 254
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "SimpleUserRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "role": {
            "$ref": "#/components/schemas/SimpleRole"
          },
          "scope": {
            "$ref": "#/components/schemas/DPOScopeSchema"
          }
        },
        "required": [
          "id",
          "role",
          "scope"
        ]
      },
      "SimpleUserRoleRequest": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "scope": {
            "$ref": "#/components/schemas/DPOScopeRequest"
          }
        },
        "required": [
          "role",
          "scope"
        ]
      },
      "SimpleUserRoleResponse": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ObjectIdName"
          },
          "scope": {
            "$ref": "#/components/schemas/DPOScopeResponse"
          }
        },
        "required": [
          "role",
          "scope"
        ]
      },
      "SimpleVulnerabilityDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "\nName of the vulnerability.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "Description of the vulnerability."
          }
        },
        "required": [
          "id"
        ]
      },
      "SlackScope": {
        "type": "object",
        "properties": {
          "webhook_url": {
            "type": "string",
            "pattern": "^https://hooks.slack.com/services/(?:.*)$"
          },
          "notify_scan_started": {
            "type": "boolean"
          },
          "notify_scan_completed": {
            "type": "boolean"
          },
          "notify_high_findings": {
            "type": "boolean"
          },
          "notify_medium_findings": {
            "type": "boolean"
          },
          "notify_low_findings": {
            "type": "boolean"
          },
          "notify_finding_fixed": {
            "type": "boolean"
          },
          "notify_login_failed": {
            "type": "boolean",
            "default": false
          },
          "notify_retest_completed": {
            "type": "boolean"
          }
        }
      },
      "Source": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "\nIdentifier of the source.\n",
            "maxLength": 255
          },
          "name": {
            "type": "string",
            "description": "\nName of the source.  \nThe maximum length is 256 characters.\n",
            "maxLength": 256
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "StoredReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "Name of the report.",
            "maxLength": 255
          },
          "date_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "\nDate and time when the next report will be generated, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "recurrence": {
            "enum": [
              "h",
              "d",
              "w",
              "m",
              "q",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "dfedcfc0a8f9b3cc",
            "description": "\nRecurrence of the report generation:  \n(if `\"\"` it's a one-time report)\n\n\n* `h` - Hourly\n* `d` - Daily\n* `w` - Weekly\n* `m` - Monthly\n* `q` - Quarterly"
          },
          "timezone": {
            "type": "string",
            "description": "\nTwo-letter country code for the time zone of the `date_time`, as an ISO 3166-1 alpha-2 code.\n",
            "maxLength": 64
          },
          "on_day_of_week": {
            "type": "boolean",
            "description": "\nIf true, the report is scheduled to be generated on a specific week.  \nIf false, the report is generated on the day set in `date_time`.  \nThis is only applicable if the `recurrence` is monthly or quarterly.  \nDefaults to false.\n"
          },
          "scheduled_day_of_week": {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              null
            ],
            "type": "integer",
            "x-spec-enum-id": "51d3c97a46e1cea2",
            "nullable": true,
            "description": "\nThe day of the week on which the report is generated:  \n(This is only applicable if `on_day_of_week` is true)\n\n\n* `1` - Monday\n* `2` - Tuesday\n* `3` - Wednesday\n* `4` - Thursday\n* `5` - Friday\n* `6` - Saturday\n* `7` - Sunday",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "week_index": {
            "enum": [
              "first",
              "second",
              "third",
              "fourth",
              "last",
              "",
              null
            ],
            "type": "string",
            "x-spec-enum-id": "e0570dabd95f5da0",
            "nullable": true,
            "description": "\nThe week of the month in which the report is generated:  \n(This is only applicable if `on_day_of_week` is true)\n\n\n* `first` - First\n* `second` - Second\n* `third` - Third\n* `fourth` - Fourth\n* `last` - Last"
          },
          "filters": {
            "$ref": "#/components/schemas/ReportFilters"
          },
          "report_type": {
            "type": "string",
            "default": "default"
          },
          "report_fileformat": {
            "type": "string",
            "default": "pdf"
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the report is generated.  \nDefaults to true.\n"
          }
        },
        "required": [
          "enabled",
          "filters",
          "id",
          "name"
        ]
      },
      "Target": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "url": {
            "type": "string",
            "description": "URL of the target.",
            "format": "uri"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "description": "Hostname of the target."
          },
          "has_form_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a login form.  \nRead more about [how to set up target authentication (login form)](https://help.probely.com/en/articles/3292779-how-to-set-up-target-authentication-login-form).  \nDefaults to false.\n"
          },
          "form_login_url": {
            "type": "string",
            "description": "URL of the login form of the target.",
            "format": "uri"
          },
          "form_login_check_pattern": {
            "type": "string",
            "description": "\nPattern to check a successful login.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "form_login": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            },
            "description": "Field and value pairs to fill the login form."
          },
          "logout_detection_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, detects any undesired logouts that may occur during scans to log back in.  \nRequires `check_session_url` and `logout_detectors` to be defined.  \nDefaults to false.\n"
          },
          "has_sequence_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a recorded login sequence.  \nRead more about [how to set up target authentication (login sequence)](https://help.probely.com/en/articles/5402869-how-to-record-a-sequence-with-probely-s-sequence-recorder-plugin).  \nDefaults to false.  \n"
          },
          "has_basic_auth": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through username and password credentials.  \nDefaults to false.\n"
          },
          "basic_auth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicAuth"
              }
            ],
            "description": "Username and password credentials for the basic auth."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "whitelist": {
            "description": "\nAdditional paths to crawl and scan.\nFor example, \"archive/search?query=probely\".\nOnly relative paths are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "blacklist": {
            "description": "\nURLs to avoid scanning.\nFor example, \"https://example.com/pic-delete.php*\" or \"*.archive.example.com\".\nURLs need to be absolute and wildcards (`*`) are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "auth_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target has authentication.  \nDefaults to false.\n"
          },
          "logout_condition": {
            "enum": [
              "any",
              "all"
            ],
            "type": "string",
            "x-spec-enum-id": "3ecbcf8a1a1bb9a4",
            "description": "Type of combination of the logout conditions:\n\n* `any` - Is logged out if any condition is verified.\n* `all` - Is logged out only if all condition are verified."
          },
          "check_session_url": {
            "type": "string",
            "description": "URL to check session."
          },
          "has_otp": {
            "type": "boolean",
            "description": "\nIf true, the target has two-factor authentication (2FA).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).  \nDefaults to false.  \n"
          },
          "otp_secret": {
            "type": "string",
            "description": "\nThe seed/secret obtained when the QR code is displayed to be scanned by the third-party authenticator (TPA) app installed on the phone (e.g., Google Authenticator, 1Password, Authy, Microsoft Authenticator, etc.).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).\n"
          },
          "otp_algorithm": {
            "enum": [
              "SHA1",
              "SHA256",
              "SHA512"
            ],
            "type": "string",
            "x-spec-enum-id": "f070a44720b314e8",
            "default": "SHA1",
            "description": "\nSecure hash algorithm (SHA) to generate the one-time password (OTP):  \n(Defaults to `SHA1`)\n\n\n* `SHA1` - Sha1\n* `SHA256` - Sha256\n* `SHA512` - Sha512"
          },
          "otp_digits": {
            "enum": [
              6,
              7,
              8
            ],
            "type": "integer",
            "x-spec-enum-id": "50e5a8b8120242e7",
            "default": 6,
            "description": "\nNumber of digits of the one-time password (OTP):  \n(Defaults to `6`)\n\n\n* `6` - Six\n* `7` - Seven\n* `8` - Eight",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "otp_field": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to enter the one-time password (OTP).  \nFor example, a text input field.\nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_submit": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to submit the one-time password (OTP).\nFor example, a button.  \nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_login_sequence_totp_value": {
            "type": "string",
            "description": "\nOne-time password (OTP) obtained at the time when the login sequence was recorded, i.e., the time-based one-time password (TOTP).  \nDefaults to \"\".\n",
            "maxLength": 8,
            "minLength": 6
          },
          "otp_type": {
            "type": "string"
          },
          "otp_url": {
            "type": "string",
            "readOnly": true
          },
          "stack": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework"
                }
              ],
              "nullable": true
            },
            "description": "\nTechnologies identified in the target during scans.  \nThe scanning engine uses them to fine-tune vulnerability tests and improve the explanation of how to fix vulnerabilities.\n"
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the domain is verified.\nRead-only.\n"
          },
          "verification_token": {
            "type": "string",
            "readOnly": true,
            "description": "\nToken used to verify the domain.\nRead-only.\n"
          },
          "verification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the verification of the domain, in ISO 8601 UTC format.\nFor example, \"2023-08-09T13:27:43.8208302\".\nRead-only.\n"
          },
          "verification_method": {
            "enum": [
              "file",
              "back_office",
              "existing_domain",
              "dns_txt",
              "dns",
              "dns_cname",
              "meta_tag",
              "whitelist",
              "email",
              "aws_route53",
              "cloudflare",
              "waved"
            ],
            "type": "string",
            "x-spec-enum-id": "2034a2d3aad3e14d",
            "readOnly": true,
            "description": "Method used in the domain verification:\n\n* `file` - \nVerifies the domain against a text file in the root directory of the website. Learn more in [this article](https://help.probely.com/en/articles/3289281-how-to-verify-the-ownership-of-a-target-using-a-txt-file).\n\n* `back_office` - \nAutomatically set if manually verified in the back-office. Read-only.\n\n* `existing_domain` - \nAutomatically set if the upper-level domain is verified. For example, \"my.example.com\" is automatically verified if \"example.com\" is verified. Read-only.\n\n* `dns_txt` - \nVerifies the domain against a TXT record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/3285635-how-to-verify-the-ownership-of-a-target-using-dns-txt-records).\n\n* `dns` - \nSame as `dns_txt`.\n\n* `dns_cname` - \nVerifies the domain against a CNAME record in the Domain Name System (DNS). Learn more in [this article](https://help.probely.com/en/articles/5642359-how-to-verify-the-ownership-of-a-target-using-dns-cname-records).\n\n* `meta_tag` - \nVerifies the domain against a meta tag in the index page of the website. Learn more in [this article](https://help.probely.com/en/articles/5642393-how-to-verify-the-ownership-of-a-target-using-a-meta-tag).\n\n* `whitelist` - \nAutomatically verifies if the domain is in the whitelist\n\n* `email` - \nAutomatically verifies a domain if the user's email is in the same domain as the target\n\n* `aws_route53` - \nAutomatically verifies a domain if the hostname exists as an AWS Route53 Zone.\n\n* `cloudflare` - \nAutomatically verifies a domain if the host name exists and is verified as a CloudflareZone.\n\n* `waved` - \nAutomatically verifies a domain if there is a waver agreement.\n"
          },
          "verification_last_error": {
            "type": "string",
            "readOnly": true,
            "description": "\nError of the last verification of the domain.\nRead-only.\n"
          },
          "api_scan_settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/APIScanSettings"
              }
            ],
            "description": "Scanning settings if the target is an API."
          }
        },
        "required": [
          "api_scan_settings",
          "changed",
          "changed_by",
          "host",
          "id",
          "otp_url",
          "url",
          "verification_date",
          "verification_last_error",
          "verification_method",
          "verification_token",
          "verified"
        ]
      },
      "TargetSerializerBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "\nDescription of the target.\n"
          },
          "url": {
            "type": "string",
            "description": "URL of the target.",
            "format": "uri"
          },
          "host": {
            "type": "string",
            "readOnly": true,
            "description": "Hostname of the target."
          },
          "has_form_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a login form.  \nRead more about [how to set up target authentication (login form)](https://help.probely.com/en/articles/3292779-how-to-set-up-target-authentication-login-form).  \nDefaults to false.\n"
          },
          "form_login_url": {
            "type": "string",
            "description": "URL of the login form of the target.",
            "format": "uri"
          },
          "form_login_check_pattern": {
            "type": "string",
            "description": "\nPattern to check a successful login.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "form_login": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            },
            "description": "Field and value pairs to fill the login form."
          },
          "logout_detection_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, detects any undesired logouts that may occur during scans to log back in.  \nRequires `check_session_url` and `logout_detectors` to be defined.  \nDefaults to false.\n"
          },
          "has_sequence_login": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through a recorded login sequence.  \nRead more about [how to set up target authentication (login sequence)](https://help.probely.com/en/articles/5402869-how-to-record-a-sequence-with-probely-s-sequence-recorder-plugin).  \nDefaults to false.  \n"
          },
          "has_basic_auth": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target authentication is done through username and password credentials.  \nDefaults to false.\n"
          },
          "basic_auth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicAuth"
              }
            ],
            "description": "Username and password credentials for the basic auth."
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom headers to send."
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookieHeader"
            },
            "description": "Custom cookies to send."
          },
          "whitelist": {
            "description": "\nAdditional paths to crawl and scan.\nFor example, \"archive/search?query=probely\".\nOnly relative paths are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "blacklist": {
            "description": "\nURLs to avoid scanning.\nFor example, \"https://example.com/pic-delete.php*\" or \"*.archive.example.com\".\nURLs need to be absolute and wildcards (`*`) are allowed.\nThe blacklist takes precedence over the whitelist.\n"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "auth_enabled": {
            "type": "boolean",
            "default": false,
            "description": "\nIf true, the target has authentication.  \nDefaults to false.\n"
          },
          "logout_condition": {
            "enum": [
              "any",
              "all"
            ],
            "type": "string",
            "x-spec-enum-id": "3ecbcf8a1a1bb9a4",
            "description": "Type of combination of the logout conditions:\n\n* `any` - Is logged out if any condition is verified.\n* `all` - Is logged out only if all condition are verified."
          },
          "check_session_url": {
            "type": "string",
            "description": "URL to check session."
          },
          "has_otp": {
            "type": "boolean",
            "description": "\nIf true, the target has two-factor authentication (2FA).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).  \nDefaults to false.  \n"
          },
          "otp_secret": {
            "type": "string",
            "description": "\nThe seed/secret obtained when the QR code is displayed to be scanned by the third-party authenticator (TPA) app installed on the phone (e.g., Google Authenticator, 1Password, Authy, Microsoft Authenticator, etc.).  \nRead more about [how to set up target two-factor authentication (2FA)](https://help.probely.com/en/articles/8480675-how-to-set-up-target-two-factor-authentication-2fa).\n"
          },
          "otp_algorithm": {
            "enum": [
              "SHA1",
              "SHA256",
              "SHA512"
            ],
            "type": "string",
            "x-spec-enum-id": "f070a44720b314e8",
            "default": "SHA1",
            "description": "\nSecure hash algorithm (SHA) to generate the one-time password (OTP):  \n(Defaults to `SHA1`)\n\n\n* `SHA1` - Sha1\n* `SHA256` - Sha256\n* `SHA512` - Sha512"
          },
          "otp_digits": {
            "enum": [
              6,
              7,
              8
            ],
            "type": "integer",
            "x-spec-enum-id": "50e5a8b8120242e7",
            "default": 6,
            "description": "\nNumber of digits of the one-time password (OTP):  \n(Defaults to `6`)\n\n\n* `6` - Six\n* `7` - Seven\n* `8` - Eight",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "otp_field": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to enter the one-time password (OTP).  \nFor example, a text input field.\nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_submit": {
            "type": "string",
            "description": "\nCSS selector of the HTML element in the page to submit the one-time password (OTP).\nFor example, a button.  \nRead more about [how to obtain a CSS selector](https://help.probely.com/en/articles/8480719-how-to-obtain-a-css-selector).  \nDefaults to \"\".  \n"
          },
          "otp_login_sequence_totp_value": {
            "type": "string",
            "description": "\nOne-time password (OTP) obtained at the time when the login sequence was recorded, i.e., the time-based one-time password (TOTP).  \nDefaults to \"\".\n",
            "maxLength": 8,
            "minLength": 6
          },
          "otp_type": {
            "type": "string"
          },
          "otp_url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "changed",
          "changed_by",
          "host",
          "id",
          "otp_url",
          "url"
        ]
      },
      "Tax": {
        "type": "object",
        "properties": {
          "tax_name": {
            "type": "string"
          },
          "tax_rate": {
            "type": "number",
            "format": "double"
          },
          "tax_amount": {
            "type": "integer"
          }
        },
        "required": [
          "tax_amount",
          "tax_name",
          "tax_rate"
        ]
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the team.  \nMaximum length is 255 characters. \n",
            "maxLength": 255
          },
          "num_api_keys": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of API Keys added to the team."
          },
          "num_users": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of users in the team."
          },
          "num_targets": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of targets added to the team."
          },
          "quota": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "nullable": true,
            "description": "Number of targets the team can create."
          },
          "reserve": {
            "type": "boolean",
            "description": "\nIf true, the account has target slots reserved for the team to ensure the fulfillment of the team's quota.  \nDefaults to false.\n"
          },
          "targets": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/VerySimpleScope"
                }
              ]
            },
            "description": "Targets of the team."
          },
          "scanning_agents": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScanningAgent"
                }
              ]
            },
            "description": "\nScanning agents of the team.  \nLearn more about [How to scan internal applications with a Scanning Agent?](https://help.probely.com/en/articles/4615595-how-to-scan-internal-applications-with-a-scanning-agent).\n"
          },
          "num_available_targets": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of available targets."
          }
        },
        "required": [
          "id",
          "name",
          "num_api_keys",
          "num_available_targets",
          "num_targets",
          "num_users"
        ]
      },
      "UniqueFinding": {
        "type": "object",
        "properties": {
          "target_id": {
            "type": "string",
            "description": "Identifier of the target, as a unique Base58 value.",
            "maxLength": 12,
            "minLength": 12
          },
          "finding_id": {
            "type": "integer",
            "minimum": 1,
            "description": "Identifier of the finding, as a unique Base58 value."
          }
        },
        "required": [
          "finding_id",
          "target_id"
        ]
      },
      "UnlimitedScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleTarget"
              }
            ],
            "readOnly": true,
            "description": "\nCore settings of the target.  \nIncludes basic target information like the name and URL.\n"
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ],
              "nullable": true
            },
            "readOnly": true
          },
          "unlimited": {
            "type": "boolean",
            "description": "\nIf true, the target has unlimited scans.  \nIf false, scans consume credits.  \nLearn more about [unlimited scans vs scans with credits](https://help.probely.com/en/articles/6845523-unlimited-scans-vs-scans-with-credits).  \nDefaults to true.\n"
          }
        },
        "required": [
          "id",
          "site",
          "teams"
        ]
      },
      "UserBulkUpdateRequest": {
        "type": "object",
        "description": "Remove field user_roles if the request users doesn't have\nuser_management high level permission",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of object IDs."
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": "Email of the user."
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          },
          "title": {
            "enum": [
              "ceo",
              "cto",
              "cso",
              "seceng",
              "dev",
              "devop",
              "manager",
              "other",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "9b7b3ace78860881",
            "description": "Job title:\n\n* `ceo` - Chief Executive Officer\n* `cto` - Chief Technology Officer\n* `cso` - Chief Security Officer\n* `seceng` - Security engineer\n* `dev` - Developer\n* `devop` - Developer Operations\n* `manager` - Manager\n* `other` - Other"
          },
          "is_billing_admin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has permissions to manage billing.\nRead-only.\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the user can authenticate to Probely to interact with apps and the API.  \nIf false, the user's access to Probely's apps and API is blocked.  \nDefaults to true.\n"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLabel"
            }
          },
          "user_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleUserRoleResponse"
            },
            "readOnly": true
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of the last login of the user, in ISO 8601 UTC format. <br>For example, \"2023-08-09T13:27:43.8208302\""
          },
          "is_apiuser": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is an app that interacts with Probely through the API.  \nIf false, it is a human who interacts with Probely through our web interface.  \nDefaults to false.\"\n"
          },
          "mfa_enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has MFA (Multi-Factor Authentication) enabled at login.  \nDefaults to true.\n"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "email",
          "id",
          "ids",
          "is_apiuser",
          "is_billing_admin",
          "labels",
          "last_login",
          "mfa_enabled",
          "name",
          "user_roles"
        ]
      },
      "UserCreateRequest": {
        "type": "object",
        "description": "Remove field user_roles if the request users doesn't have\nuser_management high level permission",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": "Email of the user."
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          },
          "title": {
            "enum": [
              "ceo",
              "cto",
              "cso",
              "seceng",
              "dev",
              "devop",
              "manager",
              "other",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "9b7b3ace78860881",
            "description": "Job title:\n\n* `ceo` - Chief Executive Officer\n* `cto` - Chief Technology Officer\n* `cso` - Chief Security Officer\n* `seceng` - Security engineer\n* `dev` - Developer\n* `devop` - Developer Operations\n* `manager` - Manager\n* `other` - Other"
          },
          "is_billing_admin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has permissions to manage billing.\nRead-only.\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the user can authenticate to Probely to interact with apps and the API.  \nIf false, the user's access to Probely's apps and API is blocked.  \nDefaults to true.\n"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLabel"
            }
          },
          "user_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleUserRoleRequest"
            }
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of the last login of the user, in ISO 8601 UTC format. <br>For example, \"2023-08-09T13:27:43.8208302\""
          },
          "is_apiuser": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is an app that interacts with Probely through the API.  \nIf false, it is a human who interacts with Probely through our web interface.  \nDefaults to false.\"\n"
          },
          "mfa_enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has MFA (Multi-Factor Authentication) enabled at login.  \nDefaults to true.\n"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "email",
          "id",
          "is_apiuser",
          "is_billing_admin",
          "labels",
          "last_login",
          "mfa_enabled",
          "name"
        ]
      },
      "UserLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the label.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "description": "\nColor of the label, in RGB hexadecimal format prefixed with \"#\".  \nFor example, \"#00FF00\" for green.\n",
            "pattern": "^[a-zA-Z0-9#_-]*$"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "id",
          "name"
        ]
      },
      "UserResponse": {
        "type": "object",
        "description": "Remove field user_roles if the request users doesn't have\nuser_management high level permission",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": "Email of the user."
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          },
          "title": {
            "enum": [
              "ceo",
              "cto",
              "cso",
              "seceng",
              "dev",
              "devop",
              "manager",
              "other",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "9b7b3ace78860881",
            "description": "Job title:\n\n* `ceo` - Chief Executive Officer\n* `cto` - Chief Technology Officer\n* `cso` - Chief Security Officer\n* `seceng` - Security engineer\n* `dev` - Developer\n* `devop` - Developer Operations\n* `manager` - Manager\n* `other` - Other"
          },
          "is_billing_admin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has permissions to manage billing.\nRead-only.\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the user can authenticate to Probely to interact with apps and the API.  \nIf false, the user's access to Probely's apps and API is blocked.  \nDefaults to true.\n"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLabel"
            }
          },
          "user_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleUserRoleResponse"
            }
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of the last login of the user, in ISO 8601 UTC format. <br>For example, \"2023-08-09T13:27:43.8208302\""
          },
          "is_apiuser": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is an app that interacts with Probely through the API.  \nIf false, it is a human who interacts with Probely through our web interface.  \nDefaults to false.\"\n"
          },
          "mfa_enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has MFA (Multi-Factor Authentication) enabled at login.  \nDefaults to true.\n"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "email",
          "id",
          "is_apiuser",
          "is_billing_admin",
          "labels",
          "last_login",
          "mfa_enabled",
          "name"
        ]
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "user": {
            "$ref": "#/components/schemas/SimpleUser"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "scope": {
            "$ref": "#/components/schemas/DPOScopeSchema"
          }
        },
        "required": [
          "id",
          "role",
          "scope",
          "user"
        ]
      },
      "UserRoleCreateRequest": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "role": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "scope": {
            "$ref": "#/components/schemas/DPOScopeRequest"
          }
        },
        "required": [
          "role",
          "scope",
          "user"
        ]
      },
      "UserRoleDestroyRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 12,
            "minLength": 12
          }
        },
        "required": [
          "id"
        ]
      },
      "UserRoleOperationsRequest": {
        "type": "object",
        "properties": {
          "create": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleCreateRequest"
            }
          },
          "delete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleDestroyRequest"
            }
          }
        }
      },
      "UserRoleOperationsResponse": {
        "type": "object",
        "properties": {
          "create": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          },
          "delete": {
            "$ref": "#/components/schemas/IDList"
          }
        }
      },
      "UserScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserTarget"
              }
            ],
            "description": "\nCore settings of the target.  \nIncludes basic target information like the name and URL.\n"
          },
          "user_roles": {
            "type": "string"
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          }
        },
        "required": [
          "changed",
          "changed_by",
          "id",
          "site",
          "user_roles"
        ]
      },
      "UserTarget": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "\nName of the target or extra host.  \nThe maximum length is 255 characters.\n"
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "URL of the target."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          }
        },
        "required": [
          "changed",
          "changed_by",
          "id",
          "name",
          "url"
        ]
      },
      "UserUpdateRequest": {
        "type": "object",
        "description": "Remove field user_roles if the request users doesn't have\nuser_management high level permission",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": "Email of the user."
          },
          "name": {
            "type": "string",
            "description": "Name of the user.",
            "maxLength": 60
          },
          "title": {
            "enum": [
              "ceo",
              "cto",
              "cso",
              "seceng",
              "dev",
              "devop",
              "manager",
              "other",
              ""
            ],
            "type": "string",
            "x-spec-enum-id": "9b7b3ace78860881",
            "description": "Job title:\n\n* `ceo` - Chief Executive Officer\n* `cto` - Chief Technology Officer\n* `cso` - Chief Security Officer\n* `seceng` - Security engineer\n* `dev` - Developer\n* `devop` - Developer Operations\n* `manager` - Manager\n* `other` - Other"
          },
          "is_billing_admin": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has permissions to manage billing.\nRead-only.\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "\nIf true, the user can authenticate to Probely to interact with apps and the API.  \nIf false, the user's access to Probely's apps and API is blocked.  \nDefaults to true.\n"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLabel"
            }
          },
          "user_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleUserRoleResponse"
            },
            "readOnly": true
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "Date and time of the last login of the user, in ISO 8601 UTC format. <br>For example, \"2023-08-09T13:27:43.8208302\""
          },
          "is_apiuser": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, it is an app that interacts with Probely through the API.  \nIf false, it is a human who interacts with Probely through our web interface.  \nDefaults to false.\"\n"
          },
          "mfa_enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "\nIf true, the user has MFA (Multi-Factor Authentication) enabled at login.  \nDefaults to true.\n"
          }
        },
        "required": [
          "changed",
          "changed_by",
          "email",
          "id",
          "is_apiuser",
          "is_billing_admin",
          "labels",
          "last_login",
          "mfa_enabled",
          "name",
          "user_roles"
        ]
      },
      "VerySimpleScope": {
        "type": "object",
        "description": "Return serializer_class with all fields as read_only except key. The key is the field use to retrieve the object in `to_internal_value`.\n\nThis is for the drf-spectacular documentation generation.",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "\nName of the target.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255,
            "deprecated": true
          },
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleTarget"
              }
            ],
            "readOnly": true,
            "description": "\nCore settings of the target.  \nIncludes basic target information like the name and URL.\n"
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "description": "\nType of target.  \nPossible values are \"single\" for a web application and \"api\" for an API.  \nDefaults to \"single\".\n"
          },
          "desc": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "\nDescription of the target.  \nDefaults to \"\".\n",
            "deprecated": true
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeLabel"
            },
            "readOnly": true
          },
          "has_assets": {
            "type": "boolean",
            "readOnly": true
          },
          "report_fileformat": {
            "enum": [
              "pdf",
              "docx"
            ],
            "type": "string",
            "x-spec-enum-id": "0e9d9230b8e968e0",
            "readOnly": true,
            "description": "\n[Report format](https://help.probely.com/en/articles/6649585-how-to-switch-between-different-report-formats) for the target:  \n(Defaults to `pdf`)\n\n\n* `pdf` - PDF file format.\n* `docx` - DOCX file format."
          },
          "scanning_agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanningAgent"
              }
            ],
            "readOnly": true,
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleTeam"
                }
              ],
              "nullable": true
            },
            "readOnly": true
          },
          "blackout_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlackoutPeriod"
              }
            ],
            "readOnly": true,
            "description": "Time window during which scans are temporarily interrupted."
          }
        },
        "required": [
          "blackout_period",
          "desc",
          "has_assets",
          "id",
          "labels",
          "name",
          "report_fileformat",
          "scanning_agent",
          "site",
          "teams",
          "type"
        ]
      },
      "VulnerabilityDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "\nName of the vulnerability.  \nThe maximum length is 255 characters.\n",
            "maxLength": 255
          },
          "desc": {
            "type": "string",
            "nullable": true,
            "description": "Description of the vulnerability."
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "severity": {
            "enum": [
              10,
              20,
              30,
              null
            ],
            "type": "integer",
            "x-spec-enum-id": "00695357157ec7c5",
            "nullable": true,
            "description": "Default vulnerability severity.\n\n* `10` - low\n* `20` - medium\n* `30` - high",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "cvss_vector": {
            "type": "string",
            "nullable": true,
            "description": "CVSS vector",
            "maxLength": 1024
          },
          "cwe_id": {
            "type": "string",
            "nullable": true,
            "description": "CWE id.",
            "maxLength": 16
          },
          "cwe_name": {
            "type": "string",
            "nullable": true,
            "description": "CWE name",
            "maxLength": 255
          },
          "passive": {
            "type": "boolean"
          }
        },
        "required": [
          "changed",
          "id",
          "name"
        ]
      },
      "Warning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 255
          },
          "name": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "A unique Base58 value identifying this object."
          },
          "name": {
            "type": "string",
            "description": "Name of the webhook.",
            "maxLength": 255
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "check_cert": {
            "type": "boolean",
            "description": "If true, verify the HTTPS certificate of the webhook URL. Defaults to true."
          },
          "api_version": {
            "enum": [
              "v1"
            ],
            "type": "string",
            "x-spec-enum-id": "aa56d68e8b664ff0",
            "description": "API version of the webhook.\n\n* `v1` - V1"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true
          },
          "changed": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "\nDate and time of the last change, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "changed_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleUser"
              }
            ],
            "readOnly": true,
            "description": "User who last made changes."
          }
        },
        "required": [
          "changed",
          "changed_by",
          "created",
          "created_by",
          "id",
          "name",
          "url"
        ]
      },
      "WebhookEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "api_version": {
            "enum": [
              "v1"
            ],
            "type": "string",
            "x-spec-enum-id": "aa56d68e8b664ff0",
            "description": "API version of the webhook.\n\n* `v1` - V1"
          },
          "status": {
            "enum": [
              "scheduled",
              "succeeded",
              "rescheduled",
              "failed"
            ],
            "type": "string",
            "x-spec-enum-id": "6ffe1438545a19b4",
            "description": "Status of the webhook:\n\n* `scheduled` - Scheduled\n* `succeeded` - Succeeded\n* `rescheduled` - Rescheduled\n* `failed` - Failed"
          },
          "next_try": {
            "type": "string",
            "format": "date-time",
            "description": "\nDate and time of the next request to the webhook URL, in ISO 8601 UTC format.  \nFor example, \"2023-08-09T13:27:43.8208302\".\n"
          },
          "retries": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "Number of retries of requests to the webhook URL."
          }
        },
        "required": [
          "api_version",
          "id",
          "next_try",
          "status"
        ]
      }
    },
    "securitySchemes": {
      "JWT Authentication": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token-based authentication with required prefix \"JWT \""
      }
    }
  },
  "servers": [
    {
      "url": "https://api.probely.com/"
    }
  ],
  "tags": [
    {
      "name": "Quickstart",
      "description": "\nIn this quick example we will start a scan for a target from a list and get the final scan results.\n\nTo run the requests, replace `<PROBELY_AUTH_TOKEN>` with your authentication token.  \nRead more about how to obtain the authentication token in [the Authentication section](./authentication.md).\n\n## Get the list of targets\n\nWe will start with a request to get the list of targets of the account.  \n\n```bash\ncurl https://api.probely.com/targets/ -X GET -H \"Content-Type: application/json\" -H \"Authorization: JWT <PROBELY_AUTH_TOKEN>\"\n```\n\nThe response returns a JSON with the list of targets in your account.\n\n```json\n{\n  \"count\": 32,\n  \"page_total\": 4,\n  \"page\": 1,\n  \"length\": 10,\n  \"results\": [ \n    {\n      \"id\": \"3jWDZrNpfhSK\",\n      \"site\": {\n        \"id\": \"44rhjEiKbqHP\",\n        \"name\": \"My Website\",\n        \"desc\": \"\",\n        \"url\": \"https://www.example.com/\",\n        ...\n      },\n      ...\n    },\n    ...\n  ]\n}\n```\n\n## Start a target scan\n\nWith a list of targets, we will start a scan for the first target (with the identifier `3jWDZrNpfhSK`).  \n\n```bash\ncurl https://api.probely.com/targets/3jWDZrNpfhSK/scan_now/ -X POST -H \"Content-Type: application/json\" -H \"Authorization: JWT <PROBELY_AUTH_TOKEN>\"\n```\n\nThe response returns a JSON with information about the scan, such as the scan identifier, the scan status, and the creation date.\n\n```json\n{\n  \"id\": \"37borpHTaGDe\",\n  \"target\": {\n    \"id\": \"3jWDZrNpfhSK\",\n    ...\n  },\n  \"status\": \"queued\",\n  ...\n  \"created\": \"2023-11-15T15:14:20.650073Z\",\n  ...\n}\n```\n\n## Get scan information\n\nNow, we will poll Probely with the following request to get the scan information and check whether the scan is complete.  \nWe will use the scan identifier (`37borpHTaGDe`) and target identifier (`3jWDZrNpfhSK`) from the previous steps.\n\n```bash\ncurl https://api.probely.com/targets/3jWDZrNpfhSK/scans/37borpHTaGDe/ -X GET -H \"Content-Type: application/json\" -H \"Authorization: JWT <PROBELY_AUTH_TOKEN>\"\n```\n\nWhen the scan is complete, the response returns a JSON with the scan status as `completed`, together with the date and time of completion and the final number of vulnerabilities found (low, medium, and high).\n\n```json\n{\n  \"id\": \"37borpHTaGDe\",\n  \"target\": {\n    \"id\": \"3jWDZrNpfhSK\",\n    ...\n  },\n  \"status\": \"completed\",\n  \"started\": \"2023-11-15T15:14:22.971155Z\",\n  \"completed\": \"2023-11-15T15:57:52.888459Z\",\n  \"scan_profile\": \"api_normal\",\n  \"lows\": 1,\n  \"mediums\": 2,\n  \"highs\": 24,\n  ...\n}\n```\n\nIn this last step, we polled Probely to get the scan information and check whether it was complete.  \nAn alternative to this is to subscribe to Probely events and get notified about changes in your account.  \nLearn more about the available events and how to subscribe to them in [Events](./events.tag.mdx).  \n"
    },
    {
      "name": "Authentication",
      "description": "\nA valid authentication token is required to make requests to the Probely API.  \n\nTo obtain the authenticationtoken, [generate an API Key](https://help.probely.com/en/articles/8592281-how-to-generate-an-api-key) in the Probely app and save it in a secure place.  \nTreat the authentication token as a password since it allows access to information in your account and possible manipulation (depending on the role associated with the API Key).\n\nTo pass the authentication token in requests, add it to the authorization header using the following format:\n\n```\nAuthorization: JWT <PROBELY_AUTH_TOKEN>\n```\n"
    },
    {
      "name": "Concepts",
      "description": "\n\nTL;DR: you run scans on targets, and findings are created for any issue that is found. However, there are a few more concepts that must be explained in order to get a complete picture of how Probely works. We will spend the next few sections detailing the most important concepts.\n\n## Target\n\nA target defines the scope of a scan, what will and won't be included in the scan plan. This is done by filling a target's site and assets.\n\nThe entry point for the web application (and authentication) is setup in the target's site.\n\nIn modern web applications, you are probably loading resources from multiple domains. A single page app, for example, will usually load the page from one domain and make AJAX requests to another. This is what assets are for: they specify what domains our scanner should follow and create requests for.\n\nA URL is probably not the only thing you will need to setup when scanning your application.  \nFor example:\n\n* Does the application have an authenticated area? \n* Does it use basic auth? \n* Does it expect a certain cookie or header? \n\nThese parameters are all configured in the target's site.\n\nWe need to ensure that only allowed web applications are scanned. Therefore, we must verify that you have control of any site you wish to include. This can be done by:\n\n- Placing a file on a well-known location, on the site's server.\n- Creating specific DNS records.\n- Adding an HTML meta tag to the root of the site.\n\n## Scans\n\nThis is what you're here for. After configuring your target, you will want to run scans against it. You can either start a one off scan, or schedule one for later - recurring or not.\n\nDuring the scan, we will crawl the site and run several modules to check for security issues, which we call findings. You can check the findings even before a scan ends. If everything goes well, the scan will complete and that is it.\n\nWith some findings, our automated processes may have difficulties determining if it is a false positive or a legitimate issue. In these instances, a scan will be marked as under review, and we will further analyze the finding before making a decision. We will only show findings that, for some degree of confidence, are true positives. A finding that we are not sure of will never be displayed.\n\nAs much as we try to prevent it, a scan (or a sub-module) can malfunction.  \nIf this happens, a scan is marked as:\n\n- \"failed\": the problem was irrecoverable.\n\nDuring a scan, we try to determine what frameworks you are using and add this information to the site and asset objects discussed previously.\n\n## Findings\n\nThe last core concept is the finding, this is a security issue that we have found during our scans. If the same issue is found in a new scan it will not open a new finding but update the previous.\n\nA finding will have a lot of information about the issue. Namely, where it was found, URL, insertion point (e.g. cookie), parameter, and method. Evidence we gathered, and the full request and response that we used. Sugestions of how to go about fixing it. A full description of the vulnerability is also present in the definition property. We also assign a severity and calculate the CVSS score for each.\n\nBesides all this, there are also actions that you can perform on a finding. You can assign it to one user, leave comments for your team or add labels, and reduce or increase the severity.\n\nIf you don't plan on fixing the finding and accept the risk, or you think we reported a false positive, you can mark the finding to reflect that.\n\n## Scan Profile\n\nScan profiles allow you perform different kinds of scans that differ in their duration, type and number of requests performed and vulnerabilities tested for:\n\nThere are several scan profiles:\n\n| id | Name|\n|--|--|\nlightning | Security Posture\nsafe | Safe\nnormal | Normal\nfull | Full\napi_normal | API Normal\napi_full | API Full\n\nSecurity Posture scans usually run in under a minute and check for SSL/TLS, HTTP headers, and cookies attribute-related vulnerabilities.\n\nThe safe profile tests for all the vulnerabilities we support, but with a limited set of payloads, to reduce the possible impact on the target application. \nThe scanner will not make POST, PUT or DELETE requests, however, our crawler will still make requests with these methods if there are actions that trigger them.\n\nThe Normal profile tests for all the vulnerabilities we support, with a larger set of payloads than the one used in the safe profile, for some tests. It also has no restrictions about which methods it uses.\n\nThe Full profile includes all the tests from the normal profile, plus an even larger set of payloads.\n\nSpecifically for API targets, there are also the API Normal/API Full that correspond to profiles normal/full for web targets. \n\n"
    },
    {
      "name": "API Users",
      "description": "\nAPI users are a special kind of user in a Probely account. They represent applications interacting with Probely through the API in machine-to-machine scenarios, such as standalone applications integrating with Probely.\n\nDepending on the roles assigned, API users can have access to different features of Probely to perform their tasks. Read more on [How do Roles and Permissions Work](https://help.probely.com/en/articles/5054208-how-do-roles-and-permissions-work)\n\n### Functionality  \n\nThe endpoints under **API Users** provide the following functionality:\n\n* Create and manage API users.\n* Create, manage, and assign API user roles to API users.\n\n### Important Notes\n\nSome relevant information when using **API Users**:\n\n* An API user has an access token that identifies it.\n* Unlike [users](./user.tag.mdx), access tokens for API users won't have an expiration date due to the nature of machine-to-machine interactions.\n\n### Related Tags\n\nFurther functionality related to **API Users** is provided in the following tags:\n\n* [**User Management**](./user-management.tag.mdx) - Manage users in the account including API users.\n* [**User**](./user.tag.mdx) - Manage specific API user settings, like passwords or notifications. \n\n"
    },
    {
      "name": "AWS Integration",
      "description": "\nEndpoints for AWS integration.\n\n"
    },
    {
      "name": "Account",
      "description": "\nTo scan targets with Probely you need to have an account and subscribe to one of the [available pricing plans](https://help.probely.com/en/articles/6609798-pricing-plans-comparison).\nOnce created, you can manage your account regarding the subscribed plan, payment and billing information, invoices, targets with unlimited scans, and credits for scanning targets.  \nWithin your account, explore the features provided by Probely, such as:\n* Create and manage targets.\n* Start and manage target scans. \n* List and take action on vulnerability findings from target scans.\n* Create and manage users, teams, and roles and permissions.\n* Create and manage webhooks to handle events from the account and targets.\n* Integrate with other systems like Jira or Azure to synchornize findings.\n\nSee the **Related Tags** section for further details.\n\n### Functionality\nThe endpoints under **Account** provide the following functionality:\n* Retrieve the subscription information and entitlements.\n* List and retrieve invoices.\n* List all pricing plans.\n* Targets:\n  * Retrieve the number of free slots for targets with unlimited scans.\n  * List and manage targets with unlimited scans.\n* Credits:\n  * Retrieve your credits information and list the credits usage. \n  * List and retrieve credits packs. \n  * Purchase credits.\n  * Retrieve and set auto top-up of credits.\n\n### Related Tags\nFurther functionality related to **Account** is provided in the following tags:\n* **Targets**\n  * [**Targets**](./targets.tag.mdx) - Manage the targets in the account.\n* **Scans**\n  * [**Scans**](./scans.tag.mdx) - Manage scans of targets in the account.\n  * [**Scheduled Scans**](./scheduled-scans.tag.mdx) - Manage scheduled scans of targets in the account.\n* **Findings**\n  * [**Findings**](./findings.tag.mdx) - Manage findings obtained from scans of targets in the account.\n  * [**Vulnerabilities**](./vulnerabilities.tag.mdx) - List and retrieve vulnerability descriptions.\n* **Reports**\n  * [**Reports**](./reports.tag.mdx) - Retrieve reports on findings from scans of targets in the account.\n  * [**Dashboards**](./dashboards.tag.mdx) - Retrieve statistical information on scans of targets in the account.\n* **Users**\n  * [**User Management**](./user-management.tag.mdx) - Manage Probely app users in the account. \n  * [**User**](./user.tag.mdx) - Manage specific user settings, like passwords or notifications.\n  * [**API Users**](./api-users.tag.mdx) - Manage API users and API roles in the account.\n  * [**User Roles**](./user-roles.tag.mdx) - Manage roles assigned to the Probely app users in the account.\n  * [**Audit Log**](./audit-log.tag.mdx) - Download the audit log of the user activity in the account.\n* **Teams**\n  * [**Teams**](./teams.tag.mdx) - Manage groups of users and targets in the account.\n* **Roles & Permissions**\n  * [**Roles & Permissions**](./roles-permissions.tag.mdx) - Manage roles and permissions in the account.\n* **Events**\n  * [**Events**](./events.tag.mdx) - Manage notifications of events from the account and targets.\n* **Integrations**\n  * [**Jira Server Integration**](./jira-server-integration.tag.mdx) - Manage the integration with Jira to synchronize findings from target scans in the account. \n  * [**Azure DevOps Integration**](./azure-dev-ops-integration.tag.mdx) - Manage the integration with Azure DevOps to synchronize findings from target scans in the account. \n\n"
    },
    {
      "name": "Asset Discovery",
      "description": "\nEndpoints to manage the Asset Discovery.\n"
    },
    {
      "name": "Audit Log",
      "description": "\nRecord of user actions.\n"
    },
    {
      "name": "Azure DevOps Integration",
      "description": "\nManaging Azure DevOps integration.\n"
    },
    {
      "name": "Dashboards",
      "description": "\nProbely dashboard data.\n"
    },
    {
      "name": "Domains",
      "description": "\nVulnerability scans may require extensive requests to targets, which can be perceived as malicious attacks and make scans fail.\n\nTo avoid that, Probely requires the verification of the domain of targets to prove the ownership, i.e., that requests from vulnerability scans are allowed. \n\n### Functionality \n\nThe endpoints under **Domains** provide the following functionality:\n* Create and manage domains.\n* Verify the ownership of domains. \n\n### Important Notes\n\nSome relevant information when using **Domains**:\n* Probely has several methods to verify domains, which are described in [this article](https://help.probely.com/en/articles/3285602-why-do-we-require-you-to-verify-the-ownership-of-your-target).\n* Depending on the method, different server-side configurations may be needed, such as adding a file to the website root folder or a record to the Domain Name System (DNS). \n"
    },
    {
      "name": "Events",
      "description": "\nProbely saves records and sends notifications of important events related to an account. So, instead of polling Probely repeatedly to get information and figure out whether something happened, register Webhooks and get notified by Probely about events in real-time.\n\nProbely sends notifications for the following events:\n\n* Account Events\n  * A user was created.\n  * A user was deleted.\n  * A target was created.\n  * A target was deleted.\n  * A target was verified with success.\n  * A target was verified and failed.\n\n* Target Events\n  * A scan was started.\n  * A scan was completed.\n  * A scan was canceled.\n  * A scan failed.\n  * A vulnerability finding was detected.\n  * A vulnerability finding was fixed.\n\nEvent notifications sent to Webhooks depend on the type of events Webhooks are registered for:\n\n| Webhook Registration | Event Notifications                                                                                                    |\n|----------------------|------------------------------------------------------------------------------------------------------------------------|\n| Account Events       | The Webhook receives notifications from Probely about account events and target events for all targets of the account. |\n| Target Events        | The Webhook receives notifications from Probely about target events for a specific target of the account.              |\n\n### Functionality\n\nThe endpoints under **Events** provide the following functionality:\n* Register and manage Webhooks for account events.\n* Register and manage Webhooks for target events.\n* List and retrieve account events.\n* List and retrieve target events.\n\n### Important Notes\n\nSome relevant information when using **Events**:\n* Account owners will only see and be notified of events related to their accounts.\n* The Webhook URLs are required to be HTTPS.\n* For security reasons, Webhooks should have a unique and hard-to-guess identifier.  \n  For example, https://webhook.example.com/d69179e3b06549469817560c650be98f/\n* Event notifications are sent in JSON format.\n* After sending an event notification, an HTTP success status code (2XX) is expected in response.\n* In case an event notification fails, Probely will retry to send it again with an exponential back-off (maxing out at 4 hours) for 2 days, at the end of which an email is sent informing the failure.\n\n### Related Tags\n\nFurther functionality related to **Events** is provided in the following tags:\n* [**Account**](./account.tag.mdx) - Manage the account.\n* [**User**](./user.tag.mdx) - Manage specific settings of users returned by Account Events, like the profile, passwords, or notifications.\n* [**Targets**](./targets.tag.mdx) - Manage targets returned by Account Events.\n* [**Scans**](./scans.tag.mdx) - Manage scans returned by Target Events.\n* [**Findings**](./findings.tag.mdx) - Manage vulnerability findings returned by Target Events.\n\n"
    },
    {
      "name": "Extra Hosts",
      "description": "\nOther resources a scan required access to (e.g. the domain where an API is being served) should be added here. You can also configure custom headers and cookies for each asset.\n"
    },
    {
      "name": "Finding Labels",
      "description": "\nYou can add labels to help you keep track of your findings.\n\n"
    },
    {
      "name": "Findings",
      "description": "\nFindings represent vulnerabilities identified during target scans. You can analyze and take action on findings and, to help you decide what to do, each finding comes with contextual information, namely:\n* A classification of the severity level.\n* A description of the identified vulnerability.\n* The evidence of the vulnerability.\n* The executed requests and the obtained responses.\n* A suggestion on how to fix the vulnerability.\n\nLearn more about findings in these articles:\n* [How to interpret scan results](https://help.probely.com/en/articles/6843262-how-to-interpret-scan-results)\n* [Actions on findings](https://help.probely.com/en/articles/6843265-actions-on-vulnerabilities)\n* [What is the meaning of a finding\u2019s state?](https://help.probely.com/en/articles/6673828-what-is-the-meaning-of-a-finding-s-state)\n* [Severity levels in scan findings](https://help.probely.com/en/articles/8880329-severity-levels-in-scan-findings)\n\n### Funtionality\n\nThe endpoints under **Findings** provide the following functionality:\n\n* Account Level\n  * List findings of the account, i.e., findings of all targets of the account.\n  * Retrieve a finding of the account.\n  * Update findings of the account, one by one or in bulk.\n  * Re-test findings of the account in bulk. \n\n* Target Level\n  * List findings of a target.\n  * Retrieve findings of a target.\n  * Update findings of the target, one by one or in bulk.\n  * Re-test findings of a target, one by one or in bulk.\n  * List the activity of a finding of a target.\n\n### Important Notes\nSome relevant information when using **Findings**:\n* Findings are only created for vulnerabilities not identified in previous scans.\n* If a vulnerability was identified in a previous scan, the following scans that identify it again simply update the respective finding.\n* If a scan can no longer identify a vulnerability, the respective finding is marked as `Fixed`.\n* In a re-test, if the identified vulnerability is not replicated, the finding is marked as `Fixed`.\n\n### Related Tags\nFurther functionality related to **Findings** is provided in the following tags:\n* [**Targets**](./account.tag.mdx) - Start target scans.\n* [**Scans**](./targets.tag.mdx) - Manage target scans.\n* [**Reports**](./reports.tag.mdx) - Produce reports on findings from target scans.\n* [**Vulnerabilities**](./vulnerabilities.tag.mdx) - List and retrieve vulnerabilities definitions.\n"
    },
    {
      "name": "Jira Cloud Integration",
      "description": "\nTo start integrating Probely with Jira you will first need to add the Probely app to your Jira instance. Go to the marketplace, search for Probely and install the application. When prompted click the \"Get Started\" button and follow the steps described to connect both accounts. A short explanation of the sync options can be found here.\n"
    },
    {
      "name": "Jira Server Integration",
      "description": "\nManaging Jira Server integration.\n"
    },
    {
      "name": "Navigation and Login Sequences",
      "description": "\nDuring target scans, websites and web applications can have complex areas that make it difficult for any crawler to reach. For example, a multi-step form, where the second step depends directly on a specific input from the first step.\n\nProbely provides a way of recording sequences of actions to be replayed by the crawler during target scans and, in this way, reach URLs within those complex areas.\n\nTo record sequences, install the Probely Recorder plugin in your Chrome or Firefox browser and then use it to record every action taken to pass a complex area. For more information, read these articles:\n* Installation - [Probely's sequence recorder browser plugin](https://help.probely.com/en/articles/5247212-probely-s-sequence-recorder-browser-plugin)\n* Recording - [How to record a sequence with Probely's Sequence Recorder plugin](https://help.probely.com/en/articles/5402869-how-to-record-a-sequence-with-probely-s-sequence-recorder-plugin)\n\nOnce recorded, create the sequence as a Login Sequence or Navigation Sequence. Learn how it is done in the Probely app:  \n* Navigation Sequence -  [How to set up Navigation Sequences](https://help.probely.com/en/articles/6657065-how-to-set-up-navigation-sequences)\n* Login Sequence - [How to set up Target Authentication (Login Sequence)](https://help.probely.com/en/articles/5402712-how-to-set-up-target-authentication-login-sequence)\n\n### Functionality \nThe endpoints under **Navigation and Login Sequences** provide the following functionality:\n* Create and manage navigation and login sequences.\n* Re-order navigation sequences.\n\n### Important Notes\nSome relevant information when using **Navigation and Login Sequences**: \n* Sequences are recorded in JSON format. \n* After recording a sequence, review and remove unnecessary steps in the JSON, such as extra clicks or mouse hoverings. The crawler will perform faster when replaying the steps.\n\n### Related Tags\nFurther functionality related to **Navigation and Login Sequences** is provided in the following tags:\n* [Targets](./targets.tag.mdx) - Enable and disable login sequences in targets.\n\n"
    },
    {
      "name": "Reduced Scopes",
      "description": "\nReduced scope scan parameters.\n"
    },
    {
      "name": "Reports",
      "description": "\nScan reports.\n"
    },
    {
      "name": "Roles & Permissions",
      "description": "\nUser roles and permissions define which actions are allowed.\n\nThe access to the main features of Probely is ruled by permissions. For instance, in order to add a target, the user needs to have the permission `Create Target`.\n\nYou can group permissions using roles. For instance, the built-in role `Developer` can view targets, change target settings, change findings, and start scans, but cannot add targets.\n\nYou can then map roles to users by creating user roles at different levels:\n\n- Account: To apply a role to all targets of the account, i.e., the role is set at an account level or global scope.\n\n- Target: If you want to grant a user access to a single target.\n\n- Team: If you want to grant a user access to a group of targets associated with a team.\n\nYou can also combine the different levels of roles. You can have a user that has, for instance, the role `Developer` at an account level and a role `Admin` on a specific target.\n\nDepending on your subscribed plan, you will have access to different roles:\n\n- Free: `Admin` and `Owner` roles only.\n\n- Enterprise: Built-in roles (`Admin`, `Auditor`, `Billing`, `Developer`, `Owner`, `SecOps`), and custom roles with different permission combinations.\n\n`Owner` is special role that can be assigned to a single user with additional anti account lockout measures.\n\n"
    },
    {
      "name": "Scan Profiles",
      "description": "\nA scan profile is associated with a target and determines how Probely scans that target.\n\nThere is a set of [built-in scan profiles](https://help.probely.com/en/articles/1994962-built-in-scan-profiles-and-their-differences) provided by Probely that already address the most common types of scans. However, it is also possible to create custom scan profiles to adjust and fine-tune scans for specific needs.\n\n### Functionality\n\nThe endpoints under **Scan Profiles** provide the following functionality:\n* List and retrieve scan profiles (built-in and custom).\n* Create and change custom scan profiles.\n\n### Important Notes\n\nSome relevant information when using **Scan Profiles**:\n* Only custom scan profiles can be created or changed.\n* If a custom scan profile is no longer in use, mark it as inactive.\n\n### Related Tags\n\nFurther functionality related to **Scan Profiles** is provided in the following tags:\n* [**Targets**](./targets.tag.mdx) - Associate scan profiles to targets.\n"
    },
    {
      "name": "Scanning Agents",
      "description": "\nScanning agents allow create secure tunnels into your infrastructure allowing scans to run against internal targets.\n"
    },
    {
      "name": "Scans",
      "description": "\nA scan identifies security vulnerabilities in a target through three core components, each one with a specific job:\n\n* **Fingerprinter** - Identifies the technologies used on the target, which help further identify vulnerabilities and improve Probely\u2019s suggestions on how to fix them.\n* **Crawler** - Goes through the target's URLs and interacts with every element found, clicking on buttons and filling in forms, among other actions.\n* **Scanner** - Finds vulnerabilities in the target's URLs provided by the Crawler, also improved by the technologies identified by the Fingerprinter.\n\nThe scope of the scan is determined by the target, as well as the behavior of the scan, such as authentication options, extra hosts, scanning profiles, and others. While scanning, vulnerabilities identified by the scanner produce findings that become associated with the target.\n\nLearn more about scans in [What happens during a scan?](https://help.probely.com/en/articles/5103617-what-happens-during-a-scan)\n\n### Functionality\n\nThe endpoints under **Scans** provide the following functionality:\n\n* Account Level\n  * List scans of all account targets.\n  * Start, pause, resume, or cancel scans in bulk for account targets.\n\n* Target Level\n  * Retrieve the scan currently executing on a target.\n  * Pause, resume, or cancel the scan currently executing on a target.\n  * List all scans of a target.\n  * Retrieve and update a scan of a target.\n  * Pause, resume, or cancel a scan of a target.\n  * Export the list of endpoints covered by a scan of a target. \n\n### Related Tags\nFurther functionality related to **Scans** is provided in the following tags:\n* [**Targets**](./targets.tag.mdx) - Manage the scope and behavior of target scans, which extend also to other tags, namely:\n  * [**Extra Hosts**](./extra-hosts.tag.mdx) - Manage extra hosts to extend the scope of target scans to more domains.\n  * [**Scanning Agent**](./scanning-agents.tag.mdx) - Manage scanning agents to extend the scope of target scans to internal applications.\n  * [**Reduced Scope**](./reduced-scopes.tag.mdx) - Manage reduced scopes to run partial scans on a subset of the target. \n  * [**Navigation and Login Sequences**](./navigation-and-login-sequences.tag.mdx) - Manage recorded sequences of browser interactions to replay in target scans. \n  * [**Scan Profiles**](./scan-profiles.tag.mdx) - Manage scan profiles to configure how target scans are performed. \n  * [**Scheduled Scans**](./scheduled-scans.tag.mdx) - Manage scheduled target scans.\n* [**Findings**](./findings.tag.mdx) - Manage vulnerabilities identified in the scans.\n* [**Reports**](./reports.tag.mdx) - Retrieve reports on findings from scans.\n"
    },
    {
      "name": "Scheduled Scans",
      "description": "\nYou can schedule scans for the future as a one off, or on a recurring basis.\n\n"
    },
    {
      "name": "Slack Integration",
      "description": "\nReceive slack notifications on Probely events.\n\n"
    },
    {
      "name": "Target Labels",
      "description": "\nYou can add labels to help you keep track of your targets.\n\n"
    },
    {
      "name": "Targets",
      "description": "\nIn Probely, a target defines the scope and behavior of a scan on a website, an application, or an API.  \nEach target has a URL that defines the scope of the scan and also the configuration of the scan behavior as, for example:\n* The authentication mechanism for the scanner to be able to log in.\n* The scan profile defining how the scan is performed.\n* The integration with third-party systems, like Jira, to synchronize scan results. \n\nLearn more about targets in this article: [Targets from A to Z](https://help.probely.com/en/articles/6600796-targets-from-a-to-z).\n\n### Functionality\nThe endpoints under **Targets** provide the following functionality:\n* Create and manage targets.\n* Update and delete targets in bulk.\n* Export and import targets.\n* Upload and download API schema files of API targets.\n* Check authentication in API targets.\n* Clear authentication configurations in targets.\n* Create and manage logout detectors in targets.\n\n### Related Tags\nFurther functionality related to **Targets** is provided in the following tags:\n* **Target Scans Configuration**\n  * [**Extra Hosts**](./extra-hosts.tag.mdx) - Manage extra hosts to extend the scope of target scans to more domains.\n  * [**Scanning Agents**](./scanning-agents.tag.mdx) - Manage scanning agents to extend the scope of target scans to internal applications.\n  * [**Reduced Scope**](./reduced-scopes.tag.mdx) - Manage reduced scopes to run partial scans on a subset of the target. \n  * [**Navigation and Login Sequences**](./navigation-and-login-sequences.tag.mdx) - Manage recorded sequences of browser interactions to replay in target scans. \n  * [**Scan Profiles**](./scan-profiles.tag.mdx) - Manage scan profiles to configure how target scans are performed. \n* **Target Scans**\n  * [**Scans**](./scans.tag.mdx) - Manage target scans.\n  * [**Scheduled Scans**](./scheduled-scans.tag.mdx) - Manage scheduled target scans.\n* **Findings**\n  * [**Findings**](./findings.tag.mdx) - Manage findings obtained from target scans.\n* **Reports**\n  * [**Reports**](./reports.tag.mdx) - Retrieve reports on findings from target scans.\n  * [**Dashboards**](./dashboards.tag.mdx) - Retrieve statistical information on target scans.\n* **Integrations**\n  * [**Slack Integration**](./slack-integration.tag.mdx) - Manage the integration with Slack to get notifications of events on target scans.\n  * [**Jira Cloud Integration**](./jira-cloud-integration.tag.mdx) - Manage the integration with Jira to synchronize findings from target scans. \n  * [**Reports**](./reports.tag.mdx) - Delete reports from Jira.\n  * [**Azure DevOps Integration**](./azure-dev-ops-integration.tag.mdx) - Manage the integration with Azure DevOps to synchronize findings from target scans. \n* **Events**\n  * [**Events**](./events.tag.mdx) - Manage notifications of events on targets and target scans.\n* **Target Management**\n  * [**Account**](./account.tag.mdx) - Manage targets with unlimited scans in the account.\n  * [**Teams**](./teams.tag.mdx) - Manage targets in teams.\n  * [**Target Labels**](./target-labels.tag.mdx) - Manage labels to apply to targets to facilitate target management.\n\n"
    },
    {
      "name": "Teams",
      "description": "\nGroup users, targets, and other elements in teams for specific features and a more efficient management. For example, users in a team can only run scans for targets of their team, not the targets of other teams.  \nLearn more about [how to get started with Teams](https://help.probely.com/en/articles/6345396-how-to-get-started-with-teams).\n\n### Functionality\n\nThe endpoints under **Teams** provide the following functionality:          \n* Create and manage teams (groups of [targets](./targets.tag.mdx) and [scanning agents](./scanning-agents.tag.mdx) only).\n* Check the number of free target slots of the teams.\n* Move targets from one team to another.\n\n### Important Notes\n\nSome relevant information when using **Teams**:\n* To group users in teams, create [user roles](./user-roles.tag.mdx) with team scope. \n\n### Related Tags\n\nFurther functionality related to **Teams** is provided in the following tags:\n* [**Targets**](./targets.tag.mdx) - Manage targets to use in teams.\n* [**Scanning Agents**](./scanning-agents.tag.mdx) - Manage scanning agents to use in teams.\n* [**User Roles**](./user-roles.tag.mdx) - Manage user roles to group users in teams.\n"
    },
    {
      "name": "Technologies (Frameworks)",
      "description": "\nDuring the scans we run fingerprinters against the target and record the result on the site and assets. You can access our list of frameworks/software here.\n\n"
    },
    {
      "name": "User",
      "description": "\nA user in a Probely account represents a human or a machine ([API user](./api-users.tag.mdx)) that interacts with Probely.\n\nDepending on the [roles and permissions](https://help.probely.com/en/articles/5054208-how-do-roles-and-permissions-work) assigned, users can have access to different features of Probely to perform their tasks.\n\n### Functionality\n\nThe endpoints under **User** provide the following functionality:\n\n* Retrieve user information.\n* Change the user's password.\n* Retrieve and update the user's notification settings.\n\n### Important Notes\n\nSome relevant information when using **User**:\n* All operations under **User** are relative to the user identified by the access token that is passed.\n* Access tokens have an expiration date unless the user is an API user.\n* Changing the password in only possible for non-API users.\n\n### Related Tags\n\nFurther functionality related to **User** is provided in the following tags:\n* [**User Management**](./user-management.tag.mdx) - Manage users in the account.\n* [**API Users**](./api-users.tag.mdx) - Manage users interacting with Probely through the API (API Users).\n* [**User Roles**](./user-roles.tag.mdx) - Manage user roles to assing to users.\n* [**User Labels**](./user-labels.tag.mdx) - Manage labels to apply to users.\n"
    },
    {
      "name": "User Labels",
      "description": "\nLabels are a mechanism to apply short and useful information to users. For example, create a label called \"Outsource\" to apply to users working as outsourcers to filter them and facilitate user management.\n\nWhen creating labels, validate whether Probely provides that information as, for example, teams, roles, and targets of the user.\n\n### Functionality \n\nThe endpoints under **User Labels** provide the following functionality:\n* Create and manage labels to apply to users.\n\n### Related Tags\n\nFurther functionality related to **User Labels** is provided in the following tags:\n* [**User Management**](./user-management.tag.mdx) - Manage labels applied to users.\n"
    },
    {
      "name": "User Management",
      "description": "\nUser management provides functionality to create and manage users in a Probely account so they can interact with Probely apps and the API. \n\n### Functionality\n\nThe endpoints under **User Management** provide the following functionality:\n* Create and manage users in the account (including bulk updates).\n* Block users' access to Probely apps and API.\n\n### Related Tags\n\nFurther functionality related to **User Management** is provided in the following tags:\n* [**User**](./user.tag.mdx) - Manage specific user settings, like passwords or notifications.\t\n* [**API User**](./api-users.tag.mdx) - Manage special users interacting with the API, like applications.\n* [**User Roles**](./user-roles.tag.mdx) - Assign roles to users to set permissions to do their tasks.\n* [**User Labels**](./user-labels.tag.mdx) - Manage labels to apply to users and help with user management.\n\n"
    },
    {
      "name": "User Roles",
      "description": "\nThe access to Probely features is determined by permissions, which are grouped into roles to assign to [users](./user.tag.mdx).\n\nThis way, depending on the [roles and permissions](https://help.probely.com/en/articles/5054208-how-do-roles-and-permissions-work) assigned, users can have access to different features of Probely to perform their tasks.\n\nA **User Role** represents an assignment of a role to a user. \n\n### Functionality \n\nThe endpoints under **User Roles** provide the following functionality: \n* Create and manage the assignment of roles to users, one by one or in bulk.\n\n### Important Notes\n\nSome relevant information when using **User Roles**:\n* Different roles can be assigned to users at different levels: \n    * Global to the account.\n    * In the scope of a team.\n    * For a specific target.\n* A user can have different roles in different teams or for different targets.\n\n### Related Tags\n\nFurther functionality related to **User Roles** is provided in the following tags:\n* [**User Management**](./user-management.tag.mdx) - Manage users in the account.\n* [**Account**](./account.tag.mdx) - Manage the account.\n* [**Teams**](./teams.tag.mdx) - Manage teams.\n* [**Targets**](./targets.tag.mdx) - Manage targets. \n"
    },
    {
      "name": "Vulnerabilities",
      "description": "\nIn Probely, findings are connected to vulnerability definitions. This is how we keep track of the type of vulnerability. It also includes a name and description.\n\n"
    }
  ]
}