[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 37 relative references: [(('paths', '/ca/{account}/{service_id}/sign', '$ref'), '$ref', 'cert-auth.yml#/components/paths/Sign'), (('paths', '/public_keys/{account}/{kind}/{identifier}', '$ref'), '$ref', 'public-keys.yml#/components/paths/PublicKeys'), (('paths', '/host_factories/hosts', '$ref'), '$ref', 'host-factory.yml#/components/paths/CreateHost'), (('paths', '/host_factory_tokens/{token}', '$ref'), '$ref', 'host-factory.yml#/components/paths/RevokeHostToken'), (('paths', '/host_factory_tokens', '$ref'), '$ref', 'host-factory.yml#/components/paths/CreateHostToken'), (('paths', '/resources/{account}/{kind}/{identifier}', '$ref'), '$ref', 'resources.yml#/components/paths/SingleResource'), (('paths', '/resources/{account}/{kind}', '$ref'), '$ref', 'resources.yml#/components/paths/ListSimilarResourcesOnAccount'), (('paths', '/resources/{account}', '$ref'), '$ref', 'resources.yml#/components/paths/ListResourcesOnAccount'), (('paths', '/resources', '$ref'), '$ref', 'resources.yml#/components/paths/ListResources'), (('paths', '/roles/{account}/{kind}/{identifier}', '$ref'), '$ref', 'roles.yml#/components/paths/Roles'), (('paths', '/policies/{account}/policy/{identifier}', '$ref'), '$ref', 'policies.yml#/components/paths/Policies'), (('paths', '/secrets', '$ref'), '$ref', 'secrets.yml#/components/paths/BatchSecrets'), (('paths', '/secrets/{account}/{kind}/{identifier}', '$ref'), '$ref', 'secrets.yml#/components/paths/Secret'), (('paths', '/info', '$ref'), '$ref', 'status.yml#/components/paths/Info'), (('paths', '/remote_health/{remote}', '$ref'), '$ref', 'status.yml#/components/paths/RemoteHealth'), (('paths', '/health', '$ref'), '$ref', 'status.yml#/components/paths/Health'), (('paths', '/authenticators', '$ref'), '$ref', 'status.yml#/components/paths/AuthenticatorsIndex'), (('paths', '/authn-gcp/{account}/status', '$ref'), '$ref', 'status.yml#/components/paths/AuthenticatorStatus'), (('paths', '/{authenticator}/{service_id}/{account}/status', '$ref'), '$ref', 'status.yml#/components/paths/ServiceAuthenticatorStatus'), (('paths', '/whoami', '$ref'), '$ref', 'status.yml#/components/paths/WhoAmI'), (('paths', '/{authenticator}/{service_id}/{account}', '$ref'), '$ref', 'authentication.yml#/components/paths/EnableAuthenticatorInstance'), (('paths', '/{authenticator}/{account}', '$ref'), '$ref', 'authentication.yml#/components/paths/EnableAuthenticator'), (('paths', '/authn/{account}/api_key', '$ref'), '$ref', 'authentication.yml#/components/paths/RotateApiKey'), (('paths', '/authn/{account}/password', '$ref'), '$ref', 'authentication.yml#/components/paths/ChangePassword'), (('paths', '/authn-jwt/{service_id}/{account}/{id}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/JWTAuthenticateWithId'), (('paths', '/authn-jwt/{service_id}/{account}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/JWTAuthenticate'), (('paths', '/authn-oidc/{service_id}/{account}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/OIDCAuthenticate'), (('paths', '/authn-ldap/{service_id}/{account}/{login}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/LDAPAuthenticate'), (('paths', '/authn-k8s/{service_id}/{account}/{login}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/KubernetesAuthenticate'), (('paths', '/authn-gcp/{account}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/GCPAuthenticate'), (('paths', '/authn-azure/{service_id}/{account}/{login}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/AzureAuthenticate'), (('paths', '/authn-iam/{service_id}/{account}/{login}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/AWSAuthenticate'), (('paths', '/authn/{account}/{login}/authenticate', '$ref'), '$ref', 'authentication.yml#/components/paths/DefaultAuthenticate'), (('paths', '/authn-ldap/{service_id}/{account}/login', '$ref'), '$ref', 'authentication.yml#/components/paths/LDAPLogin'), (('paths', '/authn-k8s/{service_id}/inject_client_cert', '$ref'), '$ref', 'authentication.yml#/components/paths/K8sInjectClientCert'), (('paths', '/authn/{account}/login', '$ref'), '$ref', 'authentication.yml#/components/paths/DefaultLogin'), (('servers', 0, 'url'), 'url', '/')]",
    "severity": 3,
    "code": "found-relative-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "relativeRefsCount": "37"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 2 absolute http references: [(('externalDocs', 'url'), 'url', 'https://conjur.org'), (('info', 'license', 'url'), 'url', 'http://www.apache.org/licenses/LICENSE-2.0.html')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "2"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Modifying spec to resolve relative references due to invalid-refs",
    "severity": 2,
    "code": "rewriting-relative-refs",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Still have invalid relative references after URL rewriting",
    "severity": 1,
    "code": "persistent-invalid-refs",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  }
]