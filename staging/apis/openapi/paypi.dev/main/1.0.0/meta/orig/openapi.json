{
  "openapi": "3.0.0",
  "info": {
    "title": "EmailVerify",
    "description": "OTP email verification API by PayPI. <br/><br/>\nEmailVerify provides a simple way to verify email addresses. We send emails ourselves taking the burden of setting up email systems and tracking codes. <br/><br/>\nTo learn more about this API, check out [EmailVerify documentation](https://emailverify.paypi.dev/) <br/><br/>\n\n## Authentication\nAll requests to the EmailVerify API must be authenticated with an API Key. To get an API key, subscribe to the EmailVerify [here](https://app.paypi.dev/subscribe/c2VydmljZTo1OGQxZDNmMy05OWQ5LTQ3ZjYtOWJkNi02OWNkMTY1OGFmOWU=).  \\\nSet your `Authorization` header to `Bearer YOUR-API-KEY`. \n```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"Authorization: Bearer YOUR-API-KEY\" \\\n...\n```\n",
    "version": "1.0.0",
    "contact": {
      "email": "hello@paypi.dev",
      "name": "PayPI",
      "url": "https://paypi.dev",
      "x-twitter": "paypi_uk",
      "x-logo": "https://paypi-default-images.s3.eu-west-1.amazonaws.com/EV-Img.png"
    },
    "x-jentic-source-url": "https://paypi-default-images.s3.eu-west-1.amazonaws.com/openapi.yaml"
  },
  "servers": [
    {
      "url": "https://ev.apis.paypi.dev"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Token"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/sendCode": {
      "post": {
        "summary": "Send verification code",
        "description": "This request send's a code to the given email address, which should be returned to check it is correct.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "email": "test@test.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - Email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "message": {
                      "type": "boolean",
                      "default": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or incorrectly formatted email given",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "message": {
                      "type": "boolean",
                      "default": "Unable to send email - please check the email address and try again"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "message": {
                      "type": "string",
                      "default": "Authorization header value invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkCode": {
      "post": {
        "summary": "Check verification code",
        "description": "Checks the user's emailed code is valid. \nIf this returns success=true, you can safely assume the user you are interacting with is the owner of that email address.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "default": "test@test.com"
                  },
                  "code": {
                    "type": "string",
                    "default": 123456
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If success is true, the user has given the correct code. If not the code is incorrect. \\\nCheck the message for more information\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": {
                      "success": true,
                      "message": "email successfully verified"
                    }
                  },
                  "Invalid Code": {
                    "value": {
                      "success": false,
                      "message": "Given code is not valid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "#### Invalid API key\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "message": {
                      "type": "string",
                      "default": "Authorization header value invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "#### Tries for this email exceeded. \nTo prevent abuse and brute forcing, we limit the number of checkCode requests for each email address to 20. \\\nThis means if more than 20 requests are made you will have to send another code to your user, this will reset the limit.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "message": {
                      "type": "string",
                      "default": "Number of tries exceeded, please request a new code"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}