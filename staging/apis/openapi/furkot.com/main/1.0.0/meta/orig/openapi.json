{
  "openapi": "3.0.1",
  "info": {
    "title": "Furkot Trips",
    "description": "Furkot provides Rest API to access user trip data.\nUsing Furkot API an application can list user trips and display stops for a specific trip.\nFurkot API uses OAuth2 protocol to authorize applications to access data on behalf of users.\n",
    "contact": {
      "email": "trips@furkot.com"
    },
    "version": "1.0.0",
    "x-jentic-source-url": "https://help.furkot.com/widgets/furkot-api.yaml"
  },
  "externalDocs": {
    "description": "Furkot API description",
    "url": "https://help.furkot.com/widgets/furkot-api.html"
  },
  "servers": [
    {
      "url": "https://trips.furkot.com/pub/api"
    }
  ],
  "security": [
    {
      "furkot_auth_access_code": [
        "read:trips"
      ]
    },
    {
      "furkot_auth_implicit": [
        "read:trips"
      ]
    }
  ],
  "paths": {
    "/trip": {
      "get": {
        "description": "list user's trips",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trip"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trip/{trip_id}/stop": {
      "get": {
        "description": "list stops for a trip identified by {trip_id}",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "description": "id of the trip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trip/{trip_id}/skipped": {
      "get": {
        "description": "list of skipped stops for a trip identified by {trip_id}",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "description": "id of the trip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Trip": {
        "required": [
          "begin",
          "end",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of the trip"
          },
          "name": {
            "type": "string",
            "description": "name of the trip"
          },
          "description": {
            "type": "string",
            "description": "description of the trip (truncated to 200 characters)"
          },
          "begin": {
            "type": "string",
            "description": "begin of the trip in its local timezone as YYYY-MM-DDThh:mm",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "description": "end of the trip in its local timezone as YYYY-MM-DDThh:mm",
            "format": "date-time"
          }
        }
      },
      "Step": {
        "required": [
          "address",
          "coordinates",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the stop"
          },
          "address": {
            "type": "string",
            "description": "address of the stop"
          },
          "arrival": {
            "type": "string",
            "description": "arrival at the stop in its local timezone as YYYY-MM-DDThh:mm",
            "format": "date-time"
          },
          "departure": {
            "type": "string",
            "description": "departure from the stop in its local timezone as YYYY-MM-DDThh:mm",
            "format": "date-time"
          },
          "nights": {
            "type": "integer",
            "description": "number of nights",
            "format": "int64"
          },
          "coordinates": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "latitude",
                "format": "float"
              },
              "lon": {
                "type": "number",
                "description": "longitude",
                "format": "float"
              }
            },
            "description": "geographical coordinates of the stop"
          },
          "route": {
            "$ref": "#/components/schemas/Route"
          },
          "url": {
            "type": "string",
            "description": "url of the page with more information about the stop"
          },
          "passthru": {
            "type": "boolean",
            "description": "true for pass-through points anchoring route"
          }
        }
      },
      "Route": {
        "required": [
          "mode",
          "polyline"
        ],
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "description": "travel mode",
            "enum": [
              "car",
              "motorcycle",
              "rv",
              "bicycle",
              "walk",
              "ferry",
              "flight",
              "other"
            ]
          },
          "polyline": {
            "type": "string",
            "description": "route path compatible with Google polyline encoding algorithm"
          },
          "duration": {
            "type": "integer",
            "description": "route duration in seconds",
            "format": "int64"
          },
          "distance": {
            "type": "integer",
            "description": "route distance in meters",
            "format": "int64"
          }
        }
      }
    },
    "securitySchemes": {
      "furkot_auth_access_code": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/oauth/authorize",
            "tokenUrl": "/pub/api/access_token",
            "scopes": {
              "read:trips": "list trips and stops info"
            }
          }
        }
      },
      "furkot_auth_implicit": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "/oauth/authorize",
            "scopes": {
              "read:trips": "list trips and stops info"
            }
          }
        }
      }
    }
  }
}