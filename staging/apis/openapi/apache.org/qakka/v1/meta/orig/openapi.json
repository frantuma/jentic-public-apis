{
  "openapi": "3.0.0",
  "info": {
    "description": "API for Qakka Queue System",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Qakka",
    "version": "v1",
    "x-jentic-source-url": "https://raw.githubusercontent.com/apache/usergrid-qakka/master/docs/swagger.json"
  },
  "servers": [],
  "paths": {
    "/queues": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "getListOfQueues",
        "summary": "Get list of all Queues."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "No Queue object posted, or name field is missing"
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "createQueue",
        "summary": "Create new queue."
      }
    },
    "/queues/{queueName}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "queueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "confirm",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Queue name or confirm flag missing."
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "deleteQueue",
        "summary": "Delete Queue."
      }
    },
    "/queues/{queueName}/config": {
      "get": {
        "parameters": [
          {
            "description": "Name of Queue",
            "in": "path",
            "name": "queueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Queue name or confirm flag missing."
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "getQueueConfig",
        "summary": "Get Queue config."
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "queueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "No Queue object posted, or name field is missing"
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "updateQueueConfig",
        "summary": "Update Queue configuration."
      }
    },
    "/queues/{queueName}/data/{queueMessageId}": {
      "get": {
        "parameters": [
          {
            "description": "Name of Queue",
            "in": "path",
            "name": "queueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of Queue Message for which data is to be returned",
            "in": "path",
            "name": "queueMessageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Message ID invalid"
          },
          "404": {
            "description": "Queue Message or data not found"
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "getMessageData",
        "summary": "Get data associated with a Queue Message."
      }
    },
    "/queues/{queueName}/messages": {
      "get": {
        "parameters": [
          {
            "description": "Name of Queue",
            "in": "path",
            "name": "queueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of messages to get",
            "in": "query",
            "name": "count",
            "required": false,
            "schema": {
              "default": "1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid count parameter"
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "getNextMessages",
        "summary": "Get next Queue Messages from a Queue"
      },
      "post": {
        "parameters": [
          {
            "description": "Name of Queue",
            "in": "path",
            "name": "queueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Regions to which message is to be sent",
            "in": "query",
            "name": "regions",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "delay",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "expiration",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Content type of the data to be sent with Queue Message",
            "in": "query",
            "name": "contentType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "sendMessageBinary",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "items": {
                  "format": "byte",
                  "type": "string"
                },
                "type": "array"
              }
            }
          },
          "description": "Data to be send with Queue Message",
          "required": true
        },
        "summary": "Send Queue Message with a binary data (blob) payload."
      }
    },
    "/queues/{queueName}/messages/{queueMessageId}": {
      "delete": {
        "parameters": [
          {
            "description": "Name of Queue",
            "in": "path",
            "name": "queueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of Queue Message to be acknowledged",
            "in": "path",
            "name": "queueMessageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Queue Message ID invalid, or message not in-flight"
          }
        },
        "tags": [
          "queues"
        ],
        "description": "",
        "operationId": "ackMessage",
        "summary": "Acknowledge that Queue Message has been processed."
      }
    },
    "/status": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "tags": [
          "status"
        ],
        "description": "",
        "operationId": "status",
        "summary": "Status of webapp."
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "description": "Response returned by most Queue API calls.",
        "properties": {
          "count": {
            "description": "Count of Queues or QueueMessages returned by the call.",
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "Informative message intended for client.",
            "type": "string"
          },
          "queueMessages": {
            "description": "Queues Messages returned by the call, or empty if not applicable.",
            "items": {
              "$ref": "#/components/schemas/QueueMessage"
            },
            "type": "array"
          },
          "queues": {
            "description": "Queues returned but the call, or empty if not applicable.",
            "items": {
              "$ref": "#/components/schemas/Queue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Queue": {
        "description": "Specifies the configuration for a Queue.",
        "properties": {
          "name": {
            "description": "Name of queue, must be unique.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "QueueMessage": {
        "description": "A Queue Message",
        "properties": {
          "contentType": {
            "description": "Content-type of data associated with QueueMessage.",
            "type": "string"
          },
          "createDate": {
            "description": "Date that message was received by system.",
            "format": "int64",
            "type": "integer"
          },
          "data": {
            "description": "Embedded JSON to be sent with Queue Message.",
            "type": "string"
          },
          "href": {
            "description": "URL of data associated with Queue Message (if not embedded JSON)",
            "type": "string"
          },
          "messageId": {
            "description": "UUID of Message Data associated with this Queue Message",
            "format": "uuid",
            "type": "string"
          },
          "queueMessageId": {
            "description": "UUID of Queue Message in local region.",
            "format": "uuid",
            "type": "string"
          },
          "queueName": {
            "description": "Name of Queue for message.",
            "type": "string"
          },
          "receivingRegion": {
            "description": "Regions to which message will be sent",
            "type": "string"
          },
          "sendingRegion": {
            "description": "Region from which was sent",
            "type": "string"
          }
        },
        "required": [
          "queueName"
        ],
        "type": "object"
      }
    }
  },
  "tags": [
    {
      "description": "Queue management, send, get and ack.",
      "name": "queues"
    },
    {
      "description": "Status end-point.",
      "name": "status"
    }
  ]
}