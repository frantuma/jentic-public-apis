{
  "openapi": "3.0.0",
  "info": {
    "title": "Contact Center",
    "description": "The Contact Center APIs allow developers to interface with [Contact Center](https://developers.zoom.us/docs/contact-center/) features programmatically.",
    "termsOfService": "https://zoom.us/docs/en-us/zoom_api_license_and_tou.html",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/"
    },
    "version": "2",
    "x-jentic-source-url": "https://developers.zoom.us/api-hub/contact-center/methods/endpoints.json"
  },
  "servers": [
    {
      "url": "https://api.zoom.us/v2"
    }
  ],
  "paths": {
    "/contact_center/address_books": {
      "get": {
        "tags": [
          "Address Books"
        ],
        "summary": "List address books",
        "description": "Return a list of all address books. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_address_books:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listAddressBooks",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "unit_id",
            "in": "query",
            "description": "The address book unit's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Address books list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "address_books": {
                      "type": "array",
                      "description": "Information about the address books.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address_book_id": {
                            "type": "string",
                            "description": "The address book's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "address_book_name": {
                            "type": "string",
                            "description": "The address book's name.",
                            "example": "Address Book"
                          },
                          "address_book_description": {
                            "type": "string",
                            "description": "The address book's description.",
                            "example": "This is an address book."
                          },
                          "total_contacts": {
                            "type": "integer",
                            "description": "The address book's total number of contacts.",
                            "example": 30
                          },
                          "unit_id": {
                            "type": "string",
                            "description": "The address book unit's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "unit_name": {
                            "type": "string",
                            "description": "The address book unit's name.",
                            "example": "Unit"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1902` <br>\n The `unit_id` field cannot be an empty value. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1901` <br>\n Unit does not exist: $unitId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:read:admin",
              "contact_center:read:list_address_books:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_address_books:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Address Books"
        ],
        "summary": "Create an address book",
        "description": "Create an [address book](https://support.zoom.us/hc/en-us/articles/4471544949389). An address book is a collection of consumer information like display names, phone numbers, and locations. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:address_book:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createAddressBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unit_id": {
                    "type": "string",
                    "description": "The address book's unit ID.",
                    "example": "zeYjXoDOS_eV1QmTpj63PQ"
                  },
                  "address_book_name": {
                    "type": "string",
                    "description": "The address book's name.",
                    "example": "Address Book"
                  },
                  "address_book_description": {
                    "type": "string",
                    "description": "The address book's description.",
                    "example": "This is an address book."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \n Address book created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address_book_id": {
                      "type": "string",
                      "description": "The address book's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "address_book_name": {
                      "type": "string",
                      "description": "The address book's name.",
                      "example": "Address Book"
                    },
                    "address_book_description": {
                      "type": "string",
                      "description": "The address book's description.",
                      "example": "This is an address book."
                    },
                    "unit_id": {
                      "type": "string",
                      "description": "The address book unit's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "unit_name": {
                      "type": "string",
                      "description": "The address book unit's name.",
                      "example": "Unit"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1902` <br>\n The `unit_id` field cannot be an empty value. <br>\n **Error Code:** `1903` <br>\n The `address_book_name` field cannot be an empty value. <br>\n**Error Code:** `2003` <br>\n The address book name is not supported. <br>\n**Error Code:** `2002` <br>\n Address book already exists. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1901` <br>\n Unit does not exist: $unitId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:write:address_book:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:address_book:admin"
          ]
        }
      }
    },
    "/contact_center/address_books/units": {
      "get": {
        "tags": [
          "Address Books"
        ],
        "summary": "List address book units",
        "description": "Return all address book units. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_address_book_units:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUnits",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Units list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "units": {
                      "type": "array",
                      "description": "Information about the address book units.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unit_id": {
                            "type": "string",
                            "description": "The address book unit's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "unit_name": {
                            "type": "string",
                            "description": "The address book unit's name.",
                            "example": "Example"
                          },
                          "unit_description": {
                            "type": "string",
                            "description": "The address book unit's description.",
                            "example": "This is a unit description."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:read:admin",
              "contact_center:read:list_address_book_units:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_address_book_units:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Address Books"
        ],
        "summary": "Create an address book unit",
        "description": "Create an [address book unit](https://support.zoom.us/hc/en-us/articles/4471495629837-Managing-address-book-units). Admins can use address book units to organize several [address books](https://support.zoom.us/hc/en-us/articles/4471544949389#:~:text=An%20address%20book%20is%20a%20collection%20of%20consumer%20information%20like%20display%20names%2C%20phone%20numbers%2C%20and%20locations.). \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:address_book_unit:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createUnit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unit_name": {
                    "type": "string",
                    "description": "The address book unit's name.",
                    "example": "Example"
                  },
                  "unit_description": {
                    "type": "string",
                    "description": "The address book unit's description.",
                    "example": "This is a unit."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \n Unit created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unit_id": {
                      "type": "string",
                      "description": "The address book unit's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "unit_name": {
                      "type": "string",
                      "description": "The address book unit's name.",
                      "example": "Example"
                    },
                    "unit_description": {
                      "type": "string",
                      "description": "The address book unit's description.",
                      "example": "This is a unit."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1904` <br>\n Unit already exists. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:write:address_book_unit:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:address_book_unit:admin"
          ]
        }
      }
    },
    "/contact_center/address_books/units/{unitId}": {
      "get": {
        "tags": [
          "Address Books"
        ],
        "summary": "Get an address book unit",
        "description": "Get information about an address book unit. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:address_book_unit:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getUnit",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "description": "The address book unit's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Unit returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unit_id": {
                      "type": "string",
                      "description": "The address book unit's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "unit_name": {
                      "type": "string",
                      "description": "The address book unit's name.",
                      "example": "Example"
                    },
                    "unit_description": {
                      "type": "string",
                      "description": "The address book unit's description.",
                      "example": "This is a unit description."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1901` <br>\n Unit does not exist: $unitId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:read:admin",
              "contact_center:read:address_book_unit:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:address_book_unit:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Address Books"
        ],
        "summary": "Delete an address book unit",
        "description": "Delete an address book unit. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:address_book_unit:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteUnit",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "description": "The address book unit's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Unit deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1905` <br>\n Salesforce integration unit cannot be updated and deleted. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1901` <br>\n Unit does not exist: $unitId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:delete:address_book_unit:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:address_book_unit:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Address Books"
        ],
        "summary": "Update an address book unit",
        "description": "Update an address book unit. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:address_book_unit:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateUnit",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "description": "The address book unit's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unit_name": {
                    "type": "string",
                    "description": "The address book unit's name.",
                    "example": "example"
                  },
                  "unit_description": {
                    "type": "string",
                    "description": "The address book unit's description.",
                    "example": "This is a Demo Unit."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Unit updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1905` <br>\n Salesforce integration unit cannot be updated or deleted. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1901` <br>\n Unit does not exist: $unitId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:update:address_book_unit:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:address_book_unit:admin"
          ]
        }
      }
    },
    "/contact_center/address_books/{addressBookId}": {
      "get": {
        "tags": [
          "Address Books"
        ],
        "summary": "Get an address book",
        "description": "Get information about an address book. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:address_book:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAddressBook",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Address book list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address_book_id": {
                      "type": "string",
                      "description": "The address book's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "address_book_name": {
                      "type": "string",
                      "description": "The address book's name.",
                      "example": "Address Book"
                    },
                    "address_book_description": {
                      "type": "string",
                      "description": "The address book's description.",
                      "example": "This is an address book."
                    },
                    "total_contacts": {
                      "type": "integer",
                      "description": "The address book's total number of contacts.",
                      "example": 30
                    },
                    "unit_id": {
                      "type": "string",
                      "description": "The address book unit's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "unit_name": {
                      "type": "string",
                      "description": "The address book unit's name.",
                      "example": "Unit"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Address book does not exist: $addressBookId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:read:admin",
              "contact_center:read:address_book:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:address_book:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Address Books"
        ],
        "summary": "Delete an address book",
        "description": "Delete an address book. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:address_book:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteAddressBook",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Address Book deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Address book does not exist: $addressBookId <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:delete:address_book:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:address_book:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Address Books"
        ],
        "summary": "Update an address book",
        "description": "Update an address book's information. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:address_book:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateAddressBook",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_book_name": {
                    "type": "string",
                    "description": "The address book's name.",
                    "example": "example"
                  },
                  "address_book_description": {
                    "type": "string",
                    "description": "The address book's description.",
                    "example": "This is a Demo Address Book."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Address book updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2004` <br>\n Salesforce integration address book cannot be updated or deleted. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Address book does not exist: $addressBookId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:update:address_book:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:address_book:admin"
          ]
        }
      }
    },
    "/contact_center/address_books/{addressBookId}/contacts": {
      "get": {
        "tags": [
          "Address Books"
        ],
        "summary": "List address book contacts",
        "description": "Returns a maximum of 10,000 contacts in an address book.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_address_book_contacts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listContacts",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "emails",
            "in": "query",
            "description": "The contact's email address. Multiple emails can be searched. Only an exact match is supported. Accomodates a maximum of 10 emails.",
            "required": false,
            "schema": {
              "maxItems": 10,
              "type": "array",
              "example": [
                "user@example.com"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "phone_numbers",
            "in": "query",
            "description": "The contact's phone number. Multiple phone numbers can be searched, Only an exact match is supported. Accomodates a maximum of 10 phone numbers.",
            "required": false,
            "schema": {
              "maxItems": 10,
              "type": "array",
              "example": [
                "+12048002447"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Contacts list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "contacts": {
                      "type": "array",
                      "description": "Information about the contacts.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact_id": {
                            "type": "string",
                            "description": "The contact's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The contact's name.",
                            "example": "Jill Chill"
                          },
                          "first_name": {
                            "type": "string",
                            "description": "The contact's first name.",
                            "example": "Jill"
                          },
                          "last_name": {
                            "type": "string",
                            "description": "The contact's last name.",
                            "example": "Chill"
                          },
                          "phone_numbers": {
                            "maxItems": 5,
                            "type": "array",
                            "description": "The contact's phone numbers.",
                            "items": {
                              "type": "string",
                              "example": "+12048002447"
                            }
                          },
                          "emails": {
                            "maxItems": 4,
                            "type": "array",
                            "description": "The contact's email addresses.",
                            "items": {
                              "type": "string",
                              "format": "email",
                              "example": "user@example.com"
                            }
                          },
                          "location": {
                            "type": "string",
                            "description": "The contact's location.",
                            "example": "San Jose"
                          },
                          "account_number": {
                            "type": "string",
                            "description": "The contact's account number.",
                            "example": "112233445566"
                          },
                          "company": {
                            "type": "string",
                            "description": "The contact's company.",
                            "example": "Example"
                          },
                          "role": {
                            "type": "string",
                            "description": "The contact's role.",
                            "example": "Agent"
                          },
                          "address_book_id": {
                            "type": "string",
                            "description": "The address book's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "address_book_name": {
                            "type": "string",
                            "description": "The address book's name.",
                            "example": "Address Book"
                          },
                          "variables": {
                            "type": "array",
                            "description": "Information about address book variables.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "variable_group_id": {
                                  "type": "string",
                                  "description": "The variable group's ID.",
                                  "example": "afececcd-0c9f-48de-9d19-0c84e8bdfeca"
                                },
                                "variable_id": {
                                  "type": "string",
                                  "description": "The variable's ID.",
                                  "example": "zeYjXoDOS_eV1QmTpj63PQ"
                                },
                                "variable_name": {
                                  "type": "string",
                                  "description": "The variable's name.",
                                  "example": "variable demo name"
                                },
                                "data_type": {
                                  "type": "string",
                                  "description": "The variable's data type.",
                                  "example": "string",
                                  "enum": [
                                    "string",
                                    "boolean"
                                  ]
                                },
                                "variable_value": {
                                  "type": "string",
                                  "description": "The variable's value.",
                                  "example": "variable value demo"
                                }
                              }
                            }
                          },
                          "consumer_ids": {
                            "maxItems": 10,
                            "type": "array",
                            "description": "The consumer IDs associated with the contact.",
                            "items": {
                              "type": "string",
                              "description": "The consumer's unique ID.",
                              "example": "cvC2JxWkToWZsJUenBvNnw"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Number of phone numbers exceeds max limit of 10 <br>\n **Error Code:** `300` <br>\n Number of emails exceeds max limit of 10 <br>\n**Error Code:** `300` <br>\n Invalid phone number <br>\n**Error Code:** `300` <br>\n Invalid email <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Address book does not exist: $addressBookId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:read:admin",
              "contact_center:read:list_address_book_contacts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_address_book_contacts:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Address Books"
        ],
        "summary": "Create an address book contact",
        "description": "Create a new contact in an [address book](https://support.zoom.us/hc/en-us/articles/4471544949389). During an active engagement, the Zoom desktop client will display information from the address book if that customer is a contact in the address book. If the consumer is not in the address book, agents can add a new contact and choose which address book the contact belongs to. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:address_book_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createContact",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "phone_numbers"
                ],
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "The contact's display name.",
                    "example": "Jill Chill"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The contact's first name.",
                    "example": "Jill"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The contact's last name.",
                    "example": "Chill"
                  },
                  "phone_numbers": {
                    "maxItems": 5,
                    "type": "array",
                    "description": "The contact's phone numbers. You must provide this field and/or the `email` field when you create a contact.",
                    "items": {
                      "type": "string",
                      "example": "+12048002447"
                    }
                  },
                  "emails": {
                    "maxItems": 4,
                    "type": "array",
                    "description": "The contact's email addresses. You must provide this field and/or the `phone_numbers` field when you create a contact.",
                    "items": {
                      "type": "string",
                      "format": "email",
                      "example": "user@example.com"
                    }
                  },
                  "location": {
                    "type": "string",
                    "description": "The contact's location.",
                    "example": "San Jose"
                  },
                  "account_number": {
                    "type": "string",
                    "description": "The contact's account number.",
                    "example": "112233445566"
                  },
                  "company": {
                    "type": "string",
                    "description": "The contact's company.",
                    "example": "Example"
                  },
                  "role": {
                    "type": "string",
                    "description": "The contact's role.",
                    "example": "Agent"
                  },
                  "variables": {
                    "type": "array",
                    "description": "Information about address book variables.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "variable_id": {
                          "type": "string",
                          "description": "The variable's ID.",
                          "example": "zeYjXoDOS_eV1QmTpj63PQ"
                        },
                        "variable_value": {
                          "type": "string",
                          "description": "The variable's value.",
                          "example": "variable value demo"
                        }
                      }
                    }
                  },
                  "consumer_ids": {
                    "maxItems": 10,
                    "type": "array",
                    "description": "The consumer IDs to be associated with the contact.",
                    "items": {
                      "type": "string",
                      "description": "The consumer's unique ID.",
                      "example": "cvC2JxWkToWZsJUenBvNnw"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \n Contact created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contact_id": {
                      "type": "string",
                      "description": "The contact's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The contact's name.",
                      "example": "Jill Chill"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "The contact's first name.",
                      "example": "Jill"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "The contact's last name.",
                      "example": "Chill"
                    },
                    "phone_numbers": {
                      "maxItems": 5,
                      "type": "array",
                      "description": "The contact's phone numbers.",
                      "items": {
                        "type": "string",
                        "example": "+12048002447"
                      }
                    },
                    "emails": {
                      "maxItems": 4,
                      "type": "array",
                      "description": "The contact's email addresses.",
                      "items": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                      }
                    },
                    "location": {
                      "type": "string",
                      "description": "The contact's location.",
                      "example": "San Jose"
                    },
                    "account_number": {
                      "type": "string",
                      "description": "The contact's account number.",
                      "example": "112233445566"
                    },
                    "company": {
                      "type": "string",
                      "description": "The contact's company.",
                      "example": "Example"
                    },
                    "role": {
                      "type": "string",
                      "description": "The contact's role.",
                      "example": "Agent"
                    },
                    "address_book_id": {
                      "type": "string",
                      "description": "The address book's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "address_book_name": {
                      "type": "string",
                      "description": "The address book's name.",
                      "example": "Address Book"
                    },
                    "variables": {
                      "type": "array",
                      "description": "Information about address book variables.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variable_group_id": {
                            "type": "string",
                            "description": "The variable group's ID.",
                            "example": "afececcd-0c9f-48de-9d19-0c84e8bdfeca"
                          },
                          "variable_id": {
                            "type": "string",
                            "description": "The variable's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "variable_name": {
                            "type": "string",
                            "description": "The variable's name.",
                            "example": "variable demo name"
                          },
                          "data_type": {
                            "type": "string",
                            "description": "The variable's data type.",
                            "example": "string",
                            "enum": [
                              "string",
                              "boolean"
                            ]
                          },
                          "variable_value": {
                            "type": "string",
                            "description": "The variable's value.",
                            "example": "variable value demo"
                          }
                        }
                      }
                    },
                    "consumer_ids": {
                      "maxItems": 10,
                      "type": "array",
                      "description": "The consumer IDs associated with the contact.",
                      "items": {
                        "type": "string",
                        "description": "The consumer's unique ID.",
                        "example": "cvC2JxWkToWZsJUenBvNnw"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2102` <br>\n At least one of email or phone number fields should be not empty. <br>\n**Error Code:** `2104` <br>\n The `display_name` field cannot be an empty value. <br>\n**Error Code:** `2005` <br>\n Salesforce integration contact can not be added, updated, or deleted. <br>\n**Error Code:** `2106` <br>\n Invalid consumer IDs: $consumerIds. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Address book does not exist: $addressBookId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:write:address_book_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:address_book_contact:admin"
          ]
        }
      }
    },
    "/contact_center/address_books/{addressBookId}/contacts/{contactId}": {
      "get": {
        "tags": [
          "Address Books"
        ],
        "summary": "Get an address book contact",
        "description": "Use this API to get information about an address book's contact. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:address_book_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getContact",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "The contact's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Contact returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contact_id": {
                      "type": "string",
                      "description": "The contact's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The contact's name.",
                      "example": "Jill Chill"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "The contact's first name.",
                      "example": "Jill"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "The contact's last name.",
                      "example": "Chill"
                    },
                    "phone_numbers": {
                      "maxItems": 5,
                      "type": "array",
                      "description": "The contact's phone numbers.",
                      "items": {
                        "type": "string",
                        "example": "+12048002447"
                      }
                    },
                    "emails": {
                      "maxItems": 4,
                      "type": "array",
                      "description": "The contact's email addresses.",
                      "items": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                      }
                    },
                    "location": {
                      "type": "string",
                      "description": "The contact's location.",
                      "example": "San Jose"
                    },
                    "account_number": {
                      "type": "string",
                      "description": "The contact's account number.",
                      "example": "112233445566"
                    },
                    "company": {
                      "type": "string",
                      "description": "The contact's company.",
                      "example": "Example"
                    },
                    "role": {
                      "type": "string",
                      "description": "The contact's role.",
                      "example": "Agent"
                    },
                    "address_book_id": {
                      "type": "string",
                      "description": "The address book's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "address_book_name": {
                      "type": "string",
                      "description": "The address book's name.",
                      "example": "Address Book"
                    },
                    "variables": {
                      "type": "array",
                      "description": "Information about address book variables.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variable_group_id": {
                            "type": "string",
                            "description": "The variable group's ID.",
                            "example": "afececcd-0c9f-48de-9d19-0c84e8bdfeca"
                          },
                          "variable_id": {
                            "type": "string",
                            "description": "The variable's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "variable_name": {
                            "type": "string",
                            "description": "The variable's name.",
                            "example": "variable demo name"
                          },
                          "data_type": {
                            "type": "string",
                            "description": "The variable's data type.",
                            "example": "string",
                            "enum": [
                              "string",
                              "boolean"
                            ]
                          },
                          "variable_value": {
                            "type": "string",
                            "description": "The variable's value.",
                            "example": "variable value demo"
                          }
                        }
                      }
                    },
                    "consumer_ids": {
                      "maxItems": 10,
                      "type": "array",
                      "description": "The consumer IDs associated with the contact.",
                      "items": {
                        "type": "string",
                        "description": "The consumer's unique ID.",
                        "example": "cvC2JxWkToWZsJUenBvNnw"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2101` <br>\n Contact does not exist: $contactId. <br>\n**Error Code:** `2001` <br>\n Address book does not exist: $addressBookId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:read:admin",
              "contact_center:read:address_book_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:address_book_contact:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Address Books"
        ],
        "summary": "Delete an address book contact",
        "description": "Delete an contact from an address book. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:address_book_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "contactDelete",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "The contact's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Contact deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2005` <br>\n Salesforce integration contact can not be added, updated, or deleted. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2101` <br>\n Contact does not exist: $contactId. <br>\n**Error Code:** `2001` <br>\n Address book does not exist: $addressBookId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:delete:address_book_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:address_book_contact:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Address Books"
        ],
        "summary": "Update an address book contact",
        "description": "Use this API to update an address book's contact. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_contact:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:address_book_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateContact",
        "parameters": [
          {
            "name": "addressBookId",
            "in": "path",
            "description": "The address book's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "The contact's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "description": "AddressBook",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "phone_numbers"
                ],
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "The contact's display name.",
                    "example": "Jill Chill"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The contact's first name.",
                    "example": "Jill"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The contact's last name.",
                    "example": "Chill"
                  },
                  "phone_numbers": {
                    "maxItems": 5,
                    "type": "array",
                    "description": "The contact's phone numbers. You must provide this field and/or the `email` field when you create a contact.",
                    "items": {
                      "type": "string",
                      "example": "+12048002447"
                    }
                  },
                  "emails": {
                    "maxItems": 4,
                    "type": "array",
                    "description": "The contact's email addresses. You must provide this field and/or the `phone_numbers` field when you create a contact.",
                    "items": {
                      "type": "string",
                      "format": "email",
                      "example": "user@example.com"
                    }
                  },
                  "location": {
                    "type": "string",
                    "description": "The contact's location.",
                    "example": "San Jose"
                  },
                  "account_number": {
                    "type": "string",
                    "description": "The contact's account number.",
                    "example": "112233445566"
                  },
                  "company": {
                    "type": "string",
                    "description": "The contact's company.",
                    "example": "Example"
                  },
                  "role": {
                    "type": "string",
                    "description": "The contact's role.",
                    "example": "Agent"
                  },
                  "variables": {
                    "type": "array",
                    "description": "Information about address book variables.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "variable_id": {
                          "type": "string",
                          "description": "The variable's ID.",
                          "example": "zeYjXoDOS_eV1QmTpj63PQ"
                        },
                        "variable_value": {
                          "type": "string",
                          "description": "The variable's value.",
                          "example": "variable value demo"
                        }
                      }
                    }
                  },
                  "consumer_ids": {
                    "maxItems": 10,
                    "type": "array",
                    "description": "The consumer IDs to be associated with the contact.",
                    "items": {
                      "type": "string",
                      "description": "The consumer's unique ID.",
                      "example": "cvC2JxWkToWZsJUenBvNnw"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Contact updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2005` <br>\n Salesforce integration contact cannot be added, updated, or deleted. <br>\n**Error Code:** `2106` <br>\n Invalid consumer Ids: $consumerIds. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2101` <br>\n Contact does not exist: $contactId. <br>\n**Error Code:** `2001` <br>\n Address book does not exist: $addressBookId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_contact:write:admin",
              "contact_center:update:address_book_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_contact:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:address_book_contact:admin"
          ]
        }
      }
    },
    "/contact_center/system_statuses": {
      "get": {
        "tags": [
          "Agent Statuses"
        ],
        "summary": "List system statuses",
        "description": "Get a list of system statuses. Administrators can create system statuses, such as **Maintenance**.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_preference:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_system_statues:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listSystemStatus",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "status_category",
            "in": "query",
            "description": "The status's category.\n\n* `agent_status` - User's system statuses.\n \n* `queue_opt_out_and_not_ready_status` - User's **Queue Opt-Out** and **Not Ready** reasons. **Not Ready** reasons are referenced by field `sub_status_name` in the Users APIs, such as [List users' profiles](https://developers.zoom.us/docs/contact-center/apis/#operation/users).",
            "required": false,
            "schema": {
              "type": "string",
              "example": "agent_status",
              "enum": [
                "agent_status",
                "queue_opt_out_and_not_ready_status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nSystem statuses returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "statuses": {
                      "type": "array",
                      "description": "Information about the statuses.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status_id": {
                            "type": "string",
                            "description": "The status ID.",
                            "example": "1"
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline. \n* Ready. \n* Not Ready. \n* Occupied. \n * A custom user status, like **Lunch**.",
                            "example": "Lunch",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied",
                              "string"
                            ]
                          },
                          "status_type": {
                            "type": "string",
                            "description": "The status's type, used to determine default or custom status.",
                            "example": "default",
                            "enum": [
                              "default",
                              "custom"
                            ]
                          },
                          "status_category": {
                            "type": "string",
                            "description": "The status's category.\n\n* `agent_status` - User's system statuses.\n\n* `queue_opt_out_and_not_ready_status` - User's **Queue Opt-Out** and **Not Ready** reasons. **Not Ready** reasons are referenced by field `sub_status_name` in the Users APIs, such as [List users' profiles](https://developers.zoom.us/docs/contact-center/apis/#operation/users).",
                            "example": "agent_status",
                            "enum": [
                              "agent_status",
                              "queue_opt_out_and_not_ready_status"
                            ]
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Only applicable to a status with the `queue_opt_out_and_not_ready_status` category. If enabled, the agent can set the status as a sub-status for **Not Ready** or **Queue Opt Out**.",
                            "example": true
                          },
                          "status_assigned_queues": {
                            "type": "array",
                            "description": "Information about the queues that are using the 'Not Ready' or opt out of queue status.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Queue ID.",
                                  "example": "123"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Queue name.",
                                  "example": "customer queue"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_preference:read:admin",
              "contact_center:read:list_system_statues:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_preference:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_system_statues:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Agent Statuses"
        ],
        "summary": "Create a system status",
        "description": "Create custom statuses for the `agent_status` and `queue_opt_out_and_not_ready_status` categories. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_preference:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:system_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createSystemStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status_name": {
                    "type": "string",
                    "description": "The status's name.",
                    "example": "Lunch"
                  },
                  "status_category": {
                    "type": "string",
                    "description": "The status's category.\n\n* `agent_status` - User's system statuses.\n\n* `queue_opt_out_and_not_ready_status` - User's **Queue Opt-Out** and **Not Ready** reasons. **Not Ready** reasons are referenced by field `sub_status_name` in the **Users** APIs, such as [List users' profiles](https://developers.zoom.us/docs/contact-center/apis/#operation/users).",
                    "example": "agent_status",
                    "enum": [
                      "agent_status",
                      "queue_opt_out_and_not_ready_status"
                    ]
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Only applicable to a status with the `queue_opt_out_and_not_ready_status` category. If enabled, the agent can set a status as a sub-status for **Not Ready** or **Queue Opt Out**.",
                    "example": true,
                    "default": true
                  },
                  "status_assigned_queues": {
                    "type": "array",
                    "description": "Queues that the 'Not Ready' or opt out of queue status will be assigned to.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Queue ID.",
                          "example": "123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "System status successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_id": {
                      "type": "string",
                      "description": "The status ID.",
                      "example": "1"
                    },
                    "status_name": {
                      "type": "string",
                      "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, like **Lunch**.",
                      "example": "Lunch",
                      "enum": [
                        "Offline",
                        "Ready",
                        "Not Ready",
                        "Occupied"
                      ]
                    },
                    "status_type": {
                      "type": "string",
                      "description": "The status's type, used to determine default or custom status.",
                      "example": "default",
                      "enum": [
                        "default",
                        "custom"
                      ]
                    },
                    "status_category": {
                      "type": "string",
                      "description": "The status's category.\n\n* `agent_status` - User's system statuses.\n\n* `queue_opt_out_and_not_ready_status` - User's **Queue Opt-Out** and **Not Ready** reasons. **Not Ready** reasons are referenced by field `sub_status_name` in the **Users** APIs, such as [List users' profiles](https://developers.zoom.us/docs/contact-center/apis/#operation/users).",
                      "example": "agent_status",
                      "enum": [
                        "agent_status",
                        "queue_opt_out_and_not_ready_status"
                      ]
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Only applicable to a status with the `queue_opt_out_and_not_ready_status` category. If enabled, the agent can set the status as a sub-status for **Not Ready** or **Queue Opt Out**.",
                      "example": true
                    }
                  },
                  "description": "Information about the user's status."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1105` <br>\n Can't create more custom `agent_status` because there's a maximum of 15. <br>\n**Error Code:** `1106` <br>\n Can't create more custom `queue_opt_out_and_not_ready_status` because there's a maximum of 15. <br>\n**Error Code:** `1107` <br>\n Creating the status. Please wait a moment. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1104` <br>\n Status category does not exist: $status_category. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_preference:write:admin",
              "contact_center:write:system_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_preference:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:system_status:admin"
          ]
        }
      }
    },
    "/contact_center/system_statuses/{statusId}": {
      "get": {
        "tags": [
          "Agent Statuses"
        ],
        "summary": "Get a system status",
        "description": "Get information about a system status. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_preference:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:system_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAStatus",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "The status ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nSystem status returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_id": {
                      "type": "string",
                      "description": "The status ID.",
                      "example": "1"
                    },
                    "status_name": {
                      "type": "string",
                      "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline. \n* Ready. \n* Not Ready. \n* Occupied. \n* A custom user status, like **Lunch**.",
                      "example": "Lunch",
                      "enum": [
                        "Offline",
                        "Ready",
                        "Not Ready",
                        "Occupied"
                      ]
                    },
                    "status_type": {
                      "type": "string",
                      "description": "The status's type, used to determine default or custom status.",
                      "example": "default",
                      "enum": [
                        "default",
                        "custom"
                      ]
                    },
                    "status_category": {
                      "type": "string",
                      "description": "The status's category.\n\n* `agent_status` - User's system statuses.\n\n* `queue_opt_out_and_not_ready_status` - User's **Queue Opt-Out** and **Not Ready** reasons. **Not Ready** reasons are referenced by field `sub_status_name` in the Users APIs, such as [List users' profiles](https://developers.zoom.us/docs/contact-center/apis/#operation/users).",
                      "example": "agent_status",
                      "enum": [
                        "agent_status",
                        "queue_opt_out_and_not_ready_status"
                      ]
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Only applicable to a status with the `queue_opt_out_and_not_ready_status` category. If enabled, the agent can set the status as a sub-status for **Not Ready** or **Queue Opt Out**.",
                      "example": true
                    },
                    "status_assigned_queues": {
                      "type": "array",
                      "description": "Information about the queues that are using the 'Not Ready' or opt out of queue status.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Queue ID.",
                            "example": "123"
                          },
                          "value": {
                            "type": "string",
                            "description": "Queue name.",
                            "example": "customer queue"
                          }
                        }
                      }
                    }
                  },
                  "description": "Information about the user's status."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1101` <br>\n Status does not exist: $statusId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_preference:read:admin",
              "contact_center:read:system_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_preference:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:system_status:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Agent Statuses"
        ],
        "summary": "Delete a system status",
        "description": "Delete a custom status for the `agent_status` and `queue_opt_out_and_not_ready_status categories`.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_preference:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:system_status:admin`",
        "operationId": "deleteSystemStatus",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "The status ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nSystem status deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1108` <br>\n Status is default. Only custom statuses can be modified. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1101` <br>\n Status does not exist: $statusId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_preference:write:admin",
              "contact_center:delete:system_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_preference:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:system_status:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Agent Statuses"
        ],
        "summary": "Update a system status",
        "description": "Update a custom status for the `agent_status` and `queue_opt_out_and_not_ready_status` categories. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_preference:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:system_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateSystemStatus",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "The status ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status_name": {
                    "type": "string",
                    "description": "The status's name.",
                    "example": "Lunch"
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Only applicable to a status with the `queue_opt_out_and_not_ready_status` category. If enabled, the agent can set the status as a sub-status for **Not Ready** or **Queue Opt Out**.",
                    "example": true,
                    "default": true
                  },
                  "status_assigned_queues": {
                    "type": "array",
                    "description": "Queues that the 'Not Ready' or opt out of queue status will be assigned to.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Queue ID.",
                          "example": "123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nSystem status updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Parameter `status_name` is required. <br>\n**Error Code:** `1103` <br>\n The system status already exists. <br>\n**Error Code:** `1107` <br>\n Updating status. Please wait a moment. <br>\n**Error Code:** `1108` <br>\n Status is default. Only custom statuses can be modified. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1101` <br>\n Status does not exist: $statusId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_preference:write:admin",
              "contact_center:update:system_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_preference:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:system_status:admin"
          ]
        }
      }
    },
    "/contact_center/asset_library/assets": {
      "get": {
        "tags": [
          "Asset Library"
        ],
        "summary": "List assets",
        "description": "List Contact Center assets.\n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listAssets",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "asset_type",
            "in": "query",
            "description": "The asset's type.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "audio"
              ],
              "enum": [
                "audio",
                "image",
                "script",
                "slides",
                "text",
                "video",
                "saved_reply"
              ]
            }
          },
          {
            "name": "asset_language_code",
            "in": "query",
            "description": "The asset's language code enum.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "zh-CN"
              ],
              "enum": [
                "zh-CN",
                "zh-TW",
                "yue-CN",
                "cmn-CN",
                "da-DK",
                "nl-NL",
                "en-AU",
                "en-NZ",
                "en-GB",
                "en-US",
                "fr-CA",
                "fr-FR",
                "de-DE",
                "it-IT",
                "ja-JP",
                "ko-KR",
                "pl-PL",
                "pt-BR",
                "pt-PT",
                "ro-RO",
                "ru-RU",
                "es-ES",
                "es-MX",
                "es-US",
                "sv-SE",
                "tr-TR"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nAssets returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "assets": {
                      "type": "array",
                      "description": "Array of assets.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "asset_id": {
                            "type": "string",
                            "description": "The asset's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "asset_name": {
                            "type": "string",
                            "description": "The asset's name.",
                            "example": "My asset name."
                          },
                          "asset_description": {
                            "type": "string",
                            "description": "The asset's description.",
                            "example": "My asset description."
                          },
                          "asset_type": {
                            "type": "string",
                            "description": "The asset's type.",
                            "example": "image",
                            "enum": [
                              "audio",
                              "image",
                              "script",
                              "slides",
                              "text",
                              "video",
                              "saved_reply"
                            ]
                          },
                          "asset_category_id": {
                            "type": "string",
                            "description": "The asset's category ID.",
                            "example": "8ONs9XW4S9a2Lco9O0GdCw"
                          },
                          "asset_category_name": {
                            "type": "string",
                            "description": "The asset's category name.",
                            "example": "Sales Category"
                          },
                          "asset_language_code": {
                            "type": "string",
                            "description": "The asset's language code.",
                            "example": "zh-CN",
                            "enum": [
                              "zh-CN",
                              "zh-TW",
                              "yue-CN",
                              "cmn-CN",
                              "da-DK",
                              "nl-NL",
                              "en-AU",
                              "en-NZ",
                              "en-GB",
                              "en-US",
                              "fr-CA",
                              "fr-FR",
                              "de-DE",
                              "it-IT",
                              "ja-JP",
                              "ko-KR",
                              "pl-PL",
                              "pt-BR",
                              "pt-PT",
                              "ro-RO",
                              "ru-RU",
                              "es-ES",
                              "es-MX",
                              "es-US",
                              "sv-SE",
                              "tr-TR"
                            ]
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user that last modified the asset.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the asset was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          }
                        },
                        "description": "Information about the asset."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:read:admin",
              "contact_center:read:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:asset_library:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Create an asset",
        "description": "Create a asset.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createAnAsset",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "asset_items",
                  "asset_name",
                  "asset_type"
                ],
                "type": "object",
                "properties": {
                  "asset_name": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The asset's name.",
                    "example": "asset name"
                  },
                  "asset_description": {
                    "maxLength": 256,
                    "type": "string",
                    "description": "The asset's description.",
                    "example": "This is an audio asset."
                  },
                  "asset_type": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "The asset's type.",
                    "example": "audio",
                    "enum": [
                      "audio",
                      "image",
                      "slides",
                      "text",
                      "video",
                      "saved_reply"
                    ]
                  },
                  "category_id": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The asset category's ID.",
                    "example": "bnGEj1yrRb6qlNMvyMK08g"
                  },
                  "asset_items": {
                    "type": "array",
                    "description": "A list of the asset's items.\n\n### Restriction\n Each item must have a different `asset_item_language`, and only one item can have a `is_default` set to `true`.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "asset_item_name": {
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string",
                          "description": "The asset item's name.",
                          "example": "english audio"
                        },
                        "asset_item_language": {
                          "maxLength": 10,
                          "minLength": 1,
                          "type": "string",
                          "description": "The asset item's language code.",
                          "example": "en-US",
                          "enum": [
                            "zh-CN",
                            "zh-TW",
                            "yue-CN",
                            "cmn-CN",
                            "da-DK",
                            "nl-NL",
                            "en-AU",
                            "en-NZ",
                            "en-GB",
                            "en-US",
                            "fr-CA",
                            "fr-FR",
                            "de-DE",
                            "it-IT",
                            "ja-JP",
                            "ko-KR",
                            "pl-PL",
                            "pt-BR",
                            "pt-PT",
                            "ro-RO",
                            "ru-RU",
                            "es-ES",
                            "es-MX",
                            "es-US",
                            "sv-SE",
                            "tr-TR"
                          ]
                        },
                        "upload_file": {
                          "type": "string",
                          "description": "The uploaded file in binary format. \nOnly works for `asset_type`s `audio`, `image`, `video` and `slides`.\n \nThis field is not required if you create a TTS item when creating or updating an audio asset.\n\n### Allowed file extension\n\n- audio : mp3, wav\n- image : jpeg, jpg, jpe, jif, jfif, png, gif\n- slides : pdf\n- video : mp4, mov\n \n### Maximum filesize support\n\nA single request can upload a maximum of 100MB.\nSingle file maximum filesize: \n- audio : 10M\n- image : 10M\n- slides : 10M\n- video : 100M ",
                          "format": "binary",
                          "example": "Vm10V1UxUXhSWGxTYTJoV1lUSm9iMVZxUm5kamJGWjFZMGhPYVZadVFsaFhXSEJYVkd4WmQwNVlaRlZOVjA0MFdWVmFXbVZ0UmtsVWJGWlRaV3RKTUZkclVrSmxSVEI0VVd4V1RsSkVRVGs9"
                        },
                        "asset_item_content": {
                          "maxLength": 500,
                          "type": "string",
                          "description": "The asset item's content.\nOnly works for `asset_type`s `text` and `saved_reply`.",
                          "example": "text asset content"
                        },
                        "is_default": {
                          "type": "boolean",
                          "description": "Whether this item is the default of the asset. Each asset can only have one `isDefault` set to `true`.",
                          "example": true
                        },
                        "asset_item_voice": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The asset item's text-to-speech voice. It only works for the audio type.\n\nWhen you want to create a TTS asset item, need to fill in the `asset_item_file_url` and `asset_item_content`, but don't need to fill in the `upload_file` field.\n\nNot every language supports TTS, and each language has a different voice.\n\n| asset_item_language | asset_item_voice                                                                                                                      |\n|---------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n | yue-CN              | Hiujin                                                                                                                                   |\n | cmn-CN              | Zhiyu                                                                                                                                    |\n | da-DK               | Naja<br/>Sofie<br/>Mads                                                                                                                  |\n | nl-NL               | Laura<br/>Ruben<br/>Lotte                                                                                                                |\n | en-US               | Joanna<br/>Stephen<br/>Kimberly<br/>Matthew<br/>Danielle<br/>Gregory<br/>Kevin<br/>Salli<br/>Kendra<br/>Justin<br/>Joey<br/>Ivy<br/>Ruth |\n| en-GB               | Emma<br/>Brian<br/>Amy<br/>Arthur                                                                                                        |\n| en-AU               | Olivia<br/>Russell<br/>Nicole                                                                                                            |\n| en-NZ               | Aria                                                                                                                                     |\n| fr-FR               | Celine<br/>Lea<br/>Remi<br/>Mathieu                                                                                                      |\n| fr-CA               | Gabrielle<br/>Liam<br/>Chantal                                                                                                           |\n| de-DE               | Daniel<br/>Vicki<br/>Marlene<br/>Hans                                                                                                    |\n| it-IT               | Adriano<br/>Bianca<br/>Giorgio<br/>Carla                                                                                                 |\n| ja-JP               | Takumi<br/>Kazuha<br/>Tomoko<br/>Mizuki                                                                                                  |\n| ko-KR               | Seoyeon                                                                                                                                  |\n| pl-PL               | Ola<br/>Maja<br/>Jan<br/>Jacek<br/>Ewa                                                                                                   |\n| pt-PT               | Ines<br/>Cristiano                                                                                                                       |\n| pt-BR               | Camila<br/>Thiago<br/>Vitoria<br/>Ricardo                                                                                                |\n| ro-RO               | Carmen                                                                                                                                   |\n| ru-RU               | Maxim<br/>Tatyana                                                                                                                        |\n| es-US               | Lupe<br/>Pedro<br/>Penelope<br/>Miguel                                                                                                   |\n| es-MX               | Mia<br/>Andres                                                                                                                           |\n| es-ES               | Lucia<br/>Sergio<br/>Enrique<br/>Conchita                                                                                                |\n| sv-SE               | Elin<br/>Astrid                                                                                                                          |\n| tr-TR               | Filiz<br/>Burcu                                                                                                                          |\n",
                          "example": "Joanna"
                        }
                      },
                      "description": "This asset's item."
                    }
                  }
                },
                "description": "Information about the new asset."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nAsset created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "asset_id": {
                      "type": "string",
                      "description": "The asset's ID.",
                      "example": "WkdWelkzSnBjSFJwYjI0PQ11"
                    },
                    "asset_name": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The asset's name.",
                      "example": "asset name"
                    },
                    "asset_description": {
                      "maxLength": 256,
                      "type": "string",
                      "description": "The asset's description.",
                      "example": "This is an audio asset."
                    },
                    "asset_type": {
                      "maxLength": 30,
                      "type": "string",
                      "description": "The asset's type.",
                      "example": "audio",
                      "enum": [
                        "audio",
                        "image",
                        "slides",
                        "text",
                        "video",
                        "saved_reply"
                      ]
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user that last modified this data.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "asset_items": {
                      "type": "array",
                      "description": "A list of the asset's items.\n\n### Restriction\n Each item must have a different `asset_item_language`, and only one item can have a `is_default` set to `true`.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "asset_item_id": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The asset item's ID.\nIf it is used to update the asset item, carrying this field indicates an update; otherwise, it indicates adding an asset item.",
                            "example": "beYjXoDOS_eV1QmTpj63PQ"
                          },
                          "asset_item_name": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string",
                            "description": "The asset item's name.",
                            "example": "english audio"
                          },
                          "asset_item_language": {
                            "maxLength": 10,
                            "minLength": 1,
                            "type": "string",
                            "description": "The asset item's language code.",
                            "example": "en-US",
                            "enum": [
                              "zh-CN",
                              "zh-TW",
                              "yue-CN",
                              "cmn-CN",
                              "da-DK",
                              "nl-NL",
                              "en-AU",
                              "en-NZ",
                              "en-GB",
                              "en-US",
                              "fr-CA",
                              "fr-FR",
                              "de-DE",
                              "it-IT",
                              "ja-JP",
                              "ko-KR",
                              "pl-PL",
                              "pt-BR",
                              "pt-PT",
                              "ro-RO",
                              "ru-RU",
                              "es-ES",
                              "es-MX",
                              "es-US",
                              "sv-SE",
                              "tr-TR"
                            ]
                          },
                          "is_default": {
                            "type": "boolean",
                            "description": "Whether this item is the asset's default. Each asset can only have one isDefault set to true.",
                            "example": true
                          },
                          "asset_item_content": {
                            "maxLength": 500,
                            "type": "string",
                            "description": "The asset item's content.\nOnly works for `asset_type`s `text` and `saved_reply`.",
                            "example": "text asset content"
                          },
                          "asset_item_file_url": {
                            "type": "string",
                            "description": "The asset item's file URL. \nThis data will only exist when the asset_type is one of these: image, audio, video, slides.",
                            "example": "https://file.zoom.us/xxxx"
                          },
                          "asset_item_voice": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The asset item's text-to-speech voice. It only works for the audio type.\n\nWhen you want to create a TTS asset item, need to fill in the `asset_item_file_url` and `asset_item_content`, but don't need to fill in the `upload_file` field.\n\nNot every language supports TTS, and each language has a different voice.\n\n| asset_item_language | asset_item_voice                                                                                                                      |\n|---------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n | yue-CN              | Hiujin                                                                                                                                   |\n| cmn-CN              | Zhiyu                                                                                                                                    |\n| da-DK               | Naja<br/>Sofie<br/>Mads                                                                                                                  |\n| nl-NL               | Laura<br/>Ruben<br/>Lotte                                                                                                                |\n| en-US               | Joanna<br/>Stephen<br/>Kimberly<br/>Matthew<br/>Danielle<br/>Gregory<br/>Kevin<br/>Salli<br/>Kendra<br/>Justin<br/>Joey<br/>Ivy<br/>Ruth |\n| en-GB               | Emma<br/>Brian<br/>Amy<br/>Arthur                                                                                                        |\n | en-AU               | Olivia<br/>Russell<br/>Nicole                                                                                                            |\n| en-NZ               | Aria                                                                                                                                     |\n| fr-FR               | Celine<br/>Lea<br/>Remi<br/>Mathieu                                                                                                      |\n | fr-CA               | Gabrielle<br/>Liam<br/>Chantal                                                                                                           |\n| de-DE               | Daniel<br/>Vicki<br/>Marlene<br/>Hans                                                                                                    |\n| it-IT               | Adriano<br/>Bianca<br/>Giorgio<br/>Carla                                                                                                 |\n| ja-JP               | Takumi<br/>Kazuha<br/>Tomoko<br/>Mizuki                                                                                                  |\n| ko-KR               | Seoyeon                                                                                                                                  |\n | pl-PL               | Ola<br/>Maja<br/>Jan<br/>Jacek<br/>Ewa                                                                                                   |\n| pt-PT               | Ines<br/>Cristiano                                                                                                                       |\n | pt-BR               | Camila<br/>Thiago<br/>Vitoria<br/>Ricardo                                                                                                |\n| ro-RO               | Carmen                                                                                                                                   |\n | ru-RU               | Maxim<br/>Tatyana                                                                                                                        |\n| es-US               | Lupe<br/>Pedro<br/>Penelope<br/>Miguel                                                                                                   |\n| es-MX               | Mia<br/>Andres                                                                                                                           |\n | es-ES               | Lucia<br/>Sergio<br/>Enrique<br/>Conchita                                                                                                |\n| sv-SE               | Elin<br/>Astrid                                                                                                                          |\n | tr-TR               | Filiz<br/>Burcu                                                                                                                          |\n",
                            "example": "Joanna"
                          }
                        },
                        "description": "This asset's item."
                      }
                    },
                    "asset_language_code": {
                      "maxLength": 10,
                      "type": "string",
                      "description": "The asset's default language code.",
                      "example": "en-US",
                      "enum": [
                        "zh-CN",
                        "zh-TW",
                        "yue-CN",
                        "cmn-CN",
                        "da-DK",
                        "nl-NL",
                        "en-AU",
                        "en-NZ",
                        "en-GB",
                        "en-US",
                        "fr-CA",
                        "fr-FR",
                        "de-DE",
                        "it-IT",
                        "ja-JP",
                        "ko-KR",
                        "pl-PL",
                        "pt-BR",
                        "pt-PT",
                        "ro-RO",
                        "ru-RU",
                        "es-ES",
                        "es-MX",
                        "es-US",
                        "sv-SE",
                        "tr-TR"
                      ]
                    },
                    "category_id": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "The asset category's ID.",
                      "example": "bnGEj1yrRb6qlNMvyMK08g"
                    },
                    "category_name": {
                      "maxLength": 48,
                      "type": "string",
                      "description": "The asset category's name.",
                      "example": "flows assets"
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the asset is archived.",
                      "example": false
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when this data was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    },
                    "archived_time": {
                      "type": "string",
                      "description": "The time this asset was archived.",
                      "format": "date-time",
                      "example": "2023-08-29T06:12:33Z"
                    }
                  },
                  "description": "Information about the asset."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `10005` <br>\n Asset name is too long. <br>\n**Error Code:** `10006` <br>\n The language is not supported. <br>\n**Error Code:** `10007` <br>\n Duplicate asset name <br>\n**Error Code:** `10013` <br>\n Asset description is too long. <br>\n**Error Code:** `10018` <br>\n Invalid asset type <br>\n **Error Code:** `10020` <br>\n Unable to create more. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:write:admin",
              "contact_center:write:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:asset_library:admin"
          ]
        }
      }
    },
    "/contact_center/asset_library/assets/{assetId}": {
      "get": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Get an asset",
        "description": "Get information about an asset. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAnAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "The asset's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nAsset returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "asset_id": {
                      "type": "string",
                      "description": "The asset's ID.",
                      "example": "WkdWelkzSnBjSFJwYjI0PQ11"
                    },
                    "asset_name": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The asset's name.",
                      "example": "asset name"
                    },
                    "asset_description": {
                      "maxLength": 256,
                      "type": "string",
                      "description": "The asset's description.",
                      "example": "This is an audio asset."
                    },
                    "asset_type": {
                      "maxLength": 30,
                      "type": "string",
                      "description": "The asset's type.",
                      "example": "audio",
                      "enum": [
                        "audio",
                        "image",
                        "slides",
                        "text",
                        "video",
                        "saved_reply"
                      ]
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user that last modified this data.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when this data was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the asset is archived.",
                      "example": false
                    },
                    "archived_time": {
                      "type": "string",
                      "description": "The time this asset was archived.",
                      "format": "date-time",
                      "example": "2023-08-29T06:12:33Z"
                    },
                    "asset_items": {
                      "type": "array",
                      "description": "A list of the asset's items.\n\n### Restriction\n Each item must have a different `asset_item_language`, and only one item can have a `is_default` set to `true`.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "asset_item_id": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The asset item's ID.\nIf it is used to update the asset item, carrying this field indicates an update; otherwise, it indicates adding an asset item.",
                            "example": "beYjXoDOS_eV1QmTpj63PQ"
                          },
                          "asset_item_name": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string",
                            "description": "The asset item's name.",
                            "example": "english audio"
                          },
                          "asset_item_language": {
                            "maxLength": 10,
                            "minLength": 1,
                            "type": "string",
                            "description": "The asset item's language code.",
                            "example": "en-US",
                            "enum": [
                              "zh-CN",
                              "zh-TW",
                              "yue-CN",
                              "cmn-CN",
                              "da-DK",
                              "nl-NL",
                              "en-AU",
                              "en-NZ",
                              "en-GB",
                              "en-US",
                              "fr-CA",
                              "fr-FR",
                              "de-DE",
                              "it-IT",
                              "ja-JP",
                              "ko-KR",
                              "pl-PL",
                              "pt-BR",
                              "pt-PT",
                              "ro-RO",
                              "ru-RU",
                              "es-ES",
                              "es-MX",
                              "es-US",
                              "sv-SE",
                              "tr-TR"
                            ]
                          },
                          "is_default": {
                            "type": "boolean",
                            "description": "Whether this item is the asset's default. Each asset can only have one isDefault set to true.",
                            "example": true
                          },
                          "asset_item_content": {
                            "maxLength": 500,
                            "type": "string",
                            "description": "The asset item's content.\nOnly works for `asset_type`s `text` and `saved_reply`.",
                            "example": "text asset content"
                          },
                          "asset_item_file_url": {
                            "type": "string",
                            "description": "The asset item's file URL. \nThis data will only exist when the asset_type is one of these: image, audio, video, slides.",
                            "example": "https://file.zoom.us/xxxx"
                          },
                          "asset_item_voice": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The asset item's text-to-speech voice. It only works for the audio type.\n\nWhen you want to create a TTS asset item, need to fill in the `asset_item_file_url` and `asset_item_content`, but don't need to fill in the `upload_file` field.\n\nNot every language supports TTS, and each language has a different voice.\n\n| asset_item_language | asset_item_voice                                                                                                                      |\n|---------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n | yue-CN              | Hiujin                                                                                                                                   |\n| cmn-CN              | Zhiyu                                                                                                                                    |\n| da-DK               | Naja<br/>Sofie<br/>Mads                                                                                                                  |\n| nl-NL               | Laura<br/>Ruben<br/>Lotte                                                                                                                |\n| en-US               | Joanna<br/>Stephen<br/>Kimberly<br/>Matthew<br/>Danielle<br/>Gregory<br/>Kevin<br/>Salli<br/>Kendra<br/>Justin<br/>Joey<br/>Ivy<br/>Ruth |\n| en-GB               | Emma<br/>Brian<br/>Amy<br/>Arthur                                                                                                        |\n | en-AU               | Olivia<br/>Russell<br/>Nicole                                                                                                            |\n| en-NZ               | Aria                                                                                                                                     |\n| fr-FR               | Celine<br/>Lea<br/>Remi<br/>Mathieu                                                                                                      |\n | fr-CA               | Gabrielle<br/>Liam<br/>Chantal                                                                                                           |\n| de-DE               | Daniel<br/>Vicki<br/>Marlene<br/>Hans                                                                                                    |\n| it-IT               | Adriano<br/>Bianca<br/>Giorgio<br/>Carla                                                                                                 |\n| ja-JP               | Takumi<br/>Kazuha<br/>Tomoko<br/>Mizuki                                                                                                  |\n| ko-KR               | Seoyeon                                                                                                                                  |\n | pl-PL               | Ola<br/>Maja<br/>Jan<br/>Jacek<br/>Ewa                                                                                                   |\n| pt-PT               | Ines<br/>Cristiano                                                                                                                       |\n | pt-BR               | Camila<br/>Thiago<br/>Vitoria<br/>Ricardo                                                                                                |\n| ro-RO               | Carmen                                                                                                                                   |\n | ru-RU               | Maxim<br/>Tatyana                                                                                                                        |\n| es-US               | Lupe<br/>Pedro<br/>Penelope<br/>Miguel                                                                                                   |\n| es-MX               | Mia<br/>Andres                                                                                                                           |\n | es-ES               | Lucia<br/>Sergio<br/>Enrique<br/>Conchita                                                                                                |\n| sv-SE               | Elin<br/>Astrid                                                                                                                          |\n | tr-TR               | Filiz<br/>Burcu                                                                                                                          |\n",
                            "example": "Joanna"
                          }
                        },
                        "description": "This asset's item."
                      }
                    },
                    "asset_language_code": {
                      "maxLength": 10,
                      "type": "string",
                      "description": "The asset's default language code.",
                      "example": "en-US",
                      "enum": [
                        "zh-CN",
                        "zh-TW",
                        "yue-CN",
                        "cmn-CN",
                        "da-DK",
                        "nl-NL",
                        "en-AU",
                        "en-NZ",
                        "en-GB",
                        "en-US",
                        "fr-CA",
                        "fr-FR",
                        "de-DE",
                        "it-IT",
                        "ja-JP",
                        "ko-KR",
                        "pl-PL",
                        "pt-BR",
                        "pt-PT",
                        "ro-RO",
                        "ru-RU",
                        "es-ES",
                        "es-MX",
                        "es-US",
                        "sv-SE",
                        "tr-TR"
                      ]
                    },
                    "category_id": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "The asset category's ID.",
                      "example": "bnGEj1yrRb6qlNMvyMK08g"
                    },
                    "category_name": {
                      "maxLength": 48,
                      "type": "string",
                      "description": "The asset category's name.",
                      "example": "flows assets"
                    }
                  },
                  "description": "Information about the asset."
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `10009` <br>\n Asset not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:read:admin",
              "contact_center:read:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:asset_library:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Delete an asset",
        "description": "Delete or achive an existing asset. \r\nYou can only operate assets that have not been assigned to other modules.\r\nOnly assets in archived status can be deleted. Set the asset to `archived` through this API before deleting.\n \n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteAnAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "The asset's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "archive",
            "in": "query",
            "description": "Should it be archived? After archiving, it won't be deleted immediately, but will be automatically deleted after a period of time. During this time, you can restore it.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Asset deleted or archived."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `10009` <br>\n Asset not found. <br>\n**Error Code:** `10010` <br>\n Unable to delete asset directly, archive it first. <br>\n**Error Code:** `10002` <br>\n This asset is being used. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:write:admin",
              "contact_center:delete:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:asset_library:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Update an asset",
        "description": "Update an asset.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateAnAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "The asset's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "asset_name": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The asset's name.",
                    "example": "asset name"
                  },
                  "asset_description": {
                    "maxLength": 256,
                    "type": "string",
                    "description": "The asset's description.",
                    "example": "This is an audio asset."
                  },
                  "category_id": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The asset category's ID.",
                    "example": "bnGEj1yrRb6qlNMvyMK08g"
                  },
                  "asset_items": {
                    "type": "array",
                    "description": "A list of the asset's items.\n\n### Restriction\n Each item must have a different `asset_item_language`, and only one item can have a `is_default` set to `true`.\n\nIf this field is not filled in, it means no modifications will be made to the asset items. \nIf this field is filled in, the provided data will overwrite the current asset items. \nIf you want to update an existing asset item, please fill in the `asset_item_id`. Otherwise, it will be considered as adding a new asset item. \nIf you do not wish to make any modifications to the existing asset item, also fill in the `asset_item_id` to prevent it from being deleted.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "asset_item_id": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The asset item's ID.\nIf it is used to update the asset item, carrying this field indicates an update; otherwise, it indicates adding an asset item.",
                          "example": "beYjXoDOS_eV1QmTpj63PQ"
                        },
                        "asset_item_name": {
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string",
                          "description": "The asset item's name.",
                          "example": "english audio"
                        },
                        "upload_file": {
                          "type": "string",
                          "description": "The uploaded file in binary format. \nOnly works for `asset_type`s `audio`, `image`, `video` and `slides`.\n \nThis field is not required if you create a TTS item when creating or updating an audio asset.\n\n### Allowed file extension\n\n- audio : mp3, wav\n- image : jpeg, jpg, jpe, jif, jfif, png, gif\n- slides : pdf\n- video : mp4, mov\n \n### Maximum filesize support\n\nA single request can upload a maximum of 100MB.\nSingle file maximum filesize: \n- audio : 10M\n- image : 10M\n- slides : 10M\n- video : 100M ",
                          "format": "binary",
                          "example": "VmtWU1QxRXlSa2hWYTJob1VqRndjbFZ1Y0hOaVZuQlhXWHBXVGxZd05YZFVNV040WVVaWmVtRklUbFZTZWtJMFdrUkJlRTB4UWxWTlJEQTk="
                        },
                        "asset_item_content": {
                          "maxLength": 500,
                          "type": "string",
                          "description": "The asset item's content.\nOnly works for `asset_type`s `text` and `saved_reply`.",
                          "example": "text asset content"
                        },
                        "is_default": {
                          "type": "boolean",
                          "description": "Whether this item is the default of the asset. Each asset can only have one `isDefault` set to `true`.",
                          "example": true
                        },
                        "asset_item_voice": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The asset item's text-to-speech voice. It only works for the audio type.\n\nWhen you want to create a TTS asset item, need to fill in the `asset_item_file_url` and `asset_item_content`, but don't need to fill in the `upload_file` field.\n\nNot every language supports TTS, and each language has a different voice.\n\n| asset_item_language | asset_item_voice                                                                                                                      |\n|---------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n | yue-CN              | Hiujin                                                                                                                                   |\n | cmn-CN              | Zhiyu                                                                                                                                    |\n | da-DK               | Naja<br/>Sofie<br/>Mads                                                                                                                  |\n | nl-NL               | Laura<br/>Ruben<br/>Lotte                                                                                                                |\n | en-US               | Joanna<br/>Stephen<br/>Kimberly<br/>Matthew<br/>Danielle<br/>Gregory<br/>Kevin<br/>Salli<br/>Kendra<br/>Justin<br/>Joey<br/>Ivy<br/>Ruth |\n| en-GB               | Emma<br/>Brian<br/>Amy<br/>Arthur                                                                                                        |\n| en-AU               | Olivia<br/>Russell<br/>Nicole                                                                                                            |\n| en-NZ               | Aria                                                                                                                                     |\n| fr-FR               | Celine<br/>Lea<br/>Remi<br/>Mathieu                                                                                                      |\n| fr-CA               | Gabrielle<br/>Liam<br/>Chantal                                                                                                           |\n| de-DE               | Daniel<br/>Vicki<br/>Marlene<br/>Hans                                                                                                    |\n| it-IT               | Adriano<br/>Bianca<br/>Giorgio<br/>Carla                                                                                                 |\n| ja-JP               | Takumi<br/>Kazuha<br/>Tomoko<br/>Mizuki                                                                                                  |\n| ko-KR               | Seoyeon                                                                                                                                  |\n| pl-PL               | Ola<br/>Maja<br/>Jan<br/>Jacek<br/>Ewa                                                                                                   |\n| pt-PT               | Ines<br/>Cristiano                                                                                                                       |\n| pt-BR               | Camila<br/>Thiago<br/>Vitoria<br/>Ricardo                                                                                                |\n| ro-RO               | Carmen                                                                                                                                   |\n| ru-RU               | Maxim<br/>Tatyana                                                                                                                        |\n| es-US               | Lupe<br/>Pedro<br/>Penelope<br/>Miguel                                                                                                   |\n| es-MX               | Mia<br/>Andres                                                                                                                           |\n| es-ES               | Lucia<br/>Sergio<br/>Enrique<br/>Conchita                                                                                                |\n| sv-SE               | Elin<br/>Astrid                                                                                                                          |\n| tr-TR               | Filiz<br/>Burcu                                                                                                                          |\n",
                          "example": "Joanna"
                        },
                        "asset_item_language": {
                          "maxLength": 10,
                          "minLength": 1,
                          "type": "string",
                          "description": "The asset item's language code.",
                          "example": "en-US",
                          "enum": [
                            "zh-CN",
                            "zh-TW",
                            "yue-CN",
                            "cmn-CN",
                            "da-DK",
                            "nl-NL",
                            "en-AU",
                            "en-NZ",
                            "en-GB",
                            "en-US",
                            "fr-CA",
                            "fr-FR",
                            "de-DE",
                            "it-IT",
                            "ja-JP",
                            "ko-KR",
                            "pl-PL",
                            "pt-BR",
                            "pt-PT",
                            "ro-RO",
                            "ru-RU",
                            "es-ES",
                            "es-MX",
                            "es-US",
                            "sv-SE",
                            "tr-TR"
                          ]
                        }
                      },
                      "description": "This asset's item."
                    }
                  },
                  "restore": {
                    "type": "boolean",
                    "description": "Whether this asset should be restored. \nOnly assets in archived status can be restored, and care should be taken to avoid name duplicate with current assets. If there is a conflict, the name of this asset needs to be changed as well.  \nIf this field is true, this request will ignore updates to other fields apart from the initial asset_name.",
                    "example": true
                  }
                },
                "description": "Information about the new asset."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Asset updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `10005` <br>\n Asset name is too long. <br>\n**Error Code:** `10007` <br>\n Duplicate asset name <br>\n**Error Code:** `10013` <br>\n Asset description is too long. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `10009` <br>\n Asset not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:write:admin",
              "contact_center:write:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:asset_library:admin"
          ]
        }
      }
    },
    "/contact_center/asset_library/categories": {
      "get": {
        "tags": [
          "Asset Library"
        ],
        "summary": "List asset categories",
        "description": "List asset categories. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listAssetCategories",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "category_scope",
            "in": "query",
            "description": "Query by category scope.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "system"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Asset categories returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "categories": {
                      "type": "array",
                      "description": "Array of assets categories.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "category_id": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The asset category's ID.",
                            "example": "bnGEj1yrRb6qlNMvyMK08g"
                          },
                          "category_name": {
                            "maxLength": 48,
                            "type": "string",
                            "description": "The asset category's name.",
                            "example": "flows assets"
                          },
                          "category_scope": {
                            "maxLength": 20,
                            "type": "string",
                            "description": "The asset category's scope.",
                            "example": "system",
                            "enum": [
                              "system",
                              "agent"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:read:admin",
              "contact_center:read:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:asset_library:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Create an asset category",
        "description": "Create an asset category.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createAnAssetCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "category_name",
                  "category_scope"
                ],
                "type": "object",
                "properties": {
                  "category_name": {
                    "maxLength": 48,
                    "type": "string",
                    "description": "The asset category's name.",
                    "example": "flows assets"
                  },
                  "category_scope": {
                    "maxLength": 20,
                    "type": "string",
                    "description": "The asset category's scope.",
                    "example": "system",
                    "enum": [
                      "system",
                      "agent"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`    Assets category created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category_id": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "The asset category's ID.",
                      "example": "bnGEj1yrRb6qlNMvyMK08g"
                    },
                    "category_name": {
                      "maxLength": 48,
                      "type": "string",
                      "description": "The asset category's name.",
                      "example": "flows assets"
                    },
                    "category_scope": {
                      "maxLength": 20,
                      "type": "string",
                      "description": "The asset category's scope.",
                      "example": "system",
                      "enum": [
                        "system",
                        "agent"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `10015` <br>\n Duplicate category name. <br>\n**Error Code:** `10020` <br>\n Unable to create more. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:write:admin",
              "contact_center:write:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:asset_library:admin"
          ]
        }
      }
    },
    "/contact_center/asset_library/categories/{categoryId}": {
      "get": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Get an asset category",
        "description": "Get an asset category.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAnAssetCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The asset category's ID.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Assets category returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category_id": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "The asset category's ID.",
                      "example": "bnGEj1yrRb6qlNMvyMK08g"
                    },
                    "category_name": {
                      "maxLength": 48,
                      "type": "string",
                      "description": "The asset category's name.",
                      "example": "flows assets"
                    },
                    "category_scope": {
                      "maxLength": 20,
                      "type": "string",
                      "description": "The asset category's scope.",
                      "example": "system",
                      "enum": [
                        "system",
                        "agent"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `10023` <br>\n Asset category not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:read:admin",
              "contact_center:read:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:asset_library:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Delete an asset category",
        "description": "Delete an existing asset category.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteAnAssetCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The assets category's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Asset deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `10023` <br>\n Asset category not found. <br>\n**Error Code:** `10019` <br>\n This asset category is being used. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:write:admin",
              "contact_center:delete:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:asset_library:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Asset Library"
        ],
        "summary": "Update an asset category",
        "description": "Update an asset category.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_asset_library:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:asset_library:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateAnAssetCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The assets category's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category_name": {
                    "maxLength": 48,
                    "type": "string",
                    "description": "The asset category's name.",
                    "example": "flows assets"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` The assets category updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `10015` <br>\n Duplicate category name. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `10023` <br>\n Asset category not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_asset_library:write:admin",
              "contact_center:write:asset_library:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_asset_library:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:asset_library:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}/recording/{command}": {
      "put": {
        "tags": [
          "Call Control"
        ],
        "summary": "Control an engagement's recording",
        "description": "Controls the recording state for an engagement.\n\nThis request is only valid for video and voice engagements. Calling this API for other channel types is invalid.\n\nAcceptance of a request and response of `HTTP 204 No Content` only ensures there were no validation errors with the request.\n \n**Note:** The **Control an engagement's recording** API only works with third-party apps if the account admin has enabled the **Allow Open API to pause and resume automatic call recording** setting. For more details, refer to this [support article](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0059069).\n \n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_engagement:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:engagement_recording_control:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "engagementRecordingControl",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement event's unique ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "command",
            "in": "path",
            "description": "The command for the recording control.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pause",
              "enum": [
                "pause",
                "resume"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status:** `204` **No Content** Request accepted for processing with no validation errors. This does not imply successful execution of the command."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2814` <br>\n Cannot use this recording control command with this engagement's channel type. <br>\n**Error Code:** `2815` <br>\n The engagement is not assigned to an agent. It is not being recorded. <br>\n**Error Code:** `2818` <br>\n Cannot change recording state from {current_state} to {command_state}. <br>\n**Error Code:** `2819` <br>\n Recording is stopped. <br>\n**Error Code:** `2808` <br>\n Recording is in progress. There is no need to open it again. <br>\n**Error Code:** `2809` <br>\n Start recording first. Cannot be converted to {state}. <br>\n**Error Code:** `2810` <br>\n No need to repeat the operation. The current state is already {state}. <br>\n**Error Code:** `2812` <br>\n The recording control's current state is {current_state}, and it cannot be converted to {command_state}. <br>\n**Error Code:** `300` <br>\n Invalid request. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `20006` <br>\n Account not found. <br>\n**Error Code:** `2816` <br>\n The system could not find the session for the engagement. <br>\n **Error Code:** `2817` <br>\n There is no recording for this engagement. <br>\n**Error Code:** `2901` <br>\n Engagement does not exist: {0}. <br>\n **Error Code:** `2906` <br>\n There are no agents on the call. <br>\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `2907` <br>\n There was a problem processing the recording control request. <br>\n**Error Code:** `2908` <br>\n The operation was partially completed. Try again. <br>\n**Error Code:** `2909` <br>\n There was a problem processing the recording control request. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_engagement:write:admin",
              "contact_center:update:engagement_recording_control:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_engagement:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:engagement_recording_control:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}/commands": {
      "post": {
        "tags": [
          "Call Control"
        ],
        "summary": "Command control of a user",
        "description": "Initiate a manually assigned control command.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:user_control:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userControl",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass [the `me` value](/docs/api/using-zoom-apis/#the-me-keyword).",
            "required": true,
            "schema": {
              "type": "string",
              "example": "G4XhxFgnRQGSa2y7loqw4w"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "channel",
                  "command"
                ],
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "All control commands. Select one of the options from the enum.",
                    "example": "make_call",
                    "enum": [
                      "make_call"
                    ]
                  },
                  "channel": {
                    "type": "string",
                    "description": "The channel type. Currently only supports `voice`.",
                    "example": "voice",
                    "enum": [
                      "voice"
                    ]
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "device_id": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The device ID. Only valid and `Required` when `channel` is `voice`.",
                        "example": "ZoomClient-CCITab-Tnxa76dLQ_SZwxmCP3bIOA"
                      },
                      "cc_queue_id": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The Contact Center queue's ID. `Required` when `command` is `make_call`.",
                        "example": "qlU902FoTD-dFi9QnCdZhw"
                      },
                      "queue_caller_id_number": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The queue's caller ID number, in E.164 format, configured inside the queue. Only valid and `Optional` when `command` is `make_call`.",
                        "example": "+14155552641"
                      },
                      "consumer_number": {
                        "maxLength": 32,
                        "type": "string",
                        "description": "The customer's phone number. Only valid and `Required` when `command` is `make_call`.",
                        "example": "+14155552641"
                      },
                      "consumer_display_name": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The consumer's name.",
                        "example": "Jill Chill"
                      }
                    },
                    "description": "The parameters."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status:** `201` **Created** Request created for processing with no validation errors. This does not imply successful execution of the command.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "request_id"
                  ],
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "The app request ID.",
                      "example": "alU302FoDe-dCq9QAFeZhw"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `9002` <br>\n User is currently `Occupied`. <br>\n**Error Code:** `300` <br>\n Invalid request. <br>\n**Error Code:** `1018` <br>\n User device not found. <br>\n**Error Code:** `1211` <br>\n User is not assigned to queue. <br>\n**Error Code:** `1212` <br>\n Caller ID not found or not assigned to queue. <br>\n**Error Code:** `9003` <br>\n The CTI device is not supported. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `9001` <br>\n You are not allowed to initialize a voice engagement, please contact an admin. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          },
          "500": {
            "description": "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `-1` <br>\n Unknown server error, please contact customer service! <br>\n"
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:write:user_control:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:user_control:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}/devices": {
      "get": {
        "tags": [
          "Call Control"
        ],
        "summary": "List user's devices ",
        "description": "Retrieve user device information.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:user_device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Listuserdevices",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "JWm74129TSyxvSeMEiqCfQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User device list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10,
                      "default": 10
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "devices": {
                      "maxItems": 100,
                      "type": "array",
                      "description": "The device information.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device_id": {
                            "type": "string",
                            "description": "User login device ID.",
                            "example": "ZoomClient-CCITab-Tnxa76dLQ_SZwxmCP3bIOA"
                          },
                          "device_version": {
                            "type": "string",
                            "description": "Client version.",
                            "example": "6.2.3.40682"
                          },
                          "sip_registration_information": {
                            "type": "object",
                            "properties": {
                              "registration_success": {
                                "type": "boolean",
                                "description": "Registration successful.",
                                "example": true
                              }
                            },
                            "description": "The SIP registration information."
                          },
                          "device_type": {
                            "type": "string",
                            "description": "Device type.",
                            "example": "pwa",
                            "enum": [
                              "pwa",
                              "client",
                              "cti"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:read:admin",
              "contact_center:read:user_device:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:user_device:admin"
          ]
        }
      }
    },
    "/contact_center/outbound_campaign/campaigns": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "List outbound campaigns",
        "description": "List Contact Center outbound campaigns.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:outbound_campaign:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listOutboundCampaigns",
        "parameters": [
          {
            "name": "outbound_campaign_status",
            "in": "query",
            "description": "An outbound campaign's status.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "running",
              "enum": [
                "draft",
                "ready",
                "running",
                "paused",
                "completed",
                "not_running"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Outbound campaigns are returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "maximum": 15,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10,
                      "default": 10
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "outbound_campaign_items": {
                      "type": "array",
                      "description": "Array of outbound campaigns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "outbound_campaign_id": {
                            "type": "string",
                            "description": "The outbound campaign ID.",
                            "example": "TY_XsJuWR9ehXrsf1DSIAQ"
                          },
                          "outbound_campaign_name": {
                            "type": "string",
                            "description": "The campaign's name. Names are a unique key among all outbound campaigns.",
                            "example": "My outbound campaign"
                          },
                          "outbound_campaign_description": {
                            "type": "string",
                            "description": "The campaign's description.",
                            "example": "My outbound campaign description"
                          },
                          "outbound_campaign_status": {
                            "type": "string",
                            "description": "The campaign's status.",
                            "example": "paused",
                            "enum": [
                              "draft",
                              "ready",
                              "running",
                              "paused",
                              "completed",
                              "not_running"
                            ]
                          }
                        },
                        "description": "Outbound campaign object."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `5012` <br>\n Campaign status enum is invalid. <br>\n**Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign:read:admin",
              "contact_center:read:outbound_campaign:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:outbound_campaign:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create an outbound campaign",
        "description": "Create an outbound Contact Center campaign.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:outbound_campaign:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createOutboundCampaign",
        "requestBody": {
          "description": "The outbound campaign request data.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "dialing_method",
                  "dialing_method_settings",
                  "outbound_campaign_name",
                  "phone_number_id",
                  "queue_id"
                ],
                "type": "object",
                "properties": {
                  "outbound_campaign_name": {
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string",
                    "description": "The campaign's name. Names are a unique key among all outbound campaigns.",
                    "example": "My outbound campaign name"
                  },
                  "outbound_campaign_description": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The campaign's description.",
                    "example": "My outbound campaign description"
                  },
                  "queue_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "1 - Only voice queues configured for outbound engagements with at least one user from Zoom Contact Center Premium or Elite packages are available for selection.\n2 - Queue distribution cannot be configured to Simultaneous or Do Not Distribute.",
                    "example": "_zvJ9DUYSXKvxSmRCJP-sA"
                  },
                  "phone_number_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The reference ID for the Contact Center phone number. This number is displayed to consumers for outbound calls.",
                    "example": "XfTPrZjyR5W6QgNARdtGlw"
                  },
                  "dialing_method": {
                    "maximum": 2,
                    "minimum": 1,
                    "type": "string",
                    "description": "The dialer method determines how contacts in this campaign will be dialed.\n\"progressive\": engagement details are displayed to the agent **after** they are connected with the consumer.\n\"preview\": engagement details are displayed to the agent **before** they are connected with the consumer.",
                    "example": "progressive",
                    "default": "Progressive",
                    "enum": [
                      "Progressive",
                      "Preview"
                    ]
                  },
                  "dialing_method_settings": {
                    "description": "One of either Progressive or Preview dialing.",
                    "oneOf": [
                      {
                        "title": "progressive_settings",
                        "type": "object",
                        "properties": {
                          "enable_amd": {
                            "type": "boolean",
                            "description": "Enable Answering Machine Detection (AMD). Use this action to detect an answering machine for calls to consumers.\n\nWhen AMD is enabled, the following default configurations are set:\n- A person answers: disconnect the call. Optionally, provide an asset id for an asset to play before connecting the call to an agent.\n- An answering machine answers: disconnect the call. Optionally, provide an asset id for an asset to play after the tone and before disconnecting.\n- A FAX machine answers: disconnect the call.\n\nNote: Enabling Answering Machine Detection may increase the connection time between an agent and a consumer, due to the necessity to analyze the audio stream.\n\nBy enabling answering machine detection, you acknowledge that you are responsible for ensuring that your use of this technology complies with local laws and regulations.",
                            "example": true
                          },
                          "amd_settings": {
                            "type": "object",
                            "properties": {
                              "greeting_asset_id": {
                                "maxLength": 36,
                                "type": "string",
                                "description": "The Contact Center Asset Library asset to play when a consumer answers the call, before the agent is connected.",
                                "example": "zNWo_1M5ScCuKnBb2Z-sfw"
                              },
                              "answering_machine_asset_id": {
                                "maxLength": 36,
                                "type": "string",
                                "description": "The Contact Center Asset Library asset to play when an answering machine is detected.",
                                "example": "z8XtiytyQammquBRlVPiWw"
                              }
                            },
                            "description": "Answering Machine Detection (AMD) settings. Use with `enable_amd`. "
                          },
                          "enable_abandonment_timeout": {
                            "type": "boolean",
                            "description": "Abandon answered calls if an agent does not connect within a set period of time.",
                            "example": true
                          },
                          "abandonment_timeout": {
                            "maximum": 30,
                            "minimum": 2,
                            "type": "integer",
                            "description": "Use with `enable_abandonment_timeout`. If `enable_abandonment_timeout` is false, this will be set to null.\nA call connected to a consumer will be abandoned if an agent does not connect before the abandonment timeout has elapsed. Abandonment timeout must be between 2 and 30 seconds.",
                            "example": 5,
                            "default": 5
                          },
                          "abandonment_message_asset_id": {
                            "maxLength": 36,
                            "type": "string",
                            "description": "Use with `enable_abandonment_timeout`. The Contact Center Asset Library asset to play when a call is abandoned due to agent unavailability.",
                            "example": "z8XtiytyQammquBRlVPiWw"
                          }
                        },
                        "description": "Settings for Progressive dialing method."
                      },
                      {
                        "title": "preview_settings",
                        "type": "object",
                        "properties": {
                          "dialing_strategy": {
                            "type": "string",
                            "description": "Use with the Preview dialing method. \nAutomatic connects calls automatically. Manual allows the agent to dial the calls manually.",
                            "example": "automatic",
                            "default": "automatic",
                            "enum": [
                              "automatic",
                              "manual"
                            ]
                          },
                          "preview_timer": {
                            "maximum": 60,
                            "minimum": 5,
                            "type": "integer",
                            "description": "Displays timer before call is initiated automatically.",
                            "example": 5,
                            "default": 5
                          },
                          "enable_skip": {
                            "type": "boolean",
                            "description": "Preview dialing method only. Allow agent to skip outbound engagements.",
                            "example": true
                          },
                          "max_skips": {
                            "maximum": 5,
                            "minimum": 1,
                            "type": "integer",
                            "description": "Preview dialing method only. Configure skip reasons under **Contact Center Preferences**.",
                            "example": 1,
                            "default": 1
                          },
                          "enable_ignore_preview_notification": {
                            "type": "boolean",
                            "description": "Preview dialing method only. Ignoring will automatically update the agent's status based on the Auto Update Status settings in **Contact Center Preferences**.",
                            "example": true
                          }
                        },
                        "description": "Settings for Preview dialing method."
                      }
                    ]
                  },
                  "outbound_campaign_priority": {
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer",
                    "description": "The campaign priority.",
                    "example": 5,
                    "default": 5
                  },
                  "campaign_contact_list_ids": {
                    "maxItems": 100000,
                    "type": "array",
                    "description": "Contacts will be dialed in alphabetical order. If a contact has more than one phone number, the numbers will be dialed in the order they are listed until a call is connected or all numbers have been tried.\n\nA list of contact list ids to dial with this campaign. Multiple contact lists can be input here.\n\n**Leave this blank to use this campaign with the outbound dialer API.**",
                    "items": {
                      "type": "string",
                      "description": "Contact list ids. These can be retrieved using the [List campaign contact lists API.](https://developers.zoom.us/docs/api/contact-center/#tag/campaign/GET/contact_center/outbound_campaign/contact_lists)",
                      "example": "MN2Dtcb2T-yT5CU3clN-AA"
                    }
                  },
                  "enable_max_ring_time": {
                    "type": "boolean",
                    "description": "Disconnect unanswered calls after a set period of time has elapsed.",
                    "example": true
                  },
                  "max_ring_time": {
                    "maximum": 120,
                    "minimum": 15,
                    "type": "integer",
                    "description": "Use with `enable_max_ring_time`. A call is considered unanswered after the maximum ring time has elapsed. Maximum ring time must be between 15 and 120 seconds.",
                    "example": 60,
                    "default": 60
                  },
                  "business_hour_source": {
                    "type": "string",
                    "description": "The Contact Center business hour source. Select `queue` to use the outbound queue's business hours, and `campaign` to set custom hours. Defaults to `queue`.",
                    "example": "campaign",
                    "default": "queue",
                    "enum": [
                      "queue",
                      "campaign"
                    ]
                  },
                  "business_hour_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The Contact Center business hours ID. The campaign will only dial during these hours.\n[Create business hours API.](/docs/contact-center/apis/#operation/businessHourCreate)",
                    "example": "h7XtiytFTammquBRlTRiWZ"
                  },
                  "enable_closure_hour": {
                    "type": "boolean",
                    "description": "Toggle closure hours on or off. Outbound calls are not started during closure hours.",
                    "example": true
                  },
                  "closure_set_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The Contact Center closure hours ID.\n[Create closure hours API.](/docs/contact-center/apis/#operation/closuresSetCreate)",
                    "example": "y9XtiytyQammquBRlTPiWw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`     Outbound campaign is created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outbound_campaign_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The outbound campaign ID.",
                      "example": "TY_XsJuWR9ehXrsf1DSIAQ"
                    },
                    "outbound_campaign_name": {
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string",
                      "description": "The campaign's name. Names are a unique key among all outbound campaigns.",
                      "example": "My outbound campaign"
                    },
                    "outbound_campaign_description": {
                      "maxLength": 255,
                      "type": "string",
                      "description": "The campaign's description.",
                      "example": "My outbound campaign description"
                    },
                    "queue_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "1 - Only voice queues configured for outbound engagements with at least one user from Zoom Contact Center Premium or Elite packages are available for selection.\\n2 - Queue distribution cannot be configured to Simultaneous or Do Not Distribute.",
                      "example": "TY_XsJuWR9ehXrsf1DSIAQ"
                    },
                    "queue_name": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The queue's name.",
                      "example": "My queue name"
                    },
                    "phone_number_id": {
                      "type": "string",
                      "description": "The reference ID for the Contact Center phone number. This number is displayed to consumers for outbound calls.",
                      "example": "XfTPrZjyR5W6QgNARdtGlw"
                    },
                    "outbound_campaign_status": {
                      "type": "string",
                      "description": "The campaign's status.",
                      "example": "draft",
                      "enum": [
                        "draft",
                        "ready",
                        "running",
                        "paused",
                        "completed",
                        "not_running"
                      ]
                    },
                    "dialing_method": {
                      "type": "string",
                      "description": "The dialer method determines how contacts in this campaign will be dialed.\\nProgressive: engagement details are displayed to the agent **after** they are connected with the consumer.\\nPreview: engagement details are displayed to the agent **before** they are connected with the consumer.",
                      "example": "progressive",
                      "enum": [
                        "progressive",
                        "preview"
                      ]
                    },
                    "dialing_method_settings": {
                      "description": "One of either Progressive or Preview dialing.",
                      "oneOf": [
                        {
                          "title": "progressive_settings",
                          "type": "object",
                          "properties": {
                            "enable_amd": {
                              "type": "boolean",
                              "description": "Enable Answering Machine Detection (AMD). Use this action to detect an answering machine for calls to consumers.\n\nWhen AMD is enabled, these default configurations are set.\n* A person answers - disconnect the call. Optionally, provide an asset id for an asset to play before connecting the call to an agent.\n* An answering machine answers - disconnect the call. Optionally, provide an asset id for an asset to play after the tone and before disconnecting.\n * A FAX machine answers - disconnect the call.\n\nNote: Enabling answering machine detection may increase the connection time between an agent and a consumer, due to the necessity to analyze the audio stream.\n\nBy enabling answering machine detection, you acknowledge that you are responsible for ensuring that your use of this technology complies with local laws and regulations.",
                              "example": true
                            },
                            "amd_settings": {
                              "type": "object",
                              "properties": {
                                "greeting_asset_id": {
                                  "maxLength": 36,
                                  "type": "string",
                                  "description": "The Contact Center Asset Library asset to play when a consumer answers the call, before the agent is connected.",
                                  "example": "zNWo_1M5ScCuKnBb2Z-sfw"
                                },
                                "answering_machine_asset_id": {
                                  "maxLength": 36,
                                  "type": "string",
                                  "description": "The Contact Center Asset Library asset to play when an answering machine is detected.",
                                  "example": "z8XtiytyQammquBRlVPiWw"
                                }
                              },
                              "description": "Answering Machine Detection (AMD) settings. Use with `enable_amd`. "
                            },
                            "enable_abandonment_timeout": {
                              "type": "boolean",
                              "description": "Abandon answered calls if an agent does not connect within a set period of time.",
                              "example": true
                            },
                            "abandonment_timeout": {
                              "maximum": 30,
                              "minimum": 2,
                              "type": "integer",
                              "description": "Use with `enable_abandonment_timeout`. If `enable_abandonment_timeout` is false, then this will be set to null.\nA call connected to a consumer will be abandoned if an agent does not connect before the abandonment timeout has elapsed. Abandonment timeout must be between 2 and 30 seconds.",
                              "example": 5
                            },
                            "abandonment_message_asset_id": {
                              "maxLength": 36,
                              "type": "string",
                              "description": "Use with `enable_abandonment`. The Contact Center Asset Library asset to play when a call is abandoned due to agent unavailability.",
                              "example": "z8XtiytyQammquBRlVPiWw"
                            }
                          },
                          "description": "Settings for Progressive dialing method."
                        },
                        {
                          "title": "preview_settings",
                          "type": "object",
                          "properties": {
                            "dialing_strategy": {
                              "type": "string",
                              "description": "Use with the Preview dialing method. \nAutomatic connects calls automatically. Manual allows the agent to dial the calls manually.",
                              "example": "automatic",
                              "default": "automatic",
                              "enum": [
                                "automatic",
                                "manual"
                              ]
                            },
                            "preview_timer": {
                              "type": "integer",
                              "description": "Displays timer before call is initiated automatically.",
                              "example": 5,
                              "default": 5
                            },
                            "enable_skip": {
                              "type": "boolean",
                              "description": "Preview dialing method only. Allow agent to skip outbound engagements.",
                              "example": false
                            },
                            "max_skips": {
                              "maximum": 5,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Preview dialing method only. Configure skip reasons under **Contact Center Preferences**.",
                              "example": 1
                            },
                            "enable_ignore_preview_notification": {
                              "type": "boolean",
                              "description": "Preview dialing method only. Ignoring will automatically update the agent's status based on the **Auto Update Status** settings in **Contact Center Preferences**.",
                              "example": false
                            }
                          },
                          "description": "Settings for Preview dialing method."
                        }
                      ]
                    },
                    "outbound_campaign_priority": {
                      "maximum": 5,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The campaign priority.",
                      "example": 5,
                      "default": 5
                    },
                    "campaign_contact_list": {
                      "type": "array",
                      "description": "Contacts will be dialed in alphabetical order. If a contact has more than one phone number, the numbers will be dialed in the order they are listed until a call is connected or all numbers have been tried.\n\nA list of contact list ids to dial with this campaign. Multiple contact lists can be input here.\n\n**Leave this blank to use this campaign with the outbound dialer API.**",
                      "items": {
                        "required": [
                          "contact_list_id",
                          "contact_list_name"
                        ],
                        "type": "object",
                        "properties": {
                          "contact_list_id": {
                            "type": "string",
                            "description": "The campaign contact list's ID.",
                            "example": "MN2Dtcb2T-yT5CU3clN-AA"
                          },
                          "contact_list_name": {
                            "type": "string",
                            "description": "The campaign contact list's name.",
                            "example": "Contact List"
                          },
                          "contact_list_description": {
                            "type": "string",
                            "description": "The campaign contact list's description.",
                            "example": "Description"
                          },
                          "contacts_count": {
                            "type": "string",
                            "description": "Number of contacts in the contact list.",
                            "example": "1"
                          }
                        },
                        "description": "Contact list ids. These can be retrieved using the [List campaign contact lists API.](https://developers.zoom.us/docs/api/contact-center/#tag/campaign/GET/contact_center/outbound_campaign/contact_lists)"
                      }
                    },
                    "max_ring_time": {
                      "maximum": 120,
                      "minimum": 15,
                      "type": "integer",
                      "description": "Use with `max_ring_time_enabled`. A call is considered unanswered after the maximum ring time has elapsed. Maximum ring time must be between 15 and 120 seconds.",
                      "example": 15
                    },
                    "enable_max_ring_time": {
                      "type": "boolean",
                      "description": "Enabled if max_ring_time is set.",
                      "example": true
                    },
                    "business_hour_source": {
                      "type": "string",
                      "description": "The Contact Center business hour source. Select `queue` to use the outbound queue's business hours, and `campaign` to set custom hours. Defaults to `queue`.\nWhen this value is `queue`, the operating hours are not provided in the API response. [Use the Get Queue Operating Hours API.](/docs/contact-center/apis/#operation/getAQueueOperatingHours)",
                      "example": "queue",
                      "default": "queue",
                      "enum": [
                        "queue",
                        "campaign"
                      ]
                    },
                    "business_hour_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The Contact Center business hours ID. The campaign will only dial during these hours.\n[Create business hours API.](/docs/contact-center/apis/#operation/businessHourCreate)",
                      "example": "h7XtiytFTammquBRlTRiWZ"
                    },
                    "enable_closure_hour": {
                      "type": "boolean",
                      "description": "Toggle closure hours on or off. Outbound calls are not started during closure hours.",
                      "example": true
                    },
                    "closure_set_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The Contact Center closure hours ID.\n[Create closure hours API.](/docs/contact-center/apis/#operation/closuresSetCreate)",
                      "example": "y9XtiytyQammquBRlTPiWw"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `5008` <br>\n Campaign phone number not found. Please check that the phone number exists in Contact Center Preferences and that the ID is correct. <br>\n**Error Code:** `5009` <br>\n Campaign greeting asset not found. Please check that the asset exists in Contact Center Asset Library and that the ID is correct. <br>\n**Error Code:** `5010` <br>\n Campaign AMD asset not found. Please check that the asset exists in Contact Center Asset Library and that the ID is correct. <br>\n**Error Code:** `300` <br>\n Validation failed. <br>\n**Error Code:** `302` <br>\n Invalid enum value. <br>\n**Error Code:** `5011` <br>\n Campaign Business Hour not found. Please check that the Operating Hour exists in Contact Center Preferences and that the ID is correct. <br>\n**Error Code:** `5012` <br>\n Campaign Closure Hour Set not found. Please check that the Operating Hour exists in Contact Center Preferences and that the ID is correct. <br>\n **Error Code:** `5016` <br>\n The maximum number of contacts assigned to a campaign cannot exceed 100000. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign:write:admin",
              "contact_center:write:outbound_campaign:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:outbound_campaign:admin"
          ]
        }
      }
    },
    "/contact_center/outbound_campaign/campaigns/{campaignId}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Get an outbound campaign",
        "description": "Get a Contact Center outbound campaign.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:outbound_campaign:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getOutboundCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The outbound campaign ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TY_XsJuWR9ehXrsf1DSIAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Outbound campaign object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outbound_campaign_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The outbound campaign ID.",
                      "example": "TY_XsJuWR9ehXrsf1DSIAQ"
                    },
                    "outbound_campaign_name": {
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string",
                      "description": "The campaign's name. Names are a unique key among all outbound campaigns.",
                      "example": "My outbound campaign"
                    },
                    "outbound_campaign_description": {
                      "maxLength": 255,
                      "type": "string",
                      "description": "The campaign's description.",
                      "example": "My outbound campaign description"
                    },
                    "queue_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "1 - Only voice queues configured for outbound engagements with at least one user from Zoom Contact Center Premium or Elite packages are available for selection.\\n2 - Queue distribution cannot be configured to Simultaneous or Do Not Distribute.",
                      "example": "TY_XsJuWR9ehXrsf1DSIAQ"
                    },
                    "queue_name": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The queue's name.",
                      "example": "My queue name"
                    },
                    "phone_number_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The reference ID for the Contact Center phone number. This number is displayed to consumers for outbound calls.",
                      "example": "XfTPrZjyR5W6QgNARdtGlw"
                    },
                    "outbound_campaign_status": {
                      "type": "string",
                      "description": "The campaign's status.",
                      "example": "draft",
                      "enum": [
                        "draft",
                        "ready",
                        "running",
                        "paused",
                        "completed",
                        "not_running"
                      ]
                    },
                    "dialing_method": {
                      "type": "string",
                      "description": "The dialer method determines how contacts in this campaign will be dialed.\\nProgressive - engagement details are displayed to the agent **after** they are connected with the consumer.\\nPreview - engagement details are displayed to the agent **before** they are connected with the consumer.",
                      "example": "progressive",
                      "enum": [
                        "progressive",
                        "preview"
                      ]
                    },
                    "dialing_method_settings": {
                      "description": "One of either Progressive or Preview dialing.",
                      "oneOf": [
                        {
                          "title": "progressive_settings",
                          "type": "object",
                          "properties": {
                            "enable_amd": {
                              "type": "boolean",
                              "description": "Enable answering machine detection (AMD). Use this action to detect an answering machine for calls to consumers.\n\nWhen AMD is enabled, these default configurations are set:\n* A person answers - disconnect the call. Optionally, provide an asset id for an asset to play before connecting the call to an agent.\n* An answering machine answers - disconnect the call. Optionally, provide an asset id for an asset to play after the tone and before disconnecting.\n * A FAX machine answers - disconnect the call.\n\nNote: Enabling answering machine detection may increase the connection time between an agent and a consumer, due to the necessity to analyze the audio stream.\n\nBy enabling AMD, you acknowledge that you are responsible for ensuring that your use of this technology complies with local laws and regulations.",
                              "example": true
                            },
                            "amd_settings": {
                              "type": "object",
                              "properties": {
                                "greeting_asset_id": {
                                  "maxLength": 36,
                                  "type": "string",
                                  "description": "The Contact Center Asset Library asset to play when a consumer answers the call, before the agent is connected.",
                                  "example": "zNWo_1M5ScCuKnBb2Z-sfw"
                                },
                                "answering_machine_asset_id": {
                                  "maxLength": 36,
                                  "type": "string",
                                  "description": "The Contact Center Asset Library asset to play when an answering machine is detected.",
                                  "example": "z8XtiytyQammquBRlVPiWw"
                                }
                              },
                              "description": "Answering machine detection (AMD) settings. Use with `enable_amd`."
                            },
                            "enable_abandonment_timeout": {
                              "type": "boolean",
                              "description": "Abandon answered calls if an agent does not connect within a set period of time.",
                              "example": true
                            },
                            "abandonment_timeout": {
                              "maximum": 30,
                              "minimum": 2,
                              "type": "integer",
                              "description": "Use with `enable_abandonment_timeout`. If `enable_abandonment_timeout` is false, this will be set to null.\nA call connected to a consumer will be abandoned if an agent does not connect before the abandonment timeout has elapsed. Abandonment timeout must be between 2 and 30 seconds.",
                              "example": 5,
                              "default": 5
                            },
                            "abandonment_message_asset_id": {
                              "maxLength": 36,
                              "type": "string",
                              "description": "Use with `enable_abandonment_timeout`. The Contact Center Asset Library asset to play when a call is abandoned due to agent unavailability.",
                              "example": "z8XtiytyQammquBRlVPiWw"
                            }
                          },
                          "description": "Settings for Progressive dialing method."
                        },
                        {
                          "title": "preview_settings",
                          "type": "object",
                          "properties": {
                            "dialing_strategy": {
                              "type": "string",
                              "description": "Use with the Preview dialing method. \nAutomatic connects calls automatically. Manual allows the agent to dial the calls manually.",
                              "example": "automatic",
                              "default": "automatic",
                              "enum": [
                                "automatic",
                                "manual"
                              ]
                            },
                            "preview_timer": {
                              "maximum": 60,
                              "minimum": 5,
                              "type": "integer",
                              "description": "Displays timer before call is initiated automatically.",
                              "example": 5,
                              "default": 5
                            },
                            "enable_skip": {
                              "type": "boolean",
                              "description": "Preview dialing method only. Allow agent to skip outbound engagements.",
                              "example": false
                            },
                            "max_skips": {
                              "maximum": 5,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Preview dialing method only. Skip reasons are configured under Contact Center Preferences.",
                              "example": 1,
                              "default": 1
                            },
                            "enable_ignore_preview_notification": {
                              "type": "boolean",
                              "description": "Preview dialing method only. Ignoring will automatically update the agent's status based on the Auto Update Status settings in Contact Center Preferences.",
                              "example": false
                            }
                          },
                          "description": "Settings for Preview dialing method."
                        }
                      ]
                    },
                    "outbound_campaign_priority": {
                      "maximum": 5,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The campaign priority.",
                      "example": 5,
                      "default": 5
                    },
                    "campaign_contact_list": {
                      "type": "array",
                      "description": "Contacts will be dialed in alphabetical order. If a contact has more than one phone number, the numbers will be dialed in the order they are listed until a call is connected or all numbers have been tried.\n\nA list of contact list ids to dial with this campaign. Multiple contact lists can be input here.\n\n**Leave this blank to use this campaign with the outbound dialer API.**",
                      "items": {
                        "required": [
                          "contact_list_id",
                          "contact_list_name"
                        ],
                        "type": "object",
                        "properties": {
                          "contact_list_id": {
                            "type": "string",
                            "description": "The campaign contact list's ID.",
                            "example": "MN2Dtcb2T-yT5CU3clN-AA"
                          },
                          "contact_list_name": {
                            "type": "string",
                            "description": "The campaign contact list's name.",
                            "example": "Contact List"
                          },
                          "contact_list_description": {
                            "type": "string",
                            "description": "The campaign contact list's description.",
                            "example": "Description"
                          },
                          "contacts_count": {
                            "type": "string",
                            "description": "Number of contacts in the contact list.",
                            "example": "1"
                          }
                        },
                        "description": "Contact list IDs. Retrieve these using the [**List campaign contact lists** API.](/docs/api/contact-center/#tag/campaign/GET/contact_center/outbound_campaign/contact_lists)"
                      }
                    },
                    "enable_max_ring_time": {
                      "type": "boolean",
                      "description": "Toggle maximum ring time on or off.",
                      "example": true
                    },
                    "max_ring_time": {
                      "maximum": 120,
                      "minimum": 15,
                      "type": "integer",
                      "description": "Use with `max_ring_time_enabled`. A call is considered unanswered after the maximum ring time has elapsed. Maximum ring time must be between 15 and 120 seconds.",
                      "example": 60,
                      "default": 60
                    },
                    "business_hour_source": {
                      "type": "string",
                      "description": "The Contact Center business hour source. Select `queue` to use the outbound queue's business hours, and `campaign` to set custom hours. Defaults to `queue`.",
                      "example": "queue",
                      "default": "queue",
                      "enum": [
                        "queue",
                        "campaign"
                      ]
                    },
                    "business_hour_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The Contact Center business hours ID. The campaign will only dial during these hours.\n[Create business hours API.](/docs/contact-center/apis/#operation/businessHourCreate)",
                      "example": "h7XtiytFTammquBRlTRiWZ"
                    },
                    "enable_closure_hour": {
                      "type": "boolean",
                      "description": "Toggle closure hours on or off. Outbound calls are not started during closure hours.",
                      "example": true
                    },
                    "closure_set_id": {
                      "maxLength": 36,
                      "type": "string",
                      "description": "The Contact Center closure hours ID.\n[Create closure hours API.](/docs/contact-center/apis/#operation/closuresSetCreate)",
                      "example": "y9XtiytyQammquBRlTPiWw"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5005` <br>\n Campaign not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign:read:admin",
              "contact_center:read:outbound_campaign:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:outbound_campaign:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Delete an outbound campaign",
        "description": "Delete a Contact Center's outbound campaign.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign:delete:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:outbound_campaign:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteOutboundCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The outbound campaign ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TY_XsJuWR9ehXrsf1DSIAQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Outbound campaign is removed."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5005` <br>\n Campaign not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign:delete:admin",
              "contact_center:delete:outbound_campaign:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign:delete:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:outbound_campaign:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Update an outbound campaign",
        "description": "Update an outbound Contact Center campaign.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign:update:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:outbound_campaign:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateOutboundCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The outbound campaign ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TY_XsJuWR9ehXrsf1DSIAQ"
            }
          }
        ],
        "requestBody": {
          "description": "The outbound campaign request data.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "outbound_campaign_name": {
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string",
                    "description": "The campaign's name. Names are a unique key among all outbound campaigns.",
                    "example": "My outbound campaign name"
                  },
                  "outbound_campaign_description": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The campaign's description.",
                    "example": "My outbound campaign description"
                  },
                  "phone_number_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The reference ID for the Contact Center phone number. This number is displayed to consumers for outbound calls.",
                    "example": "XfTPrZjyR5W6QgNARdtGlw"
                  },
                  "outbound_campaign_priority": {
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer",
                    "description": "The campaign priority.",
                    "example": 5,
                    "default": 5
                  },
                  "enable_max_ring_time": {
                    "type": "boolean",
                    "description": "Disconnect unanswered calls after a set period of time has elapsed.",
                    "example": true
                  },
                  "max_ring_time": {
                    "maximum": 120,
                    "minimum": 15,
                    "type": "integer",
                    "description": "Use with `max_ring_time_enabled`. A call is considered unanswered after the maximum ring time has elapsed. Maximum ring time must be between 15 and 120 seconds.",
                    "example": 15
                  },
                  "enable_abandonment_timeout": {
                    "type": "boolean",
                    "description": "Progressive dialing method only. Abandon answered calls if an agent does not connect within a set period of time.",
                    "example": true
                  },
                  "abandonment_timeout": {
                    "maximum": 30,
                    "minimum": 2,
                    "type": "integer",
                    "description": "Use with `enable_abandonment_timeout`. If `enable_abandonment_timeout` is false, then this will value is ignored.\nA call connected to a consumer will be abandoned if an agent does not connect before the abandonment timeout elapses. Abandonment timeout must be between 2 and 30 seconds.",
                    "example": 5
                  },
                  "abandonment_message_asset_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "Use with `enable_abandonment_timeout`. The Contact Center Asset Library asset to play when a call is abandoned due to agent unavailability.",
                    "example": "z8XtiytyQammquBRlVPiWw"
                  },
                  "enable_skip": {
                    "type": "boolean",
                    "description": "Preview dialing method only. Allow agent to skip outbound engagements.",
                    "example": true
                  },
                  "max_skips": {
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Preview dialing method only. Skip reasons are configured under Contact Center Preferences.",
                    "example": 1
                  },
                  "business_hour_source": {
                    "type": "string",
                    "description": "The Contact Center business hour source. Select `queue` to use the outbound queue's business hours, and `campaign` to set custom hours. Defaults to `queue`.",
                    "example": "campaign",
                    "default": "queue",
                    "enum": [
                      "queue",
                      "campaign"
                    ]
                  },
                  "business_hour_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The Contact Center business hours ID. The campaign will only dial during these hours.\n[Create business hours API.](/docs/contact-center/apis/#operation/businessHourCreate)",
                    "example": "rYyRJRjGQhi8gFNP9G7pSw"
                  },
                  "enable_closure_hour": {
                    "type": "boolean",
                    "description": "Toggle closure hours on or off. Outbound calls are not started during closure hours.",
                    "example": true
                  },
                  "closure_set_id": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The Contact Center closure hours ID.\n[Create closure hours API.](/docs/contact-center/apis/#operation/closuresSetCreate)",
                    "example": "IlSdt6YUQES8nkOqSehKJg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`     Outbound Campaign is updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. <br>\n**Error Code:** `302` <br>\n Invalid enum value. <br>\n**Error Code:** `5008` <br>\n Campaign phone number not found. Please check that the phone number exists in **Contact Center Preferences** and that the ID is correct. <br>\n**Error Code:** `5011` <br>\n Campaign business hour not found. Please check that the operating hours exist in **Contact Center Preferences** and that the ID is correct. <br>\n**Error Code:** `5012` <br>\n Campaign closure hour set not found. Please check that the operating hours exist in **Contact Center Preferences** and that the ID is correct. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5005` <br>\n Campaign is not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign:update:admin",
              "contact_center:update:outbound_campaign:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign:update:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:outbound_campaign:admin"
          ]
        }
      }
    },
    "/contact_center/outbound_campaign/contact_lists": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "List campaign contact lists",
        "description": "List campaign contact lists.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contactlist:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:outbound_campaign_contactlist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listCampaignContactLists",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`     Campaign contact lists are returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "contact_lists": {
                      "type": "array",
                      "description": "Array of contact lists.",
                      "items": {
                        "required": [
                          "contact_list_id",
                          "contact_list_name",
                          "contacts_phones"
                        ],
                        "type": "object",
                        "properties": {
                          "contact_list_id": {
                            "type": "string",
                            "description": "The campaign contact list's ID.",
                            "example": "MN2Dtcb2T-yT5CU3clN-AA"
                          },
                          "contact_list_name": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string",
                            "description": "The campaign contact list's name.",
                            "example": "Contact List"
                          },
                          "contact_list_description": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The campaign contact list's description.",
                            "example": "Description"
                          },
                          "contacts_count": {
                            "maximum": 100000,
                            "type": "integer",
                            "description": "Number of contacts in the contact list.",
                            "example": 1
                          }
                        },
                        "description": "Contact lists object"
                      }
                    }
                  },
                  "description": "Contact list items"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contactlist:read:admin",
              "contact_center:read:outbound_campaign_contactlist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contactlist:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:outbound_campaign_contactlist:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create a campaign contact list",
        "description": "Create a campaign contact list. Supports only contact list, NOT Do Not Contact Lists\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contactlist:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:outbound_campaign_contactlist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createCampaignContactList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "contact_list_name"
                ],
                "type": "object",
                "properties": {
                  "contact_list_name": {
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string",
                    "description": "The name of the contact list",
                    "example": "Contact List"
                  },
                  "contact_list_description": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of the contact list",
                    "example": "This is a description"
                  }
                },
                "description": "Campaign contact list object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`     Campaign contact list is created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contact_list_id": {
                      "type": "string",
                      "description": "ID of the created contact list",
                      "example": "rfMoVPVYS3yjWJAzdOOlWA"
                    },
                    "contact_list_name": {
                      "type": "string",
                      "description": "Name of the contact list",
                      "example": "Contact List"
                    },
                    "contact_list_description": {
                      "type": "string",
                      "description": "Description of the contact list",
                      "example": "Description"
                    },
                    "contacts_count": {
                      "type": "integer",
                      "description": "Number of contacts",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contactlist:write:admin",
              "contact_center:write:outbound_campaign_contactlist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contactlist:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:outbound_campaign_contactlist:admin"
          ]
        }
      }
    },
    "/contact_center/outbound_campaign/contact_lists/{contactListId}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Get a campaign contact list",
        "description": "Get a campaign contact list.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contactlist:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:outbound_campaign_contactlist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getCampaignContactList",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "Contact list ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MN2Dtcb2T-yT5CU3clN-AA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Campaign contact list is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contact_list_id",
                    "contact_list_name"
                  ],
                  "type": "object",
                  "properties": {
                    "contact_list_id": {
                      "type": "string",
                      "description": "The campaign contact list's ID.",
                      "example": "MN2Dtcb2T-yT5CU3clN-AA"
                    },
                    "contact_list_name": {
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string",
                      "description": "The campaign contact list's name.",
                      "example": "Contact List"
                    },
                    "contact_list_description": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The campaign contact list's description.",
                      "example": "Description"
                    },
                    "contacts_count": {
                      "maximum": 100000,
                      "type": "integer",
                      "description": "Number of contacts in the contact list.",
                      "example": 1
                    }
                  },
                  "description": "Campaign contact list object."
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5001` <br>\n Contact list is not found <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contactlist:read:admin",
              "contact_center:read:outbound_campaign_contactlist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contactlist:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:outbound_campaign_contactlist:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Remove a campaign contact list",
        "description": "Delete a campaign contact list\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contactlist:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:outbound_campaign_contactlist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteCampaignContactList",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "The contact list ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TY_XsJuWR9ehXrsf1DSIAQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`     Campaign contact list is removed."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5001` <br>\n Contact list not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contactlist:write:admin",
              "contact_center:delete:outbound_campaign_contactlist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contactlist:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:outbound_campaign_contactlist:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Update a campaign contact list",
        "description": "Update a campaign contact list\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contactlist:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:outbound_campaign_contactlist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateCampaignContactList",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "Campaign contact list Id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "07UQHRzvQ02R_o-l9pBB4w"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact_list_name": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the campaign contact list",
                    "example": "New Name"
                  },
                  "contact_list_description": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description for the campaign contact list",
                    "example": "New Description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`     Campaign contact list is updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5001` <br>\n Contact list not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contactlist:write:admin",
              "contact_center:update:outbound_campaign_contactlist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contactlist:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:outbound_campaign_contactlist:admin"
          ]
        }
      }
    },
    "/contact_center/outbound_campaign/contact_lists/{contactListId}/contacts": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "List campaign contact list contacts",
        "description": "List contacts on a campaign contact list.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contacts:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:outbound_campaign_contacts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listCampaignContactListContacts",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "Campaign contact list ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "rfMoVPVYS3yjWJAzdOOlWA"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`     Campaign contacts of contact list are returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "contacts": {
                      "type": "array",
                      "description": "Array of contacts.",
                      "items": {
                        "required": [
                          "contact_display_name",
                          "contact_id",
                          "contact_phones"
                        ],
                        "type": "object",
                        "properties": {
                          "contact_id": {
                            "type": "string",
                            "description": "The contact ID.",
                            "example": "07UQHRzvQ02R_o-l9pBB4w"
                          },
                          "contact_display_name": {
                            "maxLength": 64,
                            "type": "string",
                            "description": "The contact's display name.",
                            "example": "Jill Chill"
                          },
                          "contact_first_name": {
                            "maxLength": 64,
                            "type": "string",
                            "description": "The contact's first name.",
                            "example": "Jill"
                          },
                          "contact_last_name": {
                            "maxLength": 64,
                            "type": "string",
                            "description": "The contact's last name.",
                            "example": "Chill"
                          },
                          "contact_phones": {
                            "maxItems": 5,
                            "type": "array",
                            "description": "The contact's phone numbers.",
                            "items": {
                              "required": [
                                "contact_phone_number",
                                "contact_phone_type"
                              ],
                              "type": "object",
                              "properties": {
                                "contact_phone_number": {
                                  "type": "string",
                                  "description": "Phone number, in E164 format.",
                                  "example": "+12345551100"
                                },
                                "contact_phone_type": {
                                  "type": "string",
                                  "description": "The phone's type.",
                                  "example": "Main",
                                  "enum": [
                                    "Main",
                                    "Home",
                                    "Work",
                                    "Mobile",
                                    "Other"
                                  ]
                                }
                              }
                            }
                          },
                          "contact_emails": {
                            "maxItems": 4,
                            "uniqueItems": true,
                            "type": "array",
                            "description": "Array of emails",
                            "items": {
                              "type": "string",
                              "description": "The contact's email.",
                              "format": "email",
                              "example": "test@example.com"
                            }
                          },
                          "contact_location": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The contact's location.",
                            "example": "Location"
                          },
                          "contact_account_number": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The contact's account number.",
                            "example": "123"
                          },
                          "contact_company": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The contact's company.",
                            "example": "Zoom"
                          },
                          "contact_role": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The contact's role.",
                            "example": "developer"
                          }
                        },
                        "description": "Contact object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contacts:read:admin",
              "contact_center:read:outbound_campaign_contacts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contacts:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:outbound_campaign_contacts:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create a campaign contact list's contact",
        "description": "Add a new contact to a campaign contact list.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contacts:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:outbound_campaign_contacts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createCampaignContactListContact",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "Campaign Contact List",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MN2Dtcb2T-yT5CU3clN-AA"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "contact_display_name",
                  "contact_phones"
                ],
                "type": "object",
                "properties": {
                  "contact_display_name": {
                    "maxLength": 64,
                    "minLength": 1,
                    "type": "string",
                    "description": "The contact's display name.",
                    "example": "Display Name"
                  },
                  "contact_first_name": {
                    "maxLength": 64,
                    "type": "string",
                    "description": "The contact's first name.",
                    "example": "First Name"
                  },
                  "contact_last_name": {
                    "maxLength": 64,
                    "type": "string",
                    "description": "The contact's last name.",
                    "example": "Last Name"
                  },
                  "contact_phones": {
                    "maxItems": 5,
                    "type": "array",
                    "description": "Supports up to 5 phone numbers. Only one main or primary phone number is supported.",
                    "items": {
                      "required": [
                        "contact_phone_number",
                        "contact_phone_type"
                      ],
                      "type": "object",
                      "properties": {
                        "contact_phone_number": {
                          "type": "string",
                          "description": "Phone number in E164 format.",
                          "example": "+12345551100"
                        },
                        "contact_phone_type": {
                          "type": "string",
                          "description": "The phone's type.",
                          "example": "Main",
                          "enum": [
                            "Main",
                            "Work",
                            "Home",
                            "Mobile",
                            "Other"
                          ]
                        }
                      }
                    }
                  },
                  "contact_emails": {
                    "maxItems": 4,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "Supports up to 4 emails, with a maximum of 1100 characters total.",
                    "items": {
                      "type": "string",
                      "description": "Email address",
                      "example": "test@gmail.com"
                    }
                  },
                  "contact_location": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's location.",
                    "example": "Location"
                  },
                  "contact_account_number": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's account number.",
                    "example": "111"
                  },
                  "contact_company": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's company",
                    "example": "zoom"
                  },
                  "contact_role": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's role.",
                    "example": "developer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` New contact has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contact_display_name",
                    "contact_id",
                    "contact_phones"
                  ],
                  "type": "object",
                  "properties": {
                    "contact_id": {
                      "type": "string",
                      "description": "The contact's ID.",
                      "example": "GgAOGeRFQOqJlphf3gqhqg"
                    },
                    "contact_display_name": {
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string",
                      "description": "The contact's display name.",
                      "example": "Jill Chill"
                    },
                    "contact_first_name": {
                      "maxLength": 64,
                      "type": "string",
                      "description": "The contact's first name.",
                      "example": "Jill"
                    },
                    "contact_last_name": {
                      "maxLength": 64,
                      "type": "string",
                      "description": "The contact's last name.",
                      "example": "Chill"
                    },
                    "contact_phones": {
                      "maxItems": 5,
                      "minItems": 1,
                      "type": "array",
                      "description": "Contact emails",
                      "items": {
                        "required": [
                          "contact_phone_number",
                          "contact_phone_type"
                        ],
                        "type": "object",
                        "properties": {
                          "contact_phone_number": {
                            "type": "string",
                            "description": "The phone number, in E164 format.",
                            "example": "+12345551100"
                          },
                          "contact_phone_type": {
                            "type": "string",
                            "description": "Phone type",
                            "example": "Main",
                            "enum": [
                              "Main",
                              "Work",
                              "Home",
                              "Mobile",
                              "Other"
                            ]
                          }
                        }
                      }
                    },
                    "contact_emails": {
                      "maxItems": 4,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The contact's email addresses.",
                      "items": {
                        "type": "string",
                        "description": "Email address",
                        "format": "email",
                        "example": "jillchill@example.com"
                      }
                    },
                    "contact_location": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "The contact's location.",
                      "example": "Location"
                    },
                    "contact_account_number": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "Account number",
                      "example": "111"
                    },
                    "contact_company": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "Contact company",
                      "example": "zoom"
                    },
                    "contact_role": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "Contact role",
                      "example": "developer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. <br>\n**Error Code:** `5003` <br>\n Contact already exists. <br>\n**Error Code:** `5004` <br>\n Reached limit of contacts per contact list. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5001` <br>\n Contact list is not found <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contacts:write:admin",
              "contact_center:write:outbound_campaign_contacts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contacts:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:outbound_campaign_contacts:admin"
          ]
        }
      }
    },
    "/contact_center/outbound_campaign/contact_lists/{contactListId}/contacts/{contactId}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Get a campaign contact list's contact",
        "description": "Get a contact on a campaign contact list.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contacts:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:outbound_campaign_contacts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getCampaignContactListContact",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "Campaign contact list's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MN2Dtcb2T-yT5CU3clN-AA"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "Campaign contact list's contact ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "07UQHRzvQ02R_o-l9pBB4w"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` Campaign contact list contact is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contact_display_name",
                    "contact_id",
                    "contact_phones"
                  ],
                  "type": "object",
                  "properties": {
                    "contact_id": {
                      "type": "string",
                      "description": "Campaign contact list contact Id",
                      "example": "07UQHRzvQ02R_o-l9pBB4w"
                    },
                    "contact_display_name": {
                      "maxLength": 64,
                      "type": "string",
                      "description": "Display name of the contact",
                      "example": "Display Name"
                    },
                    "contact_first_name": {
                      "maxLength": 64,
                      "type": "string",
                      "description": "First name of the contact",
                      "example": "First Name"
                    },
                    "contact_last_name": {
                      "maxLength": 64,
                      "type": "string",
                      "description": "Last name of the contact",
                      "example": "Last Name"
                    },
                    "contact_phones": {
                      "maxItems": 5,
                      "type": "array",
                      "description": "Array of phones",
                      "items": {
                        "required": [
                          "contact_phone_number",
                          "contact_phone_type"
                        ],
                        "type": "object",
                        "properties": {
                          "contact_phone_number": {
                            "type": "string",
                            "description": "Phone number, E164 format",
                            "example": "+12345551100"
                          },
                          "contact_phone_type": {
                            "type": "string",
                            "description": "Type of the phone",
                            "example": "Main",
                            "enum": [
                              "Main",
                              "Home",
                              "Work",
                              "Mobile",
                              "Other"
                            ]
                          }
                        },
                        "description": "Phone object"
                      }
                    },
                    "contact_emails": {
                      "maxItems": 4,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "Array of emails",
                      "items": {
                        "type": "string",
                        "description": "Email of the contact",
                        "format": "email",
                        "example": "test@gmail.com"
                      }
                    },
                    "contact_location": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "Location of the contact",
                      "example": "Location"
                    },
                    "contact_account_number": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "Account number of the contact",
                      "example": "123"
                    },
                    "contact_company": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "Company of the contact",
                      "example": "zoom"
                    },
                    "contact_role": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "Role of the contact",
                      "example": "developer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5001` <br>\n Contact list not found. <br>\n**Error Code:** `5002` <br>\n Contact not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contacts:read:admin",
              "contact_center:read:outbound_campaign_contacts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contacts:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:outbound_campaign_contacts:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Remove campaign contact list's contact",
        "description": "Remove a contact by ID from a campaign contact list.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contacts:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:outbound_campaign_contacts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteCampaigncontactListContact",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "Campaign contact list ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "rfMoVPVYS3yjWJAzdOOlWA"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "Campaign contact list contact's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "07UQHRzvQ02R_o-l9pBB4w"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`     Contact is deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5001` <br>\n Contact list is not found. <br>\n**Error Code:** `5002` <br>\n Contact is not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contacts:write:admin",
              "contact_center:delete:outbound_campaign_contacts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contacts:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:outbound_campaign_contacts:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Update a contact on a campaign contact list",
        "description": "Update a contact on a campaign contact list.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_outbound_campaign_contacts:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:outbound_campaign_contacts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateCampaignContactListContact",
        "parameters": [
          {
            "name": "contactListId",
            "in": "path",
            "description": "Campaign contact list",
            "required": true,
            "schema": {
              "type": "string",
              "example": "rfMoVPVYS3yjWJAzdOOlWA"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "Campaign contact",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MN2Dtcb2T-yT5CU3clN-AA"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact_display_name": {
                    "maxLength": 64,
                    "minLength": 1,
                    "type": "string",
                    "description": "The contact's display name.",
                    "example": "Jill Chill"
                  },
                  "contact_first_name": {
                    "maxLength": 64,
                    "type": "string",
                    "description": "The contact's first name.",
                    "example": "Jill"
                  },
                  "contact_last_name": {
                    "maxLength": 64,
                    "type": "string",
                    "description": "The contact's last name.",
                    "example": "Chill"
                  },
                  "contact_phones": {
                    "maxItems": 5,
                    "type": "array",
                    "description": "Supports up to 5 numbers. Only one main or primar phone number is supported.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contact_phone_number": {
                          "type": "string",
                          "description": "Phone number, in E164 format.",
                          "example": "+12345551100"
                        },
                        "contact_phone_type": {
                          "type": "string",
                          "description": "The phone's type.",
                          "example": "Main",
                          "enum": [
                            "Main",
                            "Work",
                            "Home",
                            "Mobile",
                            "Other"
                          ]
                        }
                      }
                    }
                  },
                  "contact_emails": {
                    "maxItems": 4,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "Supports up to 4 emails, a maximum of 1100 characters in total.",
                    "items": {
                      "type": "string",
                      "description": "Email address.",
                      "example": "jillchill@example.com"
                    }
                  },
                  "contact_location": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's location.",
                    "example": "Zurich"
                  },
                  "contact_account_number": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's account number.",
                    "example": "111"
                  },
                  "contact_company": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's company.",
                    "example": "Zoom"
                  },
                  "contact_role": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The contact's role.",
                    "example": "developer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Contact is updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5001` <br>\n Contact list not found. <br>\n**Error Code:** `5002` <br>\n Contact not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_outbound_campaign_contacts:write:admin",
              "contact_center:update:outbound_campaign_contacts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_outbound_campaign_contacts:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:outbound_campaign_contacts:admin"
          ]
        }
      }
    },
    "/contact_center/dispositions": {
      "get": {
        "tags": [
          "Dispositions"
        ],
        "summary": "List dispositions",
        "description": "Return a list of available dispositions. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_dispositions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listDispositions",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nDispositions returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "dispositions": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Information about the disposition.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_id": {
                            "type": "string",
                            "description": "The disposition's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_name": {
                            "type": "string",
                            "description": "The disposition's name.",
                            "example": "Inquiry"
                          },
                          "disposition_description": {
                            "type": "string",
                            "description": "The disposition's description.",
                            "example": "Inquiry dispositions."
                          },
                          "status": {
                            "type": "string",
                            "description": "The disposition's active status. \n* `inactive` - Deactivated. \n* `active` - Activated.",
                            "example": "inactive",
                            "enum": [
                              "inactive",
                              "active"
                            ]
                          },
                          "queue_count": {
                            "type": "integer",
                            "description": "The number of queues associated with the disposition.",
                            "example": 0
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the disposition was last modified.",
                            "format": "date-time",
                            "example": "2021-12-03T05:07:46Z"
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user who last modified the disposition.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "disposition_type": {
                            "type": "string",
                            "description": "The disposition type.",
                            "example": "single",
                            "enum": [
                              "single",
                              "multi_level"
                            ]
                          }
                        },
                        "description": "Information about the disposition."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:read:admin",
              "contact_center:read:list_dispositions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_dispositions:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Create a disposition",
        "description": "Create a new [disposition](https://support.zoom.us/hc/en-us/articles/4470153057549-Managing-dispositions). Dispositions let agents assign an outcome or topic to each engagement. After creating dispositions, you can add them to queues. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:disposition:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createDisposition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "disposition_name"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The disposition's active status. \n* `inactive` - Deactivated. \n* `active` - Activated.",
                    "example": "inactive",
                    "default": "inactive",
                    "enum": [
                      "inactive",
                      "active"
                    ]
                  },
                  "disposition_name": {
                    "type": "string",
                    "description": "The disposition's name.",
                    "example": "Inquiry"
                  },
                  "disposition_description": {
                    "type": "string",
                    "description": "The disposition's description.",
                    "example": "Inquiry dispositions."
                  },
                  "disposition_type": {
                    "type": "string",
                    "description": "The disposition's type.",
                    "example": "multi_level",
                    "default": "single",
                    "enum": [
                      "single",
                      "multi_level"
                    ]
                  },
                  "sub_dispositions": {
                    "maxItems": 500,
                    "type": "array",
                    "description": "For `single` dispositions, this field can be ignored. For `multi_level` dispositions, there must be at least one subdisposition. There can be up to 500, and each parent node can have up to 20 child nodes. Child nodes can only have up to 4 levels.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "sub_disposition_name": {
                          "type": "string",
                          "description": "The subdisposition's name.",
                          "example": "Subdisposition A"
                        },
                        "current_index": {
                          "maximum": 500,
                          "minimum": 1,
                          "type": "number",
                          "description": "The subdisposition's unique identifier.",
                          "example": 1
                        },
                        "parent_index": {
                          "maximum": 499,
                          "type": "number",
                          "description": "The index of the parent node that the current node belongs to. \nIf it is `0`, it means that the current node belongs to the root node.\nIf the parent index does not exist, the node will be discarded.",
                          "example": 0
                        }
                      }
                    }
                  }
                },
                "description": "Information about the new disposition."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nDisposition created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "disposition_id": {
                      "type": "string",
                      "description": "The disposition's ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "disposition_name": {
                      "type": "string",
                      "description": "The disposition's name.",
                      "example": "Inquiry"
                    },
                    "disposition_description": {
                      "type": "string",
                      "description": "The disposition's description.",
                      "example": "Inquiry dispositions."
                    },
                    "status": {
                      "type": "string",
                      "description": "The disposition's active status. \n* `inactive` - Deactivated. \n* `active` - Activated.",
                      "example": "inactive",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the disposition was last modified.",
                      "format": "date-time",
                      "example": "2021-12-03T05:07:46Z"
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the disposition.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "disposition_type": {
                      "type": "string",
                      "description": "The disposition's type.",
                      "example": "multi_level",
                      "enum": [
                        "single",
                        "multi_level"
                      ]
                    }
                  },
                  "description": "Information about the disposition."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2402` <br>\n That disposition name already exists. Use a different name. <br>\n**Error Code:** `2504` <br>\n Sub dispositions total size should be less than or equal to 500. <br>\n**Error Code:** `2505` <br>\n Sub Disposition current index repeated. <br>\n**Error Code:** `2507` <br>\n Multi_level disposition no sub dispositions. <br>\n**Error Code:** `2508` <br>\n Duplicate sub disposition name on the same tier. <br>\n**Error Code:** `2509` <br>\n Sub disposition tier size should be more than 0 and less than 5. <br>\n**Error Code:** `2512` <br>\n The number of sub dispositions on the same tier should less than or equal to 20. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:write:admin",
              "contact_center:write:disposition:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:disposition:admin"
          ]
        }
      }
    },
    "/contact_center/dispositions/sets": {
      "get": {
        "tags": [
          "Dispositions"
        ],
        "summary": "List disposition sets",
        "description": "Return a list of available disposition sets. You can use sets to organize dispositions into groups. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_disposition_sets:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listSets",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nDisposition sets returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 30
                    },
                    "disposition_sets": {
                      "type": "array",
                      "description": "Information about the disposition set.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_set_id": {
                            "type": "string",
                            "description": "The set's ID.",
                            "example": "saaHWgVMGQU69soco456oNA"
                          },
                          "disposition_set_name": {
                            "type": "string",
                            "description": "The set's name.",
                            "example": "Lead created"
                          },
                          "disposition_set_description": {
                            "type": "string",
                            "description": "The set's description.",
                            "example": "New leads generated."
                          },
                          "status": {
                            "type": "string",
                            "description": "The set's active status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                            "example": "inactive",
                            "enum": [
                              "inactive",
                              "active"
                            ]
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the set was last modified.",
                            "format": "date-time",
                            "example": "2021-12-03T05:07:46Z"
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user who last modified the set.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "dispositions_count": {
                            "type": "integer",
                            "description": "The number of dispositions associated with the disposition set.",
                            "example": 0
                          },
                          "queues_count": {
                            "type": "integer",
                            "description": "The number of queues associated with the disposition sets.",
                            "example": 0
                          }
                        },
                        "description": "Information about the disposition set."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:read:admin",
              "contact_center:read:list_disposition_sets:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_disposition_sets:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Create a disposition set",
        "description": "Create a new disposition set. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:disposition_set:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "disposition_set_name"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The set's active status. \n* `inactive` - Deactivated. \n* `active` - Activated.",
                    "example": "inactive",
                    "default": "inactive",
                    "enum": [
                      "inactive",
                      "active"
                    ]
                  },
                  "disposition_set_name": {
                    "type": "string",
                    "description": "The set's name.",
                    "example": "Lead created"
                  },
                  "disposition_set_description": {
                    "type": "string",
                    "description": "The set's description.",
                    "example": "New leads generated."
                  },
                  "disposition_ids": {
                    "maxItems": 50,
                    "type": "array",
                    "description": "Information about the set's assigned dispositions.",
                    "items": {
                      "type": "string",
                      "description": "The disposition's ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    }
                  }
                },
                "description": "Information about the created disposition set."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nDisposition created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "disposition_set_id": {
                      "type": "string",
                      "description": "The set's ID.",
                      "example": "saaHWgVMGQU69soco456oNA"
                    },
                    "disposition_set_name": {
                      "type": "string",
                      "description": "The set's name.",
                      "example": "Lead created"
                    },
                    "disposition_set_description": {
                      "type": "string",
                      "description": "The set's description.",
                      "example": "New leads generated."
                    },
                    "status": {
                      "type": "string",
                      "description": "The set's active status. \n* `inactive` - Deactivated. \n* `active` - Activated.",
                      "example": "inactive",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the set was last modified.",
                      "format": "date-time",
                      "example": "2021-12-03T05:07:46Z"
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the set.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "dispositions": {
                      "maxItems": 50,
                      "type": "array",
                      "description": "Information about the set's assigned dispositions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_id": {
                            "type": "string",
                            "description": "The disposition's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_name": {
                            "type": "string",
                            "description": "The disposition's name.",
                            "example": "Inquiry"
                          }
                        },
                        "description": "Information about the disposition set."
                      }
                    }
                  },
                  "description": "Information about the disposition set."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2502` <br>\n That set name already exists. Use a different name. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2403` <br>\n Disposition does not exist: $disposition_ids. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:write:admin",
              "contact_center:write:disposition_set:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:disposition_set:admin"
          ]
        }
      }
    },
    "/contact_center/dispositions/sets/{dispositionSetId}": {
      "get": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Get a disposition set",
        "description": "Retrieve information about a disposition set. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:disposition_set:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getSet",
        "parameters": [
          {
            "name": "dispositionSetId",
            "in": "path",
            "description": "The set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSet returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "disposition_set_id": {
                      "type": "string",
                      "description": "The set's ID.",
                      "example": "saaHWgVMGQU69soco456oNA"
                    },
                    "disposition_set_name": {
                      "type": "string",
                      "description": "The set's name.",
                      "example": "Lead created"
                    },
                    "disposition_set_description": {
                      "type": "string",
                      "description": "The set's description.",
                      "example": "New leads generated."
                    },
                    "status": {
                      "type": "string",
                      "description": "The set's active status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                      "example": "inactive",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the set was last modified.",
                      "format": "date-time",
                      "example": "2021-12-03T05:07:46Z"
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the set.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "dispositions": {
                      "type": "array",
                      "description": "Information about the set's assigned dispositions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_id": {
                            "type": "string",
                            "description": "The disposition's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_name": {
                            "type": "string",
                            "description": "The disposition's name.",
                            "example": "Inquiry"
                          }
                        },
                        "description": "Information about the disposition set."
                      }
                    },
                    "queues": {
                      "type": "array",
                      "description": "Information about the set's assigned queue.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "Sales"
                          }
                        },
                        "description": "Information about the queue."
                      }
                    }
                  },
                  "description": "Information about the disposition set."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2501` <br>\n Set does not exist: $setId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:read:admin",
              "contact_center:read:disposition_set:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:disposition_set:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Delete a disposition set",
        "description": "Delete a disposition set. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:disposition_set:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteSet",
        "parameters": [
          {
            "name": "dispositionSetId",
            "in": "path",
            "description": "The set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204 `  \n \nSet deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2501` <br>\n Set does not exist: $setId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:write:admin",
              "contact_center:delete:disposition_set:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:disposition_set:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Update a disposition set",
        "description": "Update an existing disposition set. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:disposition_set:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateSet",
        "parameters": [
          {
            "name": "dispositionSetId",
            "in": "path",
            "description": "The set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disposition_set_name": {
                    "type": "string",
                    "description": "The set's name.",
                    "example": "Lead created"
                  },
                  "disposition_set_description": {
                    "type": "string",
                    "description": "The set's description.",
                    "example": "New leads generated."
                  },
                  "status": {
                    "type": "string",
                    "description": "The set's active status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                    "example": "inactive",
                    "enum": [
                      "inactive",
                      "active"
                    ]
                  },
                  "disposition_ids": {
                    "maxItems": 50,
                    "type": "array",
                    "description": "A list of disposition IDs to add to the set.",
                    "items": {
                      "type": "string",
                      "description": "The disposition's ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nSet updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2502` <br>\n That set name already exists. Use a different name. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2501` <br>\n Set does not exist: $dispositionSetId. <br>\n**Error Code:** `2403` <br>\n Dispositions do not exist: $disposition_ids. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:write:admin",
              "contact_center:update:disposition_set:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:disposition_set:admin"
          ]
        }
      }
    },
    "/contact_center/dispositions/{dispositionId}": {
      "get": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Get a disposition",
        "description": "Retrieve information about a disposition. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:disposition:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getDisposition",
        "parameters": [
          {
            "name": "dispositionId",
            "in": "path",
            "description": "The disposition's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nDisposition returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "disposition_id": {
                      "type": "string",
                      "description": "The disposition's ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "disposition_name": {
                      "type": "string",
                      "description": "The disposition's name.",
                      "example": "Inquiry"
                    },
                    "disposition_description": {
                      "type": "string",
                      "description": "The disposition's description.",
                      "example": "Inquiry dispositions."
                    },
                    "status": {
                      "type": "string",
                      "description": "The disposition's active status. \n* `inactive` - Deactivated. \n* `active` - Activated.",
                      "example": "inactive",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "queue_count": {
                      "type": "integer",
                      "description": "The number of queues associated with the disposition.",
                      "example": 0
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the disposition was last modified.",
                      "format": "date-time",
                      "example": "2021-12-03T05:07:46Z"
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the disposition.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "disposition_type": {
                      "type": "string",
                      "description": "The disposition's type.",
                      "example": "multi_level",
                      "enum": [
                        "single",
                        "multi_level"
                      ]
                    },
                    "sub_dispositions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sub_disposition_id": {
                            "type": "string",
                            "description": "The sub disposition's ID.",
                            "example": ""
                          },
                          "sub_disposition_name": {
                            "type": "string",
                            "description": "The sub disposition's name.",
                            "example": "Sub Disposition A"
                          },
                          "current_index": {
                            "type": "number",
                            "description": "The sub disposition's unique identifier.",
                            "example": 1
                          },
                          "parent_index": {
                            "type": "number",
                            "description": "The index of the parent node that the current sub disposition belongs to. `parent_index` - `0` means that the parent node of the current node is the root node.",
                            "example": 1
                          }
                        }
                      }
                    }
                  },
                  "description": "Information about the disposition."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2401` <br>\n Disposition does not exist: $dispositionId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:read:admin",
              "contact_center:read:disposition:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:disposition:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Delete a disposition",
        "description": "Delete an existing disposition. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:disposition:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteDisposition",
        "parameters": [
          {
            "name": "dispositionId",
            "in": "path",
            "description": "The disposition's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204 `  \n \nDisposition deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2401` <br>\n Disposition does not exist: $dispositionId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:write:admin",
              "contact_center:delete:disposition:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:disposition:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Dispositions"
        ],
        "summary": "Update a disposition",
        "description": "Update an existing disposition. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_disposition:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:disposition:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateDisposition",
        "parameters": [
          {
            "name": "dispositionId",
            "in": "path",
            "description": "The disposition's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disposition_name": {
                    "type": "string",
                    "description": "The disposition's name.",
                    "example": "Inquiry"
                  },
                  "status": {
                    "type": "string",
                    "description": "The disposition's active status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                    "example": "inactive",
                    "enum": [
                      "inactive",
                      "active"
                    ]
                  },
                  "disposition_description": {
                    "type": "string",
                    "description": "The disposition's description.",
                    "example": "Inquiry dispositions."
                  },
                  "disposition_type": {
                    "type": "string",
                    "description": "The disposition's type.",
                    "example": "multi_level",
                    "default": "single",
                    "enum": [
                      "single",
                      "multi_level"
                    ]
                  },
                  "sub_dispositions": {
                    "maxItems": 500,
                    "type": "array",
                    "description": "For `single` dispositions, this field can be ignored. For `multi_level` dispositions, there must be at least one subdispositions, there can be up to 500, and each parent node can have up to 20 child nodes. At the same time, child nodes can only have up to 4 levels.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "sub_disposition_id": {
                          "type": "string",
                          "description": "The subdisposition's ID.",
                          "example": "HDLHFK_gdhgfajhsedfhg"
                        },
                        "sub_disposition_name": {
                          "type": "string",
                          "description": "The subdisposition's name.",
                          "example": "Subdisposition A"
                        },
                        "current_index": {
                          "maximum": 500,
                          "minimum": 1,
                          "type": "number",
                          "description": "The subdisposition's unique identifier.",
                          "example": 1
                        },
                        "parent_index": {
                          "maximum": 499,
                          "type": "number",
                          "description": "The index of the parent node to which the current node belongs. \nIf it is `0`, it means that the current node belongs to the root node.\nIf the parent index does not exist, the node will be discarded.",
                          "example": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nDisposition updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2402` <br>\n That disposition name already exists. Use a different name. <br>\n**Error Code:** `2504` <br>\n Subdisposition's total size should be less than or equal to 500. <br>\n**Error Code:** `2507` <br>\n Multi_level disposition no subdispositions. <br>\n**Error Code:** `2508` <br>\n Duplicate subdisposition name on the same tier. <br>\n**Error Code:** `2509` <br>\n Subdisposition tier size should be more than 0 and less than 5. <br>\n**Error Code:** `2510` <br>\n Can not update `multi_level` to single. <br>\n**Error Code:** `2512` <br>\n The number of subdispositions on the same tier should less than or equal to 20. <br>\n**Error Code:** `2505` <br>\n Subdisposition current index repeated. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2401` <br>\n Disposition does not exist: $dispositionId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_disposition:write:admin",
              "contact_center:update:disposition:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_disposition:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:disposition:admin"
          ]
        }
      }
    },
    "/contact_center/engagements": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "List engagements",
        "description": "Return a list of engagements.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_engagements:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listEngagements",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's timezone. The default is UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date, in `yyyy-mm-dd` or `yyyy-MM-dd'T'HH:mm:ss'Z'` format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in `yyyy-mm-dd` or `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "queue_id",
            "in": "query",
            "description": "The queue's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The agent's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ukAAkZKfROKMSw1bj_RDFQ"
            }
          },
          {
            "name": "consumer_number",
            "in": "query",
            "description": "The customer's phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12059300920"
            }
          },
          {
            "name": "channel_types",
            "in": "query",
            "description": "The channel's type. \n* voice \n* SMS \n* chat \n* video \n * kiosk \n* `in_app_chat` \n* `in_app_video`",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "voice",
                "enum": [
                  "voice",
                  "sms",
                  "chat",
                  "video",
                  "kiosk",
                  "in_app_chat",
                  "in_app_video"
                ]
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The task's channel. \n* `voice` \n* `video` \n* `messaging` \n* `email` \n\nIt provides only a single channel. \n\nIf channel is used as an input parameter, the deprecated parameter `channel_types` is not processed.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "messaging",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_sources",
            "in": "query",
            "description": "The channel's source. \n* `in_app_video` - Only applies to video channel. \n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel. \n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.\n * `email_address` - Only applies to email channel.\n\nIt provides `multiple channel_sources`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "web_chat,in_app_chat",
                "enum": [
                  "in_app_video",
                  "kiosk_video",
                  "web_video",
                  "web_chat",
                  "in_app_chat",
                  "sms",
                  "facebook_messenger",
                  "whatsapp",
                  "email_address"
                ]
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nEngagements returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's [timezone ID](/docs/api/references/abbreviations/#timezones). The default is UTC.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "engagements": {
                      "type": "array",
                      "description": "The information about the engagement.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start_time": {
                            "type": "string",
                            "description": "The date and time when the engagement started, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `start_time` will be in UTC.",
                            "format": "date-time",
                            "example": "2021-12-03T13:07:46Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The date and time when the engagement ended, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `start_time` will be in UTC.",
                            "format": "date-time",
                            "example": "2021-12-03T13:07:46Z"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The engagement's duration, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction. \n* `inbound`\n * `outbound`",
                            "example": "inbound"
                          },
                          "channel_types": {
                            "type": "array",
                            "description": "The channel's type. \n* voice \n* SMS \n* chat \n* video \n* kiosk \n* in_app_chat \n* in_app_video",
                            "deprecated": true,
                            "items": {
                              "type": "string",
                              "example": "voice",
                              "enum": [
                                "voice",
                                "sms",
                                "chat",
                                "video",
                                "kiosk",
                                "in_app_chat",
                                "in_app_video"
                              ]
                            }
                          },
                          "channels": {
                            "type": "array",
                            "description": "The task's channels",
                            "items": {
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string",
                                  "description": "The task's channel. \n* `voice` \n* `video` \n* `messaging` \n* `email`",
                                  "example": "messaging",
                                  "enum": [
                                    "voice",
                                    "video",
                                    "messaging",
                                    "email"
                                  ]
                                },
                                "channel_source": {
                                  "type": "string",
                                  "description": "The channel's source. \n* `in_app_video` - Only applies to video channel. \n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.\n* `email_address` - Only applies to email channel.",
                                  "example": "in_app_chat",
                                  "enum": [
                                    "in_app_video",
                                    "kiosk_video",
                                    "web_video",
                                    "web_chat",
                                    "in_app_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "whatsapp",
                                    "email_address"
                                  ]
                                }
                              }
                            }
                          },
                          "consumers": {
                            "type": "array",
                            "description": "Information about the consumers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "consumer_id": {
                                  "type": "string",
                                  "description": "The consumer's ID.",
                                  "example": "zeYjXoDOS_eV1QmTpj63PQ"
                                },
                                "consumer_display_name": {
                                  "type": "string",
                                  "description": "The consumer's name.",
                                  "example": "Jill"
                                },
                                "consumer_number": {
                                  "type": "string",
                                  "description": "The consumer's phone number.",
                                  "example": "+12058945728"
                                }
                              }
                            }
                          },
                          "flows": {
                            "type": "array",
                            "description": "Information about the engagement's flows.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "flow_id": {
                                  "type": "string",
                                  "description": "The flow's ID.",
                                  "example": "zeYjXoDOS_eV1QmTpj63PQ"
                                },
                                "flow_name": {
                                  "type": "string",
                                  "description": "The flow's name.",
                                  "example": "Demo"
                                },
                                "flow_version": {
                                  "type": "string",
                                  "description": "The flow's version.",
                                  "example": "5"
                                }
                              },
                              "description": "Information about the flow."
                            }
                          },
                          "queues": {
                            "type": "array",
                            "description": "Information about the engagement's queues.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cc_queue_id": {
                                  "type": "string",
                                  "description": "The Contact Center queue's ID.",
                                  "example": "d95avl1eRJ-H162PZUJ-qg"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "The queue's name.",
                                  "example": "agentQueue"
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "agents": {
                            "type": "array",
                            "description": "Information about the engagement's agents.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The agent's ID.",
                                  "example": "ukAAkZKfROKMSw1bj_RDFQ"
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The agent's name.",
                                  "example": "Jilly"
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "talk_duration": {
                            "type": "integer",
                            "description": "The engagement's talk duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "flow_duration": {
                            "type": "integer",
                            "description": "The engagement's flow duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "waiting_duration": {
                            "type": "integer",
                            "description": "The engagement's waiting duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "handling_duration": {
                            "type": "integer",
                            "description": "The handling duration, in seconds. This setting applies to all channels.",
                            "format": "int64",
                            "example": 0
                          },
                          "wrap_up_duration": {
                            "type": "integer",
                            "description": "The engagement's wrap-up duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "transfer_count": {
                            "type": "integer",
                            "description": "The engagement's transfer count.",
                            "format": "int64",
                            "example": 10
                          },
                          "dispositions": {
                            "type": "array",
                            "description": "Information about the dispositions.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "disposition_id": {
                                  "type": "string",
                                  "description": "The disposition's ID.",
                                  "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                                },
                                "disposition_name": {
                                  "type": "string",
                                  "description": "The disposition's name.",
                                  "example": "Inquiry"
                                }
                              }
                            }
                          },
                          "notes": {
                            "type": "array",
                            "description": "Information about the notes.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The agent's ID.",
                                  "example": "ukAAkZKfROKMSw1bj_RDFQ"
                                },
                                "note_id": {
                                  "type": "string",
                                  "description": "The note's ID.",
                                  "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                                },
                                "note": {
                                  "type": "string",
                                  "description": "The note's content.",
                                  "example": "This is the content of the note."
                                },
                                "last_modified_time": {
                                  "type": "string",
                                  "description": "The date and time when this note was last modified, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `last_modified_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `last_modified_time` will be in UTC.",
                                  "format": "date-time",
                                  "example": "2022-03-26T14:44:14Z"
                                }
                              }
                            }
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The URL to download the messaging transcript, if the transcript text file exists. This field is only used for Messaging engagements. For voice and video engagement recordings, see `List engagement recordings` API. \\r\\ nFor security purposes, you **must** provide an OAuth access token in the authorization header to download the transcript file using this URL. Example:\\r\\n```curl --request GET \\r\\n  --url {transcript_url} \\r\\n  --header 'authorization: Bearer {access_token}' \\r\\n  --header 'content-type: application/json'\\r\\n```",
                            "example": "https://api.zoom.us/v2/contact_center/engagements/transcripts/download/W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "survey_id": {
                            "type": "string",
                            "description": "The survey's ID.",
                            "example": "2yWjT4awTumcFKIrvcf4OA"
                          }
                        },
                        "description": "The information about the engagement."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n**Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:list_engagements:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_engagements:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "Get an engagement",
        "description": "Retrieve information about an engagement. Engagements are available via API once they are completed.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:engagement:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getEngagement",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3XilEfOvQEKRIWMWhX1jDg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nEngagement information returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start_time": {
                      "type": "string",
                      "description": "The date and time when the engagement started.",
                      "format": "date-time",
                      "example": "2021-12-03T13:07:46Z"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "The engagement's end time.",
                      "format": "date-time",
                      "example": "2021-12-03T13:07:46Z"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The engagement's duration, in seconds.",
                      "format": "int64",
                      "example": 3600
                    },
                    "engagement_id": {
                      "type": "string",
                      "description": "The engagement's ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "channel_types": {
                      "type": "array",
                      "description": "The channel's type. \n* voice \n* SMS \n* chat \n * video \n* kiosk \n* in_app_chat \n* in_app_video",
                      "example": [
                        "voice"
                      ],
                      "deprecated": true,
                      "items": {
                        "type": "string",
                        "example": "voice",
                        "enum": [
                          "voice",
                          "sms",
                          "chat",
                          "video",
                          "kiosk",
                          "in_app_chat",
                          "in_app_video"
                        ]
                      }
                    },
                    "channels": {
                      "type": "array",
                      "description": "The task's channels.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "channel": {
                            "type": "string",
                            "description": "The task's channel. \n* `voice` \n* `video` \n* `messaging` \n* `email`",
                            "example": "video",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The channel's source. \n* `in_app_video` - Only applies to video channel. \n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n * `facebook_messenger` - Only applies to messaging channel.\n * `whatsapp` - Only applies to messaging channel.\n* `email_address` - Only applies to email channel.",
                            "example": "in_app_video",
                            "enum": [
                              "in_app_video",
                              "kiosk_video",
                              "web_video",
                              "web_chat",
                              "in_app_chat",
                              "sms",
                              "facebook_messenger",
                              "whatsapp",
                              "email_address"
                            ]
                          }
                        }
                      }
                    },
                    "consumers": {
                      "type": "array",
                      "description": "Information about the customers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "consumer_id": {
                            "type": "string",
                            "description": "The customer's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "consumer_display_name": {
                            "type": "string",
                            "description": "The customer's name.",
                            "example": "Jill"
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The customer's phone number.",
                            "example": "+12058945728"
                          }
                        }
                      }
                    },
                    "direction": {
                      "type": "string",
                      "description": "The session's direction. `inbound` | `outbound`.",
                      "example": "inbound",
                      "enum": [
                        "inbound",
                        "outbound"
                      ]
                    },
                    "flows": {
                      "type": "array",
                      "description": "Information about the engagement's flows.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "Demo"
                          },
                          "flow_version": {
                            "type": "string",
                            "description": "The flow's version.",
                            "example": "5"
                          }
                        },
                        "description": "Information about the flow."
                      }
                    },
                    "queues": {
                      "type": "array",
                      "description": "Information about the engagement's queues.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "agentQueue"
                          }
                        },
                        "description": "Information about the queue."
                      }
                    },
                    "agents": {
                      "type": "array",
                      "description": "Information about the engagement's agents.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The agent's name.",
                            "example": "Jilly"
                          }
                        },
                        "description": "Information about the queue."
                      }
                    },
                    "queue_wait_type": {
                      "type": "string",
                      "description": "The queue's wait type.",
                      "example": "live_waiting",
                      "enum": [
                        "live_waiting",
                        "callback"
                      ]
                    },
                    "talk_duration": {
                      "type": "integer",
                      "description": "The engagement's talk duration, in seconds.",
                      "format": "int64",
                      "example": 10
                    },
                    "flow_duration": {
                      "type": "integer",
                      "description": "The engagement's flow duration, in seconds.",
                      "format": "int64",
                      "example": 10
                    },
                    "waiting_duration": {
                      "type": "integer",
                      "description": "The engagement's waiting duration, in seconds.",
                      "format": "int64",
                      "example": 10
                    },
                    "handling_duration": {
                      "type": "integer",
                      "description": "The handling duration, in seconds. This setting applies to voice channels.",
                      "format": "int64",
                      "example": 0
                    },
                    "wrap_up_duration": {
                      "type": "integer",
                      "description": "The engagement's wrap-up duration, in seconds.",
                      "format": "int64",
                      "example": 10
                    },
                    "voice_mail": {
                      "type": "integer",
                      "description": "The voicemail count.",
                      "format": "int32",
                      "example": 10
                    },
                    "dispositions": {
                      "type": "array",
                      "description": "Information about the dispositions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_id": {
                            "type": "string",
                            "description": "The disposition's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_name": {
                            "type": "string",
                            "description": "The disposition's name.",
                            "example": "Inquiry"
                          }
                        }
                      }
                    },
                    "notes": {
                      "type": "array",
                      "description": "Information about the notes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "note_id": {
                            "type": "string",
                            "description": "The note's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "note": {
                            "type": "string",
                            "description": "The note's content.",
                            "example": "This is the content of the note."
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when this note was last modified, in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss&rsquo;TZD&rsquo;). \n\n`last_modified_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `last_modified_time `will be in UTC.",
                            "format": "date-time",
                            "example": "2022-03-26T14:44:14Z"
                          }
                        }
                      }
                    },
                    "events": {
                      "type": "array",
                      "description": "Information about the events.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start_time": {
                            "type": "string",
                            "description": "The date and time when the event started.",
                            "format": "date-time",
                            "example": "2021-12-03T13:07:46Z"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The event's duration.",
                            "format": "int64",
                            "example": 3600
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The channel's type. \n* voice \n* SMS \n* chat \n* video \n* kiosk \n* in_app_chat \n* in_app_video",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "sms",
                              "chat",
                              "video",
                              "in_app_chat",
                              "kiosk",
                              "in_app_chat",
                              "in_app_video"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The task's channel. \n* `voice` \n* `video` \n* `messaging` \n* `email`",
                            "example": "video",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The channel's source. \n* `in_app_video` - Only applies to video channel. \n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel. \n* `email_address` - Only applies to email channel.",
                            "example": "in_app_video",
                            "enum": [
                              "in_app_video",
                              "kiosk_video",
                              "web_video",
                              "web_chat",
                              "in_app_chat",
                              "sms",
                              "email_address"
                            ]
                          },
                          "event_type": {
                            "type": "string",
                            "description": "The event's type.",
                            "example": "Agent Ringing"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The session's direction. `inbound` | `outbound`.",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "zwKiV80hQ7CwRg9BEm0Bvw"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "Demo"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "Sales"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "user_display_name": {
                            "type": "string",
                            "description": "The agent's name.",
                            "example": "Jilly"
                          },
                          "accept_type": {
                            "type": "string",
                            "description": "The router's accept type. `manual` | `auto`.",
                            "example": "manual",
                            "enum": [
                              "manual",
                              "auto"
                            ]
                          },
                          "transfer_to_flow_id": {
                            "type": "string",
                            "description": "The target flow's ID.",
                            "example": "zwKiV80hQ7CwRg9BEm0Bvw"
                          },
                          "transfer_to_flow_name": {
                            "type": "string",
                            "description": "The target flow's name.",
                            "example": "Demo"
                          },
                          "transfer_to_queue_id": {
                            "type": "string",
                            "description": "The target queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg",
                            "deprecated": true
                          },
                          "transfer_to_cc_queue_id": {
                            "type": "string",
                            "description": "The target queue's ID.",
                            "example": "d95avl1eRJ-H162PZUJ-qg"
                          },
                          "transfer_to_queue_name": {
                            "type": "string",
                            "description": "The target flow's ID.",
                            "example": "Sales"
                          },
                          "transfer_to_user_id": {
                            "type": "string",
                            "description": "The target agent's ID.",
                            "example": "zwKiV80hQ7CwRg9BEm0Bvw"
                          },
                          "transfer_to_user_display_name": {
                            "type": "string",
                            "description": "The target agent's name.",
                            "example": "Jilly"
                          },
                          "transfer_to_number": {
                            "type": "string",
                            "description": "The transfer's number.",
                            "example": "+12059300920"
                          },
                          "transfer_type": {
                            "type": "string",
                            "description": "The transfer's type.",
                            "example": "cold",
                            "enum": [
                              "cold",
                              "warm"
                            ]
                          },
                          "upgraded_to_channel_type": {
                            "type": "string",
                            "description": "The target upgraded channel's type.",
                            "example": "video",
                            "enum": [
                              "video"
                            ]
                          },
                          "crm_type": {
                            "type": "string",
                            "description": "The CRM's type.",
                            "example": "salesforce"
                          },
                          "crm_call_status": {
                            "type": "string",
                            "description": "The CRM's call status.",
                            "example": "ringing",
                            "enum": [
                              "ringing",
                              "answer",
                              "hangup",
                              "miss"
                            ]
                          },
                          "supervisor_id": {
                            "type": "string",
                            "description": "The supervisor's ID.",
                            "example": "kRQpbWO5TV6E7wxEYOKFWw"
                          },
                          "supervisor_display_name": {
                            "type": "string",
                            "description": "The supervisor's name.",
                            "example": "Jilly"
                          },
                          "consumer_id": {
                            "type": "string",
                            "description": "The consumer's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "consumer_display_name": {
                            "type": "string",
                            "description": "The customer's name.",
                            "example": "Jill"
                          },
                          "inbox_id": {
                            "type": "string",
                            "description": "The inbox's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "inbox_name": {
                            "type": "string",
                            "description": "The inbox's name.",
                            "example": "example"
                          },
                          "conference_type": {
                            "type": "string",
                            "description": "The conference's type.",
                            "example": "cold",
                            "enum": [
                              "cold",
                              "warm"
                            ]
                          },
                          "invitee_type": {
                            "type": "string",
                            "description": "The conference invitee's type.",
                            "example": "PSTN number",
                            "enum": [
                              "Agent",
                              "Queue",
                              "PSTN number"
                            ]
                          },
                          "invitee": {
                            "type": "string",
                            "description": "The conference's invitee.",
                            "example": "+14244108479"
                          },
                          "skills": {
                            "type": "array",
                            "description": "Information about the skills.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "skill_category_id": {
                                  "type": "string",
                                  "description": "The skill category's ID.",
                                  "example": "Mu_IEZZHQZGMY9avK74kwA"
                                },
                                "skill_category_name": {
                                  "type": "string",
                                  "description": "The skill category's name.",
                                  "example": "Languages"
                                },
                                "skill_id": {
                                  "type": "string",
                                  "description": "The skill's ID.",
                                  "example": "saaHWgVMGQU69soco456oNA"
                                },
                                "skill_name": {
                                  "type": "string",
                                  "description": "The skill's name.",
                                  "example": "French"
                                },
                                "skill_proficiency_level": {
                                  "type": "integer",
                                  "description": "The skill's proficiency level. Only proficiency-based skill will have proficiency level.",
                                  "format": "int32",
                                  "example": 3
                                }
                              },
                              "description": "Information about the skill."
                            }
                          },
                          "email_reply_to": {
                            "type": "array",
                            "description": "Recipient's information when replying to an email.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "email_address": {
                                  "type": "string",
                                  "description": "Email address",
                                  "example": "jill.chill@example.com"
                                },
                                "email_name": {
                                  "type": "string",
                                  "description": "Email name",
                                  "example": "Jill Chill"
                                }
                              },
                              "description": "Recipient's information when replying to an email."
                            }
                          },
                          "email_reply_cc": {
                            "type": "array",
                            "description": "CC recipients' information when replying to emails.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "email_address": {
                                  "type": "string",
                                  "description": "Email address",
                                  "example": "jill.chill@example.com"
                                },
                                "email_name": {
                                  "type": "string",
                                  "description": "Email name",
                                  "example": "Jill Chill"
                                }
                              },
                              "description": "CC recipients' information when replying to emails."
                            }
                          },
                          "email_reply_bcc": {
                            "type": "array",
                            "description": "BCC recipients' information when replying to an email.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "email_address": {
                                  "type": "string",
                                  "description": "Email address",
                                  "example": "jill.chill@example.com"
                                },
                                "email_name": {
                                  "type": "string",
                                  "description": "Email name",
                                  "example": "Jill Chill"
                                }
                              },
                              "description": "BCC recipients' information when replying to an email."
                            }
                          }
                        }
                      }
                    },
                    "transcript_url": {
                      "type": "string",
                      "description": "The URL to download the messaging transcript, if the transcript text file exists. This field is only used for messaging engagements. For voice and video engagement recordings, see the `List engagement recordings` API. \n\nFor security purposes, you **must** provide an OAuth access token in the authorization header to download the transcript file using this URL. \n\n **Example**:\\r\\n```curl --request GET \\r\\n  --url {transcript_url} \\r\\n  --header 'authorization: Bearer {access_token}' \\r\\n  --header 'content-type: application/json'\\r\\n```",
                      "example": "https://api.zoom.us/v2/contact_center/engagements/transcripts/download/W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "survey_id": {
                      "type": "string",
                      "description": "The survey's ID.",
                      "example": "2yWjT4awTumcFKIrvcf4OA"
                    }
                  },
                  "description": "Information about the engagement."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2901` <br>\n Engagement does not exist: $engagementId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:engagement:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:engagement:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}/events": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "Get an engagement's events",
        "description": "Retrieve information about an engagement's events.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:engagement:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getEngagementEvents",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3XilEfOvQEKRIWMWhX1jDg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   Engagement's events information returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "engagement_id": {
                      "type": "string",
                      "description": "The engagement's ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "events": {
                      "type": "array",
                      "description": "Information about the events.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start_time": {
                            "type": "string",
                            "description": "The date and time when the event started.",
                            "format": "date-time",
                            "example": "2021-12-03T13:07:46Z"
                          },
                          "event_name": {
                            "type": "string",
                            "description": "The event's name, [Engagement events](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0059105&_ga=2.188292840.1595505736.1717553252-540387373.1700551325#h_01GCW1GKA8NFE21SNAN3VR3K4P)",
                            "example": "Start"
                          },
                          "channel": {
                            "type": "string",
                            "description": "The task's channel. \n\n* \n`voice` \n* `video` \n* `messaging`",
                            "example": "video",
                            "enum": [
                              "voice",
                              "video",
                              "messaging"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The channel's source. \n\n* `in_app_video` - Only applies to video channel. \n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel. \n* `facebook_messenger` - Only applies to messaging channel. \n* `whatsapp` - Only applies to messaging channel.",
                            "example": "in_app_video",
                            "enum": [
                              "in_app_video",
                              "kiosk_video",
                              "web_video",
                              "web_chat",
                              "in_app_chat",
                              "sms",
                              "facebook_messenger",
                              "whatsapp"
                            ]
                          },
                          "event_content": {
                            "type": "string",
                            "description": "Currently, only voice channel events is supported. Other channel events will be supported in the furture.\n The content is used to deserialize [engagement events](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0059105&_ga=2.188292840.1595505736.1717553252-540387373.1700551325#h_01GCW1GKA8NFE21SNAN3VR3K4P).",
                            "example": "{\"flow_id\": \"zwKiV80hQ7CwRg9BEm0Bvw\",\"flow_name\": \"Demo\"}"
                          }
                        }
                      }
                    }
                  },
                  "description": "Information about the engagement's event."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `7001` <br>\n Only voice and video channels are currently supported. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2901` <br>\n Engagement does not exist: $engagementId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:engagement:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:engagement:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}/recordings/status": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "Poll an engagement recording's status",
        "description": "Polls a video or voice engagement's recordings' status.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_engagement:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:engagement_recording_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "EngagementRecordingStatus",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status:** `200` **OK**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statuses": {
                      "type": "array",
                      "description": "The list of statuses.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The recording status.\n\nIf the recording status change failed, it does not explicitly show in this API response.\n\nIf the recording status does not change within 5 seconds of an expected change, assume that the recording status did not successfully transition to the expected status. If used with the recording control API, the control API request can be re-attempted.",
                            "example": "pause",
                            "enum": [
                              "pause",
                              "resume",
                              "start",
                              "stop"
                            ]
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the recording was last modified.",
                            "example": "2023-01-01T00:00:00Z"
                          }
                        },
                        "description": " The recording status."
                      }
                    },
                    "engagement_id": {
                      "type": "string",
                      "description": "The engagement's ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The recording's channel type. \n* `voice` - Voice recording. * `video` - Video recording.",
                      "example": "video",
                      "enum": [
                        "voice",
                        "video"
                      ]
                    },
                    "channel_source": {
                      "type": "string",
                      "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel. * `web_chat` - Only applies to messaging channel. * `sms` - Only applies to messaging channel.",
                      "example": "live_video",
                      "enum": [
                        "in_app_video",
                        "kiosk_video",
                        "web_video"
                      ]
                    }
                  },
                  "description": "root"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2814` <br>\n The engagement's channel type is invalid for this recording control command. <br>\n**Error Code:** `2815` <br>\n The engagement is not assigned to an agent. It is not being recorded. <br>\n**Error Code:** `300` <br>\n Invalid request. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2901` <br>\n Engagement does not exist: {0}. <br>\n**Error Code:** `20006` <br>\n Account not found. <br>\n**Error Code:** `2817` <br>\n There is no recording for this engagement. <br>\n**Error Code:** `2906` <br>\n There are not any agents on the call. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_engagement:read:admin",
              "contact_center:read:engagement_recording_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_engagement:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:engagement_recording_status:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}/survey": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "Get an engagement's survey",
        "description": "Get an engagement's survey\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_engagement:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:engagement:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getEngagementSurvey",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3XilEfOvQEKRIWMWhX1jDg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Survey returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "survey_id": {
                      "type": "string",
                      "description": "The survey's ID.",
                      "example": "2yWjT4awTumcFKIrvcf4OA"
                    },
                    "survey_name": {
                      "type": "string",
                      "description": "The survey's name.",
                      "example": "web chat survey"
                    },
                    "engagement_id": {
                      "type": "string",
                      "description": "The engagement's ID.",
                      "example": "I9kVGZJZS5u796LxrKSWWg"
                    },
                    "queue_id": {
                      "type": "string",
                      "description": "The `queue_id` or `queue_name` is returned if the survey is tied to a queue.",
                      "example": "2N13_yMTaeYUSYUKqupQQ"
                    },
                    "queue_name": {
                      "type": "string",
                      "description": "The `queue_id` or `queue_name` is returned if the survey is tied to a queue.",
                      "example": "queue-chat"
                    },
                    "flow_id": {
                      "type": "string",
                      "description": "The `flow_id` or `flow_name` is returned if the survey is tied to a flow.",
                      "example": "--N6BCoPQveeGJSyni57jw"
                    },
                    "flow_name": {
                      "type": "string",
                      "description": "The `flow_id` or `flow_name` is returned if the survey is tied to a flow.",
                      "example": "flow-chat"
                    },
                    "survey_trigger_level": {
                      "type": "integer",
                      "description": "The survey's trigger level.\n* `0` - queue.\n* `1` - flow.",
                      "example": 0,
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "survey_results": {
                      "type": "array",
                      "description": "The survey's answers, to a maximum of 10 items.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "question_id": {
                            "type": "string",
                            "description": "The question's ID.",
                            "example": "JocDev1cT-mIHREwDtMTVw"
                          },
                          "question_name": {
                            "type": "string",
                            "description": "The question's name.",
                            "example": "What is your suggestion?"
                          },
                          "question_type": {
                            "type": "integer",
                            "description": "The question's type. \n* 0 - Single choice. \n* `7` - Rating scale. \n* `5` - Long answer.",
                            "example": 2,
                            "enum": [
                              0,
                              5,
                              7
                            ]
                          },
                          "question_order": {
                            "type": "integer",
                            "description": "The question's order.",
                            "example": 10
                          },
                          "date_time": {
                            "type": "string",
                            "description": "Customer response time.",
                            "example": "2024-07-02T01:10:22.000+00:00"
                          },
                          "answer": {
                            "type": "string",
                            "description": "The user's given answer.",
                            "example": "this is my answer"
                          },
                          "numeric_answer": {
                            "type": "integer",
                            "description": "The user's given numeric answer.",
                            "example": 10
                          },
                          "file_url": {
                            "type": "string",
                            "description": "The answer as a recording URL.",
                            "example": "https://file.example.com/file/pvlGl_b5Q8KxSBp2vaAKXA?jwt=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhc3luY2ZpbGUiLCJ0b2tlbklkIjoiNVIyNjBGYW9RaUdFTE44alJneS0zUSIsImFwcE5hbWUiOiJhcHBfd2ViIiwiaXNzIjoiYXBwX3dlYiIsInBlcm1pc3Npb24iOiJtQ1l3ME9mM3N5Wm41alZFM25qYW40MXFMWUo4aWh1dGp3SmFYamd0Z1NrYUJxaEp4NjAtcXR2WEVoejBWVVFOOVl1Y3NrRlVwUUtxbVViS1o5TnpJQ2YxZHVaVUxjMkpVanlrOHZpXzFIWVNfdDhWeHluZ1VUdWpIbHFDTjRqY3p3Tnppdy5JbnhMMmZlVTVsZzU3cnZ3IiwiZXhwIjoxNzIwMTkwNjc0LCJ0b2tlblR5cGUiOiJwcmVzaWduVG9rZW4iLCJpYXQiOjE3MjAwODI2NzR9.tJ2Nq9f_veVMv6-60bKGcVZfIzPf2WshnOECg9Lkhxw&mode=play&with_domain=true"
                          }
                        },
                        "description": "Answer item."
                      }
                    }
                  },
                  "description": "Answer object."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  The engagement does not trigger survey. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          },
          "444": {
            "description": "**HTTP Status Code:** `444` <br>\n No Response  The survey for this engagement has no answer. \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_engagement:read:admin",
              "contact_center:read:engagement:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_engagement:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:engagement:admin"
          ]
        }
      }
    },
    "/contact_center/flows": {
      "get": {
        "tags": [
          "Flows"
        ],
        "summary": "List flows",
        "description": "Return a list of flows. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_flows:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listFlows",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Use the status to filter the result.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "published",
              "enum": [
                "draft",
                "published",
                "archived"
              ]
            }
          },
          {
            "name": "channel_type",
            "in": "query",
            "description": "Use the channel type to filter the result.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "chat",
                "sms",
                "video",
                "in_app_chat"
              ]
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Use the channel to filter the result.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "messaging",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_source",
            "in": "query",
            "description": "Use the channel source to filter the result.  \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel.  \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.\n* `email_address` - Only applies to email channel.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "web_chat",
              "enum": [
                "web_chat",
                "in_app_chat",
                "sms",
                "facebook_messenger",
                "whatsapp",
                "email_address"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Flow list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "flows": {
                      "type": "array",
                      "description": "Information about the flows.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "zwKiV80hQ7CwRg9BEm0Bvw"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "Video Test"
                          },
                          "flow_description": {
                            "type": "string",
                            "description": "The flow's description.",
                            "example": "A testing flow."
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The flow's channel type.",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "chat",
                              "sms",
                              "video",
                              "in_app_chat"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The flow's channel.",
                            "example": "messaging",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.\n* `email_address` - Only applies to email channel.",
                            "example": "web_chat",
                            "enum": [
                              "web_chat",
                              "in_app_chat",
                              "sms",
                              "facebook_messenger",
                              "whatsapp",
                              "email_address"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "This flow's status.",
                            "example": "published",
                            "enum": [
                              "draft",
                              "published",
                              "archived",
                              "debugging"
                            ]
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user that last modified this data.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when this data was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          },
                          "entry_points": {
                            "type": "array",
                            "description": "The flow's entry points.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "entry_id": {
                                  "type": "string",
                                  "description": "The flow's entry point ID.",
                                  "example": "x_h7uCj3TtScXWOBnQnKrw"
                                },
                                "entry_name": {
                                  "type": "string",
                                  "description": "The flow's entry point name, applicable to Video, Web Chat and In-App Chat.",
                                  "example": "Test video"
                                },
                                "entry_number": {
                                  "type": "string",
                                  "description": "The flow's entry point number, applicable to voice and SMS.",
                                  "example": "+16052052430"
                                },
                                "entry_language": {
                                  "type": "string",
                                  "description": "The flow's entry point engagement language.",
                                  "example": "en-US"
                                },
                                "email_address": {
                                  "type": "string",
                                  "description": "The flow's entry point email address, applicable to email.",
                                  "example": "xxxx@zoom.us"
                                }
                              }
                            }
                          },
                          "flow_versions": {
                            "type": "array",
                            "description": "The flow's versions.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "flow_version_id": {
                                  "type": "string",
                                  "description": "The flow's studio version ID.",
                                  "example": "EWg5URJZRXKwfbLJpeJWyA"
                                },
                                "flow_version_description": {
                                  "type": "string",
                                  "description": "The flow's version description.",
                                  "example": "Version 1"
                                },
                                "flow_version_status": {
                                  "type": "string",
                                  "description": "The flow version's status.",
                                  "example": "draft",
                                  "enum": [
                                    "draft",
                                    "published",
                                    "archived",
                                    "debugging"
                                  ]
                                },
                                "flow_version": {
                                  "type": "integer",
                                  "description": "The flow's version.",
                                  "example": 2
                                },
                                "flow_version_modified_by": {
                                  "type": "string",
                                  "description": "The parent ID of the user who modified the flow version.",
                                  "example": "jdhgdhghk376453hjdf"
                                },
                                "flow_version_last_modified_time": {
                                  "type": "string",
                                  "description": "The date and time when this flow version was last modified. ",
                                  "example": "2022-08-05T01:55:52Z"
                                }
                              },
                              "description": "The flow versions' detailed information."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:read:admin",
              "contact_center:read:list_flows:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_flows:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Flows"
        ],
        "summary": "Import a flow",
        "description": "Import and create a flow, using content from another flow's exported JSON.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ImportFlow",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "flow_file",
                  "flow_name"
                ],
                "type": "object",
                "properties": {
                  "flow_name": {
                    "type": "string",
                    "description": "The flow name. Must be unique within a division.",
                    "example": "my flow"
                  },
                  "flow_description": {
                    "type": "string",
                    "description": "The flow description.",
                    "example": "my description"
                  },
                  "flow_version_description": {
                    "type": "string",
                    "description": "The flow version description. The flow is imported and created with Version 1 automatically.",
                    "example": "my version description"
                  },
                  "flow_file": {
                    "type": "string",
                    "description": "* View - The uploaded file is in binary format.\n * Allowed file extensions - `xxx.json`\n\n* Maximum file size supported - 10 MB\n",
                    "format": "binary",
                    "example": "Vm0weGQxTXdOVWRYV0d4VVYwZDRWVll3WkZOVlJscHpXa2M1V0ZKdGVGWlZNbkJUWVZVeFYxZHViRmROYmxGM1dWZHplRll4WkhOaFJtUlhZbGRvZVZac1ZtRldNVnBXVFZWV2FHVnFRVGs9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \nImport and create a flow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "flow_id": {
                      "type": "string",
                      "description": "The flow ID.",
                      "example": "zwKiV80hQ7CwRg9BEm0Bvw"
                    },
                    "flow_name": {
                      "type": "string",
                      "description": "The flow name.",
                      "example": "test_flow"
                    },
                    "flow_description": {
                      "type": "string",
                      "description": "The flow description.",
                      "example": "test_flow"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The flow's channel.",
                      "example": "message",
                      "enum": [
                        "voice",
                        "video",
                        "messaging",
                        "email"
                      ]
                    },
                    "channel_source": {
                      "type": "string",
                      "description": "The channel's source.\n`in_app_chat` - Only applies to messaging channel.\n`web_chat` - Only applies to messaging channel.\n`sms` - Only applies to messaging channel.\n`facebook_messenger` - Only applies to messaging channel.\n`whatsapp` - Only applies to messaging channel.\n`web_chat` - Only applies to messaging channel.\n`email_address` - Only applies to email channel.",
                      "example": "web_chat",
                      "enum": [
                        "video",
                        "voice",
                        "sms",
                        "web_chat",
                        "in_app_chat",
                        "facebook_messenger",
                        "whatsapp",
                        "instagram",
                        "team_chat",
                        "email_address"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "The flow's status.",
                      "example": "archieved",
                      "enum": [
                        "draft",
                        "published"
                      ]
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user that last modified this data.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when this data was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    },
                    "entry_points": {
                      "type": "array",
                      "description": "The flow's entry points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entry_id": {
                            "type": "string",
                            "description": "The flow's entry point ID.",
                            "example": "x_h7uCj3TtScXWOBnQnKrw"
                          },
                          "entry_name": {
                            "type": "string",
                            "description": "The flow's entry point name. Applicable to video, web chat, and in-app chat.",
                            "example": "my_entry"
                          },
                          "entry_number": {
                            "type": "string",
                            "description": "The flow's entry point number. Applicable to voice and SMS.",
                            "example": "+16052052430"
                          },
                          "entry_language": {
                            "type": "string",
                            "description": "The flow's entry point engagement language.",
                            "example": "en-US"
                          },
                          "email_address": {
                            "type": "string",
                            "description": "The flow's entry point email address. Applicable to email.",
                            "example": "address@company.com"
                          }
                        },
                        "description": "Entry point items."
                      }
                    },
                    "flow_versions": {
                      "type": "array",
                      "description": "The flow version.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "flow_version_id": {
                            "type": "string",
                            "description": "The flow's entry point ID.",
                            "example": "EWg5URJZRXKwfbLJpeJWyA"
                          },
                          "flow_version_description": {
                            "type": "string",
                            "description": "The flow version's description.",
                            "example": "My Version Description"
                          },
                          "flow_version_status": {
                            "type": "string",
                            "description": "The flow version's status.",
                            "example": "draft",
                            "enum": [
                              "draft",
                              "published",
                              "archieved"
                            ]
                          },
                          "flow_version": {
                            "type": "integer",
                            "description": "The flow's version.",
                            "example": 2
                          },
                          "flow_version_modified_by": {
                            "type": "string",
                            "description": "The parent ID of the user who modified the flow version.",
                            "example": "jdhgdhghk376453hjdf"
                          },
                          "flow_version_last_modified_time": {
                            "type": "string",
                            "description": "The date and time when this flow version was last modified.",
                            "example": "2023-01-01T00:00:00-04:00"
                          }
                        },
                        "description": "flow version item"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3202` <br>\n The flow name already exists <br>\n**Error Code:** `3203` <br>\n The flow is invalid. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:write:admin",
              "contact_center:write:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:flow:admin"
          ]
        }
      }
    },
    "/contact_center/flows/{flowId}": {
      "get": {
        "tags": [
          "Flows"
        ],
        "summary": "Get a flow",
        "description": "Get information about a flow. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAFlow",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "The flow's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "F2aM1AQuSXyWerbDqswFJQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nFlow returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "flow_id": {
                      "type": "string",
                      "description": "The flow's ID.",
                      "example": "zwKiV80hQ7CwRg9BEm0Bvw"
                    },
                    "flow_name": {
                      "type": "string",
                      "description": "The flow's name.",
                      "example": "Video Test"
                    },
                    "flow_description": {
                      "type": "string",
                      "description": "The flow's description.",
                      "example": "A testing flow."
                    },
                    "channel_type": {
                      "type": "string",
                      "description": "The flow's channel type.",
                      "example": "voice",
                      "deprecated": true,
                      "enum": [
                        "voice",
                        "chat",
                        "sms",
                        "video",
                        "in_app_chat"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "The flow's channel.",
                      "example": "messaging",
                      "enum": [
                        "voice",
                        "video",
                        "messaging",
                        "email"
                      ]
                    },
                    "channel_source": {
                      "type": "string",
                      "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel. \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `email_address` - Only applies to email channel.",
                      "example": "web_chat",
                      "enum": [
                        "web_chat",
                        "in_app_chat",
                        "sms",
                        "facebook_messenger",
                        "whatsapp",
                        "email_address"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "This flow's status.",
                      "example": "published",
                      "enum": [
                        "draft",
                        "published",
                        "archived",
                        "debugging"
                      ]
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The parent ID of the user who modified the flow.",
                      "example": "jdhgdhghk376453hjdf"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when this flow was last modified. ",
                      "example": "2022-08-05T01:55:52Z"
                    },
                    "entry_points": {
                      "type": "array",
                      "description": "The flow's entry points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entry_id": {
                            "type": "string",
                            "description": "The flow's entry point ID.",
                            "example": "x_h7uCj3TtScXWOBnQnKrw"
                          },
                          "entry_name": {
                            "type": "string",
                            "description": "The flow's entry point name, applicable to Video, Web Chat and In-App Chat.",
                            "example": "Test video"
                          },
                          "entry_number": {
                            "type": "string",
                            "description": "The flow's entry point number, applicable to voice and SMS.",
                            "example": "+16052052430"
                          },
                          "entry_language": {
                            "type": "string",
                            "description": "The flow's entry point engagement language.",
                            "example": "en-US"
                          },
                          "email_address": {
                            "type": "string",
                            "description": "The flow's entry point email address. Applicable to email.",
                            "example": "xxxx@zoom.us"
                          }
                        }
                      }
                    },
                    "flow_versions": {
                      "type": "array",
                      "description": "The flow's versions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "flow_version_id": {
                            "type": "string",
                            "description": "The flow's studio version ID.",
                            "example": "EWg5URJZRXKwfbLJpeJWyA"
                          },
                          "flow_version_description": {
                            "type": "string",
                            "description": "The flow's version description.",
                            "example": "Version 1"
                          },
                          "flow_version_status": {
                            "type": "string",
                            "description": "The flow version's status.",
                            "example": "draft",
                            "enum": [
                              "draft",
                              "published",
                              "archived",
                              "debugging"
                            ]
                          },
                          "flow_version": {
                            "type": "integer",
                            "description": "The flow's version.",
                            "example": 2
                          },
                          "flow_version_modified_by": {
                            "type": "string",
                            "description": "The parent ID of the user who modified the flow version.",
                            "example": "jdhgdhghk376453hjdf"
                          },
                          "flow_version_last_modified_time": {
                            "type": "string",
                            "description": "The date and time when this flow version was last modified. ",
                            "example": "2022-08-05T01:55:52Z"
                          }
                        },
                        "description": "The flow versions' detailed information."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3201` <br>\n Flow does not exist: $flowId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:read:admin",
              "contact_center:read:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:flow:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Flows"
        ],
        "summary": "Delete a flow",
        "description": "Delete a flow.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteFlow",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "The flow ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zwKiV80hQ7CwRg9BEm0Bvw"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    \nDelete a flow."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3209` <br>\n **Message:**  \nCurrent flow is in use for the following areas and can\u2019t be deleted. Please remove the flow from the listed areas before proceeding.\n\n**Errors:**\n\n- **Related Flows** (Flow information associated with the current flow):\n```json\n  \"related_flows\": [\n    {\n      \"flow_name\": \"xxx\",\n      \"flow_id\": \"xxx\"\n    }\n  ]\n  ```\n- **Related Queues** (Queue information associated with the current flow):\n```json\n  \"related_queues\": [\n  {\n    \"queue_name\": \"xxx\",\n    \"queue_id\": \"xxx\"\n  }\n]\n```\n\n- **Related Campaigns** (Queue information associated with the current flow):\n```json\n  \"related_campaigns\": [\n  {\n    \"campaign_id\": \"xxx\",\n    \"campaign_name\": \"xxx\"\n  }\n]\n```\n\n\n\n <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3201` <br>\n Flow does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:write:admin",
              "contact_center:delete:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:flow:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Flows"
        ],
        "summary": "Edit a flow",
        "description": "Edit a flow's attributes.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "EditFlow",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "The flow's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zwKiV80hQ7CwRg9BEm0Bvw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "flow_version"
                ],
                "type": "object",
                "properties": {
                  "flow_name": {
                    "type": "string",
                    "description": "The flow's name.",
                    "example": "my flow name"
                  },
                  "flow_description": {
                    "type": "string",
                    "description": "The flow's description.",
                    "example": "my_flow_desc"
                  },
                  "flow_version_description": {
                    "type": "string",
                    "description": "The flow version description.",
                    "example": "my_flow_version_desc"
                  },
                  "flow_version": {
                    "type": "integer",
                    "description": "The flow version.",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    \nEdit a flow's attributes."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3202` <br>\n Flow name already exists. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3201` <br>\n Flow does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:write:admin",
              "contact_center:update:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:flow:admin"
          ]
        }
      }
    },
    "/contact_center/flows/{flowId}/entry_points": {
      "get": {
        "tags": [
          "Flows"
        ],
        "summary": "List flow's entry points",
        "description": "Retrieve a list of the entry points bound to the current flow.\n \n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListFlowEntryPoints",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "flow id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "PyKkDGalRY68zZIPwykQ5A"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`     \nList the entry points bound to the current flow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entry_points": {
                      "type": "array",
                      "description": "The entry point list.",
                      "items": {
                        "required": [
                          "entry_id"
                        ],
                        "type": "object",
                        "properties": {
                          "entry_id": {
                            "type": "string",
                            "description": "The entry's ID.",
                            "example": "xxxxxxxxxx"
                          },
                          "entry_number": {
                            "type": "string",
                            "description": "The phone number. Only supports `channel` = voice or `channel` = messaging & `channel_source` = sms",
                            "example": "+1209144732"
                          },
                          "entry_email": {
                            "type": "string",
                            "description": "The email address. Only supports `channel_source` = email.",
                            "example": "xxx@example.com"
                          },
                          "entry_name": {
                            "type": "string",
                            "description": "entry name",
                            "example": "test entry"
                          },
                          "entry_number_type": {
                            "type": "integer",
                            "description": "Only supports `channel_source` = voice or sms\n2- Toll-free\n3- Virtual\n5- Mobile",
                            "example": 2,
                            "enum": [
                              2,
                              3,
                              5
                            ]
                          },
                          "entry_number_country_code": {
                            "type": "string",
                            "description": "**Note:** \nNumber country. Only supports `channel` = voice or `channel` = messaging and `channel_source` = sms.\n\nSee [Country Abbreviations](/docs/api/references/abbreviations/#countries) for more details.",
                            "example": "US"
                          },
                          "entry_number_area_code": {
                            "type": "string",
                            "description": "The number's area code. Only supports `channel` = voice or `channel` = messaging and `channel_source` = sms.",
                            "example": "209"
                          },
                          "entry_language": {
                            "type": "string",
                            "description": " **Only supports `channel` = voice**\nThe language you choose sets the engagement's language and which language based assets are used.\n**Channel limitation** - This field is only needed when `channel` = voice.\n **Default value** - `en_US`\n**Language List**\n| Language                  | Value    |\n|---------------------------|----------|\n | Chinese (Simplified)      | zh-CN    |\n| Chinese (Traditional)     | zh-TW    |\n| Chinese Cantonese         | yue-CN   |\n| Chinese Mandarin          | cmn-CN   |\n| Danish (Denmark)          | da-DK    |\n| Dutch (Netherlands)       | nl-NL    |\n| English (Australia)       | en-AU    |\n| English (New Zealand)     | en-NZ    |\n| English (UK)              | en-GB    |\n| English (US)              | en-US    |\n| French (Canada)           | fr-CA    |\n| French (France)           | fr-FR    |\n| German (Germany)          | de-DE    |\n| Italian (Italy)           | it-IT    |\n| Japanese (Japan)          | ja-JP    |\n| Korean (Korea)            | ko-KR    |\n| Polish (Poland)           | pl-PL    |\n| Portuguese (Brazil)       | pt-BR    |\n| Portuguese (Portugal)     | pt-PT    |\n| Romanian (Romania)        | ro-RO    |\n| Russian (Russia)          | ru-RU    |\n| Spanish (European)        | es-ES    |\n| Spanish (Mexico)          | es-MX    |\n| Spanish (US)              | es-US    |\n| Swedish (Sweden)          | sv-SE    |\n| Turkish (Turkey)          | tr-TR    |\n",
                            "example": "en-US"
                          }
                        },
                        "description": "Flow entry points."
                      }
                    },
                    "enable_detect_language": {
                      "type": "boolean",
                      "description": "**Channel limitation** - This field is only required when `channel` = email.\n**Default value** = `false`\n**Note** - The detected language will automatically set the global variable `engagement language`.\n",
                      "example": true
                    },
                    "channel": {
                      "type": "string",
                      "description": "The flow's channel.",
                      "example": "messaging",
                      "enum": [
                        "voice",
                        "video",
                        "messaging",
                        "email"
                      ]
                    },
                    "channel_source": {
                      "type": "string",
                      "description": "The channel's source.\n`in_app_chat` - Only applies to messaging channel.\n`web_chat` - Only applies to messaging channel.\n`sms` - Only applies to messaging channel.\n`team_chat` - Only applies to messaging channel.\n`instagram` - Only applies to messaging channel.\n`facebook_messenger` - Only applies to messaging channel.\n`whatsapp` - Only applies to messaging channel.\n `web_chat` - Only applies to messaging channel.\n`email_address` - Only applies to email channel.\n`video` - Only applies to video channel.\n`voice` - Only applies to voice channel.\n",
                      "example": "web_chat",
                      "enum": [
                        "sms",
                        "web_chat",
                        "in_app_chat",
                        "team_chat",
                        "email_address",
                        "instagram",
                        "facebook_messenger",
                        "whatsapp"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3201` <br>\n Flow does not exist <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:read:admin",
              "contact_center:read:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:flow:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Flows"
        ],
        "summary": "Add flow entry points",
        "description": "Add entry points to a flow.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddFlowEntryPoints",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "The flow's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zwKiV80hQ7CwRg9BEm0Bvw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entry_points": {
                    "type": "array",
                    "description": "The entry ID list.",
                    "items": {
                      "required": [
                        "entry_id"
                      ],
                      "type": "object",
                      "properties": {
                        "entry_id": {
                          "type": "string",
                          "description": "entry id",
                          "example": "Nn3aO8lOSm6aYYW6l8brSQ"
                        },
                        "entry_language": {
                          "type": "string",
                          "description": "**Channel Limitation*- only channel=voice need this field.\n**Default value* - `en_US`\n**Language list* - \n\n\n\n| Language                  | Value    |\n|---------------------------|----------|\n | Chinese (Simplified)      | zh-CN    |\n| Chinese (Traditional)     | zh-TW    |\n| Chinese Cantonese         | yue-CN   |\n| Chinese Mandarin          | cmn-CN   |\n| Danish (Denmark)          | da-DK    |\n| Dutch (Netherlands)       | nl-NL    |\n| English (Australia)       | en-AU    |\n| English (New Zealand)     | en-NZ    |\n| English (UK)              | en-GB    |\n| English (US)              | en-US    |\n| French (Canada)           | fr-CA    |\n| French (France)           | fr-FR    |\n| German (Germany)          | de-DE    |\n| Italian (Italy)           | it-IT    |\n| Japanese (Japan)          | ja-JP    |\n| Korean (Korea)            | ko-KR    |\n| Polish (Poland)           | pl-PL    |\n| Portuguese (Brazil)       | pt-BR    |\n| Portuguese (Portugal)     | pt-PT    |\n| Romanian (Romania)        | ro-RO    |\n| Russian (Russia)          | ru-RU    |\n| Spanish (European)        | es-ES    |\n| Spanish (Mexico)          | es-MX    |\n| Spanish (US)              | es-US    |\n| Swedish (Sweden)          | sv-SE    |\n| Turkish (Turkey)          | tr-TR    |\n",
                          "example": "en-US"
                        }
                      }
                    }
                  },
                  "enable_detect_language": {
                    "type": "boolean",
                    "description": "**Channel Limitation*- This field is only required when `channel=email`.\n**Default Value*- `false`\n**Note*- The detected language will automatically set the global variable `engagement language`.\n",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`    \nFlow entry points added.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "channel_source",
                    "entry_points"
                  ],
                  "type": "object",
                  "properties": {
                    "entry_points": {
                      "type": "array",
                      "items": {
                        "required": [
                          "entry_id"
                        ],
                        "type": "object",
                        "properties": {
                          "entry_id": {
                            "type": "string",
                            "description": "The entry ID.",
                            "example": "Nn3aO8lOSm6aYYW6l8brSQ"
                          },
                          "entry_language": {
                            "type": "string",
                            "description": "This value only returns when `channel` = voice.",
                            "example": "en_US"
                          }
                        }
                      }
                    },
                    "channel_source": {
                      "type": "string",
                      "description": "The channel's source.\n`in_app_chat` - Only applies to messaging channel.\n`web_chat` - Only applies to messaging channel.\n`sms` - Only applies to messaging channel.\n`team_chat` - Only applies to messaging channel.\n`instagram` - Only applies to messaging channel.\n`facebook_messenger` - Only applies to messaging channel.\n`whatsapp` - Only applies to messaging channel.\n `web_chat` - Only applies to messaging channel.\n`email_address` - Only applies to email channel.\n\n",
                      "example": "web_chat",
                      "enum": [
                        "sms",
                        "web_chat",
                        "in_app_chat",
                        "team_chat",
                        "email",
                        "instagram",
                        "facebook_messenger",
                        "whatsapp"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "The flow channel.",
                      "example": "messaging",
                      "enum": [
                        "voice",
                        "video",
                        "messaging",
                        "email"
                      ]
                    },
                    "enable_detect_language": {
                      "type": "boolean",
                      "description": "This field is meaningful only when `channel` = email.",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3208` <br>\n The flow entry point has reached the maximum limit. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3201` <br>\n Flow does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:write:admin",
              "contact_center:write:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:flow:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Flows"
        ],
        "summary": "Remove flow entry points",
        "description": "Remove entry points to a flow.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "RemoveFlowEntryPoints",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "The flow ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zwKiV80hQ7CwRg9BEm0Bvw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entry_ids": {
                    "type": "array",
                    "description": "zwKiV80hQ7CwRg9BEm0Bvw",
                    "items": {
                      "type": "string",
                      "description": "The entry ID.",
                      "example": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    \nentry points are deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3201` <br>\n Flow does not exist: $flowId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:write:admin",
              "contact_center:delete:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:flow:admin"
          ]
        }
      }
    },
    "/contact_center/flows/{flowId}/export": {
      "get": {
        "tags": [
          "Flows"
        ],
        "summary": "Export a flow",
        "description": "Export a flow's content as JSON.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "ExportFlow",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "The flow's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zwKiV80hQ7CwRg9BEm0Bvw"
            }
          },
          {
            "name": "flow_version",
            "in": "query",
            "description": "The flow version.",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Export flow as JSON. You will get a downloadable file."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3201` <br>\n Flow does not exist: $flowId $flowVersion. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:read:admin",
              "contact_center:read:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:flow:admin"
          ]
        }
      }
    },
    "/contact_center/flows/{flowId}/publish": {
      "put": {
        "tags": [
          "Flows"
        ],
        "summary": "Publish a flow",
        "description": "Publish a flow version. Any other published version of the flow will be replaced with the one specified in this request.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "PublishFlow",
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "description": "The flow ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zwKiV80hQ7CwRg9BEm0Bvw"
            }
          },
          {
            "name": "flow_version",
            "in": "query",
            "description": "flow version",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  Publish a flow."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3201` <br>\n Flow does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:write:admin",
              "contact_center:update:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:flow:admin"
          ]
        }
      }
    },
    "/contact_center/flows_entry_points": {
      "get": {
        "tags": [
          "Flows"
        ],
        "summary": "List entry points",
        "description": "Retrieve a list of entry points.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListentryPoints",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "The flow's channel.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "messaging",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_source",
            "in": "query",
            "description": "The channel's source.\n`in_app_chat` - Only applies to messaging channel.\n`web_chat` - Only applies to messaging channel.\n`sms` - Only applies to messaging channel.\n`team_chat` - Only applies to messaging channel.\n `instagram` - Only applies to messaging channel.\n`facebook_messenger` - Only applies to messaging channel.\n`whatsapp` - Only applies to messaging channel.\n`web_chat` - Only applies to messaging channel.\n`email_address` - Only applies to email channel.\n\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "web_chat",
              "enum": [
                "sms",
                "web_chat",
                "in_app_chat",
                "team_chat",
                "instagram",
                "facebook_messenger",
                "whatsapp",
                "email_address"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`     \nList current channel available entry id list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "entry_points": {
                      "type": "array",
                      "description": "The entry point list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entry_id": {
                            "type": "string",
                            "description": "The entry ID.",
                            "example": "rDjD-6bvTKyvc7jWuKJOxg"
                          },
                          "entry_number": {
                            "type": "string",
                            "description": "**Note**  \nPhone number only supports `channel = voice` or `channel = messaging` with `channel_source = sms`.\n",
                            "example": "+1209144732"
                          },
                          "entry_name": {
                            "type": "string",
                            "description": "The entry name.",
                            "example": "test entry"
                          },
                          "entry_email": {
                            "type": "string",
                            "description": "Email address. Only supported when `channel = email`.",
                            "example": "xxx@example.com"
                          },
                          "entry_number_type": {
                            "type": "integer",
                            "description": "**Note** Only supports `channel = voice` or `channel = messaging & channel_source = sms`\n\nSupported number types\n Toll-Free  \n Virtual  \n Mobile\n",
                            "example": 2,
                            "enum": [
                              2,
                              3,
                              5
                            ]
                          },
                          "entry_number_country_code": {
                            "type": "string",
                            "description": "**Note**  Number country only supports `channel = voice` or `channel = messaging & channel_source = sms`.\n \nSee [Zoom API Country Abbreviations](/docs/api/references/abbreviations/#countries) for more details.\n",
                            "example": "US"
                          },
                          "entry_number_area_code": {
                            "type": "string",
                            "description": "The number's area code.",
                            "example": "209"
                          },
                          "channel": {
                            "type": "string",
                            "description": "The flow's channel.",
                            "example": "messaging",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The channel's source.\n\n- `in_app_chat` - Only applies to the messaging channel.  \n- `web_chat` - Only applies to the messaging channel.  \n- `sms` - Only applies to **messaging** channel  \n- `team_chat` \u2013 Only applies to **messaging** channel  \n- `instagram` \u2013 Only applies to **messaging** channel  \n- `facebook_messenger` \u2013 Only applies to **messaging** channel  \n- `whatsapp` \u2013 Only applies to **messaging** channel  \n- `email_address` \u2013 Only applies to **email** channel  \n",
                            "example": "web_chat",
                            "enum": [
                              "sms",
                              "web_chat",
                              "in_app_chat",
                              "team_chat",
                              "email_address",
                              "instagram",
                              "facebook_messenger",
                              "whatsapp"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3210` <br>\n Channel or `channel_source` is illegal. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:read:admin",
              "contact_center:read:flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:flow:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "List inboxes",
        "description": "Return a list of inboxes. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_inboxes:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listInbox",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nInbox list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "inboxes": {
                      "type": "array",
                      "description": "Information about the notes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "inbox_id": {
                            "type": "string",
                            "description": "The inbox's unique ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "inbox_name": {
                            "type": "string",
                            "description": "The inbox's name.",
                            "example": "example"
                          },
                          "inbox_type": {
                            "type": "string",
                            "description": "The inbox type.\n* voicemail",
                            "example": "voicemail",
                            "enum": [
                              "voicemail"
                            ]
                          },
                          "access_user_count": {
                            "type": "integer",
                            "description": "The inbox access user count.",
                            "example": 5
                          },
                          "access_queue_count": {
                            "type": "integer",
                            "description": "The inbox access queue count.",
                            "example": 5
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The inbox's last modification time.",
                            "format": "date-time",
                            "example": "2022-05-23T14:15:57Z"
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of last user to modify the inbox.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          }
                        },
                        "description": "Information about the inbox."
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:read:admin",
              "contact_center:read:list_inboxes:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_inbox:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_inboxes:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Create an inbox",
        "description": "Create a new inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:inbox:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "inboxCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inbox_name": {
                    "type": "string",
                    "description": "The inbox's name.",
                    "example": "example"
                  },
                  "inbox_description": {
                    "type": "string",
                    "description": "The inbox's description.",
                    "example": "This is a inbox."
                  },
                  "inbox_type": {
                    "type": "string",
                    "description": "The inbox type.\n* voicemail",
                    "example": "voicemail",
                    "enum": [
                      "voicemail"
                    ]
                  },
                  "inbox_content_storage_location": {
                    "type": "string",
                    "description": "The inbox content's physical storage location, using a two-letter country code. \n\n US: `United States`\n\nAU: `Australia`\n \n\nBR: `Brazil`\n\nCA: `Canada`\n\nDE: `Germany`\n\nJP: `Japan`\n \nSG: `Singapore`",
                    "example": "US",
                    "enum": [
                      "US",
                      "AU",
                      "BR",
                      "CA",
                      "DE",
                      "JP",
                      "SG"
                    ]
                  },
                  "voicemail": {
                    "type": "object",
                    "properties": {
                      "soft_delete": {
                        "type": "boolean",
                        "description": "Enable soft deletion for the inbox.",
                        "example": true
                      },
                      "soft_delete_days_limit": {
                        "type": "integer",
                        "description": "When a voicemail is deleted, it is initially soft-deleted and can be restored within the admin-specified timeframe, which is up to 30 days. After that time, the voicemail is permanently deleted.",
                        "example": 20
                      },
                      "voicemail_time_limit": {
                        "type": "integer",
                        "description": "The voicemail time limit in minutes.",
                        "example": 5
                      },
                      "delete_voicemail_days_limit": {
                        "type": "integer",
                        "description": "Delete voicemail after a specified number of days.",
                        "example": 30
                      },
                      "voicemail_transcription": {
                        "type": "boolean",
                        "description": "The voicemail enable transcription.",
                        "example": false
                      },
                      "voicemail_notification_by_email": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable voicemail notification by email.",
                            "example": false
                          },
                          "include_voicemail_file": {
                            "type": "boolean",
                            "description": "Whether to include voicemail file.",
                            "example": false
                          },
                          "include_voicemail_transcription": {
                            "type": "boolean",
                            "description": "Whether to include voicemail transcription.",
                            "example": false
                          },
                          "forward_voicemail_to_emails": {
                            "type": "boolean",
                            "description": "Enable forward voicemail to emails.",
                            "example": false
                          },
                          "emails": {
                            "type": "array",
                            "description": "Forward voicemail to an email list.",
                            "items": {
                              "type": "string",
                              "example": "jchill@example.com"
                            }
                          }
                        },
                        "description": "The voicemail notification by email."
                      }
                    },
                    "description": "The voicemail settings."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nInbox created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inbox_id": {
                      "type": "string",
                      "description": "The inbox's unique ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "inbox_name": {
                      "type": "string",
                      "description": "The inbox's name.",
                      "example": "example"
                    },
                    "inbox_description": {
                      "type": "string",
                      "description": "The inbox's description.",
                      "example": "This is a inbox."
                    },
                    "inbox_type": {
                      "type": "string",
                      "description": "The inbox type.\n* voicemail",
                      "example": "voicemail",
                      "enum": [
                        "voicemail"
                      ]
                    },
                    "inbox_content_storage_location": {
                      "type": "string",
                      "description": "The inbox content's physical storage location, using a two-letter country code. \n\n US: `United States`\n\nAU: `Australia`\n \n\nBR: `Brazil`\n\nCA: `Canada`\n\nDE: `Germany`\n\nJP: `Japan`\n \nSG: `Singapore`",
                      "example": "US",
                      "enum": [
                        "US",
                        "AU",
                        "BR",
                        "CA",
                        "DE",
                        "JP",
                        "SG"
                      ]
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when this data was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user that last modified this data.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "voicemail": {
                      "type": "object",
                      "properties": {
                        "soft_delete": {
                          "type": "boolean",
                          "description": "Enable soft deletion for the inbox.",
                          "example": true
                        },
                        "soft_delete_days_limit": {
                          "type": "integer",
                          "description": "When a voicemail is deleted, it is initially soft-deleted and can be restored within the admin-specified timeframe, which is up to 30 days. After that time, the voicemail is permanently deleted.",
                          "example": 20
                        },
                        "voicemail_time_limit": {
                          "type": "integer",
                          "description": "The voicemail time limit in minutes.",
                          "example": 5
                        },
                        "delete_voicemail_days_limit": {
                          "type": "integer",
                          "description": "Delete voicemail after a specified number of days.",
                          "example": 30
                        },
                        "voicemail_transcription": {
                          "type": "boolean",
                          "description": "Enable voicemail transcription.",
                          "example": false
                        },
                        "voicemail_notification_by_email": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "The voicemail enable notification by email.",
                              "example": false
                            },
                            "include_voicemail_file": {
                              "type": "boolean",
                              "description": "Whether to include voicemail file.",
                              "example": false
                            },
                            "include_voicemail_transcription": {
                              "type": "boolean",
                              "description": "Whether to include voicemail transcription.",
                              "example": false
                            },
                            "forward_voicemail_to_emails": {
                              "type": "boolean",
                              "description": "Enable forwarding voicemail to emails.",
                              "example": false
                            },
                            "emails": {
                              "type": "array",
                              "description": "Forward voicemail to an email list.",
                              "items": {
                                "type": "string",
                                "example": "jchill@example.com"
                              }
                            }
                          },
                          "description": "The voicemail notification by email."
                        },
                        "voicemail_auto_assignment": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Enable voicemail auto assignment.",
                              "example": false
                            },
                            "voicemail_auto_assignment_type": {
                              "type": "integer",
                              "description": "Voicemail auto assignment type. The value can only be one of these values.\n*1 - user\n*2 - access list\n*3 - queue\n*4 - team\n*5 - rotation",
                              "format": "int32",
                              "example": 1,
                              "enum": [
                                1,
                                2,
                                3,
                                4,
                                5
                              ]
                            },
                            "voicemail_auto_assignment_during_active_work_session": {
                              "type": "integer",
                              "description": "The person assigned the voicemail auto assignment is during an active work session.The value can only be `0` inactive or `1` active. This field is only effective when `voicemail_auto_assignment_type` is `2`, `3`, `4`, or `5`.",
                              "format": "int32",
                              "example": 0,
                              "enum": [
                                0,
                                1
                              ]
                            },
                            "voicemail_auto_assignment_content_id": {
                              "type": "string",
                              "description": "The voicemail auto assignment operation object's ID. Can be `userId`, `queueId` or `teamId`. This field is only effective when `voicemail_auto_assignment_type` is `1`, `3`, or `4`.",
                              "example": "testUserId"
                            },
                            "voicemail_auto_assignment_routine_profile_id": {
                              "type": "string",
                              "description": "Routine profile ID used by voicemail auto assignment. This field only takes effect when `voicemail_auto_assignment_type` is `2`, `3`, `4,` or `5`, and the user has set a routine profile.",
                              "example": "testRoutineProfileId"
                            }
                          },
                          "description": "Voicemail auto assignment settings."
                        },
                        "voicemail_send_reminders_for_unresolved": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Enable a reminder policy for unresolved voicemails.",
                              "example": false
                            },
                            "send_alert_for_unresolved_voicemail_timeout": {
                              "maximum": 10080,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Timeout for unresolved voicemail reminders, in minutes. The range is from 1 to 10080.",
                              "example": 30
                            }
                          },
                          "description": "Reminder policy for unresolved voicemails."
                        }
                      },
                      "description": "The voicemail settings."
                    }
                  },
                  "description": "Information about the inbox."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:write:admin",
              "contact_center:write:inbox:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:inbox:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Delete inboxes",
        "description": "Delete one or more inboxes. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:inbox:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "inboxesDelete",
        "parameters": [
          {
            "name": "inbox_ids",
            "in": "query",
            "description": "List all inboxes to delete.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "W_VATTk_Q5aW6z5rZtBxAQ"
              }
            }
          },
          {
            "name": "delete_all_messages_and_inboxes",
            "in": "query",
            "description": "Delete all inboxes and messages provided.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "move_to_inbox_id",
            "in": "query",
            "description": "The ID of the inbox where messages from deleted inbox(es) will be moved.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "w3v6brV3T-6MK1if1nw8PA"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nInboxes deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nInbox does not exist: $inboxId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:write:admin",
              "contact_center:delete:inbox:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_inbox:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:inbox:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/messages": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "List an account's inbox messages",
        "description": "Return all messages in an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:inbox_messages:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listInboxesMessages",
        "parameters": [
          {
            "name": "queue_ids",
            "in": "query",
            "description": "The queue's IDs. The maximum value is 10 ",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          },
          {
            "name": "cc_queue_ids",
            "in": "query",
            "description": "The Contact Center queue's IDs. The maximum value is 10.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          },
          {
            "name": "inbox_id",
            "in": "query",
            "description": "The inbox's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "flow_id",
            "in": "query",
            "description": "The flow's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ghyetrjj_2342353rsgfkdjfl"
            }
          },
          {
            "name": "minimum_duration",
            "in": "query",
            "description": "The minimum duration.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "maximum_duration",
            "in": "query",
            "description": "The maximum duration.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "message_type",
            "in": "query",
            "description": "The inbox message's type.\n* voicemail",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voicemail",
              "enum": [
                "voicemail"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month maximum, as the response only includes one month's worth of data at once. If unspecified, this parameter returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-05-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when specifying the `from` parameter. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-05-31"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "Filter inbox messages by engagement ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1234"
            }
          },
          {
            "name": "consumer_number",
            "in": "query",
            "description": "Filter inbox messages by consumer number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1234"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter inbox messages by status.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "normal",
              "enum": [
                "normal",
                "deleted"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nInbox messages returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "messages": {
                      "type": "array",
                      "description": "Information about the inbox message.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "description": "The inbox message's ID.",
                            "example": "4Q0ILNMfTA2nJolNxhg0Rw"
                          },
                          "inbox_id": {
                            "type": "string",
                            "description": "The inbox's unique ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "inbox_name": {
                            "type": "string",
                            "description": "The inbox's name.",
                            "example": "example"
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID.",
                            "example": "xRk0eHNNTGygFDPrWqR9FA"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "The inbox message's creation time.",
                            "format": "date-time",
                            "example": "2022-05-23T14:15:57Z"
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "1wGgU3HQR8u1wWjPFNXOyA"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "inbox_message_flow"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue ID of the inbox message routed by the queue.",
                            "example": "ZWQ84A20CBBA11AFA5BC55079D5A12A28D7",
                            "deprecated": true
                          },
                          "cci_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue ID of the inbox message routed by the queue.",
                            "example": "LB937Z8oQP2mJxeNj3GxJQ"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue name of the inbox message routed by the queue.",
                            "example": "inbox_message_queue"
                          },
                          "message_type": {
                            "type": "string",
                            "description": "The inbox message's type.\n* voicemail",
                            "example": "voicemail",
                            "enum": [
                              "voicemail"
                            ]
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The URL to download the inbox message. For security purposes, you **must** provide an OAuth access token in the authorization header to download the inbox message file using this URL. Example:\n```curl --request GET \n  --url {download_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/inbox/message/download/4Q0ILNMfTA2nJolNxhg0Rw?type=voicemail"
                          },
                          "playback_url": {
                            "type": "string",
                            "description": "The URL to playback the inbox message. For security purposes, you  **must** provide an OAuth access token in the authorization header to playback the inbox message file using this URL. Example:\n```curl --request GET \n  --url {playback_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/inbox/message/playback/4Q0ILNMfTA2nJolNxhg0Rw?type=voicemail"
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The URL to download the inbox message transcript. For security purposes, you **must** provide an OAuth access token in the authorization header to download the recording transcript file using this URL. Example:\n```curl --request GET \n  --url {transcript_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/inbox/message/transcripts/download/4Q0ILNMfTA2nJolNxhg0Rw"
                          },
                          "message_duration": {
                            "type": "integer",
                            "description": "The inbox message's duration in seconds.",
                            "example": 150
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The consumer's phone number.",
                            "example": "+12058945728"
                          },
                          "consumer_id": {
                            "type": "string",
                            "description": "The consumer's ID.",
                            "example": "fsdfere78fserhgfyjb"
                          },
                          "consumer_display_name": {
                            "type": "string",
                            "description": "The consumer's name.",
                            "example": "Jill"
                          },
                          "status": {
                            "type": "string",
                            "description": "The inbox message soft delete flag. \n* normal \n* deleted",
                            "example": "normal",
                            "enum": [
                              "normal",
                              "deleted"
                            ]
                          }
                        },
                        "description": "Information about the inbox message."
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:read:admin",
              "contact_center:read:inbox_messages:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:inbox_messages:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Delete inbox messages",
        "description": "Delete messages. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:inbox_messages:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "inboxesMessagesDelete",
        "parameters": [
          {
            "name": "delete_all_messages",
            "in": "query",
            "description": "Whether or not to delete all inbox messages.\n\n `true` - Delete all inbox messages related to the filtered queues or flows. \n\n `false` - No inbox message is deleted.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "The queue's IDs. The maximum value is 10.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          },
          {
            "name": "cc_queue_ids",
            "in": "query",
            "description": "The Contact Center queue's IDs. The maximum value is 10.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          },
          {
            "name": "flow_ids",
            "in": "query",
            "description": "List of flow's IDs, up to 10 separate IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nInbox messages deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:write:admin",
              "contact_center:delete:inbox_messages:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:inbox_messages:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/{inboxId}": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Get an inbox",
        "description": "Retrieve an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:inbox:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getInbox",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nInbox returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inbox_id": {
                      "type": "string",
                      "description": "The inbox's unique ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "inbox_name": {
                      "type": "string",
                      "description": "The inbox's name.",
                      "example": "example"
                    },
                    "inbox_description": {
                      "type": "string",
                      "description": "The inbox's description.",
                      "example": "This is a inbox."
                    },
                    "inbox_type": {
                      "type": "string",
                      "description": "The inbox type.\n* voicemail",
                      "example": "voicemail",
                      "enum": [
                        "voicemail"
                      ]
                    },
                    "inbox_content_storage_location": {
                      "type": "string",
                      "description": "The inbox content's physical storage location, using a two-letter country code. \n\n US: `United States`\n\nAU: `Australia`\n \n\nBR: `Brazil`\n\nCA: `Canada`\n\nDE: `Germany`\n\nJP: `Japan`\n \nSG: `Singapore`",
                      "example": "US",
                      "enum": [
                        "US",
                        "AU",
                        "BR",
                        "CA",
                        "DE",
                        "JP",
                        "SG"
                      ]
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when this data was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of last user to modify the inbox.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "voicemail": {
                      "type": "object",
                      "properties": {
                        "soft_delete": {
                          "type": "boolean",
                          "description": "Enable soft deletion for the inbox.",
                          "example": true
                        },
                        "soft_delete_days_limit": {
                          "type": "integer",
                          "description": "When a voicemail is deleted, it is initially soft-deleted and can be restored within the admin-specified timeframe, which is up to 30 days. After that time, the voicemail is permanently deleted.",
                          "example": 20
                        },
                        "voicemail_time_limit": {
                          "type": "integer",
                          "description": "The voicemail time limit in minutes.",
                          "example": 5
                        },
                        "delete_voicemail_days_limit": {
                          "type": "integer",
                          "description": "Delete voicemail after a specified number of days.",
                          "example": 30
                        },
                        "voicemail_transcription": {
                          "type": "boolean",
                          "description": "Enable voicemail transcription.",
                          "example": false
                        },
                        "voicemail_notification_by_email": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "The voicemail enable notification by email.",
                              "example": false
                            },
                            "include_voicemail_file": {
                              "type": "boolean",
                              "description": "Whether to include voicemail file.",
                              "example": false
                            },
                            "include_voicemail_transcription": {
                              "type": "boolean",
                              "description": "Whether to include voicemail transcription.",
                              "example": false
                            },
                            "forward_voicemail_to_emails": {
                              "type": "boolean",
                              "description": "Enable forwarding voicemail to emails.",
                              "example": false
                            },
                            "emails": {
                              "type": "array",
                              "description": "Forward voicemail to email list.",
                              "items": {
                                "type": "string",
                                "example": "jchill@example.com"
                              }
                            }
                          },
                          "description": "The voicemail notification by email."
                        },
                        "greeting_audio_asset_id": {
                          "type": "string",
                          "description": "Greeting audio asset ID used for voicemail.",
                          "example": "testAssetId"
                        },
                        "voicemail_auto_assignment": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Enable voicemail auto assignment.",
                              "example": false
                            },
                            "voicemail_auto_assignment_type": {
                              "type": "integer",
                              "description": "Voicemail auto assignment type. The value can be any one of these options.\n*1 - user\n*2 - access list\n*3 - queue\n*4 - team\n*5 - rotation",
                              "format": "int32",
                              "example": 1,
                              "enum": [
                                1,
                                2,
                                3,
                                4,
                                5
                              ]
                            },
                            "voicemail_auto_assignment_during_active_work_session": {
                              "type": "integer",
                              "description": "The person assigned the voicemail auto assignment is during an active work session. The value can only be `0` or `1`, 0 - inactive, 1 - active. This field is only effective when `voicemail_auto_assignment_type` is `2`, `3`, `4`, or `5`.",
                              "format": "int32",
                              "example": 0,
                              "enum": [
                                0,
                                1
                              ]
                            },
                            "voicemail_auto_assignment_content_id": {
                              "type": "string",
                              "description": "The voicemail auto assignment operation object's ID. Can be `userId`, `queueId`, or `teamId`. This field is only effective when `voicemail_auto_assignment_type` is `1`, `3`, or `4`.",
                              "example": "testUserId"
                            },
                            "voicemail_auto_assignment_routine_profile_id": {
                              "type": "string",
                              "description": "Routine profile ID used by voicemail auto assignment. This field only takes effect when `voicemail_auto_assignment_type` is `2`, `3`, `4`, or `5`, and the user has set a routine profile.",
                              "example": "testRoutineProfileId"
                            }
                          },
                          "description": "Voicemail auto assignment settings."
                        },
                        "voicemail_send_reminders_for_unresolved": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Enable a reminder policy for unresolved voicemails.",
                              "example": false
                            },
                            "send_alert_for_unresolved_voicemail_timeout": {
                              "maximum": 10080,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Timeout for unresolved voicemail reminders, in minutes. The range is from 1 to 10080.",
                              "example": 30
                            }
                          },
                          "description": "Reminder policy for unresolved voicemails."
                        }
                      },
                      "description": "The voicemail settings."
                    }
                  },
                  "description": "Information about the inbox."
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Inbox does not exist: $inboxId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:read:admin",
              "contact_center:read:inbox:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:inbox:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Update an inbox",
        "description": "Update an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:inbox:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "inboxUpdate",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inbox_name": {
                    "type": "string",
                    "description": "The inbox's name.",
                    "example": "example"
                  },
                  "inbox_description": {
                    "type": "string",
                    "description": "The inbox's description.",
                    "example": "This is a inbox."
                  },
                  "inbox_content_storage_location": {
                    "type": "string",
                    "description": "The inbox content's physical storage location, using a two-letter country code. \n\n US: `United States`\n\nAU: `Australia`\n \n\nBR: `Brazil`\n\nCA: `Canada`\n\nDE: `Germany`\n\nJP: `Japan`\n \nSG: `Singapore`",
                    "example": "US",
                    "enum": [
                      "US",
                      "AU",
                      "BR",
                      "CA",
                      "DE",
                      "JP",
                      "SG"
                    ]
                  },
                  "voicemail": {
                    "type": "object",
                    "properties": {
                      "soft_delete": {
                        "type": "boolean",
                        "description": "Enable soft deletion for the inbox.",
                        "example": true
                      },
                      "soft_delete_days_limit": {
                        "type": "integer",
                        "description": "When a voicemail is deleted, it is initially soft-deleted and can be restored within the admin-specified timeframe, which is up to 30 days. After that time, the voicemail is permanently deleted.",
                        "example": 20
                      },
                      "voicemail_time_limit": {
                        "type": "integer",
                        "description": "The voicemail time limit in minutes.",
                        "example": 5
                      },
                      "delete_voicemail_days_limit": {
                        "type": "integer",
                        "description": "Delete voicemail after a specified number of days.",
                        "example": 30
                      },
                      "voicemail_transcription": {
                        "type": "boolean",
                        "description": "Enable voicemail transcription.",
                        "example": false
                      },
                      "voicemail_notification_by_email": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "The voicemail enable notification by email.",
                            "example": false
                          },
                          "include_voicemail_file": {
                            "type": "boolean",
                            "description": "Whether to include voicemail file.",
                            "example": false
                          },
                          "include_voicemail_transcription": {
                            "type": "boolean",
                            "description": "Whether to include voicemail transcription.",
                            "example": false
                          },
                          "forward_voicemail_to_emails": {
                            "type": "boolean",
                            "description": "Enable forwarding voicemail to emails.",
                            "example": false
                          },
                          "emails": {
                            "type": "array",
                            "description": "Forward voicemail to email list.",
                            "items": {
                              "type": "string",
                              "example": "jchill@example.com"
                            }
                          }
                        },
                        "description": "The voicemail notification by email."
                      },
                      "greeting_audio_asset_id": {
                        "type": "string",
                        "description": "Greeting audio asset ID used for voicemail.",
                        "example": "testAssetId"
                      },
                      "voicemail_auto_assignment": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable voicemail auto assignment.",
                            "example": false
                          },
                          "voicemail_auto_assignment_type": {
                            "type": "integer",
                            "description": "Voicemail auto assignment type. The value can only be one of these values.\n*1 - user\n*2 - access list\n*3 - queue\n*4 - team\n*5 - rotation",
                            "format": "int32",
                            "example": 1,
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "voicemail_auto_assignment_during_active_work_session": {
                            "type": "integer",
                            "description": "The person assigned the voicemail auto assignment is during an active work session.The value can only be `0` inactive or `1` active. This field is only effective when `voicemail_auto_assignment_type` is `2`, `3`, `4`, or `5`.",
                            "format": "int32",
                            "example": 0,
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "voicemail_auto_assignment_content_id": {
                            "type": "string",
                            "description": "The voicemail auto assignment operation object's ID. Can be `userId`, `queueId` or `teamId`. This field is only effective when `voicemail_auto_assignment_type` is `1`, `3`, or `4`.",
                            "example": "testUserId"
                          },
                          "voicemail_auto_assignment_routine_profile_id": {
                            "type": "string",
                            "description": "Routine profile ID used by voicemail auto assignment. This field only takes effect when `voicemail_auto_assignment_type` is `2`, `3`, `4,` or `5`, and the user has set a routine profile.",
                            "example": "testRoutineProfileId"
                          }
                        },
                        "description": "Voicemail auto assignment settings."
                      },
                      "voicemail_send_reminders_for_unresolved": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable a reminder policy for unresolved voicemails.",
                            "example": false
                          },
                          "send_alert_for_unresolved_voicemail_timeout": {
                            "maximum": 10080,
                            "minimum": 1,
                            "type": "integer",
                            "description": "Timeout for unresolved voicemail reminders, in minutes. The range is from 1 to 10080.",
                            "example": 30
                          }
                        },
                        "description": "Reminder policy for unresolved voicemails."
                      }
                    },
                    "description": "The voicemail settings."
                  }
                },
                "description": "Information about the inbox."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nInbox updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Inbox does not exist: $inboxId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:write:admin",
              "contact_center:update:inbox:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:inbox:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/{inboxId}/email_notification": {
      "patch": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Update an inbox email notification",
        "description": "Update an inbox email notification.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:inbox:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Updateaninboxemailnotification",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "The user's ID.",
                    "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                  },
                  "email_notification": {
                    "type": "boolean",
                    "description": "Enable email notification.",
                    "example": true
                  }
                },
                "description": "Information about the inbox email notifictaion."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nInbox email notifictaion updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Inbox does not exist: $inboxId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:write:admin",
              "contact_center:update:inbox:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:inbox:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/{inboxId}/email_notifications": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Get inbox email notification list",
        "description": "Retrieve a list ov inbox email notifications.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:inbox:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Getinboxemailnotificationlist",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "jMsQ1thcQVSvs8EqJ5qYWQ"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \\n \\nInbox email notifictaion settings returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "email_notifications": {
                      "type": "array",
                      "description": "Information about the inbox email notification settings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "email_notification": {
                            "type": "boolean",
                            "description": "Enable email notification.",
                            "example": true
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's display name.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "example": "jchill@example.com"
                          }
                        },
                        "description": "Information about the inbox email notification settings."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Inbox does not exist: $inboxId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:read:admin",
              "contact_center:read:inbox:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:inbox:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/{inboxId}/messages": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "List an inbox's messages",
        "description": "Return a list of all messages in an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:inbox_messages:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listInboxMessages",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "The queue's IDs. The maximum value is 10.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          },
          {
            "name": "message_type",
            "in": "query",
            "description": "The inbox message's type.\n* voicemail",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voicemail",
              "enum": [
                "voicemail"
              ]
            }
          },
          {
            "name": "flow_id",
            "in": "query",
            "description": "The flow's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ghyetrjj_2342353rsgfkdjfl"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month maximum, as the response only includes one month's worth of data at once. If unspecified, this parameter returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-05-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when specifying the `from` parameter. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-05-31"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nInbox messages returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "messages": {
                      "type": "array",
                      "description": "Information about the inbox message.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "description": "The inbox message's ID.",
                            "example": "4Q0ILNMfTA2nJolNxhg0Rw"
                          },
                          "inbox_id": {
                            "type": "string",
                            "description": "The inbox's unique ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "inbox_name": {
                            "type": "string",
                            "description": "The inbox's name.",
                            "example": "example"
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID.",
                            "example": "xRk0eHNNTGygFDPrWqR9FA"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "The inbox message's creation time.",
                            "format": "date-time",
                            "example": "2022-05-23T14:15:57Z"
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "1wGgU3HQR8u1wWjPFNXOyA"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "inbox_message_flow"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue ID of the inbox message routed by the queue.",
                            "example": "ZWQ84A20CBBA11AFA5BC55079D5A12A28D7"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue name of the inbox message routed by the queue.",
                            "example": "inbox_message_queue"
                          },
                          "message_type": {
                            "type": "string",
                            "description": "The inbox message's type.\n* voicemail",
                            "example": "voicemail",
                            "enum": [
                              "voicemail"
                            ]
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The URL to download the inbox message. For security purposes, you **must** provide an OAuth access token in the authorization header to download the inbox message file using this URL. Example:\n```curl --request GET \n  --url {download_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/inbox/message/download/4Q0ILNMfTA2nJolNxhg0Rw?type=voicemail"
                          },
                          "playback_url": {
                            "type": "string",
                            "description": "The URL to playback the inbox message. For security purposes, you  **must** provide an OAuth access token in the authorization header to playback the inbox message file using this URL. Example:\n```curl --request GET \n  --url {playback_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/inbox/message/playback/4Q0ILNMfTA2nJolNxhg0Rw?type=voicemail"
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The URL to download the inbox message transcript. For security purposes, you **must** provide an OAuth access token in the authorization header to download the recording transcript file using this URL. Example:\n```curl --request GET \n  --url {transcript_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/inbox/message/transcripts/download/4Q0ILNMfTA2nJolNxhg0Rw"
                          },
                          "message_duration": {
                            "type": "integer",
                            "description": "The inbox message's duration in seconds.",
                            "example": 150
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The consumer's phone number.",
                            "example": "+12058945728"
                          },
                          "consumer_id": {
                            "type": "string",
                            "description": "The consumer's ID.",
                            "example": "fsdfere78fserhgfyjb"
                          },
                          "consumer_display_name": {
                            "type": "string",
                            "description": "The consumer's name.",
                            "example": "Jill"
                          },
                          "status": {
                            "type": "string",
                            "description": "The inbox message soft delete flag. \n* normal \n* deleted",
                            "example": "normal",
                            "enum": [
                              "normal",
                              "deleted"
                            ]
                          }
                        },
                        "description": "Information about the inbox message."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nInbox does not exist: $inboxId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:read:admin",
              "contact_center:read:inbox_messages:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_inbox:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:inbox_messages:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Delete an inbox's messages",
        "description": "Delete messages in an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:inbox_messages:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "inboxMessagesDelete",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "delete_all_messages",
            "in": "query",
            "description": "Whether or not to delete all messages in a given inbox.\n\n true: delete all messages under an inbox.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nInbox messages deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nInbox does not exist: $inboxId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:write:admin",
              "contact_center:delete:inbox_messages:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_inbox:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:inbox_messages:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/{inboxId}/messages/{messageId}": {
      "delete": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Delete an inbox message",
        "description": "Delete a single message in an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_inbox:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:inbox_message:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "inboxMessageDelete",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The inbox message's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "kopVATTk_Q5awefgretBxAQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nInbox message deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nInbox does not exist: $inboxId.\n\n**Error Code:** `3101` <br>\nInbox message does not exist: $messageId.\n\n**Error Code:** `3102` <br>\nThe inbox id that matches this message id is: $inboxId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_inbox:write:admin",
              "contact_center:delete:inbox_message:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_inbox:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:inbox_message:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/{inboxId}/queues": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Get inbox access queues",
        "description": "Retrieve a list of queues that have access to an inbox. \n\n \n \n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_inbox_queues:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listInboxQueues",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "&quot;**HTTP Status Code:** `200`   \n \nList of inbox queues returned.&quot;",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "queues": {
                      "type": "array",
                      "description": "Information about the task queues.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The task queue's ID.",
                            "example": "Ql3qxUWXSHes4PmcOmzyOg",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "Ql3qxUWXSHes4PmcOmzyOg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The task queue's name.",
                            "example": "queue_661c6e4b-89fc-4b0d-9978-c7394725462"
                          },
                          "agents_count": {
                            "type": "integer",
                            "description": "The number of assigned agents.",
                            "example": 1
                          },
                          "supervisors_count": {
                            "type": "integer",
                            "description": "The number of assigned supervisors.",
                            "example": 1
                          },
                          "channel_types": {
                            "type": "array",
                            "description": "The task queue's channel types.",
                            "deprecated": true,
                            "items": {
                              "type": "string",
                              "example": "voice",
                              "deprecated": true,
                              "enum": [
                                "voice",
                                "chat",
                                "sms",
                                "video",
                                "in_app_chat"
                              ]
                            }
                          },
                          "channel": {
                            "type": "string",
                            "description": "The Contact Center queue's channel.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Inbox does not exist: $inboxId.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:list_inbox_queues:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_inbox_queues:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Assign inbox access queues",
        "description": "Assign queues access to an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:inbox_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "assignInboxQueues",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "queue_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "deprecated": true,
                    "items": {
                      "type": "string",
                      "description": "The queue's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    }
                  },
                  "cc_queue_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "The Contact Center queue's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nList of queues has been updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1202` <br>\n \"Queues do not exist: [$queue_id].\"<br> <br>\n **Error Code:** `1203` <br>\n Queue is already assigned to inbox: [$queue_id]. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Inbox does not exist: $inboxId.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:write:inbox_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:inbox_queue:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Remove inbox access queues",
        "description": "Remove queues' access to an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:inbox_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "unassignInboxQueues",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "The queue's IDs. The maximum value is 10.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          },
          {
            "name": "cc_queue_ids",
            "in": "query",
            "description": "The Contact Center queue's IDs. The maximum value is 10.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ghyetrjj_2342353rsgfkdjfl"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueues' access has been removed from the inbox."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1202` <br>\n \"Queues do not exist: [$queue_id].\"<br> <br>\n **Error Code:** `1204` <br>\n Queue is not assigned to inbox: [$queue_id]. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Inbox does not exist: $inboxId.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:inbox_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:inbox_queue:admin"
          ]
        }
      }
    },
    "/contact_center/inboxes/{inboxId}/users": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Get an inbox's users",
        "description": "Retrieve a list of users assigned to an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:inbox_user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listInboxUsers",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "&quot;**HTTP Status Code:** `200`   \n \nList of inbox users returned.&quot;",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "users": {
                      "type": "array",
                      "description": "Information about the users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nInbox does not exist: $inboxId.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:read:admin",
              "contact_center:read:inbox_user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_user:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:inbox_user:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Assign inbox access users",
        "description": "Assign a user's access to an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:inbox_user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "assignInboxUsers",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_ids:": {
                    "maxItems": 30,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "The user's ID.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nList of users has been updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1012` <br>\n\"Users do not exist: [$user_id].\"<br>\n\n**Error Code:** `1013` <br>\nUser is already assigned to inbox: [$user_id].\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nInbox does not exist: $inboxId.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:write:inbox_user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:inbox_user:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Unassign inbox access users",
        "description": "Remove users' access to an inbox. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:inbox_user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "unassignInboxUsers",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "The inbox's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "A comma-separated list of user IDs to query, up to 30 user IDs.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "IGTRVt3gQ2i-WjoUIjeZxw"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nUsers' access has been removed from the inbox."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1012` <br>\n\"Users do not exist: [$user_id].\"<br>\n\n**Error Code:** `1014` <br>\nUser is not assigned to inbox: [$user_id].\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nInbox does not exist: $inboxId.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:delete:inbox_user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:inbox_user:admin"
          ]
        }
      }
    },
    "/contact_center/sms": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "List SMS logs",
        "description": "Returns a list of SMS engagement logs. Engagement data are available via API once they are completed.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_sms:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:sms_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listSMS",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-mm-dd` or ISO 8601 format, which is either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in `yyyy-mm-dd` or ISO 8601 format, which is either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "country_iso_codes",
            "in": "query",
            "description": "Two-letter ISO country [code](/docs/api/references/abbreviations/#countries).",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "US"
              ],
              "items": {
                "type": "string",
                "example": "CN"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The agent's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ukAAkZKfROKMSw1bj_RDFQ"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "3XilEfOvQEKRIWMWhX1jDg"
            }
          },
          {
            "name": "consumer_number",
            "in": "query",
            "description": "The consumer's phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12059300920"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nVariables list returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'`, or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2023-01-01T08:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2023-01-01T09:00:00Z"
                    },
                    "sms": {
                      "type": "array",
                      "description": "Information about the SMS.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction. `inbound` | `outbound`.",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "contact_center_number": {
                            "type": "string",
                            "description": "The agent's number. An agent used a flow or queue number and did not really have its own number.",
                            "example": "+18108001001"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The date and time when the engagement started in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
                            "format": "date-time",
                            "example": "2023-01-01T08:00:00Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The date and time when the engagement ended in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
                            "format": "date-time",
                            "example": "2023-01-01T09:00:00Z"
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The consumer's phone number.",
                            "example": "+12059300920"
                          },
                          "consumer_display_name": {
                            "type": "string",
                            "description": "The consumer's name.",
                            "example": "Tester"
                          },
                          "queues": {
                            "type": "array",
                            "description": "Information about the engagement's queues.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "queue_id": {
                                  "type": "string",
                                  "description": "The queue's ID.",
                                  "example": "d95avl1eRJ-H162PZUJ-qg",
                                  "deprecated": true
                                },
                                "cc_queue_id": {
                                  "type": "string",
                                  "description": "The Contact Center queue's ID.",
                                  "example": "d95avl1eRJ-H162PZUJ-qg"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "The queue's name.",
                                  "example": "agentQueue"
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "agents": {
                            "type": "array",
                            "description": "Information about the engagement's agents.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The agent's ID.",
                                  "example": "ukAAkZKfROKMSw1bj_RDFQ"
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The agent's name.",
                                  "example": "Jilly"
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "country_name": {
                            "type": "string",
                            "description": "The country name.",
                            "example": "China"
                          },
                          "sms_types": {
                            "type": "array",
                            "description": "The SMS's type.",
                            "items": {
                              "type": "string",
                              "example": "sms",
                              "enum": [
                                "sms",
                                "mms"
                              ]
                            }
                          },
                          "total_sent_messages": {
                            "type": "integer",
                            "description": "The total number of sent messages.",
                            "format": "int64",
                            "example": 0
                          },
                          "total_received_messages": {
                            "type": "integer",
                            "description": "The total number of received messages.",
                            "format": "int64",
                            "example": 0
                          },
                          "total_sent_files": {
                            "type": "integer",
                            "description": "The total number of sent files.",
                            "format": "int64",
                            "example": 0
                          },
                          "total_received_files": {
                            "type": "integer",
                            "description": "The total number of received files.",
                            "format": "int64",
                            "example": 0
                          }
                        },
                        "description": "Information about the SMS."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2901` <br>\n Engagement does not exist: $engagementId. <br>\n **Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_sms:read:admin",
              "contact_center:read:sms_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_sms:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:sms_log:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "SMS"
        ],
        "summary": "Send an SMS",
        "description": "Send an SMS message.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_sms:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:sms:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "contactCenterSMS",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "body",
                  "consumer_numbers",
                  "contact_center_number"
                ],
                "type": "object",
                "properties": {
                  "contact_center_number": {
                    "type": "string",
                    "description": "This must be an SMS capable phone number allocated to Zoom Contact Center within the customer account. Enter the number in E.164 format. Get the number via Zoom PAYG Global Number SKU after meeting the in-country compliance requirements.",
                    "example": "+12090000000"
                  },
                  "consumer_numbers": {
                    "maximum": 20,
                    "type": "array",
                    "description": "The phone number of the person receiving the SMS. Consumer numbers should be in the E.164 format. Opt in - START - and opt out - STOP - keywords received from this number will be honored. This field may not be empty. Maximum length of the array is 20 items.",
                    "items": {
                      "type": "string",
                      "description": "The consumer's e164 number.",
                      "example": "+12090001111"
                    }
                  },
                  "body": {
                    "maximum": 500,
                    "type": "string",
                    "description": "The content that needs to be sent as an SMS. Maximum length is 500 characters. Messages will be broken into smaller segments of 160 characters and concatenated at the time of delivery. Unicode characters and emojis are supported. You can send any text or URL. MMS is not supported. There is no support for handling inbound messages and delivery confirmations.",
                    "example": "hello contact sms"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Send SMS response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "consumer_number",
                      "contact_center_number",
                      "success"
                    ],
                    "type": "object",
                    "properties": {
                      "contact_center_number": {
                        "type": "string",
                        "description": "E164 flow number.",
                        "example": "+12090000000"
                      },
                      "consumer_number": {
                        "type": "string",
                        "description": "The consumer's phone number, in e164 format.",
                        "example": "+12090001111"
                      },
                      "message_id": {
                        "type": "string",
                        "description": "The message ID. Indicates the action of sending a message from this `contact_center_number` to this consumer number.",
                        "example": "IQ-dhfaoufosadfb"
                      },
                      "success": {
                        "type": "boolean",
                        "description": "Indicates whether the SMS was sent successfully.",
                        "example": true
                      },
                      "description": {
                        "type": "string",
                        "description": "The error message returned when the SMS was not successfully sent.",
                        "example": "The consumer number you have messaged has not opted in",
                        "enum": [
                          "Invalid consumer number. The format of the consumer number used is incorrect. E.164 format is required",
                          "Zoom Contact Center numbers cannot be used as consumer numbers. Retry using a non Zoom Contact Center number",
                          "The consumer number you have messaged has not opted in",
                          "This consumer number has opted out of receiving SMS from this Zoom contact center number",
                          "This consumer number is a part of the block list defined by your Zoom Contact Center account administrator and cannot be messaged",
                          "International messaging is not supported on this account"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1405` <br>\n `contact_center_number` has not enabled SMS feature. <br>\n**Error Code:** `1408` <br>\n `consumer_number` cannot be more than 20 digits. <br>\n**Error Code:** `1404` <br>\n `contact_center_number` not found. <br>\n**Error Code:** `1412` <br>\n `body` can't be empty. <br>\n**Error Code:** `1413` <br>\n SMS `body` is too long. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_sms:write:admin",
              "contact_center:write:sms:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_sms:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:sms:admin"
          ]
        }
      }
    },
    "/contact_center/voice_calls": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "List voice call logs",
        "description": "Returns a list of voice call engagement logs. Engagement data is available via API once it is completed.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_voice_call:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:voice_call_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listVoiceCall",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-mm-dd` or ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in `yyyy-mm-dd` or ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "The call's type.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "external_call",
                "enum": [
                  "external_call",
                  "external_conference_call",
                  "external_callback_call",
                  "internal_call",
                  "internal_conference_call",
                  "internal_callback_call"
                ]
              }
            }
          },
          {
            "name": "distribution",
            "in": "query",
            "description": "The engagement's distribution.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "acd",
              "enum": [
                "acd",
                "non_acd"
              ]
            }
          },
          {
            "name": "consumer_number",
            "in": "query",
            "description": "The consumer's phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12059300920"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "A comma-separated list of agents' user IDs to query, up to 20 agent IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "t9PXwOsSQ2qXp7YSPDrALQ"
              }
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "3XilEfOvQEKRIWMWhX1jDg"
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "A comma-separated list of queue IDs to query, up to 20 queue IDs. If user provide `none`, filter by **No queue used** in the web UI.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Ql3qxUWXSHes4PmcOmzyOg"
              }
            }
          },
          {
            "name": "cc_queue_ids",
            "in": "query",
            "description": "A comma-separated list of Contact Center queue IDs to query, up to 20 queue IDs. If a user provides `none`, filter by **No queue used** in the web UI.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Ql3qxUWXSHes4PmcOmzyOg"
              }
            }
          },
          {
            "name": "country_iso_codes",
            "in": "query",
            "description": "Two-letter ISO country [code](/docs/api/references/abbreviations/#countries).",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "CN"
              }
            }
          },
          {
            "name": "number_types",
            "in": "query",
            "description": "The number's type.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "toll_free_number",
                "enum": [
                  "toll_free_number",
                  "virtual_service_number",
                  "byoc_number"
                ]
              }
            }
          },
          {
            "name": "region_ids",
            "in": "query",
            "description": "A comma-separated list of region IDs to query, up to 20 region IDs.",
            "required": false,
            "schema": {
              "maxItems": 20,
              "uniqueItems": true,
              "type": "array",
              "example": [
                "3XilEfOvQEKRIWMWhX1jDg"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "region_names",
            "in": "query",
            "description": "A comma-separated list of region Names to query, up to 20 region Names.",
            "required": false,
            "schema": {
              "maxItems": 20,
              "uniqueItems": true,
              "type": "array",
              "example": [
                "Main Region"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_ids",
            "in": "query",
            "description": "A comma-separated list of team IDs to query, up to 20 team IDs.",
            "required": false,
            "schema": {
              "maxItems": 20,
              "uniqueItems": true,
              "type": "array",
              "example": [
                "3XilEfOvQEKRIWMWhX1jDg"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_names",
            "in": "query",
            "description": "A comma-separated list of team names to query, up to 20 team names.",
            "required": false,
            "schema": {
              "maxItems": 20,
              "uniqueItems": true,
              "type": "array",
              "example": [
                "My Team"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   Variables list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2023-01-01T08:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2023-01-01T09:00:00Z"
                    },
                    "voice_calls": {
                      "type": "array",
                      "description": "Information about the voice call.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction. `inbound` | `outbound`.",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "call_legs": {
                            "type": "array",
                            "description": "The direction of the engagement call leg. `inbound` | `outbound`.",
                            "items": {
                              "type": "string",
                              "example": "inbound",
                              "enum": [
                                "inbound",
                                "outbound"
                              ]
                            }
                          },
                          "distributions": {
                            "type": "array",
                            "description": "The engagement's distribution. `acd` | `non_acd`.",
                            "items": {
                              "type": "string",
                              "example": "acd",
                              "enum": [
                                "acd",
                                "non_acd"
                              ]
                            }
                          },
                          "types": {
                            "type": "array",
                            "description": "The call's type.",
                            "items": {
                              "type": "string",
                              "example": "external_call",
                              "enum": [
                                "external_call",
                                "external_conference_call",
                                "external_callback_call",
                                "internal_call",
                                "internal_conference_call",
                                "internal_callback_call"
                              ]
                            }
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The caller's phone number.",
                            "example": "+18108001001"
                          },
                          "caller_number_type": {
                            "type": "string",
                            "description": "The caller's number type.",
                            "example": "toll_free_number",
                            "enum": [
                              "toll_free_number",
                              "virtual_service_number",
                              "byoc_number"
                            ]
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The callee's phone number.",
                            "example": "+12055437350"
                          },
                          "callee_number_type": {
                            "type": "string",
                            "description": "The callee's number type.",
                            "example": "toll_free_number",
                            "enum": [
                              "toll_free_number",
                              "virtual_service_number",
                              "byoc_number"
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The date and time when the engagement started in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
                            "example": "2023-01-01T00:00:00-08:00"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The date and time when the engagement ended in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
                            "example": "2023-01-01T01:00:00-08:00"
                          },
                          "total_duration": {
                            "type": "integer",
                            "description": "The engagement's total duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The consumer's phone number.",
                            "example": "+12059300920"
                          },
                          "consumer_display_name": {
                            "type": "string",
                            "description": "The consumer's name.",
                            "example": "Tester"
                          },
                          "queues": {
                            "type": "array",
                            "description": "Information about the engagement's queues.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "queue_id": {
                                  "type": "string",
                                  "description": "The queue's ID.",
                                  "example": "d95avl1eRJ-H162PZUJ-qg",
                                  "deprecated": true
                                },
                                "cc_queue_id": {
                                  "type": "string",
                                  "description": "The Contact Center queue's ID.",
                                  "example": "d95avl1eRJ-H162PZUJ-qg"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "The queue's name.",
                                  "example": "agentQueue"
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "agents": {
                            "type": "array",
                            "description": "Information about the engagement's agents.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The agent's ID.",
                                  "example": "ukAAkZKfROKMSw1bj_RDFQ"
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The agent's name.",
                                  "example": "Jilly"
                                },
                                "user_email": {
                                  "type": "string",
                                  "description": "The agent's email.",
                                  "example": "jakie@zoom.us"
                                },
                                "user_ip_address": {
                                  "type": "string",
                                  "description": "IP address of the agent's device.",
                                  "format": "ipv4",
                                  "example": "38.145.73.4"
                                },
                                "user_device_mac_address": {
                                  "pattern": "^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$",
                                  "type": "string",
                                  "description": "MAC address of the agent's device.",
                                  "example": "05:FA:15:25:EE:FF"
                                },
                                "user_registered_sip_zone": {
                                  "type": "string",
                                  "description": "The SIP zone where the agent registered.",
                                  "example": "ams1sbc"
                                },
                                "sip_zone_ip_address": {
                                  "type": "string",
                                  "description": "The SIP zome's IP address.",
                                  "format": "ipv4",
                                  "example": "38.145.73.4"
                                },
                                "user_region": {
                                  "type": "string",
                                  "description": "The agent's region name",
                                  "example": "Main Region"
                                },
                                "team_ids": {
                                  "type": "array",
                                  "description": "The agent's team IDs",
                                  "items": {
                                    "type": "string",
                                    "description": "agent team ID list",
                                    "example": "[\"3XilEfOvQEKRIWMWhX1jDg\"]"
                                  }
                                },
                                "team_names": {
                                  "type": "array",
                                  "description": "The agent's team names.",
                                  "items": {
                                    "type": "string",
                                    "description": "agent team name list.",
                                    "example": "[\"My team\"]"
                                  }
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "flows": {
                            "type": "array",
                            "description": "Information about the engagement's flows.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "flow_id": {
                                  "type": "string",
                                  "description": "The flow's ID.",
                                  "example": "zeYjXoDOS_eV1QmTpj63PQ"
                                },
                                "flow_name": {
                                  "type": "string",
                                  "description": "The flow's name.",
                                  "example": "Demo"
                                }
                              },
                              "description": "Information about the flow."
                            }
                          },
                          "country_name": {
                            "type": "string",
                            "description": "The country name.",
                            "example": "China"
                          },
                          "recorded": {
                            "type": "boolean",
                            "description": "Flag to determine whether to recorded.",
                            "example": false
                          },
                          "monitored": {
                            "type": "boolean",
                            "description": "Flag to determine whether to monitored.",
                            "example": false
                          },
                          "inbox": {
                            "type": "boolean",
                            "description": "Flag to determine whether a message is in the box.",
                            "example": false
                          },
                          "result": {
                            "type": "string",
                            "description": "The engagement's results.",
                            "example": "completed",
                            "enum": [
                              "completed",
                              "short_abandoned",
                              "long_abandoned",
                              "hold_abandoned",
                              "long_calls",
                              "short_calls",
                              "hang_up_calls",
                              "overflowed_to_disconnect",
                              "overflowed_to_inbox",
                              "overflowed",
                              "abandon_quit",
                              "auto_closed",
                              "contained",
                              "missed",
                              "declined",
                              "callback_abandoned_by_consumer"
                            ]
                          },
                          "caller_id": {
                            "type": "string",
                            "description": "The caller's number.",
                            "example": "+12058945728"
                          },
                          "calling_party": {
                            "type": "string",
                            "description": "The calling's party.",
                            "example": "consumer",
                            "enum": [
                              "consumer",
                              "agent"
                            ]
                          },
                          "charge": {
                            "type": "string",
                            "description": "The bill's charge.",
                            "example": "$0.019"
                          },
                          "rates": {
                            "type": "array",
                            "description": "The price for each sent message.",
                            "items": {
                              "type": "string",
                              "example": "$0.019"
                            }
                          },
                          "charge_type": {
                            "type": "string",
                            "description": "The charge type.",
                            "example": "per_minute",
                            "enum": [
                              "per_minute"
                            ]
                          },
                          "session_border_controller_list": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "session_border_controller_name": {
                                  "type": "string",
                                  "description": "The session border controller's name.",
                                  "example": "ams1sbc"
                                },
                                "session_border_controller_ip_address": {
                                  "type": "string",
                                  "description": "The SBC's IP address.",
                                  "example": "38.145.73.20"
                                },
                                "consumer_zoom_trunk_name": {
                                  "type": "string",
                                  "description": "The name of the trunk between the customer SBC and Zoom SBC.",
                                  "example": "C10010142296A06"
                                }
                              },
                              "description": "Information about the session border controller."
                            }
                          }
                        },
                        "description": "Information about the voice call."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2901` <br>\n Engagement does not exist: $engagementId. <br>\n **Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_voice_call:read:admin",
              "contact_center:read:voice_call_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_voice_call:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:voice_call_log:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "List notes",
        "description": "Return a list of notes. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_note:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_notes:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "notes",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nNote list returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "notes": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Information about the notes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "note_id": {
                            "type": "string",
                            "description": "The note's unique ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement event's unique ID.",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The channel's type: \n* voice \n* sms \n* chat \n* video",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "sms",
                              "chat",
                              "video"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The channel's type.\n* voice\n* sms\n* chat\n * video\n* email",
                            "example": "email",
                            "enum": [
                              "voice",
                              "sms",
                              "chat",
                              "video",
                              "email"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The channel source.",
                            "example": "email_address"
                          },
                          "note": {
                            "type": "string",
                            "description": "The note's content.",
                            "example": "This is the content of the note."
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The note's last modification time.",
                            "format": "date-time",
                            "example": "2022-05-23T14:15:57Z"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The ID of last user to modify the note.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          }
                        },
                        "description": "Information about the note."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_note:read:admin",
              "contact_center:read:list_notes:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_note:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_notes:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "List engagement notes",
        "description": "Return a list of notes under an engagement. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_note:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_notes:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "engagementNotes",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement event's unique ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Xh79Eq6gQhy8I1vM-r8P-w"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nEngagement note list returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "notes": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Information about the notes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "note_id": {
                            "type": "string",
                            "description": "The note's unique ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement event's unique ID.",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The channel's type. \n* voice \n* sms \n* chat \n* video",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "sms",
                              "chat",
                              "video"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The channel's type. \n * voice * sms * chat * video* email",
                            "example": "email",
                            "enum": [
                              "voice",
                              "sms",
                              "chat",
                              "video",
                              "email"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The channel source.",
                            "example": "email_address"
                          },
                          "note": {
                            "type": "string",
                            "description": "The note's content.",
                            "example": "This is the content of the note."
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The note's last modification time.",
                            "format": "date-time",
                            "example": "2022-05-23T14:15:57Z"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The ID of last user to modify the note.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          }
                        },
                        "description": "Information about the note."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_note:read:admin",
              "contact_center:read:list_notes:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_note:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_notes:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}/notes/{noteId}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get a note",
        "description": "Retrieve a note. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_note:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:note:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getNote",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement event's unique ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Xh79Eq6gQhy8I1vM-r8P-w"
            }
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nNote returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note_id": {
                      "type": "string",
                      "description": "The note's unique ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "engagement_id": {
                      "type": "string",
                      "description": "The engagement event's unique ID.",
                      "example": "3XilEfOvQEKRIWMWhX1jDg"
                    },
                    "channel_type": {
                      "type": "string",
                      "description": "The channel's type. \n* voice \n* sms \n* chat \n * video",
                      "example": "voice",
                      "deprecated": true,
                      "enum": [
                        "voice",
                        "sms",
                        "chat",
                        "video",
                        "email"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel's type. \n* voice \n* sms \n* chat \n * video\n* email",
                      "example": "email",
                      "enum": [
                        "voice",
                        "sms",
                        "chat",
                        "video",
                        "email"
                      ]
                    },
                    "channel_source": {
                      "type": "string",
                      "description": "channel source",
                      "example": "email_address",
                      "enum": [
                        "email_address"
                      ]
                    },
                    "note": {
                      "type": "string",
                      "description": "The note's content.",
                      "example": "This is the content of the note."
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The note's last modification time.",
                      "format": "date-time",
                      "example": "2022-05-23T14:15:57Z"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "The ID of last user to modify the note.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    }
                  },
                  "description": "Information about the note."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2704` <br>\n The engagementId that matches this noteId is: $engagementId <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2701` <br>\n Note does not exist: $noteId <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_note:read:admin",
              "contact_center:read:note:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_note:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:note:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Update a note",
        "description": "Update a note. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_note:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:note`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "noteUpdate",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement event's unique ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Xh79Eq6gQhy8I1vM-r8P-w"
            }
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "type": "string",
                    "description": "The note's content.",
                    "example": "This is the content of the note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nNote updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2702` <br>\n Note can not be updated. You can only update the note that belongs to you. <br>\n**Error Code:** `2704` <br>\n The `engagementId` that matches this noteId is: $engagementId. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2701` <br>\n Note does not exist: $noteId <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_note:write",
              "contact_center:update:note"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_note:write"
          ],
          "x-granular-scopes": [
            "contact_center:update:note"
          ]
        }
      }
    },
    "/contact_center/business_hours": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "List business hours",
        "description": "Get a list of business hours. Admins can create business hours to select, such as the business hours &quot;Default Hours&quot;. \n\n \n\n **[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operating_hours:read:admin`,`contact_center_queue:read:admin`\n \n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_business_hours:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listBusinessHours",
        "parameters": [
          {
            "name": "account_default",
            "in": "query",
            "description": "Default business hours or closures for the newly created queue.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nBusiness hours returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "business_hours": {
                      "type": "array",
                      "description": "Information about the business hours.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "business_hour_id": {
                            "type": "string",
                            "description": "The business hours' ID.",
                            "example": "66ZjSQ7YTOescnINN_4vog"
                          },
                          "business_hour_name": {
                            "type": "string",
                            "description": "The business hours' name.",
                            "example": "Default Business hours"
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The business hours' timezone ID.",
                            "example": "America/New_York"
                          },
                          "account_default": {
                            "type": "boolean",
                            "description": "Default business hours for the newly created queue.",
                            "example": true
                          },
                          "queues_count": {
                            "type": "integer",
                            "description": "The number of queues using the business hour.",
                            "example": 1
                          },
                          "flows_count": {
                            "type": "integer",
                            "description": "The number of flows using the business hour.",
                            "example": 1
                          },
                          "hours": {
                            "type": "object",
                            "properties": {
                              "hour_type": {
                                "type": "integer",
                                "description": "The type of business hours. \n* `1` &mdash; 24 hours, 7 days a week. \n* `2` &mdash; Custom hours.",
                                "example": 2,
                                "enum": [
                                  1,
                                  2
                                ]
                              },
                              "custom_hours": {
                                "type": "array",
                                "description": "The custom hours settings. It returns only for the `Custom hours` type.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "day_of_week": {
                                      "type": "integer",
                                      "description": "The day of the week. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                                      "example": 1,
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7
                                      ]
                                    },
                                    "custom_hour_type": {
                                      "type": "integer",
                                      "description": "The type of custom hours. \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                                      "example": 2,
                                      "enum": [
                                        0,
                                        1,
                                        2
                                      ]
                                    },
                                    "custom_hour_ranges": {
                                      "maxItems": 2,
                                      "type": "array",
                                      "description": "The custom hours range. It returns only for the `Customized hours` type.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "start_time": {
                                            "type": "string",
                                            "description": "The custom hours start time, `HH:mm` and `24-hour clock` format.",
                                            "example": "09:00"
                                          },
                                          "end_time": {
                                            "type": "string",
                                            "description": "The custom hours end time, `HH:mm` and `24-hour clock` format.",
                                            "example": "18:00"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "description": "The business hours."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operating_hours:read:admin",
              "contact_center_queue:read:admin",
              "contact_center:read:list_business_hours:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operating_hours:read:admin",
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_business_hours:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Create business hours",
        "description": "Create new business hours. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operating_hours:write:admin`,`contact_center_queue:write:admin`\n \n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:business_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "businessHourCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "business_hour_name": {
                    "type": "string",
                    "description": "The business hours' name.",
                    "example": "Default business hours"
                  },
                  "business_hour_description": {
                    "type": "string",
                    "description": "The business hours' description.",
                    "example": "This is a description."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The business hours' timezone ID.",
                    "example": "America/New_York"
                  },
                  "account_default": {
                    "type": "boolean",
                    "description": "Default business hours for the newly created queue.",
                    "example": true
                  },
                  "hours": {
                    "type": "object",
                    "properties": {
                      "hour_type": {
                        "type": "integer",
                        "description": "The type of business hours. \n* `1` &mdash; 24 hours, 7 days a week. \n* `2` &mdash; Custom hours.",
                        "example": 2,
                        "enum": [
                          1,
                          2
                        ]
                      },
                      "custom_hours": {
                        "type": "array",
                        "description": "The custom hours' settings. Required only for the `Custom hours` type.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "day_of_week": {
                              "type": "integer",
                              "description": "The day of the week. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n * `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                              "example": 1,
                              "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                              ]
                            },
                            "custom_hour_type": {
                              "type": "integer",
                              "description": "The type of custom hours. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                              "example": 2,
                              "enum": [
                                1,
                                2
                              ]
                            },
                            "custom_hour_ranges": {
                              "maxItems": 2,
                              "type": "array",
                              "description": "The custom hours' range. Required only for the `Customized hours` type.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "start_time": {
                                    "type": "string",
                                    "description": "The custom hours' start time, in `HH:mm` and `24-hour clock` format.",
                                    "example": "09:00"
                                  },
                                  "end_time": {
                                    "type": "string",
                                    "description": "The custom hours' end time, in `HH:mm` and `24-hour clock` format.",
                                    "example": "18:00"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nBusiness hours created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "business_hour_id": {
                      "type": "string",
                      "description": "The business hours' ID.",
                      "example": "66ZjSQ7YTOescnINN_4vog"
                    },
                    "business_hour_name": {
                      "type": "string",
                      "description": "The business hours' name.",
                      "example": "Default business hours"
                    },
                    "business_hour_description": {
                      "type": "string",
                      "description": "The business hours' description.",
                      "example": "This is a description."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The business hours' timezone ID.",
                      "example": "America/New_York"
                    },
                    "account_default": {
                      "type": "boolean",
                      "description": "Default business hours for the newly created queue.",
                      "example": true
                    },
                    "hours": {
                      "type": "object",
                      "properties": {
                        "hour_type": {
                          "type": "integer",
                          "description": "The type of business hours. \n* `1` &mdash; 24 hours, 7 days a week. \n* `2` &mdash; Custom hours.",
                          "example": 2,
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "custom_hours": {
                          "maxItems": 7,
                          "type": "array",
                          "description": "The custom hours' settings. Returned only for the `Custom hours` type.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day_of_week": {
                                "type": "integer",
                                "description": "The day of the week. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n * `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                                "example": 1,
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "custom_hour_type": {
                                "type": "integer",
                                "description": "The type of custom hours. \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                                "example": 2,
                                "enum": [
                                  0,
                                  1,
                                  2
                                ]
                              },
                              "custom_hour_ranges": {
                                "maxItems": 2,
                                "type": "array",
                                "description": "The custom hours' range. Returned only for the `Customized hours` type.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "start_time": {
                                      "type": "string",
                                      "description": "The custom hours' start time, in `HH:mm` and `24-hour clock` format.",
                                      "example": "09:00"
                                    },
                                    "end_time": {
                                      "type": "string",
                                      "description": "The custom hours' end time, in `HH:mm` and `24-hour clock` format.",
                                      "example": "18:00"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3607` <br>\n The `custom_hour_ranges` should not be empty when the `custom_hour_type` is `Customized hours`. <br>\n**Error Code:** `3608` <br>\n The `end_time` $endTime should not be earlier than the `start_time` $startTime. <br>\n**Error Code:** `300` <br>\n Validation failed. <br>\n **Error Code:** `3604` <br>\n The `custom_hours` should not be empty when the `hour_type` is `Custom hours`. <br>\n**Error Code:** `3602` <br>\n Timezone does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operating_hours:write:admin",
              "contact_center_queue:write:admin",
              "contact_center:write:business_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operating_hours:write:admin",
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:business_hour:admin"
          ]
        }
      }
    },
    "/contact_center/business_hours/{businessHourId}": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Get business hours",
        "description": "Get information about business hours. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operating_hours:read:admin`,`contact_center_queue:read:admin`\n \n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:business_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getABusinessHour",
        "parameters": [
          {
            "name": "businessHourId",
            "in": "path",
            "description": "The business hours' ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66ZjSQ7YTOescnINN_4vog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nBusiness hours returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "business_hour_id": {
                      "type": "string",
                      "description": "The business hours' ID.",
                      "example": "66ZjSQ7YTOescnINN_4vog"
                    },
                    "business_hour_name": {
                      "type": "string",
                      "description": "The business hours' name.",
                      "example": "Default Business hours"
                    },
                    "business_hour_description": {
                      "type": "string",
                      "description": "The business hours' description.",
                      "example": "This is a description."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The business hours' timezone ID.",
                      "example": "America/New_York"
                    },
                    "account_default": {
                      "type": "boolean",
                      "description": "Default business hours for the newly created queue.",
                      "example": true
                    },
                    "hours": {
                      "type": "object",
                      "properties": {
                        "hour_type": {
                          "type": "integer",
                          "description": "The type of business hours. \n* `1` &mdash; 24 hours, 7 days a week. \n* `2` &mdash; Custom hours.",
                          "example": 2,
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "custom_hours": {
                          "type": "array",
                          "description": "The custom hours settings. It returns only for the `Custom hours` type.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day_of_week": {
                                "type": "integer",
                                "description": "The day of the week. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n * `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                                "example": 1,
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "custom_hour_type": {
                                "type": "integer",
                                "description": "The type of custom hours. \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                                "example": 2,
                                "enum": [
                                  0,
                                  1,
                                  2
                                ]
                              },
                              "custom_hour_ranges": {
                                "maxItems": 2,
                                "type": "array",
                                "description": "The custom hours range. It returns only for the `Customized hours` type.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "start_time": {
                                      "type": "string",
                                      "description": "The custom hours start time, in `HH:mm` and `24-hour clock` format.",
                                      "example": "09:00"
                                    },
                                    "end_time": {
                                      "type": "string",
                                      "description": "The custom hours end time, in `HH:mm` and `24-hour clock` format.",
                                      "example": "18:00"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3601` <br>\n Business hour does not exist: $businessHourId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operating_hours:read:admin",
              "contact_center_queue:read:admin",
              "contact_center:read:business_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operating_hours:read:admin",
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:business_hour:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Delete business hours",
        "description": "Delete business hours. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operating_hours:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:business_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "businessHourDelete",
        "parameters": [
          {
            "name": "businessHourId",
            "in": "path",
            "description": "The business hours' ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66ZjSQ7YTOescnINN_4vog"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nBusiness hours deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3612` <br>\n The business hours of account default cannot be deleted. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3601` <br>\n Business hours do not exist: $businessHourId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operating_hours:write:admin",
              "contact_center:delete:business_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operating_hours:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:business_hour:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Update business hours",
        "description": "Update business hours.   \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operating_hours:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:business_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "businessHourUpdate",
        "parameters": [
          {
            "name": "businessHourId",
            "in": "path",
            "description": "The business hours' ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66ZjSQ7YTOescnINN_4vog"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "business_hour_name": {
                    "type": "string",
                    "description": "The business hours' name.",
                    "example": "Default Business hours"
                  },
                  "business_hour_description": {
                    "type": "string",
                    "description": "The business hours' description.",
                    "example": "This is a description."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The business hours' timezone ID.",
                    "example": "America/New_York"
                  },
                  "account_default": {
                    "type": "boolean",
                    "description": "Default business hours for the newly created queue. Only support `true` value.",
                    "example": true
                  },
                  "hours": {
                    "type": "object",
                    "properties": {
                      "hour_type": {
                        "type": "integer",
                        "description": "The type of business hours. \n* `1` &mdash; 24 hours, 7 days a week. \n* `2` &mdash; Custom hours.",
                        "example": 2,
                        "enum": [
                          1,
                          2
                        ]
                      },
                      "custom_hours": {
                        "type": "array",
                        "description": "The custom hours' settings. Required only for the `custom` type.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "day_of_week": {
                              "type": "integer",
                              "description": "The day of the week. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n * `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                              "example": 1,
                              "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                              ]
                            },
                            "custom_hour_type": {
                              "type": "integer",
                              "description": "The type of custom hours. \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                              "example": 2,
                              "enum": [
                                0,
                                1,
                                2
                              ]
                            },
                            "custom_hour_ranges": {
                              "maxItems": 2,
                              "type": "array",
                              "description": "The custom hours' range. Required only for the `specific_Time` type.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "start_time": {
                                    "type": "string",
                                    "description": "The custom hours' start time, in `HH:mm` and `24-hour clock` format.",
                                    "example": "09:00"
                                  },
                                  "end_time": {
                                    "type": "string",
                                    "description": "The custom hours' end time, in `HH:mm` and `24-hour clock` format.",
                                    "example": "18:00"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "Hour items."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nBusiness hour updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3602` <br>\n Timezone does not exist. <br>\n**Error Code:** `3611` <br>\n Can't update default business hours to be non-default. <br>\n**Error Code:** `3608` <br>\n The `end_time` $endTime should not be earlier than the `start_time` $startTime. <br>\n**Error Code:** `300` <br>\n Validation Failed <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3601` <br>\n Business hour does not exist: $businessHourId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operating_hours:write:admin",
              "contact_center:update:business_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operating_hours:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:business_hour:admin"
          ]
        }
      }
    },
    "/contact_center/business_hours/{businessHourId}/flows": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "List the business hours' flows",
        "description": "Show a list of flows using business hours. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:business_hours_flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listBusinessHourFlows",
        "parameters": [
          {
            "name": "businessHourId",
            "in": "path",
            "description": "The business hours' ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66ZjSQ7YTOescnINN_4vog"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nFlows returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "next_page_token",
                    "page_size"
                  ],
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "flows": {
                      "type": "array",
                      "description": "Information about the flows.",
                      "items": {
                        "required": [
                          "flow_id",
                          "flow_name"
                        ],
                        "type": "object",
                        "properties": {
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "psjHGHrHQbaX8Zk7ldc81Q"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "Default Flow"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3601` <br>\n Business hour does not exist: $businessHourId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:read:admin",
              "contact_center:read:business_hours_flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:business_hours_flow:admin"
          ]
        }
      }
    },
    "/contact_center/business_hours/{businessHourId}/queues": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "List the business hours' queues",
        "description": "Show a list of queues using business hours. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:business_hours_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listBusinessHourQueues",
        "parameters": [
          {
            "name": "businessHourId",
            "in": "path",
            "description": "The business hours' ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66ZjSQ7YTOescnINN_4vog"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueues returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "next_page_token",
                    "page_size"
                  ],
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "queues": {
                      "type": "array",
                      "description": "Information about the queues.",
                      "items": {
                        "required": [
                          "cc_queue_id",
                          "queue_id",
                          "queue_name"
                        ],
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The task queue's ID.",
                            "example": "ZWQ33BD1C6E46FFD0D869D32E220D35F4D4",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "xqJE_cgERLyAJHYYL5LLeg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "VoiceQueue"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3601` <br>\n Business hours do not exist: $businessHourId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:business_hours_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:business_hours_queue:admin"
          ]
        }
      }
    },
    "/contact_center/closures": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "List closures",
        "description": "Get a list of closures. Admins can create closures to select. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`,`contact_center_operating_hours:read:admin`\n \n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_closure_hours:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listClosures",
        "parameters": [
          {
            "name": "account_default",
            "in": "query",
            "description": "Default business hours or closures for the newly-created queue.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nClosures returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "next_page_token",
                    "page_size"
                  ],
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "closure_sets": {
                      "type": "array",
                      "description": "Information about the closure.",
                      "items": {
                        "required": [
                          "account_default",
                          "closure_set_id",
                          "closure_set_name",
                          "closures",
                          "flows_count",
                          "queues_count",
                          "timezone"
                        ],
                        "type": "object",
                        "properties": {
                          "closure_set_id": {
                            "type": "string",
                            "description": "The closure set's ID.",
                            "example": "Ixo-Na0bRfCyQ4q2lAryDw"
                          },
                          "closure_set_name": {
                            "type": "string",
                            "description": "The closure set's name.",
                            "example": "Default Closure"
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The closure set's timezone ID.",
                            "example": "America/New_York"
                          },
                          "account_default": {
                            "type": "boolean",
                            "description": "Default closure for the newly-created queue.",
                            "example": true
                          },
                          "queues_count": {
                            "type": "integer",
                            "description": "The number of queues using the closure set.",
                            "example": 1
                          },
                          "flows_count": {
                            "type": "integer",
                            "description": "The number of flows using the closure set.",
                            "example": 1
                          },
                          "closures": {
                            "maxItems": 50,
                            "type": "array",
                            "description": "The closure's details.",
                            "items": {
                              "required": [
                                "closure_hour_type",
                                "closure_name",
                                "end_time",
                                "recurring_frequency",
                                "start_time"
                              ],
                              "type": "object",
                              "properties": {
                                "closure_id": {
                                  "type": "string",
                                  "description": "The closure item's ID.",
                                  "example": "ksbJvJ"
                                },
                                "closure_name": {
                                  "type": "string",
                                  "description": "The closure item's name.",
                                  "example": "New Year"
                                },
                                "closure_hour_type": {
                                  "type": "integer",
                                  "description": "The closure's time type. \n* `1` &mdash; All day. \n* `2` &mdash; Customized time.",
                                  "example": 2,
                                  "enum": [
                                    1,
                                    2
                                  ]
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "The closure's start time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                                  "example": "2023-01-01T00:00:00-04:00"
                                },
                                "end_time": {
                                  "type": "string",
                                  "description": "The closure's end time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                                  "example": "2023-02-01T00:00:00-04:00"
                                },
                                "recurring_frequency": {
                                  "type": "integer",
                                  "description": "The frequency of a closure's recurrence. \n* `0` &mdash; Never. \n* `1` &mdash; Annually. \n* `2` &mdash; Monthly. \n* `3` &mdash; Weekly.",
                                  "example": 2,
                                  "enum": [
                                    0,
                                    1,
                                    2,
                                    3
                                  ]
                                },
                                "recurring_frequency_type": {
                                  "type": "integer",
                                  "description": "The closure time's type of recurrence. This applies to `Annually`, `Monthly` and `Weekly` repeat frequency. It returns only for the not `Never` recurrence type. \n* `1` &mdash; Specific. \n* `2` &mdash; Customized.",
                                  "example": 2,
                                  "enum": [
                                    1,
                                    2
                                  ]
                                },
                                "recurring_month": {
                                  "type": "integer",
                                  "description": "The recurrence month. It returns only for the `Annually` recurrence type. \n* `1` &mdash; January \n* `2` &mdash; February \n* `3` &mdash; March \n* `4` &mdash; April \n* `5` &mdash; May \n* `6` &mdash; June \n* `7` &mdash; July \n* `8` &mdash; August \n* `9` &mdash; September \n* `10` &mdash; October \n* `11` &mdash; November \n* `12` &mdash; December",
                                  "example": 1,
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12
                                  ]
                                },
                                "recurring_week_interval": {
                                  "maximum": 12,
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "The number of weekly recurrences. It returns only for the `Customized` recurrence time types. When it is `Annually/Customized` or `Monthly/Customized` type, the minimum value is `1` and the maximum value is `5`. When it is `Weekly/Customized` type, the minimum value is `1` and the maximum value is `12`.",
                                  "example": 1
                                },
                                "recurring_days_of_week": {
                                  "maxItems": 7,
                                  "type": "array",
                                  "description": "The week days of a recurrence. It returns only for the `Weekly/Customized`, the `Weekly/Specific`, the `Annually/Customized` and the `Monthly/Customized` recurrence time types. When the type is &quot;`Weekly/Customized`&quot;, there may be multiple values. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                                  "items": {
                                    "type": "string",
                                    "example": "1"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center_operating_hours:read:admin",
              "contact_center:read:list_closure_hours:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin",
            "contact_center_operating_hours:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_closure_hours:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Create a closure set",
        "description": "Create a new closure set. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`,`contact_center_operating_hours:write:admin`\n \n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:closure_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "closuresSetCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "closure_set_name",
                  "closures",
                  "timezone"
                ],
                "type": "object",
                "properties": {
                  "closure_set_name": {
                    "type": "string",
                    "description": "The closure set's name.",
                    "example": "Default closure"
                  },
                  "closure_set_description": {
                    "type": "string",
                    "description": "The closure set's description.",
                    "example": "This is a description."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The closure set's timezone ID.",
                    "example": "America/New_York"
                  },
                  "account_default": {
                    "type": "boolean",
                    "description": "Default closure for the newly created queue.",
                    "example": true
                  },
                  "closures": {
                    "maxItems": 50,
                    "type": "array",
                    "description": "The closure's details.",
                    "items": {
                      "required": [
                        "closure_hour_type",
                        "closure_name",
                        "end_time",
                        "recurring_frequency",
                        "start_time"
                      ],
                      "type": "object",
                      "properties": {
                        "closure_name": {
                          "type": "string",
                          "description": "The closure item's name.",
                          "example": "New Year"
                        },
                        "closure_hour_type": {
                          "type": "integer",
                          "description": "The closure's time type. \n* `1` &mdash; All day. \n* `2` &mdash; Customized time.",
                          "example": 2,
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "start_time": {
                          "type": "string",
                          "description": "The closure's start time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                          "example": "2023-01-01T00:00:00-04:00"
                        },
                        "end_time": {
                          "type": "string",
                          "description": "The closure's end time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                          "example": "2023-02-01T00:00:00-04:00"
                        },
                        "recurring_frequency": {
                          "type": "integer",
                          "description": "The frequency of a closure's recurrence. \n * `0` &mdash; Never. \n* `1` &mdash; Annually. \n* `2` &mdash; Monthly. \n* `3` &mdash; Weekly.",
                          "example": 2,
                          "enum": [
                            0,
                            1,
                            2,
                            3
                          ]
                        },
                        "recurring_frequency_type": {
                          "type": "integer",
                          "description": "The closure time's type of recurrence. Applies to `Annually`, `Monthly`, and `Weekly` repeat frequency. Returns only for the not `Never` recurrence type. \n* `1` &mdash; Specific. \n* `2` &mdash; Customized.",
                          "example": 2,
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "recurring_month": {
                          "type": "integer",
                          "description": "The recurrence month. Required only for the `Annually` recurrence type. \n* `1` &mdash; January \n* `2` &mdash; February \n* `3` &mdash; March \n* `4` &mdash; April \n* `5` &mdash; May \n* `6` &mdash; June \n* `7` &mdash; July \n* `8` &mdash; August \n* `9` &mdash; September \n * `10` &mdash; October \n* `11` &mdash; November \n* `12` &mdash; December",
                          "example": 1,
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12
                          ]
                        },
                        "recurring_week_interval": {
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The number of weekly recurrences. Required only for the `Customized` recurrence time types. When the type is `Annually/Customized` or `Monthly/Customized`, the minimum value is `1` and the maximum value is `5`. When the type is `Weekly/Customized`, the minimum value is `1` and the maximum value is `12`.",
                          "example": 1
                        },
                        "recurring_days_of_week": {
                          "maxItems": 7,
                          "type": "array",
                          "description": "The week days of a recurrence. Required only for the `Weekly/Customized`, `Weekly/Specific`, `Annually/Customized`, and `Monthly/Customized` recurrence time types. When the type is &quot;`Weekly/Customized`&quot;, there may be multiple values. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n * `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nClosure set created.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "account_default",
                    "closure_set_description",
                    "closure_set_id",
                    "closure_set_name",
                    "closures",
                    "timezone"
                  ],
                  "type": "object",
                  "properties": {
                    "closure_set_id": {
                      "type": "string",
                      "description": "The closure set's ID.",
                      "example": "Ixo-Na0bRfCyQ4q2lAryDw"
                    },
                    "closure_set_name": {
                      "type": "string",
                      "description": "The closure set's name.",
                      "example": "Default closure"
                    },
                    "closure_set_description": {
                      "type": "string",
                      "description": "The closure set's description.",
                      "example": "This is a description."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The closure set's timezone ID.",
                      "example": "America/New_York"
                    },
                    "account_default": {
                      "type": "boolean",
                      "description": "Default closure for the newly created queue.",
                      "example": true
                    },
                    "closures": {
                      "maxItems": 50,
                      "type": "array",
                      "description": "The closure details.",
                      "items": {
                        "required": [
                          "closure_hour_type",
                          "closure_name",
                          "end_time",
                          "recurring_frequency",
                          "start_time"
                        ],
                        "type": "object",
                        "properties": {
                          "closure_id": {
                            "type": "string",
                            "description": "The closure item's ID.",
                            "example": "ksbJvJ"
                          },
                          "closure_name": {
                            "type": "string",
                            "description": "The closure item's name.",
                            "example": "New Year"
                          },
                          "closure_hour_type": {
                            "type": "integer",
                            "description": "The closure's time type. \n* `1` &mdash; All day. \n* `2` &mdash; Customized time.",
                            "example": 2,
                            "enum": [
                              1,
                              2
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The closure's start time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "example": "2023-01-01T00:00:00-04:00"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The closure's end time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "example": "2023-02-01T00:00:00-04:00"
                          },
                          "recurring_frequency": {
                            "type": "integer",
                            "description": "The frequency of a closure's recurrence. \n * `0` &mdash; Never. \n* `1` &mdash; Annually. \n* `2` &mdash; Monthly. \n* `3` &mdash; Weekly.",
                            "example": 2,
                            "enum": [
                              0,
                              1,
                              2,
                              3
                            ]
                          },
                          "recurring_frequency_type": {
                            "type": "integer",
                            "description": "The closure time's type of recurrence. Applies to `Annually`, `Monthly`, and `Weekly` repeat frequency. Returns only for the not `Never` recurrence type. \n* `1` &mdash; Specific. \n* `2` &mdash; Customized.",
                            "example": 2,
                            "enum": [
                              1,
                              2
                            ]
                          },
                          "recurring_month": {
                            "type": "integer",
                            "description": "The recurrence month. Returns only for the `Annually` recurrence type. \n* `1` &mdash; January \n * `2` &mdash; February \n* `3` &mdash; March \n* `4` &mdash; April \n* `5` &mdash; May \n* `6` &mdash; June \n* `7` &mdash; July \n* `8` &mdash; August \n* `9` &mdash; September \n* `10` &mdash; October \n* `11` &mdash; November \n * `12` &mdash; December",
                            "example": 1,
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12
                            ]
                          },
                          "recurring_week_interval": {
                            "maximum": 12,
                            "minimum": 1,
                            "type": "integer",
                            "description": "The number of weekly recurrences. Returns only for the `Customized` recurrence time types. When the type is `Annually/Customized` or `Monthly/Customized`, the minimum value is `1` and the maximum value is `5`. When it is `Weekly/Customized`, the minimum value is `1` and the maximum value is `12`.",
                            "example": 1
                          },
                          "recurring_days_of_week": {
                            "maxItems": 7,
                            "type": "array",
                            "description": "The week days of a recurrence. Returns only for the `Weekly/Customized`, the `Weekly/Specific`, the `Annually/Customized`, and the `Monthly/Customized` recurrence time types. When the type is &quot;`Weekly/Customized`&quot;, there may be multiple values. \n* `1` &mdash; Monday \n * `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                            "items": {
                              "type": "string",
                              "example": "1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3602` <br>\n Timezone does not exist. <br>\n**Error Code:** `3702` <br>\n The closure name has already been duplicated: $closure_name. <br>\n **Error Code:** `3703` <br>\n The end time should be greater than the start time. <br>\n**Error Code:** `3704` <br>\n The `recurring_frequency_type` should not be empty when the `recurring_frequency` is anything other than `Never`. <br>\n**Error Code:** `3705` <br>\n The `start_time` and `end_time` must be in the same year when the `recurring_frequency` is `Annually`. <br>\n**Error Code:** `3706` <br>\n The `start_time` and `end_time` must be in the same month when the `recurring_frequency` is `Monthly`. <br>\n **Error Code:** `3707` <br>\n The `start_time` and `end_time` must be in the same week when the `recurring_frequency` is `Weekly`. <br>\n**Error Code:** `3708` <br>\n The `recurring_week_interval` should not be empty when the `recurring_frequency_type` type is `Customized`. <br>\n**Error Code:** `3709` <br>\n The `recurring_days_of_week` should not be empty when the `recurring_frequency_type` type is `Customized`. <br>\n**Error Code:** `3710` <br>\n The `recurring_month` should not be empty when the type is `Annually/Customized`. <br>\n**Error Code:** `3711` <br>\n The `recurring_week_interval` should be between `1` and `5` when the `recurring_frequency` type is `Annually` or `Monthly`. <br>\n**Error Code:** `3712` <br>\n The `start_time` and `end_time` must match the `timezone`: $start_time/$end_time. <br>\n**Error Code:** `3603` <br>\n The name already exists. <br>\n**Error Code:** `3714` <br>\n The `recurring_days_of_week` should be between `1` and `7`. <br>\n**Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center_operating_hours:write:admin",
              "contact_center:write:closure_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin",
            "contact_center_operating_hours:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:closure_hour:admin"
          ]
        }
      }
    },
    "/contact_center/closures/{closureSetId}": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Get a closure set",
        "description": "Get information about a closure set.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`,`contact_center_operating_hours:read:admin`\n \n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:closure_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAClosureSet",
        "parameters": [
          {
            "name": "closureSetId",
            "in": "path",
            "description": "The closure set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Ixo-Na0bRfCyQ4q2lAryDw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nClosure set returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "account_default",
                    "closure_set_description",
                    "closure_set_id",
                    "closure_set_name",
                    "closures",
                    "timezone"
                  ],
                  "type": "object",
                  "properties": {
                    "closure_set_id": {
                      "type": "string",
                      "description": "The closure set's ID.",
                      "example": "Ixo-Na0bRfCyQ4q2lAryDw"
                    },
                    "closure_set_name": {
                      "type": "string",
                      "description": "The closure set's name.",
                      "example": "Default closure"
                    },
                    "closure_set_description": {
                      "type": "string",
                      "description": "The closure set's description.",
                      "example": "This is a description."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The closure set's timezone ID.",
                      "example": "America/New_York"
                    },
                    "account_default": {
                      "type": "boolean",
                      "description": "Default closure for the newly-created queue.",
                      "example": true
                    },
                    "closures": {
                      "maxItems": 50,
                      "type": "array",
                      "description": "The closure's details.",
                      "items": {
                        "required": [
                          "closure_hour_type",
                          "closure_name",
                          "end_time",
                          "recurring_frequency",
                          "start_time"
                        ],
                        "type": "object",
                        "properties": {
                          "closure_id": {
                            "type": "string",
                            "description": "The closure item's ID.",
                            "example": "ksbJvJ"
                          },
                          "closure_name": {
                            "type": "string",
                            "description": "The closure item's name.",
                            "example": "New Year"
                          },
                          "closure_hour_type": {
                            "type": "integer",
                            "description": "The closure's time type. \n* `1` &mdash; All day. \n* `2` &mdash; Customized time.",
                            "example": 2,
                            "enum": [
                              1,
                              2
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The closure's start time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "example": "2023-01-01T00:00:00-04:00"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The closure's end time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "example": "2023-02-01T00:00:00-04:00"
                          },
                          "recurring_frequency": {
                            "type": "integer",
                            "description": "The frequency of a closure's recurrence. \n * `0` &mdash; Never. \n* `1` &mdash; Annually. \n* `2` &mdash; Monthly. \n* `3` &mdash; Weekly.",
                            "example": 2,
                            "enum": [
                              0,
                              1,
                              2,
                              3
                            ]
                          },
                          "recurring_frequency_type": {
                            "type": "integer",
                            "description": "The closure time's recurrence type. This applies to `Annually`, `Monthly` and `Weekly` recurrence frequency. It returns for recurrence types that are not `Never`. \n* `1` &mdash; Specific. \n* `2` &mdash; Customized.",
                            "example": 2,
                            "enum": [
                              1,
                              2
                            ]
                          },
                          "recurring_month": {
                            "type": "integer",
                            "description": "The recurrence month. It returns only for the `Annually` recurrence type. \n* `1` &mdash; January \n* `2` &mdash; February \n* `3` &mdash; March \n* `4` &mdash; April \n* `5` &mdash; May \n* `6` &mdash; June \n* `7` &mdash; July \n* `8` &mdash; August \n* `9` &mdash; September \n* `10` &mdash; October \n* `11` &mdash; November \n* `12` &mdash; December",
                            "example": 1,
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12
                            ]
                          },
                          "recurring_week_interval": {
                            "maximum": 12,
                            "minimum": 1,
                            "type": "integer",
                            "description": "The number of weekly recurrences. It returns only for the `Customized` recurrence time types. When the recurrence type is either `Annually/Customized` or `Monthly/Customized` type, the minimum value is `1` and the maximum value is `5`. When it is `Weekly/Customized` type, the minimum value is `1` and the maximum value is `12`.",
                            "example": 1
                          },
                          "recurring_days_of_week": {
                            "maxItems": 7,
                            "type": "array",
                            "description": "The recurrence's week days. It returns only for the `Weekly/Customized`, the `Weekly/Specific`, the `Annually/Customized`, and the `Monthly/Customized` recurrence time types. When the recurrence type is &quot;`Weekly/Customized`&quot;, there may be multiple values. \n* `1` &mdash; Monday \n * `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                            "items": {
                              "type": "string",
                              "example": "1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3701` <br>\n Closures set does not exist: $closureId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center_operating_hours:read:admin",
              "contact_center:read:closure_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin",
            "contact_center_operating_hours:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:closure_hour:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Delete a closure set",
        "description": "Delete closure sets. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operating_hours:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:closure_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "closureSetDelete",
        "parameters": [
          {
            "name": "closureSetId",
            "in": "path",
            "description": "The closure set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Ixo-Na0bRfCyQ4q2lAryDw"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nClosure sets deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3713` <br>\n The closures of account default cannot be deleted. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3701` <br>\n Closure set does not exist: $closureSetId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operating_hours:write:admin",
              "contact_center:delete:closure_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operating_hours:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:closure_hour:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "Update a closure set",
        "description": "Update information about a closure set.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operating_hours:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:closure_hour:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "closureSetUpdate",
        "parameters": [
          {
            "name": "closureSetId",
            "in": "path",
            "description": "The closure set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Ixo-Na0bRfCyQ4q2lAryDw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "closure_set_name",
                  "closures",
                  "timezone"
                ],
                "type": "object",
                "properties": {
                  "closure_set_name": {
                    "type": "string",
                    "description": "The closure set's name.",
                    "example": "Default closure"
                  },
                  "closure_set_description": {
                    "type": "string",
                    "description": "The closure set's description.",
                    "example": "This is a description."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The closure set's timezone ID.",
                    "example": "America/New_York"
                  },
                  "account_default": {
                    "type": "boolean",
                    "description": "Default closure for the newly-created queue.",
                    "example": true
                  },
                  "closures": {
                    "maxItems": 50,
                    "type": "array",
                    "description": "The closure set's details.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "closure_id": {
                          "type": "string",
                          "description": "The closure item's ID.",
                          "example": "ksbJvJ"
                        },
                        "closure_name": {
                          "type": "string",
                          "description": "The closure item's name.",
                          "example": "New Year"
                        },
                        "closure_hour_type": {
                          "type": "integer",
                          "description": "The closure's time type. \n* `1` &mdash; All day. \n* `2` &mdash; Customized time.",
                          "example": 2,
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "start_time": {
                          "type": "string",
                          "description": "The closure's start time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                          "example": "2023-01-01T00:00:00-04:00"
                        },
                        "end_time": {
                          "type": "string",
                          "description": "The closure's end time and date in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                          "format": "datetime",
                          "example": "2023-02-01T00:00:00-04:00"
                        },
                        "recurring_frequency": {
                          "type": "integer",
                          "description": "The frequency of a closure's recurrence. * `0` &mdash; Never. * `1` &mdash; Annually. * `2` &mdash; Monthly. * `3` &mdash; Weekly.",
                          "example": 2,
                          "enum": [
                            0,
                            1,
                            2,
                            3
                          ]
                        },
                        "recurring_frequency_type": {
                          "type": "integer",
                          "description": "The closure time's type of recurrence. Applies to `Annually`, `Monthly`, and `Weekly` repeat frequency. Returns only for the not `Never` recurrence type. * `1` &mdash; Specific. * `2` &mdash; Customized.",
                          "example": 2,
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "recurring_month": {
                          "type": "integer",
                          "description": "The recurrence month. Required only for the `Annually` recurrence type. * `1` &mdash; January * `2` &mdash; February * `3` &mdash; March * `4` &mdash; April * `5` &mdash; May * `6` &mdash; June * `7` &mdash; July * `8` &mdash; August * `9` &mdash; September * `10` &mdash; October * `11` &mdash; November * `12` &mdash; December",
                          "example": 1,
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12
                          ]
                        },
                        "recurring_week_interval": {
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The number of weekly recurrences. Required only for the `Customized` recurrence time types. When the type is `Annually/Customized` or `Monthly/Customized`, the minimum value is `1` and the maximum value is `5`. When the type is `Weekly/Customized`, the minimum value is `1` and the maximum value is `12`.",
                          "example": 1
                        },
                        "recurring_days_of_week": {
                          "maxItems": 7,
                          "type": "array",
                          "description": "The recurrence's week days. Required only for the `Weekly/Customized`, the `Weekly/Specific`, the `Annually/Customized`, and the `Monthly/Customized` recurrence time types. When the type is &quot;`Weekly/Customized`&quot;, there may be multiple values. \n* `1` &mdash; Monday \n* `2` &mdash; Tuesday \n* `3` &mdash; Wednesday \n* `4` &mdash; Thursday \n* `5` &mdash; Friday \n* `6` &mdash; Saturday \n* `7` &mdash; Sunday",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "to_delete": {
                          "type": "boolean",
                          "description": "Whether to delete this closure item.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nClosure set updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3602` <br>\n Timezone does not exist. <br>\n**Error Code:** `3702` <br>\n The closure name has already been duplicated: $closure_name. <br>\n **Error Code:** `3703` <br>\n The end time should be greater than the start time. <br>\n**Error Code:** `3704` <br>\n The `recurring_frequency_type` should not be empty when the `recurring_frequency` is not `Never`. <br>\n **Error Code:** `3705` <br>\n The `start_time` and `end_time` must be in the same year when the `recurring_frequency` is `Annually`. <br>\n **Error Code:** `3706` <br>\n The `start_time` and `end_time` must be in the same month when the `recurring_frequency` is `Monthly`. <br>\n **Error Code:** `3707` <br>\n The \"start_time\" and \"end_time\" must be in the same week when the \"recurring_frequency\" is the \"Weekly\". <br>\n**Error Code:** `3708` <br>\n The `recurring_week_interval` should not be empty when the `recurring_frequency_type` type is `Customized`. <br>\n**Error Code:** `3709` <br>\n The `recurring_days_of_week` should not be empty when the `recurring_frequency_type` type is `Customized`. <br>\n**Error Code:** `3710` <br>\n The `recurring_month` should not be empty when the type is `Annually/Customized`. <br>\n**Error Code:** `3711` <br>\n The `recurring_week_interval` should between `1` and `5` when the `recurring_frequency` type is `Annually` or `Monthly`. <br>\n**Error Code:** `3712` <br>\n The `start_time` and `end_time` must match the `timezone`: $start_time/$end_time. <br>\n**Error Code:** `3603` <br>\n The name already exists. <br>\n**Error Code:** `3901` <br>\n The closure id has already been duplicated: $closure_id. <br>\n**Error Code:** `3902` <br>\n Closure does not exist: $closure_id. <br>\n**Error Code:** `3903` <br>\n The `hour_type` field cannot be empty when the `closure_id` field is empty. <br>\n**Error Code:** `3904` <br>\n The `closure_name` field cannot be empty when the `closure_id` field is empty. <br>\n**Error Code:** `3905` <br>\n The `start_time` field cannot be empty when the `closure_id` field is empty. <br>\n**Error Code:** `3906` <br>\n The `end_time` field cannot be empty when the `closure_id` field is empty. <br>\n**Error Code:** `3907` <br>\n The `recurring_frequency` field cannot be empty when the `closure_id` field is empty. <br>\n**Error Code:** `3908` <br>\n Every closure set has at least one closure item. <br>\n**Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3701` <br>\n Closure set does not exist: $closureSetId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operating_hours:write:admin",
              "contact_center:update:closure_hour:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operating_hours:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:closure_hour:admin"
          ]
        }
      }
    },
    "/contact_center/closures/{closureSetId}/flows": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "List the closures' flows",
        "description": "Show a list of flows using closures. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_flow:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:clousre_hour_flow:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listClosureSetFlows",
        "parameters": [
          {
            "name": "closureSetId",
            "in": "path",
            "description": "The closure set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Ixo-Na0bRfCyQ4q2lAryDw"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nFlows returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "next_page_token",
                    "page_size"
                  ],
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "flows": {
                      "type": "array",
                      "description": "Information about the flows.",
                      "items": {
                        "required": [
                          "flow_id",
                          "flow_name"
                        ],
                        "type": "object",
                        "properties": {
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "psjHGHrHQbaX8Zk7ldc81Q"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "Default Flow"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3701` <br>\n Closures set does not exist: $closureSetId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_flow:read:admin",
              "contact_center:read:clousre_hour_flow:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_flow:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:clousre_hour_flow:admin"
          ]
        }
      }
    },
    "/contact_center/closures/{closureSetId}/queues": {
      "get": {
        "tags": [
          "Operating Hours"
        ],
        "summary": "List the closures' queues",
        "description": "Show a list of queues using closures. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:closure_hour_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listClosureSetQueues",
        "parameters": [
          {
            "name": "closureSetId",
            "in": "path",
            "description": "The closure set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Ixo-Na0bRfCyQ4q2lAryDw"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueues returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "next_page_token",
                    "page_size"
                  ],
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "queues": {
                      "type": "array",
                      "description": "Information about the queues.",
                      "items": {
                        "required": [
                          "cc_queue_id",
                          "queue_id",
                          "queue_name"
                        ],
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The task queue's ID.",
                            "example": "ZWQ33BD1C6E46FFD0D869D32E220D35F4D4",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "xqJE_cgERLyAJHYYL5LLeg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "VoiceQueue"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3701` <br>\n Closures set does not exist: $closureSetId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:closure_hour_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:closure_hour_queue:admin"
          ]
        }
      }
    },
    "/contact_center/queue_templates": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "List queue templates",
        "description": "Retrieve a list of queue templates.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Listqueuetemplates",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "The template's channel.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "messaging",
                "email",
                "video"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Queue templates by page.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "3Y42JUhtdR7yav3CwXpQxzCA8b8LjPGySQ2"
                    },
                    "page_size": {
                      "type": "number",
                      "description": "The number of records returned within a single API call.",
                      "example": 5
                    },
                    "total_records": {
                      "type": "number",
                      "description": "The total number of all the records available across pages.",
                      "example": 5
                    },
                    "queue_templates": {
                      "type": "array",
                      "description": "Information about the queue templates.",
                      "items": {
                        "required": [
                          "channel",
                          "last_modified_time",
                          "modified_by",
                          "template_description",
                          "template_id",
                          "template_name",
                          "template_need_attention",
                          "template_status",
                          "template_type"
                        ],
                        "type": "object",
                        "properties": {
                          "template_id": {
                            "type": "string",
                            "description": "Template ID.",
                            "example": "cIInrJZUQWy12qoLPASXLw"
                          },
                          "template_name": {
                            "type": "string",
                            "description": "Template name.",
                            "example": "voice add template 9"
                          },
                          "template_description": {
                            "type": "string",
                            "description": "Template description.",
                            "example": "test voice add template 9"
                          },
                          "channel": {
                            "type": "string",
                            "description": "Template channel. ",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "messaging",
                              "email",
                              "video"
                            ]
                          },
                          "template_type": {
                            "type": "string",
                            "description": "Template type.",
                            "example": "add",
                            "enum": [
                              "add",
                              "update"
                            ]
                          },
                          "template_status": {
                            "type": "string",
                            "description": "Template status.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          },
                          "template_need_attention": {
                            "type": "boolean",
                            "description": "Whether the template needs attention or not.",
                            "example": false
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of user who last modified the asset.",
                            "example": "CXF7npCJTQ2i3blpn9tSCw"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the asset was last modified.",
                            "example": "2025-05-14T23:30:38.000+00:00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:queue:admin"
          ]
        }
      }
    },
    "/contact_center/queues": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "List queues",
        "description": "Get information about all available queues. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_queues:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listQueues",
        "parameters": [
          {
            "name": "channel_type",
            "in": "query",
            "description": "The task queue's channel types.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "chat",
                "sms",
                "video",
                "in_app_chat",
                "messaging"
              ]
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The Contact Center queue's channel.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueues list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "queues": {
                      "type": "array",
                      "description": "Information about the task queues.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The task queue's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "xqJE_cgERLyAJHYYL5LLeg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The task queue's name.",
                            "example": "queue_661c6e4b-89fc-4b0d-9978-c7394725462"
                          },
                          "agents_count": {
                            "type": "integer",
                            "description": "The number of assigned agents.",
                            "example": 1
                          },
                          "supervisors_count": {
                            "type": "integer",
                            "description": "The number of assigned supervisors.",
                            "example": 1
                          },
                          "channel_types": {
                            "type": "array",
                            "description": "The task queue's channel types.",
                            "deprecated": true,
                            "items": {
                              "type": "string",
                              "example": "voice",
                              "deprecated": true,
                              "enum": [
                                "voice",
                                "chat",
                                "sms",
                                "video",
                                "in_app_chat",
                                "messaging"
                              ]
                            }
                          },
                          "channel": {
                            "type": "string",
                            "description": "The Contact Center queue's channel.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of user who last modified the asset.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the asset was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:list_queues:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_queues:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Queues"
        ],
        "summary": "Create a queue",
        "description": "Create an agent [queue](https://support.zoom.us/hc/en-us/articles/4423986595085) to determine which agents calls are routed to. Queues also link to an existing routing profile to determine how calls are routed. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "queueCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "queue_name": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The task queue's name.",
                    "example": "queue_661c6e4b-89fc-4b0d-9978-c7394725462"
                  },
                  "queue_description": {
                    "maxLength": 256,
                    "type": "string",
                    "description": "The task queue's description.",
                    "example": "This is a task queue."
                  },
                  "channel_types": {
                    "type": "array",
                    "description": "The task queue's channel types.",
                    "deprecated": true,
                    "items": {
                      "type": "string",
                      "example": "voice",
                      "deprecated": true,
                      "enum": [
                        "voice",
                        "chat",
                        "sms",
                        "video",
                        "in_app_chat",
                        "messaging"
                      ]
                    }
                  },
                  "channel": {
                    "type": "string",
                    "description": "The Contact Center queue's channel.",
                    "example": "voice",
                    "enum": [
                      "voice",
                      "video",
                      "messaging",
                      "email"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nQueue created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "queue_id": {
                      "type": "string",
                      "description": "The task queue's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ",
                      "deprecated": true
                    },
                    "cc_queue_id": {
                      "type": "string",
                      "description": "The Contact Center queue's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "queue_name": {
                      "type": "string",
                      "description": "The task queue's name.",
                      "example": "queue_661c6e4b-89fc-4b0d-9978-c7394725462"
                    },
                    "queue_description": {
                      "type": "string",
                      "description": "The task queue's description.",
                      "example": "This is a task queue."
                    },
                    "channel_types": {
                      "type": "array",
                      "description": "The task queue's channel types.",
                      "deprecated": true,
                      "items": {
                        "type": "string",
                        "example": "voice",
                        "deprecated": true,
                        "enum": [
                          "voice",
                          "chat",
                          "sms",
                          "video",
                          "in_app_chat",
                          "messaging"
                        ]
                      }
                    },
                    "channel": {
                      "type": "string",
                      "description": "The Contact Center queue's channel.",
                      "example": "voice",
                      "enum": [
                        "voice",
                        "video",
                        "messaging",
                        "email"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:write:queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:queue:admin"
          ]
        }
      }
    },
    "/contact_center/queues/batch": {
      "post": {
        "tags": [
          "Queues"
        ],
        "summary": "Batch create queues with a template",
        "description": "Create bulk of contact center queues with templateId.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Batchcreatequeueswithatemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template_id": {
                    "type": "string",
                    "description": "The template ID",
                    "example": "urxORBoRRDCtvCT7xE5K9g"
                  },
                  "queues": {
                    "type": "array",
                    "description": "List of queues need to be created.",
                    "items": {
                      "required": [
                        "queue_description",
                        "queue_name"
                      ],
                      "type": "object",
                      "properties": {
                        "queue_name": {
                          "type": "string",
                          "description": "The queue name.",
                          "example": "voice queue 600"
                        },
                        "queue_description": {
                          "type": "string",
                          "description": "The queue description.",
                          "example": "test voice queue 600"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "List of queues created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "root",
                    "required": [
                      "cc_queue_id",
                      "channel",
                      "queue_description",
                      "queue_name"
                    ],
                    "type": "object",
                    "properties": {
                      "cc_queue_id": {
                        "type": "string",
                        "description": "The Contact Center queue's ID.",
                        "example": "GaMccDOOTvqV_bfmWqRVxA"
                      },
                      "queue_name": {
                        "type": "string",
                        "description": "The task queue's name.",
                        "example": "voice queue 200"
                      },
                      "queue_description": {
                        "type": "string",
                        "description": "The task queue's description.",
                        "example": "test voice queue 200"
                      },
                      "channel": {
                        "type": "string",
                        "description": "The Contact Center queue's channel.",
                        "example": "voice"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1213` <br>\n Queue template does not exist: {templateId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:write:queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:queue:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Queues"
        ],
        "summary": "Batch delete queues",
        "description": "Delete bulk of Contact Center queues.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Batchdeletequeues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cc_queue_ids": {
                    "type": "array",
                    "description": "IDs of the queues to be deleted.",
                    "items": {
                      "type": "string",
                      "description": "ID of the queue to be deleted.",
                      "example": "0HlBusg3QpqHGlGnaHJgOw"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Queues deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: {quueId}. <br>\n"
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "Get a queue",
        "description": "Get information about a queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAQueue",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueue returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "queue_id": {
                      "type": "string",
                      "description": "The task queue's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ",
                      "deprecated": true
                    },
                    "cc_queue_id": {
                      "type": "string",
                      "description": "The Contact Center queue's ID.",
                      "example": "xqJE_cgERLyAJHYYL5LLeg"
                    },
                    "queue_name": {
                      "type": "string",
                      "description": "The task queue's name.",
                      "example": "queue_661c6e4b-89fc-4b0d-9978-c7394725462"
                    },
                    "queue_description": {
                      "type": "string",
                      "description": "The task queue's description.",
                      "example": "This is a task queue."
                    },
                    "dispositions_count": {
                      "type": "integer",
                      "description": "The number of dispositions.",
                      "example": 1
                    },
                    "disposition_sets_count": {
                      "type": "integer",
                      "description": "The number of disposition sets.",
                      "example": 1
                    },
                    "channel_types": {
                      "type": "array",
                      "description": "The task queue's channel types.",
                      "deprecated": true,
                      "items": {
                        "type": "string",
                        "example": "voice",
                        "deprecated": true,
                        "enum": [
                          "voice",
                          "chat",
                          "sms",
                          "video",
                          "in_app_chat",
                          "messaging"
                        ]
                      }
                    },
                    "channel": {
                      "type": "string",
                      "description": "The Contact Center queue's channel.",
                      "example": "voice",
                      "enum": [
                        "voice",
                        "video",
                        "messaging",
                        "email"
                      ]
                    },
                    "max_wait_time": {
                      "type": "integer",
                      "description": "The task queue's maximum wait time, in seconds.",
                      "example": 50
                    },
                    "wrap_up_time": {
                      "type": "integer",
                      "description": "The task queue's wrap up time, in seconds.",
                      "example": 50
                    },
                    "max_engagement_in_queue": {
                      "maximum": 3000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The task queue's maximum engagement in queue value.",
                      "example": 50
                    },
                    "short_abandon": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether the **Enable short abandon** setting is enabled.",
                          "example": false
                        },
                        "threshold": {
                          "type": "integer",
                          "description": "The task queue's short abandon threshold, in seconds.",
                          "example": 50
                        }
                      },
                      "description": "Information about the task queue's [**Short Abandon**](https://support.zoom.us/hc/en-us/articles/4469989300493-Changing-queue-settings#:~:text=for%20this%20queue.-,Short%20Abandon,-(only%20available%20if) settings. This setting is only available if the queue's channel type is a Zoom Room, voice, or video."
                    },
                    "distribution_type": {
                      "type": "integer",
                      "description": "Use this option to distribute incoming engagements.",
                      "example": 1,
                      "enum": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ]
                    },
                    "distribution_duration_in_seconds": {
                      "type": "integer",
                      "description": "The notify duration for each queue user, in seconds.",
                      "example": 30
                    },
                    "connecting_media_id": {
                      "type": "string",
                      "description": "Media ID to use while users are being connected.\n Channel type: voice.",
                      "example": "connectingAudioMp3"
                    },
                    "connecting_media_name": {
                      "type": "string",
                      "description": "File name of the media in use while consumers are being connected.\nChannel type: voice.",
                      "example": "Connecting Audio"
                    },
                    "transferring_media_id": {
                      "type": "string",
                      "description": "Media ID to use while users are being transferred.\n Channel type: voice.",
                      "example": "transferringAudioMp3"
                    },
                    "transferring_media_name": {
                      "type": "string",
                      "description": "File name of the media to use while users are being transferred.\nChannel type: voice.",
                      "example": "Transferring Audio"
                    },
                    "holding_media_id": {
                      "type": "string",
                      "description": "Media ID to use while users are on hold.\nChannel type: voice.",
                      "example": "holdingAudioMp3"
                    },
                    "holding_media_name": {
                      "type": "string",
                      "description": "File name of the media to use while users are on hold.\nChannel type: voice.",
                      "example": "Holding Audio"
                    },
                    "waiting_room_name": {
                      "type": "string",
                      "description": "Name of the user's waiting room.\nChannel type: video.",
                      "example": "User Waiting Room"
                    },
                    "waiting_room_id": {
                      "type": "string",
                      "description": "ID of the waiting room for users.\nChannel type: video.",
                      "example": "vPtSZOzBSLWMiorssYWTZw"
                    },
                    "message_accept": {
                      "type": "string",
                      "description": "Option to accept a message manually or automatically.\n Channel types: chat, SMS.",
                      "example": "manual",
                      "enum": [
                        "manual",
                        "auto"
                      ]
                    },
                    "wrap_up_expiration": {
                      "type": "boolean",
                      "description": "Auto-close engagements at the end of wrap-up duration.\n Channel type: voice, video.",
                      "example": true
                    },
                    "overflow_to_goodbye_message": {
                      "type": "boolean",
                      "description": "Reply goodbye message, then disconnect.",
                      "example": true
                    },
                    "overflow_to_queue_id": {
                      "type": "string",
                      "description": "The queue ID to receive the overflow.",
                      "example": "m8IhNvUyTUmx7Jm8h5ZvLQ",
                      "deprecated": true
                    },
                    "overflow_to_cc_queue_id": {
                      "type": "string",
                      "description": "The Contact Center queue ID to receive the overflow.\n \n Only one of these overflow fields can be updated each time, either `overflow_to_goodbye_message`, `overflow_to_cc_queue_id`, `overflow_to_flow_id`, or `overflow_to_inbox_id`. Updating an overflow field will clear out the other overflow fields.",
                      "example": "m8IhNvUyTUmx7Jm8h5ZvLQ"
                    },
                    "overflow_to_flow_id": {
                      "type": "string",
                      "description": "The flow ID to receive the overflow.",
                      "example": "psjHGHrHQbaX8Zk7ldc81Q"
                    },
                    "overflow_to_inbox_id": {
                      "type": "string",
                      "description": "The voicemail inbox ID to receive the overflow.",
                      "example": "cMH8RJA0QsyJBCWIFbWfBQ"
                    },
                    "auto_close_message": {
                      "type": "string",
                      "description": "Auto-closed message to users for web chats.",
                      "example": "This chat has been auto-closed due to inactivity.",
                      "deprecated": true
                    },
                    "auto_close_message_enabled": {
                      "type": "boolean",
                      "description": "Send an auto-closed message for web chats.\nChannel type: chat.",
                      "example": true
                    },
                    "auto_close_timeout": {
                      "type": "integer",
                      "description": "How long, in minutes, before the chat is auto-closed.",
                      "example": 10
                    },
                    "auto_close_alert_message": {
                      "type": "string",
                      "description": "An alert message to web-chat users before auto-closing.",
                      "example": "Chat will auto-close soon if you don't reply",
                      "deprecated": true
                    },
                    "auto_close_alert_message_enabled": {
                      "type": "boolean",
                      "description": "Send an alert message before auto-closing web chats.\n Channel type: chat.",
                      "example": true
                    },
                    "auto_close_alert_message_time": {
                      "type": "integer",
                      "description": "How long, in minutes, before a warning is sent to the user.",
                      "example": 10
                    },
                    "recording_storage_location": {
                      "type": "string",
                      "description": "Determine where to store the recording.\nChannel types: voice, video.",
                      "example": "us",
                      "enum": [
                        "us - United States",
                        "au - Australia",
                        "br - Brazil",
                        "ca - Canada",
                        "de - Germany",
                        "jp - Japan",
                        "sg - Singapore"
                      ]
                    },
                    "service_level_threshold_in_seconds": {
                      "maximum": 600,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Agents' first message speed for all engagements.",
                      "example": 15
                    },
                    "service_level_exclude_short_abandoned_calls": {
                      "type": "boolean",
                      "description": "Choose to include short abandoned calls in service level metrics.\nChannel types: voice, video.",
                      "example": true
                    },
                    "service_level_exclude_long_abandoned_calls": {
                      "type": "boolean",
                      "description": "Choose to include long abandoned calls in service level metrics.\nChannel types: voice, video.",
                      "example": true
                    },
                    "service_level_exclude_abandoned_quit_engagements": {
                      "type": "boolean",
                      "description": "Choose to include quit engagements in service level metrics.\nChannel types: chat, in_app_chat, sms",
                      "example": true
                    },
                    "service_level_target_in_percentage": {
                      "maximum": 100,
                      "minimum": 0,
                      "type": "integer",
                      "description": "The service-level target as the benchmark to refer to in reports.",
                      "example": 80
                    },
                    "agent_routing_profile_id": {
                      "type": "string",
                      "description": "The queue's agent routing profile ID.",
                      "example": "fgjdkhgfieryt7465435kjhdkhg"
                    },
                    "agent_routing_profile_name": {
                      "type": "string",
                      "description": "The queue's agent routing profile name.",
                      "example": "My agent routing profile"
                    },
                    "caller_ids": {
                      "type": "array",
                      "description": "The queue's Caller ID list. When the voice queue is configured with caller ID(s), the list will populate with data. For all other queue types, an empty list will be returned.",
                      "items": {
                        "type": "string",
                        "description": "Caller ID number, in E.164 format.",
                        "example": "+14155552671"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:queue:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Queues"
        ],
        "summary": "Delete a queue",
        "description": "Delete a specified queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "queueDelete",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Queues"
        ],
        "summary": "Update a queue",
        "description": "Update a queue's description or agent list.   \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "queueUpdate",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the old task queue's ID and the new Contact Center queue's ID. Since the task queue ID will be deprecated in the future, change to the Contact Center queue's ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "queue_name": {
                    "maxLength": 36,
                    "type": "string",
                    "description": "The task queue's name.",
                    "example": "queue_661c6e4b-89fc-4b0d-9978-c7394725462"
                  },
                  "queue_description": {
                    "maxLength": 256,
                    "type": "string",
                    "description": "The task queue's description.",
                    "example": "This is a queue."
                  },
                  "max_wait_time": {
                    "type": "integer",
                    "description": "The task queue's maximum wait time, in seconds.",
                    "example": 50
                  },
                  "wrap_up_time": {
                    "type": "integer",
                    "description": "The task queue's wrap up time, in seconds.",
                    "example": 50
                  },
                  "max_engagement_in_queue": {
                    "type": "integer",
                    "description": "The task queue's max engagement in queue. Value must be between 1 and 3000.",
                    "example": 50
                  },
                  "short_abandon": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Whether to enable the **Short Abandon** setting is enabled.",
                        "example": false
                      },
                      "threshold": {
                        "type": "integer",
                        "description": "The task queue's **Short Abandon** threshold, in seconds.",
                        "example": 50
                      }
                    },
                    "description": "Information about the task queue's [**Short Abandon**](https://support.zoom.us/hc/en-us/articles/4469989300493-Changing-queue-settings#:~:text=for%20this%20queue.-,Short%20Abandon,-(only%20available%20if) settings. This setting is only available if the queue's channel type is a Zoom Room, voice, or video."
                  },
                  "channel_types": {
                    "type": "array",
                    "description": "The task queue's channel types.",
                    "deprecated": true,
                    "items": {
                      "type": "string",
                      "example": "voice",
                      "deprecated": true,
                      "enum": [
                        "voice",
                        "chat",
                        "sms",
                        "video",
                        "in_app_chat",
                        "messaging"
                      ]
                    }
                  },
                  "channel": {
                    "type": "string",
                    "description": "The Contact Center queue's channel.",
                    "example": "voice",
                    "enum": [
                      "voice",
                      "video",
                      "messaging",
                      "email"
                    ]
                  },
                  "distribution_type": {
                    "type": "integer",
                    "description": "Distribute incoming engagements.\nAllowed: \n- 0 - Longest Idle. This value is only supported if the channel types contain voice or video.\n- 1 - Sequential. This value is only supported if the channel types contain voice or video.\n- 2 - Rotating.This value is only supported if the channel types contain voice or video.\n- 3 - Simultaneous. This value is only supported if the channel types contain voice or video.\n- 4 - Most Available This value is only supported if the channel types contain chat or sms.\n- 5 - Manual. This value is only supported if the channel types contain video.\n",
                    "example": 1,
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "distribution_duration_in_seconds": {
                    "type": "integer",
                    "description": "The notify duration for each queue user, in second.",
                    "example": 30
                  },
                  "connecting_media_id": {
                    "type": "string",
                    "description": "Media ID to use while users are being connected.\n Channel type: voice.",
                    "example": "connectingAudioMp3",
                    "default": "Passing an empty string will set this option to the default media."
                  },
                  "transferring_media_id": {
                    "type": "string",
                    "description": "Media ID to use while users are being transferred.\n Channel type: voice.",
                    "example": "transferringAudioMp3",
                    "default": "Passing an empty string will set this option to the default media."
                  },
                  "holding_media_id": {
                    "type": "string",
                    "description": "Media ID to use while users are on hold.\nChannel type: voice.",
                    "example": "holdingAudioMp3",
                    "default": "Passing an empty string will set this option to the default media."
                  },
                  "waiting_room_id": {
                    "type": "string",
                    "description": "The users' waiting room ID.\nChannel type: video.",
                    "example": "vPtSZOzBSLWMiorssYWTZw"
                  },
                  "message_accept": {
                    "type": "string",
                    "description": "Option to accept a message manually or automatically.\n Channel types: chat, SMS.",
                    "example": "manual",
                    "enum": [
                      "manual",
                      "auto"
                    ]
                  },
                  "wrap_up_expiration": {
                    "type": "boolean",
                    "description": "Auto-close engagements at the end of wrap-up duration.\n Channel types: voice, video.",
                    "example": true
                  },
                  "overflow_to_goodbye_message": {
                    "type": "boolean",
                    "description": "Reply goodbye message, then disconnect.\n\n Only one of these overflow fields can be updated each time, `overflow_to_goodbye_message`, `overflow_to_queue_id`, `overflow_to_flow_id`, or `overflow_to_inbox_id`. Updating an overflow field will clear out the other overflow fields.",
                    "example": true
                  },
                  "overflow_to_queue_id": {
                    "type": "string",
                    "description": "The queue ID to receive the overflow.\n\n Only one of these overflow fields can be updated each time: `overflow_to_goodbye_message`, `overflow_to_queue_id`, `overflow_to_flow_id`, `overflow_to_inbox_id`. Updating an overflow field will clear out the other overflow fields.",
                    "example": "m8IhNvUyTUmx7Jm8h5ZvLQ",
                    "deprecated": true
                  },
                  "overflow_to_cc_queue_id": {
                    "type": "string",
                    "description": "The Contact Center queue ID to receive the overflow.\n \n Only one of these overflow fields can be updated each time, `overflow_to_goodbye_message`, `overflow_to_cc_queue_id`, `overflow_to_flow_id`, or `overflow_to_inbox_id`. Updating an overflow field will clear out the other overflow fields.",
                    "example": "m8IhNvUyTUmx7Jm8h5ZvLQ"
                  },
                  "overflow_to_flow_id": {
                    "type": "string",
                    "description": "The flow ID to receive the overflow.\n\n Only one of these overflow fields can be updated each time, `overflow_to_goodbye_message`, `overflow_to_queue_id`, `overflow_to_flow_id`, or `overflow_to_inbox_id`. Updating an overflow field will clear out the other overflow fields.",
                    "example": "psjHGHrHQbaX8Zk7ldc81Q"
                  },
                  "overflow_to_inbox_id": {
                    "type": "string",
                    "description": "The voicemail inbox ID to receive the overflow.\n\n Only one of these overflow fields can be updated each time, `overflow_to_goodbye_message`, `overflow_to_queue_id`, `overflow_to_flow_id`, or `overflow_to_inbox_id`. Updating an overflow field will clear out the other overflow fields.",
                    "example": "cMH8RJA0QsyJBCWIFbWfBQ"
                  },
                  "auto_close_message": {
                    "type": "string",
                    "description": "Auto-closed message to web-chat users.",
                    "example": "This chat has been auto-closed due to inactivity."
                  },
                  "auto_close_message_enabled": {
                    "type": "boolean",
                    "description": "Send an auto-closed message for web chats.\nChannel type: chat.",
                    "example": true
                  },
                  "auto_close_timeout": {
                    "type": "integer",
                    "description": "How long, in minutes, before the chat is auto-closed.",
                    "example": 10
                  },
                  "auto_close_alert_message": {
                    "type": "string",
                    "description": "An alert message to web-chat users before auto-closing.",
                    "example": "Chat will auto-close soon if you don\u2019t reply"
                  },
                  "auto_close_alert_message_enabled": {
                    "type": "boolean",
                    "description": "Send an alert message before auto-closing web chats.\n Channel type: chat.",
                    "example": true
                  },
                  "auto_close_alert_message_time": {
                    "type": "integer",
                    "description": "How long, in minutes, before a warning is sent to the user.",
                    "example": 10
                  },
                  "recording_storage_location": {
                    "type": "string",
                    "description": "Determine where to store the recording.\nChannel types: voice, video.",
                    "example": "us",
                    "enum": [
                      "us - United States",
                      "au - Australia",
                      "br - Brazil",
                      "ca - Canada",
                      "de - Germany",
                      "jp - Japan",
                      "sg - Singapore"
                    ]
                  },
                  "service_level_threshold_in_seconds": {
                    "maximum": 600,
                    "minimum": 1,
                    "type": "integer",
                    "description": "First message speed by agents for all engagements.",
                    "example": 15
                  },
                  "service_level_exclude_short_abandoned_calls": {
                    "type": "boolean",
                    "description": "Choose to include short abandoned calls in service level metrics.\nChannel types: voice, video.",
                    "example": true
                  },
                  "service_level_exclude_long_abandoned_calls": {
                    "type": "boolean",
                    "description": "Choose to include long abandoned calls in service level metrics.\nChannel types: voice, video.",
                    "example": true
                  },
                  "service_level_exclude_abandoned_quit_engagements": {
                    "type": "boolean",
                    "description": "Choose to include quit engagements in service level metrics.\nChannel types: chat, in_app_chat, sms",
                    "example": true
                  },
                  "service_level_target_in_percentage": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "The service-level target as the benchmark to refer to in reports.",
                    "example": 80
                  },
                  "agent_routing_profile_id": {
                    "type": "string",
                    "description": "The queue's agent routing profile ID. If this is empty, the agent routing profile will be removed.",
                    "example": "fgjdkhgfieryt7465435kjhdkhg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n**Error Code:** `1210` <br>\n Agent routing profile does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:update:queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:queue:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/agents": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "List queue agents",
        "description": "Retrieve the list of a queue's assigned agents. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_queue_agents:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getQueueAgents",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueue agents list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "agents": {
                      "type": "array",
                      "description": "Information about the agents.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          },
                          "role_id": {
                            "type": "string",
                            "description": "The role's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The role's name.",
                            "example": "Agent"
                          },
                          "status_id": {
                            "type": "string",
                            "description": "The user's availability status ID.",
                            "example": "1"
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, such as **Lunch**.",
                            "example": "Offline",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied"
                            ]
                          },
                          "user_access": {
                            "type": "string",
                            "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n* `inactive` - The user cannot access the Contact Center.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          },
                          "opt_in_out_status": {
                            "type": "integer",
                            "description": "Opt out status.\n`0` - Opted in by agent himself or supervisor.\n`1` - Opted out by supervisor or admin.\n `2` - Opted out by agent himself.",
                            "example": 0,
                            "enum": [
                              0,
                              1,
                              2
                            ]
                          }
                        },
                        "description": "Information about the task queue agent."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:list_queue_agents:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_queue_agents:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Queues"
        ],
        "summary": "Assign queue agents",
        "description": "Add agents to a queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:queue_agent:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "assignQueueAgents",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "description": "The users to assign to the queue. The value can be an email address or a user ID. This request supports a maximum of 30 users per call.",
                    "items": {
                      "type": "string",
                      "example": "ukAAkZKfROKMSw1bj_RDFQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nQueue agents assigned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "description": "Information about the agents.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          },
                          "role_id": {
                            "type": "string",
                            "description": "The role's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The role's name.",
                            "example": "Agent"
                          },
                          "status_id": {
                            "type": "string",
                            "description": "The user's availability status ID.",
                            "example": "1"
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, such as Lunch.",
                            "example": "Offline",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied"
                            ]
                          },
                          "user_access": {
                            "type": "string",
                            "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n* `inactive` - The user cannot access the Contact Center.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          },
                          "opt_in_out_status": {
                            "type": "integer",
                            "description": "Opt out status.\n`0` - Opted in by agent himself or supervisor.\n`1` - Opted out by supervisor or admin.\n `2` - Opted out by agent himself.",
                            "example": 0,
                            "enum": [
                              0,
                              1,
                              2
                            ]
                          }
                        },
                        "description": "Information about the task queue agent."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:write:queue_agent:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:queue_agent:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/agents/{userId}": {
      "delete": {
        "tags": [
          "Queues"
        ],
        "summary": "Unassign a queue agent",
        "description": "Remove an agent from a queue. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue_agent:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteQueueAgent",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The queue user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue agent removed."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue agent does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:queue_agent:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue_agent:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Queues"
        ],
        "summary": "Update a queue agent",
        "description": "Update the list of agents in a queue. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:queue_agent:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateQueueAgent",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the old task queue's ID and the new Contact Center queue's ID. Since the task queue ID will be deprecated in the future, change to the Contact Center queue's ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The queue user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "opt_in_out_status": {
                    "type": "integer",
                    "description": "Opt out status.\n`0`: Opt in by agent himself or supervisor.\n `1`: Opt out by supervisor or admin.\n`2`: Opt out by agent himself.",
                    "example": 0,
                    "enum": [
                      0,
                      1,
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue agent updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n The agent must be in an available state (Ready) to opt in to the queue. <br>\n**Error Code:** `1011` <br>\n The agent is not allowed to opt in or out of their assigned queues. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n**Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:update:queue_agent:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:queue_agent:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/dispositions": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "List queue dispositions",
        "description": "Return a list of queue's [dispositions](https://support.zoom.us/hc/en-us/articles/4470153057549-Managing-dispositions). \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_dispositions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getQueueDispositions",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueue dispositions list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "dispositions": {
                      "type": "array",
                      "description": "Information about the task queue's dispositions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_id": {
                            "type": "string",
                            "description": "The disposition's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_name": {
                            "type": "string",
                            "description": "The disposition's name.",
                            "example": "Inquiry"
                          },
                          "disposition_description": {
                            "type": "string",
                            "description": "Information about the disposition.",
                            "example": "Inquiry dispositions."
                          },
                          "status": {
                            "type": "string",
                            "description": "The disposition's status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                            "example": "inactive",
                            "enum": [
                              "inactive",
                              "active"
                            ]
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when this data was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user that last modified this data.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          }
                        },
                        "description": "Information about the task queue disposition."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:list_dispositions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_dispositions:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Queues"
        ],
        "summary": "Assign queue dispositions",
        "description": "Add dispositions to a queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:queue disposition:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "assignQueueDispositions",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disposition_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "description": "The dispositions to assign to the queue. This request supports a maximum of 30 dispositions per call.",
                    "items": {
                      "type": "string",
                      "example": "sgdfghr_2454y5hdfgsfsgsdg"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nQueue dispositions assigned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dispositions": {
                      "type": "array",
                      "description": "Information about the dispositions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_id": {
                            "type": "string",
                            "description": "The disposition's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_name": {
                            "type": "string",
                            "description": "The disposition's name.",
                            "example": "Inquiry"
                          },
                          "disposition_description": {
                            "type": "string",
                            "description": "Information about the disposition.",
                            "example": "Inquiry dispositions."
                          },
                          "status": {
                            "type": "string",
                            "description": "The disposition's status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                            "example": "inactive",
                            "enum": [
                              "inactive",
                              "active"
                            ]
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the disposition was last modified.",
                            "format": "date-time",
                            "example": "2021-12-03T05:07:46Z"
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of user that last modified the disposition.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          }
                        },
                        "description": "Information about the task queue disposition."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:write:queue disposition:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:queue disposition:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/dispositions/sets": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "List queue disposition sets",
        "description": "Return a list of queue's disposition sets(https://support.zoom.us/hc/en-us/articles/4470153057549-Managing-dispositions). \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_disposition_sets:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getQueueDispositionSets",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueue disposition sets list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "disposition_sets": {
                      "type": "array",
                      "description": "Information about the task queue's disposition sets.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_set_id": {
                            "type": "string",
                            "description": "The disposition set's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_set_name": {
                            "type": "string",
                            "description": "The disposition set's name.",
                            "example": "Inquiry"
                          },
                          "disposition_set_description": {
                            "type": "string",
                            "description": "The information about the disposition set.",
                            "example": "Inquiry dispositions."
                          },
                          "status": {
                            "type": "string",
                            "description": "The disposition set's status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                            "example": "inactive",
                            "enum": [
                              "inactive",
                              "active"
                            ]
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when this data was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user that last modified this data.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          }
                        },
                        "description": "Information about the task's queue disposition set."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:list_disposition_sets:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_disposition_sets:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Queues"
        ],
        "summary": "Assign a queue disposition set",
        "description": "Add a disposition set to a queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:queue_disposition_set:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "assignQueueDispositionSets",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disposition_set_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "description": "The IDs of the disposition sets to assign to the queue. This request supports a maximum of 30 dispositions per call.",
                    "items": {
                      "type": "string",
                      "example": "sgdfghr_2454y5hdfgsfsgsdg"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nQueue disposition sets assigned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "disposition_sets": {
                      "type": "array",
                      "description": "Information about the queue's disposition sets.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "disposition_set_id": {
                            "type": "string",
                            "description": "The disposition set's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_set_name": {
                            "type": "string",
                            "description": "The disposition set's name.",
                            "example": "Inquiry"
                          },
                          "disposition_set_description": {
                            "type": "string",
                            "description": "The information about the disposition set.",
                            "example": "Inquiry dispositions."
                          },
                          "status": {
                            "type": "string",
                            "description": "The disposition set's status. \n* `inactive` &mdash; Deactivated. \n* `active` &mdash; Activated.",
                            "example": "inactive",
                            "enum": [
                              "inactive",
                              "active"
                            ]
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the disposition set was last modified.",
                            "format": "date-time",
                            "example": "2021-12-03T05:07:46Z"
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of user that last modified the disposition set.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          }
                        },
                        "description": "Information about the task's queue disposition set."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:write:queue_disposition_set:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:queue_disposition_set:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/dispositions/sets/{dispositionSetId}": {
      "delete": {
        "tags": [
          "Queues"
        ],
        "summary": "Unassign a queue disposition set",
        "description": "Delete a disposition set from a queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue_disposition_set:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteQueueDispositionSet",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "dispositionSetId",
            "in": "path",
            "description": "The queue disposition set's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "sgdfghr_2454y5hdfgsfsgsdg"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue disposition set deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue disposition set does not exist: $dispositionSetId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:queue_disposition_set:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue_disposition_set:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/dispositions/{dispositionId}": {
      "delete": {
        "tags": [
          "Queues"
        ],
        "summary": "Unassign a queue disposition",
        "description": "Delete a disposition from a queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue_disposition:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteQueueDisposition",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "dispositionId",
            "in": "path",
            "description": "The queue disposition's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "p985PidGR5K72vAoTDJocA"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue disposition deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue disposition does not exist: $dispositionId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:queue_disposition:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue_disposition:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/operating_hours": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "Get a queue's operating hours",
        "description": "Get information about a queue's operating hours. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:queue_operating_hours:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAQueueOperatingHours",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nOperating hours returned.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "account_default_business_hour",
                    "business_hour_id",
                    "business_hour_name"
                  ],
                  "type": "object",
                  "properties": {
                    "business_hour_id": {
                      "type": "string",
                      "description": "The business hours' ID.",
                      "example": "66ZjSQ7YTOescnINN_4vog"
                    },
                    "business_hour_name": {
                      "type": "string",
                      "description": "The business hours' name.",
                      "example": "Default Business hours"
                    },
                    "closure_set_id": {
                      "type": "string",
                      "description": "The closure's ID.",
                      "example": "Ixo-Na0bRfCyQ4q2lAryDw"
                    },
                    "closure_set_name": {
                      "type": "string",
                      "description": "The closure's name.",
                      "example": "Default Closure"
                    },
                    "account_default_business_hour": {
                      "type": "boolean",
                      "description": "Whether the queue's business hour is the account default business hour.",
                      "example": true
                    },
                    "account_default_closure_set": {
                      "type": "boolean",
                      "description": "Whether the queue's closure set is the account default.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:read:queue_operating_hours:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:queue_operating_hours:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Queues"
        ],
        "summary": "Update a queue's operating hours",
        "description": "Update a queue's operating hours. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:patch:queue_operating_hours:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "QueueOperatingHoursUpdate",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_default_business_hour": {
                    "type": "boolean",
                    "description": "Whether to use the account's default business hours. When the account's default business hours change, the business hours used by the queue also change.",
                    "example": true
                  },
                  "operating_hours_business_hour_id": {
                    "type": "string",
                    "description": "The business hours' ID.",
                    "example": "66ZjSQ7YTOescnINN_4vog"
                  },
                  "account_default_closure_set": {
                    "type": "boolean",
                    "description": "Whether to use the account's default closure set. When the account's default closure set changes, the closure set used by the queue also changes.",
                    "example": true
                  },
                  "operating_hours_closure_set_id": {
                    "type": "string",
                    "description": "The closure set's ID.",
                    "example": "Ixo-Na0bRfCyQ4q2lAryDw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nOperating hours updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:patch:queue_operating_hours:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:patch:queue_operating_hours:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/supervisors": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "List queue supervisors",
        "description": "Return a list of a queue's assigned supervisors. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue_supervisor:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getQueueSupervisors",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueue supervisors list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "supervisors": {
                      "type": "array",
                      "description": "Information about the supervisors.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          },
                          "role_id": {
                            "type": "string",
                            "description": "The role's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The role's name.",
                            "example": "Agent"
                          },
                          "status_id": {
                            "type": "string",
                            "description": "The user's availability status ID.",
                            "example": "1"
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, such as **Lunch**.",
                            "example": "Offline",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied"
                            ]
                          },
                          "user_access": {
                            "type": "string",
                            "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n* `inactive` - The user cannot access the Contact Center.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          }
                        },
                        "description": "Information about the task queue supervisor."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:read:admin",
              "contact_center:delete:queue_supervisor:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue_supervisor:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Queues"
        ],
        "summary": "Assign queue supervisors",
        "description": "Add supervisors to a queue. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue_supervisor:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "assignQueueSupervisors",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "description": "The users to assign to the queue. The value can be an email address or a user ID. This request supports a maximum of 30 users per call.",
                    "items": {
                      "type": "string",
                      "example": "ukAAkZKfROKMSw1bj_RDFQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nQueue supervisors assigned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "supervisors": {
                      "type": "array",
                      "description": "Information about the supervisors.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          },
                          "role_id": {
                            "type": "string",
                            "description": "The role's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The role's name.",
                            "example": "Agent"
                          },
                          "status_id": {
                            "type": "string",
                            "description": "The user's availability status ID.",
                            "example": "1"
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, such as &quot;Lunch&quot;.",
                            "example": "Offline",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied"
                            ]
                          },
                          "user_access": {
                            "type": "string",
                            "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n* `inactive` - The user cannot access the Contact Center.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          }
                        },
                        "description": "Information about the task queue supervisor."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:queue_supervisor:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue_supervisor:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/supervisors/{userId}": {
      "delete": {
        "tags": [
          "Queues"
        ],
        "summary": "Unassign a queue supervisor",
        "description": "Remove a supervisor from a queue. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_queue:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:queue_supervisor:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteQueueSupervisor",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the old task queue's ID and the new Contact Center queue's ID. Since the task queue ID will be deprecated in the future, change to the Contact Center queue's ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The queue user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue supervisor removed."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue supervisor does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_queue:write:admin",
              "contact_center:delete:queue_supervisor:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_queue:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:queue_supervisor:admin"
          ]
        }
      }
    },
    "/contact_center/engagements/{engagementId}/recordings": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "List engagement recordings",
        "description": "Return a list of all of an engagement's recordings. \n\n**Note:** Use recording-related APIs to manipulate data whose recording was created after July 18, 2022. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_recordings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listEngagementRecordings",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement event's unique ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Xh79Eq6gQhy8I1vM-r8P-w"
            }
          },
          {
            "name": "channel_type",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording \n* `video` - Video recording\n\n If channel is used as an input parameter, the deprecated parameter `channnel_type` will not be processed.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T00:00:00-08:00"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T01:00:00-08:00"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nEngagement recordings returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
                      "format": "string",
                      "example": "2023-01-01T00:00:00-08:00"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
                      "format": "string",
                      "example": "2023-01-01T01:00:00-08:00"
                    },
                    "recordings": {
                      "type": "array",
                      "description": "Information about the recordings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "recording_id": {
                            "type": "string",
                            "description": "The recording's unique ID.",
                            "example": "ghyetrjj_sdfsdgfkdjfl111"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's unique ID.",
                            "example": "ghyetrjj_2342353rsgfkdjfl",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "smyko04pSCWt9zLI0nn3AQ"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "voice"
                          },
                          "recording_duration": {
                            "type": "integer",
                            "description": "The recording's duration in seconds.",
                            "example": 150
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The URL to download the recording. For security purposes, you **must** provide an OAuth access token in the Authorization header to download the recording file using this URL. Example:\n ```\ncurl --request GET \\ \n --url {download_url} \\ \n --header 'authorization: Bearer {access_token}' \\ \n --header 'content-type: application/json'\n ```\nNote: The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                            "example": "https://api.zoom.us/v2/contact_center/recording/download/01bdb222-9984-4f41-8141-2f760cb398aa?type=voice"
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The URL to download the recording transcript. For security purposes, you **must** provide an OAuth access token in the authorization header to download the recording transcript file using this URL. Example:\n ```\ncurl --request GET \\ \n --url {transcript_url} \\ \n --header 'authorization: Bearer {access_token}' \\ \n --header 'content-type: application/json'\n ```\nNote: The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                            "example": "https://api.zoom.us/v2/contact_center/recording/transcripts/download/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "playback_url": {
                            "type": "string",
                            "description": "The URL to play the recording. For security purposes, you **must** provide an OAuth access token in the authorization header to play the recording file using this URL. Example:\n```\ncurl --request GET \\ \n --url {playback_url} \\ \n --header 'authorization: Bearer {access_token}' \\ \n --header 'content-type: application/json'\n```\n Note: The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                            "example": "https://api.zoom.us/v2/contact_center/recording/playback/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "recording_start_time": {
                            "type": "string",
                            "description": "The date and time when the recording's start time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T08:00:00Z"
                          },
                          "recording_end_time": {
                            "type": "string",
                            "description": "The date and time when the recording's end time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T09:00:00Z"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Tom"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email.",
                            "example": "xxxx@example.com"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording's type. \n* `on_demand` - Manually trigger recording. \n* `automatic` - Automatically trigger recording.",
                            "example": "automatic",
                            "enum": [
                              "on_demand",
                              "automatic"
                            ]
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The recording's call direction. \n* `inbound` - Call in. \n* `outbound` - Call out.",
                            "example": "outbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The recording's owner ID, either the queue ID or user ID.",
                            "example": "auiketrjj_2342353fsewkdjfl"
                          },
                          "owner_name": {
                            "type": "string",
                            "description": "The recording's owner name, either the queue name or user name.",
                            "example": "voice"
                          },
                          "owner_type": {
                            "type": "string",
                            "description": "The recording's owner type. \n* `user` - This recording belongs to an userl \n* `queue` - This recording belongs to a queue.",
                            "example": "queue",
                            "enum": [
                              "user",
                              "queue"
                            ]
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement event's unique ID.",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The recording's flow name.",
                            "example": "voice"
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The recording's flow ID.",
                            "example": "fsdfsd4oippe0ffewcbhjk"
                          },
                          "consumer_name": {
                            "type": "string",
                            "description": "The customer's name.\n* `Note` - This field will be abolished, and the `consumer_name` in `consumers` will be used uniformly.",
                            "example": "Jill",
                            "deprecated": true
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The customer's phone number.\n* `Note` - This field will be abolished, and the `consumer_number` in `consumers` will be used uniformly.",
                            "example": "+12058945728",
                            "deprecated": true
                          },
                          "consumers": {
                            "type": "array",
                            "description": "Information about the recording consumers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "consumer_name": {
                                  "type": "string",
                                  "description": "The customer's name.",
                                  "example": "Jill"
                                },
                                "consumer_number": {
                                  "type": "string",
                                  "description": "The customer's phone number.",
                                  "example": "+12058945728"
                                }
                              },
                              "description": "Information about the recording consumer."
                            }
                          }
                        },
                        "description": "Information about the recording."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2805` <br>\n Engagement recordings does not exist or you do not have the corresponding operation authority: $engagementId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:read:admin",
              "contact_center:read:list_recordings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_recording:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_recordings:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Recordings"
        ],
        "summary": "Delete engagement recordings",
        "description": "Delete all recordings in a given engagement.  \n\n**Note**: Use recording-related APIs to manipulate data whose recording creation time is after 2022-07-18. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteEngagementRecordings",
        "parameters": [
          {
            "name": "engagementId",
            "in": "path",
            "description": "The engagement's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Xh79Eq6gQhy8I1vM-r8P-w"
            }
          },
          {
            "name": "delete_all_recordings",
            "in": "query",
            "description": "Whether to delete all recordings in this engagement. \n* `true` &mdash; Delete all recordings in this engagement",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": true,
              "enum": [
                true
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nEngagement recordings deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2805` <br>\nEngagement recordings does not exist: $engagementId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:write:admin",
              "contact_center:delete:recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_recording:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:recording:admin"
          ]
        }
      }
    },
    "/contact_center/queues/{queueId}/recordings": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "List queue recordings",
        "description": "Return a list of all recordings in a queue. \n\n**Note:** Use recording-related APIs to manipulate data whose recording was created after July 18, 2022. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:read:admin`,`contact_center_recording:read`\n\n **[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_recordings:admin`,`contact_center:read:list_recordings`\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listQueueRecordings",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1Bgv2rs7Tqaq5hFM95UjWw"
            }
          },
          {
            "name": "channel_type",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.\n\n If channel is used as an input parameter, the deprecated parameter `channnel_type` will not be processed.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T00:00:00-08:00"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T01:00:00-08:00"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nQueue recordings returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
                      "format": "string",
                      "example": "2023-01-01T00:00:00-08:00"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z', or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
                      "format": "string",
                      "example": "2023-01-01T01:00:00-08:00"
                    },
                    "recordings": {
                      "type": "array",
                      "description": "Information about the recordings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "recording_id": {
                            "type": "string",
                            "description": "The recording's unique ID.",
                            "example": "ghyetrjj_sdfsdgfkdjfl111"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's unique ID.",
                            "example": "ghyetrjj_2342353rsgfkdjfl",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "smyko04pSCWt9zLI0nn3AQ"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "voice"
                          },
                          "recording_duration": {
                            "type": "integer",
                            "description": "The recording's duration, in seconds.",
                            "example": 150
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The URL to download the recording. For security purposes, you **must** provide an OAuth access token in the Authorization header to download the recording file using this URL. Example:\n\n```curl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/recording/download/01bdb222-9984-4f41-8141-2f760cb398aa?type=voice"
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The URL to download the recording transcript. For security purposes, you **must** provide an OAuth access token in the authorization header to download the recording transcript file using this URL. Example:\n```curl --request GET \n  --url {transcript_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/recording/transcripts/download/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "playback_url": {
                            "type": "string",
                            "description": "The URL to play the recording. For security purposes, you **must** provide an OAuth access token in the authorization header to play the recording file using this URL. Example:\n```curl --request GET \n  --url {playback_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/recording/playback/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "recording_start_time": {
                            "type": "string",
                            "description": "The date and time when the recording's start time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T08:00:00Z"
                          },
                          "recording_end_time": {
                            "type": "string",
                            "description": "The date and time when the recording's end time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T09:00:00Z"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Tom"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email.",
                            "example": "xxxx@example.com"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording's type. \n* `on_demand` - Manually trigger recording. \n* `automatic` - Automatically trigger recording.",
                            "example": "automatic",
                            "enum": [
                              "on_demand",
                              "automatic"
                            ]
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The recording's call direction. \n* `inbound` - Call in. \n* `outbound` - Call out.",
                            "example": "outbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The recording's owner ID, either the queue ID or user ID.",
                            "example": "auiketrjj_2342353fsewkdjfl"
                          },
                          "owner_name": {
                            "type": "string",
                            "description": "The recording's owner name, either the queue name or user name.",
                            "example": "voice"
                          },
                          "owner_type": {
                            "type": "string",
                            "description": "The recording's owner type. \n* `user` - This recording belongs to an user. \n* `queue` - This recording belongs to a queue.",
                            "example": "queue",
                            "enum": [
                              "user",
                              "queue"
                            ]
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement event's unique ID.",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The recording's flow name.",
                            "example": "voice"
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The recording's flow ID.",
                            "example": "fsdfsd4oippe0ffewcbhjk"
                          },
                          "consumer_name": {
                            "type": "string",
                            "description": "The customer's name.\n* **Note** This field will be abolished, and the `consumer_name` in `consumers` will be used uniformly.",
                            "example": "Jill",
                            "deprecated": true
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The customer's phone number.\n* **Note** This field will be abolished, and the `consumer_number` in `consumers` will be used uniformly.",
                            "example": "+12058945728",
                            "deprecated": true
                          },
                          "consumers": {
                            "type": "array",
                            "description": "Information about the recording consumers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "consumer_name": {
                                  "type": "string",
                                  "description": "The customer's name.",
                                  "example": "Jill"
                                },
                                "consumer_number": {
                                  "type": "string",
                                  "description": "The customer's phone number.",
                                  "example": "+12058945728"
                                }
                              },
                              "description": "Information about the recording consumer."
                            }
                          }
                        },
                        "description": "Information about the recording."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1204` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:read:admin",
              "contact_center_recording:read",
              "contact_center:read:list_recordings:admin",
              "contact_center:read:list_recordings"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_recording:read:admin",
            "contact_center_recording:read"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_recordings:admin",
            "contact_center:read:list_recordings"
          ]
        }
      },
      "delete": {
        "tags": [
          "Recordings"
        ],
        "summary": "Delete queue recordings",
        "description": "Delete all recordings in a queue. \n\n**Note**: Use recording-related APIs to manipulate data whose recording creation time is after 2022-07-18. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteQueueRecordings",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1Bgv2rs7Tqaq5hFM95UjWw"
            }
          },
          {
            "name": "delete_all_recordings",
            "in": "query",
            "description": "Whether to delete all recordings in this queue. \n* `true` &mdash; Delete all recordings in this queue",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": true,
              "enum": [
                true
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue recordings deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId <br>\n**Error Code:** `2803` <br>\n Queue recordings does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:write:admin",
              "contact_center:delete:recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_recording:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:recording:admin"
          ]
        }
      }
    },
    "/contact_center/recordings": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "List recordings",
        "description": "Return a list of available recordings. \n\n**Note** Use recording-related APIs to manipulate data whose recording was created after July 18, 2022. \n \n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_recordings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listRecordings",
        "parameters": [
          {
            "name": "query_date_type",
            "in": "query",
            "description": "Query date type. \n* `recording_start_time` - The recording's start time.\n* `recording_end_time` - The recording's end time.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "recording_start_time",
              "default": "recording_start_time"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T00:00:00-08:00"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T01:00:00-08:00"
            }
          },
          {
            "name": "recording_type",
            "in": "query",
            "description": "The recording's type. \n* `on_demand` - Manually trigger recording. \n* `automatic` - Automatically trigger recording.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "automatic",
              "enum": [
                "on_demand",
                "automatic"
              ]
            }
          },
          {
            "name": "owner_type",
            "in": "query",
            "description": "The recording's owner type. \n* `user` - This recording belongs to a user. \n* `queue` - This recording belongs to a queue.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "queue",
              "enum": [
                "user",
                "queue"
              ]
            }
          },
          {
            "name": "channel_type",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.\n\n If channel is used as an input parameter, the deprecated parameter `channnel_type` will not be processed.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRecordings returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
                      "format": "string",
                      "example": "2023-01-01T00:00:00-08:00"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
                      "format": "string",
                      "example": "2023-01-01T01:00:00-08:00"
                    },
                    "recordings": {
                      "type": "array",
                      "description": "Information about the recordings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "recording_id": {
                            "type": "string",
                            "description": "The recording's unique ID.",
                            "example": "ghyetrjj_sdfsdgfkdjfl111"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's unique ID.",
                            "example": "ghyetrjj_2342353rsgfkdjfl",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "smyko04pSCWt9zLI0nn3AQ"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "voice"
                          },
                          "recording_duration": {
                            "type": "integer",
                            "description": "The recording's duration in seconds.",
                            "example": 150
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The URL to download the recording. For security purposes, you **must** provide an OAuth access token in the Authorization header to download the recording file using this URL. Example:\n ```\ncurl --request GET \\ \n --url {download_url} \\ \n --header 'authorization: Bearer {access_token}' \\ \n --header 'content-type: application/json'\n ```\nNote: The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                            "example": "https://api.zoom.us/v2/contact_center/recording/download/01bdb222-9984-4f41-8141-2f760cb398aa?type=voice"
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The URL to download the recording transcript. For security purposes, you **must** provide an OAuth access token in the authorization header to download the recording transcript file using this URL. Example:\n ```\ncurl --request GET \\ \n --url {transcript_url} \\ \n --header 'authorization: Bearer {access_token}' \\ \n --header 'content-type: application/json'\n ```\nNote: The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                            "example": "https://api.zoom.us/v2/contact_center/recording/transcripts/download/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "playback_url": {
                            "type": "string",
                            "description": "The URL to play the recording. For security purposes, you **must** provide an OAuth access token in the authorization header to play the recording file using this URL. Example:\n```\ncurl --request GET \\ \n --url {playback_url} \\ \n --header 'authorization: Bearer {access_token}' \\ \n --header 'content-type: application/json'\n```\n Note: The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                            "example": "https://api.zoom.us/v2/contact_center/recording/playback/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "recording_start_time": {
                            "type": "string",
                            "description": "The date and time when the recording's start time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T08:00:00Z"
                          },
                          "recording_end_time": {
                            "type": "string",
                            "description": "The date and time when the recording's end time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T09:00:00Z"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Tom"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email.",
                            "example": "xxxx@example.com"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording's type. \n* `on_demand` - Manually trigger recording. \n* `automatic` - Automatically trigger recording.",
                            "example": "automatic",
                            "enum": [
                              "on_demand",
                              "automatic"
                            ]
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The recording's call direction. \n* `inbound` - Call in. \n* `outbound` - Call out.",
                            "example": "outbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The recording's owner ID, either the queue ID or user ID.",
                            "example": "auiketrjj_2342353fsewkdjfl"
                          },
                          "owner_name": {
                            "type": "string",
                            "description": "The recording's owner name, either thequeue name or user name.",
                            "example": "voice"
                          },
                          "owner_type": {
                            "type": "string",
                            "description": "The recording's owner type. \n* `user` - This recording belongs to a user. \n* `queue` - This recording belongs to a queue.",
                            "example": "queue",
                            "enum": [
                              "user",
                              "queue"
                            ]
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement event's unique ID.",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The recording's flow name.",
                            "example": "voice"
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The recording's flow ID.",
                            "example": "fsdfsd4oippe0ffewcbhjk"
                          },
                          "consumer_name": {
                            "type": "string",
                            "description": "The customer's name.\n* **Note** This field will be abolished, and the `consumer_name` in `consumers` will be used uniformly.",
                            "example": "Jill",
                            "deprecated": true
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The customer's phone number.\n* **Note** This field will be abolished, and the `consumer_number` in `consumers` will be used uniformly.",
                            "example": "+12058945728",
                            "deprecated": true
                          },
                          "consumers": {
                            "type": "array",
                            "description": "Information about the recording consumers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "consumer_name": {
                                  "type": "string",
                                  "description": "The customer's name.",
                                  "example": "Jill"
                                },
                                "consumer_number": {
                                  "type": "string",
                                  "description": "The customer's phone number.",
                                  "example": "+12058945728"
                                }
                              },
                              "description": "Information about the recording consumer."
                            }
                          }
                        },
                        "description": "Information about the recording."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:read:admin",
              "contact_center:read:list_recordings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_recording:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_recordings:admin"
          ]
        }
      }
    },
    "/contact_center/recordings/{recordingId}": {
      "delete": {
        "tags": [
          "Recordings"
        ],
        "summary": "Delete a recording",
        "description": "Delete a selected recording. \n\n**Note**: Use recording-related APIs to manipulate data whose recording creation time is after 2022-07-18. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteRecording",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ghyetrjj_2342353rsgfkdjfl"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nRecording deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2801` <br>\nRecording does not exist: $recordingId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:write:admin",
              "contact_center:delete:recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_recording:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:recording:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}/recordings": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "List a user's recordings",
        "description": "Get a user's recordings. \n\n**Note** Use recording-related APIs to manipulate data whose recording creation time is after 2022-07-18. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:read`,`contact_center_recording:read:admin`\n\n **[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_recordings:admin`,`contact_center:read:list_recordings`\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUserRecordings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Rz06l1-PS0iSvSAVt1y-mw"
            }
          },
          {
            "name": "channel_type",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.\n\n If channel is used as an input parameter, the deprecated parameter `channnel_type` will not be processed.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T00:00:00-08:00"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string",
              "example": "2023-01-01T01:00:00-08:00"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nUser recordings returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'. The defined date range should be a month, as the response only includes one month's worth of data. If unspecified, this parameter returns data from the past 30 days.",
                      "format": "string",
                      "example": "2023-01-01T00:00:00-08:00"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD', the same format as the `from` parameter.",
                      "format": "string",
                      "example": "2023-01-01T01:00:00-08:00"
                    },
                    "recordings": {
                      "type": "array",
                      "description": "Information about the recordings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "recording_id": {
                            "type": "string",
                            "description": "The recording's unique ID.",
                            "example": "ghyetrjj_sdfsdgfkdjfl111"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's unique ID.",
                            "example": "ghyetrjj_2342353rsgfkdjfl",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "smyko04pSCWt9zLI0nn3AQ"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "voice"
                          },
                          "recording_duration": {
                            "type": "integer",
                            "description": "The recording's duration in seconds.",
                            "example": 150
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The URL to download the recording. For security purposes, you **must** provide an OAuth access token in the Authorization header to download the recording file using this URL. Example:\n\n```curl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/recording/download/01bdb222-9984-4f41-8141-2f760cb398aa?type=voice"
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The URL to download the recording transcript. For security purposes, you **must** provide an OAuth access token in the authorization header to download the recording transcript file using this URL. Example:\n```curl --request GET \n  --url {transcript_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/recording/transcripts/download/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "playback_url": {
                            "type": "string",
                            "description": "The URL to play the recording. For security purposes, you **must** provide an OAuth access token in the authorization header to play the recording file using this URL. Example:\n```curl --request GET \n  --url {playback_url} \n  --header 'authorization: Bearer {access_token}' \n  --header 'content-type: application/json'\n```",
                            "example": "https://api.zoom.us/v2/contact_center/recording/playback/4Q0ILNMfTA2nJolNxhg0Rw?type=voice"
                          },
                          "recording_start_time": {
                            "type": "string",
                            "description": "The date and time of the recording's start time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T08:00:00Z"
                          },
                          "recording_end_time": {
                            "type": "string",
                            "description": "The date and time of the recording's end time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss'TZD'.",
                            "format": "date-time",
                            "example": "2023-01-01T09:00:00Z"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Tom"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email.",
                            "example": "xxxx@example.com"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording's type. \n* `on_demand` - Manually trigger recording. \n* `automatic` - Automatically trigger recording.",
                            "example": "automatic",
                            "enum": [
                              "on_demand",
                              "automatic"
                            ]
                          },
                          "channel_type": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "deprecated": true,
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "The recording's channel type. \n* `voice` - Voice recording. \n* `video` - Video recording.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video"
                            ]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The recording's call direction. \n* `inbound` - Call in. \n* `outbound` - Call out.",
                            "example": "outbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The recording's owner ID, such as the queue ID or user ID.",
                            "example": "auiketrjj_2342353fsewkdjfl"
                          },
                          "owner_name": {
                            "type": "string",
                            "description": "The recording's owner name, such as queue name or user name.",
                            "example": "voice"
                          },
                          "owner_type": {
                            "type": "string",
                            "description": "The recording's owner type. \n* `user` - This recording belongs to an user. \n* `queue` - This recording belongs to a queue.",
                            "example": "queue",
                            "enum": [
                              "user",
                              "queue"
                            ]
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement event's unique ID.",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The recording's flow name.",
                            "example": "voice"
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The recording's flow ID.",
                            "example": "fsdfsd4oippe0ffewcbhjk"
                          },
                          "consumer_name": {
                            "type": "string",
                            "description": "The customer's name.\n* **Note** This field will be abolished, and the `consumer_name` in `consumers` will be used uniformly.",
                            "example": "Jill",
                            "deprecated": true
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The customer's phone number.\n* **Note**  This field will be abolished, and the `consumer_number` in `consumers` will be used uniformly.",
                            "example": "+12058945728",
                            "deprecated": true
                          },
                          "consumers": {
                            "type": "array",
                            "description": "Information about the recording consumers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "consumer_name": {
                                  "type": "string",
                                  "description": "The customer's name.",
                                  "example": "Jill"
                                },
                                "consumer_number": {
                                  "type": "string",
                                  "description": "The customer's phone number.",
                                  "example": "+12058945728"
                                }
                              },
                              "description": "Information about the recording consumer."
                            }
                          }
                        },
                        "description": "Information about the recording."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:read",
              "contact_center_recording:read:admin",
              "contact_center:read:list_recordings:admin",
              "contact_center:read:list_recordings"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_recording:read",
            "contact_center_recording:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_recordings:admin",
            "contact_center:read:list_recordings"
          ]
        }
      },
      "delete": {
        "tags": [
          "Recordings"
        ],
        "summary": "Delete a user's recordings",
        "description": "Delete all of a given user's recordings.  \n\n**Note** Use recording-related APIs to manipulate data whose recording creation time is after 2022-07-18. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_recording:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteUserRecordings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Rz06l1-PS0iSvSAVt1y-mw"
            }
          },
          {
            "name": "delete_all_recordings",
            "in": "query",
            "description": "Whether to delete all of this user's recordings. \n* `true` - Delete all of this user's recordings.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": true,
              "enum": [
                true
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nQueue recordings deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2804` <br>\n User recordings do not exist: $userId. <br>\n**Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_recording:write:admin",
              "contact_center:delete:recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_recording:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:recording:admin"
          ]
        }
      }
    },
    "/contact_center/regions": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "List regions",
        "description": "Get information about all available regions.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_region:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_regions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListRegions",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Region list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "regions": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Information about the regions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "region_id": {
                            "type": "string",
                            "description": "The region's ID.",
                            "example": "36c8dc7c-695f-11ed-a081-0a514d46f86b"
                          },
                          "region_name": {
                            "type": "string",
                            "description": "The region's name.",
                            "example": "Main Region"
                          },
                          "is_main_region": {
                            "type": "boolean",
                            "description": "Whether this region is the main region.",
                            "example": true
                          },
                          "sip_zone_id": {
                            "type": "string",
                            "description": "The region SIP zone's ID.",
                            "example": "AfgzMEweSQ6tqzC8jhYJ2A"
                          },
                          "sip_zone_name": {
                            "type": "string",
                            "description": "The region SIP zone's name.",
                            "example": "zccsipzone"
                          },
                          "users_count": {
                            "type": "integer",
                            "description": "The number of users assigned to region.",
                            "example": 20
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the asset was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_region:read:admin",
              "contact_center:read:list_regions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_region:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_regions:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Regions"
        ],
        "summary": "Create a region",
        "description": "Create a new region.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_region:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:region:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "CreateARegion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "region_name": {
                    "type": "string",
                    "description": "The region's name.",
                    "example": "Customer region"
                  },
                  "sip_zone_id": {
                    "type": "string",
                    "description": "The region SIP zone's ID.",
                    "example": "AfgzMEweSQ6tqzC8jhYJ2A"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `201`    Region created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "region_name": {
                      "type": "string",
                      "description": "The region's name.",
                      "example": "Customer region"
                    },
                    "region_id": {
                      "type": "string",
                      "description": "The region's ID.",
                      "example": "6c8dc7c-695f-11ed-a081-0a514d46f86b"
                    },
                    "sip_zone_id": {
                      "type": "string",
                      "description": "The region SIP zone's ID.",
                      "example": "AfgzMEweSQ6tqzC8jhYJ2A"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_region:write:admin",
              "contact_center:write:region:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_region:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:region:admin"
          ]
        }
      }
    },
    "/contact_center/regions/{regionId}": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Get a region",
        "description": "Get information about a region.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_region:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:region:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetARegion",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "The region ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6c8dc7c-695f-11ed-a081-0a514d46f86b"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Region returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "region_id": {
                      "type": "string",
                      "description": "The region's ID.",
                      "example": "36c8dc7c-695f-11ed-a081-0a514d46f86b"
                    },
                    "region_name": {
                      "type": "string",
                      "description": "The region's name.",
                      "example": "Main Region"
                    },
                    "sip_zone_id": {
                      "type": "string",
                      "description": "The region SIP zone's ID.",
                      "example": "AfgzMEweSQ6tqzC8jhYJ2A"
                    },
                    "sip_zone_name": {
                      "type": "string",
                      "description": "The region SIP zone's ID.",
                      "example": "zccsipzone"
                    },
                    "is_main_region": {
                      "type": "boolean",
                      "description": "Whether this region is the main region.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_region:read:admin",
              "contact_center:read:region:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_region:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:region:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Regions"
        ],
        "summary": "Delete a region",
        "description": "Delete a site and move its members to another region.   \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_region:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:region:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteARegion",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "The region ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6c8dc7c-695f-11ed-a081-0a514d46f86b"
            }
          },
          {
            "name": "move_users_to_region_id",
            "in": "query",
            "description": "ID of the region to move users to.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5dJBFbVESne5rjbVT4LqkA"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Region deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_region:write:admin",
              "contact_center:delete:region:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_region:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:region:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Regions"
        ],
        "summary": "Update a region",
        "description": "Update information for a region.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_region:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:udpate:region:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateARegion",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "The region's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6c8dc7c-695f-11ed-a081-0a514d46f86b"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "region_name": {
                    "type": "string",
                    "description": "The region's name.",
                    "example": "Customer region"
                  },
                  "sip_zone_id": {
                    "type": "string",
                    "description": "The region SIP zone's ID.",
                    "example": "AfgzMEweSQ6tqzC8jhYJ2A"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Region updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_region:write:admin",
              "contact_center:udpate:region:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_region:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:udpate:region:admin"
          ]
        }
      }
    },
    "/contact_center/regions/{regionId}/users": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "List a region's users",
        "description": "Retrieve the list of a region's assigned agents. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_region:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_region_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListRegion'sUsers",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "The region's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "8f71O6rWT8KFUGQmJIFAdQ"
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "The role's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRegion's users list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10,
                      "default": 10
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "users": {
                      "maxItems": 100,
                      "type": "array",
                      "description": "Information about the users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          },
                          "role_id": {
                            "type": "string",
                            "description": "The user's role ID.",
                            "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The role's name.",
                            "example": "Agent"
                          }
                        },
                        "description": "Information about the region user."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Region is not enabled for this account: $accountId. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1017` <br>\n Region does not exist: $regionId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_region:read:admin",
              "contact_center:read:list_region_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_region:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_region_users:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Regions"
        ],
        "summary": "Assign users to a region",
        "description": "Assign users to a region.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_region:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:region_user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AssignUsersToARegion",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "The region's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "_mgt2VRsRy6SWvgI7O0sZQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_ids": {
                    "maxItems": 20,
                    "type": "array",
                    "description": "The users to assign to a region, up to 20 users per call. The value is either an email address or a user ID.",
                    "items": {
                      "type": "string",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n  Users assigned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Region is not enabled for this account: $accountId. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1017` <br>\n Region does not exist: $regionId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_region:write:admin",
              "contact_center:write:region_user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_region:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:region_user:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/dataset/historical/agent_performance": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical agent performance dataset data",
        "description": "Generate a list of agent performance dataset raw data.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:dataset_agent_performance:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Listhistoricalagentperformancedatasetdata",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull all agents that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls all agents that started in the given `from` and `to` time periods.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to query the start time and end time in the query.\n. The default is `UTC`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID array.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "bgdiH2SPQXmiD30nUiA4uA"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction.\n* inbound\n* outbound",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          },
          {
            "name": "queue_id",
            "in": "query",
            "description": "The queue's specific ID.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The ID of the agent who is set up on the agent profile.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "The specific team's ID.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The channel that the engagement contains.\n* `voice`\n* `video`\n * `messaging`\n* `email`",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "messaging"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_source",
            "in": "query",
            "description": "The source that the engagement contains.\n* `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n * `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n * `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "in_app_chat"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "in_app_video",
                "kiosk_video",
                "web_video",
                "in_app_chat",
                "in_video_chat",
                "web_chat",
                "sms",
                "facebook_messenger",
                "instagram",
                "team_chat",
                "whats_app",
                "email_domain"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent performance dataset raw data response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to query the start time and end time in the query.\n. The default is `UTC`.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull all agents that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls all agents that started in the given `from` and `to` time periods.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The agent date and time when the engagement started, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `start_time` will be in UTC.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The agent date and time when the engagement ended, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `end_time` will be in UTC.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction. \n* inbound\n * outbound",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The ID of the agent who is set up on the agent profile.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "The name of the agent who is set up on the agent profile.",
                            "example": "user_name_example"
                          },
                          "channel": {
                            "type": "string",
                            "description": "The channel that the engagement contains.\n * `voice`\n* `video`\n* `messaging`\n* `email`",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "channel_source": {
                            "type": "string",
                            "description": "The source that the engagement contains.\n * `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n * `facebook_messenger` - Only applies to messaging channel.\n * `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "in_app_video",
                              "kiosk_video",
                              "web_video",
                              "in_app_chat",
                              "in_video_chat",
                              "web_chat",
                              "sms",
                              "facebook_messenger",
                              "instagram",
                              "team_chat",
                              "whats_app",
                              "email_domain"
                            ]
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's specific ID.",
                            "example": "FRDFsxkcQeCnhR5eMBdOHw"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's specific name.",
                            "example": "jack_queue"
                          },
                          "team_id": {
                            "type": "string",
                            "description": "The team's specific ID.",
                            "example": "FRDFsxkcQeCnhR5eMBdOHw"
                          },
                          "team_name": {
                            "type": "string",
                            "description": "The team's specific name.",
                            "example": "jack_team"
                          },
                          "handled_count": {
                            "type": "integer",
                            "description": "The number of inbound - including callback - and outbound engagements handled by the queue.",
                            "example": 1
                          },
                          "handle_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent handling engagements, in milliseconds.",
                            "example": 123
                          },
                          "direct_transfer_count": {
                            "type": "integer",
                            "description": "The number of direct transfers initiated.",
                            "example": 1
                          },
                          "warm_transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant with or without fully transferring the engagement.",
                            "example": 1
                          },
                          "warm_transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant and then fully transferred the engagements.",
                            "example": 1
                          },
                          "transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of transfers an agent initiated, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channels with no distinction between warm and direct.",
                            "example": 1
                          },
                          "transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of transfers an agent completed, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channels with no distinction between warm and direct.",
                            "example": 1
                          },
                          "warm_conference_count": {
                            "type": "integer",
                            "description": "The number of warm conferences initiated.",
                            "example": 1
                          },
                          "agent_offered_count": {
                            "type": "integer",
                            "description": "The total number of engagements offered to an agent.",
                            "example": 1
                          },
                          "agent_refused_count": {
                            "type": "integer",
                            "description": "A number of times an agent missed or declined an engagement.",
                            "example": 2
                          },
                          "agent_missed_count": {
                            "type": "integer",
                            "description": "The total number of agent refused engagements the agent missed.",
                            "example": 3
                          },
                          "ring_disconnect_count": {
                            "type": "integer",
                            "description": "The count of all engagements that have been routed to a rung an agent, but the connection to this specific agent is not completed.",
                            "example": 1
                          },
                          "agent_declined_count": {
                            "type": "integer",
                            "description": "The total number of agent refused engagements that the agent declined.",
                            "example": 1
                          },
                          "agent_message_sent_count": {
                            "type": "integer",
                            "description": "A count of all messages sent by an agent for a unique engagement ID.",
                            "example": 1
                          },
                          "hold_count": {
                            "type": "integer",
                            "description": "The number of times that a consumer was placed on hold.",
                            "example": 1
                          },
                          "conversation_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with an engagement and at least one additional agent, in milliseconds.",
                            "example": 123
                          },
                          "perview_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent previewing an engagement, in milliseconds.",
                            "example": 123
                          },
                          "conference_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with an engagement and at least one additional agent, in milliseconds.",
                            "example": 123
                          },
                          "conference_count": {
                            "type": "integer",
                            "description": "The number of conferences that occured.",
                            "example": 1
                          },
                          "hold_duration": {
                            "type": "number",
                            "description": "The amount of time that a consumer was placed on hold, in milliseconds. NOTE: A call may have multiple hold times.",
                            "example": 123
                          },
                          "wrap_up_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent completing engagement wrap-up, in milliseconds.",
                            "example": 123
                          },
                          "inbound_handled_count": {
                            "type": "integer",
                            "description": "The number of inbound engagements offered to and answered by an agent.",
                            "example": 1
                          },
                          "outbound_handle_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent handling an outbound engagement, in milliseconds.",
                            "example": 123
                          },
                          "warm_conference_duraton": {
                            "type": "number",
                            "description": "The amount of time spent on warm conferences, in milliseconds.",
                            "example": 123
                          },
                          "warm_transfer_duration": {
                            "type": "number",
                            "description": "The amount of time spent on warm transfers, in milliseconds.",
                            "example": 123
                          },
                          "ring_duration": {
                            "type": "number",
                            "description": "The amount of time between when an engagement is assigned to an agent and the agent answered, missed, or declined the engagement, in milliseconds.",
                            "example": 123
                          },
                          "agent_first_response_duration": {
                            "type": "number",
                            "description": "The amount of time it takes for an agent working a messaging channel to send the first message to a customer, in milliseconds.",
                            "example": 123
                          },
                          "dial_duration": {
                            "type": "number",
                            "description": "The amount of time spent dialing the customer, in milliseconds.",
                            "example": 123
                          },
                          "inbound_conversation_duration": {
                            "type": "number",
                            "description": "The amount of time that an agent spent on an inbound engagement in communication with the consumer, in milliseconds.",
                            "example": 123
                          },
                          "inbound_handle_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent handling an inbound engagement, in milliseconds.",
                            "example": 123
                          },
                          "outbound_handled_count": {
                            "type": "integer",
                            "description": "The number of outbound engagements offered to and answered by an agent.",
                            "example": 1
                          },
                          "outbound_conversation_duration": {
                            "type": "number",
                            "description": "The amount of time that an agent spent on an outbound engagement communicating with a consumer, in milliseconds.",
                            "example": 123
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:dataset_agent_performance:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:dataset_agent_performance:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/dataset/historical/agent_timecard": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical agent timecard dataset data",
        "description": "Generate a list of agent timecard dataset raw data.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:dataset_agent_timecard:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Listhistoricalagenttimecarddatasetdata",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the agent status for all agents that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the agent status for all agents that started in the given `from` and `to` time periods.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The ID of the agent set up on the agent profile.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "The team's specific ID.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent timecard dataset raw data response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the agent status for all agents that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the agent status for all agents that started in the given `from` and `to` time periods.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "work_session_id": {
                            "type": "string",
                            "description": "The unique identifier of an agent's work session.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The start timestamp of an agent's work session.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The end timestamp of an agent's work session.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The ID of the agent set up on the agent profile.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "The first and last name of the agent set up on the agent profile.",
                            "example": "agent_name_example"
                          },
                          "user_status": {
                            "type": "string",
                            "description": "The status of an agent during a work session.",
                            "example": "not_ready"
                          },
                          "user_sub_status": {
                            "type": "string",
                            "description": "The sub status of the agent who was in **Ready**, **Not Ready**, or **Occupied** status.",
                            "example": "launch time"
                          },
                          "team": {
                            "type": "object",
                            "properties": {
                              "team_id": {
                                "type": "string",
                                "description": "The team's specific ID on the Zoom platform that allows for viewing reports as a group of agents.",
                                "example": "team_id_example"
                              },
                              "team_name": {
                                "type": "string",
                                "description": "The specific name of a team on the Zoom platform that allows for viewing reports as a group of agents.",
                                "example": "team_name_example"
                              }
                            },
                            "description": "All teams related during the work session."
                          },
                          "ready_duration": {
                            "type": "number",
                            "description": "The time an agent spent in **Ready** status during an agent work session, in milliseconds.",
                            "example": 123
                          },
                          "occupied_duration": {
                            "type": "number",
                            "description": "The time an agent spent in **Occupied** status during an agent work session, in milliseconds.",
                            "example": 234
                          },
                          "not_ready_duration": {
                            "type": "number",
                            "description": "The time an agent spent in **Not Ready** status during an agent work session, in milliseconds.",
                            "example": 123
                          },
                          "work_session_duration": {
                            "type": "number",
                            "description": "The time between the start and end of an agents unique work session, in milliseconds.",
                            "example": 123
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:dataset_agent_timecard:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:dataset_agent_timecard:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/dataset/historical/engagement": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical engagement dataset data",
        "description": "Generate a list of engagement dataset raw data.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:dataset_engagement:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Listengagementdatasetdata",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the engagements that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the engagements that started in the given `from` and `to` time periods.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID array.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "bgdiH2SPQXmiD30nUiA4uA"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction.\n* inbound\n* outbound",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          },
          {
            "name": "enter_channel",
            "in": "query",
            "description": "The channel that the engagement was in when it entered the Zoom Contact Center.\n* `voice`\n* `video`\n* `messaging`\n* `email`",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "messaging"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "enter_channel_source",
            "in": "query",
            "description": "The source that the engagement was in when it entered entered the Zoom Contact Center.\n* `voice` - Only applies to voice channel. \n * `in_app_video` - Only applies to video channel.\n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "in_app_chat"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "in_app_video",
                "kiosk_video",
                "web_video",
                "in_app_chat",
                "in_video_chat",
                "web_chat",
                "sms",
                "facebook_messenger",
                "instagram",
                "team_chat",
                "whats_app",
                "email_domain"
              ]
            }
          },
          {
            "name": "dnis",
            "in": "query",
            "description": "The original number that was dialed for an engagement.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12762580117"
            }
          },
          {
            "name": "ani",
            "in": "query",
            "description": "The phone number that an engagement originated from.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12762580117"
            }
          },
          {
            "name": "queue_id",
            "in": "query",
            "description": "A queue's specific ID.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The ID of the agent who is set up on the agent profile.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "A team's specific ID.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The channel that the engagement contains.\n* `voice`\n* `video`\n * `messaging`\n* `email`",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "messaging"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_source",
            "in": "query",
            "description": "The source that the engagement contains.\n* `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n * `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n * `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "in_app_chat"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "in_app_video",
                "kiosk_video",
                "web_video",
                "in_app_chat",
                "in_video_chat",
                "web_chat",
                "sms",
                "facebook_messenger",
                "instagram",
                "team_chat",
                "whats_app",
                "email_domain"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Engagement dataset raw data response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the engagements that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the engagements that started in the given `from` and `to` time periods.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "engagements": {
                      "type": "array",
                      "description": "Information about the engagement.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction. \n* inbound\n * outbound",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The date and time when the engagement started, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `start_time` will be in UTC.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The date and time when the engagement ended, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `start_time` will be in UTC.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "enter_channel": {
                            "type": "string",
                            "description": "The channel that the engagement was in when it entered the Zoom Contact Center.\n* `voice`\n* `video`\n * `messaging`\n* `email`",
                            "example": "messaging",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "enter_channel_source": {
                            "type": "string",
                            "description": "The source that the engagement was in when it entered entered the Zoom Contact Center.\n* `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n * `facebook_messenger` - Only applies to messaging channel.\n * `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
                            "example": "in_app_chat",
                            "enum": [
                              "voice",
                              "in_app_video",
                              "kiosk_video",
                              "web_video",
                              "in_app_chat",
                              "in_video_chat",
                              "web_chat",
                              "sms",
                              "facebook_messenger",
                              "instagram",
                              "team_chat",
                              "whats_app",
                              "email_domain"
                            ]
                          },
                          "channels": {
                            "type": "array",
                            "description": "The all engagement related channel.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string",
                                  "description": "The channel that the engagement contains.\n * `voice`\n* `video`\n* `messaging`\n* `email`",
                                  "example": "voice",
                                  "enum": [
                                    "voice",
                                    "video",
                                    "messaging",
                                    "email"
                                  ]
                                },
                                "channel_source": {
                                  "type": "string",
                                  "description": "The source that the engagement contains.\n * `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
                                  "example": "voice",
                                  "enum": [
                                    "voice",
                                    "in_app_video",
                                    "kiosk_video",
                                    "web_video",
                                    "in_app_chat",
                                    "in_video_chat",
                                    "web_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "instagram",
                                    "team_chat",
                                    "whats_app",
                                    "email_domain"
                                  ]
                                }
                              }
                            }
                          },
                          "dnis": {
                            "type": "string",
                            "description": "The original number dialed for an engagement.",
                            "example": "+12762580117"
                          },
                          "ani": {
                            "type": "string",
                            "description": "The phone number that an engagement originated from.",
                            "example": "+12052075606"
                          },
                          "consumer": {
                            "type": "object",
                            "properties": {
                              "consumer_email": {
                                "type": "string",
                                "description": "The email address of the consumer.",
                                "example": "jack@example.com"
                              },
                              "consumer_name": {
                                "type": "string",
                                "description": "The name of the consumer.",
                                "example": "jack"
                              }
                            },
                            "description": "The consumer information."
                          },
                          "queues": {
                            "type": "array",
                            "description": "All queues related to the engagement.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "queue_id": {
                                  "type": "string",
                                  "description": "A queue's specific ID.",
                                  "example": "FRDFsxkcQeCnhR5eMBdOHw"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "A queue's specific name.",
                                  "example": "jack_queue"
                                }
                              }
                            }
                          },
                          "users": {
                            "type": "array",
                            "description": "All agents related to the engagement.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The ID of the agent who is set up on the agent profile.",
                                  "example": "FRDFsxkcQeCnhR5eMBdOHw"
                                },
                                "user_name": {
                                  "type": "string",
                                  "description": "The first and last name of the agent who is set up on the agent profile.",
                                  "example": "jack_agent"
                                }
                              }
                            }
                          },
                          "teams": {
                            "type": "array",
                            "description": "All teams related to the engagement.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "team_id": {
                                  "type": "string",
                                  "description": "A team's specific ID.",
                                  "example": "FRDFsxkcQeCnhR5eMBdOHw"
                                },
                                "team_name": {
                                  "type": "string",
                                  "description": "A team's specific name.",
                                  "example": "jack_team"
                                }
                              }
                            }
                          },
                          "duration": {
                            "type": "number",
                            "description": "The engagement's duration, in milliseconds.",
                            "example": 35678
                          },
                          "handle_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent handling engagements, in milliseconds.",
                            "example": 17922
                          },
                          "conversation_duration": {
                            "type": "number",
                            "description": "The amount of time that agents spent on engagements communicating with a consumer, in milliseconds.",
                            "example": 16901
                          },
                          "hold_count": {
                            "type": "integer",
                            "description": "The number of times that a consumer was placed on hold.",
                            "example": 3
                          },
                          "hold_duration": {
                            "type": "number",
                            "description": "The amount of time that a consumer was placed on hold. **NOTE:** A call may have multiple hold times.",
                            "example": 169
                          },
                          "warm_transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant with or without fully transferring the engagement.",
                            "example": 1
                          },
                          "warm_transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant and then fully transferred the engagements.",
                            "example": 1
                          },
                          "warm_transfer_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with another agent while the engagement was on hold, in milliseconds.",
                            "example": 1453
                          },
                          "direct_transfer_count": {
                            "type": "integer",
                            "description": "The number of direct transfers initiated.",
                            "example": 2
                          },
                          "transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of transfers an agent initiated, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channel, withno distinction between warm and direct.",
                            "example": 1
                          },
                          "transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of transfers an agent completed, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channels, with no distinction between warm and direct.",
                            "example": 1
                          },
                          "warm_conference_count": {
                            "type": "integer",
                            "description": "The number of warm conferences initiated.",
                            "example": 1
                          },
                          "warm_conference_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with another agent while the engagement was on hold, in milliseconds.",
                            "example": 283764
                          },
                          "conference_count": {
                            "type": "integer",
                            "description": "The number of conferences that occurred.",
                            "example": 1
                          },
                          "conference_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with an engagement and at least one additional agent, in milliseconds.",
                            "example": 283764
                          },
                          "wrap_up_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent completing engagement wrap-up, in milliseconds.",
                            "example": 143561
                          },
                          "abandoned_count": {
                            "type": "integer",
                            "description": "The number of times an end user abandoned an engagement before connecting with an agent.",
                            "example": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:dataset_engagement:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:dataset_engagement:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/dataset/historical/flow_performance": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical flow performance dataset data",
        "description": "Generate a list of flow performance dataset raw data.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:dataset_flow_performance:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Listhistoricalflowperformancedatasetdata",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the flows that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the flows that started in the given `from` and `to` time periods.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID array.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "bgdiH2SPQXmiD30nUiA4uA"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "flow_id",
            "in": "query",
            "description": "The ID of a flow on the Zoom platform.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "reRAiabVQSqpXxJVDbsy2Q"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "enter_channel",
            "in": "query",
            "description": "The channel that the engagement was in when it entered the Zoom Contact Center.\n* `voice`\n* `video`\n* `messaging`\n* `email`",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "messaging"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "enter_channel_source",
            "in": "query",
            "description": "The source that the engagement was in when it entered entered the Zoom Contact Center.\n* `voice` - Only applies to voice channel. \n * `in_app_video` - Only applies to video channel.\n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "in_app_chat"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "in_app_video",
                "kiosk_video",
                "web_video",
                "in_app_chat",
                "in_video_chat",
                "web_chat",
                "sms",
                "facebook_messenger",
                "instagram",
                "team_chat",
                "whats_app",
                "email_domain"
              ]
            }
          },
          {
            "name": "entry_point",
            "in": "query",
            "description": "The entry point where the engagement entered the flow.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12345678"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flow performance dataset raw data response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the flows that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the flows that started in the given `from` and `to` time periods.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
                      "example": "America/Los_Angeles"
                    },
                    "flows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "flow_id": {
                            "type": "string",
                            "description": "The specific ID of a flow on the Zoom platform.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The specific name of a flow on the Zoom platform.",
                            "example": "flow_example_name"
                          },
                          "flow_version": {
                            "type": "string",
                            "description": "The flow version that was used when an engagement entered it.",
                            "example": "2"
                          },
                          "flow_enter_time": {
                            "type": "string",
                            "description": "The timestamp when an engagement entered the flow.",
                            "example": "2021-12-10T00:15:00Z"
                          },
                          "flow_exit_time": {
                            "type": "string",
                            "description": "The timestamp when an engagement exited the flow.",
                            "example": "2021-12-10T00:15:00Z"
                          },
                          "enter_channel": {
                            "type": "string",
                            "description": "The channel that an engagement was in when it entered the flow.\n* `voice`\n* `video`\n* `messaging`\n * `email`",
                            "example": "messaging",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "enter_channel_source": {
                            "type": "string",
                            "description": "The source that an engagement was in when it entered the flow.\n* `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n * `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `instagram` - Only applies to messaging channel.\n * `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
                            "example": "in_app_chat",
                            "enum": [
                              "voice",
                              "in_app_video",
                              "kiosk_video",
                              "web_video",
                              "in_app_chat",
                              "in_video_chat",
                              "web_chat",
                              "sms",
                              "facebook_messenger",
                              "instagram",
                              "team_chat",
                              "whats_app",
                              "email_domain"
                            ]
                          },
                          "entry_point": {
                            "type": "string",
                            "description": "The entry point where the engagement entered the flow.",
                            "example": "+12345678"
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's unique identifier.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "flow_offered_count": {
                            "type": "integer",
                            "description": "The total number of engagements that were offered to a flow.",
                            "example": 1
                          },
                          "flow_upgraded_count": {
                            "type": "integer",
                            "description": "The number of times an engagement was upgraded within the flow, such as voice upgraded to video.",
                            "example": 1
                          },
                          "offerred_to_queue_count": {
                            "type": "integer",
                            "description": "Whether the engagement was assigned to a queue within the flow.",
                            "example": 1
                          },
                          "handled_by_queue_count": {
                            "type": "integer",
                            "description": "Whether the engagement was handled by a queue within the flow.",
                            "example": 1
                          },
                          "handled_by_first_offered_queue_count": {
                            "type": "integer",
                            "description": "The number of engagements that entered the flow and were handled by the first assigned queue.",
                            "example": 1
                          },
                          "offered_to_agent_count": {
                            "type": "integer",
                            "description": "Whether the engagement was assigned to an agent within the flow.",
                            "example": 2
                          },
                          "handled_by_agent_count": {
                            "type": "integer",
                            "description": "Whether the engagement was handled by an agent within the flow.",
                            "example": 1
                          },
                          "handled_by_first_offered_agent_count": {
                            "type": "integer",
                            "description": "The number of engagements that entered the flow and were handled by the first assigned agent.",
                            "example": 3
                          },
                          "flow_duration": {
                            "type": "number",
                            "description": "The amount of time an engagement toke from entering the Contact Center until it reached the first widget in the flow, in milliseconds.",
                            "example": 123
                          },
                          "first_widget_duration": {
                            "type": "number",
                            "description": "The amount of time an engagement toke from entering the Contact Center until it reached the first widget in the flow, in milliseconds.",
                            "example": 123
                          },
                          "first_offered_queue_duration": {
                            "type": "number",
                            "description": "The amount of time an engagement toke from entering the Contact Center until it was assigned to the first queue.",
                            "example": 123
                          },
                          "duration_to_first_handled_queue": {
                            "type": "number",
                            "description": "The amount of time from when engagements entered the flow until they were handled by the first assigned queue, in milliseconds.",
                            "example": 213
                          },
                          "duration_to_first_offered_agent": {
                            "type": "number",
                            "description": "The amount of time from when engagements entered the flow until they were assigned with an agent, in milliseconds.",
                            "example": 123
                          },
                          "duration_to_first_handled_agent": {
                            "type": "number",
                            "description": "The amount of time from when engagements entered the flow until they were handled by the first assigned agent, in milliseconds.",
                            "example": 123
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:dataset_flow_performance:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:dataset_flow_performance:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/dataset/historical/outbound_dialer_performance": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical outbound dialer performance dataset data",
        "description": "Generate a list of outbound dialer performance dataset raw data.\n \n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:dataset_outbound_dialer_performance:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Listhistoricaloutbounddialerperformancedatasetdata",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the outbound dialer engagements that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the outbound dialer engagements that started in the given `from` and `to` time periods.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID array.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "bgdiH2SPQXmiD30nUiA4uA"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "description": "The ID array of a campaign created on the Zoom platform.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "bgdiH2SPQXmiD30nUiA4uA"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "contact_list_id",
            "in": "query",
            "description": "The ID array of the contact list which the engagements have been loaded into.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "bgdiH2SPQXmiD30nUiA4uA"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dialer_method",
            "in": "query",
            "description": "The method used. Examples include `preview` and `progressive`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "progressive",
              "enum": [
                "progressive",
                "preview"
              ]
            }
          },
          {
            "name": "caller_id_number",
            "in": "query",
            "description": "The caller ID number that is displayed when engagements are attempted.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+1234567890"
            }
          },
          {
            "name": "consumer_number",
            "in": "query",
            "description": "The customer phone number that was attempted.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+1234567890"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The outbound dialer performance dataset raw data response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the outbound dialer engagements that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the outbound dialer engagements that started in the given `from` and `to` time periods.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "engagements": {
                      "type": "array",
                      "description": "Information about the engagement.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The engagement date and time when the engagement started, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `start_time` will be in UTC.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The date and time when the engagement ended, in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. `start_time` will be the time according to the timezone indicated by the user. If no timezone is provided, `start_time` will be in UTC.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "campaign": {
                            "type": "object",
                            "properties": {
                              "campaign_id": {
                                "type": "string",
                                "description": "The ID of a campaign created on the Zoom platform.",
                                "example": "reRAiabVQSqpXxJVDbsy2Q"
                              },
                              "campaign_name": {
                                "type": "string",
                                "description": "The name of a campaign created on the Zoom platform.",
                                "example": "campaign_example"
                              }
                            },
                            "description": "All campaignd created on the Zoom platform."
                          },
                          "contact_list": {
                            "type": "object",
                            "properties": {
                              "contact_list_id": {
                                "type": "string",
                                "description": "The ID of the contact list that the engagements have been loaded into.",
                                "example": "reRAiabVQSqpXxJVDbsy2Q"
                              },
                              "contact_list_name": {
                                "type": "string",
                                "description": "The name of the contact list that the engagements have been loaded into.",
                                "example": "jack_contact_list"
                              }
                            },
                            "description": "All contact list that the engagements have been loaded into."
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "contact_id": {
                                "type": "string",
                                "description": "The ID of the contact that the engagements are linked to.",
                                "example": "reRAiabVQSqpXxJVDbsy2Q"
                              },
                              "contact_name": {
                                "type": "string",
                                "description": "The name of the contact that the engagements are linked to.",
                                "example": "jack_contact"
                              }
                            },
                            "description": "All contact that the engagements are linked to."
                          },
                          "dialer_method": {
                            "type": "string",
                            "description": "The method used, such as `preview` or `progressive`.",
                            "example": "progressive",
                            "enum": [
                              "progressive",
                              "preview"
                            ]
                          },
                          "dnc_flag": {
                            "type": "boolean",
                            "description": "Whether the prospective engagement has been flagged for a DNC list. This would be `true` or `false`.",
                            "example": true
                          },
                          "caller_id_number": {
                            "type": "string",
                            "description": "The caller ID number that is displayed when engagements are attempted from.",
                            "example": "+1234567890"
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The customer phone number that was attempted.",
                            "example": "+1234567890"
                          },
                          "calls_answered_count": {
                            "type": "integer",
                            "description": "The number of engagements answered.",
                            "example": 3
                          },
                          "calls_failed_count": {
                            "type": "integer",
                            "description": "The number of engagements failed.",
                            "example": 2
                          },
                          "calls_with_amd_count": {
                            "type": "integer",
                            "description": "The number of engagements with AMD.",
                            "example": 2
                          },
                          "calls_blocked_count": {
                            "type": "integer",
                            "description": "The number of engagements blocked.",
                            "example": 1
                          },
                          "contacts_connected_count": {
                            "type": "integer",
                            "description": "The number of engagements connected to the consumer.",
                            "example": 1
                          },
                          "dnc_count": {
                            "type": "integer",
                            "description": "The number of phone numbers that appear on the do not call list.",
                            "example": 1
                          },
                          "engagement_duration": {
                            "type": "number",
                            "description": "The total duration of the engagement. From when the engagement starts ringing until it is hung up, in milliseconds.",
                            "example": 321
                          },
                          "response_duration": {
                            "type": "number",
                            "description": "The amount of time the dialer takes to connect an agent to a live call after the customer answers the phone, in milliseconds.",
                            "example": 123
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:dataset_outbound_dialer_performance:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:dataset_outbound_dialer_performance:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/dataset/historical/queue_performance": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical queue performance dataset data",
        "description": "Generate a list of queue performance dataset raw data.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:dataset_queue_performance:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Listhistoricalqueueperformancedatasetdata",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the queues that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the queues that started in the given `from` and `to` time periods.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The queue task's engagement ID array.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "bgdiH2SPQXmiD30nUiA4uA"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The queue task direction.\n* inbound\n* outbound",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          },
          {
            "name": "queue_id",
            "in": "query",
            "description": "A queue's specific ID.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "FRDFsxkcQeCnhR5eMBdOHw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The channel that the queue task enters.\n* `voice`\n* `video`\n * `messaging`\n* `email`",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "messaging"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_source",
            "in": "query",
            "description": "The source that the queue task enters.\n* `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n * `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n * `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "in_app_chat"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "voice",
                "in_app_video",
                "kiosk_video",
                "web_video",
                "in_app_chat",
                "in_video_chat",
                "web_chat",
                "sms",
                "facebook_messenger",
                "instagram",
                "team_chat",
                "whats_app",
                "email_domain"
              ]
            }
          },
          {
            "name": "origin_method",
            "in": "query",
            "description": "How the engagement was routed to the queue.\n* `take_over`\n * `hand_over`\n* `callback`\n* `scheduled_callback`\n* `callback_retry`\n * `outbound`\n* `conference`\n* `release`\n* `warm_transfer_to_agent`\n * `warm_transfer_to_queue`\n* `direct_transfer_to_agent`\n* `direct_transfer_to_queue`\n * `transfer_to_agent`\n* `transfer_to_queue`\n* `route_to_queue`\n* `route_to_agent`\n * `upgrade_to_voice`\n* `upgrade_to_video`\n* `outbound_progressive_dial`\n * `drop_in_video`\n* `invite_agent`\n* `involve`\n* `outbound_preview_dial`",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "take_over"
              ],
              "items": {
                "type": "string"
              },
              "enum": [
                "take_over",
                "hand_over",
                "callback",
                "scheduled_callback",
                "callback_retry",
                "outbound",
                "conference",
                "release",
                "warm_transfer_to_agent",
                "warm_transfer_to_queue",
                "direct_transfer_to_agent",
                "direct_transfer_to_queue",
                "transfer_to_agent",
                "transfer_to_queue",
                "route_to_queue",
                "route_to_agent",
                "upgrade_to_voice",
                "upgrade_to_video",
                "outbound_progressive_dial",
                "drop_in_video",
                "invite_agent",
                "involve",
                "outbound_preview_dial"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Queue performance dataset raw data response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [Timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\n. The default is `UTC`.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format to pull the queues that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\nPulls the queues that started in the given `from` and `to` time periods.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "queues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "enter_time": {
                            "type": "string",
                            "description": "The timestamp when an engagement entered the queue.",
                            "example": "2021-12-10T00:00:00Z"
                          },
                          "exit_time": {
                            "type": "string",
                            "description": "The timestamp when an engagement exited the queue.",
                            "example": "2021-12-10T10:30:00Z"
                          },
                          "queue_id": {
                            "type": "string",
                            "description": "A queue's specific ID.",
                            "example": "reRAiabVQSqpXxJVDbsy2Q"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "A queue's  specific name.",
                            "example": "queue_example_name"
                          },
                          "enter_channel": {
                            "type": "string",
                            "description": "The channel that the queue task enters.\n * `voice`\n* `video`\n* `messaging`\n* `email`",
                            "example": "messaging",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "enter_channel_source": {
                            "type": "string",
                            "description": "The source that the queue task enters.\n* `voice` - Only applies to voice channel. \n* `in_app_video` - Only applies to video channel.\n* `kiosk_video` - Only applies to video channel. \n* `web_video` - Only applies to video channel. \n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n * `facebook_messenger` - Only applies to messaging channel.\n * `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whats_app` - Only applies to messaging channel.\n* `email_domain` - Only applies to email channel.",
                            "example": "in_app_chat",
                            "enum": [
                              "voice",
                              "in_app_video",
                              "kiosk_video",
                              "web_video",
                              "in_app_chat",
                              "in_video_chat",
                              "web_chat",
                              "sms",
                              "facebook_messenger",
                              "instagram",
                              "team_chat",
                              "whats_app",
                              "email_domain"
                            ]
                          },
                          "origin_method": {
                            "type": "string",
                            "description": "How the engagement was routed to the queue.\n * `take_over`\n* `hand_over`\n* `callback`\n* `scheduled_callback`\n * `callback_retry`\n* `outbound`\n* `conference`\n* `release`\n * `warm_transfer_to_agent`\n* `warm_transfer_to_queue`\n * `direct_transfer_to_agent\n* direct_transfer_to_queue`\n * `transfer_to_agent`\n* `transfer_to_queue`\n* `route_to_queue`\n * `route_to_agent`\n* `upgrade_to_voice`\n* `upgrade_to_video`\n * `outbound_progressive_dial`\n* `drop_in_video`\n* `invite_agent`\n * `involve`\n* `outbound_preview_dial`",
                            "example": "take_over",
                            "enum": [
                              "take_over",
                              "hand_over",
                              "callback",
                              "scheduled_callback",
                              "callback_retry",
                              "outbound",
                              "conference",
                              "release",
                              "warm_transfer_to_agent",
                              "warm_transfer_to_queue",
                              "direct_transfer_to_agent",
                              "direct_transfer_to_queue",
                              "transfer_to_agent",
                              "transfer_to_queue",
                              "route_to_queue",
                              "route_to_agent",
                              "upgrade_to_voice",
                              "upgrade_to_video",
                              "outbound_progressive_dial",
                              "drop_in_video",
                              "invite_agent",
                              "involve",
                              "outbound_preview_dial"
                            ]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The queue task direction.\n* inbound\n* outbound",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "queue_offered_count": {
                            "type": "integer",
                            "description": "The number of engagements routed into the queue for agents to answer.",
                            "example": 1
                          },
                          "abandoned_count": {
                            "type": "integer",
                            "description": "The number of times an end user abandoned an engagement before connecting with an agent. Also the sum of Short Abandons and Long Abandons.",
                            "example": 1
                          },
                          "short_abandons_count": {
                            "type": "integer",
                            "description": "The number of engagements that were abandoned before the threshold defined for the queue.",
                            "example": 0
                          },
                          "long_abandons_count": {
                            "type": "integer",
                            "description": "The number of engagements that were abandoned after the threshold defined for the queue.",
                            "example": 1
                          },
                          "overflow_count": {
                            "type": "integer",
                            "description": "The number of engagements that entered and left a queue without being answered.  This occurs because the capacity of available agent resources in queue was exceeded.",
                            "example": 1
                          },
                          "inbound_handled_count": {
                            "type": "integer",
                            "description": "The number of inbound engagements offered to and answered by an agent.",
                            "example": 2
                          },
                          "in_queue_wait_duration": {
                            "type": "number",
                            "description": "The amount of time the consumer spent waiting live - not in callback - in the queue before the engagement was answered, overflowed, or abandoned, in milliseconds.",
                            "example": 123
                          },
                          "abandon_duration": {
                            "type": "number",
                            "description": "The amount of time a customer waited in a specific queue before abandoning the engagement. Only applies to the queue where the abandonment actually occurred, in milliseconds.",
                            "example": 123
                          },
                          "speed_of_answer_duration": {
                            "type": "number",
                            "description": "The amount of time an engagement waited in the queue before an agent answered, in milliseconds.\n NOTE: This metric does not include engagements that agents did not answer.",
                            "example": 123
                          },
                          "inbound_handle_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent handling inbound engagements, in milliseconds.",
                            "example": 123
                          },
                          "inbound_conversation_duration": {
                            "type": "number",
                            "description": "The amount of time that an agent spent on an inbound engagement in communication with the consumer, in milliseconds.",
                            "example": 123
                          },
                          "inbound_wrap_up_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent completing inbound engagement wrap-up, in milliseconds.",
                            "example": 123
                          },
                          "outbound_count": {
                            "type": "integer",
                            "description": "The number of outbound engagements that entered a queue, regardless of a successful connection.",
                            "example": 1
                          },
                          "outbound_handled_count": {
                            "type": "integer",
                            "description": "The number of outbound engagements handled by agents, regardless of successful connection or not.",
                            "example": 1
                          },
                          "outbound_connected_count": {
                            "type": "integer",
                            "description": "The number of outbound engagements that resulted in a successful connection between a customer and an agent.",
                            "example": 1
                          },
                          "outbound_dial_duration": {
                            "type": "number",
                            "description": "The amount of time spent dialing the customer, in milliseconds.",
                            "example": 123
                          },
                          "outbound_handle_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent handling outbound engagements. This also includes the time dialing a customer, in milliseconds.",
                            "example": 123
                          },
                          "outbound_conversation_duration": {
                            "type": "number",
                            "description": "The amount of time that an agent spent on an outbound engagement communicating with a consumer, in milliseconds.",
                            "example": 123
                          },
                          "outbound_wrap_up_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent completing outbound engagement wrap-up, in milliseconds.",
                            "example": 123
                          },
                          "callback_registered_count": {
                            "type": "integer",
                            "description": "The number of engagements that entered the queue and requested a callback, or scheduled a callback via the dedicated web page.",
                            "example": 1
                          },
                          "callback_abandoned_count": {
                            "type": "integer",
                            "description": "The number of callbacks where an agent was already connected, but not successfully connected to the consumer.",
                            "example": 1
                          },
                          "callback_canceled_count": {
                            "type": "integer",
                            "description": "The number of callbacks which consumers choose to cancel and instead wait in the queue.",
                            "example": 1
                          },
                          "callback_timeout_count": {
                            "type": "integer",
                            "description": "The number of callbacks placed but did not speak to an agent before the callback expired.",
                            "example": 1
                          },
                          "callback_handled_count": {
                            "type": "integer",
                            "description": "The number of callbacks accepted by available agents.",
                            "example": 1
                          },
                          "callback_wait_duration": {
                            "type": "number",
                            "description": "The amount of time from a callback being registered until either the agent calls back, the callback expires, or the callback is canceled, in milliseconds.",
                            "example": 123
                          },
                          "callback_pending_duration": {
                            "type": "number",
                            "description": "The amount of time from when the agent called back until the customer answered the call, customer did not answer or the agent hung up, in milliseconds.",
                            "example": 123
                          },
                          "callback_handle_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent handling callbacks, in milliseconds.",
                            "example": 123
                          },
                          "callback_conversation_duration": {
                            "type": "number",
                            "description": "The amount of time that an agent spent on an engagement communicating with a consumer, in milliseconds.",
                            "example": 123
                          },
                          "callback_wrap_up_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent completing after call work, in milliseconds.",
                            "example": 123
                          },
                          "handle_count": {
                            "type": "integer",
                            "description": "The number of inbound (including callback) and outbound engagements handled by the queue.",
                            "example": 1
                          },
                          "hold_count": {
                            "type": "integer",
                            "description": "The number of times that a consumer was placed on hold. ",
                            "example": 1
                          },
                          "warm_transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant with or without fully transferring the engagement.",
                            "example": 1
                          },
                          "warm_transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant and then fully transferred the engagements.",
                            "example": 1
                          },
                          "direct_transfer_count": {
                            "type": "integer",
                            "description": "The number of direct transfers initiated.",
                            "example": 2
                          },
                          "transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of transfers an agent initiated, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channels (no distinction between warm and direct).",
                            "example": 1
                          },
                          "transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of transfers an agent completed, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channels (no distinction between warm and direct).",
                            "example": 1
                          },
                          "warm_conference_count": {
                            "type": "integer",
                            "description": "The number of warm conferences initiated.",
                            "example": 1
                          },
                          "conference_count": {
                            "type": "integer",
                            "description": "The number of conferences that occurred.",
                            "example": 1
                          },
                          "auto_close_disconnect_count": {
                            "type": "integer",
                            "description": "The count of messaging and email engagements that are auto closed by the system after not receiving a response from the consumer after a defined period of time.",
                            "example": 1
                          },
                          "handle_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent handling engagements, in milliseconds.",
                            "example": 17922
                          },
                          "conversation_duration": {
                            "type": "number",
                            "description": "The amount of time that agents spent on engagements communicating with a consumer, in milliseconds.",
                            "example": 16901
                          },
                          "wrap_up_duration": {
                            "type": "number",
                            "description": "The amount of time agents spent completing engagement wrap-up, in milliseconds.",
                            "example": 143561
                          },
                          "hold_duration": {
                            "type": "number",
                            "description": "The amount of time that a consumer was placed on hold, in milliseconds. NOTE: A call may have multiple hold times.",
                            "example": 169
                          },
                          "conference_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with an engagement and at least one additional agent, in milliseconds.",
                            "example": 283764
                          },
                          "warm_transfer_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with another agent while the engagement was on hold, in milliseconds.",
                            "example": 1453
                          },
                          "warm_conference_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with another agent while the engagement was on hold, in milliseconds.",
                            "example": 283764
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:dataset_queue_performance:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:dataset_queue_performance:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/log/historical/engagement": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical engagement log data",
        "description": "Retrieve a list of all historical engagement log data. The log captures all details of closed engagements, including a timeline and key events, providing a clear record for tracking and analysis.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:engagement_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Listhistoricalengagementlogs",
        "parameters": [
          {
            "name": "timezone",
            "in": "query",
            "description": "The [timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\nThe default is UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "UTC"
            }
          },
          {
            "name": "start_time_from",
            "in": "query",
            "description": "The start time to pull the engagement logs that began after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "pattern": "YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
              "format": "date-time",
              "example": "2025-05-21T19:17:00Z"
            }
          },
          {
            "name": "start_time_to",
            "in": "query",
            "description": "Required only when the `start_time_from` parameter is specified.\n Pulls the engagement logs that started in the given `start_time_from` and `start_time_to` time periods.",
            "required": false,
            "schema": {
              "pattern": "YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
              "format": "date-time",
              "example": "2025-05-26T11:22:22Z"
            }
          },
          {
            "name": "end_time_from",
            "in": "query",
            "description": "The engagement end time to pull the engagement logs that ended after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "pattern": "YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
              "format": "date-time",
              "example": "2025-05-25T19:17:45Z"
            }
          },
          {
            "name": "end_time_to",
            "in": "query",
            "description": "Required only when the `end_time_from` parameter is specified.\n Pulls the engagement logs that started in the given `end_time_from` and `end_time_to` time periods.",
            "required": false,
            "schema": {
              "pattern": "YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
              "format": "date-time",
              "example": "2025-05-30T06:08:42Z"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "PWHDRE7Downvsdf"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction.\n* inbound\n* outbound\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "outbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          },
          {
            "name": "channels",
            "in": "query",
            "description": "The name of the channels on the Zoom platform.\n* voice\n* video\n * messaging\n* email",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "video"
              ],
              "items": {
                "type": "string",
                "enum": [
                  "voice",
                  "video",
                  "messaging",
                  "email"
                ]
              }
            }
          },
          {
            "name": "channel_sources",
            "in": "query",
            "description": "The name of sources on the Zoom platform that specifically relate to a channel.\n* `voice` - voice\n* `web_video` - web video\n* `in_app_video` - in-app video\n* `kiosk_video` - kiosk video\n* `web_chat` - web chat\n * `in_app_chat` - in-app chat\n* `team_chat` - Zoom team chat\n* `sms` - SMS\n* `facebook_messenger` - Facebook messenger\n* `instagram` - Instagram\n * `whatsapp` - Whatsapp\n* `email_address` - email",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "web_video"
              ],
              "items": {
                "type": "string",
                "enum": [
                  "voice",
                  "web_video",
                  "in_app_video",
                  "kiosk_video",
                  "web_chat",
                  "in_app_chat",
                  "team_chat",
                  "sms",
                  "facebook_messenger",
                  "instagram",
                  "whatsapp",
                  "email_address"
                ]
              }
            }
          },
          {
            "name": "consumer_name",
            "in": "query",
            "description": "The consumer name or consumer email or consumer phone number. This is a fuzzy search filter.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Bruce Lee"
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "A queue's specific ID list.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "_dkUfugn8eDFkRohArKqQ"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "The ID list of the agents who are set up on the agents' profile.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "i5iDfUroHKU&*FH"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_ids",
            "in": "query",
            "description": "The team's specific ID list.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "agent team1"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "flow_ids",
            "in": "query",
            "description": "The flows' specific ID list.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "sd8erwgdsUNB_3Vw"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "blocked",
            "in": "query",
            "description": "Is blocked.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "event_names",
            "in": "query",
            "description": "The events' name list.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "engagement.start"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "caller_id",
            "in": "query",
            "description": "The caller's phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+19135551212"
            }
          },
          {
            "name": "ani_from",
            "in": "query",
            "description": "The phone number that an engagement originated from.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+19135551212"
            }
          },
          {
            "name": "dnis_to",
            "in": "query",
            "description": "The original number that was dialed for an engagement.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12095551212"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generate a list of historical engagement logs data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timezone": {
                      "type": "string",
                      "description": "The [timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query.\nThe default is **UTC**.",
                      "example": "UTC"
                    },
                    "engagement_logs": {
                      "type": "array",
                      "description": "The engagement log list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's specific ID.",
                            "example": "t0VAFD7FDkdfwHxlN40_w"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction.\n* inbound\n* outbound",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "channels": {
                            "type": "array",
                            "description": "The channels on the Zoom platform such as voice, video, digital, and messaging.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string",
                                  "description": "The name of the channels on the Zoom platform.\n* voice\n* video\n* messaging\n* email",
                                  "example": "video",
                                  "enum": [
                                    "voice",
                                    "video",
                                    "messaging",
                                    "email"
                                  ]
                                },
                                "channel_source": {
                                  "type": "string",
                                  "description": "The name of sources on the Zoom platform that specifically relate to a channel.\n* `voice` - Only applies to voice channel.\n* `in_app_video` - Only applies to video channel.\n* `kiosk_video` - Only applies to video channel.\n* `web_video` - Only applies to video channel.\n* `in_app_chat` - Only applies to messaging channel.\n* `in_video_chat` - Only applies to messaging channel.\n* `web_chat` - Only applies to messaging channel.\n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `instagram` - Only applies to messaging channel.\n* `team_chat` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.\n* `email_address` - Only applies to email channel.",
                                  "example": "web_video",
                                  "enum": [
                                    "voice",
                                    "web_video",
                                    "in_app_video",
                                    "kiosk_video",
                                    "web_chat",
                                    "in_app_chat",
                                    "team_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "instagram",
                                    "whatsapp",
                                    "email_address"
                                  ]
                                }
                              },
                              "description": "The channels on the Zoom platform such as voice, video, digital, and messaging."
                            }
                          },
                          "enter_channel": {
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "The channel that the engagement was in when it entered the Zoom Contact Center. \n* voice \n* video \n* messaging \n* email",
                                "example": "voice",
                                "enum": [
                                  "voice",
                                  "video",
                                  "messaging",
                                  "email"
                                ]
                              },
                              "channel_source": {
                                "type": "string",
                                "description": "The name of enter sources on the Zoom platform that specifically relate to a channel.\n * `voice` - voice\n* `web_video` - web video\n* `in_app_video` - in-app video\n* `kiosk_video` - kiosk video\n* `web_chat` - web chat\n* `in_app_chat` - in-app chat\n* `team_chat` - Zoom team chat\n* `sms` - SMS\n* `facebook_messenger` - Facebook messenger\n* `instagram` - Instagram\n * `whatsapp` - Whatsapp\n* `email_address` - email",
                                "example": "voice",
                                "enum": [
                                  "voice",
                                  "web_video",
                                  "in_app_video",
                                  "kiosk_video",
                                  "web_chat",
                                  "in_app_chat",
                                  "team_chat",
                                  "sms",
                                  "facebook_messenger",
                                  "instagram",
                                  "whatsapp",
                                  "email_address"
                                ]
                              }
                            },
                            "description": "The channel that the engagement was in when it entered the Contact Center."
                          },
                          "start_time": {
                            "pattern": "YYYY-MM-DDTHH:MM:SSZ",
                            "type": "string",
                            "description": "The engagement start time.",
                            "format": "date-time",
                            "example": "2025-05-26T16:30:08Z"
                          },
                          "end_time": {
                            "pattern": "YYYY-MM-DDTHH:MM:SSZ",
                            "type": "string",
                            "description": "The engagement end time.",
                            "format": "date-time",
                            "example": "2025-05-26T16:32:18Z"
                          },
                          "consumer": {
                            "type": "object",
                            "properties": {
                              "consumer_name": {
                                "type": "string",
                                "description": "The consumer name.",
                                "example": "Jill Chill"
                              },
                              "consumer_email": {
                                "type": "string",
                                "description": "The consumer email.",
                                "example": "jchill@example.com"
                              },
                              "consumer_number": {
                                "type": "string",
                                "description": "The consumer number.",
                                "example": "+12095551212"
                              }
                            },
                            "description": "The consumer's information."
                          },
                          "queues": {
                            "type": "array",
                            "description": "All queues related to the engagement.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "queue_id": {
                                  "type": "string",
                                  "description": "A queue's specific ID.",
                                  "example": "_dkUfugn8eDFkRohArKqQ"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "A queue's specific name.",
                                  "example": "my_queue"
                                }
                              },
                              "description": "The queue related to the engagement."
                            }
                          },
                          "users": {
                            "type": "array",
                            "description": "All agents related to the engagement.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The ID of the agent who is set up on the agent profile.",
                                  "example": "i5iDfUroHKU&*FH"
                                },
                                "user_name": {
                                  "type": "string",
                                  "description": "The first and last name of the agent who is set up on the agent profile.",
                                  "example": "kevin_agent"
                                }
                              },
                              "description": "The agent related to the engagement."
                            }
                          },
                          "teams": {
                            "type": "array",
                            "description": "All teams related to the engagement.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "team_id": {
                                  "type": "string",
                                  "description": "A team's specific ID.",
                                  "example": "wdhgyuYD74wUF"
                                },
                                "team_name": {
                                  "type": "string",
                                  "description": "A team's name.",
                                  "example": "agent team1"
                                }
                              },
                              "description": "The team related to the engagement."
                            }
                          },
                          "flows": {
                            "type": "array",
                            "description": "All flows related to the engagement",
                            "items": {
                              "type": "object",
                              "properties": {
                                "flow_id": {
                                  "type": "string",
                                  "description": "A flow's specific ID.",
                                  "example": "CBDH87436Hdjse"
                                },
                                "flow_name": {
                                  "type": "string",
                                  "description": "A flow's name.",
                                  "example": "flow1"
                                }
                              },
                              "description": "The flow related to the engagement."
                            }
                          },
                          "events": {
                            "type": "array",
                            "description": "All events related to the engagement",
                            "items": {
                              "type": "object",
                              "properties": {
                                "event_id": {
                                  "type": "string",
                                  "description": "A event's specific ID.",
                                  "example": "rF61SnVrQjyLE2Je7a40uw"
                                },
                                "event_name": {
                                  "type": "string",
                                  "description": "A event's name.",
                                  "example": "engagement.start"
                                }
                              }
                            }
                          },
                          "caller_id": {
                            "type": "string",
                            "description": "The caller's phone number.",
                            "example": "+19135551212"
                          },
                          "ani_from": {
                            "type": "string",
                            "description": "The phone number that an engagement originated from.",
                            "example": "+19135551212"
                          },
                          "dnis_to": {
                            "type": "string",
                            "description": "The original number that was dialed for an engagement.",
                            "example": "+12095551212"
                          },
                          "duration": {
                            "type": "number",
                            "description": "The engagement's duration, in milliseconds.",
                            "example": 38000
                          },
                          "hold_count": {
                            "type": "integer",
                            "description": "The number of times that a consumer was placed on hold.",
                            "example": 3
                          },
                          "hold_duration": {
                            "type": "number",
                            "description": "The amount of time that a consumer was placed on hold, in **milliseconds**. **NOTE** - A call may have multiple hold times.",
                            "example": 10000
                          },
                          "warm_transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant with or without fully transferring the engagement.",
                            "example": 1
                          },
                          "warm_transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of voice or video engagements an agent answered and then warm transferred with another participant and then fully transferred the engagements.",
                            "example": 1
                          },
                          "warm_transfer_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with another agent while the engagement was on hold, in **milliseconds**.",
                            "example": 147000
                          },
                          "direct_transfer_count": {
                            "type": "integer",
                            "description": "The number of direct transfers.",
                            "example": 0
                          },
                          "transfer_initiated_count": {
                            "type": "integer",
                            "description": "The number of direct transfers initiated.",
                            "example": 0
                          },
                          "transfer_completed_count": {
                            "type": "integer",
                            "description": "The number of direct transfers completed.",
                            "example": 0
                          },
                          "warm_conference_count": {
                            "type": "integer",
                            "description": "The number of warm conferences initiated.",
                            "example": 0
                          },
                          "warm_conference_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with an engagement and at least one additional agent, in **milliseconds**.",
                            "example": 10000
                          },
                          "conference_count": {
                            "type": "integer",
                            "description": "The number of conferences that occurred.",
                            "example": 3
                          },
                          "blocked": {
                            "type": "boolean",
                            "description": "Is blocked.\n* true\n* false",
                            "example": false
                          },
                          "conference_duration": {
                            "type": "number",
                            "description": "The amount of time an agent spent in conversation with an engagement and at least one additional agent, in **milliseconds**.",
                            "example": 54000
                          },
                          "voicemail_count": {
                            "type": "integer",
                            "description": "The number of voiceemail.",
                            "example": 3
                          },
                          "dispositions": {
                            "type": "array",
                            "description": "The dispositions.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "disposition_id": {
                                  "type": "string",
                                  "description": "A disposition's specific ID.",
                                  "example": "sUEMfweg34GFE"
                                },
                                "disposition_name": {
                                  "type": "string",
                                  "description": "A disposition's name.",
                                  "example": "kv"
                                }
                              },
                              "description": "The disposition related to the engagement."
                            }
                          },
                          "notes": {
                            "type": "array",
                            "description": "The notes.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "note_id": {
                                  "type": "string",
                                  "description": "A note's specific ID.",
                                  "example": "sdfwe67gaDDG"
                                },
                                "note_content": {
                                  "type": "string",
                                  "description": "The content of this note.",
                                  "example": "content info"
                                },
                                "user_id": {
                                  "type": "string",
                                  "description": "An agent's specific ID.",
                                  "example": "CBVD4fwdfw3DF"
                                }
                              },
                              "description": "The note related to the engagement."
                            }
                          },
                          "transcript_url": {
                            "type": "string",
                            "description": "The transcript URL, in `/v2/contact_center/engagements/transcripts/download/{engagementId}` format.",
                            "example": "/v2/contact_center/engagements/transcripts/download/t0VAFD7FDkdfwHxlN40_w"
                          },
                          "survey_id": {
                            "type": "string",
                            "description": "The survey specfic ID.",
                            "example": "sghewyDF73FDE"
                          }
                        },
                        "description": "The engagement log detail."
                      }
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:engagement_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:engagement_log:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/log/historical/journey": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List historical Zoom Phone to Contact Center call journey data",
        "description": "View the complete customer journey of a call across both Contact Center and Zoom Phone.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:call_journey_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "ListhistoricalZoomphonetozcccalljourneydata",
        "parameters": [
          {
            "name": "timezone",
            "in": "query",
            "description": "The [timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query. The default is UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "UTC"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time to pull the engagement logs that started after this date and time. The response only includes one month's worth of data. If there is no specified start date, the API returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "pattern": "YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
              "format": "date-time",
              "example": "2025-05-21T19:17:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. \nPulls the engagement logs that started in the given `from` and `to` time periods.",
            "required": false,
            "schema": {
              "pattern": "YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
              "format": "date-time",
              "example": "2025-05-26T11:22:22Z"
            }
          },
          {
            "name": "global_engagement_id",
            "in": "query",
            "description": "The global engagement ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "PWHDRE7Downvsdf"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction.\n* inbound\n* outbound",
            "required": false,
            "schema": {
              "type": "string",
              "example": "outbound",
              "enum": [
                "outbound",
                "inbound"
              ]
            }
          },
          {
            "name": "channels",
            "in": "query",
            "description": "The name of the channels on the Zoom platform.\n* voice\n* video\n * messaging\n* email",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "video"
              ],
              "items": {
                "type": "string",
                "enum": [
                  "voice",
                  "video",
                  "messaging",
                  "email"
                ]
              }
            }
          },
          {
            "name": "channel_sources",
            "in": "query",
            "description": "The name of sources on the Zoom platform that specifically relate to a channel.\n* `voice` - voice\n* `web_video` - web video\n* `in_app_video` - in-app video\n* `kiosk_video` - kiosk video\n* `web_chat` - web chat(web)\n * `in_app_chat` - in-app chat\n* `team_chat` - Zoom team chat\n* `sms` - SMS\n* `facebook_messenger` - Facebook messenger\n* `instagram` - Instagram\n * `whatsapp` - Whatsapp\n* `email_address` - email",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "web_video"
              ],
              "items": {
                "type": "string",
                "enum": [
                  "voice",
                  "web_video",
                  "in_app_video",
                  "kiosk_video",
                  "web_chat",
                  "in_app_chat",
                  "team_chat",
                  "sms",
                  "facebook_messenger",
                  "instagram",
                  "whatsapp",
                  "email_address"
                ]
              }
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "A queue's specific ID list.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "_dkUfugn8eDFkRohArKqQ"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "The ID list of the agents who are set up on the agents profile.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [
                "i5iDfUroHKU&*FH"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generate a list of historical Zoom Phone to Contact Center call journey data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "journeys": {
                      "type": "array",
                      "description": "All Zoom Phone and Contact Center call journeys. ",
                      "items": {
                        "type": "object",
                        "properties": {
                          "global_engagement_id": {
                            "type": "string",
                            "description": "The global engagement ID.",
                            "example": "7512200802025393153"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction.\n* inbound\n* outbound",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "channels": {
                            "type": "array",
                            "description": "All channels on the Zoom platform such as voice, video, or digital.",
                            "example": [
                              "voice"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string",
                                  "description": "The name of the channels on the Zoom platform.\n* voice\n* video\n* messaging\n* email",
                                  "example": "voice",
                                  "enum": [
                                    "voice",
                                    "video",
                                    "messaging",
                                    "email"
                                  ]
                                },
                                "channel_source": {
                                  "type": "string",
                                  "description": "The name of sources on the Zoom platform that specifically relate to a channel.\n- `voice` - Only applies to voice channel.\n- `in_app_video` - Only applies to video channel.\n- `kiosk_video` - Only applies to video channel.\n- `web_video` - Only applies to video channel.\n- `in_app_chat` - Only applies to messaging channel.\n- `in_video_chat` - Only applies to messaging channel.\n- `web_chat` - Only applies to messaging channel.\n- `sms` - Only applies to messaging channel.\n- `facebook_messenger` - Only applies to messaging channel.\n- `instagram` - Only applies to messaging channel.\n- `team_chat` - Only applies to messaging channel.\n- `whatsapp` - Only applies to messaging channel.\n- `email_address` - Only applies to email channel.",
                                  "example": "voice",
                                  "enum": [
                                    "voice",
                                    "web_video",
                                    "in_app_video",
                                    "kiosk_video",
                                    "web_chat",
                                    "in_app_chat",
                                    "team_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "instagram",
                                    "whatsapp",
                                    "email_address"
                                  ]
                                }
                              },
                              "description": "The channel related to this engagement."
                            }
                          },
                          "ani_from": {
                            "type": "string",
                            "description": "The phone number that an engagement originated from.",
                            "example": "+19135551212"
                          },
                          "dnis_to": {
                            "type": "string",
                            "description": "The original number that was dialed for an engagement.",
                            "example": "+12095551212"
                          },
                          "start_time": {
                            "pattern": "YYYY-MM-DDTHH:MM:SSZ",
                            "type": "string",
                            "description": "The engagement's start time.",
                            "format": "date-time",
                            "example": "2025-05-26T16:32:18Z"
                          },
                          "consumer": {
                            "type": "object",
                            "properties": {
                              "consumer_number": {
                                "type": "string",
                                "description": "The consumer's number.",
                                "example": "+19135551212"
                              }
                            },
                            "description": "The consumer's information."
                          },
                          "queues": {
                            "type": "array",
                            "description": "All queues related to the engagement.",
                            "example": [
                              {
                                "queue_id": "sfgwHE&gEFHE",
                                "queue_name": "callen-voice-queue"
                              }
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "queue_id": {
                                  "type": "string",
                                  "description": "A queue's specific ID.",
                                  "example": "_dkUfugn8eDFkRohArKqQ"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "A queue's specific name.",
                                  "example": "my_queue"
                                }
                              },
                              "description": "The queue related to the engagement."
                            }
                          },
                          "users": {
                            "type": "array",
                            "description": "All agents related to the engagement.",
                            "example": [
                              {
                                "user_id": "sdFHEYF&G*E",
                                "user_name": "callen huang-agent"
                              }
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The ID of the agent who is set up on the agent profile.",
                                  "example": "i5iDfUroHKU&*FH"
                                },
                                "user_name": {
                                  "type": "string",
                                  "description": "The first and last name of the agent who is set up on the agent profile.",
                                  "example": "kevin_agent"
                                }
                              },
                              "description": "The agent related to the engagement."
                            }
                          },
                          "teams": {
                            "type": "array",
                            "description": "All teams related to the engagement.",
                            "example": [
                              {
                                "team_id": "sdFHEYF&G*E",
                                "team_name": "finlay-child"
                              }
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "team_id": {
                                  "type": "string",
                                  "description": "A team's specific ID.",
                                  "example": "wdhgyuYD74wUF"
                                },
                                "team_name": {
                                  "type": "string",
                                  "description": "A team's name.",
                                  "example": "agent team1"
                                }
                              },
                              "description": "The team related to the engagement."
                            }
                          },
                          "call_queues": {
                            "type": "array",
                            "description": "A list of **Call Queue** information. In Zoom Phone, this represents a group of phone users or common-area phones configured to handle incoming calls using defined distribution strategies such as simultaneous or round robin.\n\nWhen integrated with Contact Center, a call queue can be designated as a routing target for Contact Center voice flows, enabling Contact Center interactions to be processed through your Phone call queue infrastructure.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_name": {
                                  "type": "string",
                                  "description": "The Zoom Phone call queue name.",
                                  "example": "test call queue"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone number.",
                                  "example": "+12097481234"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone extension number, such as 32784.",
                                  "example": "7623"
                                }
                              },
                              "description": "The Zoom Phone call queue information."
                            }
                          },
                          "zoom_phone_users": {
                            "type": "array",
                            "description": "A list of **Zoom Phone User** information, representing an individual extension-enabled user.\n    In integrated Zoom Contact Center scenarios, phone users can act as contact-center agents or recipients\u2014either receiving calls directly transferred from Zoom Contact Center or functioning as members of call queues or auto receptionist routes.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_name": {
                                  "type": "string",
                                  "description": "The Zoom Phone user name.",
                                  "example": "testSite"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone number.",
                                  "example": "+12095551212"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone short number.",
                                  "example": "7623"
                                }
                              },
                              "description": "The Zoom phone user information."
                            }
                          },
                          "shared_line_groups": {
                            "type": "array",
                            "description": "A list of **Shared Line Group** information. This allows multiple phone users or common-area phones to share a phone number and voicemail inbox. Zoom Phone admins can apply business hours and routing rules to these groups.\n    When used with Zoom Contact Center, shared line groups can be selected as voice-flow targets\u2014calls reaching the shared number are processed by any group member.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_name": {
                                  "type": "string",
                                  "description": "The Zoom Phone share line group name.",
                                  "example": "test slg"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone number.",
                                  "example": "+12095551212"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone extension number.",
                                  "example": "7623"
                                }
                              },
                              "description": "The Zoom Phone shared line group information."
                            }
                          },
                          "auto_receptionists": {
                            "type": "array",
                            "description": "A list of **Auto Receptionist** information. It answers incoming calls with a greeting or IVR menu and routes them to destinations such as phone users, call queues, common areas, voicemail, or an IVR system.\n\n With Contact Center integration, auto receptionists often serve as entry points into Contact Center voice flows, directing callers into Contact Center handling.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_name": {
                                  "type": "string",
                                  "description": "The Zoom Phone auto receptionist.",
                                  "example": "test-ar"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone number.",
                                  "example": "+12095551212"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone extension number.",
                                  "example": "7623"
                                }
                              },
                              "description": "The Zoom Phone auto receptionist information."
                            }
                          },
                          "common_areas": {
                            "type": "array",
                            "description": "A list of **Common Areas** information, it typically deployed in shared office spaces like lobbies or conference rooms.\n    These devices can be members of call queues, shared line groups, or receive calls via auto receptionist.\n    In Zoom Contact Center enabled environments, common-area extensions may also serve as caller IDs or routing targets within Contact Center flows.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_name": {
                                  "type": "string",
                                  "description": "The common area name.",
                                  "example": "test common area"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone number.",
                                  "example": "+12095551212"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone extension number.",
                                  "example": "7623"
                                }
                              },
                              "description": "The Zoom Phone common area information."
                            }
                          },
                          "zoom_rooms": {
                            "type": "array",
                            "description": "A list of **Zoom Room** information. Each represents a Zoom Room or standards-based SIP/H.323 room, like Cisco/Polycom, licensed for Zoom Phone.\n\nThese rooms can make and receive phone calls using Zoom Phone services. When integrated with Contact Center, Zoom Rooms can be used as call destinations, entry points, or agent endpoints within Contact Center voice flows.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_name": {
                                  "type": "string",
                                  "description": "The Zoom Room name.",
                                  "example": "my room"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone number.",
                                  "example": "+12095551212"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone extension number.",
                                  "example": "7623"
                                }
                              },
                              "description": "The Zoom room information."
                            }
                          },
                          "inter_ops": {
                            "type": "array",
                            "description": "A list of **Interoperability Operation** information, representing standards-based SIP/H.323 room systems (e.g., Cisco Room, Polycom Room)\n    integrated with Zoom through the Conference Room Connector.\n    These devices are equipped with Zoom Phone calling capabilities, allowing them to make and receive phone calls.\n    In Contact Center scenarios, interop rooms may serve as voice-flow targets or conferencing endpoints, enabling seamless integration of third-party hardware into Contact Center workflows.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_name": {
                                  "type": "string",
                                  "description": "The Cisco/Polycom room name.",
                                  "example": "Cisco room0101"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone number.",
                                  "example": "+12097481234"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The Zoom Phone extension number.",
                                  "example": "26701"
                                }
                              },
                              "description": "The Cisco/Polycom room information."
                            }
                          }
                        },
                        "description": "The Zoom Phone and Contact Center call journey information."
                      }
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [timezone ID](/docs/api/references/abbreviations/#timezones) to use for the start time and end time in the query. The default is UTC.",
                      "example": "UTC"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:call_journey_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:call_journey_log:admin"
          ]
        }
      }
    },
    "/contact_center/reports/operation_logs": {
      "get": {
        "tags": [
          "Reports V2(CX Analytics)"
        ],
        "summary": "List operation logs",
        "description": "Retrieve the Zoom Contact Center management system operation logs report. \n\n The Zoom Contact Center management system operation logs report lets account owners and admins view monthly Zoom Contact Center related admin operation details.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_operation_logs:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:operation_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listOperationLogs",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-mm-dd` format. The date range defined by the `from` and `to` parameters should be a month, as the response only includes one month's worth of data at once. If unspecified, returns data within the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-04-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when specifying the `from` parameter. The end time and date in `yyyy-mm-dd` format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-04-30"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter the response by the category of the action performed. By default, the value of this field is `all`, and the response includes a log of all operations for the defined period. To only include responses for a specific category type, provide a value for the category from [this table](https://developers.zoom.us/docs/api/rest/contact-center-api/contact-center-operation-categories/).",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Engagement"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Filter responses according to the type of operation performed. The value of this field is `all`, and the response includes a log of all operations for the defined period.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Add",
              "enum": [
                "Add",
                "Delete",
                "Update",
                "Operate",
                "Move",
                "Download",
                "Recover",
                "Import",
                "Export",
                "Unmask",
                "Subscribe",
                "Agree",
                "Generate",
                "Enable",
                "Disable",
                "Publish",
                "Unpublish",
                "Opt-Out",
                "SyncData",
                "Initizate",
                "Submit",
                "Restore"
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Filter responses according to `objectName` and operator. The default value is empty, which queries all data.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test_over_flow"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nInbox messages returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "operation_logs": {
                      "type": "array",
                      "description": "The array of operation log objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "description": "The time when the operation was performed.",
                            "format": "date-time",
                            "example": "2024-04-25T07:51:30Z"
                          },
                          "operator": {
                            "type": "string",
                            "description": "The user who performed the operation.",
                            "example": "test@zoomtest.us"
                          },
                          "category": {
                            "type": "string",
                            "description": "The operation's category type.",
                            "example": "Account"
                          },
                          "object_name": {
                            "type": "string",
                            "description": "The operation's object name.",
                            "example": "test user"
                          },
                          "operation_log_id": {
                            "type": "string",
                            "description": "The operation's unique identifier.",
                            "example": "VD8z8Q4UT4yGWhpiGdk5bw"
                          },
                          "action": {
                            "type": "string",
                            "description": "The operation's action type.",
                            "example": "Create"
                          },
                          "operation_detail": {
                            "type": "string",
                            "description": "The operation details.",
                            "example": "Add Flows: [inbox-voicemail]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_operation_logs:read:admin",
              "contact_center:read:operation_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_operation_logs:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:operation_logs:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/agents/leg_metrics": {
      "get": {
        "tags": [
          "Reports(Legacy Reports)"
        ],
        "summary": "List agent leg reports",
        "description": "Generate a list of agent's leg reports.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:agent_report:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listAgentLegMetric",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's [timezone ID](/docs/api/references/abbreviations/#timezones). The default is `UTC`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "3XilEfOvQEKRIWMWhX1jDg"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The agent's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ukAAkZKfROKMSw1bj_RDFQ"
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "description": "The agent's name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "joe.chill"
            }
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "The agent's email.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "joe.chill@example.com"
            }
          },
          {
            "name": "cc_queue_id",
            "in": "query",
            "description": "The queue's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The task's channel. \nProvide only a single channel. \n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "messaging",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_source",
            "in": "query",
            "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel. \n* `facebook_messenger` - Only applies to messaging channel. \n* `whatsapp` - Only applies to messaging channel. \n* `instagram` - Only applies to messaging channel. ",
            "required": false,
            "schema": {
              "type": "string",
              "example": "in_app_chat",
              "enum": [
                "in_app_chat",
                "web_chat",
                "sms",
                "facebook_messenger",
                "whatsapp",
                "instagram"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\nAgent's leg reports list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10,
                      "default": 10
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's [timezone ID](/docs/api/references/abbreviations/#timezones). The default is `UTC`.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "users": {
                      "type": "array",
                      "description": "Information about the agent's leg reports.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The agent's name.",
                            "example": "joe.chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The agent's email.",
                            "example": "joe.chill@example.com"
                          },
                          "leg_metrics": {
                            "type": "array",
                            "description": "Details about the leg reports of the current agent.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string",
                                  "description": "The task's channel. ",
                                  "example": "messaging",
                                  "enum": [
                                    "voice",
                                    "video",
                                    "messaging",
                                    "email"
                                  ]
                                },
                                "channel_source": {
                                  "type": "string",
                                  "description": "The channel's source.",
                                  "example": "in_app_chat",
                                  "enum": [
                                    "in_app_chat",
                                    "web_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "whatsapp",
                                    "instagram"
                                  ]
                                },
                                "engagement_id": {
                                  "type": "string",
                                  "description": "The engagement's ID",
                                  "example": "reRAiabVQSqpXxJVDbsy2Q"
                                },
                                "cc_queue_id": {
                                  "type": "string",
                                  "description": "The Contact Center queue's ID.",
                                  "example": "Ql3qxUWXSHes4PmcOmzyOg"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "The queue's name.",
                                  "example": "agentQueue"
                                },
                                "agent_offered": {
                                  "type": "integer",
                                  "description": "The number of calls are offered to current agent.",
                                  "example": 1
                                },
                                "refused_engagement": {
                                  "type": "boolean",
                                  "description": "The indicator to determine if an agent missed or declined an agent offer.",
                                  "example": false
                                },
                                "handled_engagement": {
                                  "type": "boolean",
                                  "description": "The indicator to determine if an agent handled an agent offer.",
                                  "example": true
                                },
                                "handle_duration": {
                                  "type": "number",
                                  "description": "The amount of time an agent spent actively working an engagement, in seconds.",
                                  "example": 90
                                },
                                "agent_first_response_duration": {
                                  "type": "number",
                                  "description": "The amount of time it takes for an agent working a messaging channel to send the first message to a customer, in seconds.",
                                  "example": 1
                                },
                                "ring_duration": {
                                  "type": "number",
                                  "description": "The amount of time it takes for an agent to answer the engagement, in seconds.",
                                  "example": 8
                                },
                                "conversation_duration": {
                                  "type": "number",
                                  "description": "The amount of time an agent spent in active conversation with an engagement for any channel, in seconds.",
                                  "example": 80
                                },
                                "hold_count": {
                                  "type": "integer",
                                  "description": "The number of times that the agent places a consumer on hold.",
                                  "example": 0
                                },
                                "hold_duration": {
                                  "type": "number",
                                  "description": "The total amount of time that the agent placed a consumer on hold, in seconds.",
                                  "example": 0
                                },
                                "warm_conference": {
                                  "type": "integer",
                                  "description": "The number of warm conferences triggered by the agent.",
                                  "example": 1
                                },
                                "warm_conference_duration": {
                                  "type": "number",
                                  "description": "The amount of time an agent spent in conversation with another agent while the engagement was on hold, in seconds.",
                                  "example": 10
                                },
                                "conference_count": {
                                  "type": "integer",
                                  "description": "The number of conferences the agent entered.",
                                  "example": 1
                                },
                                "conference_duration": {
                                  "type": "number",
                                  "description": "The amount of time spent on conferences, including multiple confernces, in seconds.",
                                  "example": 10
                                },
                                "warm_transfer_initiated": {
                                  "type": "integer",
                                  "description": "The number of engagements an agent answered and then warm transferred with another participant with or without fully transferring the engagement.",
                                  "example": 1
                                },
                                "warm_transfer_completed": {
                                  "type": "integer",
                                  "description": "The number of engagements an agent answered and then warm transferred with another participant and then fully transferred the engagements.",
                                  "example": 1
                                },
                                "warm_transfer_duration": {
                                  "type": "number",
                                  "description": "The amount of time spent on warm transfers, in seconds.",
                                  "example": 30
                                },
                                "direct_transfer": {
                                  "type": "boolean",
                                  "description": "The indicator to determine if an agent initiated a direct transfer.",
                                  "example": false
                                },
                                "transferred_initiated": {
                                  "type": "integer",
                                  "description": "The number of transfers an agent initiated, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channels with no distinction between warm and direct transfers.",
                                  "example": 1
                                },
                                "transferred_completed": {
                                  "type": "integer",
                                  "description": "The number of transfers an agent completed, including warm and direct transfers for voice and video channels, and all transfers for messaging and email channels with no distinction between warm and direct transfers.",
                                  "example": 1
                                },
                                "wrap_up_duration": {
                                  "type": "number",
                                  "description": "The amount of time agents spent completing engagement wrap-up, in seconds.",
                                  "example": 10
                                },
                                "disposition_id": {
                                  "type": "string",
                                  "description": "The disposition's ID.",
                                  "example": "TaAGy_e7QgyPPAyDwGkl3Q"
                                },
                                "disposition_name": {
                                  "type": "string",
                                  "description": "The disposition's name.",
                                  "example": "disposition1"
                                },
                                "agent_start_time": {
                                  "type": "string",
                                  "description": "The agent leg starting date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ssTZD.",
                                  "example": "2020-02-11T05:39:50Z"
                                },
                                "agent_end_time": {
                                  "type": "string",
                                  "description": "The agent leg ending date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ssTZD.",
                                  "example": "2020-02-11T05:39:56Z"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:agent_report:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:agent_report:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/agents/status_history": {
      "get": {
        "tags": [
          "Reports(Legacy Reports)"
        ],
        "summary": "List agent's status history reports",
        "description": "Generate a list of an agent's status history reports. \n\n \n\n **[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:agent_status_report:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listAgentStatusHistory",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's timezone. The default is **UTC**.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameters is specified. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "queue_id",
            "in": "query",
            "description": "The queue's ID.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "cc_queue_id",
            "in": "query",
            "description": "The Contact Center queue's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "dghrxHN4SkS6N4wsrYBjp"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The agent's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ukAAkZKfROKMSw1bj_RDFQ"
            }
          },
          {
            "name": "status_id",
            "in": "query",
            "description": "The status's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "0"
            }
          },
          {
            "name": "sub_status_id",
            "in": "query",
            "description": "The sub status's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "101"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Agent's status history reports list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next-page token to paginate through large result sets. A next-page token returns whenever the set of available results exceeds the current page size.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's [timezone ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones). The default is **UTC**.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "statuses": {
                      "type": "array",
                      "description": "Information about the agent's status history reports.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The agent's name.",
                            "example": "Jilly"
                          },
                          "status_id": {
                            "type": "string",
                            "description": "The status's ID.",
                            "example": "1"
                          },
                          "occupied_queue_id": {
                            "type": "string",
                            "description": "The queue's ID when the agent status is occupied.",
                            "example": "ZysV5vnQ_iVKRjfLf-sjg",
                            "deprecated": true
                          },
                          "occupied_queue_name": {
                            "type": "string",
                            "description": "The queue's name when the agent status is occupied.",
                            "example": "voice-queue",
                            "deprecated": true
                          },
                          "occupied_engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID when the agent status is occupied.",
                            "example": "0xGQzpwS-2aR2KZEHRbPw",
                            "deprecated": true
                          },
                          "occupied_engagements": {
                            "type": "array",
                            "description": "The engagements that the agent has while in the occupied status",
                            "items": {
                              "type": "object",
                              "properties": {
                                "engagement_id": {
                                  "type": "string",
                                  "description": "The engagement's ID.",
                                  "example": "zeYjXoDOS_eV1QmTpj63PQ"
                                },
                                "cc_queue_id": {
                                  "type": "string",
                                  "description": "The queue's ID.",
                                  "example": "beGjiO3_TK2rxi5fh2Zv7A"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "The queue's version.",
                                  "example": "Demo"
                                }
                              },
                              "description": "One of engagements that the agent has while in the occupied status."
                            }
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The status's name. \n* Offline \n* Ready \n * Not Ready \n* Occupied \n* A custom user status, such as &quot;Lunch&quot; or  &quot;Out on Monday&quot;.",
                            "example": "Not Ready",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied",
                              "string"
                            ]
                          },
                          "sub_status_id": {
                            "type": "string",
                            "description": "The sub status's ID.",
                            "example": "101"
                          },
                          "sub_status_name": {
                            "type": "string",
                            "description": "The sub status's name.  \n* Inbound \n* Transferring in \n* Wrapping up \n* Holding \n* Transferring out \n * Taking over \n* Monitoring \n* Barging \n* Whispering \n* Outbound \n* A custom sub status, such as &quot;Break&quot; or &quot;Out on Monday&quot;.",
                            "example": "Lunch",
                            "enum": [
                              "Inbound",
                              "Transferring in",
                              "Wrapping up",
                              "Holding",
                              "Transferring out",
                              "Taking Over",
                              "Monitoring",
                              "Barging",
                              "Whispering",
                              "Outbound",
                              "string"
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The date and time when the status started, in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss&rsquo;TZD&rsquo;).",
                            "example": "2022-07-20T14:00:00-08:00"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The date and time when the status ended, in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss&rsquo;TZD&rsquo;).",
                            "example": "2022-07-20T14:15:00-08:00"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The agent's status-changed duration, in seconds.",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "description": "Information about the agent status report."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n**Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n**Error Code:** `1101` <br>\n Status does not exist: $statusId. <br>\n**Error Code:** `1102` <br>\n Sub status does not exist: $subStatusId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:agent_status_report:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:agent_status_report:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/agents/time_sheets": {
      "get": {
        "tags": [
          "Reports(Legacy Reports)"
        ],
        "summary": "List agent's time sheet reports",
        "description": "Generate a list of an agent's time sheet reports. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:agent_report:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listAgentTimeSheet",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's timezone. The default is **UTC**.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameters is specified. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "queue_id",
            "in": "query",
            "description": "The queue's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The agent's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ukAAkZKfROKMSw1bj_RDFQ"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "The historical queue report's interval.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1_month",
              "enum": [
                "15_minutes",
                "30_minutes",
                "1_hour",
                "1_day",
                "1_week",
                "1_month"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Agent's time sheet reports list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next-page token to paginate through large result sets. A next-page token returns whenever the set of available results exceeds the current page size.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's [timezone ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones). The default is **UTC**.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "agents": {
                      "type": "array",
                      "description": "Information about the agent's time sheet reports.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The agent's name.",
                            "example": "Jilly"
                          },
                          "ready_duration": {
                            "type": "integer",
                            "description": "The total ready status time, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "ready_percentage": {
                            "type": "integer",
                            "description": "The percentage of ready status.",
                            "format": "int32",
                            "example": 85
                          },
                          "not_ready_duration": {
                            "type": "integer",
                            "description": "The total not-ready status time, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "not_ready_percentage": {
                            "type": "integer",
                            "description": "The percentage of not ready status.",
                            "format": "int32",
                            "example": 85
                          },
                          "occupied_duration": {
                            "type": "integer",
                            "description": "The total occupied-status time, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "occupied_percentage": {
                            "type": "integer",
                            "description": "The occupied-status percentage.",
                            "format": "int32",
                            "example": 85
                          },
                          "online_duration": {
                            "type": "integer",
                            "description": "The total online-status time, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "offline_duration": {
                            "type": "integer",
                            "description": "The total offline-status time, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "inbound_average_voice_call_talking_duration": {
                            "type": "integer",
                            "description": "The average voice call duration, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "average_video_call_talking_duration": {
                            "type": "integer",
                            "description": "The average video call duration, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "average_wrap_up_duration": {
                            "type": "integer",
                            "description": "The average wrap-up call duration, in seconds.",
                            "format": "int64",
                            "example": 3600
                          },
                          "start_time_interval": {
                            "type": "string",
                            "description": "The current interval's start date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                            "example": "2022-07-20T14:00:00-08:00"
                          },
                          "end_time_interval": {
                            "type": "string",
                            "description": "The current interval's end date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                            "example": "2022-07-20T14:15:00-08:00"
                          },
                          "total_outbound_voice_call": {
                            "type": "integer",
                            "description": "The total number of outbound voice calls.",
                            "format": "int64",
                            "example": 3
                          },
                          "total_outbound_voice_call_duration": {
                            "type": "number",
                            "description": "The total outbound voice calls duration, in seconds.",
                            "format": "double",
                            "example": 50
                          },
                          "total_inbound_voice_call": {
                            "type": "integer",
                            "description": "The total number of inbound voice calls.",
                            "format": "int64",
                            "example": 3
                          },
                          "total_inbound_voice_call_duration": {
                            "type": "number",
                            "description": "The total inbound voice calls duration, in seconds.",
                            "format": "double",
                            "example": 78
                          }
                        },
                        "description": "Information about the agent's time sheet reports."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n**Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:agent_report:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:agent_report:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/historical/details/metrics": {
      "get": {
        "tags": [
          "Reports(Legacy Reports)"
        ],
        "summary": "List historical detail reports",
        "description": "Generates a list of historical detail reports.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:engagement_report:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listHistoricalDetailMetric",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's timezone. The default is **UTC**.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, it returns data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "Currently supports two different IDs, the task queue's ID and Contact Center queue's ID. The task queue's ID will be completely deprecated in the future. Change to the Contact Center queue ID as soon as possible.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Ql3qxUWXSHes4PmcOmzyOg"
              }
            }
          },
          {
            "name": "cc_queue_ids",
            "in": "query",
            "description": "A comma-separated list of Contact Center queue IDs to query, up to 20 queue IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Ql3qxUWXSHes4PmcOmzyOg"
              }
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The agent's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ukAAkZKfROKMSw1bj_RDFQ"
            }
          },
          {
            "name": "consumer_number",
            "in": "query",
            "description": "The consumer's phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+12059300920"
            }
          },
          {
            "name": "consumer_id",
            "in": "query",
            "description": "The consumer ID for video, chat, email, or SMS engagements.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The engagement's direction. \n\n Voice, SMS : \n* `inbound` \n* `outbound` \n\n Chat, Video: \n* `inbound`",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inbound",
              "enum": [
                "inbound",
                "outbound"
              ]
            }
          },
          {
            "name": "results",
            "in": "query",
            "description": "The engagement's results. \n\n**Voice** \n* `completed` \n* `short_abandoned` \n* `long_abandoned` \n* `hold_abandoned` \n* `overflowed_to_inbox` \n* `overflowed_to_disconnect` \n* `long_calls` \n* `short_calls` \n* `hang_up_calls`  \n\n**Video** \n* `completed` \n* `short_abandoned` \n* `long_abandoned` \n\n**Chat, SMS** \n* `completed` \n* `auto_closed`",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "completed"
              }
            }
          },
          {
            "name": "channel_types",
            "in": "query",
            "description": "The channel's type. It provides only a single channel type.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "voice",
                "enum": [
                  "voice",
                  "video",
                  "chat",
                  "sms"
                ]
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The task's channel. \n* `voice` \n* `video` \n* `messaging` \n* `email` \n\nIt provides only a single channel. \n\nIf channel is used as an input parameter, the deprecated parameter `channel_types` is not processed.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "messaging",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_sources",
            "in": "query",
            "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel. \n* `facebook_messenger` - Only applies to messaging channel. \n* `whatsapp` - Only applies to messaging channel. \n* `email_address` - Only applies to email channel. \n\nIt provides multiple `channel_sources`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "web_chat,in_app_chat",
                "enum": [
                  "web_chat",
                  "in_app_chat",
                  "sms",
                  "facebook_messenger",
                  "whatsapp",
                  "email_address"
                ]
              }
            }
          },
          {
            "name": "queue_wait_type",
            "in": "query",
            "description": "The queue's wait type. This field is applicable to voice channel.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "live_waiting",
              "enum": [
                "live_waiting",
                "callback"
              ]
            }
          },
          {
            "name": "required_skill_ids",
            "in": "query",
            "description": "The required skill's ID. This field is applicable to voice channel.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Ql3qxUWXSHes4PmcOmzyOg"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Historical detail reports list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's [timezone ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones). The default is **UTC**.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, it returns data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "details": {
                      "type": "array",
                      "description": "The information about the historical detail reports.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "channels": {
                            "type": "array",
                            "description": "The task's channels",
                            "items": {
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string",
                                  "description": "The task's channel. \n* `voice` \n* `video` \n* `messaging` \n* `email`",
                                  "example": "messaging",
                                  "enum": [
                                    "voice",
                                    "video",
                                    "messaging",
                                    "email"
                                  ]
                                },
                                "channel_source": {
                                  "type": "string",
                                  "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.\n* `email_address` - Only applies to email channel.",
                                  "example": "in_app_chat",
                                  "enum": [
                                    "web_chat",
                                    "in_app_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "whatsapp",
                                    "email_address"
                                  ]
                                }
                              }
                            }
                          },
                          "direction": {
                            "type": "string",
                            "description": "The engagement's direction. \\n* `inbound`\\n* `outbound",
                            "example": "inbound",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "consumer_number": {
                            "type": "string",
                            "description": "The consumer's phone number.",
                            "example": "+12059300920"
                          },
                          "consumer_id": {
                            "type": "string",
                            "description": "The consumer's ID, for video and chat and email.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "consumer_name": {
                            "type": "string",
                            "description": "The consumer's name, for video and chat and email.",
                            "example": "Tester"
                          },
                          "consumer_country_name": {
                            "type": "string",
                            "description": "The consumer's number [country name](/docs/api/references/abbreviations/#countries), for voice and SMS.",
                            "example": "United States of America"
                          },
                          "consumer_country_code": {
                            "type": "string",
                            "description": "The consumer's number [country name](/docs/api/references/abbreviations/#countries), for voice and SMS.",
                            "example": "US"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The engagement's starting date and time in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ssTZD`.",
                            "format": "date-time",
                            "example": "2020-02-11T05:39:50Z"
                          },
                          "results": {
                            "type": "string",
                            "description": "The engagement's result.",
                            "example": "completed",
                            "enum": [
                              "completed",
                              "contained",
                              "short_abandoned",
                              "long_abandoned",
                              "hold_abandoned",
                              "overflowed",
                              "overflowed_to_inbox",
                              "overflowed_to_disconnect",
                              "long_calls",
                              "short_calls",
                              "hang_up_calls",
                              "auto_closed",
                              "abandon_quit",
                              "callback_abandoned_by_consumer"
                            ]
                          },
                          "total_duration": {
                            "type": "integer",
                            "description": "The engagement's maximum agent duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "ivr_duration": {
                            "type": "integer",
                            "description": "The engagement's IVR duration, in seconds.",
                            "format": "int64",
                            "example": 5
                          },
                          "waiting_duration": {
                            "type": "integer",
                            "description": "The engagement's waiting duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "talking_duration": {
                            "type": "integer",
                            "description": "The engagement's talking duration, in seconds.",
                            "format": "int64",
                            "example": 20
                          },
                          "hold_duration": {
                            "type": "integer",
                            "description": "The engagement's hold duration, in seconds.",
                            "format": "int64",
                            "example": 20
                          },
                          "wrap_up_duration": {
                            "type": "integer",
                            "description": "The engagement's wrap-up duration, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "disposition_id": {
                            "type": "string",
                            "description": "The disposition's ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "disposition_name": {
                            "type": "string",
                            "description": "The disposition's name.",
                            "example": "Inquiry"
                          },
                          "flows": {
                            "type": "array",
                            "description": "Information about the engagement's flows.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "flow_id": {
                                  "type": "string",
                                  "description": "The flow's ID.",
                                  "example": "zeYjXoDOS_eV1QmTpj63PQ"
                                },
                                "flow_name": {
                                  "type": "string",
                                  "description": "The flow's name.",
                                  "example": "Demo"
                                },
                                "flow_version": {
                                  "type": "string",
                                  "description": "The flow's version.",
                                  "example": "5"
                                }
                              },
                              "description": "Information about the flow."
                            }
                          },
                          "queues": {
                            "type": "array",
                            "description": "Information about the engagement's queues.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "queue_id": {
                                  "type": "string",
                                  "description": "The queue's ID.",
                                  "example": "d95avl1eRJ-H162PZUJ-qg",
                                  "deprecated": true
                                },
                                "cc_queue_id": {
                                  "type": "string",
                                  "description": "The Contact Center queue's ID.",
                                  "example": "d95avl1eRJ-H162PZUJ-qg"
                                },
                                "queue_name": {
                                  "type": "string",
                                  "description": "The queue's name.",
                                  "example": "agentQueue"
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "agents": {
                            "type": "array",
                            "description": "Information about the engagement's agents.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "string",
                                  "description": "The agent's ID.",
                                  "example": "ukAAkZKfROKMSw1bj_RDFQ"
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The agent's name.",
                                  "example": "Jilly"
                                }
                              },
                              "description": "Information about the queue."
                            }
                          },
                          "total_flow_duration": {
                            "type": "integer",
                            "description": "The total time of engagement's flows, in seconds.",
                            "format": "int64",
                            "example": 10
                          },
                          "queue_wait_type": {
                            "type": "string",
                            "description": "The queue's wait type. Applicable to voice channels.",
                            "example": "live_waiting",
                            "enum": [
                              "live_waiting",
                              "callback"
                            ]
                          },
                          "last_widget_name": {
                            "type": "string",
                            "description": "The last widget's name.",
                            "example": "PhoneEnQueue RouteTo"
                          },
                          "agent_first_message_speed": {
                            "type": "integer",
                            "description": "The engagement's initial response time, in seconds.",
                            "format": "int64",
                            "example": 0
                          },
                          "dialed_numbers": {
                            "type": "array",
                            "description": "The dialed numbers. Applicable to voice, video, and SMS channels.",
                            "items": {
                              "type": "string",
                              "example": "+12059300920"
                            }
                          },
                          "callback_waiting_duration": {
                            "type": "integer",
                            "description": "The callback waiting duration, in seconds. Applicable to voice channels.",
                            "format": "int64",
                            "example": 0
                          },
                          "callback_pending_duration": {
                            "type": "integer",
                            "description": "The callback pending duration, in seconds. Applicable to voice channels.",
                            "format": "int64",
                            "example": 0
                          },
                          "handling_duration": {
                            "type": "integer",
                            "description": "The handling duration, in seconds. Applicable to voice channels.",
                            "format": "int64",
                            "example": 0
                          },
                          "ring_duration": {
                            "type": "integer",
                            "description": "The ring duration, in seconds. Applicable to voice and video channels.",
                            "format": "int64",
                            "example": 0
                          },
                          "required_skills": {
                            "type": "array",
                            "description": "The required skill names. Applicable to voice channels.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "skill_id": {
                                  "type": "string",
                                  "description": "The skill's ID.",
                                  "example": "saaHWgVMGQU69soco456oNA"
                                },
                                "skill_name": {
                                  "type": "string",
                                  "description": "The skill's name.",
                                  "example": "French"
                                },
                                "minimum_proficiency_level": {
                                  "type": "integer",
                                  "description": "The skill category's minimum proficiency level.",
                                  "example": 1
                                }
                              },
                              "description": "Information about the required skill."
                            }
                          },
                          "optional_skills": {
                            "type": "array",
                            "description": "The optional skill names. Applicable to voice channels.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "skill_id": {
                                  "type": "string",
                                  "description": "The skill's ID.",
                                  "example": "saaHWgVMGQU69soco456oNA"
                                },
                                "skill_name": {
                                  "type": "string",
                                  "description": "The skill's name.",
                                  "example": "French"
                                },
                                "matched": {
                                  "type": "boolean",
                                  "description": "Whether the skill is matched.",
                                  "example": false
                                }
                              },
                              "description": "Information about the optional skill."
                            }
                          },
                          "agent_skills": {
                            "type": "array",
                            "description": "The agent skill names. Applicable to voice channels.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "skill_id": {
                                  "type": "string",
                                  "description": "The skill's ID.",
                                  "example": "saaHWgVMGQU69soco456oNA"
                                },
                                "skill_name": {
                                  "type": "string",
                                  "description": "The skill's name.",
                                  "example": "French"
                                },
                                "proficiency_level": {
                                  "type": "integer",
                                  "description": "The skill category's proficiency level.",
                                  "example": 1
                                }
                              },
                              "description": "Information about the required skill."
                            }
                          }
                        },
                        "description": "The information about the historical detail report."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n**Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:engagement_report:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:engagement_report:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/historical/queues/agents/metrics": {
      "get": {
        "tags": [
          "Reports(Legacy Reports)"
        ],
        "summary": "List historical agent reports by queue",
        "description": "Generate detailed historical reports of agents from a specific queue.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:agent_report:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listQueueAgentsMetrics",
        "parameters": [
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's timezone ID. The default is UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "UTC"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-12-10T00:15:00Z"
            }
          },
          {
            "name": "cc_queue_id",
            "in": "query",
            "description": "A Contact Center queue ID to query.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The task's channel. Provides only a single channel.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice"
              ]
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "The historical queue report's interval.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1_month",
              "enum": [
                "15_minutes",
                "30_minutes",
                "1_hour",
                "1_day",
                "1_week",
                "1_month"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP Status Code: 200\n\nHistorical queue's agents report list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10,
                      "default": 10
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's timezone ID. The default is UTC.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "Required only when the `from` parameter is specified. The end time and date in `yyyy-MM-dd'T'HH:mm:ss'Z'` format, the same format as the `from` parameter.\n",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "agents": {
                      "type": "array",
                      "description": "Information about the queue's agents.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The agent's name.",
                            "example": "Jilly"
                          },
                          "voice": {
                            "type": "object",
                            "properties": {
                              "offers_total": {
                                "type": "integer",
                                "description": "Offers happen every time an agent is presented with a call. An engagement can have multiple offers.",
                                "example": 5
                              },
                              "offers_acd": {
                                "type": "integer",
                                "description": "Offers ACD metric indicates presented to the agent via the queue distribution.",
                                "example": 4
                              },
                              "offers_non_acd": {
                                "type": "integer",
                                "description": "Offers Non-ACD that are presented to the agent bypassing the queue, or manually assign the engagement to a queue agent.",
                                "example": 1
                              },
                              "offers_answered": {
                                "type": "integer",
                                "description": "The number of engagements assigned to the agent that were answered.",
                                "example": 5
                              },
                              "offers_answered_acd_inbound": {
                                "type": "integer",
                                "description": "The number of inbound engagements assigned to the agent that were answered.",
                                "example": 2
                              },
                              "offers_missed": {
                                "type": "integer",
                                "description": "The number of engagements assigned to the agent that went unanswered, including cases where the agent timed out or the customer abandoned.",
                                "example": 0
                              },
                              "offers_declined": {
                                "type": "integer",
                                "description": "The number of inbound engagements declined by the associated member. In other words, they clicked the option to decline the engagement in the inbound call notification.",
                                "example": 4
                              },
                              "total_transferred_in": {
                                "type": "integer",
                                "description": "Transferred in metric indicates how many calls were routed to the queue because of the transfer. Transferred in = Transferred in to Queue + Transferred in to Agent.",
                                "example": 1
                              },
                              "total_transferred_out": {
                                "type": "integer",
                                "description": "How many of the calls answered by the agent were transferred out by the agent (instead of being completed by the agent or being abandoned while on hold).",
                                "example": 1
                              },
                              "hold_hang_up": {
                                "type": "integer",
                                "description": "Hold Hang Up that are presented how many engagements were hanged up by the consumer while on hold with the agent.",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "How many voice calls were upgraded to video by the agent.",
                                "example": 2
                              },
                              "total_inbound_handling_duration": {
                                "type": "number",
                                "description": "Total inbound handling duration. Handling duration = talking duration (hold duration included) + wrap-up Duration",
                                "example": 55
                              },
                              "average_inbound_handling_duration": {
                                "type": "number",
                                "description": "Average inbound handling duration. Handling duration = talking duration (hold duration included) + wrap-up Duration.",
                                "example": 21
                              },
                              "longest_inbound_handling_duration": {
                                "type": "number",
                                "description": "Maximum inbound handling duration. Handling duration = talking duration (hold duration included) + wrap-up Duration.",
                                "example": 25
                              },
                              "average_inbound_answer_duration": {
                                "type": "number",
                                "description": "The average time that consumers spent talking to an agent. Talking duration includes talking time and hold duration.",
                                "example": 25
                              },
                              "total_inbound_answer_duration": {
                                "type": "number",
                                "description": "The total time that consumers spent talking to an agent. Talking duration includes talking time and hold duration.",
                                "example": 45
                              },
                              "longest_inbound_answer_duration": {
                                "type": "number",
                                "description": "The maximum amount of time it takes for an agent to answer the inbound engagement. It is from the system assigning the call to the agent and before the agent answers.",
                                "example": 25
                              },
                              "total_inbound_ring_duration": {
                                "type": "number",
                                "description": "The total amount of time it takes for an agent to answer the inbound engagement. It is from the system assigning the call to the agent and before the agent answers ",
                                "example": 15
                              },
                              "average_inbound_ring_duration": {
                                "type": "number",
                                "description": "The average amount of time it takes for an agent to answer the inbound engagement. It is from the system assigning the call to the agent and before the agent answers ",
                                "example": 20
                              },
                              "longest_inbound_ring_duration": {
                                "type": "number",
                                "description": "The maximum amount of time it takes for an agent to answer the inbound engagement. It is from the system assigning the call to the agent and before the agent answers.",
                                "example": 35
                              },
                              "total_inbound_hold_duration": {
                                "type": "number",
                                "description": "The total amount of time that a consumer was placed on hold during the inbound engagement.",
                                "example": 10
                              },
                              "average_inbound_hold_duration": {
                                "type": "number",
                                "description": "The average amount of time that a consumer was placed on hold during the inbound engagement.",
                                "example": 11
                              },
                              "longest_inbound_hold_duration": {
                                "type": "number",
                                "description": "The maximum amount of time that a consumer was placed on hold during the inbound engagement.",
                                "example": 12
                              },
                              "total_inbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total amount of time that an agent spent in the wrap-up period.",
                                "example": 16
                              },
                              "average_inbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average amount of time that an agent spent in the wrap-up period.",
                                "example": 12
                              },
                              "longest_inbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The maximum amount of time that an agent spent in the wrap-up period.",
                                "example": 14
                              },
                              "total_outbound": {
                                "type": "integer",
                                "description": "How many outbound calls did the agent participate in (callbacks are not considered outbound calls).",
                                "example": 2
                              },
                              "short_outbound": {
                                "type": "integer",
                                "description": "How many of the agent's outbound calls had a duration short than the long call threshold for the queue.",
                                "example": 5
                              },
                              "long_outbound": {
                                "type": "integer",
                                "description": "How many of the agent's outbound calls had a duration longer than the long call threshold for the queue.",
                                "example": 6
                              },
                              "hangup_outbound": {
                                "type": "integer",
                                "description": "How many of the agent's outbound calls had a duration shorter than the hang-up threshold for the queue.",
                                "example": 7
                              },
                              "total_outbound_ring_duration": {
                                "type": "number",
                                "description": "The total amount of time that agents wait for their outbound engagement to be answered.",
                                "example": 32
                              },
                              "average_outbound_ring_duration": {
                                "type": "number",
                                "description": "The average amount of time that agents wait for their outbound engagement to be answered.",
                                "example": 27
                              },
                              "longest_outbound_ring_duration": {
                                "type": "number",
                                "description": "The maximum amount of time that agents wait for their outbound engagement to be answered.",
                                "example": 15
                              },
                              "total_outbound_handling_duration": {
                                "type": "number",
                                "description": "The total outbound handling duration. Handling duration = talking duration (hold duration included) + wrap-up Duration.",
                                "example": 23
                              },
                              "average_outbound_handling_duration": {
                                "type": "number",
                                "description": "Average outbound handling duration. Handling duration = talking duration (hold duration included) + wrap-up Duration.",
                                "example": 24
                              },
                              "longest_outbound_handling_duration": {
                                "type": "number",
                                "description": "The maximum outbound handling duration. Handling duration = talking duration (hold duration included) + wrap-up Duration.",
                                "example": 31
                              },
                              "total_outbound_answer_duration": {
                                "type": "number",
                                "description": "The total time that consumers spent talking to an agent. Talking duration includes talking time and hold duration.",
                                "example": 23
                              },
                              "average_outbound_answer_duration": {
                                "type": "number",
                                "description": "The average time that consumers spent talking to an agent. Talking duration includes talking time and hold duration.",
                                "example": 18
                              },
                              "longest_outbound_answer_duration": {
                                "type": "number",
                                "description": "The maximum time that consumers spent talking to an agent. Talking duration includes talking time and hold duration.",
                                "example": 19
                              },
                              "total_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total amount of time that an agent spent in the wrap-up period.",
                                "example": 25
                              },
                              "average_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average amount of time that an agent spent in the wrap-up period.",
                                "example": 21
                              },
                              "longest_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The maximum amount of time that an agent spent in the wrap-up period.",
                                "example": 34
                              },
                              "total_outbound_hold_duration": {
                                "type": "number",
                                "description": "The total amount of time that a consumer was placed on hold during the outbound engagement.",
                                "example": 23
                              },
                              "average_outbound_hold_duration": {
                                "type": "number",
                                "description": "The average amount of time that a consumer was placed on hold during the outbound engagement.",
                                "example": 27
                              },
                              "longest_outbound_hold_duration": {
                                "type": "number",
                                "description": "The maximum amount of time that a consumer was placed on hold during the outbound engagement.",
                                "example": 13
                              }
                            },
                            "description": "Voice data."
                          }
                        },
                        "description": "Information about the queue report."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:agent_report:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:agent_report:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/historical/queues/metrics": {
      "get": {
        "tags": [
          "Reports(Legacy Reports)"
        ],
        "summary": "List historical queue reports",
        "description": "Generate a list of historical queue reports. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:queue_report:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listHistoricalQueueMetric",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's timezone. The default is **UTC**.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameters is specified. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "queue_ids",
            "in": "query",
            "description": "A comma-separated list of queue IDs to query, up to 20 queue IDs.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Ql3qxUWXSHes4PmcOmzyOg"
              }
            }
          },
          {
            "name": "cc_queue_ids",
            "in": "query",
            "description": "A comma-separated list of Contact Center queue IDs to query, up to 20 queue IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Ql3qxUWXSHes4PmcOmzyOg"
              }
            }
          },
          {
            "name": "channel_types",
            "in": "query",
            "description": "The channel's type. Provide only a single channel type.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "voice",
                "enum": [
                  "voice",
                  "video",
                  "chat",
                  "sms"
                ]
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The task's channel. \n* `voice` \n* `video` \n* `messaging` \n* `email` \n\nProvide only a single channel. \n\nIf channel is used as an input parameter, the deprecated parameter `channel_types` will not be processed.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "messaging",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_sources",
            "in": "query",
            "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel. \n* `facebook_messenger` - Only applies to messaging channel. \n* `whatsapp` - Only applies to messaging channel. \n* `email_address` - Only applies to email channel. \n\nProvide multiple channel_sources",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "web_chat,in_app_chat",
                "enum": [
                  "web_chat",
                  "in_app_chat",
                  "sms",
                  "facebook_messenger",
                  "whatsapp",
                  "email_address"
                ]
              }
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "The historical queue report's interval.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1_month",
              "enum": [
                "15_minutes",
                "30_minutes",
                "1_hour",
                "1_day",
                "1_week",
                "1_month"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Historical queue reports list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large result sets. A next page token returns whenever the set of available results exceeds the current page size.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's [timezone ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones). The default is **UTC**.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "queues": {
                      "type": "array",
                      "description": "Information about the queue reports.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The queue's ID.",
                            "example": "Ql3qxUWXSHes4PmcOmzyOg",
                            "deprecated": true
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "Ql3qxUWXSHes4PmcOmzyOg"
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The queue's name.",
                            "example": "agentQueue"
                          },
                          "total_inbound": {
                            "type": "integer",
                            "description": "The total number of incoming voice or video calls, chats, or SMS engagements.",
                            "format": "int64",
                            "example": 1
                          },
                          "total_completed": {
                            "type": "integer",
                            "description": "The total number of completed voice or video calls, chats, or SMS engagements.",
                            "format": "int64",
                            "example": 1
                          },
                          "total_transferred_in": {
                            "type": "integer",
                            "description": "The total number of transferred-in calls.",
                            "format": "int64",
                            "example": 1
                          },
                          "total_transferred_out": {
                            "type": "integer",
                            "description": "The total number of transferred-out calls.",
                            "format": "int64",
                            "example": 1
                          },
                          "voice": {
                            "type": "object",
                            "properties": {
                              "service_level": {
                                "type": "number",
                                "description": "The queue's service level.",
                                "format": "double",
                                "example": 0.85
                              },
                              "short_abandoned": {
                                "type": "integer",
                                "description": "The total number of short-duration abandoned voice calls, where the talking duration is less than the user-specified threshold value.",
                                "format": "int64",
                                "example": 1
                              },
                              "long_abandoned": {
                                "type": "integer",
                                "description": "The total number of long-duration abandoned voice calls, where the talking duration is greater than the user-specified threshold value.",
                                "format": "int64",
                                "example": 1
                              },
                              "hold_abandoned": {
                                "type": "integer",
                                "description": "The total number of on-hold abandoned voice calls, where the agent placed the call on hold and then the customer abandoned the call.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_missed": {
                                "type": "integer",
                                "description": "The total number of missed voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of upgrade-to-video voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_waiting_duration": {
                                "type": "number",
                                "description": "The average waiting voice call or SMS engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest waiting voice call or SMS engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest waiting voice call or SMS engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_talking_duration": {
                                "type": "number",
                                "description": "The average voice call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_talking_duration": {
                                "type": "number",
                                "description": "The longest voice call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_talking_duration": {
                                "type": "number",
                                "description": "The shortest voice call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_wrap_up_duration": {
                                "type": "number",
                                "description": "The average wrap-up voice call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_wrap_up_duration": {
                                "type": "number",
                                "description": "The longest wrap-up voice call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_wrap_up_duration": {
                                "type": "number",
                                "description": "The shortest wrap-up voice call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_outbound": {
                                "type": "integer",
                                "description": "The total number of outbound voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "hangup_outbound": {
                                "type": "integer",
                                "description": "The total number of hang-up outbound calls, where the talking duration is less than the threshold value specified for hang-up calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "short_outbound": {
                                "type": "integer",
                                "description": "The total number of short outbound calls, where the talking duration is between the threshold values specified for hang-up calls and long outbound calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "long_outbound": {
                                "type": "integer",
                                "description": "The total number of long outbound calls, where the talking duration is greater than the threshold value specified for long outbound calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "start_time_interval": {
                                "type": "string",
                                "description": "The current interval's start date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`. Returned for voice channels with a provided interval.",
                                "example": "2022-07-20T14:00:00-08:00"
                              },
                              "end_time_interval": {
                                "type": "string",
                                "description": "The current interval's end date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`. Returned for voice channels with a provided interval.",
                                "example": "2022-07-20T14:15:00-08:00"
                              },
                              "total_answered_users": {
                                "type": "integer",
                                "description": "The total number of agent-answered voice calls. Returned for voice channels with a provided interval.",
                                "format": "int64",
                                "example": 3
                              },
                              "total_answer_duration": {
                                "type": "number",
                                "description": "The total voice call duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 50
                              },
                              "total_hold_duration": {
                                "type": "number",
                                "description": "The total voice call hold duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 3
                              },
                              "total_wrap_up_duration": {
                                "type": "number",
                                "description": "The total wrap-up voice call duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 78
                              },
                              "total_queue_wait_duration": {
                                "type": "number",
                                "description": "The total voice-call queue wait duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 56
                              },
                              "total_abandoned_duration": {
                                "type": "number",
                                "description": "The total duration of abandoned voice calls, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_answer_duration": {
                                "type": "number",
                                "description": "The total outbound voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_hold_duration": {
                                "type": "number",
                                "description": "The total outbound voice call hold duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total outbound wrap-up voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 78
                              },
                              "average_outbound_answer_duration": {
                                "type": "number",
                                "description": "The average outbound voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_hold_duration": {
                                "type": "number",
                                "description": "The average outbound voice call hold duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average outbound wrap-up voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 78
                              }
                            },
                            "description": "Information about the voice metrics."
                          },
                          "sms": {
                            "type": "object",
                            "properties": {
                              "start_time_interval": {
                                "type": "string",
                                "description": "The current interval's start date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:00:00-08:00"
                              },
                              "end_time_interval": {
                                "type": "string",
                                "description": "The current interval's end date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:15:00-08:00"
                              },
                              "total_sent": {
                                "type": "integer",
                                "description": "The total number of sent messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_sent": {
                                "type": "number",
                                "description": "The average sent SMS messages.",
                                "format": "double",
                                "example": 0.85
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_released": {
                                "type": "integer",
                                "description": "The total number of released SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_abandoned": {
                                "type": "integer",
                                "description": "The total number of abandoned quit SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_voice_call": {
                                "type": "integer",
                                "description": "The total number of upgrade-to-voice SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of upgrade-to-video SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_waiting_duration": {
                                "type": "number",
                                "description": "The average waiting voice call or SMS engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest waiting voice call or SMS engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest waiting voice call or SMS engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_messaging_duration": {
                                "type": "number",
                                "description": "The average SMS engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest SMS engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest SMS engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_agent_first_message_speed": {
                                "type": "number",
                                "description": "The average agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The longest agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_outbound": {
                                "type": "integer",
                                "description": "The total number of outbound SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_outbound_answer_duration": {
                                "type": "number",
                                "description": "The total SMS outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total SMS outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              },
                              "average_outbound_answer_duration": {
                                "type": "number",
                                "description": "The average SMS outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average SMS outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              }
                            },
                            "description": "Information about the SMS metrics.",
                            "deprecated": true
                          },
                          "chat": {
                            "type": "object",
                            "properties": {
                              "start_time_interval": {
                                "type": "string",
                                "description": "The current interval's start date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:00:00-08:00"
                              },
                              "end_time_interval": {
                                "type": "string",
                                "description": "The current interval's end date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:15:00-08:00"
                              },
                              "service_level": {
                                "type": "number",
                                "description": "The queue's service level.",
                                "format": "double",
                                "example": 0.85
                              },
                              "total_sent": {
                                "type": "integer",
                                "description": "The total number of sent chats.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_sent": {
                                "type": "number",
                                "description": "The average sent chats.",
                                "format": "double",
                                "example": 0.85
                              },
                              "total_abandoned": {
                                "type": "integer",
                                "description": "The total number of abandoned chats.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed chats.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_released": {
                                "type": "integer",
                                "description": "The total number of released chats.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_voice_call": {
                                "type": "integer",
                                "description": "The total number of upgrade-to-voice chats.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of upgrade-to-video chats.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_waiting_duration": {
                                "type": "number",
                                "description": "The average waiting video call or chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest waiting video call or chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest waiting video call or chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_messaging_duration": {
                                "type": "number",
                                "description": "The average chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_agent_first_message_speed": {
                                "type": "number",
                                "description": "The average agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The longest agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              }
                            },
                            "description": "Information about the chat metrics.",
                            "deprecated": true
                          },
                          "video": {
                            "type": "object",
                            "properties": {
                              "start_time_interval": {
                                "type": "string",
                                "description": "The current interval's start date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:00:00-08:00"
                              },
                              "end_time_interval": {
                                "type": "string",
                                "description": "The current interval's end date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:15:00-08:00"
                              },
                              "service_level": {
                                "type": "number",
                                "description": "The queue's service level.",
                                "format": "double",
                                "example": 0.85
                              },
                              "short_abandoned": {
                                "type": "integer",
                                "description": "The total number of short-duration abandoned video calls, where the talking duration is less than the user-specified threshold value.",
                                "format": "int64",
                                "example": 1
                              },
                              "long_abandoned": {
                                "type": "integer",
                                "description": "The total number of long-duration abandoned video calls, where the talking duration is greater than the user-specified threshold value.",
                                "format": "int64",
                                "example": 1
                              },
                              "hold_abandoned": {
                                "type": "integer",
                                "description": "The total number of on-hold abandoned video calls, where the agent placed the call on hold and then the customer abandoned the call.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_missed": {
                                "type": "integer",
                                "description": "The total number of missed video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_waiting_duration": {
                                "type": "number",
                                "description": "The average waiting video call or chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest waiting video call or chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest waiting video call or chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_talking_duration": {
                                "type": "number",
                                "description": "The average video call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_talking_duration": {
                                "type": "number",
                                "description": "The longest video call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_talking_duration": {
                                "type": "number",
                                "description": "The shortest video call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_wrap_up_duration": {
                                "type": "number",
                                "description": "The longest wrap-up video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_wrap_up_duration": {
                                "type": "number",
                                "description": "The longest wrap-up video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_wrap_up_duration": {
                                "type": "number",
                                "description": "The shortest wrap-up video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              }
                            },
                            "description": "Information about the video metrics."
                          },
                          "messaging": {
                            "type": "object",
                            "properties": {
                              "channel_sources": {
                                "type": "array",
                                "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.",
                                "items": {
                                  "type": "string",
                                  "example": "web_chat,in_app_chat",
                                  "enum": [
                                    "web_chat",
                                    "in_app_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "whatsapp"
                                  ]
                                }
                              },
                              "start_time_interval": {
                                "type": "string",
                                "description": "The current interval's start date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:00:00-08:00"
                              },
                              "end_time_interval": {
                                "type": "string",
                                "description": "The current interval's end date and time in ISO 8601 format, either yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss`TZD`.",
                                "example": "2022-07-20T14:15:00-08:00"
                              },
                              "service_level": {
                                "type": "number",
                                "description": "The queue's service level.",
                                "format": "double",
                                "example": 0.85
                              },
                              "total_sent": {
                                "type": "integer",
                                "description": "The total number of sent messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_sent": {
                                "type": "number",
                                "description": "The average sent messaging(web_chat/in_app_chat/sms) messages.",
                                "format": "double",
                                "example": 0.85
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed messaging(web_chat/in_app_chat/sms) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_released": {
                                "type": "integer",
                                "description": "The total number of released messaging(web_chat/in_app_chat/sms) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_abandoned": {
                                "type": "integer",
                                "description": "The total number of abandoned quit messaging(web_chat/in_app_chat/sms) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed messaging(web_chat/in_app_chat/sms) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_voice_call": {
                                "type": "integer",
                                "description": "The total number of upgrade-to-voice messaging(web_chat/in_app_chat/sms) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of upgrade-to-video messaging(web_chat/in_app_chat/sms) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_waiting_duration": {
                                "type": "number",
                                "description": "The average waiting voice call or messaging(web_chat/in_app_chat/sms) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest waiting voice call or messaging(web_chat/in_app_chat/sms) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest waiting voice call or messaging(web_chat/in_app_chat/sms) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_messaging_duration": {
                                "type": "number",
                                "description": "The average messaging(web_chat/in_app_chat/sms) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest messaging(web_chat/in_app_chat/sms) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest messaging(web_chat/in_app_chat/sms) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_agent_first_message_speed": {
                                "type": "number",
                                "description": "The average agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The longest agent first message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_outbound": {
                                "type": "integer",
                                "description": "The total number of outbound messaging(sms) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_outbound_answer_duration": {
                                "type": "number",
                                "description": "The total messaging(sms) outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total messaging(sms) outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              },
                              "average_outbound_answer_duration": {
                                "type": "number",
                                "description": "The average messaging(sms) outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average messaging(sms) outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              }
                            },
                            "description": "The information about the messaging(web_chat/in_app_chat/sms) metrics."
                          },
                          "email": {
                            "type": "object",
                            "properties": {
                              "channel_sources": {
                                "type": "array",
                                "description": "The channel's source. \n* `email_address` - Only applies to email channel.",
                                "items": {
                                  "type": "string",
                                  "example": "email_address",
                                  "enum": [
                                    "email_address"
                                  ]
                                }
                              },
                              "start_time_interval": {
                                "type": "string",
                                "description": "The current interval's start date and time in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
                                "example": "2022-07-20T14:00:00-08:00"
                              },
                              "end_time_interval": {
                                "type": "string",
                                "description": "The current interval's end date and time in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
                                "example": "2022-07-20T14:15:00-08:00"
                              },
                              "service_level": {
                                "type": "number",
                                "description": "The queue's service level.",
                                "format": "double",
                                "example": 0.85
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offered": {
                                "type": "integer",
                                "description": "The total number of offered email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_released": {
                                "type": "integer",
                                "description": "The total number of released email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers": {
                                "type": "integer",
                                "description": "The total number of offers email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_acd": {
                                "type": "integer",
                                "description": "The total number of offers ACD email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_non_acd": {
                                "type": "integer",
                                "description": "The total number of offers non-ACD email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_answered": {
                                "type": "integer",
                                "description": "The total number of offers answered email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_missed": {
                                "type": "integer",
                                "description": "The total number of offers missed email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_declined": {
                                "type": "integer",
                                "description": "The total number of offers declined email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_handled": {
                                "type": "integer",
                                "description": "The total number of handled email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_out_within_queue": {
                                "type": "integer",
                                "description": "The total number of transferred-out within queue email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_out_of_queue": {
                                "type": "integer",
                                "description": "The total number of transferred-out of queue email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_in_to_agent": {
                                "type": "integer",
                                "description": "The total number of transferred-in to agent email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_in_to_queue": {
                                "type": "integer",
                                "description": "The total number of transferred-in to queue email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_waiting_duration": {
                                "type": "number",
                                "description": "The average waiting email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest waiting email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest waiting email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_messaging_duration": {
                                "type": "number",
                                "description": "The average email (`email_address`) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest email (`email_address`) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest email (`email_address`) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_agent_first_reply_duration": {
                                "type": "number",
                                "description": "The average reply duration of the first agent in email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_agent_first_reply_duration": {
                                "type": "number",
                                "description": "The longest reply duration of the first agent in email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_agent_first_reply_duration": {
                                "type": "number",
                                "description": "The shortest reply duration of the first agent in email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_agent_reply_duration": {
                                "type": "number",
                                "description": "The average reply duration of email (`email_address`) engagement agents, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_agent_reply_duration": {
                                "type": "number",
                                "description": "The longest reply duration of email (`email_address`) engagement agents, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_agent_reply_duration": {
                                "type": "number",
                                "description": "The shortest reply duration of email (`email_address`) engagement agents, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_inactive_duration": {
                                "type": "number",
                                "description": "The average inactive duration in email (`email_address`) engagement, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_inactive_duration": {
                                "type": "number",
                                "description": "The longest inactive duration in email (`email_address`) engagement, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_inactive_duration": {
                                "type": "number",
                                "description": "The shortest inactive duration in email (`email_address`) engagement, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              }
                            },
                            "description": "The information about the email (`email_address`) metrics."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:queue_report:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:queue_report:admin"
          ]
        }
      }
    },
    "/contact_center/analytics/historical/queues/{queueId}/agents/metrics": {
      "get": {
        "tags": [
          "Reports(Legacy Reports)"
        ],
        "summary": "List historical queue's agents reports",
        "description": "Generate a list of a historical queue's agent reports.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:agent_report:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listQueueAgentMetric",
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "description": "Supports both the routing queue ID and the Contact Center queue ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "W_VATTk_Q5aW6z5rZtBxAQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int32",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The call's timezone. The default is **UTC**.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameters is specified. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "channel_types",
            "in": "query",
            "description": "The channel's type. Provide only a single channel type.",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "voice",
                "enum": [
                  "voice",
                  "video",
                  "chat",
                  "sms"
                ]
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The task's channel. \n* `voice` (deprecated)\n* `video` \n* `messaging` \n* `email` \n\nProvides only a single channel. \n\nIf channel is used as an input parameter, the deprecated parameter `channel_types` will not be processed.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "messaging",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "channel_sources",
            "in": "query",
            "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel. \n* `facebook_messenger` - Only applies to messaging channel. \n* `whatsapp` - Only applies to messaging channel. \n* `email_address` - Only applies to email channel. \n\nProvide multiple channel_sources",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "web_chat,in_app_chat",
                "enum": [
                  "web_chat",
                  "in_app_chat",
                  "sms",
                  "facebook_messenger",
                  "whatsapp",
                  "email_address"
                ]
              }
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "The historical queue report's interval.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1_month",
              "enum": [
                "15_minutes",
                "30_minutes",
                "1_hour",
                "1_day",
                "1_week",
                "1_month"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Historical queue&rsquo;s agents report list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The call's [timezone ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones). The default is **UTC**.",
                      "example": "America/Los_Angeles"
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2021-12-10T00:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2021-12-10T00:15:00Z"
                    },
                    "agents": {
                      "type": "array",
                      "description": "Information about the queue&rsquo;s agents.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The agent's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The agent's name.",
                            "example": "Jilly"
                          },
                          "total_inbound": {
                            "type": "integer",
                            "description": "The total number of incoming voice calls, video calls, chats, or SMS engagements.",
                            "format": "int64",
                            "example": 1
                          },
                          "total_completed": {
                            "type": "integer",
                            "description": "The total number of completed voice calls, video calls, chats, or SMS engagements.",
                            "format": "int64",
                            "example": 1
                          },
                          "total_transferred_in": {
                            "type": "integer",
                            "description": "The total number of transferred-in voice calls, video calls, chats, or SMS engagements.",
                            "format": "int64",
                            "example": 1
                          },
                          "total_transferred_out": {
                            "type": "integer",
                            "description": "The total number of transferred-out voice calls, video calls, chats, or SMS engagements.",
                            "format": "int64",
                            "example": 1
                          },
                          "voice": {
                            "type": "object",
                            "properties": {
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of voice calls, chats or SMS engagements that are upgraded to video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_declined": {
                                "type": "integer",
                                "description": "The total number of declined voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_missed": {
                                "type": "integer",
                                "description": "The total number of missed voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_talking_duration": {
                                "type": "number",
                                "description": "The average voice call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_talking_duration": {
                                "type": "number",
                                "description": "The longest voice call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_talking_duration": {
                                "type": "number",
                                "description": "The shortest voice call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_wrap_up_duration": {
                                "type": "number",
                                "description": "The average wrap-up voice or video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_wrap_up_duration": {
                                "type": "number",
                                "description": "The longest wrap-up voice or video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_wrap_up_duration": {
                                "type": "number",
                                "description": "The shortest wrap-up voice or video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_outbound": {
                                "type": "integer",
                                "description": "The total number of outbound voice calls, video calls, chats, or SMS engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "hangup_outbound": {
                                "type": "integer",
                                "description": "The total number of hang-up outbound calls, where the talking duration is less than the threshold value specified for hang-up calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "short_outbound": {
                                "type": "integer",
                                "description": "The total number of short outbound calls, where the talking duration is between the threshold values specified for hang-up calls and long outbound calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "long_outbound": {
                                "type": "integer",
                                "description": "The total number of long outbound calls, where the talking duration is greater than the threshold value specified for long outbound calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "start_time_interval": {
                                "type": "string",
                                "description": "The current interval's start date and time in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss&rsquo;TZD&rsquo;). Returned for voice channels with a provided interval.",
                                "example": "2022-07-20T14:00:00-08:00"
                              },
                              "end_time_interval": {
                                "type": "string",
                                "description": "The current interval's end date and time in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss&rsquo;TZD&rsquo;). Returned for voice channels with a provided interval.",
                                "example": "022-07-20T14:15:00-08:00"
                              },
                              "total_answered_users": {
                                "type": "integer",
                                "description": "The total number of agent-answered calls. Returned for voice channels with a provided interval.",
                                "format": "int64",
                                "example": 3
                              },
                              "total_answer_duration": {
                                "type": "number",
                                "description": "The total call duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 50
                              },
                              "total_hold_duration": {
                                "type": "number",
                                "description": "The total call hold duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 3
                              },
                              "total_wrap_up_duration": {
                                "type": "number",
                                "description": "The total wrap-up call duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 78
                              },
                              "total_queue_wait_duration": {
                                "type": "number",
                                "description": "The total queue wait duration, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 56
                              },
                              "total_abandoned_duration": {
                                "type": "number",
                                "description": "The total duration of abandoned calls, in seconds. Returned for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_answer_duration": {
                                "type": "number",
                                "description": "The total outbound voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_hold_duration": {
                                "type": "number",
                                "description": "The total outbound voice call hold duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total outbound wrap-up voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 78
                              },
                              "average_outbound_answer_duration": {
                                "type": "number",
                                "description": "The average outbound voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_hold_duration": {
                                "type": "number",
                                "description": "The average outbound voice call hold duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average outbound wrap-up voice call duration, in seconds. It returns for voice channels with a provided interval.",
                                "format": "double",
                                "example": 78
                              }
                            },
                            "deprecated": true
                          },
                          "video": {
                            "type": "object",
                            "properties": {
                              "total_declined": {
                                "type": "integer",
                                "description": "The total number of declined video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_missed": {
                                "type": "integer",
                                "description": "The total number of missed video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_talking_duration": {
                                "type": "number",
                                "description": "The average video call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_talking_duration": {
                                "type": "number",
                                "description": "The longest video call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_talking_duration": {
                                "type": "number",
                                "description": "The shortest video call duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_wrap_up_duration": {
                                "type": "number",
                                "description": "The average wrap-up video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_wrap_up_duration": {
                                "type": "number",
                                "description": "The longest wrap-up video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_wrap_up_duration": {
                                "type": "number",
                                "description": "The shortest wrap-up video call, in seconds.",
                                "format": "double",
                                "example": 11.8
                              }
                            }
                          },
                          "chat": {
                            "type": "object",
                            "properties": {
                              "total_sent": {
                                "type": "integer",
                                "description": "The total number of sent chat messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_sent": {
                                "type": "number",
                                "description": "The average number of sent chat messages.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_abandoned": {
                                "type": "integer",
                                "description": "The total number of abandoned chat messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed chat messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_released": {
                                "type": "integer",
                                "description": "The total number of released chat messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed chat messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_voice_call": {
                                "type": "integer",
                                "description": "The total number of chats that are upgraded to voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of chats that are upgraded to video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_messaging_duration": {
                                "type": "number",
                                "description": "The average chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest chat duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_waiting_duration": {
                                "type": "number",
                                "description": "The average chat waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest chat waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest chat waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent first chat message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent first chat message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The longest agent first chat message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              }
                            },
                            "deprecated": true
                          },
                          "sms": {
                            "type": "object",
                            "properties": {
                              "total_sent": {
                                "type": "integer",
                                "description": "The total number of sent SMS messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_sent": {
                                "type": "number",
                                "description": "The average number of sent SMS messages.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_abandoned": {
                                "type": "integer",
                                "description": "The total number of abandoned SMS messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed SMS messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_released": {
                                "type": "integer",
                                "description": "The total number of released SMS messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed SMS messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_voice_call": {
                                "type": "integer",
                                "description": "The total number of SMS engagements that are upgraded to voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of SMS engagements that are upgraded to video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_messaging_duration": {
                                "type": "number",
                                "description": "The average sms messaging duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest sms messaging duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest sms messaging duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_waiting_duration": {
                                "type": "number",
                                "description": "The average sms waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest sms waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest sms waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent first sms message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent first sms message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The longest agent first sms message speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_outbound": {
                                "type": "integer",
                                "description": "The total number of outbound sms engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_outbound_answer_duration": {
                                "type": "number",
                                "description": "The total SMS outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total SMS outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              },
                              "average_outbound_answer_duration": {
                                "type": "number",
                                "description": "The average SMS outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average SMS outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              }
                            },
                            "deprecated": true
                          },
                          "messaging": {
                            "type": "object",
                            "properties": {
                              "channel_sources": {
                                "type": "array",
                                "description": "The channel's source. \n* `in_app_chat` - Only applies to messaging channel.  \n* `web_chat` - Only applies to messaging channel. \n* `sms` - Only applies to messaging channel.\n* `facebook_messenger` - Only applies to messaging channel.\n* `whatsapp` - Only applies to messaging channel.",
                                "items": {
                                  "type": "string",
                                  "example": "web_chat,in_app_chat",
                                  "enum": [
                                    "web_chat",
                                    "in_app_chat",
                                    "sms",
                                    "facebook_messenger",
                                    "whatsapp"
                                  ]
                                }
                              },
                              "total_sent": {
                                "type": "integer",
                                "description": "The total number of sent messaging(web_chat/in_app_chat/sms) messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "average_sent": {
                                "type": "number",
                                "description": "The average number of sent messaging(web_chat/in_app_chat/sms) messages.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_abandoned": {
                                "type": "integer",
                                "description": "The total number of abandoned messaging(web_chat/in_app_chat/sms) messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed messaging(web_chat/in_app_chat/sms) messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_released": {
                                "type": "integer",
                                "description": "The total number of released messaging(web_chat/in_app_chat/sms) messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_overflowed": {
                                "type": "integer",
                                "description": "The total number of overflowed messaging(web_chat/in_app_chat/sms) messages.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_voice_call": {
                                "type": "integer",
                                "description": "The total number of messaging(web_chat/in_app_chat/sms) engagements that are upgraded to voice calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "upgraded_to_video_call": {
                                "type": "integer",
                                "description": "The total number of messaging(web_chat/in_app_chat/sms) engagements that are upgraded to video calls.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_messaging_duration": {
                                "type": "number",
                                "description": "The average messaging(web_chat/in_app_chat/sms) message duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest messaging(web_chat/in_app_chat/sms) message duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest messaging(web_chat/in_app_chat/sms) message duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_waiting_duration": {
                                "type": "number",
                                "description": "The average messaging(web_chat/in_app_chat/sms) waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_waiting_duration": {
                                "type": "number",
                                "description": "The shortest messaging(web_chat/in_app_chat/sms) waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_waiting_duration": {
                                "type": "number",
                                "description": "The longest messaging(web_chat/in_app_chat/sms) waiting duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "average_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent of the first messaging(web_chat/in_app_chat/sms) message's speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "shortest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The shortest agent of the first messaging(web_chat/in_app_chat/sms) message's speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "longest_agent_first_message_speed": {
                                "type": "number",
                                "description": "The longest agent of the first messaging(web_chat/in_app_chat/sms) message's speed, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "total_outbound": {
                                "type": "integer",
                                "description": "The total number of outbound messaging(SMS) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_outbound_answer_duration": {
                                "type": "number",
                                "description": "The total messaging(SMS) outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "total_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The total messaging(SMS) outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              },
                              "average_outbound_answer_duration": {
                                "type": "number",
                                "description": "The average messaging(SMS) outbound duration, in seconds.",
                                "format": "double",
                                "example": 8
                              },
                              "average_outbound_wrap_up_duration": {
                                "type": "number",
                                "description": "The average messaging (SMS) outbound wrap-up duration, in seconds.",
                                "format": "double",
                                "example": 78
                              }
                            }
                          },
                          "email": {
                            "type": "object",
                            "properties": {
                              "channel_sources": {
                                "type": "array",
                                "description": "The channel's source. \n* `email_address` - Only applies to email channel.",
                                "items": {
                                  "type": "string",
                                  "example": "email_address",
                                  "enum": [
                                    "email_address"
                                  ]
                                }
                              },
                              "total_offers": {
                                "type": "integer",
                                "description": "The total number of offers' email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_acd": {
                                "type": "integer",
                                "description": "The total number of offers ACD email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_non_acd": {
                                "type": "integer",
                                "description": "The total number of offers non-ACD email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_answered": {
                                "type": "integer",
                                "description": "The total number of offers-answered email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_missed": {
                                "type": "integer",
                                "description": "The total number of offers-missed email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_offers_declined": {
                                "type": "integer",
                                "description": "The total number of offers-declined email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_auto_closed": {
                                "type": "integer",
                                "description": "The total number of auto-closed email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_out_within_queue": {
                                "type": "integer",
                                "description": "The total number of transferred-out-within-queue email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_out_of_queue": {
                                "type": "integer",
                                "description": "The total number of transferred-out-of-queue email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_in_within_queue": {
                                "type": "integer",
                                "description": "The total number of transferred-in-within-queue email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "total_transferred_in_outside_queue": {
                                "type": "integer",
                                "description": "The total number of transferred-in-out-of-queue email (`email_address`) engagements.",
                                "format": "int64",
                                "example": 1
                              },
                              "inbound_average_messaging_duration": {
                                "type": "number",
                                "description": "The average email (`email_address`) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_messaging_duration": {
                                "type": "number",
                                "description": "The longest email (`email_address`) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_messaging_duration": {
                                "type": "number",
                                "description": "The shortest email (`email_address`) engagement duration, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_agent_first_reply_duration": {
                                "type": "number",
                                "description": "The average reply duration of the first-agent-in email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_agent_first_reply_duration": {
                                "type": "number",
                                "description": "The longest reply duration of the first agent in email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_agent_first_reply_duration": {
                                "type": "number",
                                "description": "The shortest reply duration of the first agent in email (`email_address`) engagement, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_agent_reply_duration": {
                                "type": "number",
                                "description": "The average reply duration of email (`email_address`) engagement agents, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_agent_reply_duration": {
                                "type": "number",
                                "description": "The longest reply duration of email (`email_address`) engagement agents, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_agent_reply_duration": {
                                "type": "number",
                                "description": "The shortest reply duration of email (`email_address`) engagement agents, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_average_inactive_duration": {
                                "type": "number",
                                "description": "The average inactive duration in email (`email_address`) engagement, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_longest_inactive_duration": {
                                "type": "number",
                                "description": "The longest inactive duration in email (`email_address`) engagement, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              },
                              "inbound_shortest_inactive_duration": {
                                "type": "number",
                                "description": "The shortest inactive duration in email (`email_address`) engagement, excluding the response duration of the first agent, in seconds.",
                                "format": "double",
                                "example": 11.8
                              }
                            }
                          }
                        },
                        "description": "Information about the queue report."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1201` <br>\n Queue does not exist: $queueId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_report:read:admin",
              "contact_center:read:agent_report:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_report:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:agent_report:admin"
          ]
        }
      }
    },
    "/contact_center/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List roles",
        "description": "Use this API to return a list of roles. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_roles:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listRoles",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRole list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "roles": {
                      "type": "array",
                      "description": "Information about user roles.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role_id": {
                            "type": "string",
                            "description": "The role's ID.",
                            "example": "-7uu_aUQRL-zXybozrSBWw"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The role's name.",
                            "example": "Agent"
                          },
                          "role_description": {
                            "type": "string",
                            "description": "The role's description.",
                            "example": "Agent role."
                          },
                          "total_users": {
                            "type": "integer",
                            "description": "Number of users with the role.",
                            "example": 3
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user who last modified the role.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time at which the role was last modified.",
                            "format": "date-time",
                            "example": "2022-03-03T05:07:46Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:read:admin",
              "contact_center:read:list_roles:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_roles:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a role",
        "description": "Create a new [role](https://support.zoom.us/hc/en-us/articles/4471054202253-Using-role-management). Admins can use the role management feature to control access to features and settings in the Zoom web portal. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_name": {
                    "type": "string",
                    "description": "The user role's name.",
                    "example": "Agent"
                  },
                  "role_description": {
                    "type": "string",
                    "description": "The role's description.",
                    "example": "Agent role."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nRole created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role_id": {
                      "type": "string",
                      "description": "The role's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "role_name": {
                      "type": "string",
                      "description": "The role's name.",
                      "example": "Agent"
                    },
                    "role_description": {
                      "type": "string",
                      "description": "The role's description.",
                      "example": "Agent role."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2203` <br>\n The role name already exists. Please change to a new one. <br>\n**Error Code:** `300` <br>\n Validation Failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:write:admin",
              "contact_center:write:role:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:role:admin"
          ]
        }
      }
    },
    "/contact_center/roles/duplicate": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Duplicate a role",
        "description": "Duplicate the role specified by the original role name and assign it a new name. All settings, permissions, and configurations of the original role will be copied to the new role.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Duplicatearole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "original_role_name": {
                    "type": "string",
                    "description": "The name of the role to duplicate.",
                    "example": "Agent"
                  },
                  "new_role_name": {
                    "type": "string",
                    "description": "The new, duplicated role's name.",
                    "example": "Agent_Copy"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`    Role created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role_id": {
                      "type": "string",
                      "description": "The role's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "role_name": {
                      "type": "string",
                      "description": "The role's name.",
                      "example": "Agent_Copy"
                    },
                    "role_description": {
                      "type": "string",
                      "description": "The role's description.",
                      "example": "Agent role copy."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2203` <br>\n The role name already exists. Please change to a new one. <br>\n**Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:write:admin",
              "contact_center:write:role:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:role:admin"
          ]
        }
      }
    },
    "/contact_center/roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get a role",
        "description": "Get information about a role. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRole returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role_id": {
                      "type": "string",
                      "description": "The role's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "role_name": {
                      "type": "string",
                      "description": "The role's name.",
                      "example": "Agent"
                    },
                    "role_description": {
                      "type": "string",
                      "description": "The role's description.",
                      "example": "Agent role."
                    },
                    "total_users": {
                      "type": "integer",
                      "description": "The number of users with the role.",
                      "example": 3
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the role.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the role was last modified.",
                      "format": "date-time",
                      "example": "2022-03-03T05:07:46Z"
                    },
                    "privileges": {
                      "type": "object",
                      "properties": {
                        "analytics_settings": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "[These permissions](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0061941#h_01FWHA20K7CF310WJB29QXMNKC) control access to various analytics and reporting features, including real-time analytics, historical reports, and user activity tracking.\n| Privileges | Description |\n | :------ | :------ |\n| `RptMyAgents:Read` | Allow user to view the status of agents. |\n| `RptQueueAnalytics:Read` | Allow user to view real-time charts. |\n| `RptQueueAnalyticsOverview:Read` | Allow user to view overview data for all channels. |\n | `RptActiveChannelEngagements:Read` | Allow user to view active engagements for each channel. |\n| `RptWallboard:Read` | Allow user to view wallboards. |\n| `RptWallboard:Edit` | Allow user to add new wallboard views, duplicate existing ones and edit them. |\n| `RptWallboardShare:Edit` | Allow user to share the wallboard views they create. |\n| `RptAgentReport:Read` | Allow user to view agent\u2019s timesheets. |\n| `RptAgentReportOverview:Read` | Allow user to view overview data for all channels. |\n | `RptAgentReportExport:Edit` | Allow user to export agent time sheet data. |\n| `RptQueueChartReport:Read` | Allow user to view historical queue charts. |\n| `RptQueueChartReportOverView:Read` | Allow user to view overview data for all channels. |\n | `RptQueueChartReportExport:Edit` | Allow user to export queue chart data. |\n| `RptQueueDetailReport:Read` | Allow user to view historical queue details. |\n| `RptQueueDetailReportExport:Edit` | Allow user to export queue detail data. |\n| `RptQueueIntervalReport:Read` | Allow user to view the interval report. |\n| `RptQueueIntervalReportExport:Edit` | Allow user to export interval report data |\n| `RptFlowChartReport:Read` | Allow user to view the flow chart report. |\n| `RptFlowChartReportExport:Edit` | Allow user to export flow chart data. |\n| `RptFlowDetailReport:Read` | Allow user to view the flow detail report. |\n| `RptFlowDetailReportExport:Edit` | Allow user to export flow detail data. |\n| `RptSurvey:Read` | Allow user to view the consumer engagement surveys report. |\n| `RptSurveyExport:Edit` | Allow user to export engagement survey results. |\n| `RptSubscriptions:Read` | Allow user to create or view subscriptions. |\n| `RptCustomReports:Read` | Allow user to view existing reports (including default reports). |\n| `RptCustomReports:Edit` | Allow user to create and duplicate reports. |\n| `RptCustomReportsShare:Edit` | Allow user to share default and custom reports with your organization. |\n| `RptCustomReportsExport:Edit` | Allow user to export default and custom reports. |\n | `RptCustomReportsSchedule:Edit` | Allow user to schedule default and custom reports. |\n| `RptLogs:Read` | Allow user to view the logs. |\n| `RptLogsExport:Edit` | Allow user to export logs. |\n| `RptLogsErasePII:Edit` | Allow user to erase personal information in the engagement log. |\n| `RptDashboards:Read` |  Allow user to view existing dashboards (including default dashboards). |\n| `RptDashboards:Edit` | Allow user to create and duplicate dashboards. |\n| `RptDashboardsShare:Edit` | Allow user to share custom dashboards. |\n| `RptContactCenter:Read` | Allow user to view the contact center usage report. |\n| `RptContactCenterExport:Edit` | Allow user to export contact center usage report data. |\n| `RptContactCenterOperationLog:Read` | Allow user to view the contact center operation log. |\n| `RptContactCenterOperationLogExport:Edit` | Allow user to export operation log data. |",
                            "example": "RptWallboard:Read"
                          }
                        },
                        "administration_settings": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "[These permissions](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0061941#h_01GMEG7MDSBBXS4NSBME5617YX) control access to user and team management, as well as queue management, log management, etc.\n| Permission Name | Description |\n| --- | --- |\n| UserManagement:Read, UserManagement:Edit | Allow user to view and manage users. |\n| TeamManagement:Read, TeamManagement:Edit | Allow user to view and manage teams. |\n| RoleManagement:Read, RoleManagement:Edit | Allow user to view and manage roles. |\n| SkillManagement:Read, SkillManagement:Edit | Allow user to view and manage skills. |\n| InboxManagement:Read, InboxManagement:Edit | Allow user to view and manage inboxes. |\n| QueueManagement:Read, QueueManagement:Edit | Allow user to view and manage queues. |\n| NumberManagement:Read, NumberManagement:Edit | Allow user to view and manage numbers. |\n| RoutingProfileManagement:Read, RoutingProfileManagement:Edit | Allow user to view and manage routing profiles. |\n | DispositionManagement:Read, DispositionManagement:Edit | Allow user to view and manage dispositions. |\n| WaitingRoomManagement:Read, WaitingRoomManagement:Edit | Allow user to view and manage waiting rooms. |\n| FlowManagement:Read, FlowManagement:Edit | Allow user to view and manage flows in flow editor. |\n| PreferenceManagement:Read, PreferenceManagement:Edit | Allow user to view and manage account preferences. |\n | AddressBookManagement:Read, AddressBookManagement:Edit | Allow user to view and manage address books. |\n| AddressCustomFieldManagement:Read, AddressCustomFieldManagement:Edit | Allow user to view and manage address book custom fields. |\n| CampaignManagement:Read, CampaignManagement:Edit | Allow user to view and manage web campaigns. |\n| IntegrationManagement:Read, IntegrationManagement:Edit | Allow user to view and manage integrations. |\n| RoutingEngineManagement:Read, RoutingEngineManagement:Edit | Allow user to view Routing Engine console. |\n| LogManagement:Read | Allow user to view and manage logs. |\n| EngagementLogManagement:Read | Allow user to view the engagement log. |\n| EngagementLogExport:Edit | Allow user to export engagement log data. |\n| EngagementLogErasePII:Edit | Allow user to erase personal information in the engagement log. |\n| VoiceCallLogManagement:Read | Allow user to view the voice calls log. |\n| VoiceCallLogExport:Edit | Allow user to export voice calls log data. |\n| SMSLogManagement:Read | Allow user to view the SMS log. |\n| SMSLogExport:Edit | Allow user to export SMS log data. |\n| RecordingsLogManagement:Read | Allow user to view the recordings log. |\n| RecordingsLogExport:Edit | Allow user to export recordings log data. |\n| VariablesLogManagement:Read | Allow user to view the variables log. |\n| VariablesLogExport:Edit | Allow user to export variables log data. |\n| VariablesLogDelete:Edit | Allow user to permanently delete engagement variables. |\n| VoiceRecordingAccess:Read | Allow user to view list of Cobrowse recordings. |\n| RecordingPlay:Edit | Allow user to play voice, video and messaging Cobrowse recordings. |\n| VoiceRecordingDownload:Edit | Allow user to download voice, video and messaging Cobrowse recordings. |\n| VoiceRecordingDelete:Edit | Allow user to delete voice, video and messaging Cobrowse recordings. |\n| VoiceDataRetentionExemption:Edit | Allow user to manage data retention exemption for recordings. |",
                            "example": "VecUser:Read"
                          }
                        },
                        "general_settings": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "[These permissions](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0061941#h_01FWHA20K7CF310WJB29QXMNKC) control access to start various types of outbound engagements, engagement features, client customization features, etc.\n | Permission Name | Description |\n| --- | --- |\n| OutboundVoiceCall | Allow user to start a new outbound voice engagement to consumer(s). |\n| OutboundVideoCall | Allow user to start a new outbound video engagement to consumer(s). |\n| OutboundSMS | Allow user to start a new outbound messaging engagement to consumer(s). |\n| OutboundEmail | Allow user to start a new outbound email engagement to consumer(s). |\n| QueueOptInOut | Allow user to opt in or out of their assigned queues. |\n| OtherUserQueueOpt | Allow user to opt other users in or out of their assigned queues. |\n| ChangeUserStatus | Allow user to change the Ready/Not Ready status of other users. |\n| ContactManagement | Allow user to add or edit contacts information in the client. |\n| VoicemailManagement | Allow user to view and manage the voicemails. |\n| VoicemailPlay | Allow user to play voicemails. |\n| VoicemailDownload | Allow user to download voicemails. |\n| VoicemailAssign | Allow user to assign voicemail to others. |\n| VoicemailDelete | Allow user to delete voicemails. |\n| OwnCallRecordingView | Allow user to view and play their own voice, video and messaging Cobrowse recordings. |\n| MessagingTranscript | Allow user to access the list of messaging transcript. |\n| MessagingTranscriptDelete | Allow user to delete messaging transcript. |\n| MessagingTranscriptDownload | Allow user to download messaging transcript. |\n| EmailTranscript | Allow user to access the list of email transcript. |\n | EmailTranscriptDelete | Allow user to delete email transcript. |\n| EmailTranscriptDownload | Allow user to download email transcript. |\n| ConsumerHistory | Allow user to view consumer history under profile in the client. |\n | EngagementNote | Allow user to add or edit notes while in an engagement. |\n| FileShare | Allow user to send and receive files in messaging and email engagements. |\n| EngagementUpgrade | Allow user to upgrade engagements to voice or video calls. |\n| ChatToVoiceUpgrade | Allow user to upgrade engagements to voice from Chat(web). |\n | FacebookToVoiceUpgrade | Allow user to upgrade engagements to voice from Facebook Messenger. |\n| SMSToVoiceUpgrade | Allow user to upgrade engagements to voice from SMS. |\n| WhatsAppToVoiceUpgrade | Allow user to upgrade engagements to voice from WhatsApp. |\n| InstagramToVoiceUpgrade | Allow user to upgrade engagements to voice from Instagram. |\n| TeamChatToVoiceUpgrade | Allow user to upgrade engagements to voice from Zoom Team Chat. |\n| ChatToVideoUpgrade | Allow user to upgrade engagements to video from Chat(web). |\n| FacebookToVideoUpgrade | Allow user to upgrade engagements to video from Facebook Messenger. |\n| SMSToVideoUpgrade | Allow user to upgrade engagements to video from SMS. |\n| VoiceToVideoUpgrade | Allow user to upgrade engagements to video from Voice. |\n| WhatsAppToVideoUpgrade | Allow user to upgrade engagements to video from WhatsApp. |\n | InstagramToVideoUpgrade | Allow user to upgrade engagements to video from Instagram. |\n| TeamChatToVideoUpgrade | Allow user to upgrade engagements to video from Zoom Team Chat. |\n| VideoOnHold | Allow user to put video on hold. |\n| EngagementTransfer | Allow user to transfer engagements to queues, flows and/or agents. |\n| CobrowseSession | Allow user to start Cobrowse sessions during voice and web chat engagements. |\n| WaitingRoomVideoDropIn | Allow user to talk with consumers on video while they\u2019re in the waiting room. |\n| WaitingRoomVideoChat | Allow user to chat with consumers on engagements while they wait. |\n| EngagementListen | Allow user to listen in on engagements assigned to other agents. |\n| EngagementWhisper | Allow user to whisper into engagements assigned to other agents. |\n| EngagementBarge | Allow user to barge in on engagements assigned to other agents. |\n| EngagementTakeover | Allow user to take over engagements assigned to other agents. |\n| ActiveEngagements | Allow user to view and use Open engagements in the client. |\n| ScheduledEngagements | Allow user to view and use Scheduled engagements in the client. |\n| CompletedEngagements | Allow user to view and use Closed engagements in the client. |\n| TeamTab | Allow user to view and use the Teams tab in the client. |\n| AddressBookTab | Allow user to view and use the Address book tab in the client. |\n| InboxTab | Allow user to view and use the Inbox tab in the client. |\n| AnalyticsTab | Allow user to view and use the Analytics tab in the client. |",
                            "example": "outbound-voice-call"
                          }
                        }
                      },
                      "description": "Privileges assigned to the role. Can be one or more of [these permissions](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0061941#h_01GE038GHMZDQPF35H3TXCJ1PK)."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2201` <br>\n Role does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:read:admin",
              "contact_center:read:role:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:role:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role",
        "description": "Delete a role. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "transfer_role_id",
            "in": "query",
            "description": "The transfer role's ID. If you deleted the role, you will need to reassign the users associated to this role to a different role.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "YjXzeo_S2DeV1QTrpA65Ms"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nRole deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2102` <br>\n Transfer role ID cannot be empty. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2201` <br>\n Role does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:write:admin",
              "contact_center:delete:role:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:role:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role",
        "description": "Update a role. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "description": "Role",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_name": {
                    "type": "string",
                    "description": "The role's name.",
                    "example": "Agent"
                  },
                  "role_description": {
                    "type": "string",
                    "description": "The role's description. **Note:** The Admin, Agent, and Supervisor roles do not support modification.",
                    "example": "Agent role."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nRole updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2203` <br>\n The role name already exists; please change to a new one. <br>\n**Error Code:** `2204` <br>\n Administrator|Supervisor|Agent role name cannot be updated. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2201` <br>\n Role does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:write:admin",
              "contact_center:update:role:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:role:admin"
          ]
        }
      }
    },
    "/contact_center/roles/{roleId}/users": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List users of a role",
        "description": "Use this API to get information about the users assigned to a specific role. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_role_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getRoleUsers",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRole users list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "users": {
                      "type": "array",
                      "description": "Information about the role's assigned users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "user@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:read:admin",
              "contact_center:read:list_role_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_role_users:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Assign a role",
        "description": "Use this API to assign users to a role. Roles have unique privileges that assigned users have access to. For example, an Administrator or Agent role. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:role_user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "assignRoleUsers",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "description": "The users to assign to the role. The value can be email or user ID. This request supports a maximum of 30 users per call.",
                    "items": {
                      "type": "string",
                      "example": "ukAAkZKfROKMSw1bj_RDFQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nRole assigned to user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "description": "Information about the users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "ukAAkZKfROKMSw1bj_RDFQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:write:admin",
              "contact_center:write:role_user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:role_user:admin"
          ]
        }
      }
    },
    "/contact_center/roles/{roleId}/users/{userId}": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Unassign a role",
        "description": "Unassign a user from a role. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_role:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:role_user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteRoleUser",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The role user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "aFjYXoDE1_eB2zmSpj6R61"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nRole unassigned from user."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2201` <br>\n Role does not exist. <br>\n**Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_role:write:admin",
              "contact_center:delete:role_user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_role:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:role_user:admin"
          ]
        }
      }
    },
    "/contact_center/agent_routing_profiles": {
      "get": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "List agent routing profiles",
        "description": "Returns a list of agent routing profiles.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:agent_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Listagentroutingprofiles",
        "parameters": [
          {
            "name": "agent_routing_profile_name",
            "in": "query",
            "description": "The agent routing profile's name. Support fuzzy search. This parameter requires encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "agent_routing_profile_name"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Agent routing profile list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "agent_routing_profiles": {
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array",
                      "description": "Information about the agent routing profiles.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agent_routing_profile_id": {
                            "type": "string",
                            "description": "The agent routing profile's ID.",
                            "example": "pkOWR9aiR1WLvyDJCBi06A"
                          },
                          "agent_routing_profile_name": {
                            "type": "string",
                            "description": "The agent routing profile's name.",
                            "example": "My agent routing profile"
                          },
                          "agent_routing_profile_description": {
                            "type": "string",
                            "description": "The agent routing profile's decription.",
                            "example": "This is the agent routing profile's description."
                          },
                          "wait_time_agent_in_seconds": {
                            "type": "integer",
                            "description": "Wait time for matched agent availability, in seconds. Set the minimum time before making an agent who matches the profile available for the queue.",
                            "example": 10
                          },
                          "priorities": {
                            "maxItems": 20,
                            "type": "array",
                            "description": "The proficiency priority. The higher priority skill category - with proficiency based skills - takes precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                            "items": {
                              "required": [
                                "category_type"
                              ],
                              "type": "object",
                              "properties": {
                                "priority_id": {
                                  "type": "string",
                                  "description": "The priority's ID.",
                                  "example": "jyuhjknkjgfkjhh9453fjdlg"
                                },
                                "priority_order": {
                                  "maximum": 20,
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "**Note** This field's values are ordered and unique.  This is the proficiency priority. The higher priority skill category - proficiency based skills - will take precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                                  "example": 1
                                },
                                "category_type": {
                                  "type": "string",
                                  "description": "The category's type. \n\n* `skill` - Skill category \n* `intent` - Intent group",
                                  "example": "skill",
                                  "enum": [
                                    "skill",
                                    "intent"
                                  ]
                                },
                                "skill_category_id": {
                                  "type": "string",
                                  "description": "The skill category's ID.",
                                  "example": "skill_category_id"
                                },
                                "intent_group_id": {
                                  "type": "string",
                                  "description": "The intent group's ID.",
                                  "example": "intent_group_id"
                                },
                                "skill_category_name": {
                                  "type": "string",
                                  "description": "The skill category's name.",
                                  "example": "skill_category_name"
                                },
                                "intent_group_name": {
                                  "type": "string",
                                  "description": "The intent group's name.",
                                  "example": "intent_group_name"
                                },
                                "skill_type": {
                                  "type": "string",
                                  "description": "The skill's type. Only applied when `category_type` is `skill`. \n\n* `text` - A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* `proficiency` - A proficiency-based skill, such as a second language. Skills in this category have assigned proficiency levels.",
                                  "example": "proficiency",
                                  "enum": [
                                    "text",
                                    "proficiency"
                                  ]
                                },
                                "minimum_proficiency_level": {
                                  "type": "integer",
                                  "description": "The skill's minimum proficiency level. \n\n**Note** Only applies to skill proficiency based skill categories. If minimum proficiency is set, agents must have a proficiency equal to or greater than the minimum proficiency value set.",
                                  "example": 2
                                },
                                "skill_category_required": {
                                  "type": "boolean",
                                  "description": "If a skill category is required, agents must have the corresponding skill or they will not be considered for assignment.",
                                  "example": true
                                },
                                "intent_group_required": {
                                  "type": "boolean",
                                  "description": "If an intent group is required, agents must have the corresponding intent or they will not be considered for assignment.",
                                  "example": false
                                }
                              },
                              "description": "The routing profile's priority."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:read:admin",
              "contact_center:read:agent_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:agent_routing_profile:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Create an agent routing profile",
        "description": "Create an agent routing profile.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:agent_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Createanagentroutingprofile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "agent_routing_profile_name"
                ],
                "type": "object",
                "properties": {
                  "agent_routing_profile_name": {
                    "type": "string",
                    "description": "The agent routing profile's name.",
                    "example": "My agent routing profile"
                  },
                  "agent_routing_profile_description": {
                    "type": "string",
                    "description": "The agent routing profile's description.",
                    "example": "This is the agent routing profile's description."
                  },
                  "wait_time_agent_in_seconds": {
                    "type": "integer",
                    "description": "Wait time for matched agent availability, in seconds. Set the minimum time before making an agent who matches the profile available for the queue.",
                    "example": 10,
                    "default": 3
                  },
                  "priorities": {
                    "maxItems": 20,
                    "minItems": 0,
                    "type": "array",
                    "description": "The proficiency priority. The higher priority skill category - with proficiency based skills - takes precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                    "items": {
                      "required": [
                        "category_type"
                      ],
                      "type": "object",
                      "properties": {
                        "category_type": {
                          "type": "string",
                          "description": "The category's type. \n\n* `skill` - Skill category \n* `intent` - Intent group",
                          "example": "skill",
                          "enum": [
                            "skill",
                            "intent"
                          ]
                        },
                        "skill_category_id": {
                          "type": "string",
                          "description": "The skill category's ID. Required when `category_type` is `skill`.",
                          "example": "skill_category_id"
                        },
                        "intent_group_id": {
                          "type": "string",
                          "description": "The intent group's ID. Required when `category_type` is `intent`.",
                          "example": "intent_group_id"
                        },
                        "minimum_proficiency_level": {
                          "type": "integer",
                          "description": "The skill's minimum proficiency level. **Note** Only applies to skill proficiency based skill categories. If minimum proficiency is set, agents must have a proficiency equal to or greater than the minimum proficiency value set. Only used when `category_type` is `skill`.",
                          "example": 2,
                          "default": 0
                        },
                        "skill_category_required": {
                          "type": "boolean",
                          "description": "If a category is required, agents must have the corresponding skill or they will not be considered for assignment. Required when `category_type` is `skill`.",
                          "example": true
                        },
                        "intent_group_required": {
                          "type": "boolean",
                          "description": "If an intent group is required, agents must have the corresponding intent or they will not be considered for assignment. Required when `category_type` is `intent`.",
                          "example": false
                        }
                      },
                      "description": "The routing profile's priority."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`    Agent routing profile created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent_routing_profile_id": {
                      "type": "string",
                      "description": "The agent routing profile's ID.",
                      "example": "pkOWR9aiR1WLvyDJCBi06A"
                    },
                    "agent_routing_profile_name": {
                      "type": "string",
                      "description": "The agent routing profile's name.",
                      "example": "My agent routing profile"
                    },
                    "agent_routing_profile_description": {
                      "type": "string",
                      "description": "The agent routing profile's decription.",
                      "example": "This is the agent routing profile's description."
                    },
                    "wait_time_agent_in_seconds": {
                      "type": "integer",
                      "description": "Wait time for matched agent availability, in seconds. Set the minimum time before making an agent who matches the profile available for the queue.",
                      "example": 10
                    },
                    "priorities": {
                      "maxItems": 20,
                      "type": "array",
                      "description": "The proficiency priority. The higher priority skill category - with proficiency based skills - takes precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                      "items": {
                        "required": [
                          "category_type"
                        ],
                        "type": "object",
                        "properties": {
                          "priority_id": {
                            "type": "string",
                            "description": "The priority's ID.",
                            "example": "jyuhjknkjgfkjhh9453fjdlg"
                          },
                          "priority_order": {
                            "maximum": 20,
                            "minimum": 1,
                            "type": "integer",
                            "description": "**Note** This field's values are ordered and unique.  This is the proficiency priority. The higher priority skill category - proficiency based skills - will take precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                            "example": 1
                          },
                          "category_type": {
                            "type": "string",
                            "description": "The category's type. \n\n* `skill` - Skill category \n* `intent` - Intent group",
                            "example": "skill",
                            "enum": [
                              "skill",
                              "intent"
                            ]
                          },
                          "skill_category_id": {
                            "type": "string",
                            "description": "The skill category's ID.",
                            "example": "skill_category_id"
                          },
                          "intent_group_id": {
                            "type": "string",
                            "description": "The intent group's ID.",
                            "example": "intent_group_id"
                          },
                          "skill_category_name": {
                            "type": "string",
                            "description": "The skill category's name.",
                            "example": "skill_category_name"
                          },
                          "intent_group_name": {
                            "type": "string",
                            "description": "The intent group's name.",
                            "example": "intent_group_name"
                          },
                          "skill_type": {
                            "type": "string",
                            "description": "The skill's type. Only applied when `category_type` is `skill`. \n\n* `text` - A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* `proficiency` - A proficiency-based skill, such as a second language. Skills in this category have assigned proficiency levels.",
                            "example": "proficiency",
                            "enum": [
                              "text",
                              "proficiency"
                            ]
                          },
                          "minimum_proficiency_level": {
                            "type": "integer",
                            "description": "The skill's minimum proficiency level. \n\n **Note** Only applies to skill proficiency based skill categories. If minimum proficiency is set, agents must have a proficiency equal to or greater than the minimum proficiency value set.",
                            "example": 2
                          },
                          "skill_category_required": {
                            "type": "boolean",
                            "description": "If a skill category is required, agents must have the corresponding skill or they will not be considered for assignment.",
                            "example": true
                          },
                          "intent_group_required": {
                            "type": "boolean",
                            "description": "If an intent group is required, agents must have the corresponding intent or they will not be considered for assignment.",
                            "example": false
                          }
                        },
                        "description": "The routing profile's priority."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4004` <br>\n Category doesn't exist. <br>\n**Error Code:** `4005` <br>\n Number of priorities exceeds the maximum limit. <br>\n**Error Code:** `4006` <br>\n Category is duplicated in priorities. <br>\n**Error Code:** `300` <br>\n Missing required parameter. <br>\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict  Agent routing profile's name already exists. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:write:admin",
              "contact_center:write:agent_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:agent_routing_profile:admin"
          ]
        }
      }
    },
    "/contact_center/agent_routing_profiles/{agentRoutingProfileId}": {
      "get": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Get an agent routing profile",
        "description": "Retrieve the agent routing profile. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:agent_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAgentRoutingProfile",
        "parameters": [
          {
            "name": "agentRoutingProfileId",
            "in": "path",
            "description": "The agent routing profile's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "opbnmoDlo_eV1QmTpj63ghj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nAgent routing profile returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent_routing_profile_id": {
                      "type": "string",
                      "description": "The agent routing profile's ID.",
                      "example": "fgjdkhgfieryt7465435kjhdkhg"
                    },
                    "agent_routing_profile_name": {
                      "type": "string",
                      "description": "The agent routing profile's name.",
                      "example": "My agent routing profile"
                    },
                    "agent_routing_profile_description": {
                      "type": "string",
                      "description": "The agent routing profile's description.",
                      "example": "Example routing profile description."
                    },
                    "wait_time_agent_in_seconds": {
                      "type": "integer",
                      "description": "Wait time for matched agent availability, in seconds. Set the minimum time before making an agent who matches the profile available for the queue.",
                      "example": 10
                    },
                    "priorities": {
                      "maxItems": 20,
                      "type": "array",
                      "description": "The proficiency priority. The higher priority skill category - with proficiency based skills - takes precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                      "items": {
                        "required": [
                          "category_type"
                        ],
                        "type": "object",
                        "properties": {
                          "priority_id": {
                            "type": "string",
                            "description": "The priority's ID.",
                            "example": "jyuhjknkjgfkjhh9453fjdlg"
                          },
                          "priority_order": {
                            "maximum": 20,
                            "minimum": 1,
                            "type": "integer",
                            "description": "**Note** This field's values are ordered and unique.  This is the proficiency priority. The higher priority skill category - proficiency based skills - will take precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                            "example": 1
                          },
                          "category_type": {
                            "type": "string",
                            "description": "The category's type. \n\n* `skill` - Skill category \n* `intent` - Intent group",
                            "example": "skill",
                            "enum": [
                              "skill",
                              "intent"
                            ]
                          },
                          "skill_category_id": {
                            "type": "string",
                            "description": "The skill category's ID.",
                            "example": "skill_category_id"
                          },
                          "intent_group_id": {
                            "type": "string",
                            "description": "The intent group's ID.",
                            "example": "intent_group_id"
                          },
                          "skill_category_name": {
                            "type": "string",
                            "description": "The skill category's name.",
                            "example": "skill_category_name"
                          },
                          "intent_group_name": {
                            "type": "string",
                            "description": "The intent group's name.",
                            "example": "intent_group_name"
                          },
                          "skill_type": {
                            "type": "string",
                            "description": "The skill's type. Only applied when `category_type` is `skill`. \n\n* `text` - A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* `proficiency` - A proficiency-based skill, such as a second language. Skills in this category have assigned proficiency levels.",
                            "example": "proficiency",
                            "enum": [
                              "text",
                              "proficiency"
                            ]
                          },
                          "minimum_proficiency_level": {
                            "type": "integer",
                            "description": "The skill's minimum proficiency level. \n\n **Note** Only applies to skill proficiency based skill categories. If minimum proficiency is set, agents must have a proficiency equal to or greater than the minimum proficiency value set.",
                            "example": 2
                          },
                          "skill_category_required": {
                            "type": "boolean",
                            "description": "If a skill category is required, agents must have the corresponding skill or they will not be considered for assignment.",
                            "example": true
                          },
                          "intent_group_required": {
                            "type": "boolean",
                            "description": "If an intent group is required, agents must have the corresponding intent or they will not be considered for assignment.",
                            "example": false
                          }
                        },
                        "description": "The routing profile's priority."
                      }
                    }
                  },
                  "description": "Information about the agent routing profile detail."
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Agent routing profile does not exist. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:read:admin",
              "contact_center:read:agent_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:agent_routing_profile:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Delete an agent routing profile",
        "description": "Delete an agent routing profile.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:agent_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Deleteanagentroutingprofile",
        "parameters": [
          {
            "name": "agentRoutingProfileId",
            "in": "path",
            "description": "The agent routing profile's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pkOWR9aiR1WLvyDJCBi06A"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Agent routing profile deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Agent routing profileId doesn't exist. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:write:admin",
              "contact_center:delete:agent_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:agent_routing_profile:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Update an agent routing profile's details",
        "description": "Update an agent routing profile details.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:agent_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Updateanagentroutingprofile'sdetails",
        "parameters": [
          {
            "name": "agentRoutingProfileId",
            "in": "path",
            "description": "The agent routing profile's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pkOWR9aiR1WLvyDJCBi06A"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent_routing_profile_name": {
                    "type": "string",
                    "description": "The agent routing profile's name.",
                    "example": "My agent routing profile"
                  },
                  "agent_routing_profile_description": {
                    "type": "string",
                    "description": "The agent routing profile's description.",
                    "example": "This is the agent routing profile's description."
                  },
                  "wait_time_agent_in_seconds": {
                    "type": "integer",
                    "description": "Wait time for matched agent availability, in seconds. Set the minimum time before making an agent who matches the profile available for the queue.",
                    "example": 10
                  },
                  "priorities": {
                    "maxItems": 20,
                    "minItems": 0,
                    "type": "array",
                    "description": "The proficiency priority. The higher priority skill category - with proficiency based skills - takes precedence over those with lower priority. When comparing agents and all else is equal, the agents with the higher proficiency in the higher prioritized skill category should be considered for assignment.",
                    "items": {
                      "required": [
                        "category_type"
                      ],
                      "type": "object",
                      "properties": {
                        "category_type": {
                          "type": "string",
                          "description": "The category's type. \n\n* `skill` - Skill category \n* `intent` - Intent group",
                          "example": "skill",
                          "enum": [
                            "skill",
                            "intent"
                          ]
                        },
                        "skill_category_id": {
                          "type": "string",
                          "description": "The skill category's ID. Required when `category_type` is `skill`.",
                          "example": "skill_category_id"
                        },
                        "intent_group_id": {
                          "type": "string",
                          "description": "The intent group's ID. Required when `category_type` is `intent`.",
                          "example": "intent_group_id"
                        },
                        "minimum_proficiency_level": {
                          "type": "integer",
                          "description": "The skill's minimum proficiency level. **Note** Only applies to skill proficiency based skill categories. If minimum proficiency is set, agents must have a proficiency equal to or greater than the minimum proficiency value set. Only used when `category_type` is `skill`.",
                          "example": 2,
                          "default": 0
                        },
                        "skill_category_required": {
                          "type": "boolean",
                          "description": "If a category is required, agents must have the corresponding skill or they will not be considered for assignment. Required when `category_type` is `skill`.",
                          "example": true
                        },
                        "intent_group_required": {
                          "type": "boolean",
                          "description": "If an intent group is required, agents must have the corresponding intent or they will not be considered for assignment. Required when `category_type` is `intent`.",
                          "example": false
                        }
                      },
                      "description": "The routing profile's priority."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Agent routing profile's details updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4004` <br>\n Category doesn't exist. <br>\n**Error Code:** `4005` <br>\n Number of priorities exceeds maximum limit. <br>\n**Error Code:** `4006` <br>\n Category is duplicated in priorities. <br>\n**Error Code:** `300` <br>\n Missing required parameter. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Agent routing profile doesn't exist. \n\n "
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict  Agent routing profile's name already exists. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:write:admin",
              "contact_center:update:agent_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:agent_routing_profile:admin"
          ]
        }
      }
    },
    "/contact_center/consumer_routing_profiles": {
      "get": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "List consumer routing profiles",
        "description": "Return a list of consumer routing profiles.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:consumer_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Listconsumerroutingprofiles",
        "parameters": [
          {
            "name": "consumer_routing_profile_name",
            "in": "query",
            "description": "The consumer routing profile's name. Supports fuzzy search. This parameter requires encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "consumer_routing_profile_name"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Consumer routing profile list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "consumer_routing_profiles": {
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array",
                      "description": "Information about the consumer routing profiles.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "consumer_routing_profile_id": {
                            "type": "string",
                            "description": "The consumer routing profile's ID.",
                            "example": "-6JPFRKERXymVrf_h2EISQ"
                          },
                          "consumer_routing_profile_name": {
                            "type": "string",
                            "description": "The consumer routing profile's name.",
                            "example": "My consumer routing profile"
                          },
                          "consumer_routing_profile_description": {
                            "type": "string",
                            "description": "The consumer routing profile's description.",
                            "example": "This is the consumer routing profile's description."
                          },
                          "top_priorities": {
                            "maxItems": 150,
                            "minItems": 0,
                            "type": "array",
                            "description": "The consumers' top priority. Decide the consumer's position in the queue. The higher the consumer's priority, the earlier the consumer will be served.",
                            "items": {
                              "required": [
                                "attribute_type"
                              ],
                              "type": "object",
                              "properties": {
                                "attribute_type": {
                                  "type": "string",
                                  "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n * `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                                  "example": "global_variable",
                                  "enum": [
                                    "address_book_contacts",
                                    "entrance_to_queue",
                                    "new_customer",
                                    "returning_customer",
                                    "release_to_queue",
                                    "skills",
                                    "address_book_variable",
                                    "global_variable"
                                  ]
                                },
                                "parameter": {
                                  "type": "object",
                                  "properties": {
                                    "ids": {
                                      "maxItems": 100,
                                      "minItems": 0,
                                      "type": "array",
                                      "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\n IDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n `address_book_variable`\nIDs - Address book ID list",
                                      "items": {
                                        "type": "string",
                                        "example": "mF8W-YRDRHCWyGMl4UNHWA"
                                      }
                                    },
                                    "enter_queue_start_time": {
                                      "type": "string",
                                      "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                      "example": "09:00 AM"
                                    },
                                    "enter_queue_end_time": {
                                      "type": "string",
                                      "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                      "example": "11:00 PM"
                                    },
                                    "enter_queue_timezone": {
                                      "type": "string",
                                      "description": "The timezone when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                      "example": "America/New_York"
                                    },
                                    "max_returning_minutes": {
                                      "maximum": 10080,
                                      "minimum": 1,
                                      "type": "integer",
                                      "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                                      "example": 60
                                    },
                                    "variable_id": {
                                      "type": "string",
                                      "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                                      "example": "--FBpU8hSGqIPNUv4lXR4A"
                                    },
                                    "variable_values": {
                                      "type": "array",
                                      "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                                      "items": {
                                        "type": "string",
                                        "example": "vip"
                                      }
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                                      "example": "equal_to",
                                      "enum": [
                                        "equal_to",
                                        "greater_than",
                                        "less_than",
                                        "contains"
                                      ]
                                    },
                                    "compared_value": {
                                      "type": "string",
                                      "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                                      "example": "1"
                                    }
                                  },
                                  "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n 1. `address_book_contacts`\n`parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n`parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n`parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n}\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                                }
                              },
                              "description": "The routing profile's top priority."
                            }
                          },
                          "accumulated_priorities": {
                            "maxItems": 150,
                            "minItems": 0,
                            "type": "array",
                            "description": "The consumers' accumulated priority. Use ratings to serve consumers from the highest to lowest value, from 100 to 1, based on a consumer attribute. Consumers accumulate priority while waiting in the queue, after top priority consumers.",
                            "items": {
                              "required": [
                                "attribute_type",
                                "incremental_rate"
                              ],
                              "type": "object",
                              "properties": {
                                "attribute_type": {
                                  "type": "string",
                                  "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n * `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                                  "example": "global_variable",
                                  "enum": [
                                    "address_book_contacts",
                                    "entrance_to_queue",
                                    "new_customer",
                                    "returning_customer",
                                    "release_to_queue",
                                    "skills",
                                    "address_book_variable",
                                    "global_variable"
                                  ]
                                },
                                "incremental_rate": {
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "The rate that consumers accumulate priority while waiting in line. For example, consumer A and consumer B have the same top priority. If consumer A.wait_time \\* consumer A.`incremental_rate` > consumer B.wait_time \\* consumer B.`incremental_rate`, consumer A will be first serviced.",
                                  "example": 10
                                },
                                "parameter": {
                                  "type": "object",
                                  "properties": {
                                    "ids": {
                                      "type": "array",
                                      "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\n IDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n `address_book_variable`\nIDs - Address book ID list",
                                      "items": {
                                        "type": "string",
                                        "example": "mF8W-YRDRHCWyGMl4UNHWA"
                                      }
                                    },
                                    "enter_queue_start_time": {
                                      "type": "string",
                                      "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                      "example": "09:00 AM"
                                    },
                                    "enter_queue_end_time": {
                                      "type": "string",
                                      "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                      "example": "11:00 PM"
                                    },
                                    "enter_queue_timezone": {
                                      "type": "string",
                                      "description": "The timezone when the consumer enters the queue.",
                                      "example": "America/New_York"
                                    },
                                    "max_returning_minutes": {
                                      "maximum": 10080,
                                      "minimum": 1,
                                      "type": "integer",
                                      "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                                      "example": 60
                                    },
                                    "variable_id": {
                                      "type": "string",
                                      "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                                      "example": "--FBpU8hSGqIPNUv4lXR4A"
                                    },
                                    "variable_values": {
                                      "type": "array",
                                      "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                                      "items": {
                                        "type": "string",
                                        "example": "vip"
                                      }
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                                      "example": "equal_to",
                                      "enum": [
                                        "equal_to",
                                        "greater_than",
                                        "less_than",
                                        "contains"
                                      ]
                                    },
                                    "compared_value": {
                                      "type": "string",
                                      "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                                      "example": "1"
                                    }
                                  },
                                  "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n 1. `address_book_contacts`\n`parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n`parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n`parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n}\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                                }
                              },
                              "description": "The routing profile's accumulated priority."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:read:admin",
              "contact_center:read:consumer_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:consumer_routing_profile:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Create a consumer routing profile",
        "description": "Create a consumer routing profile.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:consumer_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Createaconsumerroutingprofile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "consumer_routing_profile_name"
                ],
                "type": "object",
                "properties": {
                  "consumer_routing_profile_name": {
                    "type": "string",
                    "description": "The consumer routing profile's name.",
                    "example": "My consumer routing profile"
                  },
                  "consumer_routing_profile_description": {
                    "type": "string",
                    "description": "The consumer routing profile's description.",
                    "example": "This is the consumer routing profile's description."
                  },
                  "top_priorities": {
                    "maxItems": 150,
                    "minItems": 0,
                    "type": "array",
                    "description": "The consumers' top priority. Decide the consumer's position in the queue. The higher the consumer's priority, the earlier the consumer will be served.",
                    "items": {
                      "required": [
                        "attribute_type"
                      ],
                      "type": "object",
                      "properties": {
                        "attribute_type": {
                          "type": "string",
                          "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                          "example": "global_variable",
                          "enum": [
                            "address_book_contacts",
                            "entrance_to_queue",
                            "new_customer",
                            "returning_customer",
                            "release_to_queue",
                            "skills",
                            "address_book_variable",
                            "global_variable"
                          ]
                        },
                        "parameter": {
                          "type": "object",
                          "properties": {
                            "ids": {
                              "maxItems": 100,
                              "minItems": 0,
                              "type": "array",
                              "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                              "items": {
                                "type": "string",
                                "example": "mF8W-YRDRHCWyGMl4UNHWA"
                              }
                            },
                            "enter_queue_start_time": {
                              "type": "string",
                              "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "09:00 AM"
                            },
                            "enter_queue_end_time": {
                              "type": "string",
                              "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "11:00 PM"
                            },
                            "enter_queue_timezone": {
                              "type": "string",
                              "description": "The timezone when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "America/New_York"
                            },
                            "max_returning_minutes": {
                              "maximum": 10080,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                              "example": 60
                            },
                            "variable_id": {
                              "type": "string",
                              "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                              "example": "--FBpU8hSGqIPNUv4lXR4A"
                            },
                            "variable_values": {
                              "type": "array",
                              "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                              "items": {
                                "type": "string",
                                "example": "vip"
                              }
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                              "example": "equal_to",
                              "enum": [
                                "equal_to",
                                "greater_than",
                                "less_than",
                                "contains"
                              ]
                            },
                            "compared_value": {
                              "type": "string",
                              "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                              "example": "1"
                            }
                          },
                          "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n }\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                        }
                      },
                      "description": "The routing profile's top priority."
                    }
                  },
                  "accumulated_priorities": {
                    "maxItems": 150,
                    "minItems": 0,
                    "type": "array",
                    "description": "The consumers' accumulated priority. Use ratings to serve consumers from the highest to lowest value, from 100 to 1, based on a consumer attribute. Consumers accumulate priority while waiting in the queue, after top priority consumers.",
                    "items": {
                      "required": [
                        "attribute_type",
                        "incremental_rate"
                      ],
                      "type": "object",
                      "properties": {
                        "attribute_type": {
                          "type": "string",
                          "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                          "example": "global_variable",
                          "enum": [
                            "address_book_contacts",
                            "entrance_to_queue",
                            "new_customer",
                            "returning_customer",
                            "release_to_queue",
                            "skills",
                            "address_book_variable",
                            "global_variable"
                          ]
                        },
                        "incremental_rate": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The rate that consumers accumulate priority while waiting in line. For example, consumer A and consumer B have the same top priority. If consumer A.wait_time \\* consumer A.`incremental_rate` > consumer B.wait_time \\* consumer B.`incremental_rate`, consumer A will be first serviced.",
                          "example": 10
                        },
                        "parameter": {
                          "type": "object",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                              "items": {
                                "type": "string",
                                "example": "mF8W-YRDRHCWyGMl4UNHWA"
                              }
                            },
                            "enter_queue_start_time": {
                              "type": "string",
                              "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "09:00 AM"
                            },
                            "enter_queue_end_time": {
                              "type": "string",
                              "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "11:00 PM"
                            },
                            "enter_queue_timezone": {
                              "type": "string",
                              "description": "The timezone when the consumer enters the queue.",
                              "example": "America/New_York"
                            },
                            "max_returning_minutes": {
                              "maximum": 10080,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                              "example": 60
                            },
                            "variable_id": {
                              "type": "string",
                              "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                              "example": "--FBpU8hSGqIPNUv4lXR4A"
                            },
                            "variable_values": {
                              "type": "array",
                              "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                              "items": {
                                "type": "string",
                                "example": "vip"
                              }
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                              "example": "equal_to",
                              "enum": [
                                "equal_to",
                                "greater_than",
                                "less_than",
                                "contains"
                              ]
                            },
                            "compared_value": {
                              "type": "string",
                              "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                              "example": "1"
                            }
                          },
                          "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n }\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                        }
                      },
                      "description": "The routing profile's accumulated priority."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`    Consumer routing profile created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "consumer_routing_profile_id": {
                      "type": "string",
                      "description": "The consumer routing profile's ID.",
                      "example": "-6JPFRKERXymVrf_h2EISQ"
                    },
                    "consumer_routing_profile_name": {
                      "type": "string",
                      "description": "The consumer routing profile's name.",
                      "example": "My consumer routing profile"
                    },
                    "consumer_routing_profile_description": {
                      "type": "string",
                      "description": "The consumer routing profile's description.",
                      "example": "This is the consumer routing profile's description."
                    },
                    "top_priorities": {
                      "maxItems": 150,
                      "minItems": 0,
                      "type": "array",
                      "description": "The consumers' top priority. Decide the consumer's position in the queue. The higher the consumer's priority, the earlier the consumer will be served.",
                      "items": {
                        "required": [
                          "attribute_type"
                        ],
                        "type": "object",
                        "properties": {
                          "attribute_type": {
                            "type": "string",
                            "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                            "example": "global_variable",
                            "enum": [
                              "address_book_contacts",
                              "entrance_to_queue",
                              "new_customer",
                              "returning_customer",
                              "release_to_queue",
                              "skills",
                              "address_book_variable",
                              "global_variable"
                            ]
                          },
                          "parameter": {
                            "type": "object",
                            "properties": {
                              "ids": {
                                "maxItems": 100,
                                "minItems": 0,
                                "type": "array",
                                "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                                "items": {
                                  "type": "string",
                                  "example": "mF8W-YRDRHCWyGMl4UNHWA"
                                }
                              },
                              "enter_queue_start_time": {
                                "type": "string",
                                "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "09:00 AM"
                              },
                              "enter_queue_end_time": {
                                "type": "string",
                                "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "11:00 PM"
                              },
                              "enter_queue_timezone": {
                                "type": "string",
                                "description": "The timezone when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "America/New_York"
                              },
                              "max_returning_minutes": {
                                "maximum": 10080,
                                "minimum": 1,
                                "type": "integer",
                                "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                                "example": 60
                              },
                              "variable_id": {
                                "type": "string",
                                "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                                "example": "--FBpU8hSGqIPNUv4lXR4A"
                              },
                              "variable_values": {
                                "type": "array",
                                "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                                "items": {
                                  "type": "string",
                                  "example": "vip"
                                }
                              },
                              "operator": {
                                "type": "string",
                                "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                                "example": "equal_to",
                                "enum": [
                                  "equal_to",
                                  "greater_than",
                                  "less_than",
                                  "contains"
                                ]
                              },
                              "compared_value": {
                                "type": "string",
                                "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                                "example": "1"
                              }
                            },
                            "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n}\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                          }
                        },
                        "description": "The routing profile's top priority."
                      }
                    },
                    "accumulated_priorities": {
                      "maxItems": 150,
                      "minItems": 0,
                      "type": "array",
                      "description": "The consumers' accumulated priority. Use ratings to serve consumers from the highest to lowest value, from 100 to 1, based on a consumer attribute. Consumers accumulate priority while waiting in the queue, after top priority consumers.",
                      "items": {
                        "required": [
                          "attribute_type",
                          "incremental_rate"
                        ],
                        "type": "object",
                        "properties": {
                          "attribute_type": {
                            "type": "string",
                            "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                            "example": "global_variable",
                            "enum": [
                              "address_book_contacts",
                              "entrance_to_queue",
                              "new_customer",
                              "returning_customer",
                              "release_to_queue",
                              "skills",
                              "address_book_variable",
                              "global_variable"
                            ]
                          },
                          "incremental_rate": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "description": "The rate that consumers accumulate priority while waiting in line. For example, consumer A and consumer B have the same top priority. If consumer A.wait_time \\* consumer A.`incremental_rate` > consumer B.wait_time \\* consumer B.`incremental_rate`, consumer A will be first serviced.",
                            "example": 10
                          },
                          "parameter": {
                            "type": "object",
                            "properties": {
                              "ids": {
                                "type": "array",
                                "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                                "items": {
                                  "type": "string",
                                  "example": "mF8W-YRDRHCWyGMl4UNHWA"
                                }
                              },
                              "enter_queue_start_time": {
                                "type": "string",
                                "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "09:00 AM"
                              },
                              "enter_queue_end_time": {
                                "type": "string",
                                "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "11:00 PM"
                              },
                              "enter_queue_timezone": {
                                "type": "string",
                                "description": "The timezone when the consumer enters the queue.",
                                "example": "America/New_York"
                              },
                              "max_returning_minutes": {
                                "maximum": 10080,
                                "minimum": 1,
                                "type": "integer",
                                "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                                "example": 60
                              },
                              "variable_id": {
                                "type": "string",
                                "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                                "example": "--FBpU8hSGqIPNUv4lXR4A"
                              },
                              "variable_values": {
                                "type": "array",
                                "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                                "items": {
                                  "type": "string",
                                  "example": "vip"
                                }
                              },
                              "operator": {
                                "type": "string",
                                "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                                "example": "equal_to",
                                "enum": [
                                  "equal_to",
                                  "greater_than",
                                  "less_than",
                                  "contains"
                                ]
                              },
                              "compared_value": {
                                "type": "string",
                                "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                                "example": "1"
                              }
                            },
                            "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n}\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                          }
                        },
                        "description": "The routing profile's accumulated priority."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4010` <br>\n Number of priorities exceeds the maximum limit. <br>\n**Error Code:** `4011` <br>\n Consumer routing profile has duplicated priority attributes. <br>\n**Error Code:** `4012` <br>\n Consumer routing profile's related resource not found. <br>\n**Error Code:** `4013` <br>\n Invalid `compared_value` or operator in the consumer routing profile. <br>\n**Error Code:** `4014` <br>\n Duplicate variables in the consumer routing profile. <br>\n**Error Code:** `300` <br>\n Missing required parameter. <br>\n**Error Code:** `303` <br>\n Invalid parameter. <br>\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict  Consumer routing profile's name already exists. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:write:admin",
              "contact_center:write:consumer_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:consumer_routing_profile:admin"
          ]
        }
      }
    },
    "/contact_center/consumer_routing_profiles/{consumerRoutingProfileId}": {
      "get": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Get a consumer routing profile",
        "description": "Retrieve the consumer routing profile.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:consumer_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Getaconsumerroutingprofile",
        "parameters": [
          {
            "name": "consumerRoutingProfileId",
            "in": "path",
            "description": "The consumer routing profile's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "-6JPFRKERXymVrf_h2EISQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Consumer routing profile returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "consumer_routing_profile_id": {
                      "type": "string",
                      "description": "The consumer routing profile's ID.",
                      "example": "-6JPFRKERXymVrf_h2EISQ"
                    },
                    "consumer_routing_profile_name": {
                      "type": "string",
                      "description": "The consumer routing profile's name.",
                      "example": "My consumer routing profile"
                    },
                    "consumer_routing_profile_description": {
                      "type": "string",
                      "description": "The consumer routing profile's description.",
                      "example": "This is the consumer routing profile's description."
                    },
                    "top_priorities": {
                      "maxItems": 150,
                      "minItems": 0,
                      "type": "array",
                      "description": "The consumers' top priority. Decide the consumer's position in the queue. The higher the consumer's priority, the earlier the consumer will be served.",
                      "items": {
                        "required": [
                          "attribute_type"
                        ],
                        "type": "object",
                        "properties": {
                          "attribute_type": {
                            "type": "string",
                            "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                            "example": "global_variable",
                            "enum": [
                              "address_book_contacts",
                              "entrance_to_queue",
                              "new_customer",
                              "returning_customer",
                              "release_to_queue",
                              "skills",
                              "address_book_variable",
                              "global_variable"
                            ]
                          },
                          "parameter": {
                            "type": "object",
                            "properties": {
                              "ids": {
                                "maxItems": 100,
                                "minItems": 0,
                                "type": "array",
                                "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                                "items": {
                                  "type": "string",
                                  "example": "mF8W-YRDRHCWyGMl4UNHWA"
                                }
                              },
                              "enter_queue_start_time": {
                                "type": "string",
                                "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "09:00 AM"
                              },
                              "enter_queue_end_time": {
                                "type": "string",
                                "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "11:00 PM"
                              },
                              "enter_queue_timezone": {
                                "type": "string",
                                "description": "The timezone when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "America/New_York"
                              },
                              "max_returning_minutes": {
                                "maximum": 10080,
                                "minimum": 1,
                                "type": "integer",
                                "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                                "example": 60
                              },
                              "variable_id": {
                                "type": "string",
                                "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                                "example": "--FBpU8hSGqIPNUv4lXR4A"
                              },
                              "variable_values": {
                                "type": "array",
                                "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                                "items": {
                                  "type": "string",
                                  "example": "vip"
                                }
                              },
                              "operator": {
                                "type": "string",
                                "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                                "example": "equal_to",
                                "enum": [
                                  "equal_to",
                                  "greater_than",
                                  "less_than",
                                  "contains"
                                ]
                              },
                              "compared_value": {
                                "type": "string",
                                "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                                "example": "1"
                              }
                            },
                            "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n}\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                          }
                        },
                        "description": "The routing profile's top priority."
                      }
                    },
                    "accumulated_priorities": {
                      "maxItems": 150,
                      "minItems": 0,
                      "type": "array",
                      "description": "The consumers' accumulated priority. Use ratings to serve consumers from the highest to lowest value, from 100 to 1, based on a consumer attribute. Consumers accumulate priority while waiting in the queue, after top priority consumers.",
                      "items": {
                        "required": [
                          "attribute_type",
                          "incremental_rate"
                        ],
                        "type": "object",
                        "properties": {
                          "attribute_type": {
                            "type": "string",
                            "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                            "example": "global_variable",
                            "enum": [
                              "address_book_contacts",
                              "entrance_to_queue",
                              "new_customer",
                              "returning_customer",
                              "release_to_queue",
                              "skills",
                              "address_book_variable",
                              "global_variable"
                            ]
                          },
                          "incremental_rate": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "description": "The rate that consumers accumulate priority while waiting in line. For example, consumer A and consumer B have the same top priority. If consumer A.wait_time \\* consumer A.`incremental_rate` > consumer B.wait_time \\* consumer B.`incremental_rate`, consumer A will be first serviced.",
                            "example": 10
                          },
                          "parameter": {
                            "type": "object",
                            "properties": {
                              "ids": {
                                "type": "array",
                                "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                                "items": {
                                  "type": "string",
                                  "example": "mF8W-YRDRHCWyGMl4UNHWA"
                                }
                              },
                              "enter_queue_start_time": {
                                "type": "string",
                                "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "09:00 AM"
                              },
                              "enter_queue_end_time": {
                                "type": "string",
                                "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                                "example": "11:00 PM"
                              },
                              "enter_queue_timezone": {
                                "type": "string",
                                "description": "The timezone when the consumer enters the queue.",
                                "example": "America/New_York"
                              },
                              "max_returning_minutes": {
                                "maximum": 10080,
                                "minimum": 1,
                                "type": "integer",
                                "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                                "example": 60
                              },
                              "variable_id": {
                                "type": "string",
                                "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                                "example": "--FBpU8hSGqIPNUv4lXR4A"
                              },
                              "variable_values": {
                                "type": "array",
                                "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                                "items": {
                                  "type": "string",
                                  "example": "vip"
                                }
                              },
                              "operator": {
                                "type": "string",
                                "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                                "example": "equal_to",
                                "enum": [
                                  "equal_to",
                                  "greater_than",
                                  "less_than",
                                  "contains"
                                ]
                              },
                              "compared_value": {
                                "type": "string",
                                "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                                "example": "1"
                              }
                            },
                            "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n}\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                          }
                        },
                        "description": "The routing profile's accumulated priority."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Consumer routing profile does not exist. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:read:admin",
              "contact_center:read:consumer_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:consumer_routing_profile:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Delete a consumer routing profile",
        "description": "Delete a consumer routing profile.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:consumer_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Deleteaconsumerroutingprofile",
        "parameters": [
          {
            "name": "consumerRoutingProfileId",
            "in": "path",
            "description": "The consumer routing profile's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "consumerRoutingProfileId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Consumer routing profile deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Consumer routing profileId doesn't exist. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:write:admin",
              "contact_center:delete:consumer_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:consumer_routing_profile:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Routing Profiles"
        ],
        "summary": "Update a consumer routing profile's details",
        "description": "Update a consumer routing profile details.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_routing_profile:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:consumer_routing_profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Updateaconsumerroutingprofile'sdetails",
        "parameters": [
          {
            "name": "consumerRoutingProfileId",
            "in": "path",
            "description": "The consumer routing profile's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "-6JPFRKERXymVrf_h2EISQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consumer_routing_profile_name": {
                    "type": "string",
                    "description": "The consumer routing profile's name.",
                    "example": "My consumer routing profile"
                  },
                  "consumer_routing_profile_description": {
                    "type": "string",
                    "description": "The consumer routing profile's description.",
                    "example": "This is the consumer routing profile's description."
                  },
                  "top_priorities": {
                    "maxItems": 150,
                    "minItems": 0,
                    "type": "array",
                    "description": "The consumers' top priority. Decide the consumer's position in the queue. The higher the consumer's priority, the earlier the consumer will be served.",
                    "items": {
                      "required": [
                        "attribute_type"
                      ],
                      "type": "object",
                      "properties": {
                        "attribute_type": {
                          "type": "string",
                          "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                          "example": "global_variable",
                          "enum": [
                            "address_book_contacts",
                            "entrance_to_queue",
                            "new_customer",
                            "returning_customer",
                            "release_to_queue",
                            "skills",
                            "address_book_variable",
                            "global_variable"
                          ]
                        },
                        "parameter": {
                          "type": "object",
                          "properties": {
                            "ids": {
                              "maxItems": 100,
                              "minItems": 0,
                              "type": "array",
                              "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                              "items": {
                                "type": "string",
                                "example": "mF8W-YRDRHCWyGMl4UNHWA"
                              }
                            },
                            "enter_queue_start_time": {
                              "type": "string",
                              "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "09:00 AM"
                            },
                            "enter_queue_end_time": {
                              "type": "string",
                              "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "11:00 PM"
                            },
                            "enter_queue_timezone": {
                              "type": "string",
                              "description": "The timezone when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "America/New_York"
                            },
                            "max_returning_minutes": {
                              "maximum": 10080,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                              "example": 60
                            },
                            "variable_id": {
                              "type": "string",
                              "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                              "example": "--FBpU8hSGqIPNUv4lXR4A"
                            },
                            "variable_values": {
                              "type": "array",
                              "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                              "items": {
                                "type": "string",
                                "example": "vip"
                              }
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                              "example": "equal_to",
                              "enum": [
                                "equal_to",
                                "greater_than",
                                "less_than",
                                "contains"
                              ]
                            },
                            "compared_value": {
                              "type": "string",
                              "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                              "example": "1"
                            }
                          },
                          "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n }\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                        }
                      },
                      "description": "The routing profile's top priority."
                    }
                  },
                  "accumulated_priorities": {
                    "maxItems": 150,
                    "minItems": 0,
                    "type": "array",
                    "description": "The consumers' accumulated priority. Use ratings to serve consumers from the highest to lowest value, from 100 to 1, based on a consumer attribute. Consumers accumulate priority while waiting in the queue, after top priority consumers.",
                    "items": {
                      "required": [
                        "attribute_type",
                        "incremental_rate"
                      ],
                      "type": "object",
                      "properties": {
                        "attribute_type": {
                          "type": "string",
                          "description": "The attribute's type.\n\n* `address_book_contacts` - Address book contacts \n* `entrance_to_queue` - Entrance to queue \n* `new_customer` - New customer \n* `returning_customer` -  Returning customer \n* `release_to_queue` - Release to queue \n* `skills` - Skills \n* `address_book_variable` - Address book variable \n* `global_variable` - Global variable",
                          "example": "global_variable",
                          "enum": [
                            "address_book_contacts",
                            "entrance_to_queue",
                            "new_customer",
                            "returning_customer",
                            "release_to_queue",
                            "skills",
                            "address_book_variable",
                            "global_variable"
                          ]
                        },
                        "incremental_rate": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The rate that consumers accumulate priority while waiting in line. For example, consumer A and consumer B have the same top priority. If consumer A.wait_time \\* consumer A.`incremental_rate` > consumer B.wait_time \\* consumer B.`incremental_rate`, consumer A will be first serviced.",
                          "example": 10
                        },
                        "parameter": {
                          "type": "object",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "description": "The related entity ID list for priority's attribute. \n`address_book_contacts`\nIDs - Address book contact ID list\n`release_to_queue`\nIDs - Queue ID list\n`skills`\nIDs - Skill ID list. Should under the same skill category.\n`address_book_variable`\n IDs - Address book ID list",
                              "items": {
                                "type": "string",
                                "example": "mF8W-YRDRHCWyGMl4UNHWA"
                              }
                            },
                            "enter_queue_start_time": {
                              "type": "string",
                              "description": "The start time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "09:00 AM"
                            },
                            "enter_queue_end_time": {
                              "type": "string",
                              "description": "The end time when the consumer enters the queue. Only used when `attribute_type` is `entrance_to_queue`.",
                              "example": "11:00 PM"
                            },
                            "enter_queue_timezone": {
                              "type": "string",
                              "description": "The timezone when the consumer enters the queue.",
                              "example": "America/New_York"
                            },
                            "max_returning_minutes": {
                              "maximum": 10080,
                              "minimum": 1,
                              "type": "integer",
                              "description": "Maximum number of minutes from last participation to now. Only used when `attribute_type` is `returning_customer`.",
                              "example": 60
                            },
                            "variable_id": {
                              "type": "string",
                              "description": "The variable's ID. Only used when `attribute_type` is `global_variable` or `address_book_variable`.",
                              "example": "--FBpU8hSGqIPNUv4lXR4A"
                            },
                            "variable_values": {
                              "type": "array",
                              "description": "The optional variable's values. If variable matches any of them, it will match the priority. Only used when `attribute_type` is `address_book_variable`.",
                              "items": {
                                "type": "string",
                                "example": "vip"
                              }
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operator between global variable and `compared_value`. Only used when `attribute_type` is `global_variable`.",
                              "example": "equal_to",
                              "enum": [
                                "equal_to",
                                "greater_than",
                                "less_than",
                                "contains"
                              ]
                            },
                            "compared_value": {
                              "type": "string",
                              "description": "Compare the specified value to the variable's value. Only used when `attribute_type` is `global_variable`.",
                              "example": "1"
                            }
                          },
                          "description": "The parameter for priority's attribute. Parameter is different for each `attribute_type`:\n1. `address_book_contacts`\n `parameter` = {\n  `ids`: [`contanct1_id`, `contact2_id`] // address book contact ID list\n}\n\n2. `entrance_to_queue`\n `parameter` = {\n  `enter_queue_start_time`: `09:00 AM`,\n  `enter_queue_end_time`: `11:00 PM`,\n  `enter_queue_timezone`: `America/New_York`\n}\n\n3. `new_customer`\n`parameter` = `null` \n\n4. `returning_customer`\n`parameter` = {\n  `max_returning_minutes`: `60`\n}\n\n5. `release_to_queue`\n `parameter` = {\n  `ids`: [`queue1_id`, `queue2_id`] // queue ID list\n}\n\n6. `skills`\n`parameter` = {\n  `ids`: [`skill1_id`, `skill2_id`] // skill ID list\n}\n\n7. `address_book_variable`\n `parameter` = {\n  `variable_id` = `address_book_variable_id`,\n  `ids` = [`address_book_id1`, `address_book_id2`] // address book ID list\n  `variable_values` = [`value1`, `value2`]\n }\n\n8. `global_variable`\n`parameter` = {\n  `variable_id` = `global_variable_id`,\n  `operator` = `equal_to`,\n  `compared_value` = `value`\n}"
                        }
                      },
                      "description": "The routing profile's accumulated priority."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Consumer routing profile's details updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4010` <br>\n Number of priorities exceeds the maximum limit. <br>\n**Error Code:** `4011` <br>\n The consumer routing profile has duplicated priority attributes. <br>\n**Error Code:** `4012` <br>\n The consumer routing profile's related resource not found. <br>\n**Error Code:** `4013` <br>\n Invalid `compared_value` or operator in the consumer routing profile. <br>\n**Error Code:** `4014` <br>\n Duplicate variables in the consumer routing profile. <br>\n**Error Code:** `300` <br>\n Missing required parameter. <br>\n**Error Code:** `303` <br>\n Invalid parameter. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Consumer routing profile doesn't exist. \n\n "
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict  Consumer routing profile's name already exists. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_routing_profile:write:admin",
              "contact_center:update:consumer_routing_profile:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_routing_profile:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:consumer_routing_profile:admin"
          ]
        }
      }
    },
    "/contact_center/skills": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "List skills",
        "description": "Return a list of a skills or a skill category's assigned skills. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_skills:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listSkills",
        "parameters": [
          {
            "name": "skill_category_id",
            "in": "query",
            "description": "The skill category's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Mu_IEZZHQZGMY9avK74kwA"
            }
          },
          {
            "name": "skill_id",
            "in": "query",
            "description": "The skill's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          },
          {
            "name": "skill_type",
            "in": "query",
            "description": "The skill category's type.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
              "example": "text",
              "enum": [
                "text",
                "proficiency"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nSkills list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "jA5csQv1W1oXuYZLspNIZzMOXqTD9r9Rje2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "skills": {
                      "type": "array",
                      "description": "Information about the skills.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skill_id": {
                            "type": "string",
                            "description": "The skill's ID.",
                            "example": "saaHWgVMGQU69soco456oNA"
                          },
                          "skill_name": {
                            "type": "string",
                            "description": "The skill's name.",
                            "example": "French"
                          },
                          "skill_type": {
                            "type": "string",
                            "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n * 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
                            "example": "text",
                            "enum": [
                              "text",
                              "proficiency"
                            ]
                          },
                          "max_proficiency_level": {
                            "type": "integer",
                            "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). Use this value if the skill category's `type` value is `1` (a proficiency-based skill).",
                            "example": 5,
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "skill_category_name": {
                            "type": "string",
                            "description": "The skill category's name.",
                            "example": "Languages"
                          },
                          "skill_category_id": {
                            "type": "string",
                            "description": "The skill's category ID.",
                            "example": "rvYVEioQQduHb5iHCj7-kg"
                          },
                          "total_users": {
                            "type": "integer",
                            "description": "The total users of the skill",
                            "example": 5
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user who last modified the skill.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the skill was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          }
                        },
                        "description": "Information about the skill."
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:read:admin",
              "contact_center:read:list_skills:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_skills:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Skills"
        ],
        "summary": "Create a skill",
        "description": "Create a [skill](https://support.zoom.us/hc/en-us/articles/4423986613261) for skill-based routing. Skills are agent traits that ensure they are the right person to handle a customer interaction. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:skill:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "skillCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skill_category_id": {
                    "type": "string",
                    "description": "The skill category ID to assign the skill to.",
                    "example": "OyQQjWiZQTaBX7RwSK6iRw"
                  },
                  "skill_name": {
                    "type": "string",
                    "description": "The skill's name.",
                    "example": "French"
                  }
                },
                "description": "Information about the new skill."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nSkills created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_id": {
                      "type": "string",
                      "description": "The skill's ID.",
                      "example": "saaHWgVMGQU69soco456oNA"
                    },
                    "skill_name": {
                      "type": "string",
                      "description": "The skill's name.",
                      "example": "French"
                    },
                    "skill_type": {
                      "type": "string",
                      "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
                      "example": "text",
                      "enum": [
                        "text",
                        "proficiency"
                      ]
                    },
                    "max_proficiency_level": {
                      "type": "integer",
                      "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). Use this value if the skill category's `type` value is `1` (a proficiency-based skill).",
                      "example": 5,
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "skill_category_name": {
                      "type": "string",
                      "description": "The skill category's name.",
                      "example": "Languages"
                    },
                    "skill_category_id": {
                      "type": "string",
                      "description": "The skill's category ID.",
                      "example": "rvYVEioQQduHb5iHCj7-kg"
                    },
                    "total_users": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of users of the skill.",
                      "example": 5
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user that last modified this data.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when this data was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    }
                  },
                  "description": "Information about the skill."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1502` <br>\n Skill name already exists. You must select a different name. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1501` <br>\n Skill category does not exist: $skillCategoryId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:write:skill:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:skill:admin"
          ]
        }
      }
    },
    "/contact_center/skills/categories": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "List skill categories",
        "description": "List all available skill categories and their information. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_skill_categories:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listSkillCategory",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nSkill categories list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "H13iGyIFKCICxrYDlrppjJcDvN2jcBnRzD2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 1,
                      "default": 30
                    },
                    "skill_categories": {
                      "type": "array",
                      "description": "Information about the skill categories.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skill_category_id": {
                            "type": "string",
                            "description": "The skill category's ID.",
                            "example": "Mu_IEZZHQZGMY9avK74kwA"
                          },
                          "skill_category_name": {
                            "type": "string",
                            "description": "The skill category's name.",
                            "example": "Languages"
                          },
                          "skill_category_description": {
                            "type": "string",
                            "description": "The skill category's description.",
                            "example": "Medium proficiency."
                          },
                          "max_proficiency_level": {
                            "type": "integer",
                            "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). This value only returns if the skill category's `type` value is `1` (a proficiency-based skill).",
                            "example": 5,
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "total_agent_routing_profiles": {
                            "type": "integer",
                            "description": "The total agent routing profiles.",
                            "example": 5
                          },
                          "skill_type": {
                            "type": "string",
                            "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n * 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
                            "example": "text",
                            "enum": [
                              "text",
                              "proficiency"
                            ]
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID of the user who last modified the skill category.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the skill category was last modified.",
                            "format": "date-time",
                            "example": "2022-02-15T09:27:15Z"
                          }
                        },
                        "description": "Information about the available skill categories."
                      }
                    }
                  },
                  "description": "Information about the available skill categories."
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:read:admin",
              "contact_center:read:list_skill_categories:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_skill_categories:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Skills"
        ],
        "summary": "Create a skill category",
        "description": "Create a new skill category. Skill categories let you assign several similar skills to a category, such as language skills. You can then route French-speaking callers to contact center agents that have the highest proficiency with French. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:skill_category:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "SkillCategoryCreate",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "max_proficiency_level": {
                    "type": "integer",
                    "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). Use this value if the skill category's `type` value is `1` (a proficiency-based skill).",
                    "example": 5,
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "skill_category_name": {
                    "type": "string",
                    "description": "The skill category's name.",
                    "example": "Languages"
                  },
                  "skill_category_description": {
                    "type": "string",
                    "description": "The skill category's description.",
                    "example": "Medium proficiency."
                  },
                  "skill_type": {
                    "type": "string",
                    "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
                    "example": "text",
                    "enum": [
                      "text",
                      "proficiency"
                    ]
                  }
                },
                "description": "Information about the new skill category."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nSkill category created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_category_id": {
                      "type": "string",
                      "description": "The skill category's ID.",
                      "example": "Mu_IEZZHQZGMY9avK74kwA"
                    },
                    "skill_category_name": {
                      "type": "string",
                      "description": "The skill category's name.",
                      "example": "Languages"
                    },
                    "skill_category_description": {
                      "type": "string",
                      "description": "The skill category's description.",
                      "example": "Medium proficiency."
                    },
                    "skill_type": {
                      "type": "string",
                      "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
                      "example": "text",
                      "enum": [
                        "text",
                        "proficiency"
                      ]
                    },
                    "max_proficiency_level": {
                      "type": "integer",
                      "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). Use this value if the skill category's `type` value is `1` (a proficiency-based skill).",
                      "example": 5,
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the skill category.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the skill category was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    }
                  },
                  "description": "Information about the created skill category."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1502` <br>\nThe skill category highest proficiency level is \"5\", and the lowest level is \"1\".\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:write:skill_category:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:skill_category:admin"
          ]
        }
      }
    },
    "/contact_center/skills/categories/{skillCategoryId}": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "Get a skill category",
        "description": "Return information about a specific skill category. \n\n \n\n **[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:skill_category:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getSkillCategory",
        "parameters": [
          {
            "name": "skillCategoryId",
            "in": "path",
            "description": "The skill category's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Mu_IEZZHQZGMY9avK74kwA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nSkill category returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_category_id": {
                      "type": "string",
                      "description": "The skill category's ID.",
                      "example": "Mu_IEZZHQZGMY9avK74kwA"
                    },
                    "skill_category_name": {
                      "type": "string",
                      "description": "The skill category's name.",
                      "example": "Languages"
                    },
                    "skill_category_description": {
                      "type": "string",
                      "description": "The skill category's description.",
                      "example": "Medium proficiency."
                    },
                    "max_proficiency_level": {
                      "type": "integer",
                      "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). This value only returns if the skill category's `type` value is `1` (a proficiency-based skill).",
                      "example": 5,
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "skill_type": {
                      "type": "string",
                      "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
                      "example": "text",
                      "enum": [
                        "text",
                        "proficiency"
                      ]
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the skill category.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the skill category was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    }
                  },
                  "description": "Information about the skill category."
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1501` <br>\nSkill category does not exist: $skillCategoryId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:read:admin",
              "contact_center:read:skill_category:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:skill_category:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Skills"
        ],
        "summary": "Delete a skill category",
        "description": "Delete an existing skill category. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:skill_category:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "SkillCategoryDelete",
        "parameters": [
          {
            "name": "skillCategoryId",
            "in": "path",
            "description": "The skill category's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Mu_IEZZHQZGMY9avK74kwA"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nSkill category deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1501` <br>\nSkill category does not exist: $skillCategoryId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:delete:skill_category:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:skill_category:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Skills"
        ],
        "summary": "Update a skill category",
        "description": "Update a skill category. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:skill_category:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "SkillCategoryUpdate",
        "parameters": [
          {
            "name": "skillCategoryId",
            "in": "path",
            "description": "The skill category's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Mu_IEZZHQZGMY9avK74kwA"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "max_proficiency_level": {
                    "type": "integer",
                    "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). Use this value if the skill category's `type` value is `1` (a proficiency-based skill).",
                    "example": 5,
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "skill_category_name": {
                    "type": "string",
                    "description": "The skill category's name.",
                    "example": "Languages"
                  },
                  "skill_category_description": {
                    "type": "string",
                    "description": "The skill category's description.",
                    "example": "Medium proficiency."
                  }
                },
                "description": "Information about the new skill category."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nSkill category updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1502` <br>\nThe skill category highest proficiency level is \"5\", and the lowest level is \"1\".\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1501` <br>\nSkill category does not exist: $skillCategoryId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:update:skill_category:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:skill_category:admin"
          ]
        }
      }
    },
    "/contact_center/skills/{skillId}": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "Get a skill",
        "description": "Return a skill's information and its usage. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:skill:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getSkill",
        "parameters": [
          {
            "name": "skillId",
            "in": "path",
            "description": "The skill's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nSkill usage information returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_id": {
                      "type": "string",
                      "description": "The skill's ID.",
                      "example": "saaHWgVMGQU69soco456oNA"
                    },
                    "skill_name": {
                      "type": "string",
                      "description": "The skill's name.",
                      "example": "French"
                    },
                    "skill_type": {
                      "type": "string",
                      "description": "The skill category's type: \n* 'text' &mdash; A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* 'proficiency' &mdash; A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
                      "example": "text",
                      "enum": [
                        "text",
                        "proficiency"
                      ]
                    },
                    "max_proficiency_level": {
                      "type": "integer",
                      "description": "The skill category's maximum proficiency level, between `1` (low) and `5` (high). Use this value if the skill category's `type` value is `1` (a proficiency-based skill).",
                      "example": 5,
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "skill_category_name": {
                      "type": "string",
                      "description": "The skill category's name.",
                      "example": "Languages"
                    },
                    "skill_category_id": {
                      "type": "string",
                      "description": "The skill's category ID.",
                      "example": "rvYVEioQQduHb5iHCj7-kg"
                    },
                    "total_users": {
                      "type": "integer",
                      "description": "The total users of the skill",
                      "example": 5
                    },
                    "modified_by": {
                      "type": "string",
                      "description": "The ID of the user who last modified the skill.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "last_modified_time": {
                      "type": "string",
                      "description": "The date and time when the skill was last modified.",
                      "format": "date-time",
                      "example": "2022-02-15T09:27:15Z"
                    }
                  },
                  "description": "Information about the skill."
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1401` <br>\nSkill does not exist: $skillId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:read:admin",
              "contact_center:read:skill:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:skill:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Skills"
        ],
        "summary": "Delete a skill",
        "description": "Delete a skill. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:skill:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "skillDelete",
        "parameters": [
          {
            "name": "skillId",
            "in": "path",
            "description": "The skill's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204 `  \n \nSkill deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1401` <br>\nSkill does not exist: $skillId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:delete:skill:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:skill:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Skills"
        ],
        "summary": "Update a skill",
        "description": "Use this API to update a skill's name. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:skill:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "skillNameUpdate",
        "parameters": [
          {
            "name": "skillId",
            "in": "path",
            "description": "The skill's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skill_name": {
                    "type": "string",
                    "description": "The skill's new name.",
                    "example": "this is a skill name"
                  }
                },
                "description": "Information about the updated skill."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nSkill updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1401` <br>\nSkill does not exist: $skillId.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:update:skill:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:skill:admin"
          ]
        }
      }
    },
    "/contact_center/skills/{skillId}/users": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "List users of a skill",
        "description": "Retrieve a list of all users assigned to a skill.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_skill_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listSkillUsers",
        "parameters": [
          {
            "name": "skillId",
            "in": "path",
            "description": "The skill's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nSkill user list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "users": {
                      "type": "array",
                      "description": "Information about the skill users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:read:admin",
              "contact_center:read:list_skill_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_skill_users:admin"
          ]
        }
      }
    },
    "/contact_center/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users' profiles",
        "description": "Returns a list of users and their information. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "users",
        "parameters": [
          {
            "name": "search_key",
            "in": "query",
            "description": "The user's email address or username. This parameter requires encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "jchill@example.com"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "The region's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "8f71O6rWT8KFUGQmJIFAdQ"
            }
          },
          {
            "name": "user_access",
            "in": "query",
            "description": "The user's access status. \n* `active` &mdash; The user's role permissions allow them to access the Contact Center. \n* `inactive` &mdash; The user cannot access the Contact Center.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": [
                "active",
                "inactive"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nUser list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "users": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Information about the users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          },
                          "role_id": {
                            "type": "string",
                            "description": "The user's role ID.",
                            "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The user's role name.",
                            "example": "Admin"
                          },
                          "client_integration": {
                            "type": "string",
                            "description": "The contact center's client integration. \n * `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                            "example": "Salesforce",
                            "enum": [
                              "Default",
                              "Salesforce",
                              "Zendesk",
                              "ServiceNow",
                              "Microsoft_Dynamics_365"
                            ]
                          },
                          "status_id": {
                            "type": "string",
                            "description": "The user's status ID.",
                            "example": "2"
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, such as &quot;Lunch&quot; or &quot;Away until Monday&quot;",
                            "example": "Not Ready",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied"
                            ]
                          },
                          "sub_status_id": {
                            "type": "string",
                            "description": "The user&rsquo;s reason ID when the user status is `Not Ready`.",
                            "example": "21"
                          },
                          "sub_status_name": {
                            "type": "string",
                            "description": "The user&rsquo;s reason when the user status is `Not Ready`.\n\n To query a list of default and custom `Not Ready` reasons, call [List System Statuses](/docs/contact-center/apis/#operation/listSystemStatus) (filter by &quot;queue_opt_out_and_not_ready_status&quot; status_category)\n\n Default `Not Ready` reasons:\n * Break \n* End Shift \n* Forced \n* Meal \n* Meeting \n * Training \n",
                            "example": "Meal",
                            "enum": [
                              "Break",
                              "End Shift",
                              "Forced",
                              "Meal",
                              "Meeting",
                              "Training"
                            ]
                          },
                          "user_access": {
                            "type": "string",
                            "description": "The user's access status. \n* `active` &mdash; The user's role permissions allow them to access the Contact Center. \n* `inactive` &mdash; The user cannot access the Contact Center.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          },
                          "modified_by": {
                            "type": "string",
                            "description": "The ID that last modified the user.",
                            "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                          },
                          "last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the user was last modified.",
                            "format": "date-time",
                            "example": "2020-02-10T21:39:50Z"
                          },
                          "country_iso_code": {
                            "type": "string",
                            "description": "Two-letter country [code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                            "example": "US"
                          },
                          "region_id": {
                            "type": "string",
                            "description": "The user's region ID.",
                            "example": "8f71O6rWT8KFUGQmJIFAdQ"
                          },
                          "region_name": {
                            "type": "string",
                            "description": "The user's region name.",
                            "example": "Main Region"
                          },
                          "channel_settings": {
                            "type": "object",
                            "properties": {
                              "multi_channel_engagements": {
                                "type": "object",
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to allow users to receive voice or video engagements while handling chat and SMS engagements, based on the `max_agent_load` value.",
                                    "example": true
                                  },
                                  "max_agent_load": {
                                    "maximum": 100,
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                                    "example": 50
                                  },
                                  "email_max_agent_load": {
                                    "maximum": 100,
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                                    "example": 50
                                  }
                                },
                                "description": "Information about the setting's multi-channel engagements."
                              },
                              "concurrent_message_capacity": {
                                "maximum": 20,
                                "minimum": 0,
                                "type": "integer",
                                "description": "The maximum number of concurrent messaging conversations that can be assigned to a user.",
                                "example": 4
                              },
                              "concurrent_email_capacity": {
                                "maximum": 20,
                                "minimum": 0,
                                "type": "integer",
                                "description": "The maximum number of concurrent email conversations that can be assigned to a user.",
                                "example": 4
                              }
                            },
                            "description": "Information about the channel settings."
                          },
                          "package_name": {
                            "type": "string",
                            "description": "The Zoom Contact Center Plan to assign to the user.Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n*`elite` - Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                            "example": "essentials",
                            "enum": [
                              "essentials",
                              "premium",
                              "elite"
                            ]
                          },
                          "add_ons_plan": {
                            "type": "array",
                            "description": "The Zoom Contact Center Plan to assign to the user.Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                            "items": {
                              "type": "string",
                              "example": "ai_expert_assist",
                              "enum": [
                                "ai_expert_assist"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:read:admin",
              "contact_center:read:list_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_users:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user's profile",
        "description": "Create a profile for a user. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "The user's ID.",
                    "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                  },
                  "user_email": {
                    "type": "string",
                    "description": "The user's email address. \n\n**Note** Provide either `user_email` or `user_id`. If both `user_email` and `user_id` are provided, only `user_email` will be used, while `user_id` will be ignored.",
                    "format": "email",
                    "example": "jchill@example.com"
                  },
                  "role_id": {
                    "type": "string",
                    "description": "The user's role ID. Both `role_id` and `template_id` cannot be empty.",
                    "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                  },
                  "country_iso_code": {
                    "type": "string",
                    "description": "The [ISO country code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                    "example": "US"
                  },
                  "client_integration": {
                    "type": "string",
                    "description": "The Contact Center's client integration. \n* `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                    "example": "Salesforce",
                    "enum": [
                      "Default",
                      "Salesforce",
                      "Zendesk",
                      "ServiceNow",
                      "Microsoft_Dynamics_365"
                    ]
                  },
                  "client_integration_name": {
                    "type": "string",
                    "description": "The client integration connection name to be assigned to the user.",
                    "example": "integration-test"
                  },
                  "user_access": {
                    "type": "string",
                    "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n* `inactive` - The user cannot access the Contact Center.",
                    "example": "active",
                    "enum": [
                      "active",
                      "inactive"
                    ]
                  },
                  "region_id": {
                    "type": "string",
                    "description": "The user's region ID.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  },
                  "channel_settings": {
                    "type": "object",
                    "properties": {
                      "multi_channel_engagements": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to receive voice or video engagements while handling chat and SMS engagements, based on the `max_agent_load` value.",
                            "example": true
                          },
                          "max_agent_load": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                            "example": 50
                          },
                          "email_max_agent_load": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                            "example": 50
                          }
                        },
                        "description": "Information about the setting's multi-channel engagements."
                      },
                      "concurrent_message_capacity": {
                        "maximum": 20,
                        "minimum": 0,
                        "type": "integer",
                        "description": "The maximum number of concurrent messaging conversations that can be assigned to a user.",
                        "example": 4
                      },
                      "concurrent_email_capacity": {
                        "maximum": 20,
                        "minimum": 0,
                        "type": "integer",
                        "description": "The maximum number of concurrent email conversations that can be assigned to a user.",
                        "example": 4
                      }
                    },
                    "description": "Information about the channel settings."
                  },
                  "template_id": {
                    "type": "string",
                    "description": "To retrieve the template ID, call the **List User's Templates** API. The template ID must correspond to a template with a status of `Active` and a type of` Add`. If you provide the add-type template value, leave all other fields blank to apply all settings from the template. If you specify both individual values and specify a template in the request, the individual values will take priority over the template settings.",
                    "example": "OlK7lczzT_e7h6p1Q6wGdg"
                  },
                  "package_name": {
                    "type": "string",
                    "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n*`elite`  - Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                    "example": "essentials",
                    "enum": [
                      "essentials",
                      "premium",
                      "elite"
                    ]
                  },
                  "add_ons_plan": {
                    "type": "array",
                    "description": "This is an optional field. The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                    "items": {
                      "type": "string",
                      "example": "ai_expert_assist",
                      "enum": [
                        "ai_expert_assist"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nUser created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "string",
                      "description": "The user's ID.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The user's name.",
                      "example": "Jill"
                    },
                    "user_email": {
                      "type": "string",
                      "description": "The user's email address.",
                      "format": "email",
                      "example": "jchill@example.com"
                    },
                    "role_id": {
                      "type": "string",
                      "description": "The user's role ID.",
                      "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                    },
                    "role_name": {
                      "type": "string",
                      "description": "The user's role name.",
                      "example": "Admin"
                    },
                    "country_iso_code": {
                      "type": "string",
                      "description": "The [ISO country code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                      "example": "US"
                    },
                    "client_integration": {
                      "type": "string",
                      "description": "The contact center's client integration. \n* `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                      "example": "Salesforce",
                      "enum": [
                        "Default",
                        "Salesforce",
                        "Zendesk",
                        "ServiceNow",
                        "Microsoft_Dynamics_365"
                      ]
                    },
                    "client_integration_name": {
                      "type": "string",
                      "description": "The client integration connection name to be assigned to the user.",
                      "example": "integration-test"
                    },
                    "status_id": {
                      "type": "string",
                      "description": "The user's availability status ID.",
                      "example": "1"
                    },
                    "status_name": {
                      "type": "string",
                      "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, such as &quot;Lunch&quot; or &quot;Away until Monday&quot;",
                      "example": "Offline",
                      "enum": [
                        "Offline",
                        "Ready",
                        "Not Ready",
                        "Occupied"
                      ]
                    },
                    "user_access": {
                      "type": "string",
                      "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n * `inactive` - The user cannot access the Contact Center.",
                      "example": "active",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "region_id": {
                      "type": "string",
                      "description": "The user's region ID.",
                      "example": "8f71O6rWT8KFUGQmJIFAdQ"
                    },
                    "region_name": {
                      "type": "string",
                      "description": "The user's region name.",
                      "example": "Main Region"
                    },
                    "channel_settings": {
                      "type": "object",
                      "properties": {
                        "multi_channel_engagements": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to receive voice or video engagements while handling chat and SMS engagements, based on the `max_agent_load` value.",
                              "example": true
                            },
                            "max_agent_load": {
                              "maximum": 100,
                              "minimum": 1,
                              "type": "integer",
                              "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                              "example": 50
                            },
                            "email_max_agent_load": {
                              "maximum": 100,
                              "minimum": 1,
                              "type": "integer",
                              "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                              "example": 50
                            }
                          },
                          "description": "Information about the setting's multi-channel engagements."
                        },
                        "concurrent_message_capacity": {
                          "maximum": 20,
                          "minimum": 0,
                          "type": "integer",
                          "description": "The maximum number of concurrent messaging conversations that can be assigned to a user.",
                          "example": 4
                        },
                        "concurrent_email_capacity": {
                          "maximum": 20,
                          "minimum": 0,
                          "type": "integer",
                          "description": "The maximum number of concurrent email conversations that can be assigned to a user.",
                          "example": 4
                        }
                      },
                      "description": "Information about the channel settings."
                    },
                    "package_name": {
                      "type": "string",
                      "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n*`elite` \u2014 Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                      "example": "essentials",
                      "enum": [
                        "essentials",
                        "premium",
                        "elite"
                      ]
                    },
                    "add_ons_plan": {
                      "type": "array",
                      "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account. \n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                      "items": {
                        "type": "string",
                        "example": "ai_expert_assist"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1003` <br>\n User creation failed. Try again later. <br>\n**Error Code:** `1004` <br>\n Invalid user ID or user email: $email. <br>\n**Error Code:** `1007` <br>\n User already exists: $email. <br>\n**Error Code:** `1009` <br>\n User ID or user email cannot be empty at the same time. <br>\n**Error Code:** `8003` <br>\n User template not found: $template_id <br>\n**Error Code:** `8004` <br>\n User template type error: $template_id <br>\n**Error Code:** `8005` <br>\n User template status error: $template_id <br>\n**Error Code:** `290010` <br>\n The selected package or add-ons is not enough. <br>\n**Error Code:** `1701` <br>\n The account package does not exist:$zoom_contact_center_package. <br>\n**Error Code:** `1702` <br>\n The account addons package does not exist:$zoom_contact_center_addons_plan. <br>\n**Error Code:** `300` <br>\n Validation failed. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1006` <br>\n The account \"$client_integration\" client integration does not exist. Add it to the \"Integrations\" function module. <br>\n **Error Code:** `2201` <br>\n Role does not exist: $role_id. <br>\n**Error Code:** `2202` <br>\n Country ISO Code does not exist: $country_iso_code. <br>\n**Error Code:** `1017` <br>\n Region does not exist. <br>\n**Error Code:** `1020` <br>\n The account $client_integration client integration name does not exist. Add it to the **Integrations** function module. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:write:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:user:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Batch delete user profiles",
        "description": "Batch delete users. \n\n**Note**: Either `user_ids` or `user_emails` needs to be provided. If both `user_ids` and `user_emails` are provided, only `user_ids` will be used, while `user_emails` will be ignored. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:batch_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "batchDeleteUsers",
        "parameters": [
          {
            "name": "user_ids",
            "in": "query",
            "description": "A comma-separated list of user IDs to query, up to 20 user IDs.",
            "required": false,
            "schema": {
              "maxItems": 20,
              "type": "array",
              "items": {
                "type": "string",
                "example": "IGTRVt3gQ2i-WjoUIjeZxw"
              }
            }
          },
          {
            "name": "user_emails",
            "in": "query",
            "description": "A comma-separated list of user emails to query, up to 20 user emails.",
            "required": false,
            "schema": {
              "maxItems": 20,
              "type": "array",
              "items": {
                "type": "string",
                "example": "jchill@example.com"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nUsers have been deleted in bulk."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1012` <br>\n User does not exist: [$userId]. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:delete:batch_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:batch_users:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Batch update user profiles",
        "description": "Batch update user profiles. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:batch_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "BatchUpdateUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "maxItems": 20,
                    "type": "array",
                    "description": "Information about the users, the maximum number of updated users is 20.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "The user's ID. This field is only used as an input parameter and cannot be updated.",
                          "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                        },
                        "user_email": {
                          "type": "string",
                          "description": "The user's email address. This field is only used as an input parameter and cannot be updated. \n\n**Note**: Either `user_email` or `user_id` needs to be provided. If both `user_email` and `user_id` are provided, only `user_id` will be used, while `user_email` will be ignored.",
                          "format": "email",
                          "example": "jchill@example.com"
                        },
                        "client_integration": {
                          "type": "string",
                          "description": "The contact center's client integration. \n * `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                          "example": "Salesforce",
                          "enum": [
                            "Default",
                            "Salesforce",
                            "Zendesk",
                            "ServiceNow",
                            "Microsoft_Dynamics_365"
                          ]
                        },
                        "client_integration_name": {
                          "type": "string",
                          "description": "The client integration connection name to be assigned to the user.",
                          "example": "integration-test"
                        },
                        "role_id": {
                          "type": "string",
                          "description": "The user's role ID.",
                          "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                        },
                        "status_id": {
                          "type": "string",
                          "description": "The user's status ID.",
                          "example": "1",
                          "deprecated": true
                        },
                        "sub_status_id": {
                          "type": "string",
                          "description": "The user's reason ID when the user status is `Not Ready`.",
                          "example": "21",
                          "deprecated": true
                        },
                        "user_access": {
                          "type": "string",
                          "description": "The user's access status. \n* `active` &mdash; The user's role permissions allow them to access the Contact Center. \n* `inactive` &mdash; The user cannot access the Contact Center.",
                          "example": "active",
                          "enum": [
                            "active",
                            "inactive"
                          ]
                        },
                        "country_iso_code": {
                          "type": "string",
                          "description": "Two-letter country [code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                          "example": "US"
                        },
                        "template_id": {
                          "type": "string",
                          "description": "To retrieve the template ID, call the **List User's Templates** API. The template ID must correspond to a template with a status of `Active` and a type of `Update`.If you provide this value, leave all other fields blank to apply the settings from the template. Only the settings from the template indicated as 'override' will be applied to the user. If you specify both individual values and a template in the request, the individual values take priority over the template settings.",
                          "example": "4pPgojTBRC69wEYSlDhffA"
                        },
                        "package_name": {
                          "type": "string",
                          "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account. An empty value will not assign the user to Zoom Contact Center. \n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n*`elite`  \u2014 Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                          "example": "essentials",
                          "enum": [
                            "Essentials",
                            "Premium",
                            "Elite"
                          ]
                        },
                        "add_ons_plan": {
                          "type": "array",
                          "description": "This is an optional field. The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account. Empty value will result in no changes. \n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                          "items": {
                            "type": "string",
                            "example": "ai_expert_assist",
                            "enum": [
                              "ai_expert_assist"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nUsers updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `8003` <br>\n User template not found: $template_id. <br>\n**Error Code:** `8004` <br>\n User template type error: $template_id. <br>\n**Error Code:** `8005` <br>\n User template status error: $template_id. <br>\n **Error Code:** `290010` <br>\n The selected package or add-ons is not enough. <br>\n**Error Code:** `1701` <br>\n The account package does not exist: $zoom_contact_center_package. <br>\n**Error Code:** `1702` <br>\n The account addons package does not exist: $zoom_contact_center_addons_plan. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:update:batch_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:batch_users:admin"
          ]
        }
      }
    },
    "/contact_center/users/batch": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Batch create user profiles",
        "description": "Batch create user profiles. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:batch_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "BatchCreateUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "maxItems": 20,
                    "type": "array",
                    "description": "Information about the users, the maximum number of created users is 20.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "The user's ID.",
                          "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                        },
                        "user_email": {
                          "type": "string",
                          "description": "The user's email address. \n\n**Note**: Either `user_email` or `user_id` needs to be provided. If both `user_email` and `user_id` are provided, only `user_email` will be used, while `user_id` will be ignored.",
                          "format": "email",
                          "example": "jchill@example.com"
                        },
                        "role_id": {
                          "type": "string",
                          "description": "The user's role ID. Both `role_id` and `template_id` can't be empty.",
                          "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                        },
                        "country_iso_code": {
                          "type": "string",
                          "description": "The [ISO country code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                          "example": "US"
                        },
                        "client_integration": {
                          "type": "string",
                          "description": "The Contact Center's client integration. \n * `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                          "example": "Salesforce",
                          "enum": [
                            "Default",
                            "Salesforce",
                            "Zendesk",
                            "ServiceNow",
                            "Microsoft_Dynamics_365"
                          ]
                        },
                        "client_integration_name": {
                          "type": "string",
                          "description": "The client integration connection name to be assigned to the user.",
                          "example": "integration-test"
                        },
                        "user_access": {
                          "type": "string",
                          "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n* `inactive` - The user cannot access the Contact Center.",
                          "example": "active",
                          "enum": [
                            "active",
                            "inactive"
                          ]
                        },
                        "channel_settings": {
                          "type": "object",
                          "properties": {
                            "multi_channel_engagements": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to allow users to receive voice or video engagements while handling chat and SMS engagements, based on the `max_agent_load` value.",
                                  "example": true
                                },
                                "max_agent_load": {
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                                  "example": 50
                                },
                                "email_max_agent_load": {
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                                  "example": 50
                                }
                              },
                              "description": "Information about the setting's multi-channel engagements."
                            },
                            "concurrent_message_capacity": {
                              "maximum": 20,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The maximum number of concurrent messaging conversations that can be assigned to a user.",
                              "example": 4
                            },
                            "concurrent_email_capacity": {
                              "maximum": 20,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The maximum number of concurrent email conversations that can be assigned to a user.",
                              "example": 4
                            }
                          },
                          "description": "Information about the channel settings."
                        },
                        "template_id": {
                          "type": "string",
                          "description": "To retrieve the template ID, call the `List User's Templates` API. The template ID must correspond to a template with a status of `Active` and a type of `Add`. If you provide the add-type template value, leave all other fields blank to apply all settings from the template. If you specify both individual values and specify a template in the request, the individual values will take priority over the template settings.",
                          "example": "4pPgojTBRC69wEYSlDhffA"
                        },
                        "package_name": {
                          "type": "string",
                          "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n*`elite` - Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                          "example": "essentials",
                          "enum": [
                            "essentials",
                            "premium",
                            "elite"
                          ]
                        },
                        "add_ons_plan": {
                          "type": "array",
                          "description": "This is an optional field. The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                          "items": {
                            "type": "string",
                            "example": "ai_expert_assist",
                            "enum": [
                              "ai_expert_assist"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nUsers created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "maxItems": 20,
                      "type": "array",
                      "description": "Information about the users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Jill"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "The user's email address.",
                            "format": "email",
                            "example": "jchill@example.com"
                          },
                          "role_id": {
                            "type": "string",
                            "description": "The user's role ID.",
                            "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                          },
                          "role_name": {
                            "type": "string",
                            "description": "The user's role name.",
                            "example": "Admin"
                          },
                          "country_iso_code": {
                            "type": "string",
                            "description": "The [ISO country code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                            "example": "US"
                          },
                          "client_integration": {
                            "type": "string",
                            "description": "The contact center's client integration. \n * `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                            "example": "Salesforce",
                            "enum": [
                              "Default",
                              "Salesforce",
                              "Zendesk",
                              "ServiceNow",
                              "Microsoft_Dynamics_365"
                            ]
                          },
                          "client_integration_name": {
                            "type": "string",
                            "description": "The client integration connection name to be assigned to the user.",
                            "example": "integration-test"
                          },
                          "status_id": {
                            "type": "string",
                            "description": "The user's availability status ID.",
                            "example": "1"
                          },
                          "status_name": {
                            "type": "string",
                            "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline \n* Ready \n* Not Ready \n* Occupied \n* A custom user status, such as &quot;Lunch&quot; or &quot;Away until Monday&quot;",
                            "example": "Offline",
                            "enum": [
                              "Offline",
                              "Ready",
                              "Not Ready",
                              "Occupied"
                            ]
                          },
                          "user_access": {
                            "type": "string",
                            "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n* `inactive` - The user cannot access the Contact Center.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          },
                          "channel_settings": {
                            "type": "object",
                            "properties": {
                              "multi_channel_engagements": {
                                "type": "object",
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to allow users to receive voice or video engagements while handling chat and SMS engagements, based on the `max_agent_load` value.",
                                    "example": true
                                  },
                                  "max_agent_load": {
                                    "maximum": 100,
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                                    "example": 50
                                  },
                                  "email_max_agent_load": {
                                    "maximum": 100,
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                                    "example": 50
                                  }
                                },
                                "description": "Information about the setting's multi-channel engagements."
                              },
                              "concurrent_message_capacity": {
                                "maximum": 20,
                                "minimum": 0,
                                "type": "integer",
                                "description": "The maximum number of concurrent messaging conversations that can be assigned to a user.",
                                "example": 4
                              },
                              "concurrent_email_capacity": {
                                "maximum": 20,
                                "minimum": 0,
                                "type": "integer",
                                "description": "The maximum number of concurrent email conversations that can be assigned to a user.",
                                "example": 4
                              }
                            },
                            "description": "Information about the channel settings."
                          },
                          "package_name": {
                            "type": "string",
                            "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n *`elite` - Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                            "example": "essentials",
                            "enum": [
                              "essentials",
                              "premium",
                              "elite"
                            ]
                          },
                          "add_ons_plan": {
                            "type": "array",
                            "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account. \n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                            "items": {
                              "type": "string",
                              "example": "ai_expert_assist"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `8003` <br>\n User template not found: $template_id <br>\n**Error Code:** `8004` <br>\n User template type error: $template_id. <br>\n**Error Code:** `8005` <br>\n User template status error: $template_id. <br>\n **Error Code:** `290010` <br>\n The selected package or add-ons is not enough. <br>\n**Error Code:** `1701` <br>\n The account package does not exist: $zoom_contact_center_package. <br>\n**Error Code:** `1702` <br>\n The account addons package does not exist: $zoom_contact_center_addons_plan. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:write:batch_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:batch_users:admin"
          ]
        }
      }
    },
    "/contact_center/users/status": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Batch update user status",
        "description": "Batch update user status.  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:batch_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Batchupdateuserstatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "description": "Information about the users, the maximum number of updated users is 20.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "The user's ID. This field is only used as an input parameter and cannot be updated.",
                          "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                        },
                        "user_email": {
                          "type": "string",
                          "description": "The user's email address. This field is only used as an input parameter and cannot be updated. \n\n**Note**: Either `user_email` or `user_id` needs to be provided. If both `user_email` and `user_id` are provided, only `user_id` will be used, while `user_email` will be ignored.",
                          "example": "example.sun@example.com"
                        },
                        "status_id": {
                          "type": "string",
                          "description": "The user's status ID.",
                          "example": "1"
                        },
                        "sub_status_id": {
                          "type": "string",
                          "description": "The user's reason ID when the user status is `Not Ready`.",
                          "example": "21"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Users status updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `301` <br>\n Validation Failed. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1012` <br>\n All users do not exist. <br>\n"
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:write:batch_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:batch_users:admin"
          ]
        }
      }
    },
    "/contact_center/users/templates": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List user templates",
        "description": "Return the user template list\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:user_templates:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "ListUserTemplates",
        "parameters": [
          {
            "name": "template_type",
            "in": "query",
            "description": "The user's template type.\n* `add` - Create a user template.\n * `update` - Update a user template.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "add",
              "enum": [
                "add",
                "update"
              ]
            }
          },
          {
            "name": "template_status",
            "in": "query",
            "description": "The user's template status.\n* `active` - The user template can be used.\n* `inactive` - The user template cannot be used.\n* `needs_attention` - The user template is missing required attributes and cannot be used.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": [
                "active",
                "inactive",
                "needs_attention"
              ]
            }
          },
          {
            "name": "template_name",
            "in": "query",
            "description": "Template name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "add_template"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Template list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "user_templates": {
                      "maxItems": 100,
                      "type": "array",
                      "description": " Information about the user template.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "template_id": {
                            "type": "string",
                            "description": "The template ID.",
                            "example": "OlK7lczzT_e7h6p1Q6wGdg"
                          },
                          "template_name": {
                            "type": "string",
                            "description": "The template name.",
                            "example": "template_update"
                          },
                          "template_type": {
                            "type": "string",
                            "description": "The user template type. \n* `update` - Update the user type template.\n* `add` - Create the user type template.\n\n\n\n",
                            "example": "update",
                            "enum": [
                              "add",
                              "update"
                            ]
                          },
                          "template_status": {
                            "type": "string",
                            "description": "The user template status. \n* `active` - The user template can be used.\n* `inactive` - The user template cannot be used.\n* `needs_attention` - The user template is missing required attributes and cannot be used.",
                            "example": "active",
                            "enum": [
                              "active",
                              "inactive",
                              "needs_attention"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "Description"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:read:admin",
              "contact_center:read:user_templates:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:user_templates:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's profile",
        "description": "Retrieve a user's profile information.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userGet",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nUser profile returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "string",
                      "description": "The user's ID.",
                      "example": "IGTRVt3gQ2i-WjoUIjeZxw"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The user's name.",
                      "example": "Jill"
                    },
                    "user_email": {
                      "type": "string",
                      "description": "The user's email address.",
                      "format": "email",
                      "example": "jchill@example.com"
                    },
                    "role_id": {
                      "type": "string",
                      "description": "The user's role ID.",
                      "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                    },
                    "role_name": {
                      "type": "string",
                      "description": "The user's role name.",
                      "example": "Admin"
                    },
                    "client_integration": {
                      "type": "string",
                      "description": "The contact center's client integration. \n* `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                      "example": "Salesforce",
                      "enum": [
                        "Default",
                        "Salesforce",
                        "Zendesk",
                        "ServiceNow",
                        "Microsoft_Dynamics_365"
                      ]
                    },
                    "client_integration_name": {
                      "type": "string",
                      "description": "The client integration connection name to be assigned to the user.",
                      "example": "integration-test"
                    },
                    "status_id": {
                      "type": "string",
                      "description": "The user's status ID.",
                      "example": "2"
                    },
                    "status_name": {
                      "type": "string",
                      "description": "The user's [availability status](https://support.zoom.us/hc/en-us/articles/4470584918541-Setting-availability-status). \n* Offline (ID = `0`) \n* Ready (ID = `1`) \n* Not Ready (ID = `2`) \n* Occupied (ID = `3`) \n* A custom user status (ID = `4`), such as &quot;Lunch&quot; or &quot;Away until Monday&quot;",
                      "example": "Not Ready",
                      "enum": [
                        "Offline",
                        "Ready",
                        "Not Ready",
                        "Occupied"
                      ]
                    },
                    "sub_status_id": {
                      "type": "string",
                      "description": "The user's reason ID when the user status is `Not Ready`.",
                      "example": "21"
                    },
                    "sub_status_name": {
                      "type": "string",
                      "description": "The user's reason when the user status is `Not Ready`.\n \n To query a list of default and custom `Not Ready` reasons, call [List System Statuses](/docs/contact-center/apis/#operation/listSystemStatus) (filter by `queue_opt_out_and_not_ready_status` status_category)\n \n Default `Not Ready` reasons:\n * Break (ID = `20`) \n* Meal (ID = `21`) \n* Training (ID = `22`) \n* Meeting (ID = `23`) \n* End Shift (ID = `24`) \n* Forced (ID = `25`) \n",
                      "example": "Meal",
                      "enum": [
                        "Break",
                        "End Shift",
                        "Forced",
                        "Meal",
                        "Meeting",
                        "Training"
                      ]
                    },
                    "user_access": {
                      "type": "string",
                      "description": "The user's access status. \n* `active` - The user's role permissions allow them to access the Contact Center. \n * `inactive` - The user cannot access the Contact Center.",
                      "example": "active",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "country_iso_code": {
                      "type": "string",
                      "description": "Two-letter country [code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                      "example": "US"
                    },
                    "region_id": {
                      "type": "string",
                      "description": "The user's region ID.",
                      "example": "8f71O6rWT8KFUGQmJIFAdQ"
                    },
                    "region_name": {
                      "type": "string",
                      "description": "The user's region name.",
                      "example": "Main Region"
                    },
                    "channel_settings": {
                      "type": "object",
                      "properties": {
                        "multi_channel_engagements": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to receive voice or video engagements while handling chat and SMS engagements, based on the `max_agent_load` value.",
                              "example": true
                            },
                            "max_agent_load": {
                              "maximum": 100,
                              "minimum": 1,
                              "type": "integer",
                              "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                              "example": 50
                            },
                            "email_max_agent_load": {
                              "maximum": 100,
                              "minimum": 1,
                              "type": "integer",
                              "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                              "example": 50
                            }
                          },
                          "description": "Information about the setting's multi-channel engagements."
                        },
                        "concurrent_message_capacity": {
                          "maximum": 20,
                          "minimum": 0,
                          "type": "integer",
                          "description": "The maximum number of concurrent messaging conversations that can be assigned to a user.",
                          "example": 4
                        },
                        "concurrent_email_capacity": {
                          "maximum": 20,
                          "minimum": 0,
                          "type": "integer",
                          "description": "The maximum number of concurrent email conversations that can be assigned to a user.",
                          "example": 4
                        }
                      },
                      "description": "Information about the channel settings."
                    },
                    "package_name": {
                      "type": "string",
                      "description": "The Zoom Contact Center Plan to assign to the user.Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n*`elite` - Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                      "enum": [
                        "essentials",
                        "premium",
                        "elite"
                      ]
                    },
                    "add_ons_plan": {
                      "type": "array",
                      "description": "The Zoom Contact Center Plan to assign to the user.Concurrent or non-concurrent depends on the plan type purchased by the account.\n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                      "items": {
                        "type": "string",
                        "example": "ai_expert_assist"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Invalid user ID. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:read:admin",
              "contact_center:read:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:user:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user's profile",
        "description": "Delete the specified user's profile. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userDelete",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nUser profile deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:delete:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:user:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user's profile",
        "description": "Update information in a user's profile.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userUpdate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_integration": {
                    "type": "string",
                    "description": "The contact center's client integration. \n* `Default` \n* `Salesforce` \n* `Zendesk` \n* `ServiceNow` \n* `Microsoft_Dynamics_365`",
                    "example": "Salesforce",
                    "enum": [
                      "Default",
                      "Salesforce",
                      "Zendesk",
                      "ServiceNow",
                      "Microsoft_Dynamics_365"
                    ]
                  },
                  "client_integration_name": {
                    "type": "string",
                    "description": "The client integration connection name to be assigned to the user.",
                    "example": "integration-test"
                  },
                  "role_id": {
                    "type": "string",
                    "description": "The user's role ID.",
                    "example": "27302393-4784-11ec-a3cd-122e3e29bb87"
                  },
                  "status_id": {
                    "type": "string",
                    "description": "The user's status ID.",
                    "example": "1",
                    "deprecated": true
                  },
                  "sub_status_id": {
                    "type": "string",
                    "description": "The user's reason ID when the user status is `Not Ready`.",
                    "example": "21",
                    "deprecated": true
                  },
                  "user_access": {
                    "type": "string",
                    "description": "The user's access status. \n* `active` &mdash; The user's role permissions allow them to access the Contact Center. \n* `inactive` &mdash; The user cannot access the Contact Center.",
                    "example": "active",
                    "enum": [
                      "active",
                      "inactive"
                    ]
                  },
                  "country_iso_code": {
                    "type": "string",
                    "description": "Two-letter country [code](/docs/api/rest/other-references/abbreviation-lists/#countries).",
                    "example": "US"
                  },
                  "region_id": {
                    "type": "string",
                    "description": "The region's ID.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  },
                  "channel_settings": {
                    "type": "object",
                    "properties": {
                      "multi_channel_engagements": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to receive voice or video engagements while handling chat and SMS engagements, based on the `max_agent_load` value.",
                            "example": true
                          },
                          "max_agent_load": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                            "example": 50
                          },
                          "email_max_agent_load": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "description": "If the `multi_channel_engagements` value is `true`, this is the maximum load percentage that a user needs to take in order to receive voice and video calls. This value is based on the engagements the user is currently handling.",
                            "example": 50
                          }
                        },
                        "description": "Information about the settings' multi-channel engagements."
                      },
                      "concurrent_message_capacity": {
                        "maximum": 20,
                        "minimum": 0,
                        "type": "integer",
                        "description": "The maximum number of concurrent messaging conversations that can be assigned to a user.",
                        "example": 4
                      },
                      "concurrent_email_capacity": {
                        "maximum": 20,
                        "minimum": 0,
                        "type": "integer",
                        "description": "The maximum number of concurrent email conversations that can be assigned to a user.",
                        "example": 4
                      }
                    },
                    "description": "Information about the channel settings."
                  },
                  "template_id": {
                    "type": "string",
                    "description": "To retrieve the template ID, call the **List User's Templates** API. The template ID must correspond to a template with a status of `Active` and a type of `Update`. If you provide the update-type template value, leave all other fields blank to apply all settings from the template. If you provide this value, leave all other fields blank to apply the settings from the template. Only the settings from the template indicated as 'override' will be applied to the user. If you specify both individual values and a template in the request, the individual values take priority over the template settings.",
                    "example": "OlK7lczzT_e7h6p1Q6wGdg"
                  },
                  "package_name": {
                    "type": "string",
                    "description": "The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account. An empty value will not assign the user to Zoom Contact Center.n*`essentials` - Zoom Contact Center Essentials or Zoom Contact Center Concurrent Essentials Package.\n*`premium` - Zoom Contact Center Premium or Zoom Contact Center Concurrent Premium Package.\n*`elite` - Zoom Contact Center Elite or Zoom Contact Center Concurrent Elite Package.",
                    "example": "essentials",
                    "enum": [
                      "essentials",
                      "premium",
                      "elite"
                    ]
                  },
                  "add_ons_plan": {
                    "type": "array",
                    "description": "This is an optional field. The Zoom Contact Center plan to assign to the user. Concurrent or non-concurrent depends on the plan type purchased by the account. Empty value will result in no changes.\n*`ai_expert_assist` - Zoom Contact Center AI Expert Assist or Zoom Contact Center AI Expert Assist Concurrent Package.",
                    "items": {
                      "type": "string",
                      "example": "ai_expert_assist",
                      "enum": [
                        "ai_expert_assist"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` User profile updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `8003` <br>\n User template not found: $template_id. <br>\n**Error Code:** `8004` <br>\n User template type error: $template_id. <br>\n**Error Code:** `8005` <br>\n User template status error: $template_id. <br>\n **Error Code:** `290010` <br>\n The selected package or add-ons is not enough. <br>\n**Error Code:** `1701` <br>\n The account package does not exist: $zoom_contact_center_package. <br>\n**Error Code:** `1702` <br>\n The account addons package does not exist:$zoom_contact_center_addons_plan. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Validation failed. <br>\n**Error Code:** `1001` <br>\n User does not exist: $userId. <br>\n**Error Code:** `1101` <br>\n Status does not exist: $status_id. <br>\n**Error Code:** `1102` <br>\n Sub status does not exist: $sub_status_id. <br>\n**Error Code:** `1006` <br>\n The account `$client_integration` client integration does not exist. Add it to the **Integrations** function module. <br>\n**Error Code:** `2201` <br>\n Role does not exist: $role_id. <br>\n**Error Code:** `2202` <br>\n Country ISO code does not exist: $country_iso_code. <br>\n**Error Code:** `1017` <br>\n Region does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:update:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:user:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}/queues": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List user's queues",
        "description": "List a user's queues. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_user_queues:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUserQueues",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The Contact Center queue's channel.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "voice",
              "enum": [
                "voice",
                "video",
                "messaging",
                "email"
              ]
            }
          },
          {
            "name": "user_assignment_type",
            "in": "query",
            "description": "User's Contact Center queue assignment types.\n* `agent` - assigned as an agent in the queue.\n* `supervisor` - assigned as a supervisor in the queue.\n* `any` - assigned as either an agent or a supervisor in the queue.\n* `both` - assigned as both an agent and a supervisor in the queue.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "agent",
              "default": "agent",
              "enum": [
                "agent",
                "supervisor",
                "any",
                "both"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nUser list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "queues": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Information about the task queues.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "queue_id": {
                            "type": "string",
                            "description": "The task queue's ID.",
                            "example": "Ql3qxUWXSHes4PmcOmzyOg",
                            "deprecated": true
                          },
                          "queue_name": {
                            "type": "string",
                            "description": "The task queue's name.",
                            "example": "queue_661c6e4b-89fc-4b0d-9978-c7394725462"
                          },
                          "cc_queue_id": {
                            "type": "string",
                            "description": "The Contact Center queue's ID.",
                            "example": "a4lCNeq2SzKbgkcDVbjCZQ"
                          },
                          "channel": {
                            "type": "string",
                            "description": "The Contact Center queue's channel.",
                            "example": "voice",
                            "enum": [
                              "voice",
                              "video",
                              "messaging",
                              "email"
                            ]
                          },
                          "user_assignment_type": {
                            "type": "string",
                            "description": "The user's assignment type in Contact Center queue. ",
                            "example": "agent",
                            "enum": [
                              "agent",
                              "supervisor",
                              "any",
                              "both"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:read:admin",
              "contact_center:read:list_user_queues:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_user_queues:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}/skills": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List user's skills",
        "description": "Get a list of skills assigned to a given user. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_user_skills:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListAUserSkills",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          },
          {
            "name": "skill_category_id",
            "in": "query",
            "description": "The skill category's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Mu_IEZZHQZGMY9avK74kwA"
            }
          },
          {
            "name": "skill_type",
            "in": "query",
            "description": "The skill category's type.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The skill category's type. \n* 'text' - A text-based skill, such as a geographic location. Skills in this category do not have assigned skill levels. \n* 'proficiency' - A proficiency-based skill, such as a second language. Skills in this type of category have assigned proficiency levels.",
              "example": "text",
              "enum": [
                "text",
                "proficiency"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nUser's assigned skills returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "skills": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Information about the user's skills",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skill_id": {
                            "type": "string",
                            "description": "The skill's ID.",
                            "example": "s51M536ZjSgi8o_rzmgQBrA"
                          },
                          "skill_name": {
                            "type": "string",
                            "description": "The skill's name.",
                            "example": "assign-skill6b6c864b-474a-4843-afed-81bd26b03952"
                          },
                          "skill_type": {
                            "type": "string",
                            "description": "The skill's type.",
                            "example": "proficiency"
                          },
                          "max_proficiency_level": {
                            "type": "integer",
                            "description": "The maximum proficiency level in a skill.",
                            "example": 5
                          },
                          "user_proficiency_level": {
                            "type": "integer",
                            "description": "A user's proficiency level in a skill.",
                            "example": 3
                          },
                          "skill_category_id": {
                            "type": "string",
                            "description": "The skill category's ID.",
                            "example": "s51M536ZjSgi8o_rzmgQBrA"
                          },
                          "skill_category_name": {
                            "type": "string",
                            "description": "The skill category's name.",
                            "example": "Language"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:read:admin",
              "contact_center:read:list_user_skills:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_skill:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_user_skills:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Assign user's skills",
        "description": "Assign [skills](https://support.zoom.us/hc/en-us/articles/4423986613261) to a user. Skills are user traits that ensure that a given agent is the best person to handle a given customer interaction. Proficiency ratings indicate the user's level of expertise or knowledge of that skill. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:user_skill:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "assignSkills",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skills": {
                    "maxItems": 20,
                    "minItems": 1,
                    "type": "array",
                    "description": "Information about the skills.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skill_id": {
                          "type": "string",
                          "description": "The skill ID.",
                          "example": "1"
                        },
                        "max_proficiency_level": {
                          "type": "integer",
                          "description": "The skill's assigned proficiency level.",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nSkills assigned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1405` <br>\n Skill assign already exists. $skill_id <br>\n**Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1401` <br>\n Skills $skill_id does not exist. <br>\n"
          },
          "422": {
            "description": "**HTTP Status Code:** `422` <br>\n Unprocessable Entity  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:write:user_skill:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:user_skill:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}/skills/{skillId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Unassign user's skill",
        "description": "Delete a skill assigned to a given user. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_skill:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:user_skill:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteASkill",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IGTRVt3gQ2i-WjoUIjeZxw"
            }
          },
          {
            "name": "skillId",
            "in": "path",
            "description": "The skill's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "saaHWgVMGQU69soco456oNA"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204 `  \n \nSkill deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1404` <br>\n Skill not found: $skillId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_skill:write:admin",
              "contact_center:delete:user_skill:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_skill:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:user_skill:admin"
          ]
        }
      }
    },
    "/contact_center/users/{userId}/status": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user's status",
        "description": "Update information in a user's status.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_user:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Updateauser'sstatus",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status_id": {
                    "type": "string",
                    "description": "The user's status ID.",
                    "example": "2"
                  },
                  "sub_status_id": {
                    "type": "string",
                    "description": "The user's reason ID when the user status is `Not Ready`.",
                    "example": "21"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "HTTP Status Code: 204 User status profile updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The status must be **Not Ready** when updating substatus. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: ${userId}. <br>\n"
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_user:write:admin",
              "contact_center:update:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_user:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:user:admin"
          ]
        }
      }
    },
    "/contact_center/variable_logs": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "List variable logs",
        "description": "Return a list of variable logs.\n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable_log:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_variable_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listVariableLogs",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in `yyyy-mm-dd` or ISO 8601 format, `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in `yyyy-mm-dd` or ISO 8601 format, `yyyy-MM-dd'T'HH:mm:ss'Z'` or` yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-10"
            }
          },
          {
            "name": "group_type",
            "in": "query",
            "description": "The variable group's type.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "system",
              "enum": [
                "system",
                "custom"
              ]
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "description": "The variable data's type.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "boolean",
              "enum": [
                "boolean",
                "currency",
                "date",
                "email",
                "number",
                "percent",
                "phone",
                "string",
                "time",
                "url"
              ]
            }
          },
          {
            "name": "engagement_id",
            "in": "query",
            "description": "The engagement's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "3XilEfOvQEKRIWMWhX1jDg"
            }
          },
          {
            "name": "flow_id",
            "in": "query",
            "description": "The flow's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "zeYjXoDOS_eV1QmTpj63PQ"
            }
          },
          {
            "name": "widget_name",
            "in": "query",
            "description": "The widget's name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "HttpCall1"
            }
          },
          {
            "name": "variable_name",
            "in": "query",
            "description": "The variable's name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "body"
            }
          },
          {
            "name": "variable_value",
            "in": "query",
            "description": "The variable's value.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "demo"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nVariable logs returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10,
                      "default": 10
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`. The defined date range should be a month, as the response only includes one month's worth of data. If no start date is specified, return data from the past 24 hours.",
                      "format": "date-time",
                      "example": "2021-12-10T08:00:00Z"
                    },
                    "to": {
                      "type": "string",
                      "description": "**Required** only when the `from` parameter is specified. The end time and date in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`, the same format as the `from` parameter.",
                      "format": "date-time",
                      "example": "2021-12-10T08:15:00Z"
                    },
                    "variable_logs": {
                      "type": "array",
                      "description": "Information about the variable logs.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variable_log_id": {
                            "type": "string",
                            "description": "The variable log's ID",
                            "example": "ebe83be-3579-4dc9-8e6e-67dd65a010fe"
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "The engagement's ID",
                            "example": "3XilEfOvQEKRIWMWhX1jDg"
                          },
                          "flow_id": {
                            "type": "string",
                            "description": "The flow's ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "flow_name": {
                            "type": "string",
                            "description": "The flow's name.",
                            "example": "Demo"
                          },
                          "widget_name": {
                            "type": "string",
                            "description": "The widget's name.",
                            "example": "HttpCall1"
                          },
                          "variable_name": {
                            "type": "string",
                            "description": "The variable's name.",
                            "example": "body"
                          },
                          "variable_value": {
                            "type": "string",
                            "description": "The variable's value.",
                            "example": "demo"
                          },
                          "group_type": {
                            "type": "string",
                            "description": "The variable group's type. The type can be either system or custom.",
                            "example": "system",
                            "enum": [
                              "system",
                              "custom"
                            ]
                          },
                          "data_type": {
                            "type": "string",
                            "description": "The variable data's type.",
                            "example": "boolean",
                            "enum": [
                              "boolean",
                              "currency",
                              "date",
                              "email",
                              "number",
                              "percent",
                              "phone",
                              "string",
                              "time",
                              "url"
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Time of creation in ISO 8601 format, either `yyyy-MM-dd'T'HH:mm:ss'Z'` or `yyyy-MM-dd'T'HH:mm:ss'TZD'`.",
                            "format": "date-time",
                            "example": "2023-01-01T08:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2901` <br>\n Engagement  does not exist: $engagementId. <br>\n **Error Code:** `3201` <br>\n Flow does not exist: $flowId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable_log:read:admin",
              "contact_center:read:list_variable_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable_log:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_variable_logs:admin"
          ]
        }
      }
    },
    "/contact_center/variable_logs/{variableLogId}": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Get a variable log",
        "description": "Get information about a variable log.\n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable_log:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:variable_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getVariableLog",
        "parameters": [
          {
            "name": "variableLogId",
            "in": "path",
            "description": "The variable log's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nVariable log returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "variable_log_id": {
                      "type": "string",
                      "description": "The variable log's ID",
                      "example": "ebe83be-3579-4dc9-8e6e-67dd65a010fe"
                    },
                    "engagement_id": {
                      "type": "string",
                      "description": "The engagement's ID",
                      "example": "3XilEfOvQEKRIWMWhX1jDg"
                    },
                    "flow_id": {
                      "type": "string",
                      "description": "The flow's ID.",
                      "example": "zeYjXoDOS_eV1QmTpj63PQ"
                    },
                    "flow_name": {
                      "type": "string",
                      "description": "The flow's name.",
                      "example": "Demo"
                    },
                    "widget_name": {
                      "type": "string",
                      "description": "The widget's name.",
                      "example": "HttpCall1"
                    },
                    "variable_name": {
                      "type": "string",
                      "description": "The variable's name.",
                      "example": "body"
                    },
                    "variable_value": {
                      "type": "string",
                      "description": "The variable's value.",
                      "example": "demo"
                    },
                    "group_type": {
                      "type": "string",
                      "description": "The variable group's type. The type can be either system or custom.",
                      "example": "system",
                      "enum": [
                        "system",
                        "custom"
                      ]
                    },
                    "data_type": {
                      "type": "string",
                      "description": "The variable data's type.",
                      "example": "boolean",
                      "enum": [
                        "boolean",
                        "currency",
                        "date",
                        "email",
                        "number",
                        "percent",
                        "phone",
                        "string",
                        "time",
                        "url"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Time of creation in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss'Z' or yyyy-MM-dd'T'HH:mm:ss&rsquo;TZD&rsquo;).",
                      "format": "date-time",
                      "example": "2023-01-01T08:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3301` <br>\n Variable log does not exist: $variableLogId <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable_log:read:admin",
              "contact_center:read:variable_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable_log:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:variable_log:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Delete a variable log",
        "description": "Delete a variable log. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable_log:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:variable_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteVariableLog",
        "parameters": [
          {
            "name": "variableLogId",
            "in": "path",
            "description": "The variable log's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nVariable log deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3301` <br>\n Variable log does not exist: $variableLogId <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable_log:write:admin",
              "contact_center:delete:variable_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "VecVariablesLogDelete:Edit"
          ],
          "x-macro-scopes": [
            "contact_center_variable_log:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:variable_log:admin"
          ]
        }
      }
    },
    "/contact_center/variables": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "List variables",
        "description": "Returns a list of variables for a specific variable group. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_variables:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "variables",
        "parameters": [
          {
            "name": "variable_group_id",
            "in": "query",
            "description": "The variable's group ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "35216bdf-e1d5-4a78-bf58-03cef264a643"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "description": "The data's type. \n* `string` \n* `number` \n* `boolean` \n * `date_time` \n* `currency` \n* `percentage` \n* `email` \n* `url` \n* `phone` - ([E.164 format](https://en.wikipedia.org/wiki/E.164))",
            "required": false,
            "schema": {
              "type": "string",
              "example": "boolean",
              "enum": [
                "string",
                "number",
                "boolean",
                "date_time",
                "currency",
                "percentage",
                "email",
                "url",
                "phone"
              ]
            }
          },
          {
            "name": "variable_type",
            "in": "query",
            "description": "The variable's type. \n* `global_variable` \n* `address_book_variable`",
            "required": false,
            "schema": {
              "type": "string",
              "example": "global_variable",
              "enum": [
                "global_variable",
                "address_book_variable"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token returns whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "format": "int32",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nVariables list returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned in a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 1
                    },
                    "variables": {
                      "type": "array",
                      "description": "Information about the variables.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variable_id": {
                            "type": "string",
                            "description": "The variable's unique ID.",
                            "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                          },
                          "variable_group_id": {
                            "type": "string",
                            "description": "The variable group's ID.",
                            "example": "afececcd-0c9f-48de-9d19-0c84e8bdfeca"
                          },
                          "variable_name": {
                            "type": "string",
                            "description": "The variable's name.",
                            "example": "variable demo name"
                          },
                          "default_value": {
                            "type": "string",
                            "description": "The variable's default value.",
                            "example": "test_value"
                          },
                          "variable_type": {
                            "type": "string",
                            "description": "The variable's type. \n* `global_variable` \n* `address_book_variable`",
                            "example": "address_book_variable.",
                            "enum": [
                              "global_variable",
                              "address_book_variable"
                            ]
                          },
                          "data_type": {
                            "type": "string",
                            "description": "The data's type. \n* `string` \n* `number` \n* `boolean` \n* `date_time` \n* `currency` \n* `percentage` \n* `email` \n* `url` \n* `phone`",
                            "example": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean",
                              "date_time",
                              "currency",
                              "percentage",
                              "email",
                              "url",
                              "phone"
                            ]
                          },
                          "variable_description": {
                            "type": "string",
                            "description": "The variable's description.",
                            "example": "This is a variable description"
                          },
                          "mask_variable_data": {
                            "type": "boolean",
                            "description": "Mask variable data, for sensitive information.",
                            "example": true,
                            "default": false
                          },
                          "values": {
                            "type": "array",
                            "description": "The variable's values.",
                            "items": {
                              "type": "string",
                              "example": "test_value"
                            }
                          },
                          "value_category": {
                            "type": "string",
                            "description": "The variable value's category. Returned only if `variable_type:global_variable` \n* `undefined` &mdash; Each engagement starts without a pre-set value. \n* `default_value` &mdash; Each engagement starts with the default value. \n* `linked_value` &mdash; The value links across flows, and each engagement uses the latest value.",
                            "example": "default_value"
                          },
                          "used_in_address_book_count": {
                            "type": "integer",
                            "description": "The number of times the address book used the variable.",
                            "example": 3
                          }
                        },
                        "description": "Information about the variable."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:read:admin",
              "contact_center:read:list_variables:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_variables:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Variables"
        ],
        "summary": "Create a variable",
        "description": "Create a new variable.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:variable:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createVariable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "data_type",
                  "variable_group_id",
                  "variable_name",
                  "variable_type"
                ],
                "type": "object",
                "properties": {
                  "variable_group_id": {
                    "type": "string",
                    "description": "The variable group's ID.",
                    "example": "afececcd-0c9f-48de-9d19-0c84e8bdfeca"
                  },
                  "variable_name": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "The variable's name.",
                    "example": "variable demo name"
                  },
                  "variable_description": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "The variable's description.",
                    "example": "This is a variable description."
                  },
                  "variable_type": {
                    "type": "string",
                    "description": "The variable's type. \n* `global_variable` \n* `address_book_variable`",
                    "example": "address_book_variable.",
                    "enum": [
                      "global_variable",
                      "address_book_variable"
                    ]
                  },
                  "address_book_ids": {
                    "maxItems": 20,
                    "type": "array",
                    "description": "The address book IDs. Only valid when `variable_type` is `address_book_variable`, and cannot be empty.",
                    "items": {
                      "type": "string",
                      "example": "X2e_jsLNRkCjI0sQg2kRQQ"
                    }
                  },
                  "use_in_reporting": {
                    "type": "boolean",
                    "description": "Whether to use in reporting. Only valid when `variable_type` is `global_variable`.",
                    "example": false,
                    "default": false
                  },
                  "mask_variable_data": {
                    "type": "boolean",
                    "description": "Mask variable data, for sensitive information. Only valid when `variable_type` is `global_variable` and the value of data_type is not `boolean`, `date_time`, or `percentage`.",
                    "example": false,
                    "default": false
                  },
                  "use_as_routing_profile_parameters": {
                    "type": "boolean",
                    "description": "Whether to use in the routing profile. Only valid when `variable_type` is `address_book_variable`. \n* `true` &mdash; Values are used as routing profile parameters.\n* `false` &mdash; Not used as a value for routing configuration file parameters.",
                    "example": false,
                    "default": false
                  },
                  "data_type": {
                    "type": "string",
                    "description": "The data's type. `variable_type:address_book_variable` only applies to data types with `*`. \n* `string` `*` \n* `number` \n* `boolean` `*` \n* `date_time` -(unix timestamp)\n* `currency` \n* `percentage` \n* `email` \n* `url` \n* `phone` - ([E.164 format](https://en.wikipedia.org/wiki/E.164))",
                    "example": "number",
                    "enum": [
                      "string",
                      "number",
                      "boolean",
                      "date_time",
                      "currency",
                      "percentage",
                      "email",
                      "url",
                      "phone"
                    ]
                  },
                  "value_category": {
                    "type": "string",
                    "description": " \n The variable value's category. Only valid when `variable_type` is `global_variable`.\n* `undefined` &mdash; Each engagement starts without a pre-set value. \n* `default_value` &mdash; Each engagement starts with the default value. \n* `linked_value` &mdash; The value links across flows, and each engagement uses the latest value.",
                    "example": "default_value"
                  },
                  "values": {
                    "maximum": 20,
                    "maxItems": 20,
                    "type": "array",
                    "description": "The variable's values. Take only the first value in the array when `variable_type` is `global_variable`. \n* If `variable_type` is `global_variable`, each value's max length is 4096. \n* If `variable_type` is `address_book_variable`, each value's max length is 300.",
                    "items": {
                      "maxLength": 4096,
                      "type": "string",
                      "example": "test-value"
                    }
                  },
                  "linked_value_lock": {
                    "type": "boolean",
                    "description": "The variable linked value's lock. Only valid when `value_category` is `linked_value`. \n* `true` &mdash; The variable can't be updated in a flow. It is the same for each engagement. \n* `false` &mdash; The variable value can be updated in a flow. Each engagement uses the latest value.",
                    "example": false,
                    "default": false
                  },
                  "default_value": {
                    "maxLength": 512,
                    "type": "string",
                    "description": "The variable's default value. Only used when `variable_type` is `address_book_variable` and `data_type` is `string`.",
                    "example": "test-value"
                  },
                  "use_in_external_url_parameters": {
                    "type": "boolean",
                    "description": "Lets you use the parameter value in defining external URLs launched for each engagement. \r\n\r\n* global\r\n* address book",
                    "example": true
                  },
                  "client_show_in_client_profile_section": {
                    "type": "boolean",
                    "description": "Whether this variable will be shown in the Zoom client's Profile section.\r\n* global",
                    "example": true
                  },
                  "client_show_in_client_engagement_section": {
                    "type": "boolean",
                    "description": "Whether this variable will be shown in the Zoom client's Engagement section.\r\n* global",
                    "example": true
                  },
                  "client_show_in_inbound_call_notifications": {
                    "type": "boolean",
                    "description": "Whether this variable will be shown as an inbound call notification on the Zoom client.\r\n* global\r\n* address book",
                    "example": true
                  }
                },
                "description": "Information about the variable."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nVariable created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "variable_id": {
                      "type": "string",
                      "description": "The variable's unique ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "variable_group_id": {
                      "type": "string",
                      "description": "The variable group's ID.",
                      "example": "afececcd-0c9f-48de-9d19-0c84e8bdfeca"
                    },
                    "variable_name": {
                      "type": "string",
                      "description": "The variable's name.",
                      "example": "variable demo name"
                    },
                    "variable_description": {
                      "type": "string",
                      "description": "The variable's description.",
                      "example": "This is a variable description"
                    },
                    "variable_type": {
                      "type": "string",
                      "description": "The variable's type. \n* `global_variable` \n* `address_book_variable`",
                      "example": "global_variable.",
                      "enum": [
                        "global_variable",
                        "address_book_variable"
                      ]
                    },
                    "address_books": {
                      "maxItems": 20,
                      "type": "array",
                      "description": "The address book list. This field is only returned when `variable_type` is `address_book_variable`.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address_book_id": {
                            "type": "string",
                            "description": "The address book's ID.",
                            "example": "X2e_jsLNRkCjI0sQg2kRQQ"
                          },
                          "address_book_name": {
                            "type": "string",
                            "description": "The address book's name.",
                            "example": "Jill's address book"
                          },
                          "unit_id": {
                            "type": "string",
                            "description": "The address book's unit ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "unit_name": {
                            "type": "string",
                            "description": "The address book unit's name.",
                            "example": "Address Book Unit"
                          },
                          "total_contacts": {
                            "type": "integer",
                            "description": "The address book's total number of contacts.",
                            "example": 3
                          }
                        }
                      }
                    },
                    "use_in_reporting": {
                      "type": "boolean",
                      "description": "Whether to use in reporting.",
                      "example": false,
                      "default": false
                    },
                    "mask_variable_data": {
                      "type": "boolean",
                      "description": "Mask variable data, for sensitive information.",
                      "example": true,
                      "default": false
                    },
                    "use_as_routing_profile_parameters": {
                      "type": "boolean",
                      "description": "Whether to use in the routing profile. \n* `true` &mdash; Values used as routing profile parameters.\n* `false` &mdash; Not used as a value for routing configuration file parameters.",
                      "example": false,
                      "default": false
                    },
                    "data_type": {
                      "type": "string",
                      "description": "The data's type. \n* `string` \n* `number` \n* `boolean` \n* `date_time` \n* `currency` \n* `percentage` \n* `email` \n* `url` \n* `phone`",
                      "example": "number",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "date_time",
                        "currency",
                        "percentage",
                        "email",
                        "url",
                        "phone"
                      ]
                    },
                    "value_category": {
                      "type": "string",
                      "description": "The variable value's category. Returned only if `variable_type` is `global_variable`. \n* `undefined` &mdash; Each engagement starts without a pre-set value. \n* `default_value` &mdash; Each engagement starts with the default value. \n* `linked_value` &mdash; The value links across flows, and each engagement uses the latest value.",
                      "example": "default_value"
                    },
                    "values": {
                      "maxItems": 20,
                      "type": "array",
                      "description": "The variable's values.",
                      "items": {
                        "type": "string",
                        "example": "X2e_jsLNRkCjI0sQg2kRQQ"
                      }
                    },
                    "linked_value_lock": {
                      "type": "boolean",
                      "description": "The variable linked value's lock. \n* `true` &mdash; The variable can't be updated in a flow. It is the same for each engagement. \n* `false` &mdash; the variable value can be updated in a flow. Each engagement will use the latest value.",
                      "example": false,
                      "default": false
                    },
                    "default_value": {
                      "type": "string",
                      "description": "The variable's default value.",
                      "example": "test-value"
                    },
                    "use_in_external_url_parameters": {
                      "type": "boolean",
                      "description": "Lets you use the parameter value in defining external URLs launched for each engagement. \r\n\r\n* global\r\n* address book",
                      "example": true
                    },
                    "client_show_in_client_profile_section": {
                      "type": "boolean",
                      "description": "Whether this variable will be shown in the Zoom client's Profile section.\r\n* global",
                      "example": true
                    },
                    "client_show_in_client_engagement_section": {
                      "type": "boolean",
                      "description": "Whether this variable will be shown in the Zoom client's Engagement section.\r\n* global",
                      "example": true
                    },
                    "client_show_in_inbound_call_notifications": {
                      "type": "boolean",
                      "description": "Whether this variable will be shown as an inbound call notification on the Zoom client.\r\n* global\r\n* address book",
                      "example": true
                    }
                  },
                  "description": "Information about the variable."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3402` <br>\n The `address_book_ids` field cannot be empty. <br>\n **Error Code:** `3403` <br>\n The variable already exists in the current custom group: `$variable_name`. <br>\n**Error Code:** `3404` <br>\n The `values` do not match `data_type`. <br>\n**Error Code:** `3405` <br>\n Invalid date format. <br>\n**Error Code:** `3406` <br>\n This `data_type`: $data_type is not supported when `variable_type` is $variable_type. <br>\n **Error Code:** `3407` <br>\n The `values`**` field cannot be empty. <br>\n **Error Code:** `3420` <br>\n The `values` field maximum length is over limit. <br>\n**Error Code:** `2006` <br>\n Address books does not exist <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3409` <br>\n Variable group does not exist: $group_id. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:write:admin",
              "contact_center:write:variable:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:variable:admin"
          ]
        }
      }
    },
    "/contact_center/variables/groups": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "List variable groups",
        "description": "Return a list of variable groups.\n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:list_variable_groups:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listVariableGroups",
        "parameters": [
          {
            "name": "variable_group_type",
            "in": "query",
            "description": "The variable group's type.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "system",
              "enum": [
                "system",
                "custom"
              ]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nVariable groups returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "maximum": 100,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10,
                      "default": 10
                    },
                    "total_records": {
                      "minimum": 0,
                      "type": "integer",
                      "description": "The total number of all the records available across pages.",
                      "example": 10
                    },
                    "variable_groups": {
                      "type": "array",
                      "description": "Information about the variable groups.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variable_group_id": {
                            "type": "string",
                            "description": "The variable group's ID.",
                            "example": "71ec9348-27db-4fe6-81b9-5b8637ca299b"
                          },
                          "variable_group_name": {
                            "type": "string",
                            "description": "The variable group's name.",
                            "example": "Agent"
                          },
                          "variable_group_description": {
                            "type": "string",
                            "description": "The variable group's description.",
                            "example": "Agent's first custom group."
                          },
                          "variable_group_type": {
                            "type": "string",
                            "description": "The variable group's type. The type can be either system or custom.",
                            "example": "system",
                            "enum": [
                              "system",
                              "custom"
                            ]
                          },
                          "variable_group_variables_count": {
                            "type": "integer",
                            "description": "The number of the variables in the group.",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:read:admin",
              "contact_center:read:list_variable_groups:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:list_variable_groups:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Variables"
        ],
        "summary": "Create a variable group",
        "description": "Create a custom variable group. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:write:variable_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createVariableGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "variable_group_name"
                ],
                "type": "object",
                "properties": {
                  "variable_group_name": {
                    "type": "string",
                    "description": "The variable group's name.",
                    "example": "us.group"
                  },
                  "variable_group_description": {
                    "type": "string",
                    "description": "The variable group's description.",
                    "example": "The first custom group."
                  },
                  "variable_group_type": {
                    "type": "string",
                    "description": "The variable group's type. The type can only be custom.",
                    "example": "custom",
                    "default": "custom",
                    "enum": [
                      "custom"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "variable_group_id": {
                      "type": "string",
                      "description": "The variable group's ID.",
                      "example": "71ec9348-27db-4fe6-81b9-5b8637ca299b"
                    },
                    "variable_group_name": {
                      "type": "string",
                      "description": "The variable group's name.",
                      "example": "us.group"
                    },
                    "variable_group_description": {
                      "type": "string",
                      "description": "The variable group's description.",
                      "example": "The first custom group."
                    },
                    "variable_group_type": {
                      "type": "string",
                      "description": "The variable group's type. The type can only be custom.",
                      "example": "custom",
                      "default": "custom",
                      "enum": [
                        "custom"
                      ]
                    },
                    "variable_group_variables_count": {
                      "type": "integer",
                      "description": "The number of variables in the created group.",
                      "example": 0,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3415` <br>\n The number of variable groups has reached the maximum. <br>\n**Error Code:** `3416` <br>\n The variable group already exists. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:write:admin",
              "contact_center:write:variable_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:write:variable_group:admin"
          ]
        }
      }
    },
    "/contact_center/variables/groups/{variableGroupId}": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Get a variable group",
        "description": "Get information about a variable group.\n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:variable_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getAVariableGroup",
        "parameters": [
          {
            "name": "variableGroupId",
            "in": "path",
            "description": "The variable group's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "71ec9348-27db-4fe6-81b9-5b8637ca299b"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nVariable group returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "variable_group_id": {
                      "type": "string",
                      "description": "The variable group's ID.",
                      "example": "71ec9348-27db-4fe6-81b9-5b8637ca299b"
                    },
                    "variable_group_name": {
                      "type": "string",
                      "description": "The variable group's name.",
                      "example": "Agent"
                    },
                    "variable_group_description": {
                      "type": "string",
                      "description": "The variable group's description.",
                      "example": "Agent's first custom group."
                    },
                    "variable_group_type": {
                      "type": "string",
                      "description": "The variable group's type. The type can be either system or custom.",
                      "example": "system",
                      "enum": [
                        "system",
                        "custom"
                      ]
                    },
                    "variable_group_variables_count": {
                      "type": "integer",
                      "description": "The number of the variables in the group.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3409` <br>\n Variable group does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:read:admin",
              "contact_center:read:variable_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:variable_group:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Delete a variable group",
        "description": "Delete a specified variable group. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:variable_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteGroup",
        "parameters": [
          {
            "name": "variableGroupId",
            "in": "path",
            "description": "The variable group's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "71ec9348-27db-4fe6-81b9-5b8637ca299b"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nVariable group deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid variable group type. Only Custom group can be deleted or updated. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3409` <br>\n Variable group does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:write:admin",
              "contact_center:delete:variable_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:variable_group:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Variables"
        ],
        "summary": "Update a variable group",
        "description": "Update a variable group. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:variable_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateVariableGroup",
        "parameters": [
          {
            "name": "variableGroupId",
            "in": "path",
            "description": "The variable group's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "71ec9348-27db-4fe6-81b9-5b8637ca299b"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variable_group_name": {
                    "type": "string",
                    "description": "The variable group's name.",
                    "example": "us.group.dev"
                  },
                  "variable_group_description": {
                    "type": "string",
                    "description": "The variable group's description.",
                    "example": "Update this group."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nVariable group updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid variable group type. Only custom group can be deleted or updated. <br>\n**Error Code:** `3416` <br>\n Global variable already exists. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3409` <br>\n Variable group does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:write:admin",
              "contact_center:update:variable_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:variable_group:admin"
          ]
        }
      }
    },
    "/contact_center/variables/{variableId}": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Get a variable",
        "description": "Retrieve a variable. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:read:variable:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "variableGet",
        "parameters": [
          {
            "name": "variableId",
            "in": "path",
            "description": "The variable's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a0afcf93-4ff6-4e22-8217-69b7a5862b6f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nVariable returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "variable_id": {
                      "type": "string",
                      "description": "The variable's unique ID.",
                      "example": "W_VATTk_Q5aW6z5rZtBxAQ"
                    },
                    "variable_group_id": {
                      "type": "string",
                      "description": "The variable group's ID.",
                      "example": "afececcd-0c9f-48de-9d19-0c84e8bdfeca"
                    },
                    "variable_name": {
                      "type": "string",
                      "description": "The variable's name.",
                      "example": "variable demo name"
                    },
                    "variable_description": {
                      "type": "string",
                      "description": "The variable's description.",
                      "example": "This is a variable description"
                    },
                    "variable_type": {
                      "type": "string",
                      "description": "The variable's type. \n* `global_variable` \n* `address_book_variable`",
                      "example": "global_variable.",
                      "enum": [
                        "global_variable",
                        "address_book_variable"
                      ]
                    },
                    "address_books": {
                      "maxItems": 20,
                      "type": "array",
                      "description": "The address book list. This field is only returned when `variable_type:address_book_variable`.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address_book_id": {
                            "type": "string",
                            "description": "The address book's ID.",
                            "example": "X2e_jsLNRkCjI0sQg2kRQQ"
                          },
                          "address_book_name": {
                            "type": "string",
                            "description": "The address book's name.",
                            "example": "Jill's address book"
                          },
                          "unit_id": {
                            "type": "string",
                            "description": "The address book's unit ID.",
                            "example": "zeYjXoDOS_eV1QmTpj63PQ"
                          },
                          "unit_name": {
                            "type": "string",
                            "description": "The address book unit's name.",
                            "example": "Address Book Unit"
                          },
                          "total_contacts": {
                            "type": "integer",
                            "description": "The address book's total number of contacts.",
                            "example": 3
                          }
                        }
                      }
                    },
                    "use_in_reporting": {
                      "type": "boolean",
                      "description": "Whether to use in reporting.",
                      "example": false,
                      "default": false
                    },
                    "mask_variable_data": {
                      "type": "boolean",
                      "description": "Mask variable data, for sensitive information.",
                      "example": true,
                      "default": false
                    },
                    "use_as_routing_profile_parameters": {
                      "type": "boolean",
                      "description": "Whether to use in routing profile. \n* `true` &mdash; Values used as routing profile parameters.\n* `false` &mdash; Not used as a value for routing configuration file parameters.",
                      "example": false,
                      "default": false
                    },
                    "data_type": {
                      "type": "string",
                      "description": "The data's type. \n* `string` \n* `number` \n* `boolean` \n* `date_time` \n* `currency` \n* `percentage` \n* `email` \n* `url` \n* `phone`",
                      "example": "number",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "date_time",
                        "currency",
                        "percentage",
                        "email",
                        "url",
                        "phone"
                      ]
                    },
                    "value_category": {
                      "type": "string",
                      "description": "The variable value's category. Returned only if `variable_type:global_variable`. \n* `undefined` &mdash; Each engagement starts without a pre-set value. \n* `default_value` &mdash; Each engagement starts with the default value. \n* `linked_value` &mdash; The value links across flows, and each engagement uses the latest value.",
                      "example": "default_value"
                    },
                    "values": {
                      "maxItems": 20,
                      "type": "array",
                      "description": "The variable's values.",
                      "items": {
                        "type": "string",
                        "example": "X2e_jsLNRkCjI0sQg2kRQQ"
                      }
                    },
                    "linked_value_lock": {
                      "type": "boolean",
                      "description": "The variable linked value's lock. \n* `true` &mdash; The variable cannot be updated in a flow. it will be the same for each engagement. \n* `false` &mdash; the variable value can be updated in a flow. each engagement will use the latest value.",
                      "example": false,
                      "default": false
                    },
                    "default_value": {
                      "type": "string",
                      "description": "The variable's default value.",
                      "example": "test-value"
                    },
                    "use_in_external_url_parameters": {
                      "type": "boolean",
                      "description": "Lets you use the parameter value in defining external URLs launched for each engagement. Variable types: global, address book",
                      "example": true
                    },
                    "client_show_in_client_profile_section": {
                      "type": "boolean",
                      "description": "Whether this variable will be shown in the Zoom client's Profile section. Variable types: global",
                      "example": true
                    },
                    "client_show_in_client_engagement_section": {
                      "type": "boolean",
                      "description": "Whether this variable will be shown in the Zoom client's Engagement section. Variable types: global",
                      "example": true
                    },
                    "client_show_in_inbound_call_notifications": {
                      "type": "boolean",
                      "description": "Whether this variable will be shown as an inbound call notification on the Zoom client. Variable types: global, address book",
                      "example": true
                    }
                  },
                  "description": "Information about the variable."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3401` <br>\n Variable does not exist: $variableId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:read:admin",
              "contact_center:read:variable:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:read:admin"
          ],
          "x-granular-scopes": [
            "contact_center:read:variable:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Delete a variable",
        "description": "Delete a variable. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:delete:variable:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "variableDelete",
        "parameters": [
          {
            "name": "variableId",
            "in": "path",
            "description": "The variable's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a0afcf93-4ff6-4e22-8217-69b7a5862b6f"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nVariable deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3401` <br>\n Variable does not exist: $variableId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:write:admin",
              "contact_center:delete:variable:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:delete:variable:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Variables"
        ],
        "summary": "Update a variable",
        "description": "Update a variable. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center_variable:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `contact_center:update:variable:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "variableUpdate",
        "parameters": [
          {
            "name": "variableId",
            "in": "path",
            "description": "The variable's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a0afcf93-4ff6-4e22-8217-69b7a5862b6f"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variable_name": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "The variable's name.",
                    "example": "variable demo name"
                  },
                  "variable_description": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "The variable's description.",
                    "example": "This is a variable description"
                  },
                  "address_book_ids": {
                    "maxItems": 20,
                    "type": "array",
                    "description": "The address book IDs. Only valid when `variable_type:address_book_variable`.",
                    "items": {
                      "type": "string",
                      "example": "X2e_jsLNRkCjI0sQg2kRQQ"
                    }
                  },
                  "use_in_reporting": {
                    "type": "boolean",
                    "description": "Whether to use in reporting. Only valid when `variable_type:global_variable`.",
                    "example": false,
                    "default": false
                  },
                  "mask_variable_data": {
                    "type": "boolean",
                    "description": "Mask variable data (for sensitive information). Only valid when `variable_type:global_variable` and the value of data_type is not `boolean`, `date_time`, `percentage`.",
                    "example": false,
                    "default": false
                  },
                  "use_as_routing_profile_parameters": {
                    "type": "boolean",
                    "description": "Whether to use in routing profile. Only valid when `variable_type:address_book_variable`. \n* `true` &mdash; Values used as routing profile parameters.\n* `false` &mdash; Not used as a value for routing configuration file parameters.",
                    "example": false,
                    "default": false
                  },
                  "data_type": {
                    "type": "string",
                    "description": "The data's type. `variable_type:address_book_variable` only applies to data types with `*`\n* `string` `*` \n* `number` \n* `boolean` `*` \n* `date_time` -(unix timestamp)\n* `currency` \n* `percentage` \n* `email` \n* `url` \n* `phone` - ([E.164 format](https://en.wikipedia.org/wiki/E.164))",
                    "example": "number",
                    "enum": [
                      "string",
                      "number",
                      "boolean",
                      "date_time",
                      "currency",
                      "percentage",
                      "email",
                      "url",
                      "phone"
                    ]
                  },
                  "value_category": {
                    "type": "string",
                    "description": "The variable value's category. Only valid when `variable_type:global_variable`. \n* `undefined` &mdash; Each engagement starts without a pre-set value. \n* `default_value` &mdash; Each engagement starts with the default value. \n* `linked_value` &mdash; The value links across flows, and each engagement uses the latest value.",
                    "example": "default_value"
                  },
                  "values": {
                    "maximum": 20,
                    "maxItems": 20,
                    "type": "array",
                    "description": "The variable's values. Take only the first value in the array when `variable_type` is `global_variable`. \n* If `variable_type` is `global_variable`, each value's max length is 4096. \n* If `variable_type` is `address_book_variable`, each value's max length is 300.",
                    "items": {
                      "maxLength": 4096,
                      "type": "string",
                      "example": "test-value-1"
                    }
                  },
                  "linked_value_lock": {
                    "type": "boolean",
                    "description": "The variable linked value's lock. Only valid when `value_category:linked_value`. \n* `true` &mdash; The variable cannot be updated in a flow. it will be the same for each engagement. \n* `false` &mdash; The variable value can be updated in a flow. each engagement will use the latest value.",
                    "example": false,
                    "default": false
                  },
                  "default_value": {
                    "maxLength": 512,
                    "type": "string",
                    "description": "The variable's default value. Only used when `variable_type:address_book_variable` and `data_type:string`.",
                    "example": "test-value-1"
                  },
                  "use_in_external_url_parameters": {
                    "type": "boolean",
                    "description": "Lets you use the parameter value in defining external URLs launched for each engagement. Variable types: global, address book",
                    "example": true
                  },
                  "client_show_in_client_profile_section": {
                    "type": "boolean",
                    "description": "Whether this variable will be shown in the Zoom client's Profile section. Variable types: global",
                    "example": true
                  },
                  "client_show_in_client_engagement_section": {
                    "type": "boolean",
                    "description": "Whether this variable will be shown in the Zoom client's Engagement section. Variable types: global",
                    "example": true
                  },
                  "client_show_in_inbound_call_notifications": {
                    "type": "boolean",
                    "description": "Whether this variable will be shown as an inbound call notification on the Zoom client. Variable types: global, address book",
                    "example": true
                  }
                },
                "description": "Information about the variable."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nVariable updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3403` <br>\n The variable already exists in the current custom group: $variable_name. <br>\n**Error Code:** `3404` <br>\n The `values` does not match `data_type`. <br>\n**Error Code:** `3405` <br>\n Invalid date format. <br>\n**Error Code:** `3406` <br>\n This `data_type`: $data_type is not supported when `variable_type` is $variable_type. <br>\n**Error Code:** `3420` <br>\n The `values` length is over limit. <br>\n**Error Code:** `2006` <br>\n Address books do not exist. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Validation failed <br>\n**Error Code:** `3401` <br>\n Variable does not exist: $variableId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "contact_center_variable:write:admin",
              "contact_center:update:variable:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "contact_center_variable:write:admin"
          ],
          "x-granular-scopes": [
            "contact_center:update:variable:admin"
          ]
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "openapi_authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "openapi_oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/",
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {
              "contact_center_contact:write:admin": "contact_center_contact:write:admin",
              "contact_center:write:address_book:admin": "contact_center:write:address_book:admin",
              "contact_center_contact:read:admin": "contact_center_contact:read:admin",
              "contact_center:read:list_address_books:admin": "contact_center:read:list_address_books:admin",
              "contact_center:write:address_book_unit:admin": "contact_center:write:address_book_unit:admin",
              "contact_center:read:list_address_book_units:admin": "contact_center:read:list_address_book_units:admin",
              "contact_center:delete:address_book_unit:admin": "contact_center:delete:address_book_unit:admin",
              "contact_center:read:address_book_unit:admin": "contact_center:read:address_book_unit:admin",
              "contact_center:update:address_book_unit:admin": "contact_center:update:address_book_unit:admin",
              "contact_center:read:address_book:admin": "contact_center:read:address_book:admin",
              "contact_center:update:address_book:admin": "contact_center:update:address_book:admin",
              "contact_center:delete:address_book:admin": "contact_center:delete:address_book:admin",
              "contact_center:read:list_address_book_contacts:admin": "contact_center:read:list_address_book_contacts:admin",
              "contact_center:write:address_book_contact:admin": "contact_center:write:address_book_contact:admin",
              "contact_center:update:address_book_contact:admin": "contact_center:update:address_book_contact:admin",
              "contact_center:read:address_book_contact:admin": "contact_center:read:address_book_contact:admin",
              "contact_center:delete:address_book_contact:admin": "contact_center:delete:address_book_contact:admin",
              "contact_center_preference:write:admin": "contact_center_preference:write:admin",
              "contact_center:write:system_status:admin": "contact_center:write:system_status:admin",
              "contact_center_preference:read:admin": "contact_center_preference:read:admin",
              "contact_center:read:list_system_statues:admin": "contact_center:read:list_system_statues:admin",
              "contact_center:update:system_status:admin": "contact_center:update:system_status:admin",
              "contact_center:read:system_status:admin": "contact_center:read:system_status:admin",
              "contact_center:delete:system_status:admin": "contact_center:delete:system_status:admin",
              "contact_center_asset_library:write:admin": "contact_center_asset_library:write:admin",
              "contact_center:write:asset_library:admin": "contact_center:write:asset_library:admin",
              "contact_center_asset_library:read:admin": "contact_center_asset_library:read:admin",
              "contact_center:read:asset_library:admin": "contact_center:read:asset_library:admin",
              "contact_center:delete:asset_library:admin": "contact_center:delete:asset_library:admin",
              "contact_center_engagement:write:admin": "contact_center_engagement:write:admin",
              "contact_center:update:engagement_recording_control:admin": "contact_center:update:engagement_recording_control:admin",
              "contact_center_user:write:admin": "contact_center_user:write:admin",
              "contact_center:write:user_control:admin": "contact_center:write:user_control:admin",
              "contact_center_user:read:admin": "contact_center_user:read:admin",
              "contact_center:read:user_device:admin": "contact_center:read:user_device:admin",
              "contact_center_outbound_campaign:read:admin": "contact_center_outbound_campaign:read:admin",
              "contact_center:read:outbound_campaign:admin": "contact_center:read:outbound_campaign:admin",
              "contact_center_outbound_campaign:write:admin": "contact_center_outbound_campaign:write:admin",
              "contact_center:write:outbound_campaign:admin": "contact_center:write:outbound_campaign:admin",
              "contact_center_outbound_campaign:delete:admin": "contact_center_outbound_campaign:delete:admin",
              "contact_center:delete:outbound_campaign:admin": "contact_center:delete:outbound_campaign:admin",
              "contact_center_outbound_campaign:update:admin": "contact_center_outbound_campaign:update:admin",
              "contact_center:update:outbound_campaign:admin": "contact_center:update:outbound_campaign:admin",
              "contact_center_outbound_campaign_contactlist:write:admin": "contact_center_outbound_campaign_contactlist:write:admin",
              "contact_center:write:outbound_campaign_contactlist:admin": "contact_center:write:outbound_campaign_contactlist:admin",
              "contact_center_outbound_campaign_contactlist:read:admin": "contact_center_outbound_campaign_contactlist:read:admin",
              "contact_center:read:outbound_campaign_contactlist:admin": "contact_center:read:outbound_campaign_contactlist:admin",
              "contact_center:delete:outbound_campaign_contactlist:admin": "contact_center:delete:outbound_campaign_contactlist:admin",
              "contact_center:update:outbound_campaign_contactlist:admin": "contact_center:update:outbound_campaign_contactlist:admin",
              "contact_center_outbound_campaign_contacts:read:admin": "contact_center_outbound_campaign_contacts:read:admin",
              "contact_center:read:outbound_campaign_contacts:admin": "contact_center:read:outbound_campaign_contacts:admin",
              "contact_center_outbound_campaign_contacts:write:admin": "contact_center_outbound_campaign_contacts:write:admin",
              "contact_center:write:outbound_campaign_contacts:admin": "contact_center:write:outbound_campaign_contacts:admin",
              "contact_center:update:outbound_campaign_contacts:admin": "contact_center:update:outbound_campaign_contacts:admin",
              "contact_center:delete:outbound_campaign_contacts:admin": "contact_center:delete:outbound_campaign_contacts:admin",
              "contact_center_disposition:write:admin": "contact_center_disposition:write:admin",
              "contact_center:write:disposition:admin": "contact_center:write:disposition:admin",
              "contact_center_disposition:read:admin": "contact_center_disposition:read:admin",
              "contact_center:read:list_dispositions:admin": "contact_center:read:list_dispositions:admin",
              "contact_center:write:disposition_set:admin": "contact_center:write:disposition_set:admin",
              "contact_center:read:list_disposition_sets:admin": "contact_center:read:list_disposition_sets:admin",
              "contact_center:update:disposition_set:admin": "contact_center:update:disposition_set:admin",
              "contact_center:delete:disposition_set:admin": "contact_center:delete:disposition_set:admin",
              "contact_center:read:disposition_set:admin": "contact_center:read:disposition_set:admin",
              "contact_center:read:disposition:admin": "contact_center:read:disposition:admin",
              "contact_center:delete:disposition:admin": "contact_center:delete:disposition:admin",
              "contact_center:update:disposition:admin": "contact_center:update:disposition:admin",
              "contact_center_report:read:admin": "contact_center_report:read:admin",
              "contact_center:read:list_engagements:admin": "contact_center:read:list_engagements:admin",
              "contact_center:read:engagement:admin": "contact_center:read:engagement:admin",
              "contact_center_engagement:read:admin": "contact_center_engagement:read:admin",
              "contact_center:read:engagement_recording_status:admin": "contact_center:read:engagement_recording_status:admin",
              "contact_center_flow:write:admin": "contact_center_flow:write:admin",
              "contact_center:write:flow:admin": "contact_center:write:flow:admin",
              "contact_center_flow:read:admin": "contact_center_flow:read:admin",
              "contact_center:read:list_flows:admin": "contact_center:read:list_flows:admin",
              "contact_center:delete:flow:admin": "contact_center:delete:flow:admin",
              "contact_center:update:flow:admin": "contact_center:update:flow:admin",
              "contact_center:read:flow:admin": "contact_center:read:flow:admin",
              "contact_center_inbox:write:admin": "contact_center_inbox:write:admin",
              "contact_center:delete:inbox:admin": "contact_center:delete:inbox:admin",
              "contact_center_inbox:read:admin": "contact_center_inbox:read:admin",
              "contact_center:read:list_inboxes:admin": "contact_center:read:list_inboxes:admin",
              "contact_center:write:inbox:admin": "contact_center:write:inbox:admin",
              "contact_center:delete:inbox_messages:admin": "contact_center:delete:inbox_messages:admin",
              "contact_center:read:inbox_messages:admin": "contact_center:read:inbox_messages:admin",
              "contact_center:read:inbox:admin": "contact_center:read:inbox:admin",
              "contact_center:update:inbox:admin": "contact_center:update:inbox:admin",
              "contact_center:delete:inbox_message:admin": "contact_center:delete:inbox_message:admin",
              "contact_center_queue:read:admin": "contact_center_queue:read:admin",
              "contact_center:read:list_inbox_queues:admin": "contact_center:read:list_inbox_queues:admin",
              "contact_center_queue:write:admin": "contact_center_queue:write:admin",
              "contact_center:delete:inbox_queue:admin": "contact_center:delete:inbox_queue:admin",
              "contact_center:write:inbox_queue:admin": "contact_center:write:inbox_queue:admin",
              "contact_center:write:inbox_user:admin": "contact_center:write:inbox_user:admin",
              "contact_center:read:inbox_user:admin": "contact_center:read:inbox_user:admin",
              "contact_center:delete:inbox_user:admin": "contact_center:delete:inbox_user:admin",
              "contact_center_sms:read:admin": "contact_center_sms:read:admin",
              "contact_center:read:sms_log:admin": "contact_center:read:sms_log:admin",
              "contact_center_voice_call:read:admin": "contact_center_voice_call:read:admin",
              "contact_center:read:voice_call_log:admin": "contact_center:read:voice_call_log:admin",
              "contact_center_note:read:admin": "contact_center_note:read:admin",
              "contact_center:read:list_notes:admin": "contact_center:read:list_notes:admin",
              "contact_center_note:write": "contact_center_note:write",
              "contact_center:update:note": "contact_center:update:note",
              "contact_center:read:note:admin": "contact_center:read:note:admin",
              "contact_center_operating_hours:read:admin": "contact_center_operating_hours:read:admin",
              "contact_center:read:list_business_hours:admin": "contact_center:read:list_business_hours:admin",
              "contact_center_operating_hours:write:admin": "contact_center_operating_hours:write:admin",
              "contact_center:write:business_hour:admin": "contact_center:write:business_hour:admin",
              "contact_center:read:business_hour:admin": "contact_center:read:business_hour:admin",
              "contact_center:update:business_hour:admin": "contact_center:update:business_hour:admin",
              "contact_center:delete:business_hour:admin": "contact_center:delete:business_hour:admin",
              "contact_center:read:business_hours_flow:admin": "contact_center:read:business_hours_flow:admin",
              "contact_center:read:business_hours_queue:admin": "contact_center:read:business_hours_queue:admin",
              "contact_center:read:list_closure_hours:admin": "contact_center:read:list_closure_hours:admin",
              "contact_center:write:closure_hour:admin": "contact_center:write:closure_hour:admin",
              "contact_center:update:closure_hour:admin": "contact_center:update:closure_hour:admin",
              "contact_center:read:closure_hour:admin": "contact_center:read:closure_hour:admin",
              "contact_center:delete:closure_hour:admin": "contact_center:delete:closure_hour:admin",
              "contact_center:read:clousre_hour_flow:admin": "contact_center:read:clousre_hour_flow:admin",
              "contact_center:read:closure_hour_queue:admin": "contact_center:read:closure_hour_queue:admin",
              "contact_center:read:queue:admin": "contact_center:read:queue:admin",
              "contact_center:read:list_queues:admin": "contact_center:read:list_queues:admin",
              "contact_center:write:queue:admin": "contact_center:write:queue:admin",
              "contact_center:delete:queue:admin": "contact_center:delete:queue:admin",
              "contact_center:update:queue:admin": "contact_center:update:queue:admin",
              "contact_center:write:queue_agent:admin": "contact_center:write:queue_agent:admin",
              "contact_center:read:list_queue_agents:admin": "contact_center:read:list_queue_agents:admin",
              "contact_center:delete:queue_agent:admin": "contact_center:delete:queue_agent:admin",
              "contact_center:update:queue_agent:admin": "contact_center:update:queue_agent:admin",
              "contact_center:write:queue disposition:admin": "contact_center:write:queue disposition:admin",
              "contact_center:write:queue_disposition_set:admin": "contact_center:write:queue_disposition_set:admin",
              "contact_center:delete:queue_disposition_set:admin": "contact_center:delete:queue_disposition_set:admin",
              "contact_center:delete:queue_disposition:admin": "contact_center:delete:queue_disposition:admin",
              "contact_center:read:queue_operating_hours:admin": "contact_center:read:queue_operating_hours:admin",
              "contact_center:patch:queue_operating_hours:admin": "contact_center:patch:queue_operating_hours:admin",
              "contact_center:delete:queue_supervisor:admin": "contact_center:delete:queue_supervisor:admin",
              "contact_center_recording:write:admin": "contact_center_recording:write:admin",
              "contact_center:delete:recording:admin": "contact_center:delete:recording:admin",
              "contact_center_recording:read:admin": "contact_center_recording:read:admin",
              "contact_center:read:list_recordings:admin": "contact_center:read:list_recordings:admin",
              "contact_center_recording:read": "contact_center_recording:read",
              "contact_center:read:list_recordings": "contact_center:read:list_recordings",
              "contact_center_region:write:admin": "contact_center_region:write:admin",
              "contact_center:write:region:admin": "contact_center:write:region:admin",
              "contact_center_region:read:admin": "contact_center_region:read:admin",
              "contact_center:read:list_regions:admin": "contact_center:read:list_regions:admin",
              "contact_center:udpate:region:admin": "contact_center:udpate:region:admin",
              "contact_center:read:region:admin": "contact_center:read:region:admin",
              "contact_center:delete:region:admin": "contact_center:delete:region:admin",
              "contact_center:read:list_region_users:admin": "contact_center:read:list_region_users:admin",
              "contact_center:write:region_user:admin": "contact_center:write:region_user:admin",
              "contact_center:read:dataset_agent_performance:admin": "contact_center:read:dataset_agent_performance:admin",
              "contact_center:read:dataset_agent_timecard:admin": "contact_center:read:dataset_agent_timecard:admin",
              "contact_center:read:dataset_engagement:admin": "contact_center:read:dataset_engagement:admin",
              "contact_center:read:dataset_flow_performance:admin": "contact_center:read:dataset_flow_performance:admin",
              "contact_center:read:dataset_outbound_dialer_performance:admin": "contact_center:read:dataset_outbound_dialer_performance:admin",
              "contact_center:read:dataset_queue_performance:admin": "contact_center:read:dataset_queue_performance:admin",
              "contact_center:read:engagement_log:admin": "contact_center:read:engagement_log:admin",
              "contact_center:read:call_journey_log:admin": "contact_center:read:call_journey_log:admin",
              "contact_center_operation_logs:read:admin": "contact_center_operation_logs:read:admin",
              "contact_center:read:operation_logs:admin": "contact_center:read:operation_logs:admin",
              "contact_center:read:agent_report:admin": "contact_center:read:agent_report:admin",
              "contact_center:read:agent_status_report:admin": "contact_center:read:agent_status_report:admin",
              "contact_center:read:engagement_report:admin": "contact_center:read:engagement_report:admin",
              "contact_center:read:queue_report:admin": "contact_center:read:queue_report:admin",
              "contact_center_role:write:admin": "contact_center_role:write:admin",
              "contact_center:write:role:admin": "contact_center:write:role:admin",
              "contact_center_role:read:admin": "contact_center_role:read:admin",
              "contact_center:read:list_roles:admin": "contact_center:read:list_roles:admin",
              "contact_center:read:role:admin": "contact_center:read:role:admin",
              "contact_center:update:role:admin": "contact_center:update:role:admin",
              "contact_center:delete:role:admin": "contact_center:delete:role:admin",
              "contact_center:write:role_user:admin": "contact_center:write:role_user:admin",
              "contact_center:read:list_role_users:admin": "contact_center:read:list_role_users:admin",
              "contact_center:delete:role_user:admin": "contact_center:delete:role_user:admin",
              "contact_center_routing_profile:write:admin": "contact_center_routing_profile:write:admin",
              "contact_center:write:agent_routing_profile:admin": "contact_center:write:agent_routing_profile:admin",
              "contact_center_routing_profile:read:admin": "contact_center_routing_profile:read:admin",
              "contact_center:read:agent_routing_profile:admin": "contact_center:read:agent_routing_profile:admin",
              "contact_center:update:agent_routing_profile:admin": "contact_center:update:agent_routing_profile:admin",
              "contact_center:delete:agent_routing_profile:admin": "contact_center:delete:agent_routing_profile:admin",
              "contact_center:read:consumer_routing_profile:admin": "contact_center:read:consumer_routing_profile:admin",
              "contact_center:write:consumer_routing_profile:admin": "contact_center:write:consumer_routing_profile:admin",
              "contact_center:update:consumer_routing_profile:admin": "contact_center:update:consumer_routing_profile:admin",
              "contact_center:delete:consumer_routing_profile:admin": "contact_center:delete:consumer_routing_profile:admin",
              "contact_center_sms:write:admin": "contact_center_sms:write:admin",
              "contact_center:write:sms:admin": "contact_center:write:sms:admin",
              "contact_center_skill:read:admin": "contact_center_skill:read:admin",
              "contact_center:read:list_skills:admin": "contact_center:read:list_skills:admin",
              "contact_center_skill:write:admin": "contact_center_skill:write:admin",
              "contact_center:write:skill:admin": "contact_center:write:skill:admin",
              "contact_center:write:skill_category:admin": "contact_center:write:skill_category:admin",
              "contact_center:read:list_skill_categories:admin": "contact_center:read:list_skill_categories:admin",
              "contact_center:update:skill_category:admin": "contact_center:update:skill_category:admin",
              "contact_center:delete:skill_category:admin": "contact_center:delete:skill_category:admin",
              "contact_center:read:skill_category:admin": "contact_center:read:skill_category:admin",
              "contact_center:update:skill:admin": "contact_center:update:skill:admin",
              "contact_center:delete:skill:admin": "contact_center:delete:skill:admin",
              "contact_center:read:skill:admin": "contact_center:read:skill:admin",
              "contact_center:read:list_skill_users:admin": "contact_center:read:list_skill_users:admin",
              "contact_center:update:batch_users:admin": "contact_center:update:batch_users:admin",
              "contact_center:write:user:admin": "contact_center:write:user:admin",
              "contact_center:delete:batch_users:admin": "contact_center:delete:batch_users:admin",
              "contact_center:read:list_users:admin": "contact_center:read:list_users:admin",
              "contact_center:write:batch_users:admin": "contact_center:write:batch_users:admin",
              "contact_center:read:user_templates:admin": "contact_center:read:user_templates:admin",
              "contact_center:read:user:admin": "contact_center:read:user:admin",
              "contact_center:delete:user:admin": "contact_center:delete:user:admin",
              "contact_center:update:user:admin": "contact_center:update:user:admin",
              "contact_center:read:list_user_queues:admin": "contact_center:read:list_user_queues:admin",
              "contact_center:write:user_skill:admin": "contact_center:write:user_skill:admin",
              "contact_center:read:list_user_skills:admin": "contact_center:read:list_user_skills:admin",
              "contact_center:delete:user_skill:admin": "contact_center:delete:user_skill:admin",
              "contact_center_variable_log:read:admin": "contact_center_variable_log:read:admin",
              "contact_center:read:list_variable_logs:admin": "contact_center:read:list_variable_logs:admin",
              "contact_center:read:variable_log:admin": "contact_center:read:variable_log:admin",
              "contact_center_variable_log:write:admin": "contact_center_variable_log:write:admin",
              "contact_center:delete:variable_log:admin": "contact_center:delete:variable_log:admin",
              "contact_center_variable:write:admin": "contact_center_variable:write:admin",
              "contact_center:write:variable:admin": "contact_center:write:variable:admin",
              "contact_center_variable:read:admin": "contact_center_variable:read:admin",
              "contact_center:read:list_variables:admin": "contact_center:read:list_variables:admin",
              "contact_center:read:list_variable_groups:admin": "contact_center:read:list_variable_groups:admin",
              "contact_center:write:variable_group:admin": "contact_center:write:variable_group:admin",
              "contact_center:delete:variable_group:admin": "contact_center:delete:variable_group:admin",
              "contact_center:read:variable_group:admin": "contact_center:read:variable_group:admin",
              "contact_center:update:variable_group:admin": "contact_center:update:variable_group:admin",
              "contact_center:delete:variable:admin": "contact_center:delete:variable:admin",
              "contact_center:update:variable:admin": "contact_center:update:variable:admin",
              "contact_center:read:variable:admin": "contact_center:read:variable:admin"
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "https://swagger.io"
  }
}