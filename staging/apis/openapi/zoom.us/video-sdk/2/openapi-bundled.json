{
  "openapi": "3.0.0",
  "info": {
    "title": "Video SDK",
    "description": "Use The Video SDK **API Key** and **API Secret** to authorize requests to the Video SDK APIs and [Account Settings APIs](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#tag/Accounts). \n\nZoom Video SDK APIs use [JSON Web Tokens (JWT)](https://datatracker.ietf.org/doc/html/rfc7519) for authorization. Each request to the Video SDK API must be authorized by an encrypted **Video SDK API JWT** as the request header bearer token. A Video SDK API JWT can be used until the token expires. You can set the token expiry, but we suggest limiting the time up to one hour for increased security.\n\nOn your Video SDK App Marketplace page, click **View JWT token** in the **API keys** section to quickly generate and use a token. See [Generate Video SDK API JWT](https://developers.zoom.us/docs/video-sdk/api-request/#generate-video-sdk-api-jwt) to programmatically generate your own.",
    "termsOfService": "https://zoom.us/docs/en-us/zoom_api_license_and_tou.html",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/"
    },
    "version": "2",
    "x-jentic-source-url": "https://developers.zoom.us/api-hub/video-sdk/methods/endpoints.json"
  },
  "servers": [
    {
      "url": "https://api.zoom.us/v2"
    }
  ],
  "paths": {
    "/videosdk/settings/storage": {
      "patch": {
        "tags": [
          "Byos Storage"
        ],
        "summary": "Update Bring Your Own Storage settings",
        "description": "Change Cloud Recording's Bring Your Own Storage setting. You can enable or disable this recording option. If it is set to true, Zoom will use your selected storage location to store recordings. If it is set to false, Zoom will use Zoom's own storage, charge you for cloud storage, and delete your configured storage locations.\n\n**This feature is in beta.** See [Bring your own storage](/docs/video-sdk/storage/) for details.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ",
        "operationId": "byosStorageSwitchPatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "bring_our_own_storage"
                ],
                "type": "object",
                "properties": {
                  "bring_our_own_storage": {
                    "type": "boolean",
                    "description": "Whether to turn on Bring Your Own Storage (BYOS) or not. Set to `true` to enable BYOS or `false` to disable it. If you disable BYOS, for security, Zoom will delete all storage location details.",
                    "example": true
                  },
                  "storage_location_id": {
                    "type": "string",
                    "description": "The ID for the selected storage location.",
                    "example": "LmefoSckQNaw3GSyl74FcA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Return the Storage location switch and selected value."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The storage ID matches the currently selected account. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3335` <br>\n Your account currently does not support CMR BYOS storage. <br>\n**Error Code:** `3336` <br>\n Please enable CMR BYOS storage first. Use the API (POST /v2/videosdk/settings/storage/location) to create one and enable this feature. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3310` <br>\n This storage ID does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/settings/storage/location": {
      "get": {
        "tags": [
          "Byos Storage"
        ],
        "summary": "List storage location",
        "description": "List the Bring Your Own Storage (BYOS) location. Lists all settings, except it will not show the AWS access key and secret.\n\n**This feature is in beta.** See [Bring your own storage](/docs/video-sdk/storage/) for details.\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ",
        "operationId": "byosStorageGet",
        "responses": {
          "200": {
            "description": "List the Bring Your Own Storage (BYOS) location list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "root",
                    "required": [
                      "id",
                      "name",
                      "provider",
                      "s3"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The storage location ID.",
                        "example": "9lXuCXgOTIqocq81iotCdQ"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name for your storage location.",
                        "example": "11111"
                      },
                      "provider": {
                        "type": "string",
                        "description": "The provider (currently only supports `aws_s3`).",
                        "example": "aws_s3",
                        "enum": [
                          "aws_s3"
                        ]
                      },
                      "selected": {
                        "type": "boolean",
                        "description": "Storage is now customer-selected.",
                        "example": true
                      },
                      "s3": {
                        "required": [
                          "authentication_mechanism",
                          "bucket",
                          "region"
                        ],
                        "type": "object",
                        "properties": {
                          "region": {
                            "type": "string",
                            "description": "The AWS region.",
                            "example": "us-east-2"
                          },
                          "bucket": {
                            "type": "string",
                            "description": "The Amazon S3 bucket.",
                            "example": "testpbx"
                          },
                          "authentication_mechanism": {
                            "type": "string",
                            "description": "The authentication mechanism (currently only supports `aws_access_key`).",
                            "example": "aws_access_key",
                            "enum": [
                              "aws_access_key"
                            ]
                          }
                        },
                        "description": "Currently only supports Amazon S3 access key and secret."
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3335` <br>\n Your account currently does not support CMR BYOS storage. <br>\n**Error Code:** `3336` <br>\n Please enable CMR BYOS storage first. Use the API (POST /v2/videosdk/settings/storage/location) to create one and enable this feature. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "post": {
        "tags": [
          "Byos Storage"
        ],
        "summary": "Add storage location",
        "description": "Add the Bring Your Own Storage (BYOS) location.\n\n**This feature is in beta.** See [Bring your own storage](/docs/video-sdk/storage/) for details.\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ",
        "operationId": "byosStoragePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "provider",
                  "s3"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name for your storage location.",
                    "example": "0827aksk"
                  },
                  "provider": {
                    "type": "string",
                    "description": "The provider (currently only supports `aws_s3`).",
                    "example": "aws_s3",
                    "enum": [
                      "aws_s3"
                    ]
                  },
                  "s3": {
                    "required": [
                      "access_key",
                      "authentication_mechanism",
                      "bucket",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "region": {
                        "type": "string",
                        "description": "The AWS region.",
                        "example": "us-east-2"
                      },
                      "bucket": {
                        "type": "string",
                        "description": "The Amazon S3 bucket.",
                        "example": "testpbx"
                      },
                      "authentication_mechanism": {
                        "type": "string",
                        "description": "The authentication mechanism (currently only supports `aws_access_key`, which uses the S3 access key).",
                        "example": "aws_access_key",
                        "enum": [
                          "aws_access_key"
                        ]
                      },
                      "access_key": {
                        "required": [
                          "id",
                          "key"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The AWS access key.",
                            "example": "access key"
                          },
                          "key": {
                            "type": "string",
                            "description": "The AWS secret.",
                            "example": "secret key"
                          }
                        },
                        "description": "When `authentication_mechanism` value is `aws_access_key`."
                      }
                    },
                    "description": "Currently only supports Amazon S3 access key and secret."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return the add success object.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "name",
                    "provider",
                    "s3"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The storage location ID.",
                      "example": "GOSG08LQQoeDyyRAO6GgLw"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name for your storage location.",
                      "example": "0827aksk"
                    },
                    "provider": {
                      "type": "string",
                      "description": "The provider (currently only supports `aws_s3`).",
                      "example": "aws_s3",
                      "enum": [
                        "aws_s3"
                      ]
                    },
                    "s3": {
                      "required": [
                        "authentication_mechanism",
                        "bucket",
                        "region"
                      ],
                      "type": "object",
                      "properties": {
                        "region": {
                          "type": "string",
                          "description": "The AWS region.",
                          "example": "us-east-2"
                        },
                        "bucket": {
                          "type": "string",
                          "description": "The Amazon S3 bucket.",
                          "example": "testpbx"
                        },
                        "authentication_mechanism": {
                          "type": "string",
                          "description": "The authentication mechanism (currently only supports `aws_access_key`, which uses the S3 access key).",
                          "example": "aws_access_key",
                          "enum": [
                            "aws_access_key"
                          ]
                        }
                      },
                      "description": "Currently only supports Amazon S3 access key and secret."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3313` <br>\n Unable to connect to the storage location. Please check your configuration and try again. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3335` <br>\n Your account currently does not support CMR BYOS storage. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/settings/storage/location/{storageLocationId}": {
      "get": {
        "tags": [
          "Byos Storage"
        ],
        "summary": "Storage location detail",
        "description": "Get details about one of the Bring Your Own Storage (BYOS) locations. This won't show the AWS access key and secret.\n\n**This feature is in beta.** See [Bring your own storage](/docs/video-sdk/storage/) for details.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ",
        "operationId": "byosStorageDetailGet",
        "parameters": [
          {
            "name": "storageLocationId",
            "in": "path",
            "description": "The storage location ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7kdwg5y0Ra6B2vWdtXUJOQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details about one of the Bring Your Own Storage (BYOS) locations.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "name",
                    "provider",
                    "s3",
                    "verify_status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The storage location ID.",
                      "example": "7kdwg5y0Ra6B2vWdtXUJOQ"
                    },
                    "name": {
                      "type": "string",
                      "description": "The custom name.",
                      "example": "newpbx123"
                    },
                    "provider": {
                      "type": "string",
                      "description": "The provider (currently only supports `aws_s3` enum).",
                      "example": "aws_s3",
                      "enum": [
                        "aws_s3"
                      ]
                    },
                    "s3": {
                      "required": [
                        "authentication_mechanism",
                        "bucket",
                        "region"
                      ],
                      "type": "object",
                      "properties": {
                        "region": {
                          "type": "string",
                          "description": "The AWS region.",
                          "example": "us-east-1"
                        },
                        "bucket": {
                          "type": "string",
                          "description": "The Amazon S3 bucket.",
                          "example": "testpbx"
                        },
                        "authentication_mechanism": {
                          "type": "string",
                          "description": "The authentication mechanism (currently only supports `aws_access_key` enum).",
                          "example": "aws_access_key",
                          "enum": [
                            "aws_access_key"
                          ]
                        }
                      },
                      "description": "Currently only supports Amazon S3 access key and secret."
                    },
                    "verify_status": {
                      "type": "string",
                      "description": "The verifification status for this storage location.",
                      "example": "success",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid parameters. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3335` <br>\n Your account currently does not support CMR BYOS storage. <br>\n**Error Code:** `3336` <br>\n Please enable CMR BYOS storage first. Use the API (POST /v2/videosdk/settings/storage/location) to create one and enable this feature. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3310` <br>\n This storage ID does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "delete": {
        "tags": [
          "Byos Storage"
        ],
        "summary": "Delete storage location detail",
        "description": "Delete one of the the Bring Your Own Storage (BYOS) storage locations.\n \n**This feature is in beta.** See [Bring your own storage](/docs/video-sdk/storage/) for details.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ",
        "operationId": "byosStorageDetailDelete",
        "parameters": [
          {
            "name": "storageLocationId",
            "in": "path",
            "description": "The storage location ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7kdwg5y0Ra6B2vWdtXUJOQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete Bring Your Own Storage (BYOS) storage location."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid parameters. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3335` <br>\n Your account currently does not support CMR BYOS storage. <br>\n**Error Code:** `3336` <br>\n Please enable CMR BYOS storage first. Use the API (POST /v2/videosdk/settings/storage/location) to create one and enable this feature. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3310` <br>\n This storage ID does not exist. <br>\n"
          },
          "405": {
            "description": "**HTTP Status Code:** `405` <br>\n Method Not Allowed  \n\n **Error Code:** `3312` <br>\n You cannot delete this bucket, because it is currently being used. To delete, either change to another storage location, or turn off BYOS, then try again. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "patch": {
        "tags": [
          "Byos Storage"
        ],
        "summary": "Change storage location detail",
        "description": "Change one of the Bring Your Own Storage (BYOS) storage location details.\n\n**This feature is in beta.** See [Bring your own storage](/docs/video-sdk/storage/) for details.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ",
        "operationId": "byosStorageDetailPatch",
        "parameters": [
          {
            "name": "storageLocationId",
            "in": "path",
            "description": "Storage location ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "9lXuCXgOTIqocq81iotCdQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The custom name.",
                    "example": "newpbx1234567"
                  },
                  "provider": {
                    "type": "string",
                    "description": "The provider (currently only supports `aws_s3`).",
                    "example": "aws_s3",
                    "enum": [
                      "aws_s3"
                    ]
                  },
                  "s3": {
                    "type": "object",
                    "properties": {
                      "region": {
                        "type": "string",
                        "description": "The AWS region (cannot change region).",
                        "example": "us-east-1"
                      },
                      "bucket": {
                        "type": "string",
                        "description": "The Amazon S3 bucket (cannot change bucket).",
                        "example": "testpbx"
                      },
                      "authentication_mechanism": {
                        "type": "string",
                        "description": "The authentication mechanism (currently only supports `aws_access_key`).",
                        "example": "aws_access_key",
                        "enum": [
                          "aws_access_key"
                        ]
                      },
                      "access_key": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The AWS access key. When you get or list the storage location detail, this key will be blocked.",
                            "example": "access_key"
                          },
                          "key": {
                            "type": "string",
                            "description": "The AWS secret. When you get or list the storage location detail, this secret will be blocked.",
                            "example": "secret_key"
                          }
                        },
                        "description": "When `authentication_mechanism` value is `aws_access_key`."
                      }
                    },
                    "description": "Currently only supports Amazon S3 access key and secret."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The Bring Your Own Storage (BYOS) location detail."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Can not change the bucket and region. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3335` <br>\n Your account currently does not support CMR BYOS storage. <br>\n**Error Code:** `3336` <br>\n Please enable CMR BYOS storage first. Use the API (POST /v2/videosdk/settings/storage/location) to create one and enable this feature. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  This storage ID does not exist. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/recordings": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "List recordings of an account",
        "description": "List **Video SDK Cloud Recordings** available on an Account.\n \n To access a password protected cloud recording, add an `access_token` parameter to the download URL and provide your [Video SDK API JWT](https://marketplace.zoom.us/docs/guides/build/video-sdk-app/#video-sdk-and-api-credentials) as the value of the `access_token`.\n  \n \n\n \n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "recordingsList",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 10,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
            }
          },
          {
            "name": "trash",
            "in": "query",
            "description": "Query trash.\n`true`: List recordings from trash.  \n  `false`: Do not list recordings from the trash.  \n  The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. ",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": false,
              "default": false
            }
          },
          {
            "name": "trash_type",
            "in": "query",
            "description": "The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:  \n \n    `session_recordings`: List all session recordings from the trash.  \n \n    `recording_file`: List all individual recording files from the trash. ",
            "required": false,
            "schema": {
              "type": "string",
              "example": "session_recordings",
              "default": "session_recordings"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date in 'yyyy-mm-dd' UTC format for the date range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of `from` field will be &quot;2020-06-30&quot; and the value of the `to` field will be &quot;2020-07-01&quot;. \n\n**Note**: Files designated as trash cannot be filtered by date range and thus, the `from` and `to` fields should not be used for files designated as trash.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-10-11"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date in 'yyyy-mm-dd' UTC format. ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-11-11"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nList of recording objects returned.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The recording session list.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "description": "The start date of the query date range.",
                          "example": "2021-10-11"
                        },
                        "to": {
                          "type": "string",
                          "description": "The end date of the query date range.",
                          "example": "2021-11-11"
                        },
                        "page_size": {
                          "type": "integer",
                          "description": " The number of records returned within a single API call.",
                          "example": 30
                        },
                        "total_records": {
                          "type": "integer",
                          "description": "The number of all records available across pages.",
                          "example": 100
                        },
                        "next_page_token": {
                          "type": "string",
                          "description": "The next page token to paginate through large result sets.",
                          "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "sessions": {
                          "title": "Recording session list",
                          "maxItems": 300,
                          "type": "array",
                          "description": "List of recording sessions",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "session_id": {
                                    "type": "string",
                                    "description": "Unique session identifier. Each instance of the session will have its own `session_id`.",
                                    "example": "JZiFOknTQ4yH/tJgaUTlkg=="
                                  },
                                  "session_name": {
                                    "type": "string",
                                    "description": "Session name.",
                                    "example": "session_name"
                                  },
                                  "start_time": {
                                    "type": "string",
                                    "description": "The time at which the session started.",
                                    "format": "date-time",
                                    "example": "2022-03-10T02:27:24Z"
                                  },
                                  "duration": {
                                    "type": "integer",
                                    "description": "Session duration.",
                                    "example": 2
                                  },
                                  "total_size": {
                                    "type": "integer",
                                    "description": "The total file size of the recording. This includes the `recording_files` and `participant_audio_files` files.",
                                    "format": "int64",
                                    "example": 444601
                                  },
                                  "recording_count": {
                                    "type": "integer",
                                    "description": "Number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files.",
                                    "example": 4
                                  },
                                  "session_key": {
                                    "type": "string",
                                    "description": "The Video SDK custom session ID.",
                                    "example": "ABC36jaBI145"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "List of recording files.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "recording_files": {
                                        "title": "Recording file list",
                                        "type": "array",
                                        "description": "List of recording files.",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string",
                                                  "description": "The recording file ID. This is included in the general query response.",
                                                  "example": "35497738-9fef-4f8a-97db-0ec34caef065"
                                                },
                                                "recording_start": {
                                                  "type": "string",
                                                  "description": "The recording start time.",
                                                  "example": "2022-03-11T12:34:39Z"
                                                },
                                                "recording_end": {
                                                  "type": "string",
                                                  "description": "The recording end time. This is included in the the general query response.",
                                                  "example": "2022-03-11T12:34:42Z"
                                                },
                                                "file_type": {
                                                  "type": "string",
                                                  "description": "The recording file type. The value of this field could be one of the following:  \n \n`MP4`: Video file of the recording.  \n `M4A` Audio-only file of the recording.  \n `TIMELINE`: Timestamped file of the recording in JSON file format. To get a timeline file, the 'Add a timestamp to the recording'. You must enable this setting in the recording settings. See [Video SDK Account: Enable cloud recording](https://developers.zoom.us/docs/video-sdk/account/#enable-cloud-recording) for details). The time will display in the account's timezone, set in their Zoom profile.\n  \n  `TRANSCRIPT`: Transcription file of the recording in VTT format.  \n  `CHAT`: A TXT file containing in-session chat messages that were sent during the session.  \n `CC`: File containing closed captions of the recording in VTT file format.  \n `CSV`: File containing polling data in CSV format.\n\n  \n \n\n A recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties: `id`, `status`, `file_size`, and `recording_type`.",
                                                  "example": "MP4"
                                                },
                                                "file_size": {
                                                  "type": "number",
                                                  "description": "The recording file size.",
                                                  "example": 12125
                                                },
                                                "download_url": {
                                                  "type": "string",
                                                  "description": "The URL to download the recording. \n\nTo download, set your [Video SDK API JWT](https://developers.zoom.us/docs/video-sdk/api-request/) as a Bearer token in the Authorization header of your HTTP request. For example: \n\n `curl \"{download_url}\" --header \"authorization: Bearer {JWT}\" --header \"content-type: application/json\"`.\n\nNote: The `download_url` may be a redirect. In that case, use `curl --location \"{download_url}\"` to follow redirects or use another tool, like Postman.",
                                                  "example": "https://example.com/download_url"
                                                },
                                                "external_storage_url": {
                                                  "type": "string",
                                                  "description": "The S3 path for bring your own storage recording.",
                                                  "example": "s3://cmrpbx/cmr/replay/2024/05/01/77431195-02EC-4B4C-8218-17E716123FCD/cmr_byos/GMT20210906-041233_Recording.m4a"
                                                },
                                                "status": {
                                                  "type": "string",
                                                  "description": "The recording status.",
                                                  "example": "completed",
                                                  "enum": [
                                                    "completed"
                                                  ]
                                                },
                                                "deleted_time": {
                                                  "type": "string",
                                                  "description": "The time at which the recording was deleted. Returned in the response only for the trash query.",
                                                  "example": "2022-03-28T07:22:22Z"
                                                },
                                                "recording_type": {
                                                  "type": "string",
                                                  "description": "The recording type. The value of this field can be one of the following:  \n `shared_screen_with_speaker_view(CC)`  \n `shared_screen_with_speaker_view`  \n `shared_screen_with_gallery_view`  \n `active_speaker`  \n `gallery_view`  \n `shared_screen`  \n `audio_only`  \n `audio_transcript`  \n `chat_file`  \n `poll`  \n `timeline`  \n `closed_caption`  \n `local_transcript`  \n `original_transcript`",
                                                  "example": "audio_only"
                                                }
                                              },
                                              "description": "Recording file object."
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "description": "Return a list of recording files about individual video for each participant.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "participant_video_files": {
                                        "title": "The list of recording files for each participant.",
                                        "type": "array",
                                        "description": "A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string",
                                                  "description": "The recording file's unique ID. This is included in the general query response.",
                                                  "example": "24698bd1-589e-4c33-9ba3-bc788b2a0ac2"
                                                },
                                                "recording_start": {
                                                  "type": "string",
                                                  "description": "The recording file's start time.",
                                                  "format": "date-time",
                                                  "example": "2021-12-07T05:42:13Z"
                                                },
                                                "recording_end": {
                                                  "type": "string",
                                                  "description": "The recording file's end time. This is included in the general query response.",
                                                  "format": "date-time",
                                                  "example": "2021-12-07T05:42:28Z"
                                                },
                                                "file_name": {
                                                  "type": "string",
                                                  "description": "The recording file's name.",
                                                  "example": "recording_name"
                                                },
                                                "file_type": {
                                                  "type": "string",
                                                  "description": "The recording file's format. One of:\n\n* `MP4` - Video file.\n* `M4A` - Audio-only file.\n* `TIMELINE` - Timestamp file of the recording, in JSON file format. To get a timeline file, you must enable the **Add a timestamp to the recording** setting in the recording settings. See [Video SDK Account: Enable could recording](https://developers.zoom.us/docs/video-sdk/account/#enable-cloud-recording) for details. The time will display in the account's timezone.\n* `TRANSCRIPT` - A transcript of the recording, in VTT format.\n * `CHAT` - A text file containing chat messages sent during the session.\n* `CC` - A file containing the closed captions of the recording, in VTT file format.\n* `CSV` - A file containing polling data, in CSV format.\n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties: `id`, `status`, `file_size`, and `recording_type`.",
                                                  "example": "MP4"
                                                },
                                                "file_extension": {
                                                  "type": "string",
                                                  "description": "The archived file's file extension.",
                                                  "example": "MP4"
                                                },
                                                "file_size": {
                                                  "type": "number",
                                                  "description": "The recording file's size, in bytes.",
                                                  "example": 900452
                                                },
                                                "download_url": {
                                                  "type": "string",
                                                  "description": "The URL to download the recording. \n\nTo download, set your [Video SDK API JWT](https://developers.zoom.us/docs/video-sdk/api-request/) as a Bearer token in the Authorization header of your HTTP request. For example: \n\n `curl \"{download_url}\" --header \"authorization: Bearer {JWT}\" --header \"content-type: application/json\"`.\n\nNote: The `download_url` may be a redirect. In that case, use `curl --location \"{download_url}\"` to follow redirects or use another tool, like Postman.",
                                                  "example": "https://download.example.com/download_url"
                                                },
                                                "recording_type": {
                                                  "type": "string",
                                                  "description": "The type of recording file: \n* `individual_user` \n* `individual_shared_screen`.",
                                                  "example": "individual_shared_screen",
                                                  "enum": [
                                                    "individual_user",
                                                    "individual_shared_screen"
                                                  ]
                                                },
                                                "status": {
                                                  "type": "string",
                                                  "description": "The recording file's status.",
                                                  "example": "completed",
                                                  "enum": [
                                                    "completed"
                                                  ]
                                                },
                                                "user_id": {
                                                  "type": "string",
                                                  "description": "The participant's session user ID. This value is assigned to a participant upon joining a session and is only valid for the duration of the session.",
                                                  "example": "abcd1234"
                                                },
                                                "user_key": {
                                                  "type": "string",
                                                  "description": "The participant's SDK identifier. Set with the `user_identity` key in the Video SDK JWT payload. This value can be alphanumeric, up to a maximum length of 36 characters.",
                                                  "example": "efgh5678"
                                                }
                                              },
                                              "description": "The recording file object."
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} not exist or not belong to this account. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/recordings": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "List session's recordings",
        "description": "Get all the **recordings** from a session instance. The recording files can be downloaded via the `download_url` property listed in the response.\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingGet",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `+` or `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "include_fields",
            "in": "query",
            "description": "Get the `download_access_token` field for downloading session recordings.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "download_access_token"
            }
          },
          {
            "name": "ttl",
            "in": "query",
            "description": "Time to live (TTL) of the `download_access_token`. This is only valid if the `include_fields` query parameter contains `download_access_token`. The range is between 0-604800.",
            "required": false,
            "schema": {
              "maximum": 604800,
              "minimum": 0,
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`   \n \nYou do not have the right permissions.\n **HTTP Status Code:** `200`  \n \nRecording object returned.  \n \n",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The recording session object.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "session_id": {
                              "type": "string",
                              "description": "Unique session identifier. Each instance of the session will have its own `session_id`.",
                              "example": "JZiFOknTQ4yH/tJgaUTlkg=="
                            },
                            "session_name": {
                              "type": "string",
                              "description": "Session name.",
                              "example": "session_name"
                            },
                            "start_time": {
                              "type": "string",
                              "description": "The time at which the session started.",
                              "format": "date-time",
                              "example": "2022-03-10T02:27:24Z"
                            },
                            "duration": {
                              "type": "integer",
                              "description": "Session duration.",
                              "example": 2
                            },
                            "total_size": {
                              "type": "integer",
                              "description": "The total file size of the recording. This includes the `recording_files` and `participant_audio_files` files.",
                              "format": "int64",
                              "example": 444601
                            },
                            "recording_count": {
                              "type": "integer",
                              "description": "Number of recording files returned in the response of this API call. This includes the `recording_files` and `participant_audio_files` files.",
                              "example": 4
                            },
                            "session_key": {
                              "type": "string",
                              "description": "The Video SDK custom session ID.",
                              "example": "ABC36jaBI145"
                            }
                          }
                        },
                        {
                          "title": "Recording file list",
                          "type": "object",
                          "description": "List of recording files.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "recording_files": {
                                  "title": "Recording file list",
                                  "maxItems": 200,
                                  "type": "array",
                                  "description": "List of recording files.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The recording file ID. Included in the general query response.",
                                            "example": "35497738-9fef-4f8a-97db-0ec34caef065"
                                          },
                                          "recording_start": {
                                            "type": "string",
                                            "description": "The recording start time.",
                                            "example": "2022-03-11T12:34:39Z"
                                          },
                                          "recording_end": {
                                            "type": "string",
                                            "description": "The recording end time. Included in the general query response.",
                                            "example": "2022-03-11T12:34:42Z"
                                          },
                                          "file_type": {
                                            "type": "string",
                                            "description": "The recording file type. One of the following: \n \n`MP4` - Video file of the recording.  \n `M4A` - Audio-only file of the recording.  \n `TIMELINE` - Timestamped file of the recording in JSON file format. To get a timeline file, you must enable the 'Add a timestamp to the recording' setting in the recording settings. See [Enable cloud recording](https://developers.zoom.us/docs/video-sdk/account/#enable-cloud-recording) for details. The time will display in the host's timezone, set in their Zoom profile.\n  \n  `TRANSCRIPT` - Transcription file of the recording in VTT format.  \n  `CHAT` - A TXT file containing in-session chat messages that were sent during the session.  \n `CC` - File containing closed captions of the recording in VTT file format.  \n `CSV` - File containing polling data in CSV format.\n\n A recording file object with the file type `CC` or `TIMELINE` **does not have** the `id`, `status`, `file_size`, or `recording_type` properties.",
                                            "example": "MP4"
                                          },
                                          "file_size": {
                                            "type": "number",
                                            "description": "The recording file size.",
                                            "example": 12125
                                          },
                                          "download_url": {
                                            "type": "string",
                                            "description": "The URL to download the recording. \n\nTo download, set your [Video SDK API JWT](https://developers.zoom.us/docs/video-sdk/api-request/) as a Bearer token in the Authorization header of your HTTP request. For example: \n\n `curl \"{download_url}\" --header \"authorization: Bearer {JWT}\" --header \"content-type: application/json\"`.\n\nNote: The `download_url` may be a redirect. In that case, use `curl --location \"{download_url}\"` to follow redirects or use another tool, like Postman.",
                                            "example": "https://example.com/download_url"
                                          },
                                          "external_storage_url": {
                                            "type": "string",
                                            "description": "The S3 path for bring your own storage recording.",
                                            "example": "s3://cmrpbx/cmr/replay/2024/05/01/77431195-02EC-4B4C-8218-17E716123FCD/cmr_byos/GMT20210906-041233_Recording.m4a"
                                          },
                                          "status": {
                                            "type": "string",
                                            "description": "The recording status.",
                                            "example": "completed",
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "deleted_time": {
                                            "type": "string",
                                            "description": "The time at which recording was deleted. Returned in the response only for the trash query.",
                                            "example": "2022-03-28T07:22:22Z"
                                          },
                                          "recording_type": {
                                            "type": "string",
                                            "description": "The recording type. The value of this field can be one of the following:  \n `shared_screen_with_speaker_view(CC)`  \n `shared_screen_with_speaker_view`  \n `shared_screen_with_gallery_view`  \n `active_speaker`  \n `gallery_view`  \n `shared_screen`  \n `audio_only`  \n `audio_transcript`  \n `chat_file`  \n `poll`  \n `timeline`  \n `closed_caption`  \n `local_transcript`  \n `original_transcript`",
                                            "example": "audio_only"
                                          }
                                        },
                                        "description": "Recording file object."
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "title": "List recording files for each participant.",
                          "type": "object",
                          "description": "Return a list of recording files about individual video for each participant.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "participant_video_files": {
                                  "title": "The list of recording files for each participant.",
                                  "maxItems": 300,
                                  "type": "array",
                                  "description": "A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The recording file's unique ID. This is included in the general query response.",
                                            "example": "24698bd1-589e-4c33-9ba3-bc788b2a0ac2"
                                          },
                                          "recording_start": {
                                            "type": "string",
                                            "description": "The recording file's start time.",
                                            "format": "date-time",
                                            "example": "2021-12-07T05:42:13Z"
                                          },
                                          "recording_end": {
                                            "type": "string",
                                            "description": "The recording file's end time. This is included in the general query response.",
                                            "format": "date-time",
                                            "example": "2021-12-07T05:42:28Z"
                                          },
                                          "file_name": {
                                            "type": "string",
                                            "description": "The recording file's name.",
                                            "example": "recording_name"
                                          },
                                          "file_type": {
                                            "type": "string",
                                            "description": "The recording file's format. One of the following:\n\n* `MP4` - Video file.\n* `M4A` - Audio-only file.\n* `TIMELINE` - Timestamp file of the recording, in JSON file format. To get a timeline file, you must enable the 'Add a timestamp to the recording' setting in the recording settings. See [Enable cloud recording](https://developers.zoom.us/docs/video-sdk/account/#enable-cloud-recording) for details. The time will display in the host's timezone.\n* `TRANSCRIPT` - A transcript of the recording, in VTT format.\n* `CHAT` - A text file containing chat messages sent during the session.\n * `CC` - A file containing the closed captions of the recording, in VTT file format.\n* `CSV` - A file containing polling data, in CSV format.\n \nA recording file object with the file type `CC` or `TIMELINE` value **does not have** the `id`, `status`, `file_size`, or `recording_type` properties.",
                                            "example": "MP4"
                                          },
                                          "file_extension": {
                                            "type": "string",
                                            "description": "The archived file's file extension.",
                                            "example": "MP4"
                                          },
                                          "file_size": {
                                            "type": "number",
                                            "description": "The recording file's size, in bytes.",
                                            "example": 900452
                                          },
                                          "download_url": {
                                            "type": "string",
                                            "description": "The URL to download the recording. \n\nTo download, set your [Video SDK API JWT](https://developers.zoom.us/docs/video-sdk/api-request/) as a Bearer token in the Authorization header of your HTTP request. For example: \n\n `curl \"{download_url}\" --header \"authorization: Bearer {JWT}\" --header \"content-type: application/json\"`.\n\nNote: The `download_url` may be a redirect. In that case, use `curl --location \"{download_url}\"` to follow redirects or use another tool, like Postman.",
                                            "example": "https://download.example.com/download_url"
                                          },
                                          "recording_type": {
                                            "type": "string",
                                            "description": "The type of recording file: \n* `individual_user` \n* `individual_shared_screen`.",
                                            "example": "individual_shared_screen",
                                            "enum": [
                                              "individual_user",
                                              "individual_shared_screen"
                                            ]
                                          },
                                          "status": {
                                            "type": "string",
                                            "description": "The recording file's status.",
                                            "example": "completed",
                                            "enum": [
                                              "completed"
                                            ]
                                          }
                                        },
                                        "description": "The recording file object."
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "download_access_token": {
                          "type": "string",
                          "description": "The JWT access token for downloading the session recording.\n This is only returned if the `include_fields` query parameter contains `download_access_token`.",
                          "example": "exampleTokenXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                        }
                      }
                    },
                    {
                      "title": "List recording files for each participant.",
                      "type": "object",
                      "description": "Return a list of recording files for each participant. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_audio_files": {
                              "title": "The list of recording files for each participant.",
                              "maxItems": 300,
                              "type": "array",
                              "description": "A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The recording file's unique ID. This is included in the general query response.",
                                        "example": "24698bd1-589e-4c33-9ba3-bc788b2a0ac2"
                                      },
                                      "recording_start": {
                                        "type": "string",
                                        "description": "The recording file's start time.",
                                        "format": "date-time",
                                        "example": "2021-12-07T05:42:13Z"
                                      },
                                      "recording_end": {
                                        "type": "string",
                                        "description": "The recording file's end time. This is included in the general query response.",
                                        "format": "date-time",
                                        "example": "2021-12-07T05:42:28Z"
                                      },
                                      "file_name": {
                                        "type": "string",
                                        "description": "The recording file's name.",
                                        "example": "recording_name"
                                      },
                                      "file_type": {
                                        "type": "string",
                                        "description": "The recording file's format. One of the following:\n\n* `MP4` - Video file.\n* `M4A` - Audio-only file.\n* `TIMELINE` - Timestamp file of the recording, in JSON file format. To get a timeline file, you must enable the 'Add a timestamp to the recording' setting in the recording settings. See [Enable cloud recording](https://developers.zoom.us/docs/video-sdk/account/#enable-cloud-recording) for details. The time will display in the host's timezone.\n* `TRANSCRIPT` - A transcript of the recording, in VTT format.\n* `CHAT` - A text file containing chat messages sent during the session.\n * `CC` - A file containing the closed captions of the recording, in VTT file format.\n* `CSV` - A file containing polling data, in CSV format.\n\n A recording file object with the file type `CC` or `TIMELINE` value **does not have** the `id`, `status`, `file_size`, or `recording_type` properties.",
                                        "example": "MP4"
                                      },
                                      "file_extension": {
                                        "type": "string",
                                        "description": "The archived file's file extension.",
                                        "example": "MP4"
                                      },
                                      "file_size": {
                                        "type": "number",
                                        "description": "The recording file's size, in bytes.",
                                        "example": 900452
                                      },
                                      "download_url": {
                                        "type": "string",
                                        "description": "The URL to download the recording. \n \nTo download, set your [Video SDK API JWT](https://developers.zoom.us/docs/video-sdk/api-request/) as a Bearer token in the Authorization header of your HTTP request. For example: \n\n `curl \"{download_url}\" --header \"authorization: Bearer {JWT}\" --header \"content-type: application/json\"`.\n\nNote: The `download_url` may be a redirect. In that case, use `curl --location \"{download_url}\"` to follow redirects or use another tool, like Postman.",
                                        "example": "https://download.example.com/download_url"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The recording file's status.",
                                        "example": "completed",
                                        "enum": [
                                          "completed"
                                        ]
                                      },
                                      "user_id": {
                                        "type": "string",
                                        "description": "The participant's session user ID. This value is assigned to a participant upon joining a session and is only valid for the duration of the session.",
                                        "example": "abcd1234"
                                      },
                                      "user_key": {
                                        "type": "string",
                                        "description": "The participant's SDK identifier. Set with the `user_identity` key in the Video SDK JWT payload. This value can be alphanumeric, up to a maximum length of 36 characters.",
                                        "example": "efgh5678"
                                      }
                                    },
                                    "description": "The recording file object."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "title": "List recording files for each participant.",
                      "type": "object",
                      "description": "Return a list of recording files about individual video for each participant.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_files": {
                              "title": "The list of recording files for each participant.",
                              "maxItems": 300,
                              "type": "array",
                              "description": "A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The recording file's unique ID. This is included in the general query response.",
                                        "example": "24698bd1-589e-4c33-9ba3-bc788b2a0ac2"
                                      },
                                      "recording_start": {
                                        "type": "string",
                                        "description": "The recording file's start time.",
                                        "format": "date-time",
                                        "example": "2021-12-07T05:42:13Z"
                                      },
                                      "recording_end": {
                                        "type": "string",
                                        "description": "The recording file's end time. This is included in the general query response.",
                                        "format": "date-time",
                                        "example": "2021-12-07T05:42:28Z"
                                      },
                                      "file_name": {
                                        "type": "string",
                                        "description": "The recording file's name.",
                                        "example": "recording_name"
                                      },
                                      "file_type": {
                                        "type": "string",
                                        "description": "The recording file's format. One of the following: \n\n* `MP4` - Video file.\n* `M4A` - Audio-only file.\n* `TIMELINE` - Timestamp file of the recording, in JSON file format. To get a timeline file, you must enable the 'Add a timestamp to the recording' setting in the recording settings. See [Enable cloud recording](https://developers.zoom.us/docs/video-sdk/account/#enable-cloud-recording) for details. The time will display in the host's timezone.\n* `TRANSCRIPT` - A transcript of the recording, in VTT format.\n* `CHAT` - A text file containing chat messages sent during the session.\n * `CC` - A file containing the closed captions of the recording, in VTT file format.\n* `CSV` - A file containing polling data, in CSV format.\n\n A recording file object with the file type `CC` or `TIMELINE` **does not** have the `id`, `status`, `file_size`, or `recording_type` properties.",
                                        "example": "MP4"
                                      },
                                      "file_extension": {
                                        "type": "string",
                                        "description": "The archived file's file extension.",
                                        "example": "MP4"
                                      },
                                      "file_size": {
                                        "type": "number",
                                        "description": "The recording file's size, in bytes.",
                                        "example": 900452
                                      },
                                      "download_url": {
                                        "type": "string",
                                        "description": "The URL to download the recording. \n \nTo download, set your [Video SDK API JWT](https://developers.zoom.us/docs/video-sdk/api-request/) as a Bearer token in the Authorization header of your HTTP request. For example: \n\n `curl \"{download_url}\" --header \"authorization: Bearer {JWT}\" --header \"content-type: application/json\"`.\n\nNote: The `download_url` may be a redirect. In that case, use `curl --location \"{download_url}\"` to follow redirects or use another tool, like Postman.",
                                        "example": "https://download.example.com/download_url"
                                      },
                                      "recording_type": {
                                        "type": "string",
                                        "description": "The type of recording file: \n* `individual_user` \n* `individual_shared_screen`.",
                                        "example": "individual_shared_screen",
                                        "enum": [
                                          "individual_user",
                                          "individual_shared_screen"
                                        ]
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The recording file's status.",
                                        "example": "completed",
                                        "enum": [
                                          "completed"
                                        ]
                                      },
                                      "user_id": {
                                        "type": "string",
                                        "description": "The participant's session user ID. This value is assigned to a participant upon joining a session and is only valid for the duration of the session.",
                                        "example": "abcd1234"
                                      },
                                      "user_key": {
                                        "type": "string",
                                        "description": "The participant's SDK identifier. Set with the `user_identity` key in the Video SDK JWT payload. This value can be alphanumeric, up to a maximum length of 36 characters.",
                                        "example": "efgh5678"
                                      }
                                    },
                                    "description": "The recording file object."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User not found on this account: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3301` <br>\n There is no recording for this session. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "delete": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Delete session's recordings",
        "description": "Delete all recording files of a session.  \n\n **Prerequisites**:\n * Cloud Recording should be enabled on the user's account.  \n\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingDelete",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "The recording delete actions:  \n`trash` - Move recording to trash.  \n `delete` - Delete recording permanently.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "trash",
                "delete"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The recording was successfully deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3301` <br>\n There is no recording for this session. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/recordings/status": {
      "put": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Recover session's recordings",
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date.\n \n **Prerequisites**:  \n \n* Video SDK account with Cloud Recording enabled.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "recordingStatusUpdate",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "example": "recover",
                    "enum": [
                      "recover"
                    ],
                    "x-enum-descriptions": [
                      "recover session recording"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Error Code:** `200`  \n \nYou do not have the right permissions."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nDeleted recordings of the session recovered."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: {userId}.<br>\n\n**Error Code:** `3301` <br>\nThere is no recording for this session.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {}
      }
    },
    "/videosdk/sessions/{sessionId}/recordings/{recordingId}": {
      "delete": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Delete session's recording file",
        "description": "Delete a specific recording file from a session. **Note:** To use this API, you must enable the **The host can delete cloud recordings** setting.\n\n\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingDeleteOne",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "46cf7349-0b72-4ade-a8a2-a51dae38a69a"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "trash",
              "default": "trash",
              "enum": [
                "trash",
                "delete"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The recording file was successfully deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}.<br> <br>\n**Error Code:** `3303` <br>\n You can not delete an uncompleted session. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3301` <br>\n There is no recording for this session. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/recordings/{recordingId}/status": {
      "put": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Recover a single recording",
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover a single recording file from the session.  \n \n \n \n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "recordingStatusUpdateOne",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "46cf7349-0b72-4ade-a8a2-a51dae38a69a"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "example": "recover",
                    "enum": [
                      "recover"
                    ],
                    "x-enum-descriptions": [
                      "recover session recording"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n  Session recording recovered.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3301` <br>\nThere is no recording for this session.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {}
      }
    },
    "/videosdk/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List sessions",
        "description": "List the total live or past sessions that occurred during a specified period of time. You can specify a monthly date range for this data using the `from` and `to` query parameters. The month should fall within the last six months. The report only includes one month's worth of data.\n\nThe response displays whether features such as audio, video, screen sharing, and recording were used during the session.\n\n**Prerequisites:** \n* A Video SDK account\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `RESOURCE-INTENSIVE`",
        "operationId": "sessions",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The type of session to query:\n* `past` - A past session that occurred during the specified date range.\n* `live` - A live sessions.\n \nThis parameter defaults to `live`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "past",
              "default": "live",
              "enum": [
                "past",
                "live"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-02"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 10,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
            }
          },
          {
            "name": "session_key",
            "in": "query",
            "description": "A value that identifies the session. See [Video SDK Authorization session payload](https://developers.zoom.us/docs/video-sdk/auth/#payload) for details.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "my_session_key"
            }
          },
          {
            "name": "session_name",
            "in": "query",
            "description": "The session's name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "My session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n Sessions returned.  \n Only available for paid accounts that have dashboard feature enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Session Metrics List Object",
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "The report's start date, in 'yyyy-mm-dd' format.",
                      "format": "date",
                      "example": "2021-12-01"
                    },
                    "to": {
                      "type": "string",
                      "description": "The report's end date, in 'yyyy-mm-dd' format.",
                      "format": "date",
                      "example": "2021-12-02"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2"
                    },
                    "sessions": {
                      "type": "array",
                      "description": "Information about the session.",
                      "items": {
                        "title": "List Session Metrics Object",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The session's ID. If the ID begins with a `+`, `/`, or contains `//` characters, you must **double-encode** this value.",
                            "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                          },
                          "session_name": {
                            "type": "string",
                            "description": "The session's name.",
                            "example": "My session"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The session's start time.",
                            "format": "date-time",
                            "example": "2019-08-20T19:09:01Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The session's end time.",
                            "format": "date-time",
                            "example": "2019-08-20T19:19:01Z"
                          },
                          "duration": {
                            "type": "string",
                            "description": "The session's duration, in 'hh:mm:ss' format.",
                            "example": "30:00"
                          },
                          "user_count": {
                            "type": "integer",
                            "description": "The session's user count.",
                            "example": 2
                          },
                          "has_voip": {
                            "type": "boolean",
                            "description": "Whether VoIP was used in the session.",
                            "example": true
                          },
                          "has_video": {
                            "type": "boolean",
                            "description": "Whether video was used in the session.",
                            "example": true
                          },
                          "has_screen_share": {
                            "type": "boolean",
                            "description": "Whether the screen share feature was used in the session.",
                            "example": true
                          },
                          "has_recording": {
                            "type": "boolean",
                            "description": "Whether the recording feature was used in the session.",
                            "example": true
                          },
                          "has_pstn": {
                            "type": "boolean",
                            "description": "Whether the PSTN feature was used in the session.",
                            "example": true
                          },
                          "session_key": {
                            "type": "string",
                            "description": "The Video SDK custom session ID.",
                            "example": "my_session_key"
                          },
                          "has_session_summary": {
                            "type": "boolean",
                            "description": "Whether the session summary was used in the session.",
                            "example": true
                          },
                          "audio_quality": {
                            "type": "string",
                            "description": "* `good` - The audio is almost flawless and the quality is excellent. \r\n* `fair` - The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Users can communicate normally. \r\n* `poor` - The audio often has distortion, noise, and other problems, but the content is basically continuous. Users can communicate normally. \r\n* `bad` - The sound quality is extremely poor and the audio content is almost inaudible.",
                            "example": "good",
                            "enum": [
                              "good",
                              "fair",
                              "poor",
                              "bad"
                            ]
                          },
                          "video_quality": {
                            "type": "string",
                            "description": "* `good` - The video is almost flawless and the quality is excellent. \r\n* `fair` - The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \r\n* `poor` - The video definition is not high, but not many problems exist. The video quality is mediocre. \r\n* `bad` - The picture is very blurred and often gets stuck.",
                            "example": "good",
                            "enum": [
                              "good",
                              "fair",
                              "poor",
                              "bad"
                            ]
                          },
                          "screen_share_quality": {
                            "type": "string",
                            "description": "* `good` - The video is almost flawless and the quality is excellent. \r\n* `fair` - The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \r\n* `poor` - The video definition is not high, but not many problems exist. The video quality is mediocre. \r\n* `bad` - The picture is very blurred and often gets stuck.",
                            "example": "good",
                            "enum": [
                              "good",
                              "fair",
                              "poor",
                              "bad"
                            ]
                          }
                        },
                        "description": "The session's metrics information."
                      }
                    }
                  },
                  "description": "List of session metric information."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Create a session",
        "description": "Create a Video SDK session. \n\n This API is designed to get the PSTN or SIP dial in information before starting a session with the session name specified in this API. The Create a session API is not required for creating or starting a Video SDK session. \n\n Zoom creates and starts Video SDK sessions on demand when the first user joins, see the Video SDK Session documentation for your platform for details. \n\n Video SDK sessions only show up in the dashboard or REST API reports when they are live or completed. \n\n **Prerequisites:** \n* A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Createasession",
        "requestBody": {
          "description": "Session object",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "session_name"
                ],
                "type": "object",
                "properties": {
                  "session_name": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "The session's name.",
                    "example": "My session"
                  },
                  "session_password": {
                    "type": "string",
                    "description": "Developer provided session alphanumeric password. It is equivalent to the sessionPassword in the Video SDK interface.",
                    "example": "123456"
                  },
                  "settings": {
                    "type": "object",
                    "properties": {
                      "auto_recording": {
                        "type": "string",
                        "description": "The automatic recording settings. \n* `cloud` - Record the session to the cloud. \n* `none` - Auto-recording disabled.",
                        "example": "cloud",
                        "default": "none",
                        "enum": [
                          "cloud",
                          "none"
                        ]
                      }
                    },
                    "description": "Information about the session's settings."
                  }
                },
                "description": "Session object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` Session created.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "session_name"
                  ],
                  "type": "object",
                  "properties": {
                    "session_id": {
                      "type": "string",
                      "description": "The session's ID. If the ID begins with a `+`, `/`, or contains `//` characters, you must **double-encode** this value.",
                      "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                    },
                    "session_number": {
                      "type": "integer",
                      "description": "The session's number. Unique identifier of the session in **long** format, represented as an int64 data type in JSON.",
                      "format": "int64",
                      "example": 97763643886
                    },
                    "session_name": {
                      "maxLength": 200,
                      "type": "string",
                      "description": "The session's name.",
                      "example": "My session"
                    },
                    "session_password": {
                      "type": "string",
                      "description": "Developer provided session alphanumeric password. It is equivalent to the sessionPassword in the Video SDK interface.",
                      "example": "123456"
                    },
                    "passcode": {
                      "type": "string",
                      "description": "Zoom generated numeric code to use when joining the session by phone (PSTN), or from a room (H323/SIP device).",
                      "example": "123456"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The date and time when this session was created.",
                      "format": "date-time",
                      "example": "2022-03-25T07:29:29Z"
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "auto_recording": {
                          "type": "string",
                          "description": "The automatic recording settings. \n* `cloud` - Record the session to the cloud. \n* `none` - Auto-recording disabled.",
                          "example": "cloud",
                          "default": "none",
                          "enum": [
                            "cloud",
                            "none"
                          ]
                        },
                        "global_dial_in_countries": {
                          "type": "array",
                          "description": "A list of available global dial-in countries.",
                          "items": {
                            "type": "string",
                            "example": "US"
                          }
                        },
                        "global_dial_in_numbers": {
                          "type": "array",
                          "description": "Global dial-in countries or regions.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "string",
                                "description": "The country code.",
                                "example": "US"
                              },
                              "country_name": {
                                "type": "string",
                                "description": "Full name of country.",
                                "example": "US"
                              },
                              "number": {
                                "type": "string",
                                "description": "The phone number, such as +1 2332357613.",
                                "example": "+1 1000200200"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of number.",
                                "example": "toll",
                                "enum": [
                                  "toll",
                                  "tollfree",
                                  "premium"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "description": "Information about the session's settings."
                    }
                  },
                  "description": "Session object."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Session name already exists. Try a different session name. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get session details",
        "description": "Get information about scheduled, live, or past sessions. \n\n The overview response displays whether features such as audio, video, screen sharing, and recording were used during the session.\n\n**Prerequisites:** \n* A Video SDK account\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "sessionDetail",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The session types: \n* `past` - A past session. \n* `live` - A live session. \n* `scheduled` - A scheduled session.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "past",
              "default": "live",
              "enum": [
                "past",
                "live",
                "scheduled"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` Session returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The session's ID. If the ID begins with a `+`, `/` or contains `//` characters, you must **double-encode** this value.",
                      "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                    },
                    "session_number": {
                      "type": "integer",
                      "description": "The session's number. Unique identifier of the session in **long** format, represented as an int64 data type in JSON.",
                      "format": "int64",
                      "example": 97763643886
                    },
                    "session_name": {
                      "type": "string",
                      "description": "The session's name.",
                      "example": "My session"
                    },
                    "passcode": {
                      "minimum": 8,
                      "type": "string",
                      "description": "The session's passcode.",
                      "example": "123456"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The session's start time.",
                      "format": "date-time",
                      "example": "2019-08-20T19:09:01Z"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "The session's end time.",
                      "format": "date-time",
                      "example": "2019-08-20T19:19:01Z"
                    },
                    "duration": {
                      "type": "string",
                      "description": "The session's duration, in `hh:mm:ss` format.",
                      "example": "30:00"
                    },
                    "user_count": {
                      "type": "integer",
                      "description": "The session's user count.",
                      "example": 2
                    },
                    "has_voip": {
                      "type": "boolean",
                      "description": "Whether VoIP was used in the session.",
                      "example": true
                    },
                    "has_video": {
                      "type": "boolean",
                      "description": "Whether video was used in the session.",
                      "example": true
                    },
                    "has_screen_share": {
                      "type": "boolean",
                      "description": "Whether the screen share feature was used in the session.",
                      "example": true
                    },
                    "has_recording": {
                      "type": "boolean",
                      "description": "Whether the recording feature was used in the session.",
                      "example": true
                    },
                    "has_pstn": {
                      "type": "boolean",
                      "description": "Whether the PSTN feature was used in the session.",
                      "example": true
                    },
                    "session_key": {
                      "type": "string",
                      "description": "The Video SDK custom session ID.",
                      "example": "my_session_key"
                    },
                    "has_session_summary": {
                      "type": "boolean",
                      "description": "Whether the session summary was used in the session.",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The date and time when this session was created.",
                      "format": "date-time",
                      "example": "2022-03-25T07:29:29Z"
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "auto_recording": {
                          "type": "string",
                          "description": "The automatic recording settings. \n* `cloud` - Record the session to the cloud. \n* `none` - Auto-recording disabled.",
                          "example": "cloud",
                          "default": "none",
                          "enum": [
                            "cloud",
                            "none"
                          ]
                        },
                        "global_dial_in_countries": {
                          "type": "array",
                          "description": "A list of available global dial-in countries.",
                          "items": {
                            "type": "string",
                            "example": "US"
                          }
                        },
                        "global_dial_in_numbers": {
                          "type": "array",
                          "description": "Global dial-in countries or regions.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "string",
                                "description": "The country code.",
                                "example": "US"
                              },
                              "country_name": {
                                "type": "string",
                                "description": "Full name of country.",
                                "example": "US"
                              },
                              "number": {
                                "type": "string",
                                "description": "The phone number, such as +1 2332357613.",
                                "example": "+1 1000200200"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of number.",
                                "example": "toll",
                                "enum": [
                                  "toll",
                                  "tollfree",
                                  "premium"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "description": "Information about the session's settings. Only returns if type=scheduled."
                    },
                    "audio_quality": {
                      "type": "string",
                      "description": "* `good` - The audio is almost flawless and the quality is excellent. \r\n* `fair` - The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Users can communicate normally. \r\n* `poor` - The audio often has distortion, noise, and other problems, but the content is basically continuous. Users can communicate normally. \r\n* `bad` - The sound quality is extremely poor and the audio content is almost inaudible.",
                      "example": "good",
                      "enum": [
                        "good",
                        "fair",
                        "poor",
                        "bad"
                      ]
                    },
                    "video_quality": {
                      "type": "string",
                      "description": "* `good` - The video is almost flawless and the quality is excellent. \r\n* `fair` - The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \r\n* `poor` - The video definition is not high, but not many problems exist. The video quality is mediocre. \r\n* `bad` - The picture is very blurred and often gets stuck.",
                      "example": "good",
                      "enum": [
                        "good",
                        "fair",
                        "poor",
                        "bad"
                      ]
                    },
                    "screen_share_quality": {
                      "type": "string",
                      "description": "* `good` - The video is almost flawless and the quality is excellent. \r\n* `fair` - The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \r\n* `poor` - The video definition is not high, but not many problems exist. The video quality is mediocre. \r\n* `bad` - The picture is very blurred and often gets stuck.",
                      "example": "good",
                      "enum": [
                        "good",
                        "fair",
                        "poor",
                        "bad"
                      ]
                    }
                  },
                  "description": "Session information."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Session does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Delete a session",
        "description": "Delete a session.\n\n**Prerequisites:** \n* A Video SDK account.\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "sessionDelete",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `+`, `/`, or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204` Session deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n You cannot delete sessions that have started. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Session does not exist: {sessionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/events": {
      "patch": {
        "tags": [
          "Sessions"
        ],
        "summary": "Use in-session events controls",
        "description": "Control in-session events such as the **recording controls** to start a recording, stop a recording, pause a recording, and resume a recording, and **invitation control** to invite users. The recording controls only work for cloud recordings and not for local recordings.\n\n\n**Prerequisite:**\n * The session must be a live session.\n* Cloud recording must be enabled for recording controls.\n* The user using this API must either be the host or manager of the session.\n* You must have a Conference Room Connector add-on plan to invite users to the session using a room system callout.\n\n \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "inSessionEventsControl",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "description": "The method that you would like to control. The value of this field can be one of the following. \n* `recording.start` - Start the recording. \n* `recording.stop` - Stop the recording. \n* `recording.pause` - Pause the recording. \n* `recording.resume` - Resume the recording that was previously paused. \n* `user.invite.callout` - Invite a user to the session through call out (phone). Requires that you purchase and set up the Audio Conferencing plan. See [Video SDK account settings](/docs/video-sdk/account/#customize-audio-conferencing) for details. \n* `user.invite.room_system_callout` - Invite a user to the session through call out (room system). This works like [Inviting others to join a Zoom Rooms meeting](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065721) in Zoom Meeting. See the link for details.\n\nUse these values for Real-Time Messaging Protocol (RTMP) ingestion for a live session (you must also add a `stream_ingestion_stream_id` to the request).\n * `stream_ingestion.bind` - Bind a stream key to a session.\n * `stream_ingestion.unbind` - Unbind a stream key to a session. You can bind the unbound stream key to another live session.\n * `stream_ingestion.send` - Send ingested stream data into a session.\n * `stream_ingestion.stop` - Stop sending ingested stream data into a session. \n\n Contact [Developer Support](https://developers.zoom.us/support/) to enable the following moderation features.\n* `audio.block` - Mute the user's audio and disallow self-unmute. \n* `audio.unblock` - Allow users to unmute themselves. \n* `video.block` - Stop the user's video and disallow self-starting. \n* `video.unblock` - Allow users to start the video themselves. \n* `share.block` - Stop the user's share and disallow self-starting. \n* `share.unblock` - Allow users to start sharing themselves. \n* `user.remove` - Remove a user from a session.",
                    "example": "recording.start",
                    "enum": [
                      "recording.start",
                      "recording.stop",
                      "recording.pause",
                      "recording.resume",
                      "user.invite.callout",
                      "user.invite.room_system_callout",
                      "stream_ingestion.bind",
                      "stream_ingestion.unbind",
                      "stream_ingestion.send",
                      "stream_ingestion.stop",
                      "audio.block",
                      "audio.unblock",
                      "video.block",
                      "video.unblock",
                      "share.block",
                      "share.unblock",
                      "user.remove"
                    ]
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "invitee_name": {
                        "type": "string",
                        "description": "The user's name to display in the session. Use this field if you pass the `user.invite.callout` value for the `method` field.",
                        "example": "Jill Chill"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "The user's phone number. Use this field if you pass the `user.invite.callout` value for the `method` field. As a best practice, ensure this includes a country code and area code.\r\n\r\nIf you are dialing a phone number that includes an extension, type a hyphen '-' after the phone number and enter the extension. For example, 6032331333-156 dials the extension 156.",
                        "example": "15555550100"
                      },
                      "invite_options": {
                        "type": "object",
                        "properties": {
                          "require_greeting": {
                            "type": "boolean",
                            "description": "Whether to require a greeting before being connected. Use this field if you pass the `user.invite.callout` value for the `method` field.",
                            "example": true,
                            "default": true
                          },
                          "require_pressing_one": {
                            "type": "boolean",
                            "description": "Whether to require pressing 1 before being connected. Use this field if you pass the `user.invite.callout` value for the `method` field.",
                            "example": true,
                            "default": true
                          }
                        },
                        "description": "Information about the `user.invite.callout` settings."
                      },
                      "call_type": {
                        "type": "string",
                        "description": "The type of call out. Use a value of `h323` or `sip`. Use this field if you pass the `user.invite.room_system_callout` value for the `method` field.",
                        "example": "h323"
                      },
                      "device_ip": {
                        "type": "string",
                        "description": "The user's device IP address. Use this field if you pass the `user.invite.room_system_callout` value for the `method` field.",
                        "example": "10.100.111.237"
                      },
                      "h323_headers": {
                        "type": "object",
                        "properties": {
                          "from_display_name": {
                            "maxLength": 64,
                            "type": "string",
                            "description": "Custom name that will be used within the `h323` header.",
                            "example": "display name"
                          },
                          "to_display_name": {
                            "maxLength": 64,
                            "type": "string",
                            "description": "Custom remote name that will be used within the session.",
                            "example": "display name"
                          }
                        },
                        "description": "Enable customers to leverage services that require customization of the FROM header to identify the caller. Use this field if you pass the `user.invite.room_system_callout` value for the `method` field and the `h323` value for the `call_type` field."
                      },
                      "sip_headers": {
                        "type": "object",
                        "properties": {
                          "from_display_name": {
                            "maxLength": 64,
                            "type": "string",
                            "description": "Custom name that will be used within the SIP Header.",
                            "example": "display name"
                          },
                          "to_display_name": {
                            "maxLength": 64,
                            "type": "string",
                            "description": "Custom remote name that will be used within the session.",
                            "example": "display name"
                          },
                          "from_uri": {
                            "maxLength": 256,
                            "type": "string",
                            "description": "Custom URI that will be used within the SIP Header. The URI must be start with 'sip:' or 'sips:' as a valid URI based on parameters defined by the platform",
                            "example": "sip:username@domain.company.org"
                          },
                          "additional_headers": {
                            "maximum": 10,
                            "type": "array",
                            "description": "Ability to add 1..10 custom headers, each of which has a maximum length of 256 bytes to comply with SIP standards.  Custom headers would leverage header names starting with &quot;X-&quot; per SIP guidelines.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "maxLength": 32,
                                  "type": "string",
                                  "description": "Additional custom SIP header's key",
                                  "example": "X-Header1"
                                },
                                "value": {
                                  "maxLength": 256,
                                  "type": "string",
                                  "description": "Additional custom SIP header's value",
                                  "example": "X-body1"
                                }
                              }
                            }
                          }
                        },
                        "description": "Enable customers to leverage services that require customization of the FROM header to identify the caller. Use this field if you pass the `user.invite.room_system_callout` value for the `method` field and the `sip` value for the `call_type` field."
                      },
                      "participant_uuid": {
                        "type": "string",
                        "description": "The user's UUID. This value is assigned to a user upon joining a session and is only valid for the session's duration. Use this field if you pass the `audio.block`, `audio.unblock`, `video.block`, `video.unblock`, `share.block`, `share.unblock`, or `user.remove` value for the `method` field.",
                        "example": "D444CD06-2ABB-2FCC-019B-39E41D8DADF7"
                      },
                      "stream_ingestion_stream_id": {
                        "type": "string",
                        "description": "The stream ingestion ID. Use this field if you pass the `stream_ingestion.bind`, `stream_ingestion.unbind`, `stream_ingestion.send`, or `stream_ingestion.stop` value for the `method` field.",
                        "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                      }
                    },
                    "description": "The in-session parameters."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "**HTTP Status Code**: `202` Request processed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n No permission. <br>\n**Error Code:** `300` <br>\n This API is not available for this account, please contact Zoom support. <br>\n**Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `34005` <br>\n This stream key is already bound to an existing session. Please use a different stream key. <br>\n**Error Code:** `34007` <br>\n Failed to bind a stream key to the session. <br>\n**Error Code:** `34008` <br>\n Failed to unbind a stream key to the session. <br>\n**Error Code:** `34009` <br>\n Failed to send ingested stream data into the session. <br>\n**Error Code:** `34010` <br>\n Failed to stop sending ingested stream data into the session. <br>\n**Error Code:** `34000` <br>\n Stream ingestion does not exist: {streamId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Session is not found or has expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/livestream": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get session live stream details",
        "description": "Use this API to return a session's live stream configuration details, such as the stream's URL, key, and page URL.\n\n**Prerequisites:** \n* A Video SDK account\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getLiveStreamDetails",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n Live Stream details returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stream_url": {
                      "type": "string",
                      "description": "The live stream's URL.",
                      "format": "url",
                      "example": "https://example.com/livestream"
                    },
                    "stream_key": {
                      "type": "string",
                      "description": "The live stream key.",
                      "example": "ABCDEFG12345HIJ6789"
                    },
                    "page_url": {
                      "type": "string",
                      "description": "The live stream's page URL. This is the URL at which anyone can view the session's live stream.",
                      "format": "url",
                      "example": "https://example.com/livestream/123"
                    },
                    "resolution": {
                      "type": "string",
                      "description": "The number of pixels in each dimension that the video camera can display.",
                      "example": "720p"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis API is only available for Video SDK accounts.<br>\n \n**Error Code:** `300` <br>\nSession ID does not exist.<br>\n\n**Error Code:** `300` <br>\nInvalid session ID.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nSession does not exist: {sessionId}.<br>\n\n**Error Code:** `1001` <br>\nUser does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {}
      },
      "patch": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update a session live stream",
        "description": "Use this API to update a session's live stream information.\n\n **Prerequisites:** \n* A Video SDK account\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "sessionLiveStreamUpdate",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "requestBody": {
          "description": "Information about the updated live stream.",
          "content": {
            "application/json": {
              "schema": {
                "title": "Session Live Stream Object",
                "required": [
                  "page_url",
                  "stream_key",
                  "stream_url"
                ],
                "type": "object",
                "properties": {
                  "stream_url": {
                    "maxLength": 1024,
                    "type": "string",
                    "description": "The live stream's URL.",
                    "format": "url",
                    "example": "https://example.com/livestream"
                  },
                  "stream_key": {
                    "maxLength": 512,
                    "type": "string",
                    "description": "The live stream key.",
                    "example": "ABCDEFG12345HIJ6789"
                  },
                  "page_url": {
                    "maxLength": 1024,
                    "type": "string",
                    "description": "The live stream's page URL. This is the URL at which anyone can view the session's live stream.",
                    "format": "url",
                    "example": "https://example.com/livestream/123"
                  },
                  "resolution": {
                    "type": "string",
                    "description": "The number of pixels in each dimension that the video camera can display, required when a user enables 1080p. Use a value of `720p` or `1080p`",
                    "example": "720p"
                  }
                },
                "description": "Information about the session live stream."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n Session live stream updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis API is only available for Video SDK accounts.<br>\n \n**Error Code:** `300` <br>\nSession ID does not exist.<br>\n\n**Error Code:** `300` <br>\nInvalid session ID.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nSession does not exist: {sessionId}.<br>\n\n**Error Code:** `1001` <br>\nUser does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {}
      }
    },
    "/videosdk/sessions/{sessionId}/livestream/status": {
      "patch": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update session livestream status",
        "description": "Update a session's livestream status.\n\n**Prerequisites:**\n * A Video SDK account\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "sessionLiveStreamStatusUpdate",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "requestBody": {
          "description": "Information about the updated livestream.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The session's livestream status:\n* `start` - Start a livestream.\n* `stop` - Stop an ongoing livestream.\n* `mode` - Control a livestream view at runtime.",
                    "example": "start",
                    "enum": [
                      "start",
                      "stop",
                      "mode"
                    ]
                  },
                  "settings": {
                    "type": "object",
                    "properties": {
                      "active_speaker_name": {
                        "type": "boolean",
                        "description": "Whether to display the name of the active speaker during a session's livestream. Use this field if you pass the `start` value for the `action` field.",
                        "example": true
                      },
                      "display_name": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "The display name of the session's livestream. Use this field if you pass the `start` value for the `action` field.",
                        "example": "Jill Chill"
                      },
                      "layout": {
                        "type": "string",
                        "description": "The layout of the session's livestream. Use this field if you pass the `start` or `mode` value for the `action` field.\r\n* `gallery_view` - Gallery view.\r\n* `speaker_view` - Speaker view.",
                        "example": "speaker_view",
                        "default": "speaker_view",
                        "enum": [
                          "gallery_view",
                          "speaker_view"
                        ]
                      },
                      "close_caption": {
                        "type": "string",
                        "description": "The closed caption type of the session's livestream. Use this field if you pass the `start` or `mode` value for the `action` field.\r\n* `burnt-in` - Burnt-In Captions.\r \n* `embedded` - Embedded Captions.\r\n* `off` - Turn off Captions.",
                        "example": "burnt-in",
                        "default": "burnt-in",
                        "enum": [
                          "burnt-in",
                          "embedded",
                          "off"
                        ]
                      }
                    },
                    "description": "The session's livestreaming settings."
                  }
                },
                "description": "The session's livestream status."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br> Session livestream updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `300` <br>\n Invalid session ID. <br>\n**Error Code:** `4927` <br>\n Session {sessionId} has not started. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Session does not exist: {sessionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/sip_dialing": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get a session SIP URI with passcode",
        "description": "Get a live video SDK session's SIP URI. The URI consists of the Video session ID, and may include the user-supplied passcode and participant identifier code. The API return data also includes additional fields to indicate whether the API caller has a valid Cloud Room Connector subscription, the participant identifier code from the URI, and the SIP URI validity period in seconds.\n\n**Prerequisites**:\n* The SIP URI is valid for 2 hours, or 7200 seconds, by default. After this period, the URI will expire and the API must be called again to retrieve a new one.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetASessionSIPURIWithPasscode",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/`, or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "passcode": {
                    "type": "string",
                    "description": "If customers desire that a passcode be embedded in the SIP URI dial string, they must supply the passcode. Zoom will not validate the passcode.",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` Session's encoded SIP URI returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sip_dialing": {
                      "type": "string",
                      "description": "The session's encoded SIP URI.",
                      "example": "9678722567.xxxx....30qonrvgy@zoomcrc.com"
                    },
                    "participant_identifier_code": {
                      "type": "string",
                      "description": "This value identifies the session participant, which is automatically embedded in the SIP URI.",
                      "example": "30qonrvgy"
                    },
                    "expire_in": {
                      "type": "integer",
                      "description": "The number of seconds the encoded SIP URI is valid before it expires.",
                      "format": "int64",
                      "example": 7200
                    }
                  },
                  "description": "Information about the session's encoded SIP URI."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2307` <br>\n Failed to generate SIP URI. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `2311` <br>\n No Permission, does not have Conference Room Connector plan. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Session does not exist: {sessionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/status": {
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update session status",
        "description": "Use this API to update a session's status.\n\n**Prerequisites:** \n* A Video SDK account\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "sessionStatus",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "requestBody": {
          "description": "Information about the updated session.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The session's type: \n* `end` &mdash; End the session.",
                    "example": "end",
                    "enum": [
                      "end"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n Session updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis API is only available for Video SDK accounts.<br>\n \n**Error Code:** `300` <br>\nSession ID does not exist.<br>\n\n**Error Code:** `300` <br>\nInvalid session ID.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nSession does not exist: {sessionId}.<br>\n\n**Error Code:** `1001` <br>\nUser does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {}
      }
    },
    "/videosdk/sessions/{sessionId}/stream_ingestions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List session streaming ingestions",
        "description": "List all streaming ingestions of a live session.\n\n**Prerequisites:**\n * A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Listsessionstreamingingestions",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` Session streaming ingestions returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stream_id": {
                        "type": "string",
                        "description": "The stream ingestion ID.",
                        "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                      },
                      "rtmp_connection_status": {
                        "type": "integer",
                        "description": "The RTMP connection status.\r\n* `0` - Third-party live streaming software disconnected.\r\n* `1` - Third-party live streaming software connected.",
                        "example": 0,
                        "enum": [
                          0,
                          1
                        ]
                      },
                      "rtmp_stream_push_status": {
                        "type": "integer",
                        "description": "The RTMP stream push status.\r\n* `0` - The stream is not pushed to the live session.\r\n* `1` - The stream has been pushed to the live session.",
                        "example": 0,
                        "enum": [
                          0,
                          1
                        ]
                      }
                    },
                    "description": "Information about session streaming ingestion."
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `300` <br>\n Invalid session ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Session does not exist: {sessionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/users": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List session users",
        "description": "Use this API to return a list of users from live or past sessions. You can specify a monthly date range for this data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n* If you do **not** provide the `type` query parameter, the API defaults to the `live` value and the API will only return metrics for users in a live session, if a session is currently in progress.\n* To view metrics on past session users, provide the `past` value for the `type` query parameter.\n\n**Prerequisites:** \n* A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "sessionUsers",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The session types: \n* `past` - A past session. \n* `live` - A live session.\n\nThis value defaults to `live`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "past",
              "default": "live",
              "enum": [
                "past",
                "live"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 10,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n Session users returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2"
                    },
                    "users": {
                      "type": "array",
                      "description": "Information about session users.\n\n**Note:** \n * If a user left a session and rejoined the same session, their information will appear multiple times (for each time the user joined the session).",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The user's ID. This is a unique ID assigned to the user joining a session and is valid for **only** that session.",
                            "example": "32dsfsd4g5gd"
                          },
                          "name": {
                            "type": "string",
                            "description": "The user's display name.",
                            "example": "exampleuser"
                          },
                          "device": {
                            "type": "string",
                            "description": "The type of device the user used to join the session: \n* `Phone` - The user joined via PSTN. \n* `H.323/SIP` - The user joined via an H.323 or SIP device. \n* `Windows` - The user joined via VoIP using a Windows device. \n * `Mac` - The user joined via VoIP using a Mac device. \n* `iOS` - The user joined via VoIP using an iOS device. \n* `Android` - The user joined via VoIP using an Android device.",
                            "example": "Windows",
                            "enum": [
                              "Phone",
                              "H.323/SIP",
                              "Windows",
                              "Mac",
                              "iOS",
                              "Android"
                            ]
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "The user's IP address.",
                            "example": "127.0.0.1"
                          },
                          "location": {
                            "type": "string",
                            "description": "The user's location.",
                            "example": "New York"
                          },
                          "network_type": {
                            "type": "string",
                            "description": "The user's network type:\n\n* `Wired`\n* `Wifi`\n * `PPP` - Point-to-Point.\n* `Cellular` - 3G, 4G, and 5G cellular.\n* `Others` - Not able to detect network type on web browsers.",
                            "example": "Wifi",
                            "enum": [
                              "Wired",
                              "Wifi",
                              "PPP",
                              "Cellular",
                              "Others"
                            ]
                          },
                          "microphone": {
                            "type": "string",
                            "description": "The type of microphone that the user used during the session.",
                            "example": "Plantronics BT600"
                          },
                          "speaker": {
                            "type": "string",
                            "description": "The type of speaker that the user used during the session.",
                            "example": "Plantronics BT600"
                          },
                          "camera": {
                            "type": "string",
                            "description": "The type of camera that the user used during the session.",
                            "example": "FaceTime HD Camera"
                          },
                          "data_center": {
                            "type": "string",
                            "description": "The data center where user's session data is stored. See [Datacenter abbreviation list](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) for details.",
                            "example": "SC"
                          },
                          "connection_type": {
                            "type": "string",
                            "description": "The user's connection type.",
                            "example": "P2P"
                          },
                          "join_time": {
                            "type": "string",
                            "description": "The time at which user joined the session.",
                            "format": "date-time",
                            "example": "2019-08-20T19:09:01Z"
                          },
                          "leave_time": {
                            "type": "string",
                            "description": "The time at which a user left the session.\n \nFor live sessions, this field is only returned if a user has left the ongoing session.",
                            "format": "date-time",
                            "example": "2019-08-20T19:19:01Z"
                          },
                          "user_key": {
                            "maxLength": 36,
                            "type": "string",
                            "description": "Another identifier for the user. Set with the `user_identity` key in the Video SDK JWT payload. Can be a number or characters. Maximum length of 36 characters. ",
                            "example": "myUserKey"
                          },
                          "audio_call": {
                            "type": "array",
                            "description": "Information about the meeting participant's audio call. Some participants may join the meeting through a phone call or are bound to the audio from a phone call.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "call_number": {
                                  "type": "string",
                                  "description": "The caller's number.",
                                  "example": "4131"
                                },
                                "call_type": {
                                  "type": "string",
                                  "description": "The call type.",
                                  "example": "call-in"
                                },
                                "zoom_number": {
                                  "type": "string",
                                  "description": "The toll-free telephone number.",
                                  "example": "18773690926"
                                }
                              }
                            }
                          },
                          "participant_uuid": {
                            "type": "string",
                            "description": "The participant's UUID. This value is assigned to a participant upon joining a session and is only valid for the session's duration.",
                            "example": "D444CD06-2ABB-2FCC-019B-39E41D8DADF7"
                          },
                          "client": {
                            "type": "string",
                            "description": "Client software or SDK version.",
                            "example": "Web Meeting SDK 2.18"
                          },
                          "os": {
                            "type": "string",
                            "description": "Device operating system",
                            "example": "iOS"
                          },
                          "os_version": {
                            "type": "string",
                            "description": "Device operating system version",
                            "example": "16.5"
                          },
                          "browser_name": {
                            "type": "string",
                            "description": "Web client browser",
                            "example": "Firefox"
                          },
                          "browser_version": {
                            "type": "string",
                            "description": "Web client browser version",
                            "example": "133"
                          },
                          "audio_quality": {
                            "type": "string",
                            "description": "* `good` - The audio is almost flawless and the quality is excellent. \r\n* `fair` - The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Users can communicate normally. \r\n* `poor` - The audio often has distortion, noise, and other problems, but the content is basically continuous. Users can communicate normally. \r\n* `bad` - The sound quality is extremely poor and the audio content is almost inaudible.",
                            "example": "good",
                            "enum": [
                              "good",
                              "fair",
                              "poor",
                              "bad"
                            ]
                          },
                          "video_quality": {
                            "type": "string",
                            "description": "* `good` - The video is almost flawless and the quality is excellent. \r\n* `fair` - The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \r\n* `poor` - The video definition is not high, but not many problems exist. The video quality is mediocre. \r\n* `bad` - The picture is very blurred and often gets stuck.",
                            "example": "good",
                            "enum": [
                              "good",
                              "fair",
                              "poor",
                              "bad"
                            ]
                          },
                          "screen_share_quality": {
                            "type": "string",
                            "description": "* `good` - The video is almost flawless and the quality is excellent. \r\n* `fair` - The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \r\n* `poor` - The video definition is not high, but not many problems exist. The video quality is mediocre. \r\n* `bad` - The picture is very blurred and often gets stuck.",
                            "example": "good",
                            "enum": [
                              "good",
                              "fair",
                              "poor",
                              "bad"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `12702` <br>\n Can not access a session a year ago. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Session ID is invalid or has not ended. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/users/qos": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List session users QoS",
        "description": "Return a list of session users from live or past sessions along with the quality of service (QoS) they received during the session. For example, connection quality for sending and receiving video, audio, and shared content. You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n \n* If you do **not** provide the `type` query parameter, the API defaults to the `live` value and the API will only return metrics for users in a live session, if a session is currently in progress.\n* To view metrics on past session users, provide the `past` value for the `type` query parameter.\n\n **Prerequisites:** \n* A Video SDK Account\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "sessionUsersQOS",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` or character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The session types: \n* `past` - A past session. \n* `live` - A live session.\n\nThis value defaults to `live`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "past",
              "default": "live",
              "enum": [
                "past",
                "live"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items returned per page.",
            "required": false,
            "schema": {
              "maximum": 10,
              "type": "integer",
              "example": 10,
              "default": 1
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n Session users returned.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "User QOS List Object",
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "maximum": 10,
                      "type": "integer",
                      "description": "The number of items per page.",
                      "example": 1,
                      "default": 1
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                      "example": "1cyhUewZa419P9F8QUYURck0U3rFWB0d1H2"
                    },
                    "users": {
                      "type": "array",
                      "description": "Information about the session users.",
                      "items": {
                        "title": "User QoS Object",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "1670000000"
                          },
                          "name": {
                            "type": "string",
                            "description": "The user's display name.",
                            "example": "User"
                          },
                          "device": {
                            "type": "string",
                            "description": "The type of device used to join the session: \n* `Phone` - The user joined with PSTN. \n* `H.323/SIP` - The user joined with an H.323 or SIP device. \n* `Windows` - The user joined with VoIP on a Windows device. \n* `Mac` - The user joined with VoIP on a macOS device. \n* `iOS` - The user joined with VoIP on an iOS device. \n* `Android` - The user joined with VoIP on an Android device.\n* `\"\"` - An external user.",
                            "example": "Android",
                            "enum": [
                              "Phone",
                              "H.323/SIP",
                              "Windows",
                              "Mac",
                              "iOS",
                              "Android"
                            ]
                          },
                          "client": {
                            "type": "string",
                            "description": "Client software or SDK version.",
                            "example": "Web Meeting SDK 2.18"
                          },
                          "os": {
                            "type": "string",
                            "description": "Device operating system.",
                            "example": "iOS"
                          },
                          "os_version": {
                            "type": "string",
                            "description": "Device operating system version.",
                            "example": "16.5"
                          },
                          "browser_name": {
                            "type": "string",
                            "description": "Web client browser.",
                            "example": "Firefox"
                          },
                          "browser_version": {
                            "type": "string",
                            "description": "Web client browser version.",
                            "example": "133"
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "The user's IP address.",
                            "example": "192.0.2.0"
                          },
                          "location": {
                            "type": "string",
                            "description": "The user's location.",
                            "example": "San Jose (US)"
                          },
                          "network_type": {
                            "type": "string",
                            "description": "The user's network type:\n\n* `Wired`\n* `Wifi`\n * `PPP` - Point-to-Point.\n* `Cellular` - 3G, 4G, and 5G cellular.\n* `Others` - An unknown device.",
                            "example": "Wifi",
                            "enum": [
                              "Wired",
                              "Wifi",
                              "PPP",
                              "Cellular",
                              "Others"
                            ]
                          },
                          "microphone": {
                            "type": "string",
                            "description": "The type of microphone used during the session.",
                            "example": "Plantronics BT600"
                          },
                          "speaker": {
                            "type": "string",
                            "description": "The type of speaker used during the session.",
                            "example": "Plantronics BT600"
                          },
                          "camera": {
                            "type": "string",
                            "description": "The type of camera used during the session.",
                            "example": "FaceTime HD Camera"
                          },
                          "data_center": {
                            "type": "string",
                            "description": "The data center where the user's session data is stored. See [Datacenter abbreviation list](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0067446) for details.",
                            "example": "SC"
                          },
                          "connection_type": {
                            "type": "string",
                            "description": "The user's connection type.",
                            "example": "P2P"
                          },
                          "join_time": {
                            "type": "string",
                            "description": "The time at which user joined the session.",
                            "format": "date-time",
                            "example": "2019-08-20T19:09:01Z"
                          },
                          "leave_time": {
                            "type": "string",
                            "description": "The time at which user left the session.",
                            "format": "date-time",
                            "example": "2019-08-20T19:19:01Z"
                          },
                          "user_qos": {
                            "type": "array",
                            "description": "The QoS (quality of service) provided to the user.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date_time": {
                                  "type": "string",
                                  "description": "The QoS date.",
                                  "format": "date-time",
                                  "example": "2019-08-20T19:19:01Z"
                                },
                                "audio_input": {
                                  "title": "Audio QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    }
                                  },
                                  "description": "Information about the session's audio quality of service (QoS)."
                                },
                                "audio_output": {
                                  "title": "Audio QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    }
                                  },
                                  "description": "Information about the session's audio quality of service (QoS)."
                                },
                                "video_input": {
                                  "title": "Video QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's video quality of service (QoS)."
                                },
                                "video_output": {
                                  "title": "Video QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's video quality of service (QoS)."
                                },
                                "as_input": {
                                  "title": "Screen Share QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 Kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's screen share QoS (quality of service)."
                                },
                                "as_output": {
                                  "title": "Screen Share QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 Kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's screen share QoS (quality of service)."
                                },
                                "audio_device_from_rwg": {
                                  "title": "Audio QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    }
                                  },
                                  "description": "Information about the session's audio quality of service (QoS) sent by a participant who joined the meeting via the web client."
                                },
                                "audio_device_to_rwg": {
                                  "title": "Audio QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    }
                                  },
                                  "description": "Information about the session's audio quality of service (QoS) received by a participant who joined the meeting via the web client."
                                },
                                "video_device_from_rwg": {
                                  "title": "Video QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's video quality of service (QoS) sent by a participant who joined the meeting via the web client."
                                },
                                "video_device_to_rwg": {
                                  "title": "Video QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's video quality of service (QoS) received by a participant who joined the meeting via the web client."
                                },
                                "as_device_from_rwg": {
                                  "title": "Screen Share QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 Kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's screen share QoS (quality of service) sent by a participant who joined the meeting via the web client."
                                },
                                "as_device_to_rwg": {
                                  "title": "Screen Share QoS Object",
                                  "type": "object",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                      "example": "23 Kbps"
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                      "example": "126 ms"
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "The variation in the delay of received packets, in milliseconds.",
                                      "example": "6 ms"
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                      "example": "0.3%"
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                      "example": "1.9%"
                                    },
                                    "resolution": {
                                      "type": "string",
                                      "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                      "example": "1280*720"
                                    },
                                    "frame_rate": {
                                      "type": "string",
                                      "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30fps.",
                                      "example": "12 fps"
                                    }
                                  },
                                  "description": "Information about the session's screen share QoS (quality of service) received by a participant who joined the meeting via the web client."
                                },
                                "wifi_rssi": {
                                  "type": "object",
                                  "properties": {
                                    "max_rssi": {
                                      "type": "integer",
                                      "description": "Maximum value of the wireless network's received signal strength indicator (RSSI).",
                                      "example": -75
                                    },
                                    "avg_rssi": {
                                      "type": "integer",
                                      "description": "Average value of the wireless network's received signal strength indicator (RSSI).",
                                      "example": -69
                                    },
                                    "min_rssi": {
                                      "type": "integer",
                                      "description": "Minimum value of the wireless network's received signal strength indicator (RSSI).",
                                      "example": -35
                                    },
                                    "rssi_unit": {
                                      "type": "string",
                                      "description": "Unit of the wireless network's received signal strength indicator (RSSI).",
                                      "example": "dBm"
                                    }
                                  },
                                  "description": "The QoS metrics for the wireless network's RSSI sent by a participant who joined the meeting through a wireless network."
                                },
                                "cpu_usage": {
                                  "type": "object",
                                  "properties": {
                                    "zoom_min_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom's minimum CPU usage.",
                                      "example": "8%"
                                    },
                                    "zoom_avg_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom's average CPU usage.",
                                      "example": "12%"
                                    },
                                    "zoom_max_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom's maximum CPU usage.",
                                      "example": "18%"
                                    },
                                    "system_max_cpu_usage": {
                                      "type": "string",
                                      "description": "The system's maximum CPU usage.",
                                      "example": "40%"
                                    }
                                  },
                                  "description": "Information about CPU usage."
                                }
                              }
                            }
                          }
                        },
                        "description": "Information about the user's quality of service (QoS)."
                      }
                    }
                  },
                  "description": "List of users' QOS information."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `12702` <br>\n Can not access a session a year ago. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n This session's detail info is not available.<br>The Session ID is not valid or the session has not ended yet. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/sessions/{sessionId}/users/sharing": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get sharing/recording details",
        "description": "Retrieve the sharing and recording details of participants from live or past sessions.  \n \n **Prerequisites:**   \n \n* A Video SDK Account.\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "sessionParticipantShare",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The session types: \n* `past` &mdash; A past session. \n* `live` &mdash; A live session.\n\nThis value defaults to `live`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "past",
              "default": "live",
              "enum": [
                "past",
                "live"
              ],
              "x-enum-descriptions": [
                "past session",
                "live session"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 10,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n Session user share returned.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "User Share List Object",
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "maximum": 10,
                      "type": "integer",
                      "description": "The number of items per page.",
                      "example": 1,
                      "default": 1
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                      "example": "1cyhUewZa419P9F8QUYURck0U3rFWB0d1H2"
                    },
                    "users": {
                      "type": "array",
                      "description": "Array of users",
                      "items": {
                        "title": "User Share Object",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The user's ID.",
                            "example": "1670000000"
                          },
                          "name": {
                            "type": "string",
                            "description": "The user's display name.",
                            "example": "User"
                          },
                          "details": {
                            "type": "array",
                            "description": "Array of users",
                            "items": {
                              "title": "User Share Detail Object",
                              "type": "object",
                              "properties": {
                                "content": {
                                  "type": "string",
                                  "description": "Type of content shared.",
                                  "example": "desktop",
                                  "enum": [
                                    "local_recording",
                                    "cloud_recording",
                                    "desktop",
                                    "application",
                                    "whiteboard",
                                    "airplay",
                                    "camera",
                                    "video_sdk"
                                  ]
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "Start time of sharing.",
                                  "example": "2021-06-17T06:49:06Z"
                                },
                                "end_time": {
                                  "type": "string",
                                  "description": "End time of sharing.",
                                  "example": "2021-06-17T06:49:35Z"
                                }
                              },
                              "description": "Array of sharing and recording details."
                            }
                          }
                        },
                        "description": "The user's share information."
                      }
                    }
                  },
                  "description": "List of users' share information."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis API is only available for Video SDK accounts.\n \n**Error Code:** `12702` <br>\nCan not access a session a year ago.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nThis session's detail info is not available.<br>This session has not ended yet or the Session ID is invalid.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {}
      }
    },
    "/videosdk/sessions/{sessionId}/users/{userId}/qos": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get session user QoS",
        "description": "Retrieve the quality of service (QoS) for users from live or past sessions. The data returned indicates the connection quality for sending and receiving video, audio, and shared content. For a session that has started and is ongoing, the API returns live session data. If the session has ended, the API returns the past session data.\n* This API will **not** return data if there is no data being sent or received at the time of request. \n\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "sessionUserQOS",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "DYHrdpjrS3uaOf7dPkkg8w"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The session types. \n* `past` - A past session. \n* `live` - A live session.\n\nThis value defaults to `live`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "past",
              "default": "live",
              "enum": [
                "past",
                "live"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n Session user QOS returned.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "User QoS Object",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The user's ID.",
                      "example": "1670000000"
                    },
                    "name": {
                      "type": "string",
                      "description": "The user's display name.",
                      "example": "User"
                    },
                    "device": {
                      "type": "string",
                      "description": "The type of device used to join the session. \n * `Phone` - The user joined via PSTN. \n* `H.323/SIP` - The user joined via an H.323 or SIP device. \n* `Windows` - The user joined via Voice over IP (VoIP) using a Windows device. \n* `Mac` - The user joined via VoIP using a Mac device. \n * `iOS` - The user joined via VoIP using an iOS device. \n* `Android` - The user joined via VoIP using an Android device.\n * `\"\"` - An external user.",
                      "example": "Android",
                      "enum": [
                        "Phone",
                        "H.323/SIP",
                        "Windows",
                        "Mac",
                        "iOS",
                        "Android"
                      ]
                    },
                    "os": {
                      "type": "string",
                      "description": "Device operation system.",
                      "example": "iOS"
                    },
                    "os_version": {
                      "type": "string",
                      "description": "Device operation system version.",
                      "example": "16.5"
                    },
                    "browser_name": {
                      "type": "string",
                      "description": "Web client browser name.",
                      "example": "Firefox"
                    },
                    "browser_version": {
                      "type": "string",
                      "description": "Web client browser version.",
                      "example": "133"
                    },
                    "client": {
                      "type": "string",
                      "description": "Client software or SDK version.",
                      "example": "Web Meeting SDK 2.18"
                    },
                    "ip_address": {
                      "type": "string",
                      "description": "The user's IP address.",
                      "example": "192.0.2.0"
                    },
                    "location": {
                      "type": "string",
                      "description": "The user's location.",
                      "example": "San Jose (US)"
                    },
                    "network_type": {
                      "type": "string",
                      "description": "The user's network type.\n\n* `Wired`\n* `Wifi`\n * `PPP` - Point-to-Point.\n* `Cellular` - 3G, 4G, and 5G cellular.\n * `Others` - An unknown device.",
                      "example": "Wifi",
                      "enum": [
                        "Wired",
                        "Wifi",
                        "PPP",
                        "Cellular",
                        "Others"
                      ]
                    },
                    "microphone": {
                      "type": "string",
                      "description": "The type of microphone that the user used during the session.",
                      "example": "Plantronics BT600"
                    },
                    "speaker": {
                      "type": "string",
                      "description": "The type of speaker that the user used during the session.",
                      "example": "Plantronics BT600"
                    },
                    "camera": {
                      "type": "string",
                      "description": "The type of camera that the user used during the session.",
                      "example": "FaceTime HD Camera"
                    },
                    "data_center": {
                      "type": "string",
                      "description": "The data center where user's session data is stored. See [Datacenter abbreviation list](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) for details.",
                      "example": "SC"
                    },
                    "connection_type": {
                      "type": "string",
                      "description": "The user's connection type.",
                      "example": "P2P"
                    },
                    "join_time": {
                      "type": "string",
                      "description": "The time at which the user joined the session.",
                      "format": "date-time",
                      "example": "2019-08-20T19:09:01Z"
                    },
                    "leave_time": {
                      "type": "string",
                      "description": "The time at which the user left the session.",
                      "format": "date-time",
                      "example": "2019-08-20T19:19:01Z"
                    },
                    "user_qos": {
                      "type": "array",
                      "description": "The QoS (quality of service) provided to the user.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date_time": {
                            "type": "string",
                            "description": "The QoS date.",
                            "format": "date-time",
                            "example": "2019-08-20T19:19:01Z"
                          },
                          "audio_input": {
                            "title": "Audio QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              }
                            },
                            "description": "Information about the session's audio quality of service (QoS)."
                          },
                          "audio_output": {
                            "title": "Audio QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              }
                            },
                            "description": "Information about the session's audio quality of service (QoS)."
                          },
                          "video_input": {
                            "title": "Video QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 frames per second (FPS).",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's video quality of service (QoS)."
                          },
                          "video_output": {
                            "title": "Video QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 frames per second (FPS).",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's video quality of service (QoS)."
                          },
                          "as_input": {
                            "title": "Screen Share QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 frames per second (FPS).",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's screen share QoS (quality of service)."
                          },
                          "as_output": {
                            "title": "Screen Share QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 frames per second (FPS).",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's screen share QoS (quality of service)."
                          },
                          "audio_device_from_rwg": {
                            "title": "Audio QOS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              }
                            },
                            "description": "Information about the session's audio quality of service (QoS) sent by a user who joined the session via the web client."
                          },
                          "audio_device_to_rwg": {
                            "title": "Audio QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              }
                            },
                            "description": "Information about the session's audio quality of service (QoS) received by a user who joined the session via the web client."
                          },
                          "video_device_from_rwg": {
                            "title": "Video QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 frames per second (FPS).",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's video quality of service (QoS) sent by a user who joined the session via the web client."
                          },
                          "video_device_to_rwg": {
                            "title": "Video QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 frames per second (FPS).",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's video quality of service (QoS) received by a user who joined the session via the web client."
                          },
                          "as_device_from_rwg": {
                            "title": "Screen Share QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30 frames per second (FPS).",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's screen share QoS (quality of service) sent by a user who joined the session via the web client."
                          },
                          "as_device_to_rwg": {
                            "title": "Screen Share QoS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "The number of bits per second that can be transmitted along a digital network, in Kbps.",
                                "example": "23 kbps"
                              },
                              "latency": {
                                "type": "string",
                                "description": "The time it takes for a packet to travel from point to point, in milliseconds.",
                                "example": "126 ms"
                              },
                              "jitter": {
                                "type": "string",
                                "description": "The variation in the delay of received packets, in milliseconds.",
                                "example": "6 ms"
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                "example": "0.3%"
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                "example": "1.9%"
                              },
                              "resolution": {
                                "type": "string",
                                "description": "The number of pixels in each dimension that can be displayed by your video camera.",
                                "example": "1280*720"
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30fps.",
                                "example": "12 fps"
                              }
                            },
                            "description": "Information about the session's screen share QoS (quality of service) received by a user who joined the session via the web client."
                          },
                          "wifi_rssi": {
                            "type": "object",
                            "properties": {
                              "max_rssi": {
                                "type": "integer",
                                "description": "Maximum value of the wireless network's received signal strength indicator (RSSI).",
                                "example": -75
                              },
                              "avg_rssi": {
                                "type": "integer",
                                "description": "Average value of the wireless network's received signal strength indicator (RSSI).",
                                "example": -69
                              },
                              "min_rssi": {
                                "type": "integer",
                                "description": "Minimum value of the wireless network's received signal strength indicator (RSSI).",
                                "example": -35
                              },
                              "rssi_unit": {
                                "type": "string",
                                "description": "Unit of the wireless network's received signal strength indicator (RSSI).",
                                "example": "dBm"
                              }
                            },
                            "description": "The QoS metrics for the wireless network's RSSI sent by a participant who joined the meeting through a wireless network."
                          },
                          "cpu_usage": {
                            "type": "object",
                            "properties": {
                              "zoom_min_cpu_usage": {
                                "type": "string",
                                "description": "Zoom's minimum CPU usage.",
                                "example": "8%"
                              },
                              "zoom_avg_cpu_usage": {
                                "type": "string",
                                "description": "Zoom's average CPU usage.",
                                "example": "12%"
                              },
                              "zoom_max_cpu_usage": {
                                "type": "string",
                                "description": "Zoom's maximum CPU usage.",
                                "example": "18%"
                              },
                              "system_max_cpu_usage": {
                                "type": "string",
                                "description": "The system's maximum CPU usage.",
                                "example": "40%"
                              }
                            },
                            "description": "Information about CPU usage."
                          }
                        }
                      }
                    }
                  },
                  "description": "Information about the user's quality of service (QoS)."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `12702` <br>\n Can not access a session a year ago. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n This session's detail info is not available.<br>This session has not ended yet or the Session ID is invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/stream_ingestions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List stream ingestions",
        "description": "List all the stream ingestions on your Zoom account.\n\n**Prerequisites:**\n * A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Liststreamingestions",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. Zoom returns this token whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` Stream ingestion list returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
                    },
                    "stream_ingestions": {
                      "type": "array",
                      "description": "Stream ingestion list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stream_id": {
                            "type": "string",
                            "description": "The stream ingestion ID.",
                            "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                          },
                          "stream_name": {
                            "type": "string",
                            "description": "The stream ingestion name.",
                            "example": "stream ingestion1"
                          },
                          "stream_description": {
                            "type": "string",
                            "description": "The stream ingestion description.",
                            "example": "stream ingestion1"
                          },
                          "stream_key": {
                            "type": "string",
                            "description": "The stream ingestion key.",
                            "example": "ABCDEFG12345HIJ6789"
                          },
                          "stream_url": {
                            "type": "string",
                            "description": "The stream URL.",
                            "example": "rtmp://a.rtmp.zoomevent.com/live1"
                          },
                          "backup_stream_url": {
                            "type": "string",
                            "description": "The backup stream URL.",
                            "example": "rtmp://a.rtmp.zoomevent.com/live1"
                          }
                        },
                        "description": "Stream ingestion object."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `34014` <br>\n Failed to list the stream ingestions. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Create a stream ingestion",
        "description": "Create a stream ingestion. A stream ingestion is a unique identifier used to establish a connection between an external streaming source (such as a third-party live streaming app) and the Zoom streaming platform. Once you've created a stream ingestion, you can bind it to your video session, so you can integrate the video feeds from the streaming source into your live video session, for a more immersive experience. You can create up to 20 stream ingestions.\n\n**Prerequisites:**\n* A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Createastreamingestion",
        "requestBody": {
          "description": "Stream ingestion object",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "stream_name"
                ],
                "type": "object",
                "properties": {
                  "stream_name": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The stream ingestion name.",
                    "example": "stream ingestion1"
                  },
                  "stream_description": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The stream ingestion description.",
                    "example": "stream ingestion1"
                  }
                },
                "description": "Stream ingestion object."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` Stream ingestion created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stream_id": {
                      "type": "string",
                      "description": "The stream ingestion ID.",
                      "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                    },
                    "stream_name": {
                      "maxLength": 128,
                      "type": "string",
                      "description": "The stream ingestion name.",
                      "example": "stream ingestion1"
                    },
                    "stream_description": {
                      "maxLength": 128,
                      "type": "string",
                      "description": "The stream ingestion description.",
                      "example": "stream ingestion1"
                    },
                    "stream_key": {
                      "type": "string",
                      "description": "The stream ingestion key.",
                      "example": "ABCDEFG12345HIJ6789"
                    },
                    "stream_url": {
                      "type": "string",
                      "description": "The stream URL.",
                      "example": "rtmp://a.rtmp.zoomevent.com/live1"
                    },
                    "backup_stream_url": {
                      "type": "string",
                      "description": "The backup stream URL.",
                      "example": "rtmp://a.rtmp.zoomevent.com/live1"
                    }
                  },
                  "description": "Stream ingestion object."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `34016` <br>\n You can only create up to 20 stream ingestions. <br>\n**Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `34011` <br>\n Failed to create the stream ingestion. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/stream_ingestions/{streamId}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get a stream ingestion",
        "description": "Get information about a stream ingestion.\n\n**Prerequisites:**\n * A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Getastreamingestion",
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "description": "The stream ingestion ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "sfk/aOFJSJSYhGwk1hnxgw=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` Stream ingestion object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stream_id": {
                      "type": "string",
                      "description": "The stream ingestion ID.",
                      "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                    },
                    "stream_name": {
                      "type": "string",
                      "description": "The stream ingestion name.",
                      "example": "stream ingestion1"
                    },
                    "stream_description": {
                      "type": "string",
                      "description": "The stream ingestion description.",
                      "example": "stream ingestion1"
                    },
                    "stream_key": {
                      "type": "string",
                      "description": "The stream ingestion key.",
                      "example": "ABCDEFG12345HIJ6789"
                    },
                    "stream_url": {
                      "type": "string",
                      "description": "The stream URL.",
                      "example": "rtmp://a.rtmp.zoomevent.com/live1"
                    },
                    "backup_stream_url": {
                      "type": "string",
                      "description": "The backup stream URL.",
                      "example": "rtmp://a.rtmp.zoomevent.com/live1"
                    }
                  },
                  "description": "Stream ingestion object."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34001` <br>\n Stream ingestion does not exist: {streamId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Delete a stream ingestion",
        "description": "Delete a stream ingestion.\n\n**Prerequisites:**\n* A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Deleteastreamingestion",
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "description": "The stream ingestion ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "sfk/aOFJSJSYhGwk1hnxgw=="
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Stream ingestion deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `34015` <br>\n You cannot delete a steam ingestion that is in use. <br>\n**Error Code:** `34012` <br>\n Failed to delete the stream ingestion. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34001` <br>\n Stream ingestion does not exist: {streamId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      },
      "patch": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update a stream ingestion",
        "description": "Update a stream ingestion.\n\n**Prerequisites:**\n* A Video SDK account.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Updateastreamingestion",
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "description": "The stream ingestion ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "sfk/aOFJSJSYhGwk1hnxgw=="
            }
          }
        ],
        "requestBody": {
          "description": "Stream ingestion object",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stream_name": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The stream ingestion name.",
                    "example": "stream ingestion1"
                  },
                  "stream_description": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The stream ingestion description.",
                    "example": "stream ingestion1"
                  }
                },
                "description": "Stream ingestion object."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Stream ingestion updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n**Error Code:** `34013` <br>\n Failed to update the stream ingestion. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34001` <br>\n Stream ingestion does not exist: {streamId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/report/cloud_recording": {
      "get": {
        "tags": [
          "Video SDK Reports"
        ],
        "summary": "Get cloud recording usage report",
        "description": "Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports for up to 6 months prior to the current date. The date gap between from and to dates should be smaller or equal to 30 days.    \n   \n \n**Prerequisites**  \n \n* A Video SDK account.  \n \n \n \n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "vsdkReportCloudRecording",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-02"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nClound recording report returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "Start date for this report.",
                      "format": "date",
                      "example": "2021-12-01"
                    },
                    "to": {
                      "type": "string",
                      "description": "End date for this report.",
                      "format": "date",
                      "example": "2021-12-02"
                    },
                    "cloud_recording_storage": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Array of cloud usage objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "Date of usage.",
                            "format": "date",
                            "example": "2021-12-01"
                          },
                          "usage": {
                            "type": "string",
                            "description": "Storage used on the date.",
                            "example": "29 MB"
                          },
                          "plan_usage": {
                            "type": "string",
                            "description": "Paid storage.",
                            "example": "1 GB"
                          },
                          "free_usage": {
                            "type": "string",
                            "description": "Free storage.",
                            "example": "1 GB"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Daily report can only be provided within 6 months prior to the current date. <br>\n**Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/report/daily": {
      "get": {
        "tags": [
          "Video SDK Reports"
        ],
        "summary": "Get daily usage report",
        "description": "Get daily report of the account-wide usage of Zoom services for each day in a given month. It lists the number of sessions, users, and session minutes.  \n \n**Prerequisites**  \n \n* A Video SDK account.  \n \n \n \n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "vsdkReportDaily",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Year for this report.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 2022
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Month for this report.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nDaily report retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "year": {
                      "type": "integer",
                      "description": "Year for this report.",
                      "example": 2021
                    },
                    "month": {
                      "type": "integer",
                      "description": "Month for this report.",
                      "example": 12
                    },
                    "dates": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Array of date objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "Date for this object.",
                            "format": "date",
                            "example": "2021-12-01"
                          },
                          "sessions": {
                            "type": "integer",
                            "description": "Number of sessions on this date.",
                            "example": 20
                          },
                          "users": {
                            "type": "integer",
                            "description": "Number of participants on this date.",
                            "example": 80
                          },
                          "session_minutes": {
                            "type": "integer",
                            "description": "Number of session minutes on this date.",
                            "example": 380
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Daily report can only be provided within 6 months prior to the current date. <br>\n**Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/report/operationlogs": {
      "get": {
        "tags": [
          "Video SDK Reports"
        ],
        "summary": "Get operation logs report",
        "description": "Get operation logs report for a specified period of time. The operations logs report allows you to audit admin and user activity, such as changing account settings, and deleting recordings. \n See [Using Admin Activity Logs](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0067251) for similar usage in Zoom Meetings. \n \n \n**Prerequisites**  \n \n* A Video SDK account.  \n \n \n \n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "vsdkReportOperationLogs",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-02"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 10,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. Zoom returns a next page token whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
            }
          },
          {
            "name": "category_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "**Optional**  \n \nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:  \n  `all`  \n `user`  \n `user_settings`  \n `account`  \n `billing`  \n `im`  \n `recording`  \n `phone_contacts`  \n `webinar`  \n `sub_account`  \n `role`  \n `zoom_rooms`",
              "example": "all",
              "enum": [
                "all",
                "user",
                "user_settings",
                "account",
                "billing",
                "im",
                "recording",
                "phone_contacts",
                "webinar",
                "sub_account",
                "role",
                "zoom_rooms"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nOperation Logs Report Returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. Zoom returns a next page token whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2"
                    },
                    "from": {
                      "type": "string",
                      "description": "Start date for this report.",
                      "format": "date",
                      "example": "2021-12-01"
                    },
                    "to": {
                      "type": "string",
                      "description": "End date for this report.",
                      "format": "date",
                      "example": "2021-12-02"
                    },
                    "operation_logs": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Array of operation log objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "description": "The time when the operation was performed.",
                            "format": "date-time",
                            "example": "2019-08-20T19:09:01Z"
                          },
                          "operator": {
                            "type": "string",
                            "description": "The user who performed the operation.",
                            "example": "someuser@sfksfhksdfsf.com"
                          },
                          "category_type": {
                            "type": "string",
                            "description": "Category type.",
                            "example": "User"
                          },
                          "action": {
                            "type": "string",
                            "description": "Action taken.",
                            "example": "update"
                          },
                          "operation_detail": {
                            "type": "string",
                            "description": "Operation detail.",
                            "example": "Activate User sjkfhdsf@jdfgkhgd.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Daily report can only be provided within 6 months prior to the current date. <br>\n**Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    },
    "/videosdk/report/telephone": {
      "get": {
        "tags": [
          "Video SDK Reports"
        ],
        "summary": "Get telephone report",
        "description": "Get the telephone report for a specified period of time. The telephone report allows you to view who dialed into sessions via phone (Audio Conferencing or SIP Connected Audio), which number they dialed into, and other details. See [Accessing audio conferencing reports](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports) for similar usage in Zoom Meetings.   \n   \n \n**Prerequisites**  \n \n* A Video SDK account.  \n \n \n \n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "vsdkReportTelephone",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-02"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 10,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. Zoom returns a next page token whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Audio types:  \n `1` - Toll-free Call-in &amp; Call-out.  \n `2` - Toll   \n \n`3` - SIP Connected Audio",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1",
              "default": "1",
              "enum": [
                "1",
                "2",
                "3"
              ]
            }
          },
          {
            "name": "query_date_type",
            "in": "query",
            "description": "The type of date to query: \n* `start_time` &mdash; Query by call start time. \n* `end_time` &mdash; Query by call end time. \n* `session_start_time` &mdash; Query by session start time. \n* `session_end_time` &mdash; Query by session end time. \n\nThis value defaults to `start_time`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "start_time",
              "default": "start_time",
              "enum": [
                "start_time",
                "end_time",
                "session_start_time",
                "session_end_time"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nTelephone report returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "Use the next page token to paginate through large result sets. Zoom returns a next page token whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2"
                    },
                    "from": {
                      "type": "string",
                      "description": "Start date for this report.",
                      "format": "date",
                      "example": "2019-07-15"
                    },
                    "to": {
                      "type": "string",
                      "description": "End date for this report.",
                      "format": "date",
                      "example": "2019-07-20"
                    },
                    "telephony_usage": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Array of telephony objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "session_id": {
                            "type": "string",
                            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** this value.",
                            "example": "sfk/aOFJSJSYhGwk1hnxgw=="
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "Toll-free telephone number.",
                            "example": "18005555555"
                          },
                          "signaled_number": {
                            "type": "string",
                            "description": "The number that is signaled to Zoom.",
                            "example": "18005555555"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "Call leg start time.",
                            "format": "date-time",
                            "example": "2019-07-15T23:24:52Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "Call leg end time.",
                            "format": "date-time",
                            "example": "2019-07-15T23:30:19Z"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Call leg duration.",
                            "example": 6
                          },
                          "total": {
                            "type": "number",
                            "description": "Total cost (USD) for Call Out. Calculated as plan rate by duration.",
                            "example": 11
                          },
                          "country_name": {
                            "type": "string",
                            "description": "Country name.",
                            "example": "Macau SAR"
                          },
                          "call_in_number": {
                            "type": "string",
                            "description": "Caller's call-in number.",
                            "example": "15555555555"
                          },
                          "type": {
                            "type": "string",
                            "description": "Call type.",
                            "example": "toll-free",
                            "enum": [
                              "toll-free",
                              "call-out",
                              "call-in",
                              "US toll-number",
                              "global toll-number",
                              "premium",
                              "premium call-in"
                            ]
                          },
                          "rate": {
                            "type": "number",
                            "description": "Calling rate for the telephone call.",
                            "example": 12
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Daily report can only be provided within 6 months prior to the current date. <br>\n**Error Code:** `200` <br>\n This API is only available for Video SDK accounts. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": []
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "openapi_authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "openapi_oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/",
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {}
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "https://swagger.io"
  }
}