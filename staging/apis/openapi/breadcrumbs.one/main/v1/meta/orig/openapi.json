{
  "openapi": "3.0.1",
  "info": {
    "title": "Breadcrumbs One",
    "version": "v1",
    "x-jentic-source-url": "https://api.breadcrumbs.one/swagger/v1/swagger.json"
  },
  "servers": [
    {
      "url": "https://api.breadcrumbs.one",
      "description": "Breadcrumbs One - Production Server"
    }
  ],
  "paths": {
    "/attribution": {
      "post": {
        "tags": [
          "Attribution Endpoints"
        ],
        "description": "Check attribution data for one address",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Breadcrumbs.One.Models.Attribution.AttributionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Breadcrumbs.One.Models.Attribution.AttributionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Breadcrumbs.One.Models.Attribution.AttributionRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnprocessableResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Invalid chain value",
                      "status": 422
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnauthorizedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Unauthorize access",
                      "status": 401
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Attribution.AttributionResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "breadcrumbs": [
                        {
                          "entity_label": "Ronin Bridge Exploiter",
                          "entity_tags": [
                            "Hack"
                          ],
                          "risk_score": "High",
                          "data_source": "Manually Tagged Entity"
                        },
                        {
                          "entity_label": "On SDN List",
                          "entity_tags": [
                            "Sactions"
                          ],
                          "risk_score": "Severe",
                          "data_source": "On SDN List"
                        }
                      ],
                      "address": "0x098b716b8aaf21512996dc57eb0615e2383e2f96"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/node": {
      "post": {
        "tags": [
          "Node Endpoints"
        ],
        "description": "Shows the incoming and outgoing transactions from blockchain address",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Breadcrumbs.One.Models.Node.NodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Breadcrumbs.One.Models.Node.NodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Breadcrumbs.One.Models.Node.NodeRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnprocessableResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Invalid chain value",
                      "status": 422
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnauthorizedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Unauthorize access",
                      "status": 401
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Node.NodeResponse"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "entity_tags": [
                        "Exchange"
                      ],
                      "outgoing": [
                        {
                          "address": "0x3f5ce5fbfe3e9af3971dd833d26ba9b5c936f0be"
                        },
                        {
                          "address": "0xf977814e90da44bfa03b6295a0616a897441acec"
                        },
                        {
                          "address": "0xccb04768f3abcf1af1e749085ef67d8ec7c5fdd2"
                        }
                      ],
                      "incoming": [
                        {
                          "address": "0x4e9ce36e442e55ecd9025b9a6e0d88485d628a67"
                        },
                        {
                          "address": "0xbe0eb53f46cd790cd13851d5eff43d12404d33e8"
                        },
                        {
                          "address": "0xd551234ae421e3bcba99a0da6d736074f22192ff"
                        },
                        {
                          "address": "0xe4b5b2667e049ac8c79ae6c5a7e3300815aa32be"
                        },
                        {
                          "address": "0xfb3236c106b2cae3a6fd851f2c121faed0a0ceae"
                        },
                        {
                          "address": "0xfe9e8709d3215310075d67e3ed32a380ccf451c8"
                        },
                        {
                          "address": "0xebdce3b3775c5683c96ca754e4130ea5175de85e"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/risk/address": {
      "get": {
        "tags": [
          "Risk Endpoints"
        ],
        "description": "Will check the risk score for single address",
        "parameters": [
          {
            "name": "chain",
            "in": "query",
            "description": "Blockchain eg: ETH, BTC, MATIC etc.",
            "required": true,
            "style": "form",
            "schema": {
              "enum": [
                "ETH",
                "BTC",
                "MATIC",
                "RON",
                "SOL",
                "TRX",
                "BNB",
                "CHZ",
                "OP",
                "AA",
                "BASE",
                "DOGE",
                "LTC",
                "BLAST",
                "SCROLL"
              ],
              "type": "string",
              "default": "ETH"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Blockchain address",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_exposure",
            "in": "query",
            "description": "If set to `true`, will search the one nearest illicit address (incoming and outgoing) from the specified address",
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnprocessableResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Invalid chain value",
                      "status": 422
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnauthorizedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Unauthorize access",
                      "status": 401
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Address.RiskExposureResponse"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "closest_outgoing_exposure": {
                        "hop": 3,
                        "entity_attributes": [
                          "Hack"
                        ]
                      },
                      "closest_incoming_exposure": {
                        "hop": 7,
                        "entity_attributes": [
                          "Hack"
                        ]
                      },
                      "risk_score": "High",
                      "entity_tags": [
                        "Hack"
                      ]
                    }
                  },
                  "Example 2": {
                    "value": {
                      "risk_score": "Low",
                      "entity_tags": [
                        "Centralized Exchange"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/risk/transaction": {
      "get": {
        "tags": [
          "Risk Endpoints"
        ],
        "description": "Will check the risk score for every addresses in a transaction",
        "parameters": [
          {
            "name": "chain",
            "in": "query",
            "description": "Blockchain eg: ETH, BTC, MATIC etc.",
            "required": true,
            "style": "form",
            "schema": {
              "enum": [
                "ETH",
                "BTC",
                "MATIC",
                "RON",
                "SOL",
                "TRX",
                "BNB",
                "CHZ",
                "OP",
                "AA",
                "BASE",
                "DOGE",
                "LTC",
                "BLAST",
                "SCROLL"
              ],
              "type": "string",
              "default": "ETH"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "description": "Blockchain hash",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnprocessableResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Invalid chain value",
                      "status": 422
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnauthorizedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Unauthorize access",
                      "status": 401
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Transaction.RiskResponse"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "addresses": [
                        {
                          "address": "0x030e37ddd7df1b43db172b23916d523f1599c6cb",
                          "risk_score": "Low",
                          "entity_tags": [
                            "Exchange"
                          ]
                        },
                        {
                          "address": "0xccb04768f3abcf1af1e749085ef67d8ec7c5fdd2",
                          "risk_score": "Low",
                          "entity_tags": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sanctioned_address": {
      "post": {
        "tags": [
          "Sanction Endpoints"
        ],
        "description": "Verify if the addresses provided are in our sanctioned lists",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Sanction.SanctionedRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Sanction.SanctionedRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Sanction.SanctionedRequest"
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnprocessableResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Invalid chain value",
                      "status": 422
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.Response.UnauthorizedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "error": "Unauthorize access",
                      "status": 401
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Breadcrumbs.One.Models.Sanction.SanctionedResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Breadcrumbs.One.Models.Address.AddressResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Address.AddressRiskResponse": {
        "type": "object",
        "properties": {
          "risk_score": {
            "type": "string",
            "nullable": true
          },
          "entity_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Address.ExposureResponse": {
        "type": "object",
        "properties": {
          "hop": {
            "type": "integer",
            "format": "int32"
          },
          "entity_attributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Address.RiskExposureResponse": {
        "type": "object",
        "properties": {
          "risk_score": {
            "type": "string",
            "nullable": true
          },
          "entity_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "closest_outgoing_exposure": {
            "$ref": "#/components/schemas/Breadcrumbs.One.Models.Address.ExposureResponse"
          },
          "closest_incoming_exposure": {
            "$ref": "#/components/schemas/Breadcrumbs.One.Models.Address.ExposureResponse"
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Attribution.AttributionRequest": {
        "required": [
          "address",
          "chain"
        ],
        "type": "object",
        "properties": {
          "address": {
            "minLength": 1,
            "type": "string",
            "description": "Blockchain address"
          },
          "chain": {
            "minLength": 1,
            "enum": [
              "ETH",
              "BTC",
              "MATIC",
              "RON",
              "SOL",
              "TRX",
              "BNB",
              "CHZ",
              "OP",
              "AA",
              "BASE",
              "DOGE",
              "LTC",
              "BLAST",
              "SCROLL"
            ],
            "type": "string",
            "description": "Blockchain eg: ETH, BTC, MATIC etc.",
            "default": "ETH"
          }
        },
        "additionalProperties": false,
        "description": "Request model for attribution endpoint"
      },
      "Breadcrumbs.One.Models.Attribution.AttributionResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "breadcrumbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Breadcrumbs.One.Models.Attribution.EntityResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for attribution endpoint"
      },
      "Breadcrumbs.One.Models.Attribution.EntityResponse": {
        "type": "object",
        "properties": {
          "entity_label": {
            "type": "string",
            "nullable": true
          },
          "entity_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "risk_score": {
            "type": "string",
            "nullable": true
          },
          "data_source": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Node.NodeRequest": {
        "required": [
          "address",
          "chain"
        ],
        "type": "object",
        "properties": {
          "chain": {
            "minLength": 1,
            "enum": [
              "ETH",
              "BTC",
              "MATIC",
              "RON",
              "SOL",
              "TRX",
              "BNB",
              "CHZ",
              "OP",
              "AA",
              "BASE",
              "DOGE",
              "LTC",
              "BLAST",
              "SCROLL"
            ],
            "type": "string",
            "description": "Blockchain eg: ETH, BTC, MATIC etc.",
            "default": "ETH"
          },
          "address": {
            "minLength": 1,
            "type": "string",
            "description": "Blockchain address"
          },
          "token_address": {
            "type": "string",
            "description": "If set, will only show transactions from this token",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Node.NodeResponse": {
        "type": "object",
        "properties": {
          "entity_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "outgoing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Breadcrumbs.One.Models.Address.AddressResponse"
            },
            "nullable": true
          },
          "incoming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Breadcrumbs.One.Models.Address.AddressResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Sanction.SanctionedRequest": {
        "required": [
          "address",
          "chain"
        ],
        "type": "object",
        "properties": {
          "address": {
            "minLength": 1,
            "type": "string",
            "description": "Blockchain address"
          },
          "chain": {
            "minLength": 1,
            "enum": [
              "ETH",
              "BTC",
              "MATIC",
              "RON",
              "SOL",
              "TRX",
              "BNB",
              "CHZ",
              "OP",
              "AA",
              "BASE",
              "DOGE",
              "LTC",
              "BLAST",
              "SCROLL"
            ],
            "type": "string",
            "description": "Blockchain eg: ETH, BTC, MATIC etc.",
            "default": "ETH"
          }
        },
        "additionalProperties": false,
        "description": "Request model for sanction endpoint"
      },
      "Breadcrumbs.One.Models.Sanction.SanctionedResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "chain": {
            "enum": [
              "ETH",
              "BTC",
              "MATIC",
              "RON",
              "SOL",
              "TRX",
              "BNB",
              "CHZ",
              "OP",
              "AA",
              "BASE",
              "DOGE",
              "LTC",
              "BLAST",
              "SCROLL"
            ],
            "type": "string",
            "nullable": true
          },
          "isSanctioned": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.One.Models.Transaction.RiskResponse": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Breadcrumbs.One.Models.Address.AddressRiskResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.Response.UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Breadcrumbs.Response.UnprocessableResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "X-API-KEY": {
        "type": "apiKey",
        "description": "Authorization method required to allow user to access the api endpoints.",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "X-API-KEY": []
    }
  ]
}