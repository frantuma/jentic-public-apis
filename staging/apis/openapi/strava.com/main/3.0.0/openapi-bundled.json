{
  "openapi": "3.0.0",
  "info": {
    "description": "The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.",
    "title": "Strava API v3",
    "version": "3.0.0",
    "x-jentic-source-url": "https://developers.strava.com/swagger/swagger.json"
  },
  "servers": [
    {
      "url": "https://www.strava.com/api/v3"
    }
  ],
  "paths": {
    "/activities": {
      "post": {
        "summary": "Create an Activity",
        "operationId": "createActivity",
        "tags": [
          "Activities"
        ],
        "description": "Creates a manual activity for an athlete, requires activity:write scope.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "achievement_count": 0,
                      "athlete": {
                        "id": 12343545645788,
                        "resource_state": 1
                      },
                      "athlete_count": 1,
                      "average_speed": 0,
                      "calories": 0,
                      "comment_count": 0,
                      "commute": false,
                      "description": null,
                      "device_watts": false,
                      "distance": 0,
                      "elapsed_time": 18373,
                      "external_id": null,
                      "flagged": false,
                      "from_accepted_tag": null,
                      "gear_id": "b453542543",
                      "has_heartrate": false,
                      "has_kudoed": false,
                      "id": 123456778928065,
                      "kudos_count": 0,
                      "manual": true,
                      "map": {
                        "id": "a12345678908766",
                        "polyline": null,
                        "resource_state": 3
                      },
                      "max_speed": 0,
                      "moving_time": 18373,
                      "name": "Chill Day",
                      "photo_count": 0,
                      "pr_count": 0,
                      "private": false,
                      "resource_state": 3,
                      "segment_efforts": [],
                      "sport_type": "MountainBikeRide",
                      "start_date": "2018-02-20T18:02:13Z",
                      "start_date_local": "2018-02-20T10:02:13Z",
                      "timezone": "(GMT-08:00) America/Los_Angeles",
                      "total_elevation_gain": 0,
                      "total_photo_count": 0,
                      "trainer": false,
                      "type": "Ride",
                      "upload_id": null,
                      "utc_offset": -28800,
                      "workout_type": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedActivity"
                }
              }
            },
            "description": "The activity's detailed representation."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "commute": {
                    "description": "Set to 1 to mark as commute.",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description of the activity.",
                    "type": "string"
                  },
                  "distance": {
                    "description": "In meters.",
                    "format": "float",
                    "type": "number"
                  },
                  "elapsed_time": {
                    "description": "In seconds.",
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the activity.",
                    "type": "string"
                  },
                  "sport_type": {
                    "description": "Sport type of activity. For example - Run, MountainBikeRide, Ride, etc.",
                    "type": "string"
                  },
                  "start_date_local": {
                    "description": "ISO 8601 formatted date time.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "trainer": {
                    "description": "Set to 1 to mark as a trainer activity.",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type of activity. For example - Run, Ride etc.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "get": {
        "summary": "Get Activity",
        "operationId": "getActivityById",
        "tags": [
          "Activities"
        ],
        "description": "Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "parameters": [
          {
            "description": "The identifier of the activity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "To include all segments efforts.",
            "in": "query",
            "name": "include_all_efforts",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "achievement_count": 0,
                      "athlete": {
                        "id": 134815,
                        "resource_state": 1
                      },
                      "athlete_count": 1,
                      "average_cadence": 78.5,
                      "average_speed": 6.679,
                      "average_temp": 4,
                      "average_watts": 185.5,
                      "calories": 870.2,
                      "comment_count": 0,
                      "commute": false,
                      "description": "",
                      "device_name": "Garmin Edge 1030",
                      "device_watts": true,
                      "distance": 28099,
                      "elapsed_time": 4410,
                      "elev_high": 446.6,
                      "elev_low": 17.2,
                      "embed_token": "18e4615989b47dd4ff3dc711b0aa4502e4b311a9",
                      "end_latlng": [
                        37.83,
                        -122.26
                      ],
                      "external_id": "garmin_push_12345678987654321",
                      "flagged": false,
                      "from_accepted_tag": false,
                      "gear": {
                        "distance": 32547610,
                        "id": "b12345678987654321",
                        "name": "Tarmac",
                        "primary": true,
                        "resource_state": 2
                      },
                      "gear_id": "b12345678987654321",
                      "has_heartrate": false,
                      "has_kudoed": false,
                      "hide_from_home": false,
                      "highlighted_kudosers": [
                        {
                          "avatar_url": "https://dgalywyr863hv.cloudfront.net/pictures/athletes/12345678987654321/12345678987654321/3/medium.jpg",
                          "destination_url": "strava://athletes/12345678987654321",
                          "display_name": "Marianne V.",
                          "show_name": true
                        }
                      ],
                      "id": 12345678987654320,
                      "kilojoules": 780.5,
                      "kudos_count": 19,
                      "laps": [
                        {
                          "activity": {
                            "id": 1410355832,
                            "resource_state": 1
                          },
                          "athlete": {
                            "id": 134815,
                            "resource_state": 1
                          },
                          "average_cadence": 78.6,
                          "average_speed": 5.12,
                          "average_watts": 233.1,
                          "device_watts": true,
                          "distance": 8046.72,
                          "elapsed_time": 1573,
                          "end_index": 1570,
                          "id": 4479306946,
                          "lap_index": 1,
                          "max_speed": 9.5,
                          "moving_time": 1569,
                          "name": "Lap 1",
                          "resource_state": 2,
                          "split": 1,
                          "start_date": "2018-02-16T14:52:54Z",
                          "start_date_local": "2018-02-16T06:52:54Z",
                          "start_index": 0,
                          "total_elevation_gain": 276
                        }
                      ],
                      "leaderboard_opt_out": false,
                      "manual": false,
                      "map": {
                        "id": "a1410355832",
                        "polyline": "ki{eFvqfiVqAWQIGEEKAYJgBVqDJ{BHa@jAkNJw@Pw@V{APs@^aABQAOEQGKoJ_FuJkFqAo@{A}@sH{DiAs@Q]?WVy@`@oBt@_CB]KYMMkB{AQEI@WT{BlE{@zAQPI@ICsCqA_BcAeCmAaFmCqIoEcLeG}KcG}A}@cDaBiDsByAkAuBqBi@y@_@o@o@kB}BgIoA_EUkAMcACa@BeBBq@LaAJe@b@uA`@_AdBcD`@iAPq@RgALqAB{@EqAyAoOCy@AmCBmANqBLqAZkB\\iCPiBJwCCsASiCq@iD]eA]y@[i@w@mAa@i@k@g@kAw@i@Ya@Q]EWFMLa@~BYpAFNpA`Aj@n@X`@V`AHh@JfB@xAMvAGZGHIDIAWOEQNcC@sACYK[MSOMe@QKKKYOs@UYQISCQ?Q@WNo@r@OHGAGCKOQ_BU}@MQGG]Io@@c@FYNg@d@s@d@ODQAMOMaASs@_@a@SESAQDqBn@a@RO?KK?UBU\\kA@Y?WMo@Iy@GWQ_@WSSGg@AkABQB_Ap@_A^o@b@Q@o@IS@OHi@n@OFS?OI}@iAQMQGQC}@DOIIUK{@IUOMyBo@kASOKIQCa@L[|AgATWN[He@?QKw@FOPCh@Fx@l@TDLELKl@aAHIJEX@r@ZTDV@LENQVg@RkA@c@MeA?WFOPMf@Ej@Fj@@LGHKDM?_@_@iC?a@HKRIl@NT?FCHMFW?YEYGWQa@GYBiAIq@Gq@L_BHSHK|@WJETSLQZs@z@_A~@uA^U`@G\\CRB\\Tl@p@Th@JZ^bB`@lAHLXVLDP?LGFSKiDBo@d@wBVi@R]VYVE\\@`@Lh@Fh@CzAk@RSDQA]GYe@eAGWSiBAWBWBIJORK`@KPOPSTg@h@}Ad@o@F[E_@EGMKUGmAEYGMIMYKs@?a@J}@@_BD_@HQJMx@e@LKHKHWAo@UoAAWFmAH}@?w@C[YwAAc@HSNM|Ao@rA}@zAq@`@a@j@eAxAuBXQj@MXSR[b@gAFg@?YISOGaAHi@Xw@v@_@d@WRSFqARUHQJc@d@m@`A[VSFUBcAEU@WFULUPa@v@Y~@UrBc@dBI~@?l@P~ABt@N`HEjA]zAEp@@p@TrBCl@CTQb@k@dAg@jAU^KJYLK@k@A[Js@d@a@b@]RgBl@[FMAw@[]G]?m@D_@F]P[Vu@t@[TMF_@Do@E_@@q@P]PWZUZw@vAkAlAGJOj@IlAMd@OR{@p@a@d@sBpD]v@a@`Aa@n@]TODgBVk@Pe@^cBfBc@Rs@La@RSPm@|@wCpDS^Wp@QZML{@l@qBbCYd@k@lAIVCZBZNTr@`@RRHZANIZQPKDW@e@CaASU?I@YTKRQx@@\\VmALYRQLCL?v@P|@D\\GJEFKDM@OCa@COOYIGm@YMUCM@]JYr@uAx@kAt@}@jAeAPWbAkBj@s@bAiAz@oAj@m@VQlAc@VQ~@aA`Au@p@Q`AIv@MZORUV_@p@iB|AoCh@q@dAaANUNWH[N{AJ[^m@t@_Av@wA\\a@`@W`@In@Al@B^E`@Wl@u@\\[VQ\\K`@Eb@?R@dAZP@d@CRExAs@\\Yt@{@LG\\MjAATINOXo@d@kAl@_AHYBOCe@QiBCm@Fq@\\wADo@AyGEeBWuB@YHu@Tu@Lk@VcCTo@d@aA\\WJE`@G~@FP?VI\\U~@sANO`@SfAMj@U\\WjAsAXS`@UNENALBHFFL?^Ml@Uj@]b@q@RUJSPkChEc@XcAb@sA|@]PaA\\OJKNER?TDTNj@Jn@?p@OfC@ZR`B@VCV_@n@{@l@WbACv@OlABnAPl@LNNHbBBNBLFFJ@^GLg@x@i@|AMP[X}@XOJKPET?l@LhAFXp@fBDRCd@S\\_@Ps@PQ@}A]S?QDe@V]b@MR[fAKt@ErAF~CANILYDKGIKe@{@Yy@e@sB[gA[c@e@YUCU?WBUHUNQPq@`AiArAMV[^e@Zc@JQJKNMz@?r@Bb@PfAAfA@VVbADn@E`@KHSEe@SMAKDKFM\\^dDCh@m@LoAQ_@@MFOZLfBEl@QbASd@KLQBOAaAc@QAQ@QHc@v@ONMJOBOCg@c@]O[EMBKFGL?RHv@ARERGNe@h@{@h@WVGNDt@JLNFPFz@LdBf@f@PJNHPF`ADPJJJDl@I`@B^Tp@bALJNDNALIf@i@PGPCt@DNE`@Uv@[dAw@RITGRCtAARBPJLPJRZxB?VEX_@vAAR?RDNHJJBh@UnBm@h@IRDRJNNJPNbBFRJLLBLCzAmAd@Uf@Gf@?P@PFJNHPFTH`BDTHNJJJ@LG`@m@^YPER@RDPHNNJRLn@HRLN^VNPHTFX@\\UlDFb@FHh@NP@HKPsB?}ASkCQ{@[y@q@}@cA{@KOCQDa@t@{CFGJCf@Nl@ZtA~@r@p@`@h@rAxBd@rA\\fARdAPjANrB?f@AtBCd@QfBkAjJOlBChA?rBFrBNlBdAfKFzAC~@Iz@Mz@Sv@s@jBmAxBi@hAWt@Sv@Qx@O`BA`@?dAPfBVpAd@`BfBlFf@fBdA~Cr@pAz@fApBhBjAt@H?IL?FBFJLx@^lHvDvh@~XnElCbAd@pGhDbAb@nAr@`Ad@`GhDnBbAxCbBrWhNJJDPARGP_@t@Qh@]pAUtAoA`Ny@jJApBBNFLJFJBv@Hb@HBF?\\",
                        "resource_state": 3,
                        "summary_polyline": "ki{eFvqfiVsBmA`Feh@qg@iX`B}JeCcCqGjIq~@kf@cM{KeHeX`@_GdGkSeBiXtB}YuEkPwFyDeAzAe@pC~DfGc@bIOsGmCcEiD~@oBuEkFhBcBmDiEfAVuDiAuD}NnDaNiIlCyDD_CtJKv@wGhD]YyEzBo@g@uKxGmHpCGtEtI~AuLrHkAcAaIvEgH_EaDR_FpBuBg@sNxHqEtHgLoTpIiCzKNr[sB|Es\\`JyObYeMbGsMnPsAfDxAnD}DBu@bCx@{BbEEyAoD`AmChNoQzMoGhOwX|[yIzBeFKg[zAkIdU_LiHxK}HzEh@vM_BtBg@xGzDbCcF~GhArHaIfByAhLsDiJuC?_HbHd@nL_Cz@ZnEkDDy@hHwJLiCbIrNrIvN_EfAjDWlEnEiAfBxDlFkBfBtEfDaAzBvDKdFx@|@XgJmDsHhAgD`GfElEzOwBnYdBxXgGlSc@bGdHpW|HdJztBnhAgFxc@HnCvBdA"
                      },
                      "max_speed": 18.5,
                      "max_watts": 743,
                      "moving_time": 4207,
                      "name": "Happy Friday",
                      "partner_brand_tag": null,
                      "photo_count": 0,
                      "photos": {
                        "count": 2,
                        "primary": {
                          "id": null,
                          "source": 1,
                          "unique_id": "3FDGKL3-204E-4867-9E8D-89FC79EAAE17",
                          "urls": {
                            "100": "https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-128x96.jpg",
                            "600": "https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-768x576.jpg"
                          }
                        },
                        "use_primary_photo": true
                      },
                      "pr_count": 0,
                      "private": false,
                      "resource_state": 3,
                      "segment_efforts": [
                        {
                          "achievements": [],
                          "activity": {
                            "id": 12345678987654320,
                            "resource_state": 1
                          },
                          "athlete": {
                            "id": 134815,
                            "resource_state": 1
                          },
                          "average_cadence": 78.6,
                          "average_watts": 237.6,
                          "device_watts": true,
                          "distance": 9434.8,
                          "elapsed_time": 2038,
                          "end_index": 2246,
                          "hidden": false,
                          "id": 12345678987654320,
                          "kom_rank": null,
                          "moving_time": 2038,
                          "name": "Tunnel Rd.",
                          "pr_rank": null,
                          "resource_state": 2,
                          "segment": {
                            "activity_type": "Ride",
                            "average_grade": 4.2,
                            "city": "Oakland",
                            "climb_category": 3,
                            "country": "United States",
                            "distance": 9220.7,
                            "elevation_high": 426.5,
                            "elevation_low": 43.4,
                            "end_latlng": [
                              37.8476261,
                              -122.2008944
                            ],
                            "hazardous": false,
                            "id": 673683,
                            "maximum_grade": 25.8,
                            "name": "Tunnel Rd.",
                            "private": false,
                            "resource_state": 2,
                            "starred": false,
                            "start_latlng": [
                              37.8346153,
                              -122.2520872
                            ],
                            "state": "CA"
                          },
                          "start_date": "2018-02-16T14:56:25Z",
                          "start_date_local": "2018-02-16T06:56:25Z",
                          "start_index": 211
                        }
                      ],
                      "segment_leaderboard_opt_out": false,
                      "splits_metric": [
                        {
                          "average_speed": 7.1,
                          "distance": 1001.5,
                          "elapsed_time": 141,
                          "elevation_difference": 4.4,
                          "moving_time": 141,
                          "pace_zone": 0,
                          "split": 1
                        }
                      ],
                      "sport_type": "MountainBikeRide",
                      "start_date": "2018-02-16T14:52:54Z",
                      "start_date_local": "2018-02-16T06:52:54Z",
                      "start_latlng": [
                        37.83,
                        -122.26
                      ],
                      "suffer_score": null,
                      "timezone": "(GMT-08:00) America/Los_Angeles",
                      "total_elevation_gain": 516,
                      "total_photo_count": 2,
                      "trainer": false,
                      "type": "Ride",
                      "upload_id": 98765432123456780,
                      "utc_offset": -28800,
                      "weighted_average_watts": 230,
                      "workout_type": 10
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedActivity"
                }
              }
            },
            "description": "The activity's detailed representation."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      },
      "put": {
        "summary": "Update Activity",
        "operationId": "updateActivityById",
        "tags": [
          "Activities"
        ],
        "description": "Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities",
        "parameters": [
          {
            "description": "The identifier of the activity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "achievement_count": 0,
                      "athlete": {
                        "id": 134815,
                        "resource_state": 1
                      },
                      "athlete_count": 1,
                      "average_cadence": 78.5,
                      "average_speed": 6.679,
                      "average_temp": 4,
                      "average_watts": 185.5,
                      "calories": 870.2,
                      "comment_count": 0,
                      "commute": false,
                      "description": "",
                      "device_name": "Garmin Edge 1030",
                      "device_watts": true,
                      "distance": 28099,
                      "elapsed_time": 4410,
                      "elev_high": 446.6,
                      "elev_low": 17.2,
                      "embed_token": "18e4615989b47dd4ff3dc711b0aa4502e4b311a9",
                      "end_latlng": [
                        37.83,
                        -122.26
                      ],
                      "external_id": "garmin_push_12345678987654321",
                      "flagged": false,
                      "from_accepted_tag": false,
                      "gear": {
                        "distance": 32547610,
                        "id": "b12345678987654321",
                        "name": "Tarmac",
                        "primary": true,
                        "resource_state": 2
                      },
                      "gear_id": "b12345678987654321",
                      "has_heartrate": false,
                      "has_kudoed": false,
                      "hide_from_home": false,
                      "highlighted_kudosers": [
                        {
                          "avatar_url": "https://dgalywyr863hv.cloudfront.net/pictures/athletes/12345678987654321/12345678987654321/3/medium.jpg",
                          "destination_url": "strava://athletes/12345678987654321",
                          "display_name": "Marianne V.",
                          "show_name": true
                        }
                      ],
                      "id": 12345678987654320,
                      "kilojoules": 780.5,
                      "kudos_count": 19,
                      "laps": [
                        {
                          "activity": {
                            "id": 1410355832,
                            "resource_state": 1
                          },
                          "athlete": {
                            "id": 134815,
                            "resource_state": 1
                          },
                          "average_cadence": 78.6,
                          "average_speed": 5.12,
                          "average_watts": 233.1,
                          "device_watts": true,
                          "distance": 8046.72,
                          "elapsed_time": 1573,
                          "end_index": 1570,
                          "id": 4479306946,
                          "lap_index": 1,
                          "max_speed": 9.5,
                          "moving_time": 1569,
                          "name": "Lap 1",
                          "resource_state": 2,
                          "split": 1,
                          "start_date": "2018-02-16T14:52:54Z",
                          "start_date_local": "2018-02-16T06:52:54Z",
                          "start_index": 0,
                          "total_elevation_gain": 276
                        }
                      ],
                      "leaderboard_opt_out": false,
                      "location_city": null,
                      "location_country": "United States",
                      "location_state": null,
                      "manual": false,
                      "map": {
                        "id": "a1410355832",
                        "polyline": "ki{eFvqfiVqAWQIGEEKAYJgBVqDJ{BHa@jAkNJw@Pw@V{APs@^aABQAOEQGKoJ_FuJkFqAo@{A}@sH{DiAs@Q]?WVy@`@oBt@_CB]KYMMkB{AQEI@WT{BlE{@zAQPI@ICsCqA_BcAeCmAaFmCqIoEcLeG}KcG}A}@cDaBiDsByAkAuBqBi@y@_@o@o@kB}BgIoA_EUkAMcACa@BeBBq@LaAJe@b@uA`@_AdBcD`@iAPq@RgALqAB{@EqAyAoOCy@AmCBmANqBLqAZkB\\iCPiBJwCCsASiCq@iD]eA]y@[i@w@mAa@i@k@g@kAw@i@Ya@Q]EWFMLa@~BYpAFNpA`Aj@n@X`@V`AHh@JfB@xAMvAGZGHIDIAWOEQNcC@sACYK[MSOMe@QKKKYOs@UYQISCQ?Q@WNo@r@OHGAGCKOQ_BU}@MQGG]Io@@c@FYNg@d@s@d@ODQAMOMaASs@_@a@SESAQDqBn@a@RO?KK?UBU\\kA@Y?WMo@Iy@GWQ_@WSSGg@AkABQB_Ap@_A^o@b@Q@o@IS@OHi@n@OFS?OI}@iAQMQGQC}@DOIIUK{@IUOMyBo@kASOKIQCa@L[|AgATWN[He@?QKw@FOPCh@Fx@l@TDLELKl@aAHIJEX@r@ZTDV@LENQVg@RkA@c@MeA?WFOPMf@Ej@Fj@@LGHKDM?_@_@iC?a@HKRIl@NT?FCHMFW?YEYGWQa@GYBiAIq@Gq@L_BHSHK|@WJETSLQZs@z@_A~@uA^U`@G\\CRB\\Tl@p@Th@JZ^bB`@lAHLXVLDP?LGFSKiDBo@d@wBVi@R]VYVE\\@`@Lh@Fh@CzAk@RSDQA]GYe@eAGWSiBAWBWBIJORK`@KPOPSTg@h@}Ad@o@F[E_@EGMKUGmAEYGMIMYKs@?a@J}@@_BD_@HQJMx@e@LKHKHWAo@UoAAWFmAH}@?w@C[YwAAc@HSNM|Ao@rA}@zAq@`@a@j@eAxAuBXQj@MXSR[b@gAFg@?YISOGaAHi@Xw@v@_@d@WRSFqARUHQJc@d@m@`A[VSFUBcAEU@WFULUPa@v@Y~@UrBc@dBI~@?l@P~ABt@N`HEjA]zAEp@@p@TrBCl@CTQb@k@dAg@jAU^KJYLK@k@A[Js@d@a@b@]RgBl@[FMAw@[]G]?m@D_@F]P[Vu@t@[TMF_@Do@E_@@q@P]PWZUZw@vAkAlAGJOj@IlAMd@OR{@p@a@d@sBpD]v@a@`Aa@n@]TODgBVk@Pe@^cBfBc@Rs@La@RSPm@|@wCpDS^Wp@QZML{@l@qBbCYd@k@lAIVCZBZNTr@`@RRHZANIZQPKDW@e@CaASU?I@YTKRQx@@\\VmALYRQLCL?v@P|@D\\GJEFKDM@OCa@COOYIGm@YMUCM@]JYr@uAx@kAt@}@jAeAPWbAkBj@s@bAiAz@oAj@m@VQlAc@VQ~@aA`Au@p@Q`AIv@MZORUV_@p@iB|AoCh@q@dAaANUNWH[N{AJ[^m@t@_Av@wA\\a@`@W`@In@Al@B^E`@Wl@u@\\[VQ\\K`@Eb@?R@dAZP@d@CRExAs@\\Yt@{@LG\\MjAATINOXo@d@kAl@_AHYBOCe@QiBCm@Fq@\\wADo@AyGEeBWuB@YHu@Tu@Lk@VcCTo@d@aA\\WJE`@G~@FP?VI\\U~@sANO`@SfAMj@U\\WjAsAXS`@UNENALBHFFL?^Ml@Uj@]b@q@RUJSPkChEc@XcAb@sA|@]PaA\\OJKNER?TDTNj@Jn@?p@OfC@ZR`B@VCV_@n@{@l@WbACv@OlABnAPl@LNNHbBBNBLFFJ@^GLg@x@i@|AMP[X}@XOJKPET?l@LhAFXp@fBDRCd@S\\_@Ps@PQ@}A]S?QDe@V]b@MR[fAKt@ErAF~CANILYDKGIKe@{@Yy@e@sB[gA[c@e@YUCU?WBUHUNQPq@`AiArAMV[^e@Zc@JQJKNMz@?r@Bb@PfAAfA@VVbADn@E`@KHSEe@SMAKDKFM\\^dDCh@m@LoAQ_@@MFOZLfBEl@QbASd@KLQBOAaAc@QAQ@QHc@v@ONMJOBOCg@c@]O[EMBKFGL?RHv@ARERGNe@h@{@h@WVGNDt@JLNFPFz@LdBf@f@PJNHPF`ADPJJJDl@I`@B^Tp@bALJNDNALIf@i@PGPCt@DNE`@Uv@[dAw@RITGRCtAARBPJLPJRZxB?VEX_@vAAR?RDNHJJBh@UnBm@h@IRDRJNNJPNbBFRJLLBLCzAmAd@Uf@Gf@?P@PFJNHPFTH`BDTHNJJJ@LG`@m@^YPER@RDPHNNJRLn@HRLN^VNPHTFX@\\UlDFb@FHh@NP@HKPsB?}ASkCQ{@[y@q@}@cA{@KOCQDa@t@{CFGJCf@Nl@ZtA~@r@p@`@h@rAxBd@rA\\fARdAPjANrB?f@AtBCd@QfBkAjJOlBChA?rBFrBNlBdAfKFzAC~@Iz@Mz@Sv@s@jBmAxBi@hAWt@Sv@Qx@O`BA`@?dAPfBVpAd@`BfBlFf@fBdA~Cr@pAz@fApBhBjAt@H?IL?FBFJLx@^lHvDvh@~XnElCbAd@pGhDbAb@nAr@`Ad@`GhDnBbAxCbBrWhNJJDPARGP_@t@Qh@]pAUtAoA`Ny@jJApBBNFLJFJBv@Hb@HBF?\\",
                        "resource_state": 3,
                        "summary_polyline": "ki{eFvqfiVsBmA`Feh@qg@iX`B}JeCcCqGjIq~@kf@cM{KeHeX`@_GdGkSeBiXtB}YuEkPwFyDeAzAe@pC~DfGc@bIOsGmCcEiD~@oBuEkFhBcBmDiEfAVuDiAuD}NnDaNiIlCyDD_CtJKv@wGhD]YyEzBo@g@uKxGmHpCGtEtI~AuLrHkAcAaIvEgH_EaDR_FpBuBg@sNxHqEtHgLoTpIiCzKNr[sB|Es\\`JyObYeMbGsMnPsAfDxAnD}DBu@bCx@{BbEEyAoD`AmChNoQzMoGhOwX|[yIzBeFKg[zAkIdU_LiHxK}HzEh@vM_BtBg@xGzDbCcF~GhArHaIfByAhLsDiJuC?_HbHd@nL_Cz@ZnEkDDy@hHwJLiCbIrNrIvN_EfAjDWlEnEiAfBxDlFkBfBtEfDaAzBvDKdFx@|@XgJmDsHhAgD`GfElEzOwBnYdBxXgGlSc@bGdHpW|HdJztBnhAgFxc@HnCvBdA"
                      },
                      "max_speed": 18.5,
                      "max_watts": 743,
                      "moving_time": 4207,
                      "name": "Happy Friday",
                      "partner_brand_tag": null,
                      "photo_count": 0,
                      "photos": {
                        "count": 2,
                        "primary": {
                          "id": null,
                          "source": 1,
                          "unique_id": "3FDGKL3-204E-4867-9E8D-89FC79EAAE17",
                          "urls": {
                            "100": "https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-128x96.jpg",
                            "600": "https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-768x576.jpg"
                          }
                        },
                        "use_primary_photo": true
                      },
                      "pr_count": 0,
                      "private": false,
                      "resource_state": 3,
                      "segment_efforts": [
                        {
                          "achievements": [],
                          "activity": {
                            "id": 12345678987654320,
                            "resource_state": 1
                          },
                          "athlete": {
                            "id": 12345678987654320,
                            "resource_state": 1
                          },
                          "average_cadence": 78.6,
                          "average_watts": 237.6,
                          "device_watts": true,
                          "distance": 9434.8,
                          "elapsed_time": 2038,
                          "end_index": 2246,
                          "hidden": false,
                          "id": 12345678987654320,
                          "kom_rank": null,
                          "moving_time": 2038,
                          "name": "Tunnel Rd.",
                          "pr_rank": null,
                          "resource_state": 2,
                          "segment": {
                            "activity_type": "Ride",
                            "average_grade": 4.2,
                            "city": "Oakland",
                            "climb_category": 3,
                            "country": "United States",
                            "distance": 9220.7,
                            "elevation_high": 426.5,
                            "elevation_low": 43.4,
                            "end_latlng": [
                              37.8476261,
                              -122.2008944
                            ],
                            "hazardous": false,
                            "id": 673683,
                            "maximum_grade": 25.8,
                            "name": "Tunnel Rd.",
                            "private": false,
                            "resource_state": 2,
                            "starred": false,
                            "start_latlng": [
                              37.8346153,
                              -122.2520872
                            ],
                            "state": "CA"
                          },
                          "start_date": "2018-02-16T14:56:25Z",
                          "start_date_local": "2018-02-16T06:56:25Z",
                          "start_index": 211
                        }
                      ],
                      "segment_leaderboard_opt_out": false,
                      "splits_metric": [
                        {
                          "average_speed": 7.1,
                          "distance": 1001.5,
                          "elapsed_time": 141,
                          "elevation_difference": 4.4,
                          "moving_time": 141,
                          "pace_zone": 0,
                          "split": 1
                        }
                      ],
                      "sport_type": "MountainBikeRide",
                      "start_date": "2018-02-16T14:52:54Z",
                      "start_date_local": "2018-02-16T06:52:54Z",
                      "start_latlng": [
                        37.83,
                        -122.26
                      ],
                      "suffer_score": null,
                      "timezone": "(GMT-08:00) America/Los_Angeles",
                      "total_elevation_gain": 516,
                      "total_photo_count": 2,
                      "trainer": false,
                      "type": "Ride",
                      "upload_id": 98765432123456780,
                      "utc_offset": -28800,
                      "weighted_average_watts": 230,
                      "workout_type": 10
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedActivity"
                }
              }
            },
            "description": "The activity's detailed representation."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableActivity"
              }
            }
          }
        }
      }
    },
    "/activities/{id}/comments": {
      "get": {
        "summary": "List Activity Comments",
        "operationId": "getCommentsByActivityId",
        "tags": [
          "Activities"
        ],
        "description": "Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "parameters": [
          {
            "description": "The identifier of the activity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Deprecated. Prefer to use after_cursor.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Deprecated. Prefer to use page_size.",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 30,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page. Defaults to 30.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "type": "integer"
            }
          },
          {
            "description": "Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched.",
            "in": "query",
            "name": "after_cursor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "activity_id": 12345678987654320,
                        "athlete": {
                          "firstname": "Peter",
                          "lastname": "S"
                        },
                        "created_at": "2018-02-08T19:25:39Z",
                        "cursor": "abc123%20",
                        "id": 12345678987654320,
                        "mentions_metadata": null,
                        "post_id": null,
                        "resource_state": 2,
                        "text": "Good job and keep the cat pictures coming!"
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Comments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/activities/{id}/kudos": {
      "get": {
        "summary": "List Activity Kudoers",
        "operationId": "getKudoersByActivityId",
        "tags": [
          "Activities"
        ],
        "description": "Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "parameters": [
          {
            "description": "The identifier of the activity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "firstname": "Peter",
                        "lastname": "S"
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SummaryAthlete"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Comments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/activities/{id}/laps": {
      "get": {
        "summary": "List Activity Laps",
        "operationId": "getLapsByActivityId",
        "tags": [
          "Activities"
        ],
        "description": "Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "parameters": [
          {
            "description": "The identifier of the activity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "activity": {
                          "id": 12345678987654320,
                          "resource_state": 1
                        },
                        "athlete": {
                          "id": 12345678987654320,
                          "resource_state": 1
                        },
                        "average_cadence": 79,
                        "average_speed": 4.76,
                        "average_watts": 228.2,
                        "device_watts": true,
                        "distance": 8046.72,
                        "elapsed_time": 1691,
                        "end_index": 1590,
                        "id": 12345678987654320,
                        "lap_index": 1,
                        "max_speed": 9.4,
                        "moving_time": 1587,
                        "name": "Lap 1",
                        "resource_state": 2,
                        "split": 1,
                        "start_date": "2018-02-08T14:13:37Z",
                        "start_date_local": "2018-02-08T06:13:37Z",
                        "start_index": 0,
                        "total_elevation_gain": 270
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Lap"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Activity Laps."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/activities/{id}/streams": {
      "get": {
        "summary": "Get Activity Streams",
        "operationId": "getActivityStreams",
        "tags": [
          "Streams"
        ],
        "description": "Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.",
        "parameters": [
          {
            "description": "The identifier of the activity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Desired stream types.",
            "in": "query",
            "name": "keys",
            "required": true,
            "schema": {
              "items": {
                "enum": [
                  "time",
                  "distance",
                  "latlng",
                  "altitude",
                  "velocity_smooth",
                  "heartrate",
                  "cadence",
                  "watts",
                  "temp",
                  "moving",
                  "grade_smooth"
                ],
                "type": "string"
              },
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Must be true.",
            "in": "query",
            "name": "key_by_type",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "data": [
                          2.9,
                          5.8,
                          8.5,
                          11.7,
                          15,
                          19,
                          23.2,
                          28,
                          32.8,
                          38.1,
                          43.8,
                          49.5
                        ],
                        "original_size": 12,
                        "resolution": "high",
                        "series_type": "distance",
                        "type": "distance"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/StreamSet"
                }
              }
            },
            "description": "The set of requested streams."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/activities/{id}/zones": {
      "get": {
        "summary": "Get Activity Zones",
        "operationId": "getZonesByActivityId",
        "tags": [
          "Activities"
        ],
        "description": "Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "parameters": [
          {
            "description": "The identifier of the activity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivityZone"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Activity Zones."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/athlete": {
      "get": {
        "summary": "Get Authenticated Athlete",
        "operationId": "getLoggedInAthlete",
        "tags": [
          "Athletes"
        ],
        "description": "Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "athlete_type": 1,
                      "badge_type_id": 4,
                      "bikes": [
                        {
                          "distance": 0,
                          "id": "b12345678987655",
                          "name": "EMC",
                          "primary": true,
                          "resource_state": 2
                        }
                      ],
                      "city": "San Francisco",
                      "clubs": [],
                      "country": "US",
                      "created_at": "2017-11-14T02:30:05Z",
                      "date_preference": "%m/%d/%Y",
                      "firstname": "Marianne",
                      "follower": null,
                      "follower_count": 5,
                      "friend": null,
                      "friend_count": 5,
                      "ftp": null,
                      "id": 1234567890987654400,
                      "lastname": "Teutenberg",
                      "measurement_preference": "feet",
                      "mutual_friend_count": 0,
                      "premium": true,
                      "profile": "https://xxxxx.cloudfront.net/pictures/athletes/123456789/123456789/2/large.jpg",
                      "profile_medium": "https://xxxxxx.cloudfront.net/pictures/athletes/123456789/123456789/2/medium.jpg",
                      "resource_state": 3,
                      "sex": "F",
                      "shoes": [
                        {
                          "distance": 4904,
                          "id": "g12345678987655",
                          "name": "adidas",
                          "primary": true,
                          "resource_state": 2
                        }
                      ],
                      "state": "CA",
                      "updated_at": "2018-02-06T19:32:20Z",
                      "username": "marianne_t",
                      "weight": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedAthlete"
                }
              }
            },
            "description": "Profile information for the authenticated athlete."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      },
      "put": {
        "summary": "Update Athlete",
        "operationId": "updateLoggedInAthlete",
        "tags": [
          "Athletes"
        ],
        "description": "Update the currently authenticated athlete. Requires profile:write scope.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "athlete_type": 1,
                      "badge_type_id": 4,
                      "bikes": [
                        {
                          "distance": 0,
                          "id": "b1234567898765509876",
                          "name": "EMC",
                          "primary": true,
                          "resource_state": 2
                        }
                      ],
                      "city": "San Francisco",
                      "clubs": [],
                      "country": "US",
                      "created_at": "2017-11-14T02:30:05Z",
                      "date_preference": "%m/%d/%Y",
                      "firstname": "Marianne",
                      "follower": null,
                      "follower_count": 5,
                      "friend": null,
                      "friend_count": 5,
                      "ftp": null,
                      "id": 1.2345678987655098e+22,
                      "lastname": "V.",
                      "measurement_preference": "feet",
                      "mutual_friend_count": 0,
                      "premium": true,
                      "profile": "https://xxxxx.cloudfront.net/pictures/athletes/1234567898765509876/1234567898765509876/2/large.jpg",
                      "profile_medium": "https://xxxxxx.cloudfront.net/pictures/athletes/1234567898765509876/1234567898765509876/2/medium.jpg",
                      "resource_state": 3,
                      "sex": "F",
                      "shoes": [
                        {
                          "distance": 4904,
                          "id": "g1234567898765509876",
                          "name": "adidas",
                          "primary": true,
                          "resource_state": 2
                        }
                      ],
                      "state": "CA",
                      "updated_at": "2018-02-06T19:32:20Z",
                      "username": "marianne_v",
                      "weight": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedAthlete"
                }
              }
            },
            "description": "Profile information for the authenticated athlete."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "requestBody": {
          "description": "The updated athlete data.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weight": {
                    "type": "number",
                    "format": "float",
                    "description": "The weight of the athlete in kilograms."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/athlete/activities": {
      "get": {
        "summary": "List Athlete Activities",
        "operationId": "getLoggedInAthleteActivities",
        "tags": [
          "Activities"
        ],
        "description": "Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.",
        "parameters": [
          {
            "description": "An epoch timestamp to use for filtering activities that have taken place before a certain time.",
            "in": "query",
            "name": "before",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "An epoch timestamp to use for filtering activities that have taken place after a certain time.",
            "in": "query",
            "name": "after",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "achievement_count": 0,
                        "athlete": {
                          "id": 134815,
                          "resource_state": 1
                        },
                        "athlete_count": 1,
                        "average_cadence": 67.1,
                        "average_heartrate": 140.3,
                        "average_speed": 5.54,
                        "average_watts": 175.3,
                        "comment_count": 1,
                        "commute": false,
                        "device_watts": true,
                        "distance": 24931.4,
                        "elapsed_time": 4500,
                        "end_latlng": null,
                        "external_id": "garmin_push_12345678987654321",
                        "flagged": false,
                        "from_accepted_tag": false,
                        "gear_id": "b12345678987654321",
                        "has_heartrate": true,
                        "has_kudoed": false,
                        "id": 154504250376823,
                        "kilojoules": 788.7,
                        "kudos_count": 3,
                        "location_city": null,
                        "location_country": "United States",
                        "location_state": null,
                        "manual": false,
                        "map": {
                          "id": "a12345678987654321",
                          "resource_state": 2,
                          "summary_polyline": null
                        },
                        "max_heartrate": 178,
                        "max_speed": 11,
                        "max_watts": 406,
                        "moving_time": 4500,
                        "name": "Happy Friday",
                        "photo_count": 0,
                        "pr_count": 0,
                        "private": false,
                        "resource_state": 2,
                        "sport_type": "MountainBikeRide",
                        "start_date": "2018-05-02T12:15:09Z",
                        "start_date_local": "2018-05-02T05:15:09Z",
                        "start_latlng": null,
                        "suffer_score": 82,
                        "timezone": "(GMT-08:00) America/Los_Angeles",
                        "total_elevation_gain": 0,
                        "total_photo_count": 1,
                        "trainer": true,
                        "type": "Ride",
                        "upload_id": 987654321234567900000,
                        "utc_offset": -25200,
                        "weighted_average_watts": 210,
                        "workout_type": null
                      },
                      {
                        "achievement_count": 0,
                        "athlete": {
                          "id": 167560,
                          "resource_state": 1
                        },
                        "athlete_count": 1,
                        "average_cadence": 69.8,
                        "average_heartrate": 152.4,
                        "average_speed": 4.385,
                        "average_watts": 200,
                        "comment_count": 0,
                        "commute": false,
                        "device_watts": true,
                        "distance": 23676.5,
                        "elapsed_time": 5400,
                        "end_latlng": null,
                        "external_id": "garmin_push_12345678987654321",
                        "flagged": false,
                        "from_accepted_tag": false,
                        "gear_id": "b12345678912343",
                        "has_heartrate": true,
                        "has_kudoed": false,
                        "id": 1234567809,
                        "kilojoules": 1080,
                        "kudos_count": 4,
                        "location_city": null,
                        "location_country": "United States",
                        "location_state": null,
                        "manual": false,
                        "map": {
                          "id": "a12345689",
                          "resource_state": 2,
                          "summary_polyline": null
                        },
                        "max_heartrate": 183,
                        "max_speed": 8.8,
                        "max_watts": 403,
                        "moving_time": 5400,
                        "name": "Bondcliff",
                        "photo_count": 0,
                        "pr_count": 0,
                        "private": false,
                        "resource_state": 2,
                        "sport_type": "MountainBikeRide",
                        "start_date": "2018-04-30T12:35:51Z",
                        "start_date_local": "2018-04-30T05:35:51Z",
                        "start_latlng": null,
                        "suffer_score": 162,
                        "timezone": "(GMT-08:00) America/Los_Angeles",
                        "total_elevation_gain": 0,
                        "total_photo_count": 1,
                        "trainer": true,
                        "type": "Ride",
                        "upload_id": 1234567819,
                        "utc_offset": -25200,
                        "weighted_average_watts": 214,
                        "workout_type": null
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SummaryActivity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The authenticated athlete's activities"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/athlete/clubs": {
      "get": {
        "summary": "List Athlete Clubs",
        "operationId": "getLoggedInAthleteClubs",
        "tags": [
          "Clubs"
        ],
        "description": "Returns a list of the clubs whose membership includes the authenticated athlete.",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "city": "San Francisco",
                        "country": "United States",
                        "cover_photo": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5098428/4/large.jpg",
                        "cover_photo_small": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5098428/4/small.jpg",
                        "featured": false,
                        "id": 231407,
                        "member_count": 93151,
                        "name": "The Strava Club",
                        "private": false,
                        "profile": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5319085/1/large.jpg",
                        "profile_medium": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5319085/1/medium.jpg",
                        "resource_state": 2,
                        "sport_type": "other",
                        "state": "California",
                        "url": "strava",
                        "verified": true
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SummaryClub"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of summary club representations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/athlete/zones": {
      "get": {
        "summary": "Get Zones",
        "operationId": "getLoggedInAthleteZones",
        "tags": [
          "Athletes"
        ],
        "description": "Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "distribution_buckets": [
                          {
                            "max": 0,
                            "min": 0,
                            "time": 1498
                          },
                          {
                            "max": 50,
                            "min": 0,
                            "time": 62
                          },
                          {
                            "max": 100,
                            "min": 50,
                            "time": 169
                          },
                          {
                            "max": 150,
                            "min": 100,
                            "time": 536
                          },
                          {
                            "max": 200,
                            "min": 150,
                            "time": 672
                          },
                          {
                            "max": 250,
                            "min": 200,
                            "time": 821
                          },
                          {
                            "max": 300,
                            "min": 250,
                            "time": 529
                          },
                          {
                            "max": 350,
                            "min": 300,
                            "time": 251
                          },
                          {
                            "max": 400,
                            "min": 350,
                            "time": 80
                          },
                          {
                            "max": 450,
                            "min": 400,
                            "time": 81
                          },
                          {
                            "max": -1,
                            "min": 450,
                            "time": 343
                          }
                        ],
                        "resource_state": 3,
                        "sensor_based": true,
                        "type": "power"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Zones"
                }
              }
            },
            "description": "Heart rate and power zones."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/athletes/{id}/routes": {
      "get": {
        "summary": "List Athlete Routes",
        "operationId": "getRoutesByAthleteId",
        "tags": [
          "Routes"
        ],
        "description": "Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          },
          {
            "description": "The identifier of the athlete. Must match the authenticated athlete.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Route"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A representation of the route."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/athletes/{id}/stats": {
      "get": {
        "summary": "Get Athlete Stats",
        "operationId": "getStats",
        "tags": [
          "Athletes"
        ],
        "description": "Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.",
        "parameters": [
          {
            "description": "The identifier of the athlete. Must match the authenticated athlete.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStats"
                }
              }
            },
            "description": "Activity stats of the athlete."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/clubs/{id}": {
      "get": {
        "summary": "Get Club",
        "operationId": "getClubById",
        "tags": [
          "Clubs"
        ],
        "description": "Returns a given a club using its identifier.",
        "parameters": [
          {
            "description": "The identifier of the club.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "activity_types": [
                        "Ride",
                        "VirtualRide",
                        "EBikeRide",
                        "Velomobile",
                        "Handcycle"
                      ],
                      "admin": false,
                      "city": "San Francisco",
                      "club_type": "company",
                      "country": "United States",
                      "cover_photo": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/4328276/1/large.jpg",
                      "cover_photo_small": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/4328276/1/small.jpg",
                      "description": "Private club for Cyclists who work at Strava.",
                      "featured": false,
                      "following_count": 107,
                      "id": 1,
                      "member_count": 116,
                      "membership": "member",
                      "name": "Team Strava Cycling",
                      "owner": false,
                      "owner_id": 759,
                      "post_count": 29,
                      "private": true,
                      "profile": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/1582/4/large.jpg",
                      "profile_medium": "https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/1582/4/medium.jpg",
                      "resource_state": 3,
                      "sport_type": "cycling",
                      "state": "California",
                      "url": "team-strava-bike",
                      "verified": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedClub"
                }
              }
            },
            "description": "The detailed representation of a club."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/clubs/{id}/activities": {
      "get": {
        "summary": "List Club Activities",
        "operationId": "getClubActivitiesById",
        "tags": [
          "Clubs"
        ],
        "description": "Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.",
        "parameters": [
          {
            "description": "The identifier of the club.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "athlete": {
                          "firstname": "Peter",
                          "lastname": "S.",
                          "resource_state": 2
                        },
                        "distance": 2641.7,
                        "elapsed_time": 635,
                        "moving_time": 577,
                        "name": "World Championship",
                        "resource_state": 2,
                        "sport_type": "MountainBikeRide",
                        "total_elevation_gain": 8.8,
                        "type": "Ride",
                        "workout_type": null
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClubActivity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of activities."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/clubs/{id}/admins": {
      "get": {
        "summary": "List Club Administrators",
        "operationId": "getClubAdminsById",
        "tags": [
          "Clubs"
        ],
        "description": "Returns a list of the administrators of a given club.",
        "parameters": [
          {
            "description": "The identifier of the club.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "firstname": "Peter",
                        "lastname": "S.",
                        "resource_state": 2
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SummaryAthlete"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of summary athlete representations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/clubs/{id}/members": {
      "get": {
        "summary": "List Club Members",
        "operationId": "getClubMembersById",
        "tags": [
          "Clubs"
        ],
        "description": "Returns a list of the athletes who are members of a given club.",
        "parameters": [
          {
            "description": "The identifier of the club.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "admin": false,
                        "firstname": "Peter",
                        "lastname": "S.",
                        "membership": "member",
                        "owner": false,
                        "resource_state": 2
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClubAthlete"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of club athlete representations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/gear/{id}": {
      "get": {
        "summary": "Get Equipment",
        "operationId": "getGearById",
        "tags": [
          "Gears"
        ],
        "description": "Returns an equipment using its identifier.",
        "parameters": [
          {
            "description": "The identifier of the gear.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "brand_name": "BMC",
                      "description": "My Bike.",
                      "distance": 388206,
                      "frame_type": 3,
                      "id": "b1231",
                      "model_name": "Teammachine",
                      "primary": false,
                      "resource_state": 3
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedGear"
                }
              }
            },
            "description": "A representation of the gear."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/routes/{id}": {
      "get": {
        "summary": "Get Route",
        "operationId": "getRouteById",
        "tags": [
          "Routes"
        ],
        "description": "Returns a route using its identifier. Requires read_all scope for private routes.",
        "parameters": [
          {
            "description": "The identifier of the route.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              }
            },
            "description": "A representation of the route."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/routes/{id}/export_gpx": {
      "get": {
        "summary": "Export Route GPX",
        "operationId": "getRouteAsGPX",
        "tags": [
          "Routes"
        ],
        "description": "Returns a GPX file of the route. Requires read_all scope for private routes.",
        "parameters": [
          {
            "description": "The identifier of the route.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gpx+xml": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "A GPX file with the route."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/routes/{id}/export_tcx": {
      "get": {
        "summary": "Export Route TCX",
        "operationId": "getRouteAsTCX",
        "tags": [
          "Routes"
        ],
        "description": "Returns a TCX file of the route. Requires read_all scope for private routes.",
        "parameters": [
          {
            "description": "The identifier of the route.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/tcx+xml": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "A TCX file with the route."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/routes/{id}/streams": {
      "get": {
        "summary": "Get Route Streams",
        "operationId": "getRouteStreams",
        "tags": [
          "Streams"
        ],
        "description": "Returns the given route's streams. Requires read_all scope for private routes.",
        "parameters": [
          {
            "description": "The identifier of the route.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "data": [
                          [
                            37.833112,
                            -122.483436
                          ],
                          [
                            37.832964,
                            -122.483406
                          ]
                        ],
                        "type": "latlng"
                      },
                      {
                        "data": [
                          0,
                          16.8
                        ],
                        "type": "distance"
                      },
                      {
                        "data": [
                          92.4,
                          93.4
                        ],
                        "type": "altitude"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/StreamSet"
                }
              }
            },
            "description": "The set of requested streams."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/segment_efforts": {
      "get": {
        "summary": "List Segment Efforts",
        "operationId": "getEffortsBySegmentId",
        "tags": [
          "SegmentEfforts"
        ],
        "description": "Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.",
        "parameters": [
          {
            "description": "The identifier of the segment.",
            "in": "query",
            "name": "segment_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "ISO 8601 formatted date time.",
            "in": "query",
            "name": "start_date_local",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "ISO 8601 formatted date time.",
            "in": "query",
            "name": "end_date_local",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "achievements": [],
                        "activity": {
                          "id": 1234567890,
                          "resource_state": 1
                        },
                        "athlete": {
                          "id": 123445678689,
                          "resource_state": 1
                        },
                        "average_watts": 220.2,
                        "device_watts": false,
                        "distance": 6148.92,
                        "elapsed_time": 1657,
                        "end_index": 1366,
                        "id": 123456789,
                        "kom_rank": null,
                        "moving_time": 1642,
                        "name": "Alpe d'Huez",
                        "pr_rank": null,
                        "resource_state": 2,
                        "segment": {
                          "activity_type": "Ride",
                          "average_grade": 4.8,
                          "city": "Le Bourg D'Oisans",
                          "climb_category": 2,
                          "country": "France",
                          "distance": 6297.46,
                          "elevation_high": 416,
                          "elevation_low": 104.6,
                          "end_latlng": [
                            53.02204074375785,
                            -3.2039630001245736
                          ],
                          "hazardous": false,
                          "id": 788127,
                          "maximum_grade": 16.3,
                          "name": "Alpe d'Huez",
                          "private": false,
                          "resource_state": 2,
                          "starred": false,
                          "start_latlng": [
                            52.98501000581467,
                            -3.1869720001197366
                          ],
                          "state": "RA"
                        },
                        "start_date": "2007-09-15T08:15:29Z",
                        "start_date_local": "2007-09-15T09:15:29Z",
                        "start_index": 1102
                      }
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DetailedSegmentEffort"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of segment efforts."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/segment_efforts/{id}": {
      "get": {
        "summary": "Get Segment Effort",
        "operationId": "getSegmentEffortById",
        "tags": [
          "SegmentEfforts"
        ],
        "description": "Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.",
        "parameters": [
          {
            "description": "The identifier of the segment effort.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "achievements": [],
                      "activity": {
                        "id": 3454504,
                        "resource_state": 1
                      },
                      "athlete": {
                        "id": 54321,
                        "resource_state": 1
                      },
                      "athlete_segment_stats": {
                        "effort_count": 149,
                        "pr_date": "2015-02-12",
                        "pr_elapsed_time": 212
                      },
                      "distance": 83,
                      "elapsed_time": 381,
                      "end_index": 83,
                      "id": 1234556789,
                      "kom_rank": null,
                      "moving_time": 340,
                      "name": "Alpe d'Huez",
                      "pr_rank": null,
                      "resource_state": 3,
                      "segment": {
                        "activity_type": "Run",
                        "average_grade": -0.5,
                        "city": "San Francisco",
                        "climb_category": 0,
                        "country": "United States",
                        "distance": 780.35,
                        "elevation_high": 21,
                        "elevation_low": 17.2,
                        "end_latlng": [
                          37.808297909724,
                          -122.421324329674
                        ],
                        "hazardous": false,
                        "id": 63450,
                        "maximum_grade": 0,
                        "name": "Alpe d'Huez",
                        "private": false,
                        "resource_state": 2,
                        "starred": false,
                        "start_latlng": [
                          37.808407654682,
                          -122.426682919323
                        ],
                        "state": "CA"
                      },
                      "start_date": "2018-02-12T16:12:41Z",
                      "start_date_local": "2018-02-12T08:12:41Z",
                      "start_index": 65
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedSegmentEffort"
                }
              }
            },
            "description": "Representation of a segment effort."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/segment_efforts/{id}/streams": {
      "get": {
        "summary": "Get Segment Effort Streams",
        "operationId": "getSegmentEffortStreams",
        "tags": [
          "Streams"
        ],
        "description": "Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.",
        "parameters": [
          {
            "description": "The identifier of the segment effort.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The types of streams to return.",
            "in": "query",
            "name": "keys",
            "required": true,
            "schema": {
              "items": {
                "enum": [
                  "time",
                  "distance",
                  "latlng",
                  "altitude",
                  "velocity_smooth",
                  "heartrate",
                  "cadence",
                  "watts",
                  "temp",
                  "moving",
                  "grade_smooth"
                ],
                "type": "string"
              },
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Must be true.",
            "in": "query",
            "name": "key_by_type",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "data": [
                          904.5,
                          957.8,
                          963.1,
                          989.1,
                          1011.9,
                          1049.7,
                          1082.4,
                          1098.1,
                          1113.2,
                          1124.7,
                          1139.2,
                          1142.1,
                          1170.4,
                          1173
                        ],
                        "original_size": 14,
                        "resolution": "high",
                        "series_type": "distance",
                        "type": "distance"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/StreamSet"
                }
              }
            },
            "description": "The set of requested streams."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/segments/explore": {
      "get": {
        "summary": "Explore segments",
        "operationId": "exploreSegments",
        "tags": [
          "Segments"
        ],
        "description": "Returns the top 10 segments matching a specified query.",
        "parameters": [
          {
            "description": "The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]",
            "in": "query",
            "name": "bounds",
            "required": true,
            "schema": {
              "items": {
                "format": "float",
                "type": "number"
              },
              "maxItems": 4,
              "minItems": 4,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Desired activity type.",
            "in": "query",
            "name": "activity_type",
            "schema": {
              "enum": [
                "running",
                "riding"
              ],
              "type": "string"
            }
          },
          {
            "description": "The minimum climbing category.",
            "in": "query",
            "name": "min_cat",
            "schema": {
              "maximum": 5,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The maximum climbing category.",
            "in": "query",
            "name": "max_cat",
            "schema": {
              "maximum": 5,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "segments": [
                        {
                          "avg_grade": 5.7,
                          "climb_category": 1,
                          "climb_category_desc": "4",
                          "distance": 2684.8,
                          "elev_difference": 152.8,
                          "end_latlng": [
                            37.8280722,
                            -122.4981393
                          ],
                          "id": 229781,
                          "name": "Hawk Hill",
                          "points": "}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@",
                          "resource_state": 2,
                          "starred": false,
                          "start_latlng": [
                            37.8331119,
                            -122.4834356
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExplorerResponse"
                }
              }
            },
            "description": "List of matching segments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/segments/starred": {
      "get": {
        "summary": "List Starred Segments",
        "operationId": "getLoggedInAthleteStarredSegments",
        "tags": [
          "Segments"
        ],
        "description": "List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "activity_type": "Ride",
                      "athlete_count": 30623,
                      "athlete_segment_stats": {
                        "effort_count": 2,
                        "pr_date": "1993-04-03",
                        "pr_elapsed_time": 553
                      },
                      "average_grade": 5.7,
                      "city": "San Francisco",
                      "climb_category": 1,
                      "country": "United States",
                      "created_at": "2009-09-21T20:29:41Z",
                      "distance": 2684.82,
                      "effort_count": 309974,
                      "elevation_high": 245.3,
                      "elevation_low": 92.4,
                      "end_latlng": [
                        37.8280722,
                        -122.4981393
                      ],
                      "hazardous": false,
                      "id": 229781,
                      "map": {
                        "id": "s229781",
                        "polyline": "}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@",
                        "resource_state": 3
                      },
                      "maximum_grade": 14.2,
                      "name": "Hawk Hill",
                      "private": false,
                      "resource_state": 3,
                      "star_count": 2428,
                      "starred": false,
                      "start_latlng": [
                        37.8331119,
                        -122.4834356
                      ],
                      "state": "CA",
                      "total_elevation_gain": 155.733,
                      "updated_at": "2018-02-15T09:04:18Z"
                    }
                  }
                },
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SummarySegment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of the authenticated athlete's starred segments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/segments/{id}": {
      "get": {
        "summary": "Get Segment",
        "operationId": "getSegmentById",
        "tags": [
          "Segments"
        ],
        "description": "Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.",
        "parameters": [
          {
            "description": "The identifier of the segment.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "activity_type": "Ride",
                      "athlete_count": 30623,
                      "athlete_segment_stats": {
                        "effort_count": 2,
                        "pr_date": "1993-04-03",
                        "pr_elapsed_time": 553
                      },
                      "average_grade": 5.7,
                      "city": "San Francisco",
                      "climb_category": 1,
                      "country": "United States",
                      "created_at": "2009-09-21T20:29:41Z",
                      "distance": 2684.82,
                      "effort_count": 309974,
                      "elevation_high": 245.3,
                      "elevation_low": 92.4,
                      "end_latlng": [
                        37.8280722,
                        -122.4981393
                      ],
                      "hazardous": false,
                      "id": 229781,
                      "map": {
                        "id": "s229781",
                        "polyline": "}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@",
                        "resource_state": 3
                      },
                      "maximum_grade": 14.2,
                      "name": "Hawk Hill",
                      "private": false,
                      "resource_state": 3,
                      "star_count": 2428,
                      "starred": false,
                      "start_latlng": [
                        37.8331119,
                        -122.4834356
                      ],
                      "state": "CA",
                      "total_elevation_gain": 155.733,
                      "updated_at": "2018-02-15T09:04:18Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedSegment"
                }
              }
            },
            "description": "Representation of a segment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/segments/{id}/starred": {
      "put": {
        "summary": "Star Segment",
        "operationId": "starSegment",
        "tags": [
          "Segments"
        ],
        "description": "Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.",
        "parameters": [
          {
            "description": "The identifier of the segment to star.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "activity_type": "Ride",
                      "athlete_count": 30623,
                      "athlete_segment_stats": {
                        "effort_count": 2,
                        "pr_date": "1993-04-03",
                        "pr_elapsed_time": 553
                      },
                      "average_grade": 5.7,
                      "city": "San Francisco",
                      "climb_category": 1,
                      "country": "United States",
                      "created_at": "2009-09-21T20:29:41Z",
                      "distance": 2684.82,
                      "effort_count": 309974,
                      "elevation_high": 245.3,
                      "elevation_low": 92.4,
                      "end_latlng": [
                        37.8280722,
                        -122.4981393
                      ],
                      "hazardous": false,
                      "id": 229781,
                      "map": {
                        "id": "s229781",
                        "polyline": "}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@",
                        "resource_state": 3
                      },
                      "maximum_grade": 14.2,
                      "name": "Hawk Hill",
                      "private": false,
                      "resource_state": 3,
                      "star_count": 2428,
                      "starred": false,
                      "start_latlng": [
                        37.8331119,
                        -122.4834356
                      ],
                      "state": "CA",
                      "total_elevation_gain": 155.733,
                      "updated_at": "2018-02-15T09:04:18Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DetailedSegment"
                }
              }
            },
            "description": "Representation of a segment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "starred": {
                    "default": false,
                    "description": "If true, star the segment; if false, unstar the segment.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "starred"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/segments/{id}/streams": {
      "get": {
        "summary": "Get Segment Streams",
        "operationId": "getSegmentStreams",
        "tags": [
          "Streams"
        ],
        "description": "Returns the given segment's streams. Requires read_all scope for private segments.",
        "parameters": [
          {
            "description": "The identifier of the segment.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The types of streams to return.",
            "in": "query",
            "name": "keys",
            "required": true,
            "schema": {
              "items": {
                "enum": [
                  "distance",
                  "latlng",
                  "altitude"
                ],
                "type": "string"
              },
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Must be true.",
            "in": "query",
            "name": "key_by_type",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "data": [
                          [
                            37.833112,
                            -122.483436
                          ],
                          [
                            37.832964,
                            -122.483406
                          ]
                        ],
                        "original_size": 2,
                        "resolution": "high",
                        "series_type": "distance",
                        "type": "latlng"
                      },
                      {
                        "data": [
                          0,
                          16.8
                        ],
                        "original_size": 2,
                        "resolution": "high",
                        "series_type": "distance",
                        "type": "distance"
                      },
                      {
                        "data": [
                          92.4,
                          93.4
                        ],
                        "original_size": 2,
                        "resolution": "high",
                        "series_type": "distance",
                        "type": "altitude"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/StreamSet"
                }
              }
            },
            "description": "The set of requested streams."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    },
    "/uploads": {
      "post": {
        "summary": "Upload Activity",
        "operationId": "createUpload",
        "tags": [
          "Uploads"
        ],
        "description": "Uploads a new data file to create an activity from. Requires activity:write scope.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Upload"
                }
              }
            },
            "description": "A representation of the created upload."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "commute": {
                    "description": "Whether the resulting activity should be tagged as a commute.",
                    "type": "string"
                  },
                  "data_type": {
                    "description": "The format of the uploaded file.",
                    "enum": [
                      "fit",
                      "fit.gz",
                      "tcx",
                      "tcx.gz",
                      "gpx",
                      "gpx.gz"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "description": "The desired description of the resulting activity.",
                    "type": "string"
                  },
                  "external_id": {
                    "description": "The desired external identifier of the resulting activity.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The desired name of the resulting activity.",
                    "type": "string"
                  },
                  "trainer": {
                    "description": "Whether the resulting activity should be marked as having been performed on a trainer.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/uploads/{uploadId}": {
      "get": {
        "summary": "Get Upload",
        "operationId": "getUploadById",
        "tags": [
          "Uploads"
        ],
        "description": "Returns an upload for a given identifier. Requires activity:write scope.",
        "parameters": [
          {
            "description": "The identifier of the upload.",
            "in": "path",
            "name": "uploadId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Upload"
                }
              }
            },
            "description": "Representation of the upload."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fault"
                }
              }
            },
            "description": "Unexpected error."
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "page": {
        "description": "Page number. Defaults to 1.",
        "in": "query",
        "name": "page",
        "schema": {
          "type": "integer"
        }
      },
      "perPage": {
        "description": "Number of items per page. Defaults to 30.",
        "in": "query",
        "name": "per_page",
        "schema": {
          "default": 30,
          "type": "integer"
        }
      }
    },
    "securitySchemes": {
      "strava_oauth": {
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://www.strava.com/api/v3/oauth/authorize",
            "scopes": {
              "activity:read": "Read the user's activity data for activities that are visible to Everyone and Followers, excluding privacy zone data",
              "activity:read_all": "The same access as activity:read, plus privacy zone data and access to read the user's activities with visibility set to Only You",
              "activity:write": "Access to create manual activities and uploads, and access to edit any activities that are visible to the app, based on activity read access level",
              "profile:read_all": "Read all profile information even if the user has set their profile visibility to Followers or Only You",
              "profile:write": "Update the user's weight and Functional Threshold Power (FTP), and access to star or unstar segments on their behalf",
              "read": "Read public segments, public routes, public profile data, public posts, public events, club feeds, and leaderboards",
              "read_all": "Read private routes, private segments, and private events for the user"
            },
            "tokenUrl": "https://www.strava.com/api/v3/oauth/token"
          }
        },
        "type": "oauth2"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "description": "The code associated with this error.",
            "type": "string"
          },
          "field": {
            "description": "The specific field or aspect of the resource associated with this error.",
            "type": "string"
          },
          "resource": {
            "description": "The type of resource associated with this error.",
            "type": "string"
          }
        }
      },
      "Fault": {
        "description": "Encapsulates the errors that may be returned from the API.",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "The set of specific errors associated with this fault, if any."
          },
          "message": {
            "type": "string",
            "description": "The message of the fault."
          }
        }
      },
      "MetaActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of the activity"
          }
        }
      },
      "MetaAthlete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of the athlete"
          }
        }
      },
      "ActivityType": {
        "type": "string",
        "enum": [
          "AlpineSki",
          "BackcountrySki",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "Elliptical",
          "Golf",
          "Handcycle",
          "Hike",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "NordicSki",
          "Ride",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Run",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "Swim",
          "Velomobile",
          "VirtualRide",
          "VirtualRun",
          "Walk",
          "WeightTraining",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga"
        ],
        "description": "An enumeration of the types an activity may have. Note that this enumeration does not include new sport types (e.g. MountainBikeRide, EMountainBikeRide), activities with these sport types will have the corresponding activity type (e.g. Ride for MountainBikeRide, EBikeRide for EMountainBikeRide)"
      },
      "SportType": {
        "type": "string",
        "enum": [
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "Elliptical",
          "EMountainBikeRide",
          "Golf",
          "GravelRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hike",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "Pickleball",
          "Pilates",
          "Racquetball",
          "Ride",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Run",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "Swim",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "Walk",
          "WeightTraining",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga"
        ],
        "description": "An enumeration of the sport types an activity may have. Distinct from ActivityType in that it has new types (e.g. MountainBikeRide)"
      },
      "LatLng": {
        "type": "array",
        "items": {
          "type": "number",
          "format": "float"
        },
        "minItems": 2,
        "maxItems": 2,
        "description": "A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers."
      },
      "PolylineMap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the map"
          },
          "polyline": {
            "type": "string",
            "description": "The polyline of the map, only returned on detailed representation of an object"
          },
          "summary_polyline": {
            "type": "string",
            "description": "The summary polyline of the map"
          }
        }
      },
      "SummaryActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MetaActivity"
          },
          {
            "properties": {
              "external_id": {
                "type": "string",
                "description": "The identifier provided at upload time"
              },
              "upload_id": {
                "type": "integer",
                "format": "int64",
                "description": "The identifier of the upload that resulted in this activity"
              },
              "athlete": {
                "$ref": "#/components/schemas/MetaAthlete"
              },
              "name": {
                "type": "string",
                "description": "The name of the activity"
              },
              "distance": {
                "type": "number",
                "format": "float",
                "description": "The activity's distance, in meters"
              },
              "moving_time": {
                "type": "integer",
                "description": "The activity's moving time, in seconds"
              },
              "elapsed_time": {
                "type": "integer",
                "description": "The activity's elapsed time, in seconds"
              },
              "total_elevation_gain": {
                "type": "number",
                "format": "float",
                "description": "The activity's total elevation gain."
              },
              "elev_high": {
                "type": "number",
                "format": "float",
                "description": "The activity's highest elevation, in meters"
              },
              "elev_low": {
                "type": "number",
                "format": "float",
                "description": "The activity's lowest elevation, in meters"
              },
              "type": {
                "$ref": "#/components/schemas/ActivityType",
                "description": "Deprecated. Prefer to use sport_type"
              },
              "sport_type": {
                "$ref": "#/components/schemas/SportType"
              },
              "start_date": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the activity was started."
              },
              "start_date_local": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the activity was started in the local timezone."
              },
              "timezone": {
                "type": "string",
                "description": "The timezone of the activity"
              },
              "start_latlng": {
                "$ref": "#/components/schemas/LatLng"
              },
              "end_latlng": {
                "$ref": "#/components/schemas/LatLng"
              },
              "achievement_count": {
                "type": "integer",
                "description": "The number of achievements gained during this activity"
              },
              "kudos_count": {
                "type": "integer",
                "description": "The number of kudos given for this activity"
              },
              "comment_count": {
                "type": "integer",
                "description": "The number of comments for this activity"
              },
              "athlete_count": {
                "type": "integer",
                "description": "The number of athletes for taking part in a group activity",
                "minimum": 1
              },
              "photo_count": {
                "type": "integer",
                "description": "The number of Instagram photos for this activity"
              },
              "total_photo_count": {
                "type": "integer",
                "description": "The number of Instagram and Strava photos for this activity"
              },
              "map": {
                "$ref": "#/components/schemas/PolylineMap"
              },
              "trainer": {
                "type": "boolean",
                "description": "Whether this activity was recorded on a training machine"
              },
              "commute": {
                "type": "boolean",
                "description": "Whether this activity is a commute"
              },
              "manual": {
                "type": "boolean",
                "description": "Whether this activity was created manually"
              },
              "private": {
                "type": "boolean",
                "description": "Whether this activity is private"
              },
              "flagged": {
                "type": "boolean",
                "description": "Whether this activity is flagged"
              },
              "workout_type": {
                "type": "integer",
                "description": "The activity's workout type"
              },
              "upload_id_str": {
                "type": "string",
                "description": "The unique identifier of the upload in string format"
              },
              "average_speed": {
                "type": "number",
                "format": "float",
                "description": "The activity's average speed, in meters per second"
              },
              "max_speed": {
                "type": "number",
                "format": "float",
                "description": "The activity's max speed, in meters per second"
              },
              "has_kudoed": {
                "type": "boolean",
                "description": "Whether the logged-in athlete has kudoed this activity"
              },
              "hide_from_home": {
                "type": "boolean",
                "description": "Whether the activity is muted"
              },
              "gear_id": {
                "type": "string",
                "description": "The id of the gear for the activity"
              },
              "kilojoules": {
                "type": "number",
                "format": "float",
                "description": "The total work done in kilojoules during this activity. Rides only"
              },
              "average_watts": {
                "type": "number",
                "format": "float",
                "description": "Average power output in watts during this activity. Rides only"
              },
              "device_watts": {
                "type": "boolean",
                "description": "Whether the watts are from a power meter, false if estimated"
              },
              "max_watts": {
                "type": "integer",
                "description": "Rides with power meter data only"
              },
              "weighted_average_watts": {
                "type": "integer",
                "description": "Similar to Normalized Power. Rides with power meter data only"
              }
            }
          }
        ]
      },
      "PhotosSummary": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of photos"
          },
          "primary": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "source": {
                "type": "integer"
              },
              "unique_id": {
                "type": "string"
              },
              "urls": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SummaryGear": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The gear's unique identifier."
          },
          "resource_state": {
            "type": "integer",
            "description": "Resource state, indicates level of detail. Possible values: 2 -> \"summary\", 3 -> \"detail\""
          },
          "primary": {
            "type": "boolean",
            "description": "Whether this gear's is the owner's default one."
          },
          "name": {
            "type": "string",
            "description": "The gear's name."
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The distance logged with this gear."
          }
        }
      },
      "SummarySegmentEffort": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of this effort"
          },
          "activity_id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of the activity related to this effort"
          },
          "elapsed_time": {
            "type": "integer",
            "description": "The effort's elapsed time"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the effort was started."
          },
          "start_date_local": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the effort was started in the local timezone."
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The effort's distance in meters"
          },
          "is_kom": {
            "type": "boolean",
            "description": "Whether this effort is the current best on the leaderboard"
          }
        }
      },
      "SummaryPRSegmentEffort": {
        "type": "object",
        "properties": {
          "pr_activity_id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of the activity related to the PR effort."
          },
          "pr_elapsed_time": {
            "type": "integer",
            "description": "The elapsed time ot the PR effort."
          },
          "pr_date": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the PR effort was started."
          },
          "effort_count": {
            "type": "integer",
            "description": "Number of efforts by the authenticated athlete on this segment."
          }
        }
      },
      "SummarySegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of this segment"
          },
          "name": {
            "type": "string",
            "description": "The name of this segment"
          },
          "activity_type": {
            "type": "string",
            "enum": [
              "Ride",
              "Run"
            ]
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The segment's distance, in meters"
          },
          "average_grade": {
            "type": "number",
            "format": "float",
            "description": "The segment's average grade, in percents"
          },
          "maximum_grade": {
            "type": "number",
            "format": "float",
            "description": "The segments's maximum grade, in percents"
          },
          "elevation_high": {
            "type": "number",
            "format": "float",
            "description": "The segments's highest elevation, in meters"
          },
          "elevation_low": {
            "type": "number",
            "format": "float",
            "description": "The segments's lowest elevation, in meters"
          },
          "start_latlng": {
            "$ref": "#/components/schemas/LatLng"
          },
          "end_latlng": {
            "$ref": "#/components/schemas/LatLng"
          },
          "climb_category": {
            "type": "integer",
            "description": "The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category."
          },
          "city": {
            "type": "string",
            "description": "The segments's city."
          },
          "state": {
            "type": "string",
            "description": "The segments's state or geographical region."
          },
          "country": {
            "type": "string",
            "description": "The segment's country."
          },
          "private": {
            "type": "boolean",
            "description": "Whether this segment is private."
          },
          "athlete_pr_effort": {
            "$ref": "#/components/schemas/SummaryPRSegmentEffort"
          },
          "athlete_segment_stats": {
            "$ref": "#/components/schemas/SummarySegmentEffort"
          }
        }
      },
      "DetailedSegmentEffort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SummarySegmentEffort"
          },
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the segment on which this effort was performed"
              },
              "activity": {
                "$ref": "#/components/schemas/MetaActivity"
              },
              "athlete": {
                "$ref": "#/components/schemas/MetaAthlete"
              },
              "moving_time": {
                "type": "integer",
                "description": "The effort's moving time"
              },
              "start_index": {
                "type": "integer",
                "description": "The start index of this effort in its activity's stream"
              },
              "end_index": {
                "type": "integer",
                "description": "The end index of this effort in its activity's stream"
              },
              "average_cadence": {
                "type": "number",
                "format": "float",
                "description": "The effort's average cadence"
              },
              "average_watts": {
                "type": "number",
                "format": "float",
                "description": "The average wattage of this effort"
              },
              "device_watts": {
                "type": "boolean",
                "description": "For riding efforts, whether the wattage was reported by a dedicated recording device"
              },
              "average_heartrate": {
                "type": "number",
                "format": "float",
                "description": "The heart heart rate of the athlete during this effort"
              },
              "max_heartrate": {
                "type": "number",
                "format": "float",
                "description": "The maximum heart rate of the athlete during this effort"
              },
              "segment": {
                "$ref": "#/components/schemas/SummarySegment"
              },
              "kom_rank": {
                "type": "integer",
                "description": "The rank of the effort on the global leaderboard if it belongs in the top 10 at the time of upload",
                "minimum": 1,
                "maximum": 10
              },
              "pr_rank": {
                "type": "integer",
                "description": "The rank of the effort on the athlete's leaderboard if it belongs in the top 3 at the time of upload",
                "minimum": 1,
                "maximum": 3
              },
              "hidden": {
                "type": "boolean",
                "description": "Whether this effort should be hidden when viewed within an activity"
              }
            }
          }
        ]
      },
      "Split": {
        "type": "object",
        "properties": {
          "average_speed": {
            "type": "number",
            "format": "float",
            "description": "The average speed of this split, in meters per second"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The distance of this split, in meters"
          },
          "elapsed_time": {
            "type": "integer",
            "description": "The elapsed time of this split, in seconds"
          },
          "elevation_difference": {
            "type": "number",
            "format": "float",
            "description": "The elevation difference of this split, in meters"
          },
          "pace_zone": {
            "type": "integer",
            "description": "The pacing zone of this split"
          },
          "moving_time": {
            "type": "integer",
            "description": "The moving time of this split, in seconds"
          },
          "split": {
            "type": "integer",
            "description": "N/A"
          }
        }
      },
      "Lap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of this lap"
          },
          "activity": {
            "$ref": "#/components/schemas/MetaActivity"
          },
          "athlete": {
            "$ref": "#/components/schemas/MetaAthlete"
          },
          "average_cadence": {
            "type": "number",
            "format": "float",
            "description": "The lap's average cadence"
          },
          "average_speed": {
            "type": "number",
            "format": "float",
            "description": "The lap's average speed"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The lap's distance, in meters"
          },
          "elapsed_time": {
            "type": "integer",
            "description": "The lap's elapsed time, in seconds"
          },
          "start_index": {
            "type": "integer",
            "description": "The start index of this effort in its activity's stream"
          },
          "end_index": {
            "type": "integer",
            "description": "The end index of this effort in its activity's stream"
          },
          "lap_index": {
            "type": "integer",
            "description": "The index of this lap in the activity it belongs to"
          },
          "max_speed": {
            "type": "number",
            "format": "float",
            "description": "The maximum speed of this lat, in meters per second"
          },
          "moving_time": {
            "type": "integer",
            "description": "The lap's moving time, in seconds"
          },
          "name": {
            "type": "string",
            "description": "The name of the lap"
          },
          "pace_zone": {
            "type": "integer",
            "description": "The athlete's pace zone during this lap"
          },
          "split": {
            "type": "integer"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the lap was started."
          },
          "start_date_local": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the lap was started in the local timezone."
          },
          "total_elevation_gain": {
            "type": "number",
            "format": "float",
            "description": "The elevation gain of this lap, in meters"
          }
        }
      },
      "DetailedActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SummaryActivity"
          },
          {
            "properties": {
              "description": {
                "type": "string",
                "description": "The description of the activity"
              },
              "photos": {
                "$ref": "#/components/schemas/PhotosSummary"
              },
              "gear": {
                "$ref": "#/components/schemas/SummaryGear"
              },
              "calories": {
                "type": "number",
                "format": "float",
                "description": "The number of kilocalories consumed during this activity"
              },
              "segment_efforts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DetailedSegmentEffort"
                }
              },
              "device_name": {
                "type": "string",
                "description": "The name of the device used to record the activity"
              },
              "embed_token": {
                "type": "string",
                "description": "The token used to embed a Strava activity"
              },
              "splits_metric": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Split"
                },
                "description": "The splits of this activity in metric units (for runs)"
              },
              "splits_standard": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Split"
                },
                "description": "The splits of this activity in imperial units (for runs)"
              },
              "laps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Lap"
                }
              },
              "best_efforts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DetailedSegmentEffort"
                }
              }
            }
          }
        ]
      },
      "UpdatableActivity": {
        "type": "object",
        "properties": {
          "commute": {
            "type": "boolean",
            "description": "Whether this activity is a commute"
          },
          "trainer": {
            "type": "boolean",
            "description": "Whether this activity was recorded on a training machine"
          },
          "hide_from_home": {
            "type": "boolean",
            "description": "Whether this activity is muted"
          },
          "description": {
            "type": "string",
            "description": "The description of the activity"
          },
          "name": {
            "type": "string",
            "description": "The name of the activity"
          },
          "type": {
            "$ref": "#/components/schemas/ActivityType",
            "description": "Deprecated. Prefer to use sport_type. In a request where both type and sport_type are present, this field will be ignored"
          },
          "sport_type": {
            "$ref": "#/components/schemas/SportType"
          },
          "gear_id": {
            "type": "string",
            "description": "Identifier for the gear associated with the activity. ‘none’ clears gear from activity"
          }
        }
      },
      "SummaryAthlete": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MetaAthlete"
          },
          {
            "properties": {
              "resource_state": {
                "type": "integer",
                "description": "Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\""
              },
              "firstname": {
                "type": "string",
                "description": "The athlete's first name."
              },
              "lastname": {
                "type": "string",
                "description": "The athlete's last name."
              },
              "profile_medium": {
                "type": "string",
                "description": "URL to a 62x62 pixel profile picture."
              },
              "profile": {
                "type": "string",
                "description": "URL to a 124x124 pixel profile picture."
              },
              "city": {
                "type": "string",
                "description": "The athlete's city."
              },
              "state": {
                "type": "string",
                "description": "The athlete's state or geographical region."
              },
              "country": {
                "type": "string",
                "description": "The athlete's country."
              },
              "sex": {
                "type": "string",
                "description": "The athlete's sex.",
                "enum": [
                  "M",
                  "F"
                ]
              },
              "premium": {
                "type": "boolean",
                "description": "Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription."
              },
              "summit": {
                "type": "boolean",
                "description": "Whether the athlete has any Summit subscription."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the athlete was created."
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the athlete was last updated."
              }
            }
          }
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of this comment"
          },
          "activity_id": {
            "type": "integer",
            "format": "int64",
            "description": "The identifier of the activity this comment is related to"
          },
          "text": {
            "type": "string",
            "description": "The content of the comment"
          },
          "athlete": {
            "$ref": "#/components/schemas/SummaryAthlete"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this comment was created."
          }
        }
      },
      "BaseStream": {
        "type": "object",
        "properties": {
          "original_size": {
            "type": "integer",
            "description": "The number of data points in this stream"
          },
          "resolution": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "description": "The level of detail (sampling) in which this stream was returned"
          },
          "series_type": {
            "type": "string",
            "enum": [
              "distance",
              "time"
            ],
            "description": "The base series used in the case the stream was downsampled"
          }
        }
      },
      "TimeStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "The sequence of time values for this stream, in seconds"
              }
            }
          }
        ]
      },
      "DistanceStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                },
                "description": "The sequence of distance values for this stream, in meters"
              }
            }
          }
        ]
      },
      "LatLngStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LatLng"
                },
                "description": "The sequence of lat/long values for this stream"
              }
            }
          }
        ]
      },
      "AltitudeStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                },
                "description": "The sequence of altitude values for this stream, in meters"
              }
            }
          }
        ]
      },
      "SmoothVelocityStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                },
                "description": "The sequence of velocity values for this stream, in meters per second"
              }
            }
          }
        ]
      },
      "HeartrateStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "The sequence of heart rate values for this stream, in beats per minute"
              }
            }
          }
        ]
      },
      "CadenceStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "The sequence of cadence values for this stream, in rotations per minute"
              }
            }
          }
        ]
      },
      "PowerStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "The sequence of power values for this stream, in watts"
              }
            }
          }
        ]
      },
      "TemperatureStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "The sequence of temperature values for this stream, in celsius degrees"
              }
            }
          }
        ]
      },
      "MovingStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "boolean"
                },
                "description": "The sequence of moving values for this stream, as boolean values"
              }
            }
          }
        ]
      },
      "SmoothGradeStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStream"
          },
          {
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                },
                "description": "The sequence of grade values for this stream, as percents of a grade"
              }
            }
          }
        ]
      },
      "StreamSet": {
        "type": "object",
        "properties": {
          "time": {
            "$ref": "#/components/schemas/TimeStream"
          },
          "distance": {
            "$ref": "#/components/schemas/DistanceStream"
          },
          "latlng": {
            "$ref": "#/components/schemas/LatLngStream"
          },
          "altitude": {
            "$ref": "#/components/schemas/AltitudeStream"
          },
          "velocity_smooth": {
            "$ref": "#/components/schemas/SmoothVelocityStream"
          },
          "heartrate": {
            "$ref": "#/components/schemas/HeartrateStream"
          },
          "cadence": {
            "$ref": "#/components/schemas/CadenceStream"
          },
          "watts": {
            "$ref": "#/components/schemas/PowerStream"
          },
          "temp": {
            "$ref": "#/components/schemas/TemperatureStream"
          },
          "moving": {
            "$ref": "#/components/schemas/MovingStream"
          },
          "grade_smooth": {
            "$ref": "#/components/schemas/SmoothGradeStream"
          }
        }
      },
      "ZoneRange": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "The minimum value in the range."
          },
          "max": {
            "type": "integer",
            "description": "The maximum value in the range."
          }
        }
      },
      "TimedZoneRange": {
        "description": "A union type representing the time spent in a given zone.",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneRange"
          },
          {
            "properties": {
              "time": {
                "type": "integer",
                "description": "The number of seconds spent in this zone"
              }
            }
          }
        ]
      },
      "TimedZoneDistribution": {
        "type": "array",
        "description": "Stores the exclusive ranges representing zones and the time spent in each.",
        "items": {
          "$ref": "#/components/schemas/TimedZoneRange"
        }
      },
      "ActivityZone": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer"
          },
          "distribution_buckets": {
            "$ref": "#/components/schemas/TimedZoneDistribution"
          },
          "type": {
            "type": "string",
            "enum": [
              "heartrate",
              "power"
            ]
          },
          "sensor_based": {
            "type": "boolean"
          },
          "points": {
            "type": "integer"
          },
          "custom_zones": {
            "type": "boolean"
          },
          "max": {
            "type": "integer"
          }
        }
      },
      "MetaClub": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The club's unique identifier."
          },
          "resource_state": {
            "type": "integer",
            "description": "Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\""
          },
          "name": {
            "type": "string",
            "description": "The club's name."
          }
        }
      },
      "SummaryClub": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MetaClub"
          },
          {
            "properties": {
              "profile_medium": {
                "type": "string",
                "description": "URL to a 60x60 pixel profile picture."
              },
              "cover_photo": {
                "type": "string",
                "description": "URL to a ~1185x580 pixel cover photo."
              },
              "cover_photo_small": {
                "type": "string",
                "description": "URL to a ~360x176  pixel cover photo."
              },
              "sport_type": {
                "type": "string",
                "enum": [
                  "cycling",
                  "running",
                  "triathlon",
                  "other"
                ],
                "description": "Deprecated. Prefer to use activity_types."
              },
              "activity_types": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityType"
                },
                "description": "The activity types that count for a club. This takes precedence over sport_type."
              },
              "city": {
                "type": "string",
                "description": "The club's city."
              },
              "state": {
                "type": "string",
                "description": "The club's state or geographical region."
              },
              "country": {
                "type": "string",
                "description": "The club's country."
              },
              "private": {
                "type": "boolean",
                "description": "Whether the club is private."
              },
              "member_count": {
                "type": "integer",
                "description": "The club's member count."
              },
              "featured": {
                "type": "boolean",
                "description": "Whether the club is featured or not."
              },
              "verified": {
                "type": "boolean",
                "description": "Whether the club is verified or not."
              },
              "url": {
                "type": "string",
                "description": "The club's vanity URL."
              }
            }
          }
        ]
      },
      "DetailedAthlete": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SummaryAthlete"
          },
          {
            "properties": {
              "follower_count": {
                "type": "integer",
                "description": "The athlete's follower count."
              },
              "friend_count": {
                "type": "integer",
                "description": "The athlete's friend count."
              },
              "measurement_preference": {
                "type": "string",
                "enum": [
                  "feet",
                  "meters"
                ],
                "description": "The athlete's preferred unit system."
              },
              "ftp": {
                "type": "integer",
                "description": "The athlete's FTP (Functional Threshold Power)."
              },
              "weight": {
                "type": "number",
                "format": "float",
                "description": "The athlete's weight."
              },
              "clubs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SummaryClub"
                },
                "description": "The athlete's clubs."
              },
              "bikes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SummaryGear"
                },
                "description": "The athlete's bikes."
              },
              "shoes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SummaryGear"
                },
                "description": "The athlete's shoes."
              }
            }
          }
        ]
      },
      "ZoneRanges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ZoneRange"
        }
      },
      "HeartRateZoneRanges": {
        "type": "object",
        "properties": {
          "custom_zones": {
            "type": "boolean",
            "description": "Whether the athlete has set their own custom heart rate zones"
          },
          "zones": {
            "$ref": "#/components/schemas/ZoneRanges"
          }
        }
      },
      "PowerZoneRanges": {
        "type": "object",
        "properties": {
          "zones": {
            "$ref": "#/components/schemas/ZoneRanges"
          }
        }
      },
      "Zones": {
        "type": "object",
        "properties": {
          "heart_rate": {
            "$ref": "#/components/schemas/HeartRateZoneRanges"
          },
          "power": {
            "$ref": "#/components/schemas/PowerZoneRanges"
          }
        }
      },
      "Waypoint": {
        "type": "object",
        "properties": {
          "latlng": {
            "$ref": "#/components/schemas/LatLng",
            "description": "The location along the route that the waypoint is closest to"
          },
          "target_latlng": {
            "$ref": "#/components/schemas/LatLng",
            "description": "A location off of the route that the waypoint is (optional)"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "description": "Categories that the waypoint belongs to"
          },
          "title": {
            "type": "string",
            "description": "A title for the waypoint"
          },
          "description": {
            "type": "string",
            "description": "A description of the waypoint (optional)"
          },
          "distance_into_route": {
            "type": "integer",
            "description": "The number meters along the route that the waypoint is located"
          }
        }
      },
      "Route": {
        "type": "object",
        "properties": {
          "athlete": {
            "$ref": "#/components/schemas/SummaryAthlete"
          },
          "description": {
            "type": "string",
            "description": "The description of the route"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The route's distance, in meters"
          },
          "elevation_gain": {
            "type": "number",
            "format": "float",
            "description": "The route's elevation gain."
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of this route"
          },
          "id_str": {
            "type": "string",
            "description": "The unique identifier of the route in string format"
          },
          "map": {
            "$ref": "#/components/schemas/PolylineMap"
          },
          "name": {
            "type": "string",
            "description": "The name of this route"
          },
          "private": {
            "type": "boolean",
            "description": "Whether this route is private"
          },
          "starred": {
            "type": "boolean",
            "description": "Whether this route is starred by the logged-in athlete"
          },
          "timestamp": {
            "type": "integer",
            "description": "An epoch timestamp of when the route was created"
          },
          "type": {
            "type": "integer",
            "description": "This route's type (1 for ride, 2 for runs)"
          },
          "sub_type": {
            "type": "integer",
            "description": "This route's sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the route was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the route was last updated"
          },
          "estimated_moving_time": {
            "type": "integer",
            "description": "Estimated time in seconds for the authenticated athlete to complete route"
          },
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummarySegment"
            },
            "description": "The segments traversed by this route"
          },
          "waypoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Waypoint"
            },
            "minItems": 0,
            "description": "The custom waypoints along this route"
          }
        }
      },
      "ActivityTotal": {
        "type": "object",
        "description": "A roll-up of metrics pertaining to a set of activities. Values are in seconds and meters.",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of activities considered in this total."
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The total distance covered by the considered activities."
          },
          "moving_time": {
            "type": "integer",
            "description": "The total moving time of the considered activities."
          },
          "elapsed_time": {
            "type": "integer",
            "description": "The total elapsed time of the considered activities."
          },
          "elevation_gain": {
            "type": "number",
            "format": "float",
            "description": "The total elevation gain of the considered activities."
          },
          "achievement_count": {
            "type": "integer",
            "description": "The total number of achievements of the considered activities."
          }
        }
      },
      "ActivityStats": {
        "description": "A set of rolled-up statistics and totals for an athlete",
        "properties": {
          "biggest_ride_distance": {
            "type": "number",
            "format": "double",
            "description": "The longest distance ridden by the athlete."
          },
          "biggest_climb_elevation_gain": {
            "type": "number",
            "format": "double",
            "description": "The highest climb ridden by the athlete."
          },
          "recent_ride_totals": {
            "description": "The recent (last 4 weeks) ride stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "recent_run_totals": {
            "description": "The recent (last 4 weeks) run stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "recent_swim_totals": {
            "description": "The recent (last 4 weeks) swim stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "ytd_ride_totals": {
            "description": "The year to date ride stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "ytd_run_totals": {
            "description": "The year to date run stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "ytd_swim_totals": {
            "description": "The year to date swim stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "all_ride_totals": {
            "description": "The all time ride stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "all_run_totals": {
            "description": "The all time run stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          },
          "all_swim_totals": {
            "description": "The all time swim stats for the athlete.",
            "$ref": "#/components/schemas/ActivityTotal"
          }
        }
      },
      "DetailedClub": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SummaryClub"
          },
          {
            "properties": {
              "membership": {
                "type": "string",
                "enum": [
                  "member",
                  "pending"
                ],
                "description": "The membership status of the logged-in athlete."
              },
              "admin": {
                "type": "boolean",
                "description": "Whether the currently logged-in athlete is an administrator of this club."
              },
              "owner": {
                "type": "boolean",
                "description": "Whether the currently logged-in athlete is the owner of this club."
              },
              "following_count": {
                "type": "integer",
                "description": "The number of athletes in the club that the logged-in athlete follows."
              }
            }
          }
        ]
      },
      "ClubActivity": {
        "type": "object",
        "properties": {
          "athlete": {
            "$ref": "#/components/schemas/MetaAthlete"
          },
          "name": {
            "type": "string",
            "description": "The name of the activity"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The activity's distance, in meters"
          },
          "moving_time": {
            "type": "integer",
            "description": "The activity's moving time, in seconds"
          },
          "elapsed_time": {
            "type": "integer",
            "description": "The activity's elapsed time, in seconds"
          },
          "total_elevation_gain": {
            "type": "number",
            "format": "float",
            "description": "The activity's total elevation gain."
          },
          "type": {
            "$ref": "#/components/schemas/ActivityType",
            "description": "Deprecated. Prefer to use sport_type"
          },
          "sport_type": {
            "$ref": "#/components/schemas/SportType"
          },
          "workout_type": {
            "type": "integer",
            "description": "The activity's workout type"
          }
        }
      },
      "ClubAthlete": {
        "type": "object",
        "properties": {
          "resource_state": {
            "type": "integer",
            "description": "Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\""
          },
          "firstname": {
            "type": "string",
            "description": "The athlete's first name."
          },
          "lastname": {
            "type": "string",
            "description": "The athlete's last initial."
          },
          "member": {
            "type": "string",
            "description": "The athlete's member status."
          },
          "admin": {
            "type": "boolean",
            "description": "Whether the athlete is a club admin."
          },
          "owner": {
            "type": "boolean",
            "description": "Whether the athlete is club owner."
          }
        }
      },
      "DetailedGear": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SummaryGear"
          },
          {
            "properties": {
              "brand_name": {
                "type": "string",
                "description": "The gear's brand name."
              },
              "model_name": {
                "type": "string",
                "description": "The gear's model name."
              },
              "frame_type": {
                "type": "integer",
                "description": "The gear's frame type (bike only)."
              },
              "description": {
                "type": "string",
                "description": "The gear's description."
              }
            }
          }
        ]
      },
      "ExplorerSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of this segment"
          },
          "name": {
            "type": "string",
            "description": "The name of this segment"
          },
          "climb_category": {
            "type": "integer",
            "description": "The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category. If climb_category = 5, climb_category_desc = HC. If climb_category = 2, climb_category_desc = 3.",
            "minimum": 0,
            "maximum": 5
          },
          "climb_category_desc": {
            "type": "string",
            "description": "The description for the category of the climb",
            "enum": [
              "NC",
              "4",
              "3",
              "2",
              "1",
              "HC"
            ]
          },
          "avg_grade": {
            "type": "number",
            "format": "float",
            "description": "The segment's average grade, in percents"
          },
          "start_latlng": {
            "$ref": "#/components/schemas/LatLng"
          },
          "end_latlng": {
            "$ref": "#/components/schemas/LatLng"
          },
          "elev_difference": {
            "type": "number",
            "format": "float",
            "description": "The segments's evelation difference, in meters"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "The segment's distance, in meters"
          },
          "points": {
            "type": "string",
            "description": "The polyline of the segment"
          }
        }
      },
      "ExplorerResponse": {
        "type": "object",
        "properties": {
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplorerSegment"
            },
            "description": "The set of segments matching an explorer request"
          }
        }
      },
      "DetailedSegment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SummarySegment"
          },
          {
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the segment was created."
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the segment was last updated."
              },
              "total_elevation_gain": {
                "type": "number",
                "format": "float",
                "description": "The segment's total elevation gain."
              },
              "map": {
                "$ref": "#/components/schemas/PolylineMap"
              },
              "effort_count": {
                "type": "integer",
                "description": "The total number of efforts for this segment"
              },
              "athlete_count": {
                "type": "integer",
                "description": "The number of unique athletes who have an effort for this segment"
              },
              "hazardous": {
                "type": "boolean",
                "description": "Whether this segment is considered hazardous"
              },
              "star_count": {
                "type": "integer",
                "description": "The number of stars for this segment"
              }
            }
          }
        ]
      },
      "Upload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of the upload"
          },
          "id_str": {
            "type": "string",
            "description": "The unique identifier of the upload in string format"
          },
          "external_id": {
            "type": "string",
            "description": "The external identifier of the upload"
          },
          "error": {
            "type": "string",
            "description": "The error associated with this upload"
          },
          "status": {
            "type": "string",
            "description": "The status of this upload"
          },
          "activity_id": {
            "type": "integer",
            "format": "int64",
            "description": "The identifier of the activity this upload resulted into"
          }
        }
      }
    }
  },
  "security": [
    {
      "strava_oauth": [
        "public"
      ]
    }
  ]
}