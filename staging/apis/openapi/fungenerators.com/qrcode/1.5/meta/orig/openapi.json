{
  "openapi": "3.0.0",
  "info": {
    "termsOfService": "https://fungenerators.com/terms",
    "description": "Fungenerators API gives access to the full set of generators available at fungenerators.com so that you can integrate them in your workflow or an app. [Click here to get details and subscribe](http://fungenerators.com/api) . Here are the individual API links:\n\n  ## QR Code API ##\n  Generate QR Code images for text, url, email , business cards etc. You can decode QR Code images and get the contents as well. The best and complete QR Code API on the cloud. [Click here to subscribe](http://fungenerators.com/api/qrcode)\n",
    "title": "Fun Generators API",
    "version": "1.5",
    "contact": {
      "name": "Fun Generators",
      "url": "http://fungenerators.com/"
    },
    "x-jentic-source-url": "https://fungenerators.com/yaml/qrcode.yaml"
  },
  "tags": [
    {
      "name": "QR Code",
      "description": "QR code API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://fungenerators.com/api/qrcode"
      }
    }
  ],
  "paths": {
    "/qrcode/text": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for a block of text",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "Text value",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/eps/raw/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/raw": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for a block of raw data",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "Raw Text value",
            "format": "string",
            "in": "query",
            "name": "rawtext",
            "required": true,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/eps/raw/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/url": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for a url",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "URL value",
            "format": "string",
            "in": "query",
            "name": "url",
            "required": true,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/raw/eps/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/phone": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for a phone number",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "Phone Number",
            "format": "string",
            "in": "query",
            "name": "number",
            "required": true,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/eps/raw/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/sms": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for a Phone number for SMS messaging",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "Phone Number to SMS",
            "format": "string",
            "in": "query",
            "name": "number",
            "required": true,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/eps/raw/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/skype": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for a skype user",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "Skype User name",
            "format": "string",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/eps/raw/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/email": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for an email",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "Email id to send the email to",
            "format": "string",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "description": "Subject of the email(optional)",
            "format": "string",
            "in": "query",
            "name": "subject",
            "required": false,
            "type": "string"
          },
          {
            "description": "Body of the email(optional)",
            "format": "string",
            "in": "query",
            "name": "body",
            "required": false,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/png/eps/raw/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/business_card": {
      "get": {
        "tags": [
          "QR Code"
        ],
        "description": "Get a QR Code image for a business card aka VCARD",
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "First Name",
            "format": "string",
            "in": "query",
            "name": "firstname",
            "required": true,
            "type": "string"
          },
          {
            "description": "Last Name",
            "format": "string",
            "in": "query",
            "name": "lastname",
            "required": true,
            "type": "string"
          },
          {
            "description": "Middle Name",
            "format": "string",
            "in": "query",
            "name": "middlename",
            "required": false,
            "type": "string"
          },
          {
            "description": "Email id",
            "format": "string",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "description": "Company Name",
            "format": "string",
            "in": "query",
            "name": "company",
            "required": false,
            "type": "string"
          },
          {
            "description": "Work Phone Number",
            "format": "string",
            "in": "query",
            "name": "phone_work",
            "required": false,
            "type": "string"
          },
          {
            "description": "Home Phone Number",
            "format": "string",
            "in": "query",
            "name": "phone_home",
            "required": false,
            "type": "string"
          },
          {
            "description": "Cell Phone Number",
            "format": "string",
            "in": "query",
            "name": "phone_cell",
            "required": false,
            "type": "string"
          },
          {
            "description": "Street Address",
            "format": "string",
            "in": "query",
            "name": "street1",
            "required": false,
            "type": "string"
          },
          {
            "description": "Street Address 2",
            "format": "string",
            "in": "query",
            "name": "street2",
            "required": false,
            "type": "string"
          },
          {
            "description": "City",
            "format": "string",
            "in": "query",
            "name": "city",
            "required": false,
            "type": "string"
          },
          {
            "description": "Zip Code",
            "format": "string",
            "in": "query",
            "name": "zip",
            "required": false,
            "type": "string"
          },
          {
            "description": "State",
            "format": "string",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Country",
            "format": "string",
            "in": "query",
            "name": "country",
            "required": false,
            "type": "string"
          },
          {
            "description": "Output image format. Must be one of png/eps/raw/svg",
            "format": "string",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": [\n        {\n            \"encoding\": \"base64\",\n            \"format\": \"png\",\n            \"content\": \"base64 encoded image file\",\n        }\n    ]\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        }
      }
    },
    "/qrcode/decode": {
      "post": {
        "description": "Decode a QR Code image and return the cotents if successful",
        "tags": [
          "QR Code"
        ],
        "consumes": [
          "mulitpart/form-data",
          "mulitpart/form-data-endcoded",
          "application/x-www-form-urlencoded"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "description": "QR Code image to decode and get the content value",
            "in": "formData",
            "name": "qrimage",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n      \"content_value\": \"http://fungenerators.com/qr-code/\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}              "
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.fungenerators.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "X-Fungenerators-Api-Secret": {
        "type": "apiKey",
        "name": "X-Fungenerators-Api-Secret",
        "in": "header"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer token authentication"
      }
    }
  }
}