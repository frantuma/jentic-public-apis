{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "dhieber@umail.ucsb.edu",
      "name": "Daniel W. Hieber",
      "url": "http://danielhieber.com/"
    },
    "description": "The Digital Linguistics (DLx) REST API",
    "license": {
      "name": "MIT"
    },
    "title": "DLx",
    "version": "0.3.1",
    "x-jentic-source-url": "https://raw.githubusercontent.com/digitallinguistics/api/master/public/swagger/swagger.json"
  },
  "servers": [
    {
      "url": "https://api.digitallinguistics.io/v0"
    }
  ],
  "paths": {
    "/languages": {
      "get": {
        "parameters": [
          {
            "description": "The `dlx-continuation` header is used to send a continuation token with the request, when retrieving the next page of results.",
            "in": "header",
            "name": "continuation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Setting the `deleted` option to `true` will return results that have been marked for deletion, but not yet deleted from the database. Otherwise requests for a resource marked for deletion will return a 410 error.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The `If-Modified-Since` header is used to retrieve only results modified since a given time. The value of this header must be a valid date string.",
            "in": "header",
            "name": "ifModifiedSince",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `dlx-max-item-count` header is used to limit the number of results to a certain amount at a time (by default all results will be returned). If there are more results to be returned, a continuation token will also be sent in the `dlx-continuation` header.",
            "in": "header",
            "name": "maxItemCount",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Set this parameter to `true` to include all publicly-accessible resources, not just those that the user is listed as an Owner, Contributor, or Viewer for.",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "default": "false",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Operation successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-continuation": {
                "description": "A continuation token for retrieving more results",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-item-count": {
                "description": "The number of items returned in the response",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Language"
        ],
        "description": "Retrieves all the Languages that the authenticated user or client has permission to access.",
        "operationId": "getLanguages",
        "summary": "Get all Languages"
      },
      "post": {
        "responses": {
          "201": {
            "description": "201: The resource was created successfully.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Language"
        ],
        "operationId": "addLanguage",
        "requestBody": {
          "$ref": "#/components/requestBodies/addLanguageBody"
        },
        "summary": "Add a new Language"
      },
      "put": {
        "parameters": [
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201: Upsert successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Language"
        ],
        "description": "Creates a Language if it does not yet exist (i.e. if the resource does not have an `id` property yet), or replaces the existing Language resource if it does. Note that this replaces the *entire* Language. It is not a partial update.",
        "operationId": "upsertLanguage",
        "requestBody": {
          "$ref": "#/components/requestBodies/addLanguageBody"
        },
        "summary": "Upsert (create or replace) a Language"
      }
    },
    "/languages/{languageID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204: Delete operation successful."
          }
        },
        "tags": [
          "Language"
        ],
        "operationId": "deleteLanguage",
        "summary": "Delete a Language by ID"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Setting the `deleted` option to `true` will return results that have been marked for deletion, but not yet deleted from the database. Otherwise requests for a resource marked for deletion will return a 410 error.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If `If-None-Match` header is used with GET requests to check whether you already have the most up-to-date version of the resource, and therefore do not need the resource sent again. The value of the `If-None-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to reduce bandwidth.",
            "in": "header",
            "name": "ifNoneMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Operation successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-continuation": {
                "description": "A continuation token for retrieving more results",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-item-count": {
                "description": "The number of items returned in the response",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "304: Not modified."
          }
        },
        "tags": [
          "Language"
        ],
        "operationId": "getLanguage",
        "summary": "Retrieve a Language by ID"
      },
      "patch": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Update successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Language"
        ],
        "description": "Performs a partial update the Language whose ID is specified in the URL. If the Language object has an `id` property, is ignored in favor of the ID in the URL.",
        "operationId": "updateLanguage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "A database resource to upsert",
          "required": true
        },
        "summary": "Perform a partial update on a Language"
      }
    },
    "/languages/{languageID}/lexemes": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `dlx-continuation` header is used to send a continuation token with the request, when retrieving the next page of results.",
            "in": "header",
            "name": "continuation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Setting the `deleted` option to `true` will return results that have been marked for deletion, but not yet deleted from the database. Otherwise requests for a resource marked for deletion will return a 410 error.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The `If-Modified-Since` header is used to retrieve only results modified since a given time. The value of this header must be a valid date string.",
            "in": "header",
            "name": "ifModifiedSince",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `dlx-max-item-count` header is used to limit the number of results to a certain amount at a time (by default all results will be returned). If there are more results to be returned, a continuation token will also be sent in the `dlx-continuation` header.",
            "in": "header",
            "name": "maxItemCount",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Set this parameter to `true` to include all publicly-accessible resources, not just those that the user is listed as an Owner, Contributor, or Viewer for.",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "default": "false",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Operation successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-continuation": {
                "description": "A continuation token for retrieving more results",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-item-count": {
                "description": "The number of items returned in the response",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Language",
          "Lexeme"
        ],
        "operationId": "getLexemesByLanguage",
        "summary": "Get all Lexemes for a Language"
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201: The resource was created successfully.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Language",
          "Lexeme"
        ],
        "operationId": "addLexemeByLanguage",
        "summary": "Add a new Lexeme to a Language"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201: Upsert successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Language",
          "Lexeme"
        ],
        "operationId": "upsertLexemeByLanguage",
        "summary": "Upsert (add or replace) a Lexeme"
      }
    },
    "/languages/{languageID}/lexemes/{lexemeID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Lexeme to perform the operation on",
            "in": "path",
            "name": "lexemeID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204: Delete operation successful."
          }
        },
        "tags": [
          "Language",
          "Lexeme"
        ],
        "operationId": "deleteLexemeByLanguage",
        "summary": "Delete a Lexeme by ID"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Lexeme to perform the operation on",
            "in": "path",
            "name": "lexemeID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Setting the `deleted` option to `true` will return results that have been marked for deletion, but not yet deleted from the database. Otherwise requests for a resource marked for deletion will return a 410 error.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If `If-None-Match` header is used with GET requests to check whether you already have the most up-to-date version of the resource, and therefore do not need the resource sent again. The value of the `If-None-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to reduce bandwidth.",
            "in": "header",
            "name": "ifNoneMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Operation successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-continuation": {
                "description": "A continuation token for retrieving more results",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-item-count": {
                "description": "The number of items returned in the response",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "304: Not modified."
          }
        },
        "tags": [
          "Language",
          "Lexeme"
        ],
        "operationId": "getLexemeByLanguage",
        "summary": "Get a Lexeme by ID"
      },
      "patch": {
        "parameters": [
          {
            "description": "The ID of the Language to perform the operation on",
            "in": "path",
            "name": "languageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Lexeme to perform the operation on",
            "in": "path",
            "name": "lexemeID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Update successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Lexeme"
        ],
        "operationId": "updateLexemeByLanguage",
        "summary": "Perform a partial update on a Lexeme"
      }
    },
    "/lexemes": {
      "get": {
        "parameters": [
          {
            "description": "The `dlx-continuation` header is used to send a continuation token with the request, when retrieving the next page of results.",
            "in": "header",
            "name": "continuation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Setting the `deleted` option to `true` will return results that have been marked for deletion, but not yet deleted from the database. Otherwise requests for a resource marked for deletion will return a 410 error.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The `If-Modified-Since` header is used to retrieve only results modified since a given time. The value of this header must be a valid date string.",
            "in": "header",
            "name": "ifModifiedSince",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "The ID of the Language to perform the operation on",
            "in": "query",
            "name": "languageID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `dlx-max-item-count` header is used to limit the number of results to a certain amount at a time (by default all results will be returned). If there are more results to be returned, a continuation token will also be sent in the `dlx-continuation` header.",
            "in": "header",
            "name": "maxItemCount",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Set this parameter to `true` to include all publicly-accessible resources, not just those that the user is listed as an Owner, Contributor, or Viewer for.",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "default": "false",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Operation successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-continuation": {
                "description": "A continuation token for retrieving more results",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-item-count": {
                "description": "The number of items returned in the response",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Lexeme"
        ],
        "description": "Retrieve all Lexemes that the authenticated user has permission to access. Include a `languageID` query parameter to limit results to Lexemes from a particular Language.",
        "operationId": "getLexemes",
        "summary": "Get all Lexemes"
      },
      "post": {
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "The ID of the Language to perform the operation on",
            "in": "query",
            "name": "languageID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201: The resource was created successfully.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Lexeme"
        ],
        "description": "Add a new Lexeme. A `languageID` must be provided either as a query parameter, or as an attribute on the Lexeme body.",
        "operationId": "addLexeme",
        "summary": "Add a new Lexeme"
      },
      "put": {
        "parameters": [
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "The ID of the Language to perform the operation on",
            "in": "query",
            "name": "languageID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201: Upsert successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Lexeme"
        ],
        "description": "Upsert (add or replace) a Lexeme. A `languageID` must be provided either as a query parameter, or as an attribute on the Lexeme body.",
        "operationId": "upsertLexeme",
        "summary": "Upsert (add or replace) a Lexeme"
      }
    },
    "/lexemes/{lexemeID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Lexeme to perform the operation on",
            "in": "path",
            "name": "lexemeID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204: Delete operation successful."
          }
        },
        "tags": [
          "Lexeme"
        ],
        "operationId": "deleteLexeme",
        "summary": "Delete a Lexeme by ID"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Lexeme to perform the operation on",
            "in": "path",
            "name": "lexemeID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Setting the `deleted` option to `true` will return results that have been marked for deletion, but not yet deleted from the database. Otherwise requests for a resource marked for deletion will return a 410 error.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If `If-None-Match` header is used with GET requests to check whether you already have the most up-to-date version of the resource, and therefore do not need the resource sent again. The value of the `If-None-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to reduce bandwidth.",
            "in": "header",
            "name": "ifNoneMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Operation successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-continuation": {
                "description": "A continuation token for retrieving more results",
                "schema": {
                  "type": "string"
                }
              },
              "dlx-item-count": {
                "description": "The number of items returned in the response",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "304: Not modified."
          }
        },
        "tags": [
          "Lexeme"
        ],
        "operationId": "getLexeme",
        "summary": "Get a Lexeme by ID"
      },
      "patch": {
        "parameters": [
          {
            "description": "The ID of the Lexeme to perform the operation on",
            "in": "path",
            "name": "lexemeID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
            "in": "header",
            "name": "ifMatch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200: Update successful.",
            "headers": {
              "Last-Modified": {
                "description": "The time that the item was last modified",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Lexeme"
        ],
        "description": "Perform a partial update on a Lexeme.",
        "operationId": "updateLexeme",
        "summary": "Perform a partial update on a Lexeme"
      }
    }
  },
  "components": {
    "parameters": {
      "continuation": {
        "description": "The `dlx-continuation` header is used to send a continuation token with the request, when retrieving the next page of results.",
        "in": "header",
        "name": "continuation",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "deleted": {
        "description": "Setting the `deleted` option to `true` will return results that have been marked for deletion, but not yet deleted from the database. Otherwise requests for a resource marked for deletion will return a 410 error.",
        "in": "query",
        "name": "deleted",
        "required": false,
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "ifMatch": {
        "description": "The `If-Match` header is used with PUT and DELETE requests to check whether you have the most up-to-date version of the resource before updating or deleting it. The value of the `If-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to avoid data conflicts.",
        "in": "header",
        "name": "ifMatch",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "ifModifiedSince": {
        "description": "The `If-Modified-Since` header is used to retrieve only results modified since a given time. The value of this header must be a valid date string.",
        "in": "header",
        "name": "ifModifiedSince",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "ifNoneMatch": {
        "description": "If `If-None-Match` header is used with GET requests to check whether you already have the most up-to-date version of the resource, and therefore do not need the resource sent again. The value of the `If-None-Match` header is the ETag (`_etag`) property of the resource. It is recommended that your application use this header whenever possible to reduce bandwidth.",
        "in": "header",
        "name": "ifNoneMatch",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "languageID": {
        "description": "The ID of the Language to perform the operation on",
        "in": "path",
        "name": "languageID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "languageIDQuery": {
        "allowEmptyValue": true,
        "description": "The ID of the Language to perform the operation on",
        "in": "query",
        "name": "languageID",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "lexemeID": {
        "description": "The ID of the Lexeme to perform the operation on",
        "in": "path",
        "name": "lexemeID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "maxItemCount": {
        "description": "The `dlx-max-item-count` header is used to limit the number of results to a certain amount at a time (by default all results will be returned). If there are more results to be returned, a continuation token will also be sent in the `dlx-continuation` header.",
        "in": "header",
        "name": "maxItemCount",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "public": {
        "description": "Set this parameter to `true` to include all publicly-accessible resources, not just those that the user is listed as an Owner, Contributor, or Viewer for.",
        "in": "query",
        "name": "public",
        "required": false,
        "schema": {
          "default": "false",
          "type": "string"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "400: There was a problem with the request."
      },
      "Conflict": {
        "description": "409: There was a data conflict in the database."
      },
      "Created": {
        "description": "201: The resource was created successfully.",
        "headers": {
          "Last-Modified": {
            "description": "The time that the item was last modified",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "DeleteSuccessful": {
        "description": "204: Delete operation successful."
      },
      "Forbidden": {
        "description": "403: Unauthorized."
      },
      "LargePayload": {
        "description": "413: Request payload is too large."
      },
      "MethodNotAllowed": {
        "description": "405: Method not allowed."
      },
      "NotAcceptable": {
        "description": "406: Cannot return data in requested format."
      },
      "NotFound": {
        "description": "404: Database resource not found."
      },
      "NotImplemented": {
        "description": "501: This feature is not yet implemented."
      },
      "NotModified": {
        "description": "304: Not modified."
      },
      "PreconditionFailed": {
        "description": "412: A precondition for the operation was not met."
      },
      "RetryOperation": {
        "description": "449: Retry the operation"
      },
      "ServerError": {
        "description": "500: An error occurred on the server."
      },
      "Success": {
        "description": "200: Operation successful.",
        "headers": {
          "Last-Modified": {
            "description": "The time that the item was last modified",
            "schema": {
              "type": "string"
            }
          },
          "dlx-continuation": {
            "description": "A continuation token for retrieving more results",
            "schema": {
              "type": "string"
            }
          },
          "dlx-item-count": {
            "description": "The number of items returned in the response",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "Timeout": {
        "description": "408: The request timed out."
      },
      "TokenExpired": {
        "description": "419: Access token expired."
      },
      "TooManyRequests": {
        "description": "429: Too many requests."
      },
      "Unauthorized": {
        "description": "401: Authorization missing or invalid.",
        "headers": {
          "WWW-Authenticate": {
            "description": "An access token is required.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "Unprocessable": {
        "description": "422: The data is not properly formatted."
      },
      "UpdateSuccessful": {
        "description": "200: Update successful.",
        "headers": {
          "Last-Modified": {
            "description": "The time that the item was last modified",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "UpsertSuccessful": {
        "description": "201: Upsert successful.",
        "headers": {
          "Last-Modified": {
            "description": "The time that the item was last modified",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "requestBodies": {
      "addLanguageBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "A database resource to upsert",
        "required": true
      }
    },
    "securitySchemes": {
      "Authorization": {
        "description": "An access token (JSON Web Token) included in the `Authorization` header in the format `Bearer {token}`. Tokens may be retrieved programmatically from https://digitallinguistics.auth0.com. See the authorization documentation at http://developer.digitallinguistics.io/api/.",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ],
  "tags": [
    {
      "description": "Operations on Languages",
      "name": "Language"
    },
    {
      "description": "Operations on Lexemes",
      "name": "Lexeme"
    }
  ],
  "externalDocs": {
    "description": "How to use the API",
    "url": "http://developer.digitallinguistics.io/api/"
  }
}