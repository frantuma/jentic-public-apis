{
  "openapi": "3.0.3",
  "info": {
    "title": "Apollo.Io API",
    "version": "1.0.0",
    "description": "API for apollo.io platform",
    "x-jentic-source-url": "https://raw.githubusercontent.com/sophie-jentic/openapi-specs/refs/heads/main/apollo.io/openapi.json"
  },
  "servers": [
    {
      "url": "https://api.apollo.io/api/v1"
    }
  ],
  "paths": {
    "/people/match": {
      "post": {
        "operationId": "enrichPerson",
        "summary": "People Enrichment",
        "description": "Use the People Enrichment endpoint to enrich data for 1 person. Apollo relies on the information you pass via the endpoint's parameters to identify the correct person to enrich. If you provide more information about a person, Apollo is more likely to find a match within its database. By default, this endpoint does not return personal emails or phone numbers. Use the reveal_personal_emails and reveal_phone_number parameters to retrieve emails and phone numbers. Calling this endpoint does consume credits as part of your Apollo pricing plan. This feature is not accessible to Apollo users on free plans.",
        "tags": [
          "Enrichment"
        ],
        "parameters": [
          {
            "name": "first_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The first name of the person. This is typically used in combination with the last_name parameter.",
            "example": "tim"
          },
          {
            "name": "last_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The last name of the person. This is typically used in combination with the first_name parameter.",
            "example": "zheng"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The full name of the person. This will typically be a first name and last name separated by a space. If you use this parameter, you do not need to use the first_name and last_name parameters.",
            "example": "tim zheng"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "The email address of the person.",
            "example": "example@email.com"
          },
          {
            "name": "hashed_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The hashed email of the person. The email should adhere to either the MD5 or SHA-256 hash format.",
            "example": "8d935115b9ff4489f2d1f9249503cadf"
          },
          {
            "name": "organization_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Name of the organization where the person works."
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Domain of the organization where the person works."
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the person. Each person in the Apollo database is assigned a unique ID. To find IDs, call the People Search endpoint and identify the values for person_id.",
            "example": "587cf802f65125cad923a266"
          },
          {
            "name": "linkedin_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URL for the person's LinkedIn profile.",
            "example": "http://www.linkedin.com/in/tim-zheng-677ba010"
          },
          {
            "name": "reveal_personal_emails",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include personal email addresses in the response. By default, this endpoint does not return personal emails."
          },
          {
            "name": "reveal_phone_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include phone numbers in the response. By default, this endpoint does not return phone numbers. When set to true, a webhook_url parameter is required for phone number delivery."
          },
          {
            "name": "webhook_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "Webhook URL where Apollo will deliver the phone number data. Required when reveal_phone_number is set to true. The webhook delivery occurs separately, usually several minutes after a successful API request."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully enriched person data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonEnrichmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/bulk_match": {
      "post": {
        "operationId": "enrichPeopleBulk",
        "summary": "Bulk People Enrichment",
        "description": "Enrich data for up to 10 people with a single API call",
        "tags": [
          "Enrichment"
        ],
        "parameters": [
          {
            "name": "reveal_personal_emails",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to enrich all matched people with personal emails. This potentially consumes credits as part of your Apollo pricing plan. If a person resides in a GDPR-compliant region, Apollo will not reveal their personal email."
          },
          {
            "name": "reveal_phone_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to enrich the data of all matched people with all available phone numbers, including mobile phone numbers. This potentially consumes credits as part of your Apollo pricing plan. If this parameter is set to true, you must enter a webhook URL for the webhook_url parameter."
          },
          {
            "name": "webhook_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "Required when reveal_phone_number is true. Apollo will asynchronously verify phone numbers and send a JSON response with phone number details to this webhook URL. It can take several minutes for the phone numbers to be delivered."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "type": "string",
                          "description": "The first name of the person. This is typically used in combination with the last_name parameter.",
                          "example": "tim"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "The last name of the person. This is typically used in combination with the first_name parameter.",
                          "example": "zheng"
                        },
                        "name": {
                          "type": "string",
                          "description": "The full name of the person. This will typically be a first name and last name separated by a space. If you use this parameter, you do not need to use the first_name and last_name parameters.",
                          "example": "tim zheng"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "The email address of the person.",
                          "example": "example@email.com"
                        },
                        "hashed_email": {
                          "type": "string",
                          "description": "The hashed email of the person. The email should adhere to either the MD5 or SHA-256 hash format.",
                          "example": "8d935115b9ff4489f2d1f9249503cadf"
                        },
                        "organization_name": {
                          "type": "string",
                          "description": "The name of the person's employer. This can be the current employer or a previous employer.",
                          "example": "apollo"
                        },
                        "domain": {
                          "type": "string",
                          "description": "The domain name for the person's employer. This can be the current employer or a previous employer. Do not include www., the @ symbol, or similar.",
                          "example": "apollo.io"
                        },
                        "id": {
                          "type": "string",
                          "description": "The Apollo ID for the person. Each person in the Apollo database is assigned a unique ID. To find IDs, call the People Search endpoint and identify the values for person_id.",
                          "example": "587cf802f65125cad923a266"
                        },
                        "linkedin_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "LinkedIn profile URL of the person"
                        }
                      }
                    },
                    "maxItems": 10,
                    "description": "Array of person details to enrich (up to 10 people). Each object should contain identifying information like name, email, organization, or LinkedIn URL."
                  }
                },
                "required": [
                  "details"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully enriched bulk person data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "error_code": {
                      "type": "string",
                      "nullable": true
                    },
                    "error_message": {
                      "type": "string",
                      "nullable": true
                    },
                    "total_requested_enrichments": {
                      "type": "integer",
                      "description": "Total number of enrichments requested"
                    },
                    "unique_enriched_records": {
                      "type": "integer",
                      "description": "Number of unique records successfully enriched"
                    },
                    "missing_records": {
                      "type": "integer",
                      "description": "Number of records that could not be found"
                    },
                    "credits_consumed": {
                      "type": "integer",
                      "description": "Number of credits consumed for this request"
                    },
                    "matches": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PersonEnrichmentResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/enrich": {
      "get": {
        "operationId": "enrichOrganization",
        "summary": "Enrich data for a single organization",
        "description": "Use this endpoint to enrich data for 1 company. Enriched data potentially includes industry information, revenue, employee counts, funding round details, and corporate phone numbers and locations.",
        "tags": [
          "Enrichment"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain name of the organization to enrich (e.g., apollo.io, microsoft.com). Do not include www., http://, or similar prefixes.",
            "example": "apollo.io"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization enrichment data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationEnrichment"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/bulk_enrich": {
      "post": {
        "operationId": "bulkEnrichOrganizations",
        "summary": "Enrich data for multiple organizations",
        "description": "Enrich data for up to 10 companies with a single API call using domain names",
        "tags": [
          "Enrichment"
        ],
        "parameters": [
          {
            "name": "domains[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "style": "form",
            "explode": true,
            "description": "The domain of each company that you want to enrich. Do not include www., the @ symbol, or similar.",
            "example": [
              "apollo.io",
              "microsoft.com"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Bulk organization enrichment results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOrganizationEnrichmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mixed_people/search": {
      "post": {
        "operationId": "searchPeople",
        "summary": "Search for people",
        "description": "Search for people in the Apollo database with various filters. Consumes credits and limited to 50,000 records (100 per page, up to 500 pages). Not accessible to free plan users.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "person_titles[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Job titles held by the people you want to find. For a person to be included in search results, they only need to match 1 of the job titles you add. Adding more job titles expands your search results. Results also include job titles with the same terms, even if they are not exact matches. Use in combination with person_seniorities[] parameter to find people based on specific job functions and seniority levels.",
            "example": [
              "sales development representative",
              "marketing manager",
              "research analyst"
            ]
          },
          {
            "name": "include_similar_titles",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Determines whether people with job titles similar to the titles you define in the person_titles[] parameter are returned in the response. Set to false when using person_titles[] to return only strict matches for job titles."
          },
          {
            "name": "q_keywords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "A string of words over which we want to filter the results"
          },
          {
            "name": "person_locations[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "The location where people live. You can search across cities, US states, and countries. To find people based on the headquarters locations of their current employer, use the organization_locations parameter.",
            "example": [
              "california",
              "ireland",
              "chicago"
            ]
          },
          {
            "name": "person_seniorities[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "owner",
                  "founder",
                  "c_suite",
                  "partner",
                  "vp",
                  "head",
                  "director",
                  "manager",
                  "senior",
                  "entry",
                  "intern"
                ]
              }
            },
            "style": "form",
            "explode": true,
            "description": "The job seniority that people hold within their current employer. For a person to be included in search results, they only need to match 1 of the seniorities you add. Adding more seniorities expands your search results. Searches only return results based on their current job title. Use this parameter in combination with the person_titles[] parameter to find people based on specific job functions and seniority levels."
          },
          {
            "name": "organization_locations[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "The location of the company headquarters for a person's current employer. You can search across cities, US states, and countries. If a company has several office locations, results are still based on the headquarters location. To find people based on their personal location, use the person_locations parameter.",
            "example": [
              "texas",
              "tokyo",
              "spain"
            ]
          },
          {
            "name": "q_organization_domains_list[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000
            },
            "style": "form",
            "explode": true,
            "description": "The domain name for the person's employer. This can be the current employer or a previous employer. Do not include www., the @ symbol, or similar. This parameter accepts up to 1,000 domains in a single request.",
            "example": [
              "apollo.io",
              "microsoft.com"
            ]
          },
          {
            "name": "contact_email_status[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "verified",
                  "unverified",
                  "likely to engage",
                  "unavailable"
                ]
              }
            },
            "style": "form",
            "explode": true,
            "description": "The email statuses for the people you want to find. You can add multiple statuses to expand your search."
          },
          {
            "name": "organization_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "The Apollo IDs for the companies (employers) you want to include in your search results. Each company in the Apollo database is assigned a unique ID. To find IDs, call the Organization Search endpoint and identify the values for organization_id.",
            "example": [
              "5e66b6381e05b4008c8331b8"
            ]
          },
          {
            "name": "organization_num_employees_ranges[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "The number range of employees working for the person's current company. This enables you to find people based on the headcount of their employer. You can add multiple ranges to expand your search results. Each range you add needs to be a string, with the upper and lower numbers of the range separated only by a comma.",
            "example": [
              "1,10",
              "250,500",
              "10000,20000"
            ]
          },
          {
            "name": "revenue_range[min]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The minimum revenue the person's current employer generates. Use this parameter in combination with revenue_range[max] to set a revenue range. Do not enter currency symbols, commas, or decimal points in the figure.",
            "example": 500000
          },
          {
            "name": "revenue_range[max]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum revenue the person's current employer generates. Use this parameter in combination with revenue_range[min] to set a revenue range. Do not enter currency symbols, commas, or decimal points in the figure.",
            "example": 1500000
          },
          {
            "name": "currently_using_all_of_technology_uids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Find people based on all of the technologies their current employer uses. Apollo supports filtering by 1,500+ technologies. Use underscores (_) to replace spaces and periods for the technologies listed in the CSV file.",
            "example": [
              "salesforce",
              "google_analytics",
              "wordpress_org"
            ]
          },
          {
            "name": "currently_using_any_of_technology_uids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Find people based on any of the technologies their current employer uses. Apollo supports filtering by 1,500+ technologies. Use underscores (_) to replace spaces and periods for the technologies listed in the CSV file.",
            "example": [
              "salesforce",
              "google_analytics",
              "wordpress_org"
            ]
          },
          {
            "name": "currently_not_using_any_of_technology_uids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Exclude people from your search based on any of the technologies their current employer uses. Apollo supports filtering by 1,500+ technologies. Use underscores (_) to replace spaces and periods for the technologies listed in the CSV file.",
            "example": [
              "salesforce",
              "google_analytics",
              "wordpress_org"
            ]
          },
          {
            "name": "q_organization_job_titles[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "The job titles that are listed in active job postings at the person's current employer.",
            "example": [
              "sales manager",
              "research analyst"
            ]
          },
          {
            "name": "organization_job_locations[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "The locations of the jobs being actively recruited by the person's employer.",
            "example": [
              "atlanta",
              "japan"
            ]
          },
          {
            "name": "organization_num_jobs_range[min]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The minimum number of job postings active at the person's current employer. Use this parameter in combination with organization_num_jobs_range[max] to set a job postings range.",
            "example": 50
          },
          {
            "name": "organization_num_jobs_range[max]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum number of job postings active at the person's current employer. Use this parameter in combination with organization_num_jobs_range[min] to set a job postings range.",
            "example": 500
          },
          {
            "name": "organization_job_posted_at_range[min]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The earliest date when jobs were posted by the person's current employer. Use this parameter in combination with organization_job_posted_at_range[max] to set a date range for when jobs posted.",
            "example": "2025-07-25"
          },
          {
            "name": "organization_job_posted_at_range[max]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The latest date when jobs were posted by the person's current employer. Use this parameter in combination with organization_job_posted_at_range[min] to set a date range for when jobs posted.",
            "example": "2025-09-25"
          },
          {
            "name": "organization_industries[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Industries to filter organizations by"
          },
          {
            "name": "organization_keywords[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Keywords related to organizations"
          },
          {
            "name": "prospected_by_current_team[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "yes",
                  "no"
                ]
              }
            },
            "style": "form",
            "explode": true,
            "description": "Filter by whether person was prospected by current team"
          },
          {
            "name": "stages[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Sales stages to filter by"
          },
          {
            "name": "account_stages[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Account stages to filter by"
          },
          {
            "name": "departments[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Departments to filter by"
          },
          {
            "name": "subdepartments[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Subdepartments to filter by"
          },
          {
            "name": "functions[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Job functions to filter by"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 500,
              "default": 1
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint.",
            "example": 4
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "People search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mixed_companies/search": {
      "post": {
        "operationId": "searchOrganizations",
        "summary": "Organization Search",
        "description": "Find companies in the Apollo database using various filters. This endpoint consumes credits and requires a paid Apollo plan. Limited to 50,000 records (100 per page, up to 500 pages).",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "organization_num_employees_ranges[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The number range of employees working for the company. This enables you to find companies based on headcount. You can add multiple ranges to expand your search results. Each range you add needs to be a string, with the upper and lower numbers of the range separated only by a comma. Examples: 1,10; 250,500; 10000,20000"
          },
          {
            "name": "organization_locations[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The location of the company headquarters. You can search across cities, US states, and countries. If a company has several office locations, results are still based on the headquarters location. For example, if you search chicago but a company's HQ location is in boston, any Boston-based companies will not appear in your search results, even if they match other parameters. To exclude companies based on location, use the organization_not_locations parameter. Examples: texas; tokyo; spain"
          },
          {
            "name": "organization_not_locations[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Exclude companies from search results based on the location of the company headquarters. You can use cities, US states, and countries as locations to exclude. This parameter is useful for ensuring you do not prospect in an undesirable territory. For example, if you use ireland as a value, no Ireland-based companies will appear in your search results. Examples: minnesota; ireland; seoul"
          },
          {
            "name": "revenue_range[min]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Search for organizations based on their revenue. Use this parameter to set the lower range of organization revenue. Use the revenue_range[max] parameter to set the upper range of revenue. Do not enter currency symbols, commas, or decimal points in the figure. Example: 300000"
          },
          {
            "name": "revenue_range[max]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Search for organizations based on their revenue. Use this parameter to set the upper range of organization revenue. Use the revenue_range[min] parameter to set the lower range of revenue. Do not enter currency symbols, commas, or decimal points in the figure. Example: 50000000"
          },
          {
            "name": "currently_using_any_of_technology_uids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Find organizations based on the technologies they currently use. Apollo supports filtering by 1,500+ technologies. Apollo calculates technologies data from multiple sources. This data is updated regularly. Check out the full list of supported technologies by downloading this CSV file. Use underscores (_) to replace spaces and periods for the technologies listed in the CSV file. Examples: salesforce; google_analytics; wordpress_org"
          },
          {
            "name": "q_organization_keyword_tags[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter search results based on keywords associated with companies. For example, you can enter mining as a value to return only companies that have an association with the mining industry. Examples: mining; sales strategy; consulting"
          },
          {
            "name": "q_organization_name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter search results to include a specific company name. If the value you enter for this parameter does not match with a company's name, the company will not appear in search results, even if it matches other parameters. Partial matches are accepted. For example, if you filter by the value marketing, a company called NY Marketing Unlimited would still be eligible as a search result, but NY Market Analysis would not be eligible. Example: apollo or mining"
          },
          {
            "name": "organization_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the companies you want to include in your search results. Each company in the Apollo database is assigned a unique ID. To find IDs, identify the values for organization_id when you call this endpoint. Example: 5e66b6381e05b4008c8331b8"
          },
          {
            "name": "latest_funding_amount_range[min]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The minimum amount the company received with its most recent funding round. Use this parameter in combination with latest_funding_amount_range[max] to set a monetary range for the company's most recent funding round. Do not enter currency symbols, commas, or decimal points in the figure. Examples: 5000000; 15000000"
          },
          {
            "name": "latest_funding_amount_range[max]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum amount the company received with its most recent funding round. Use this parameter in combination with latest_funding_amount_range[min] to set a monetary range for the company's most recent funding round. Do not enter currency symbols, commas, or decimal points in the figure. Examples: 5000000; 15000000"
          },
          {
            "name": "total_funding_range[min]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The minimum amount the company received during all of its funding rounds combined. Use this parameter in combination with total_funding_range[max] to set a monetary range for all of the company's funding rounds. Do not enter currency symbols, commas, or decimal points in the figure. Examples: 50000000; 350000000"
          },
          {
            "name": "total_funding_range[max]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum amount the company received during all of its funding rounds combined. Use this parameter in combination with total_funding_range[min] to set a monetary range for all of the company's funding rounds. Do not enter currency symbols, commas, or decimal points in the figure. Examples: 50000000; 350000000"
          },
          {
            "name": "latest_funding_date_range[min]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The earliest date when the company received its most recent funding round. Use this parameter in combination with latest_funding_date_range[max] to set a date range for when the company received its most recent funding round. Example: 2025-07-25"
          },
          {
            "name": "latest_funding_date_range[max]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The latest date when the company received its most recent funding round. Use this parameter in combination with latest_funding_date_range[min] to set a date range for when the company received its most recent funding round. Example: 2025-09-25"
          },
          {
            "name": "q_organization_job_titles[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The job titles that are listed in active job postings at the company. Examples: sales manager; research analyst"
          },
          {
            "name": "organization_job_locations[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The locations of the jobs being actively recruited by the company. Examples: atlanta; japan"
          },
          {
            "name": "organization_num_jobs_range[min]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The minimum number of job postings active at the company. Use this parameter in combination with organization_num_jobs_range[max] to set a job postings range. Examples: 50; 500"
          },
          {
            "name": "organization_num_jobs_range[max]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum number of job postings active at the company. Use this parameter in combination with organization_num_jobs_range[min] to set a job postings range. Examples: 50; 500"
          },
          {
            "name": "organization_job_posted_at_range[min]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The earliest date when jobs were posted by the company. Use this parameter in combination with organization_job_posted_at_range[max] to set a date range for when jobs posted. Example: 2025-07-25"
          },
          {
            "name": "organization_job_posted_at_range[max]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The latest date when jobs were posted by the company. Use this parameter in combination with organization_job_posted_at_range[min] to set a date range for when jobs posted. Example: 2025-09-25"
          },
          {
            "name": "q_organization_domains",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The domain names of organizations to search for"
          },
          {
            "name": "organization_industry_tag_ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Industry tag IDs to filter organizations by industry"
          },
          {
            "name": "organization_founded_year_ranges",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Founded year ranges for organizations"
          },
          {
            "name": "organization_keywords",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Keywords to search in organization descriptions"
          },
          {
            "name": "organization_technology_names",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Technology names used by organizations"
          },
          {
            "name": "organization_publicly_traded_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "public",
                  "private"
                ]
              }
            },
            "description": "Public/private status of organizations"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1,
              "minimum": 1,
              "maximum": 500
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint. Example: 4"
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25,
              "minimum": 1,
              "maximum": 100
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data. Example: 10"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful organization search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/job_postings": {
      "get": {
        "operationId": "getOrganizationJobPostings",
        "summary": "Get organization job postings",
        "description": "Retrieve current job postings for a specific organization. Limited to 10,000 records.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5e66b6381e05b4008c8331b8"
            },
            "description": "The organization ID of the company for which you want to find job postings. Each company in the Apollo database is assigned a unique ID. To find IDs, call the Organization Search endpoint and identify the values for organization_id."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint."
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data."
          }
        ],
        "responses": {
          "200": {
            "description": "Organization job postings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPostingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "operationId": "getOrganizationInfo",
        "summary": "Get Complete Organization Info",
        "description": "Retrieve complete details about an organization in the Apollo database",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5e66b6381e05b4008c8331b8"
            },
            "description": "The Apollo ID for the organization that you want to research. To find organization IDs, call the Organization Search endpoint and identify the organizaton_id value for the organization."
          }
        ],
        "responses": {
          "200": {
            "description": "Organization details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Master API key required"
          }
        }
      }
    },
    "/news_articles/search": {
      "post": {
        "operationId": "searchNewsArticles",
        "summary": "Search news articles",
        "description": "Find news articles related to companies in the Apollo database. Several filters are available to help narrow your search. This endpoint consumes credits as part of your Apollo pricing plan and is not accessible to Apollo users on free plans.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "organization_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the companies you want to include in your search results. Each company in the Apollo database is assigned a unique ID. To find IDs, call the Organization Search endpoint and identify the values for organization_id.",
            "example": [
              "5e66b6381e05b4008c8331b8",
              "5f1a2b3c4d5e6f7890123456"
            ],
            "style": "form",
            "explode": true
          },
          {
            "name": "categories[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter your search to include only certain categories or sub-categories of news. Use the News search filter for companies within Apollo to uncover all possible categories and sub-categories.",
            "example": [
              "hires",
              "investment",
              "contract",
              "funding",
              "acquisition"
            ],
            "style": "form",
            "explode": true
          },
          {
            "name": "published_at[min]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Set the lower bound of the date range you want to search. Use this parameter in combination with the published_at[max] parameter. This date should fall before the published_at[max] date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-02-15"
          },
          {
            "name": "published_at[max]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Set the upper bound of the date range you want to search. Use this parameter in combination with the published_at[min] parameter. This date should fall after the published_at[min] date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-02-28"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint.",
            "example": 4
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "default": 25
            },
            "description": "The number of Apollo data records that you want to retrieve per page. Use this parameter in combination with the page parameter to make search results navigable and improve the performance of the endpoint. Maximum value is 100.",
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "News articles search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticlesResponse"
                }
              }
            }
          },
          "403": {
            "description": "Feature not available for free plan users"
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "operationId": "createAccount",
        "summary": "Create an Account",
        "description": "Add a new account to your team's Apollo account. In Apollo terminology, an account is a company that your team has explicitly added to your database. Apollo does not apply deduplication processes when you create a new account via the API. If your entry has the same name, domain, or other details as an existing account, Apollo will create a new account instead of updating the existing account. To update an existing account, use the Update an Account endpoint instead. This endpoint requires a master API key.",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name the account that you are creating. This should be a human-readable name.",
            "example": "The Irish Copywriters"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The domain name for the account. Do not include www. or similar.",
            "example": "apollo.io"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the account owner within your team's Apollo account. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          },
          {
            "name": "account_stage_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the account stage to which you want to assign the account. Call the List Account Stages endpoint to retrieve a list of all the account stage IDs available in your Apollo account. If you do not specify the account stage, Apollo automatically assigns the account to a stage as determined by your team's Apollo account.",
            "example": "6095a710bd01d100a506d4b9"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The primary phone number for the account. This can be the phone number for the corporate headquarters, a branch location, or a direct dial to the primary point of contact for the account. Apollo sanitizes phone numbers, so you can enter them in any format.",
            "example": "555-303-1234"
          },
          {
            "name": "raw_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The corporate location for the account. This can include a city, US state, and country. Apollo matches the location you provide to the most applicable pre-defined location.",
            "example": "Belfield, Dublin 4, Ireland"
          }
        ],
        "responses": {
          "200": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required. Refer to Create API Keys documentation to learn how to create a master API key."
          }
        }
      }
    },
    "/accounts/{account_id}": {
      "put": {
        "operationId": "updateAccount",
        "summary": "Update an Account",
        "description": "Update existing accounts in your team's Apollo account",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the account that you want to update. To find account IDs, call the Search for Accounts endpoint and identify the id value for the contact.",
            "example": "66e9abf95ac32901b20d1a0d"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Update the account's name. This should be a human-readable name.",
            "example": "The Fast Irish Copywriters"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Update the domain name for the account. Do not include www. or similar.",
            "example": "apollo.io"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the account owner within your team's Apollo account. Enter a different ID to update the owner of the account. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          },
          {
            "name": "account_stage_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the account stage to which you want to assign the account. Enter a different ID to update the account stage. Call the List Account Stages endpoint to retrieve a list of all the account stage IDs available in your Apollo account.",
            "example": "61b8e913e0f4d2012e3af74e"
          },
          {
            "name": "raw_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Update the corporate location for the account. This can include a city, US state, and country. Apollo matches the location you provide to the most applicable pre-defined location.",
            "example": "Belfield, Dublin 4, Ireland"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Update the primary phone number for the account. This can be the phone number for the corporate headquarters, a branch location, or a direct dial to the primary point of contact for the account. Apollo sanitizes phone numbers, so you can enter them in any format.",
            "example": "555-303-1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Master API key required"
          }
        }
      }
    },
    "/accounts/search": {
      "post": {
        "operationId": "searchAccounts",
        "summary": "Search for Accounts",
        "description": "Use the Search for Accounts endpoint to search for the account that have been added to your team's Apollo account. In Apollo terminology, an account is a company that your team has explicitly added to your database. This endpoint only returns accounts in the search results. To search for companies in the Apollo database, call the Organization Search endpoint. To protect Apollo's performance for all users, this endpoint has a display limit of 50,000 records (100 records per page, up to 500 pages). Add more filters to narrow your search results as much as possible. This limitation does not restrict your access to Apollo's database; you just need to access the data in batches. This feature is not accessible to Apollo users on free plans.",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "q_organization_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add keywords to narrow the search of the accounts in your team's Apollo account. Keywords should directly match at least part of an account's name. For example, searching the keyword marketing might return the result NY Marketing Unlimited, but not NY Market Analysts. This parameter only searches account names, not other account fields.",
            "examples": {
              "apollo": {
                "value": "apollo",
                "summary": "Search for accounts with 'apollo' in the name"
              },
              "microsoft": {
                "value": "microsoft",
                "summary": "Search for accounts with 'microsoft' in the name"
              },
              "marketing": {
                "value": "marketing",
                "summary": "Search for accounts with 'marketing' in the name"
              }
            }
          },
          {
            "name": "account_stage_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the account stages that you want to include in your search results. If you add multiple account stages, Apollo will include all accounts that match any of the stages, along with the other parameters, in the search results. Call the List Account Stages endpoint to retrieve a list of all the account stage IDs available in your Apollo account.",
            "example": [
              "61b8e913e0f4d2012e3af74e"
            ]
          },
          {
            "name": "sort_by_field",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "account_last_activity_date",
                "account_created_at",
                "account_updated_at"
              ]
            },
            "description": "Sort the matching accounts by one of the following options: account_last_activity_date (The most recent activity date recorded first), account_created_at (The most recently created first), account_updated_at (The most recently updated first)."
          },
          {
            "name": "sort_ascending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true to sort the matching contacts in ascending order. This parameter must be used with sort_by_field. Otherwise, the sorting logic is not applied.",
            "example": true
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 1
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint.",
            "example": 4
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Search results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "operationId": "getAccount",
        "summary": "View an Account",
        "description": "Retrieve details for an existing account in your team's Apollo database",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the account that you want to retrieve. To find account IDs, call the Search for Accounts endpoint and identify the id value for the account.",
            "example": "6518c6184f20350001a0b9c0"
          }
        ],
        "responses": {
          "200": {
            "description": "Account details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key or insufficient permissions"
          }
        }
      }
    },
    "/accounts/bulk_update": {
      "post": {
        "operationId": "bulkUpdateAccountStages",
        "summary": "Update Account Stage for Multiple Accounts",
        "description": "Update the account stage for several accounts in your team's Apollo account",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo ID for the account that you want to update. To find account IDs, call the Search for Accounts endpoint and identify the id value for the account.",
            "example": [
              "66e9abf95ac32901b20d1a0d"
            ]
          },
          {
            "name": "account_stage_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the account stage to which you want to assign the accounts. Call the List Account Stages endpoint to retrieve a list of all the account stage IDs available in your Apollo account.",
            "example": "6095a710bd01d100a506d4b7"
          }
        ],
        "responses": {
          "200": {
            "description": "Account stages updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The Apollo ID of the updated account"
                          },
                          "account_stage_id": {
                            "type": "string",
                            "description": "The Apollo ID of the account stage assigned to the account"
                          }
                        }
                      },
                      "description": "Array of updated accounts with their IDs and new account stage IDs"
                    }
                  },
                  "example": {
                    "accounts": [
                      {
                        "id": "66e9abf95ac32901b20d1a0d",
                        "account_stage_id": "6095a710bd01d100a506d4b7"
                      },
                      {
                        "id": "66e9a4db056fe802d331fb8a",
                        "account_stage_id": "6095a710bd01d100a506d4b7"
                      },
                      {
                        "id": "66e9a7866e440201b42ac31d",
                        "account_stage_id": "6095a710bd01d100a506d4b7"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key or insufficient permissions"
          }
        }
      }
    },
    "/accounts/update_owners": {
      "post": {
        "operationId": "bulkUpdateAccountOwners",
        "summary": "Update Account Owner for Multiple Accounts",
        "description": "Assign multiple accounts to a different user in your team's Apollo account",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the account that you want to assign to an owner. To find account IDs, call the Search for Accounts endpoint and identify the id value for the account.",
            "example": [
              "66e9abf95ac32901b20d1a0d"
            ]
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the account owner within your team's Apollo account. This user will be assigned ownership of the accounts. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          }
        ],
        "responses": {
          "200": {
            "description": "Account owners updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The Apollo ID of the updated account"
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The Apollo ID of the new account owner"
                          },
                          "crm_owner_id": {
                            "type": "string",
                            "nullable": true,
                            "description": "The CRM owner ID, if applicable"
                          }
                        }
                      },
                      "description": "Array of updated accounts with their IDs and new owner information"
                    }
                  },
                  "example": {
                    "accounts": [
                      {
                        "id": "66e9a4db056fe802d331fb8a",
                        "owner_id": "66302798d03b9601c7934ebf",
                        "crm_owner_id": null
                      },
                      {
                        "id": "66e9abf95ac32901b20d1a0d",
                        "owner_id": "66302798d03b9601c7934ebf",
                        "crm_owner_id": null
                      },
                      {
                        "id": "66e9a7866e440201b42ac31d",
                        "owner_id": "66302798d03b9601c7934ebf",
                        "crm_owner_id": null
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key or insufficient permissions"
          }
        }
      }
    },
    "/account_stages": {
      "get": {
        "operationId": "listAccountStages",
        "summary": "List Account Stages",
        "description": "Retrieve the IDs for the available account stages in your team's Apollo account",
        "tags": [
          "Accounts"
        ],
        "responses": {
          "200": {
            "description": "List of account stages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_stages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The Apollo ID of the account stage"
                          },
                          "team_id": {
                            "type": "string",
                            "description": "The team ID associated with the account stage"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the account stage"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the account stage"
                          },
                          "display_order": {
                            "type": "integer",
                            "description": "The display order of the account stage"
                          },
                          "default_exclude_for_leadgen": {
                            "type": "boolean",
                            "description": "Whether this stage is excluded from lead generation by default"
                          },
                          "category": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "succeeded",
                              "failed",
                              "in_progress",
                              null
                            ],
                            "description": "The category of the account stage"
                          },
                          "is_meeting_set": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether a meeting is set for this stage"
                          }
                        }
                      },
                      "description": "Array of account stages available in your Apollo account"
                    }
                  },
                  "example": {
                    "account_stages": [
                      {
                        "id": "6095a710bd01d100a506d4b7",
                        "team_id": "6095a710bd01d100a506d4ac",
                        "display_name": "Review",
                        "name": "Review",
                        "display_order": 1,
                        "default_exclude_for_leadgen": false,
                        "category": null,
                        "is_meeting_set": null
                      },
                      {
                        "id": "6095a710bd01d100a506d4b8",
                        "team_id": "6095a710bd01d100a506d4ac",
                        "display_name": "Current Client",
                        "name": "Current Client",
                        "display_order": 2,
                        "default_exclude_for_leadgen": true,
                        "category": "succeeded",
                        "is_meeting_set": null
                      },
                      {
                        "id": "61b8e913e0f4d2012e3af74e",
                        "team_id": "6095a710bd01d100a506d4ac",
                        "display_name": "Lead",
                        "name": "Lead",
                        "display_order": 7,
                        "default_exclude_for_leadgen": false,
                        "category": "in_progress",
                        "is_meeting_set": null
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key or insufficient permissions"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "operationId": "createContact",
        "summary": "Create a Contact",
        "description": "Add a new contact to your team's Apollo account. Note: Does not apply deduplication - will create new contact even if details match existing ones.",
        "tags": [
          "Contacts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}": {
      "put": {
        "operationId": "updateContact",
        "summary": "Update a Contact",
        "description": "Update existing contact details in your team's Apollo account",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the contact to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/search": {
      "post": {
        "operationId": "searchContacts",
        "summary": "Search for Contacts",
        "description": "Search for contacts in your team's Apollo account. Limited to 50,000 records (100 per page, up to 500 pages).",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "q_keywords",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add keywords to narrow the search of the contacts in your team's Apollo account. Keywords can include combinations of names, job titles, employers (company names), and email addresses.",
            "example": "tim zheng; senior research analyst; microsoft"
          },
          {
            "name": "contact_stage_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "The Apollo IDs for the contact stages that you want to include in your search results. If you add multiple contact stages, Apollo will include all contacts that match any of the stages, along with the other parameters, in the search results. Call the List Contact Stages endpoint to retrieve a list of all the contact stage IDs available in your Apollo account.",
            "example": [
              "6095a710bd01d100a506d4ae"
            ]
          },
          {
            "name": "sort_by_field",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "contact_last_activity_date",
                "contact_email_last_opened_at",
                "contact_email_last_clicked_at",
                "contact_created_at",
                "contact_updated_at"
              ]
            },
            "description": "Sort the matching contacts by one of the following options: contact_last_activity_date (The most recent activity date recorded first), contact_email_last_opened_at (The most recent email opened date first), contact_email_last_clicked_at (The most recent email clicked first), contact_created_at (The most recently created first), contact_updated_at (The most recently updated first)."
          },
          {
            "name": "sort_ascending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true to sort the matching contacts in ascending order. This parameter must be used with sort_by_field. Otherwise, the sorting logic is not applied.",
            "example": true
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 1
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results navigable and improve the performance of the endpoint.",
            "example": 4
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "default": 100
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "List of contacts matching search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "current_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/update_stages": {
      "post": {
        "operationId": "updateContactStages",
        "summary": "Update Contact Stage for Multiple Contacts",
        "description": "Update the contact stage for multiple contacts simultaneously",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "contact_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "x-bracket-notation": true,
            "description": "The Apollo IDs for the contacts that you want to update. Must be passed using bracket notation (e.g., contact_ids[]=id1 for one contact, or contact_ids[]=id1&contact_ids[]=id2 for multiple). To find contact IDs, call the Search for Contacts endpoint and identify the id value for the contact.",
            "example": "contact_ids[]=66e34b81740c50074e3d1bd4&contact_ids[]=66e34b81740c50074e3d1bd5"
          },
          {
            "name": "contact_stage_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the contact stage to which you want to assign the contacts. Call the List Contact Stages endpoint to retrieve a list of all the contact stage IDs available in your Apollo account.",
            "example": "6095a710bd01d100a506d4af"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact stages updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Parameters misconfigured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Parameters misconfigured. contact_ids must be an array. You are passing String"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/update_owners": {
      "post": {
        "operationId": "updateContactOwners",
        "summary": "Update Contact Owner for Multiple Contacts",
        "description": "Use the Update Contact Owner for Multiple Contacts endpoint to assign multiple contacts to a different user in your team's Apollo account. To update more than the contact's owner, such as job titles or contact details, use the Update a Contact endpoint instead.",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "contact_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "x-bracket-notation": true,
            "description": "The Apollo IDs for the contacts that you want assign to an owner. Must be passed using bracket notation (e.g., contact_ids[]=id1 for one contact, or contact_ids[]=id1&contact_ids[]=id2 for multiple). To find contact IDs, call the Search for Contacts endpoint and identify the id value for the contact.",
            "example": "contact_ids[]=66e34b81740c50074e3d1bd4&contact_ids[]=66e34b81740c50074e3d1bd5"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the contact owner within your team's Apollo account. This user will be assigned ownership of the contacts. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact owners updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Parameters misconfigured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contact_stages": {
      "get": {
        "operationId": "listContactStages",
        "summary": "List Contact Stages",
        "description": "Use the List Contact Stages endpoint to retrieve the IDs for the available contact stages in your team's Apollo account. Contact stage IDs can be used to update individual contacts and update the contact stages for multiple contacts via the Apollo API.",
        "tags": [
          "Contacts"
        ],
        "responses": {
          "200": {
            "description": "List of contact stages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contact_stages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContactStage"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/opportunities": {
      "post": {
        "operationId": "createDeal",
        "summary": "Create Deal",
        "description": "Use the Create Deal endpoint to create new deals for an Apollo account. Deals enable you to track account activity, including monetary values of a deal, deal owners, and deal stages. To update existing deals in your Apollo account, use the Update Deal endpoint instead. This endpoint requires a master API key.",
        "tags": [
          "Deals"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name the deal you are creating. This should be a human-readable name.",
            "example": "Massive Q3 Deal"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the deal owner within your team's Apollo account. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the account within your Apollo instance. This is the company that you are targeting as part of the deal being created. Each company in the Apollo database is assigned a unique ID. To find IDs, call the Organization Search endpoint and identify the values for organization_id.",
            "example": "5e66b6381e05b4008c8331b8"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The monetary value of the deal being created. Do not enter commas or currency symbols for the value. The currency is automatically populated by the settings within your Apollo account. Commas are not accepted and result in the deal amount being left blank.",
            "example": "55123478"
          },
          {
            "name": "opportunity_stage_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the deal stage within your team's Apollo account. Each deal stage is assigned a unique ID. To find deal stage IDs, call the List Deal Stages endpoint and identify the value for id for each stage.",
            "example": "6095a710bd01d100a506d4bd"
          },
          {
            "name": "closed_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The estimated close date for the deal. This can be a future or past date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-10-30"
          }
        ],
        "responses": {
          "200": {
            "description": "Deal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deal"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/opportunities/search": {
      "get": {
        "operationId": "listAllDeals",
        "summary": "List All Deals",
        "description": "Use the List All Deals endpoint to retrieve every deal that has been created for your team's Apollo account. This endpoint requires a master API key. This feature is not accessible to Apollo users on free plans.",
        "tags": [
          "Deals"
        ],
        "parameters": [
          {
            "name": "sort_by_field",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "amount",
                "is_closed",
                "is_won"
              ]
            },
            "description": "Sort the deals by one of the following options: amount (largest deal values first), is_closed (deals that have been closed first), is_won (deals that have been won first)"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results navigable and improve the performance of the endpoint.",
            "example": 4
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "List of all deals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "opportunities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Deal"
                      }
                    },
                    "breadcrumbs": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "salesforce_users": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "partial_results_only": {
                      "type": "boolean"
                    },
                    "has_join": {
                      "type": "boolean"
                    },
                    "disable_eu_prospecting": {
                      "type": "boolean"
                    },
                    "partial_results_limit": {
                      "type": "integer"
                    },
                    "num_fetch_result": {
                      "type": "integer",
                      "nullable": true
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        },
                        "total_entries": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required or free plan limitation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/opportunities/{opportunity_id}": {
      "get": {
        "operationId": "viewDeal",
        "summary": "View Deal",
        "description": "Use the View Deal endpoint to retrieve complete details about a deal within your team's Apollo account. Deal information can include the ID of the deal owner, the monetary value of the deal, the deal stage, and general details about the account. This endpoint requires a master API key.",
        "tags": [
          "Deals"
        ],
        "parameters": [
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the deal you want to view. Each deal in the Apollo database is assigned a unique ID. To find deal IDs, call the List All Deals endpoint and identify the value for id for the desired deal.",
            "example": "66e09ea8e3cfcf01b2208ec7"
          }
        ],
        "responses": {
          "200": {
            "description": "Deal details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deal"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Deal not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateDeal",
        "summary": "Update Deal",
        "description": "Use the Update Deal endpoint to update the details of existing deals within your team's Apollo account. Deals enable you to track account activity, including monetary values of a deal, deal owners, and deal stages. To create new deals in your Apollo account, use the Create Deal endpoint instead. This endpoint requires a master API key.",
        "tags": [
          "Deals"
        ],
        "parameters": [
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the deal you want to update. Each deal in the Apollo database is assigned a unique ID. To find deal IDs, call the List All Deals endpoint and identify the value for id for the desired deal.",
            "example": "66e09ea8e3cfcf01b2208ec7"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the deal owner within your team's Apollo account. Enter a different ID to update the owner of the deal. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Update the name of the deal. This should be a human-readable name.",
            "example": "Massive Q3 Deal"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The monetary value of the deal. Enter a different value to update the deal amount. Do not enter commas or currency symbols for the value. The currency is automatically populated by the settings within your Apollo account. Commas are not accepted and result in the deal amount being left blank.",
            "example": "55123478"
          },
          {
            "name": "opportunity_stage_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the deal stage within your team's Apollo account. Enter a different ID to update the deal stage. Each deal stage is assigned a unique ID. To find deal stage IDs, call the List Deal Stages endpoint and identify the value for id for each stage.",
            "example": "6095a710bd01d100a506d4bd"
          },
          {
            "name": "closed_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Update the estimated close date for the deal. This can be a future or past date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-10-30"
          },
          {
            "name": "is_closed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Set the value to true to update the status of the deal to closed."
          },
          {
            "name": "is_won",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Set the value to true to update the status of the deal to won."
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Update the source of the deal. By default, deals created via Apollo APIs have a source of api.",
            "example": "2024 InfoSec Conference"
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the account within your Apollo instance. Enter a different ID to update the company associated with the deal. Each company in the Apollo database is assigned a unique ID. To find IDs, call the Organization Search endpoint and identify the values for organization_id.",
            "example": "5e66b6381e05b4008c8331b8"
          }
        ],
        "responses": {
          "200": {
            "description": "Deal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deal"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Deal not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/opportunity_stages": {
      "get": {
        "operationId": "listDealStages",
        "summary": "List Deal Stages",
        "description": "Use the List Deal Stages endpoint to retrieve information about every deal stage that is available in your team's Apollo account. The id value for each deal stage can be used to set the stage when creating a deal or updating a deal via the Apollo API. This endpoint requires a master API key.",
        "tags": [
          "Deals"
        ],
        "responses": {
          "200": {
            "description": "List of deal stages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "opportunity_stages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DealStage"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailer_campaigns/search": {
      "post": {
        "operationId": "searchSequences",
        "summary": "Search for Sequences",
        "description": "Use the Search for Sequences endpoint to search for the sequences that have been created for your team's Apollo account. This endpoint requires a master API key. If you attempt to call the endpoint without a master key, you will receive a 403 response. This feature is not accessible to Apollo users on free plans.",
        "tags": [
          "Sequences"
        ],
        "parameters": [
          {
            "name": "q_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add keywords to narrow the search of the sequences in your team's Apollo account. Keywords should directly match at least part of a sequence's name. For example, searching the keyword marketing might return the result NY Marketing Sequence, but not NY Marketer Conference 2025 attendees. This parameter only searches sequence names, not other sequence fields.",
            "example": "marketing conference attendees"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint.",
            "example": "4"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": "10"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sequences matching search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of results per page"
                        },
                        "total_entries": {
                          "type": "integer",
                          "description": "Total number of entries"
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      }
                    },
                    "breadcrumbs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Filter label"
                          },
                          "signal_field_name": {
                            "type": "string",
                            "description": "Field name for the filter"
                          },
                          "value": {
                            "type": "string",
                            "description": "Filter value"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Human-readable display name"
                          }
                        }
                      },
                      "description": "Applied search filters"
                    },
                    "emailer_campaigns": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailerCampaign"
                      }
                    },
                    "num_fetch_result": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Number of fetch results"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required or free plan limitation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailer_campaigns/{sequence_id}/add_contact_ids": {
      "post": {
        "operationId": "addContactsToSequence",
        "summary": "Add Contacts to a Sequence",
        "description": "Use the Add Contacts to a Sequence endpoint to add contacts to the existing sequences in your team's Apollo account. In Apollo terminology, a contact is a person that your team has explicitly added to your database. Only contacts can be added to sequences. To enrich a person's data, call the People Enrichment endpoint. Then, to add the person as a contact in your database, call the Create a Contact endpoint. This endpoint requires a master API key. If you attempt to call the endpoint without a master key, you will receive a 403 response.",
        "tags": [
          "Sequences"
        ],
        "parameters": [
          {
            "name": "sequence_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the sequence to which you want to add contacts. To find sequence IDs, call the Search for Sequences endpoint and identify the id value for the sequence.",
            "example": "5c10facb7269f45b8233e6c2"
          },
          {
            "name": "emailer_campaign_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The same ID as the sequence_id.",
            "example": "66e9e215ece19801b219997f"
          },
          {
            "name": "send_email_from_email_account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Apollo ID for the email account that you want to use to send emails to the contacts you are adding to the sequence. To find email account IDs, call the Get a List of Email Accounts endpoint and identify the id value for the email account.",
            "example": "6633baaece5fbd01c791d7ca"
          },
          {
            "name": "send_email_from_email_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Optional specific email address to send from within the email account."
          },
          {
            "name": "sequence_no_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts to the sequence even if they do not have an email address."
          },
          {
            "name": "sequence_unverified_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts to the sequence if they have an unverified email address."
          },
          {
            "name": "sequence_job_change",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts to the sequence even if they have recently changed jobs."
          },
          {
            "name": "sequence_active_in_other_campaigns",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts to the sequence even if they have been added to other sequences. This parameter does not differentiate between active and paused sequences."
          },
          {
            "name": "sequence_finished_in_other_campaigns",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts to the sequence if they have been marked as finished in another sequence."
          },
          {
            "name": "sequence_same_company_in_same_campaign",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts to the sequence even if other contacts from the same company are already in the sequence."
          },
          {
            "name": "contacts_without_ownership_permission",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts even if you don't have ownership permission for them."
          },
          {
            "name": "add_if_in_queue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to add contacts even if they are currently in the queue for processing."
          },
          {
            "name": "contact_verification_skipped",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Set to true if you want to skip contact verification during the addition process."
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the user in your team's Apollo account. This is the user taking the action to add contacts to a sequence. When the sequence is updated, the activity log shows the user that added the contacts. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "paused"
              ]
            },
            "description": "Initial status for added contacts. When set to paused along with auto_unpause_at, enables scheduled addition of contacts."
          },
          {
            "name": "auto_unpause_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "DateTime when paused contacts should be automatically unpaused. Must be used with status=paused. Format: ISO 8601 datetime string."
          },
          {
            "name": "contact_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the contacts that you want to add to the sequence. To find contact IDs, call the Search for Contacts endpoint and identify the id value for the contact. Note: Either contact_ids[] or label_names[] must be provided.",
            "example": "66e34b81740c50074e3d1bd4"
          },
          {
            "name": "label_names[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Alternative to contact_ids[]. Array of label names to identify contacts to add to the sequence. Contacts with these labels will be added to the sequence. Note: Either contact_ids[] or label_names[] must be provided."
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts successfully added to sequence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailer_campaigns/remove_or_stop_contact_ids": {
      "post": {
        "operationId": "updateContactStatusInSequence",
        "summary": "Update Contact Status in a Sequence",
        "description": "Use the Update Contact Status in a Sequence endpoint to either mark contacts as having finished a sequence, or to remove them from a sequence entirely. This endpoint requires a master API key. If you attempt to call the endpoint without a master key, you will receive a 403 response.",
        "tags": [
          "Sequences"
        ],
        "parameters": [
          {
            "name": "emailer_campaign_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the sequences that you want to update. If you add multiple sequences, you will update the status of the contacts across the chosen sequences. To find sequence IDs, call the Search for Sequences endpoint and identify the id value for the sequence.",
            "example": "66e9e215ece19801b219997f"
          },
          {
            "name": "contact_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the contacts in the sequences. These are the contacts whose sequence status you want to update. To find contact IDs, call the Search for Contacts endpoint and identify the id value for the contact.",
            "example": "66e34b81740c50074e3d1bd4"
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "mark_as_finished",
                "remove",
                "stop"
              ]
            },
            "description": "Choose 1 of the following options to update the sequence status of the contacts: mark_as_finished (Mark the contacts as having finished the sequence), remove (Remove the contacts from the sequence), stop (Indicate that the contacts progress in the sequence has halted).",
            "example": "mark_as_finished"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact status successfully updated in sequence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "This endpoint requires a master API key"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid contact IDs or status parameter"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailer_messages/search": {
      "get": {
        "operationId": "searchOutreachEmails",
        "summary": "Search for Outreach Emails",
        "description": "Use the Search for Outreach Emails endpoint to find emails that your team has created and sent as part of Apollo sequences. To protect Apollo's performance for all users, this endpoint has a display limit of 50,000 records (100 records per page, up to 500 pages). Add more filters to narrow your search results as much as possible. This endpoint requires a master API key and is not accessible to Apollo users on free plans.",
        "tags": [
          "Sequences"
        ],
        "parameters": [
          {
            "name": "emailer_message_stats[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "delivered",
                  "scheduled",
                  "drafted",
                  "not_opened",
                  "opened",
                  "clicked",
                  "unsubscribed",
                  "demoed",
                  "bounced",
                  "spam_blocked",
                  "failed_other"
                ]
              }
            },
            "description": "Find emails based on their current status, such as whether they were delivered or opened. You can add multiple statuses."
          },
          {
            "name": "emailer_message_reply_classes[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "willing_to_meet",
                  "follow_up_question",
                  "person_referral",
                  "out_of_office",
                  "already_left_company_or_not_right_person",
                  "not_interested",
                  "unsubscribe",
                  "none_of_the_above"
                ]
              }
            },
            "description": "Find emails based on the response sentiment of the recipient. This can include the recipient expressing interest in meeting or having a follow-up question. You can add multiple values."
          },
          {
            "name": "user_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Find emails sent by specific users in your team's Apollo account. You can add multiple users. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          },
          {
            "name": "email_account_id_and_aliases",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter emails by email account ID and aliases."
          },
          {
            "name": "emailer_campaign_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Search for emails that are included in specific sequences in your Apollo account. You can search multiple sequences. Any sequence not included in this parameter will be exclude from search results. To find sequence IDs, call the Search for Sequences endpoint and identify the id value for the sequence.",
            "example": "66e9e215ece19801b219997f"
          },
          {
            "name": "not_emailer_campaign_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Exclude emails from specific sequences in your Apollo account. You can exclude multiple sequences. Any sequence not excluded using this parameter will be included in search results. To find sequence IDs, call the Search for Sequences endpoint and identify the id value for the sequence.",
            "example": "66e9e215ece19801b219997f"
          },
          {
            "name": "emailer_message_date_range_mode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "due_at",
                "completed_at"
              ]
            },
            "description": "Use this parameter in combination with the emailerMessageDateRange[max] and emailerMessageDateRange[min] parameters. Find emails based on due_at (When emails are scheduled to be delivered) or completed_at (When emails were delivered)."
          },
          {
            "name": "emailerMessageDateRange[max]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Set the upper bound of the date range you want to search. Use this parameter in combination with the emailerMessageDateRange[min] and emailer_message_date_range_mode parameters. This date should fall after the emailerMessageDateRange[min] date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-10-30"
          },
          {
            "name": "emailerMessageDateRange[min]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Set the lower bound of the date range you want to search. Use this parameter in combination with the emailerMessageDateRange[max] and emailer_message_date_range_mode parameters. This date should fall before the emailerMessageDateRange[max] date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-10-30"
          },
          {
            "name": "not_sent_reason_cds[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contact_stage_safeguard",
                  "same_account_reply",
                  "account_stage_safeguard",
                  "email_unverified",
                  "snippets_missing",
                  "personalized_opener_missing",
                  "thread_reply_original_email_missing",
                  "no_active_email_account",
                  "email_format_invalid",
                  "ownership_permission",
                  "email_service_provider_delivery_failure",
                  "sendgrid_dropped_email",
                  "mailgun_dropped_email",
                  "gdpr_compliance",
                  "not_valid_hard_bounce_detected",
                  "other_safeguard",
                  "new_job_change_detected",
                  "email_on_global_bounce_list"
                ]
              }
            },
            "description": "Find emails based on the reason they were not sent. You can add multiple values."
          },
          {
            "name": "q_keywords",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add keywords to narrow the search of the emails in your team's Apollo account. Keywords should directly match at least part of an email's content. For example, searching the keyword James might return emails that were sent by James Smith.",
            "example": "Jane"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint.",
            "example": 4
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Outreach emails retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "breadcrumbs": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "Array of applied filters for navigation"
                    },
                    "emailer_messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailerMessage"
                      },
                      "description": "Array of outreach email messages"
                    },
                    "emailer_steps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailerStep"
                      },
                      "description": "Array of sequence steps related to the emails"
                    },
                    "num_fetch_result": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Number of results fetched"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required or not available on free plans",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "This endpoint requires a master API key and is not available on free plans"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailer_messages/{id}/activities": {
      "get": {
        "operationId": "checkEmailStats",
        "summary": "Check Email Stats",
        "description": "Use the Check Email Stats endpoint to review the complete details for an email sent as part of an Apollo sequence. This includes the contents of the emails, stats related to the email such as opens and clicks, and details about the contact that received the email. This endpoint requires a master API key. This feature is not accessible to Apollo users on free plans.",
        "tags": [
          "Sequences"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the emailer message to retrieve stats for",
            "example": "5c10facb7269f45b8233e6c2"
          }
        ],
        "responses": {
          "200": {
            "description": "Email stats retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emailer_message": {
                      "$ref": "#/components/schemas/EmailerMessageWithContact"
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailerMessageActivity"
                      },
                      "description": "Array of activities related to this email"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required or not available on free plan",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error description"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email message not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error description"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/bulk_create": {
      "post": {
        "operationId": "createTask",
        "summary": "Create a Task",
        "description": "Use the Create a Task endpoint to create tasks in Apollo for you and your team. Tasks help track the upcoming actions you need to take, such as emailing or calling a contact. This endpoint currently only returns true as a response. Apollo does not apply deduplication processes when you create a new task via the API. This endpoint requires a master API key.",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID for the task owner within your team's Apollo account. This is the user that will take action on the contacts. Use the Get a List of Users endpoint to retrieve IDs for all users within your Apollo account.",
            "example": "66302798d03b9601c7934ebf"
          },
          {
            "name": "contact_ids[]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The Apollo IDs for the contacts that you want to be on the receiving end of the action. If you add multiple contact IDs, individual tasks will be created for each contact using the same task type, due date, and other details.",
            "example": [
              "66e34b81740c50074e3d1bd4"
            ]
          },
          {
            "name": "priority",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "high",
                "medium",
                "low"
              ]
            },
            "description": "Assign a priority to the task you are creating"
          },
          {
            "name": "due_at",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The full date and time when the task will be due. Should adhere to ISO 8601 date-time format. Apollo uses Greenwich Mean Time (GMT) by default.",
            "example": "2025-02-15T08:10:30Z"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "call",
                "outreach_manual_email",
                "linkedin_step_connect",
                "linkedin_step_message",
                "linkedin_step_view_profile",
                "linkedin_step_interact_post",
                "action_item"
              ]
            },
            "description": "Set the task to be one of the available task types. This enables the task owner to know the type of action they need to take."
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "scheduled",
                "completed",
                "archived"
              ]
            },
            "description": "The status of the task being created. For future-facing tasks, use 'scheduled'. For completed tasks, use 'completed' or 'archived'.",
            "example": "scheduled"
          },
          {
            "name": "note",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add a description for the task. This should be a human-readable message providing the task owner with more context on the action they need to take.",
            "example": "This contact expressed interest in the Sequences feature specifically. Be prepared to discuss."
          }
        ],
        "responses": {
          "200": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true,
                  "description": "Returns true when task is created successfully"
                }
              }
            }
          },
          "403": {
            "description": "Master API key required or feature not available for free plan users"
          }
        }
      }
    },
    "/tasks/search": {
      "post": {
        "operationId": "searchTasks",
        "summary": "Search for Tasks",
        "description": "Use the Search for Tasks endpoint to find tasks that your team has created in Apollo. To protect Apollo's performance for all users, this endpoint has a display limit of 50,000 records (100 records per page, up to 500 pages). Add more filters to narrow your search results as much as possible. This endpoint requires a master API key.",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results navigable and improve the performance of the endpoint."
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 25
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": 10
          },
          {
            "name": "sort_by_field",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "task_due_at",
                "task_priority"
              ]
            },
            "description": "Sort the tasks by one of the following options: task_due_at (most future-dated first), task_priority (highest priority first)"
          },
          {
            "name": "open_factor_names[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "task_types"
                ]
              }
            },
            "description": "Enter task_types for this parameter to return a count of tasks by task type. When used, the response includes a 'task_types': [] array with a 'count' value for each task type."
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSearchResponse"
                }
              }
            }
          },
          "403": {
            "description": "Master API key required or feature not available for free plan users"
          }
        }
      }
    },
    "/phone_calls": {
      "post": {
        "operationId": "createCallRecords",
        "tags": [
          "Calls"
        ],
        "summary": "Create Call Records",
        "description": "Use the Create Call Records endpoint to log calls in Apollo that were made using outside systems such as Orum or Nooks. This endpoint can only be used create call records, not to dial prospects. This endpoint requires a master API key. If you attempt to call the endpoint without a master key, you will receive a 403 response.",
        "parameters": [
          {
            "name": "logged",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Set to true if you want to create an individual record for the phone call in Apollo."
          },
          {
            "name": "user_id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Designate the caller in your team's Apollo account. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": [
              "67e33d527de088000daa60c4"
            ]
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Designate the contact that was called. Use the Search for Contacts endpoint to retrieve IDs for all of the contacts within your Apollo account.",
            "example": "66e34b81740c50074e3d1bd4"
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Associate the call with an account. Use the Search for Accounts endpoint to retrieve IDs for all of the accounts within your Apollo account.",
            "example": "66e9abf95ac32901b20d1a0d"
          },
          {
            "name": "to_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The phone number that you dialed.",
            "example": "5551234567"
          },
          {
            "name": "from_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The phone number that dialed you."
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "no_answer",
                "failed",
                "busy"
              ]
            },
            "description": "The status of the phone call."
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The time when the call started. Your entry should adhere to the ISO 8601 date-time format. Apollo uses Greenwich Mean Time (GMT) by default. If you do not account for time zone differences, you could add a start time that falls on a different day than you intended. The value you enter can either adhere to GMT, or you can adjust the time manually by specifying in hours and minutes how much you want to offset GMT.",
            "examples": {
              "gmt": {
                "value": "2025-02-15T08:10:30Z",
                "summary": "GMT time format"
              },
              "offset": {
                "value": "2025-03-25T10:15:30+05:00Z",
                "summary": "Time with offset"
              }
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The time when the call ended. Your entry should adhere to the ISO 8601 date-time format. Apollo uses Greenwich Mean Time (GMT) by default. If you do not account for time zone differences, you could add an end time that falls on a different day than you intended. The value you enter can either adhere to GMT, or you can adjust the time manually by specifying in hours and minutes how much you want to offset GMT.",
            "examples": {
              "gmt": {
                "value": "2025-05-15T08:10:30Z",
                "summary": "GMT time format"
              },
              "offset": {
                "value": "2025-05-25T10:15:30+05:00Z",
                "summary": "Time with offset"
              }
            }
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The duration of the call in seconds. Do not enter minutes.",
            "examples": {
              "short_call": {
                "value": 120,
                "summary": "2 minute call"
              },
              "long_call": {
                "value": 205,
                "summary": "3 minute 25 second call"
              }
            }
          },
          {
            "name": "phone_call_purpose_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Assign a call purpose to the record. Call purposes are unique to your team's Apollo account. When you use the Purpose search filter for calls in the Apollo product, you can find the corresponding call purpose ID in the URL.",
            "example": "6095a710bd01d100a506d4cd"
          },
          {
            "name": "phone_call_outcome_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Assign a call outcome to the record. Call outcomes are unique to your team's Apollo account. When you use the Disposition search filter for calls in the Apollo product, you can find the corresponding call outcome ID in the URL.",
            "example": "6095a710bd01d100a506d4c5"
          },
          {
            "name": "note",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add a note to the call record.",
            "example": "This lead is interested in learning more about our new product line."
          }
        ],
        "responses": {
          "200": {
            "description": "Call records created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required. Refer to Create API Keys documentation to learn how to create a master API key."
          }
        }
      }
    },
    "/phone_calls/search": {
      "get": {
        "operationId": "searchCalls",
        "tags": [
          "Calls"
        ],
        "summary": "Search for Calls",
        "description": "Use the Search for Calls endpoint to find calls that your team has made or received using the Apollo dialer. This endpoint requires a master API key. If you attempt to call the endpoint without a master key, you will receive a 403 response.",
        "parameters": [
          {
            "name": "date_range[max]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Set the upper bound of the date range you want to search. Use this parameter in combination with the date_range[min] parameter. This date should fall after the date_range[min] date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-06-12"
          },
          {
            "name": "date_range[min]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Set the lower bound of the date range you want to search. Use this parameter in combination with the date_range[max] parameter. This date should fall before the date_range[max] date. The date should be formatted as YYYY-MM-DD.",
            "example": "2025-04-01"
          },
          {
            "name": "duration[max]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Set the upper bound for the call duration you want to search. The duration should be seconds, not minutes or hours. Use this parameter in combination with the duration[min] parameter. This number should be larger than duration[min].",
            "example": 180
          },
          {
            "name": "duration[min]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Set the lower bound for the call duration you want to search. The duration should be seconds, not minutes or hours. Use this parameter in combination with the duration[max] parameter. This number should be smaller than duration[max].",
            "example": 30
          },
          {
            "name": "inbound",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search for calls based on whether they were incoming (the prospect called your team) or outgoing (your team called the prospect)."
          },
          {
            "name": "user_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Find calls that included specific users in your team's Apollo account. You can add multiple users. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": [
              "67e33d527de088000daa60c4"
            ]
          },
          {
            "name": "contact_label_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Find calls that included specific contacts. You can add multiple contacts. In Apollo terminology, a contact is a person that your team has explicitly added to your database. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": [
              "67e33d527de088000daa60c4",
              "6708415f59d9c70001b2f852"
            ]
          },
          {
            "name": "phone_call_purpose_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter calls based on their purpose. Call purposes are unique to your team's Apollo account. When you use the Purpose search filter for calls in the Apollo product, you can find the corresponding call purpose ID in the URL.",
            "example": [
              "6095a710bd01d100a506d4cf"
            ]
          },
          {
            "name": "phone_call_outcome_ids[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter calls based on their outcome. Call outcomes are unique to your team's Apollo account. When you use the Disposition search filter for calls in the Apollo product, you can find the corresponding call outcome ID in the URL.",
            "example": [
              "6095a710bd01d100a506d4c5"
            ]
          },
          {
            "name": "q_keywords",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add keywords to narrow the search of the calls in your team's Apollo account.",
            "example": "marketing conference attendees"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The page number of the Apollo data that you want to retrieve. Use this parameter in combination with the per_page parameter to make search results for navigable and improve the performance of the endpoint.",
            "example": "4"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The number of search results that should be returned for each page. Limiting the number of results per page improves the endpoint's performance. Use the page parameter to search the different pages of data.",
            "example": "10"
          }
        ],
        "responses": {
          "200": {
            "description": "Call records retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "page": {
                          "type": "string",
                          "description": "Current page number"
                        },
                        "per_page": {
                          "type": "string",
                          "description": "Number of results per page"
                        },
                        "total_entries": {
                          "type": "integer",
                          "description": "Total number of entries"
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      }
                    },
                    "breadcrumbs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Filter label"
                          },
                          "signal_field_name": {
                            "type": "string",
                            "description": "Field name for the filter"
                          },
                          "value": {
                            "type": "string",
                            "description": "Filter value"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Human-readable display name"
                          }
                        }
                      },
                      "description": "Applied search filters"
                    },
                    "phone_calls": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/PhoneCall"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "contact": {
                                "type": "object",
                                "nullable": true,
                                "additionalProperties": false,
                                "properties": {
                                  "organization_logo_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "contact_roles": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "first_name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "last_name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "linkedin_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "title": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "contact_stage_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "owner_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "creator_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "person_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "email_needs_tickling": {
                                    "type": "boolean",
                                    "nullable": true
                                  },
                                  "organization_name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "source": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "original_source": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "organization_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "headline": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "photo_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "present_raw_address": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "linkedin_uid": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "extrapolated_email_confidence": {
                                    "type": "number",
                                    "nullable": true
                                  },
                                  "salesforce_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "salesforce_lead_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "salesforce_contact_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "salesforce_account_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "crm_owner_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "emailer_campaign_ids": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "direct_dial_status": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "direct_dial_enrichment_failed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                  },
                                  "city": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "country": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "state": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "email_status": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "email_source": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "account_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "last_activity_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                  },
                                  "hubspot_vid": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "hubspot_company_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "crm_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "sanitized_phone": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "merged_crm_ids": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "queued_for_crm_push": {
                                    "type": "boolean"
                                  },
                                  "suggested_from_rule_engine_config_id": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "email_unsubscribed": {
                                    "type": "boolean",
                                    "nullable": true
                                  },
                                  "person_deleted": {
                                    "type": "boolean",
                                    "nullable": true
                                  },
                                  "call_opted_out": {
                                    "type": "boolean",
                                    "nullable": true
                                  },
                                  "label_ids": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "has_pending_email_arcgate_request": {
                                    "type": "boolean"
                                  },
                                  "has_email_arcgate_request": {
                                    "type": "boolean"
                                  },
                                  "existence_level": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "email_from_customer": {
                                    "type": "boolean"
                                  },
                                  "typed_custom_fields": {
                                    "type": "object",
                                    "additionalProperties": true
                                  },
                                  "custom_field_errors": {
                                    "type": "object",
                                    "nullable": true
                                  },
                                  "salesforce_record_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "crm_record_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "email_status_unavailable_reason": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "email_true_status": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "updated_email_true_status": {
                                    "type": "boolean"
                                  },
                                  "source_display_name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "twitter_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "facebook_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "contact_emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "email_md5": {
                                          "type": "string"
                                        },
                                        "email_sha256": {
                                          "type": "string"
                                        },
                                        "email_status": {
                                          "type": "string"
                                        },
                                        "extrapolated_email_confidence": {
                                          "type": "number",
                                          "nullable": true
                                        },
                                        "position": {
                                          "type": "integer"
                                        },
                                        "email": {
                                          "type": "string"
                                        },
                                        "free_domain": {
                                          "type": "boolean"
                                        },
                                        "source": {
                                          "type": "string"
                                        },
                                        "third_party_vendor_name": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "vendor_validation_statuses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "email_needs_tickling": {
                                          "type": "boolean",
                                          "nullable": true
                                        },
                                        "email_true_status": {
                                          "type": "string"
                                        },
                                        "email_status_unavailable_reason": {
                                          "type": "string",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  },
                                  "intent_strength": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "show_intent": {
                                    "type": "boolean"
                                  },
                                  "phone_numbers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "raw_number": {
                                          "type": "string"
                                        },
                                        "sanitized_number": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "position": {
                                          "type": "integer"
                                        },
                                        "status": {
                                          "type": "string"
                                        },
                                        "dnc_status": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "dnc_other_info": {
                                          "type": "object",
                                          "additionalProperties": true
                                        },
                                        "dialer_flags": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "source_name": {
                                          "type": "string"
                                        },
                                        "vendor_validation_statuses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "third_party_vendor_name": {
                                          "type": "string",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  },
                                  "account_phone_note": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "free_domain": {
                                    "type": "boolean"
                                  },
                                  "email_domain_catchall": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "conversation_id": {
                                "type": "string",
                                "nullable": true,
                                "description": "ID of the conversation associated with the call"
                              }
                            }
                          }
                        ]
                      },
                      "description": "Array of phone call records"
                    },
                    "faceting": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "phone_call_stats_facets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "Facet value"
                              },
                              "display_name": {
                                "type": "string",
                                "description": "Human-readable display name"
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of calls matching this facet"
                              }
                            }
                          }
                        }
                      },
                      "description": "Faceting information for call statistics"
                    },
                    "pipeline_total": {
                      "type": "integer",
                      "description": "Total number of calls in the pipeline"
                    },
                    "num_fetch_result": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Number of fetch results"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required. Refer to Create API Keys documentation to learn how to create a master API key."
          }
        }
      }
    },
    "/phone_calls/{id}": {
      "put": {
        "operationId": "updateCallRecord",
        "tags": [
          "Calls"
        ],
        "summary": "Update Call Record",
        "description": "Use the Update Call Records endpoint to update your team's call records in Apollo. This endpoint requires a master API key. If you attempt to call the endpoint without a master key, you will receive a 403 response.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the call record to update"
          },
          {
            "name": "logged",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Set to true if you want to create an individual record for the phone call in Apollo."
          },
          {
            "name": "user_id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Designate the caller in your team's Apollo account. Use the Get a List of Users endpoint to retrieve IDs for all of the users within your Apollo account.",
            "example": "67e33d527de088000daa60c4"
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Designate the contact that was called. Use the Search for Contacts endpoint to retrieve IDs for all of the contacts within your Apollo account.",
            "example": "66e34b81740c50074e3d1bd4"
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Associate the call with an account. Use the Search for Accounts endpoint to retrieve IDs for all of the accounts within your Apollo account.",
            "example": "66e9abf95ac32901b20d1a0d"
          },
          {
            "name": "to_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The phone number that you dialed.",
            "example": "5551234567"
          },
          {
            "name": "from_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The phone number that dialed you.",
            "example": "5551234567"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "no_answer",
                "failed",
                "busy"
              ]
            },
            "description": "The status of the phone call. Possible values include: queued, ringing, in-progress, completed, no_answer, failed, busy"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The time when the call started. Your entry should adhere to the ISO 8601 date-time format. Apollo uses Greenwich Mean Time (GMT) by default.",
            "example": "2025-02-15T08:10:30Z"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The time when the call ended. Your entry should adhere to the ISO 8601 date-time format. Apollo uses Greenwich Mean Time (GMT) by default.",
            "example": "2025-05-15T08:10:30Z"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The duration of the call in seconds. Do not enter minutes.",
            "example": 120
          },
          {
            "name": "phone_call_purpose_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Assign a call purpose to the record. Call purposes are unique to your team's Apollo account.",
            "example": "6095a710bd01d100a506d4cd"
          },
          {
            "name": "phone_call_outcome_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Assign a call outcome to the record. Call outcomes are unique to your team's Apollo account.",
            "example": "6095a710bd01d100a506d4c5"
          },
          {
            "name": "note",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Add a note to the call record.",
            "example": "This lead is interested in learning more about our new product line."
          }
        ],
        "responses": {
          "200": {
            "description": "Call record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required. Refer to Create API Keys documentation to learn how to create a master API key."
          }
        }
      }
    },
    "/usage_stats/api_usage_stats": {
      "post": {
        "operationId": "viewApiUsage",
        "tags": [
          "Misc"
        ],
        "summary": "View API Usage Stats and Rate Limits (Master key)",
        "responses": {
          "200": {
            "description": "API usage statistics and rate limits for all endpoints",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "integer",
                            "description": "Daily rate limit"
                          },
                          "consumed": {
                            "type": "integer",
                            "description": "Number of requests consumed today"
                          },
                          "left_over": {
                            "type": "integer",
                            "description": "Remaining requests for today"
                          }
                        }
                      },
                      "hour": {
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "integer",
                            "description": "Hourly rate limit"
                          },
                          "consumed": {
                            "type": "integer",
                            "description": "Number of requests consumed this hour"
                          },
                          "left_over": {
                            "type": "integer",
                            "description": "Remaining requests for this hour"
                          }
                        }
                      },
                      "minute": {
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "integer",
                            "description": "Per-minute rate limit"
                          },
                          "consumed": {
                            "type": "integer",
                            "description": "Number of requests consumed this minute"
                          },
                          "left_over": {
                            "type": "integer",
                            "description": "Remaining requests for this minute"
                          }
                        }
                      }
                    }
                  },
                  "description": "Rate limiting information keyed by endpoint path and action"
                }
              }
            }
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "operationId": "listUsers",
        "tags": [
          "Misc"
        ],
        "summary": "Get a List of Users (Master key)",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Master key required"
          }
        }
      }
    },
    "/email_accounts": {
      "get": {
        "operationId": "listEmailAccounts",
        "tags": [
          "Misc"
        ],
        "summary": "Get a List of Email Accounts (Master key)",
        "responses": {
          "200": {
            "description": "List of email accounts with detailed configuration and deliverability information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email_accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "aliases": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Email aliases for this account"
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the email account"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "ID of the user who owns this email account"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "Primary email address"
                          },
                          "type": {
                            "type": "string",
                            "description": "Email provider type (e.g., gmail, outlook)"
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Whether the email account is active"
                          },
                          "default": {
                            "type": "boolean",
                            "description": "Whether this is the default email account"
                          },
                          "seconds_delay_between_emails": {
                            "type": "integer",
                            "description": "Delay in seconds between sending emails"
                          },
                          "provider_display_name": {
                            "type": "string",
                            "description": "Human-readable provider name"
                          },
                          "nylas_provider": {
                            "type": "string",
                            "nullable": true,
                            "description": "Nylas provider information"
                          },
                          "last_synced_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last synchronization timestamp"
                          },
                          "email_sending_policy_cd": {
                            "type": "string",
                            "description": "Email sending policy code"
                          },
                          "sendgrid_api_user": {
                            "type": "string",
                            "nullable": true,
                            "description": "SendGrid API user"
                          },
                          "mailgun_domains": {
                            "type": "string",
                            "nullable": true,
                            "description": "Mailgun domains configuration"
                          },
                          "nylas_api_version": {
                            "type": "string",
                            "nullable": true,
                            "description": "Nylas API version"
                          },
                          "signature_edit_disabled": {
                            "type": "boolean",
                            "description": "Whether signature editing is disabled"
                          },
                          "revoked_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Timestamp when account was revoked"
                          },
                          "inactive_reason": {
                            "type": "string",
                            "nullable": true,
                            "description": "Reason for account inactivity"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Account creation timestamp"
                          },
                          "sendgrid_api_key_v3": {
                            "type": "string",
                            "nullable": true,
                            "description": "SendGrid API key v3"
                          },
                          "email_daily_threshold": {
                            "type": "integer",
                            "description": "Daily email sending threshold"
                          },
                          "deliverability_score": {
                            "type": "object",
                            "description": "Detailed deliverability metrics and scoring",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "avg_click_rate": {
                                "type": "number"
                              },
                              "avg_daily_sent": {
                                "type": "number"
                              },
                              "avg_delivered_rate": {
                                "type": "number"
                              },
                              "avg_hard_bounce_rate": {
                                "type": "number"
                              },
                              "avg_open_rate": {
                                "type": "number"
                              },
                              "avg_reply_rate": {
                                "type": "number"
                              },
                              "avg_spam_block_rate": {
                                "type": "number"
                              },
                              "avg_unsubscribe_rate": {
                                "type": "number"
                              },
                              "click_rate_score": {
                                "type": "number"
                              },
                              "concurrency_locks": {
                                "nullable": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "daily_email_sent_score": {
                                "type": "number"
                              },
                              "date_from": {
                                "type": "string",
                                "format": "date"
                              },
                              "date_to": {
                                "type": "string",
                                "format": "date"
                              },
                              "deliverability_score": {
                                "type": "number"
                              },
                              "domain_health_score": {
                                "type": "number"
                              },
                              "email_account_domain_age_score": {
                                "type": "number"
                              },
                              "email_account_id": {
                                "type": "string"
                              },
                              "hard_bounce_score": {
                                "type": "number"
                              },
                              "open_rate_score": {
                                "type": "number"
                              },
                              "random": {
                                "type": "number"
                              },
                              "reply_rate_score": {
                                "type": "number"
                              },
                              "spam_block_score": {
                                "type": "number"
                              },
                              "sum_clicked_count": {
                                "type": "integer"
                              },
                              "sum_delivered_count": {
                                "type": "integer"
                              },
                              "sum_hard_bounced_count": {
                                "type": "integer"
                              },
                              "sum_opened_count": {
                                "type": "integer"
                              },
                              "sum_replied_count": {
                                "type": "integer"
                              },
                              "sum_sent_count": {
                                "type": "integer"
                              },
                              "sum_spam_blocked_count": {
                                "type": "integer"
                              },
                              "sum_unsubscribed_count": {
                                "type": "integer"
                              },
                              "team_id": {
                                "type": "string"
                              },
                              "unsubscribe_rate_score": {
                                "type": "number"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "user_id": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              }
                            }
                          },
                          "max_outbound_emails_per_hour": {
                            "type": "integer",
                            "description": "Maximum outbound emails per hour"
                          },
                          "limits_editable": {
                            "type": "boolean",
                            "description": "Whether sending limits are editable"
                          },
                          "is_opted_in_mailwarming": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether opted into mail warming"
                          },
                          "mailwarming_max": {
                            "type": "integer",
                            "description": "Maximum mail warming emails"
                          },
                          "mailwarming_to_send_daily": {
                            "type": "integer",
                            "description": "Daily mail warming emails to send"
                          },
                          "mailwarming_to_send_incrementor": {
                            "type": "integer",
                            "description": "Mail warming increment value"
                          },
                          "mailwarming_status": {
                            "type": "string",
                            "description": "Current mail warming status"
                          },
                          "mailwarming_eta": {
                            "type": "string",
                            "nullable": true,
                            "description": "Estimated time for mail warming completion"
                          },
                          "mailwarming_subject_token": {
                            "type": "string",
                            "nullable": true,
                            "description": "Mail warming subject token"
                          },
                          "mailwarming_score": {
                            "type": "number",
                            "description": "Current mail warming score"
                          },
                          "mailwarming_score_banner": {
                            "type": "string",
                            "description": "Mail warming score banner message"
                          },
                          "mailwarming_on_weekdays_only": {
                            "type": "boolean",
                            "description": "Whether mail warming runs on weekdays only"
                          },
                          "true_warmup_enabled": {
                            "type": "boolean",
                            "description": "Whether true warmup is enabled"
                          },
                          "true_warmup_daily_limit": {
                            "type": "integer",
                            "description": "Daily limit for true warmup"
                          },
                          "true_warmup_progress": {
                            "type": "number",
                            "description": "True warmup progress percentage"
                          },
                          "true_warmup_status": {
                            "type": "string",
                            "nullable": true,
                            "description": "Current true warmup status"
                          },
                          "true_warmup_approximate_end_date": {
                            "type": "string",
                            "nullable": true,
                            "description": "Approximate end date for true warmup"
                          },
                          "true_warmup_last_throttled_at": {
                            "type": "string",
                            "nullable": true,
                            "description": "Last throttled timestamp for true warmup"
                          },
                          "true_warmup_enable_thresholds": {
                            "type": "boolean",
                            "description": "Whether true warmup thresholds are enabled"
                          },
                          "true_warmup_thresholds": {
                            "type": "object",
                            "description": "True warmup threshold configuration",
                            "properties": {
                              "open_rate": {
                                "type": "number",
                                "description": "Open rate threshold"
                              },
                              "reply_rate": {
                                "type": "number",
                                "description": "Reply rate threshold"
                              },
                              "bounce_rate": {
                                "type": "number",
                                "description": "Bounce rate threshold"
                              },
                              "spam_block_rate": {
                                "type": "number",
                                "description": "Spam block rate threshold"
                              }
                            }
                          },
                          "active_campaigns_count": {
                            "type": "integer",
                            "description": "Number of active campaigns using this account"
                          },
                          "nudge_user_to_send_mails": {
                            "type": "boolean",
                            "description": "Whether to nudge user to send emails"
                          },
                          "signature_html": {
                            "type": "string",
                            "description": "HTML signature for emails"
                          },
                          "fields_fully_loaded": {
                            "type": "boolean",
                            "description": "Whether all fields are fully loaded"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/labels": {
      "get": {
        "operationId": "listListsAndTags",
        "tags": [
          "Misc"
        ],
        "summary": "Get a List of All Lists and Tags (Master key)",
        "responses": {
          "200": {
            "description": "Array of lists and tags with metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Internal MongoDB ID"
                      },
                      "cached_count": {
                        "type": "integer",
                        "description": "Cached count of items in this list"
                      },
                      "concurrency_locks": {
                        "type": "object",
                        "description": "Concurrency lock information"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp"
                      },
                      "modality": {
                        "type": "string",
                        "description": "Type of list (contacts, accounts, emailer_campaigns, etc.)"
                      },
                      "name": {
                        "type": "string",
                        "description": "Display name of the list"
                      },
                      "need_cached_count_update": {
                        "type": "boolean",
                        "description": "Whether cached count needs updating"
                      },
                      "needs_count_update_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when count update is needed"
                      },
                      "rule_config_template_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "ID of rule configuration template"
                      },
                      "team_id": {
                        "type": "string",
                        "description": "ID of the team that owns this list"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp"
                      },
                      "user_id": {
                        "type": "string",
                        "description": "ID of the user who created this list"
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the list"
                      },
                      "key": {
                        "type": "string",
                        "description": "Key identifier (same as id)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/typed_custom_fields": {
      "get": {
        "operationId": "listCustomFields",
        "tags": [
          "Misc"
        ],
        "summary": "Get a List of All Custom Fields (Master key)",
        "description": "Retrieves a list of all custom fields in your Apollo account. This endpoint requires a master API key.",
        "responses": {
          "200": {
            "description": "List of custom fields with detailed configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldListResponse"
                },
                "example": {
                  "typed_custom_fields": [
                    {
                      "id": "60c39ed82bd02f01154c470a",
                      "modality": "contact",
                      "name": "New Product Launch Date",
                      "type": "datetime",
                      "picklist_options": [],
                      "mapped_crm_field": null,
                      "additional_mapped_crm_field": null,
                      "is_readonly_mapped_crm_field": null,
                      "picklist_options_last_synced_at": "2021-06-11T17:35:12.000+00:00",
                      "picklist_value_set_id": null,
                      "mirrored": false,
                      "system_name": null,
                      "text_field_max_length": null,
                      "finder_view_ids": [],
                      "is_local": false
                    },
                    {
                      "id": "617ff4041e711500a401c25e",
                      "modality": "contact",
                      "name": "Customer Age",
                      "type": "picklist",
                      "picklist_options": [],
                      "mapped_crm_field": null,
                      "additional_mapped_crm_field": null,
                      "is_readonly_mapped_crm_field": null,
                      "picklist_options_last_synced_at": "2021-11-01T14:02:48.000+00:00",
                      "picklist_value_set_id": "61117d862f006400da5bf2e4",
                      "mirrored": false,
                      "system_name": null,
                      "text_field_max_length": null,
                      "finder_view_ids": [],
                      "is_local": false,
                      "picklist_values": [
                        {
                          "_id": "617ff4041e711500a401c25f",
                          "mapped_crm_values": {},
                          "name": "New Customer",
                          "id": "617ff4041e711500a401c25f",
                          "key": "617ff4041e711500a401c25f"
                        },
                        {
                          "_id": "617ff4041e711500a401c260",
                          "mapped_crm_values": {},
                          "name": "1 year",
                          "id": "617ff4041e711500a401c260",
                          "key": "617ff4041e711500a401c260"
                        },
                        {
                          "_id": "617ff4041e711500a401c261",
                          "mapped_crm_values": {},
                          "name": "2 years",
                          "id": "617ff4041e711500a401c261",
                          "key": "617ff4041e711500a401c261"
                        },
                        {
                          "_id": "617ff4041e711500a401c262",
                          "mapped_crm_values": {},
                          "name": "3 years",
                          "id": "617ff4041e711500a401c262",
                          "key": "617ff4041e711500a401c262"
                        },
                        {
                          "_id": "617ff4041e711500a401c263",
                          "mapped_crm_values": {},
                          "name": "Longterm",
                          "id": "617ff4041e711500a401c263",
                          "key": "617ff4041e711500a401c263"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Master API key required. Refer to Create API Keys documentation to learn how to create a master API key."
          }
        }
      }
    },
    "/fields": {
      "post": {
        "operationId": "createCustomField",
        "tags": [
          "Misc"
        ],
        "summary": "Create a Custom Field (Master key)",
        "parameters": [
          {
            "name": "label",
            "in": "query",
            "description": "Name of the custom field you want to create",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Test Name"
            }
          },
          {
            "name": "modality",
            "in": "query",
            "description": "The modality of the custom field you want to create",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "contact",
                "account",
                "opportunity"
              ],
              "example": "contact"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "What kind of custom field you want to create",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "string",
                "textarea",
                "number",
                "date",
                "datetime",
                "boolean"
              ],
              "example": "textarea"
            }
          },
          {
            "name": "meta[max_length]",
            "in": "query",
            "description": "Maximum length for text fields",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom field created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "typed_custom_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "32d42c92-5be4-4ec4-96c7-f689b43ec8a8"
                          },
                          "name": {
                            "type": "string",
                            "example": "Test Name"
                          },
                          "modality": {
                            "type": "string",
                            "enum": [
                              "contact",
                              "account",
                              "opportunity"
                            ],
                            "example": "contact"
                          },
                          "text_field_max_length": {
                            "type": "integer",
                            "example": 120
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "modality"
                        ]
                      }
                    }
                  },
                  "required": [
                    "typed_custom_fields"
                  ],
                  "example": {
                    "typed_custom_fields": [
                      {
                        "id": "32d42c92-5be4-4ec4-96c7-f689b43ec8a8",
                        "name": "Test Name",
                        "modality": "contact",
                        "text_field_max_length": 120
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CustomFieldListResponse": {
        "type": "object",
        "properties": {
          "typed_custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        },
        "required": [
          "typed_custom_fields"
        ]
      },
      "CustomField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the custom field"
          },
          "modality": {
            "type": "string",
            "enum": [
              "contact",
              "account",
              "opportunity"
            ],
            "description": "The type of resource this custom field is associated with"
          },
          "name": {
            "type": "string",
            "description": "Display name of the custom field"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "number",
              "date",
              "datetime",
              "picklist",
              "multiselect",
              "boolean",
              "url",
              "currency",
              "percent"
            ],
            "description": "Data type of the custom field"
          },
          "picklist_options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available options for picklist fields (deprecated in favor of picklist_values)"
          },
          "mapped_crm_field": {
            "type": "string",
            "nullable": true,
            "description": "Corresponding field name in the connected CRM"
          },
          "additional_mapped_crm_field": {
            "type": "string",
            "nullable": true,
            "description": "Additional CRM field mapping if applicable"
          },
          "is_readonly_mapped_crm_field": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the CRM field mapping is read-only"
          },
          "picklist_options_last_synced_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the picklist options were last synced from the CRM"
          },
          "picklist_value_set_id": {
            "type": "string",
            "nullable": true,
            "description": "ID of the picklist value set if this is a picklist field"
          },
          "mirrored": {
            "type": "boolean",
            "description": "Whether the field is mirrored from another system"
          },
          "system_name": {
            "type": "string",
            "nullable": true,
            "description": "System name of the field if it's a system field"
          },
          "text_field_max_length": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum length for text fields"
          },
          "finder_view_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of finder views where this field is visible"
          },
          "is_local": {
            "type": "boolean",
            "description": "Whether the field is local to the current environment"
          },
          "picklist_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PicklistValue"
            },
            "description": "Detailed picklist values with metadata"
          }
        },
        "required": [
          "id",
          "modality",
          "name",
          "type",
          "picklist_options",
          "mapped_crm_field",
          "mirrored",
          "finder_view_ids",
          "is_local"
        ]
      },
      "PicklistValue": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Internal ID of the picklist value"
          },
          "mapped_crm_values": {
            "type": "object",
            "additionalProperties": true,
            "description": "Mapped CRM values for this picklist option"
          },
          "name": {
            "type": "string",
            "description": "Display name of the picklist option"
          },
          "id": {
            "type": "string",
            "description": "ID of the picklist value"
          },
          "key": {
            "type": "string",
            "description": "Key of the picklist value"
          }
        },
        "required": [
          "_id",
          "name",
          "id",
          "key"
        ]
      },
      "PhoneCall": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the phone call record"
          },
          "user_id": {
            "type": "string",
            "description": "The ID of the user who made the call"
          },
          "account_id": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the associated account"
          },
          "contact_id": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the contact who was called"
          },
          "voice_setting_id": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the voice setting"
          },
          "phone_call_outcome_id": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the call outcome"
          },
          "phone_call_purpose_id": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the call purpose"
          },
          "recording_url": {
            "type": "string",
            "nullable": true,
            "description": "URL to the call recording"
          },
          "twilio_call_sid": {
            "type": "string",
            "nullable": true,
            "description": "Twilio call SID"
          },
          "call_identifier": {
            "type": "string",
            "nullable": true,
            "description": "Call identifier"
          },
          "agent_call_sid": {
            "type": "string",
            "nullable": true,
            "description": "Agent call SID"
          },
          "inbound": {
            "type": "boolean",
            "description": "Whether the call was inbound"
          },
          "from_number": {
            "type": "string",
            "nullable": true,
            "description": "The phone number that made the call"
          },
          "to_number": {
            "type": "string",
            "nullable": true,
            "description": "The phone number that was called"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The start time of the call"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "The end time of the call"
          },
          "transcription_too_long": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the transcription was too long"
          },
          "twilio_recording_sid": {
            "type": "string",
            "nullable": true,
            "description": "Twilio recording SID"
          },
          "need_recording_upload": {
            "type": "boolean",
            "description": "Whether recording upload is needed"
          },
          "logged": {
            "type": "boolean",
            "description": "Whether the call was logged"
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Notes about the call"
          },
          "status": {
            "type": "string",
            "description": "The status of the call",
            "enum": [
              "queued",
              "ringing",
              "in-progress",
              "completed",
              "no_answer",
              "failed",
              "busy",
              "no-answer"
            ]
          },
          "outreach_task_id": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the associated outreach task"
          },
          "salesforce_id": {
            "type": "string",
            "nullable": true,
            "description": "Salesforce ID"
          },
          "hubspot_id": {
            "type": "string",
            "nullable": true,
            "description": "HubSpot ID"
          },
          "conference_id": {
            "type": "string",
            "nullable": true,
            "description": "Conference ID"
          },
          "opportunity_id": {
            "type": "string",
            "nullable": true,
            "description": "Opportunity ID"
          },
          "voicemail_dropped": {
            "type": "boolean",
            "description": "Whether voicemail was dropped"
          },
          "parallel_dial_item_id": {
            "type": "string",
            "nullable": true,
            "description": "Parallel dial item ID"
          },
          "transcribed": {
            "type": "boolean",
            "description": "Whether the call was transcribed"
          },
          "transcribing": {
            "type": "boolean",
            "description": "Whether the call is being transcribed"
          },
          "transcription_progress": {
            "type": "integer",
            "description": "Transcription progress percentage"
          },
          "note_text": {
            "type": "string",
            "description": "Note text about the call"
          },
          "duration": {
            "type": "integer",
            "description": "The duration of the call in seconds"
          }
        }
      },
      "PhoneCallResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "phone_call": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for the phone call record"
              },
              "user_id": {
                "type": "string",
                "description": "The ID of the user who made the call"
              },
              "account_id": {
                "type": "string",
                "description": "The ID of the associated account"
              },
              "contact_id": {
                "type": "string",
                "description": "The ID of the contact who was called"
              },
              "voice_setting_id": {
                "type": "string",
                "nullable": true,
                "description": "The ID of the voice setting"
              },
              "phone_call_outcome_id": {
                "type": "string",
                "nullable": true,
                "description": "The ID of the call outcome"
              },
              "phone_call_purpose_id": {
                "type": "string",
                "nullable": true,
                "description": "The ID of the call purpose"
              },
              "recording_url": {
                "type": "string",
                "nullable": true,
                "description": "URL to the call recording"
              },
              "twilio_call_sid": {
                "type": "string",
                "nullable": true,
                "description": "Twilio call SID"
              },
              "call_identifier": {
                "type": "string",
                "nullable": true,
                "description": "Call identifier"
              },
              "agent_call_sid": {
                "type": "string",
                "nullable": true,
                "description": "Agent call SID"
              },
              "inbound": {
                "type": "boolean",
                "description": "Whether the call was inbound"
              },
              "from_number": {
                "type": "string",
                "nullable": true,
                "description": "The phone number that made the call"
              },
              "to_number": {
                "type": "string",
                "nullable": true,
                "description": "The phone number that was called"
              },
              "start_time": {
                "type": "string",
                "format": "date-time",
                "description": "The start time of the call"
              },
              "end_time": {
                "type": "string",
                "format": "date-time",
                "description": "The end time of the call"
              },
              "transcription_too_long": {
                "type": "boolean",
                "nullable": true,
                "description": "Whether the transcription was too long"
              },
              "twilio_recording_sid": {
                "type": "string",
                "nullable": true,
                "description": "Twilio recording SID"
              },
              "need_recording_upload": {
                "type": "boolean",
                "description": "Whether recording upload is needed"
              },
              "logged": {
                "type": "boolean",
                "description": "Whether the call was logged"
              },
              "note": {
                "type": "string",
                "nullable": true,
                "description": "Notes about the call"
              },
              "status": {
                "type": "string",
                "description": "The status of the call",
                "enum": [
                  "queued",
                  "ringing",
                  "in-progress",
                  "completed",
                  "no_answer",
                  "failed",
                  "busy"
                ]
              },
              "outreach_task_id": {
                "type": "string",
                "nullable": true,
                "description": "The ID of the associated outreach task"
              },
              "salesforce_id": {
                "type": "string",
                "nullable": true,
                "description": "Salesforce ID"
              },
              "hubspot_id": {
                "type": "string",
                "nullable": true,
                "description": "HubSpot ID"
              },
              "conference_id": {
                "type": "string",
                "nullable": true,
                "description": "Conference ID"
              },
              "opportunity_id": {
                "type": "string",
                "nullable": true,
                "description": "Opportunity ID"
              },
              "voicemail_dropped": {
                "type": "boolean",
                "description": "Whether voicemail was dropped"
              },
              "parallel_dial_item_id": {
                "type": "string",
                "nullable": true,
                "description": "Parallel dial item ID"
              },
              "transcribed": {
                "type": "boolean",
                "description": "Whether the call was transcribed"
              },
              "transcribing": {
                "type": "boolean",
                "description": "Whether the call is being transcribed"
              },
              "transcription_progress": {
                "type": "integer",
                "description": "Transcription progress percentage"
              },
              "note_text": {
                "type": "string",
                "nullable": true,
                "description": "Note text about the call"
              },
              "duration": {
                "type": "integer",
                "description": "The duration of the call in seconds"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact"
              },
              "account": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "TaskSearchResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "breadcrumbs": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Search breadcrumbs for navigation"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_entries": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            }
          },
          "faceting": {
            "type": "object",
            "properties": {
              "playbook_step_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "person_function_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "person_seniority_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "normalized_person_title_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_ids_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_ids_in_query_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "person_persona_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_keywords_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "linkedin_industry_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "num_employees_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "revenues_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "currently_using_any_of_technology_uids_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "currently_using_all_of_technology_uids_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "currently_not_using_any_of_technology_uids_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "added_technology_uids_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "dropped_technology_uids_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "latest_funding_stage_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_trading_status_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "person_city_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "person_state_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "person_country_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_hq_city_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_hq_state_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_hq_country_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "organization_intent_scoring_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "forecast_category_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "intent_topic_count_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "task_types": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Task type facets with counts"
              },
              "total_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "linkedin_task": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              },
              "contact_stage_facets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Comprehensive faceting information for filtering tasks by various attributes"
          },
          "pipeline_total": {
            "type": "integer",
            "description": "Total number of tasks in pipeline"
          },
          "num_fetch_result": {
            "type": "integer",
            "nullable": true,
            "description": "Number of fetch results"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "emailer_campaign_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated emailer campaign ID"
          },
          "id": {
            "type": "string",
            "description": "Apollo task ID"
          },
          "user_id": {
            "type": "string",
            "description": "User ID of the task assignee"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Task creation timestamp"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Task completion timestamp"
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Task description or note"
          },
          "skipped_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Task skip timestamp"
          },
          "due_at": {
            "type": "string",
            "format": "date-time",
            "description": "Task due date and time"
          },
          "type": {
            "type": "string",
            "description": "Type of task"
          },
          "priority": {
            "type": "string",
            "description": "Task priority level"
          },
          "status": {
            "type": "string",
            "description": "Current task status"
          },
          "answered": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether task has been answered"
          },
          "contact_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated contact ID"
          },
          "person_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated person ID"
          },
          "account_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated account ID"
          },
          "organization_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated organization ID"
          },
          "persona_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of associated persona IDs"
          },
          "subject": {
            "type": "string",
            "nullable": true,
            "description": "Task subject"
          },
          "created_from": {
            "type": "string",
            "nullable": true,
            "description": "Source of task creation"
          },
          "salesforce_type": {
            "type": "string",
            "nullable": true,
            "description": "Salesforce task type"
          },
          "playbook_step_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of playbook step IDs"
          },
          "playbook_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated playbook ID"
          },
          "needs_playbook_autoprospecting": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether task needs playbook autoprospecting"
          },
          "starred_by_user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of user IDs who starred this task"
          },
          "salesforce_id": {
            "type": "string",
            "nullable": true,
            "description": "Salesforce task ID"
          },
          "hubspot_id": {
            "type": "string",
            "nullable": true,
            "description": "HubSpot task ID"
          },
          "opportunity_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated opportunity ID"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "Task title"
          },
          "rule_config_id": {
            "type": "string",
            "nullable": true,
            "description": "Associated rule config ID"
          },
          "creator_id": {
            "type": "string",
            "nullable": true,
            "description": "User ID who created the task"
          },
          "opportunity": {
            "type": "object",
            "nullable": true,
            "description": "Associated opportunity object",
            "additionalProperties": true
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Account"
              }
            ],
            "nullable": true,
            "description": "Associated account object"
          },
          "contact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Contact"
              }
            ],
            "nullable": true,
            "description": "Associated contact object"
          },
          "campaign_name": {
            "type": "string",
            "nullable": true,
            "description": "Associated campaign name"
          },
          "campaign_position": {
            "type": "integer",
            "nullable": true,
            "description": "Position in campaign"
          },
          "linkedin_emailer_template": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string"
              },
              "body_text": {
                "type": "string"
              }
            },
            "description": "LinkedIn emailer template details"
          }
        }
      },
      "OrganizationEnrichment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Apollo organization ID"
          },
          "name": {
            "type": "string",
            "description": "Organization name"
          },
          "website_url": {
            "type": "string",
            "format": "uri",
            "description": "Organization website URL"
          },
          "blog_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Organization blog URL"
          },
          "angellist_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "AngelList profile URL"
          },
          "linkedin_url": {
            "type": "string",
            "format": "uri",
            "description": "LinkedIn company page URL"
          },
          "twitter_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Twitter profile URL"
          },
          "facebook_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Facebook page URL"
          },
          "primary_phone": {
            "type": "object",
            "description": "Primary phone number object"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Languages supported by the organization"
          },
          "alexa_ranking": {
            "type": "integer",
            "nullable": true,
            "description": "Alexa website ranking"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number"
          },
          "linkedin_uid": {
            "type": "string",
            "description": "LinkedIn unique identifier"
          },
          "founded_year": {
            "type": "integer",
            "nullable": true,
            "description": "Year the organization was founded"
          },
          "publicly_traded_symbol": {
            "type": "string",
            "nullable": true,
            "description": "Stock ticker symbol if publicly traded"
          },
          "publicly_traded_exchange": {
            "type": "string",
            "nullable": true,
            "description": "Stock exchange if publicly traded"
          },
          "logo_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Organization logo URL"
          },
          "crunchbase_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Crunchbase profile URL"
          },
          "primary_domain": {
            "type": "string",
            "description": "Primary domain name"
          },
          "industry": {
            "type": "string",
            "description": "Primary industry"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Keywords associated with the organization"
          },
          "estimated_num_employees": {
            "type": "integer",
            "description": "Estimated number of employees"
          },
          "industries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of industries the organization operates in"
          },
          "secondary_industries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Secondary industries"
          },
          "snippets_loaded": {
            "type": "boolean",
            "description": "Whether snippets have been loaded"
          },
          "industry_tag_id": {
            "type": "string",
            "description": "Industry tag identifier"
          },
          "industry_tag_hash": {
            "type": "object",
            "description": "Industry tag hash mapping"
          },
          "retail_location_count": {
            "type": "integer",
            "description": "Number of retail locations"
          },
          "raw_address": {
            "type": "string",
            "description": "Full raw address"
          },
          "street_address": {
            "type": "string",
            "description": "Street address"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State or province"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal or ZIP code"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "owned_by_organization_id": {
            "type": "string",
            "nullable": true,
            "description": "ID of parent organization if owned by another organization"
          },
          "seo_description": {
            "type": "string",
            "description": "SEO description of the organization"
          },
          "short_description": {
            "type": "string",
            "description": "Short description of the organization"
          },
          "suborganizations": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of suborganizations"
          },
          "num_suborganizations": {
            "type": "integer",
            "description": "Number of suborganizations"
          },
          "annual_revenue_printed": {
            "type": "string",
            "description": "Annual revenue in human-readable format"
          },
          "annual_revenue": {
            "type": "integer",
            "description": "Annual revenue in numeric format"
          },
          "total_funding": {
            "type": "integer",
            "description": "Total funding amount"
          },
          "total_funding_printed": {
            "type": "string",
            "description": "Total funding in human-readable format"
          },
          "latest_funding_round_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of latest funding round"
          },
          "latest_funding_stage": {
            "type": "string",
            "description": "Latest funding stage (e.g., Series D)"
          },
          "funding_events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "news_url": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "type": {
                  "type": "string"
                },
                "investors": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                }
              }
            },
            "description": "List of funding events"
          },
          "technology_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of technology names used by the organization"
          },
          "current_technologies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                }
              }
            },
            "description": "Detailed list of current technologies with categories"
          },
          "org_chart_root_people_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of root people in org chart"
          },
          "org_chart_sector": {
            "type": "string",
            "description": "Organization chart sector classification"
          },
          "org_chart_removed": {
            "type": "boolean",
            "description": "Whether org chart has been removed"
          },
          "org_chart_show_department_filter": {
            "type": "boolean",
            "description": "Whether to show department filter in org chart"
          },
          "account_id": {
            "type": "string",
            "description": "Associated account ID"
          },
          "account": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "team_id": {
                "type": "string"
              },
              "organization_id": {
                "type": "string"
              },
              "account_stage_id": {
                "type": "string",
                "nullable": true
              },
              "source": {
                "type": "string"
              },
              "original_source": {
                "type": "string"
              },
              "creator_id": {
                "type": "string",
                "nullable": true
              },
              "owner_id": {
                "type": "string"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "phone": {
                "type": "string"
              },
              "phone_status": {
                "type": "string"
              },
              "hubspot_id": {
                "type": "string",
                "nullable": true
              },
              "salesforce_id": {
                "type": "string",
                "nullable": true
              },
              "crm_owner_id": {
                "type": "string",
                "nullable": true
              },
              "parent_account_id": {
                "type": "string",
                "nullable": true
              },
              "linkedin_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "sanitized_phone": {
                "type": "string"
              },
              "account_playbook_statuses": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "account_rule_config_statuses": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "existence_level": {
                "type": "string"
              },
              "label_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "typed_custom_fields": {
                "type": "object"
              },
              "custom_field_errors": {
                "type": "object"
              },
              "modality": {
                "type": "string"
              },
              "source_display_name": {
                "type": "string"
              },
              "crm_record_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "intent_strength": {
                "type": "string",
                "nullable": true
              },
              "show_intent": {
                "type": "boolean"
              },
              "has_intent_signal_account": {
                "type": "boolean"
              },
              "intent_signal_account": {
                "type": "object",
                "nullable": true
              }
            },
            "description": "Associated account object"
          },
          "departmental_head_count": {
            "type": "object",
            "properties": {
              "engineering": {
                "type": "integer"
              },
              "operations": {
                "type": "integer"
              },
              "support": {
                "type": "integer"
              },
              "marketing": {
                "type": "integer"
              },
              "human_resources": {
                "type": "integer"
              },
              "sales": {
                "type": "integer"
              },
              "finance": {
                "type": "integer"
              },
              "consulting": {
                "type": "integer"
              },
              "legal": {
                "type": "integer"
              },
              "arts_and_design": {
                "type": "integer"
              },
              "accounting": {
                "type": "integer"
              },
              "business_development": {
                "type": "integer"
              },
              "information_technology": {
                "type": "integer"
              },
              "education": {
                "type": "integer"
              },
              "media_and_commmunication": {
                "type": "integer"
              },
              "product_management": {
                "type": "integer"
              },
              "entrepreneurship": {
                "type": "integer"
              },
              "data_science": {
                "type": "integer"
              },
              "administrative": {
                "type": "integer"
              }
            },
            "description": "Employee count by department"
          }
        }
      },
      "OrganizationSearchResponse": {
        "type": "object",
        "properties": {
          "breadcrumbs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "signal_field_name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                }
              }
            }
          },
          "partial_results_only": {
            "type": "boolean"
          },
          "has_join": {
            "type": "boolean"
          },
          "disable_eu_prospecting": {
            "type": "boolean"
          },
          "partial_results_limit": {
            "type": "integer"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_entries": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "website_url": {
                  "type": "string",
                  "nullable": true
                },
                "blog_url": {
                  "type": "string",
                  "nullable": true
                },
                "angellist_url": {
                  "type": "string",
                  "nullable": true
                },
                "linkedin_url": {
                  "type": "string",
                  "nullable": true
                },
                "twitter_url": {
                  "type": "string",
                  "nullable": true
                },
                "facebook_url": {
                  "type": "string",
                  "nullable": true
                },
                "primary_phone": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "number": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "sanitized_number": {
                      "type": "string"
                    }
                  }
                },
                "languages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "alexa_ranking": {
                  "type": "integer",
                  "nullable": true
                },
                "phone": {
                  "type": "string",
                  "nullable": true
                },
                "linkedin_uid": {
                  "type": "string",
                  "nullable": true
                },
                "founded_year": {
                  "type": "integer",
                  "nullable": true
                },
                "publicly_traded_symbol": {
                  "type": "string",
                  "nullable": true
                },
                "publicly_traded_exchange": {
                  "type": "string",
                  "nullable": true
                },
                "logo_url": {
                  "type": "string",
                  "nullable": true
                },
                "crunchbase_url": {
                  "type": "string",
                  "nullable": true
                },
                "primary_domain": {
                  "type": "string"
                },
                "sanitized_phone": {
                  "type": "string",
                  "nullable": true
                },
                "owned_by_organization_id": {
                  "type": "string",
                  "nullable": true
                },
                "intent_strength": {
                  "type": "string",
                  "nullable": true
                },
                "show_intent": {
                  "type": "boolean"
                },
                "has_intent_signal_account": {
                  "type": "boolean"
                },
                "intent_signal_account": {
                  "type": "object",
                  "nullable": true
                }
              }
            }
          },
          "model_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "num_fetch_result": {
            "type": "integer",
            "nullable": true
          },
          "derived_params": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Apollo organization ID"
          },
          "name": {
            "type": "string",
            "description": "Organization name"
          },
          "website_url": {
            "type": "string",
            "format": "uri",
            "description": "Organization website URL"
          },
          "blog_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Organization blog URL"
          },
          "angellist_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "AngelList profile URL"
          },
          "linkedin_url": {
            "type": "string",
            "format": "uri",
            "description": "LinkedIn company page URL"
          },
          "twitter_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Twitter profile URL"
          },
          "facebook_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Facebook page URL"
          },
          "primary_phone": {
            "type": "object",
            "description": "Primary phone number object"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Languages supported by the organization"
          },
          "alexa_ranking": {
            "type": "integer",
            "nullable": true,
            "description": "Alexa website ranking"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number"
          },
          "linkedin_uid": {
            "type": "string",
            "description": "LinkedIn unique identifier"
          },
          "founded_year": {
            "type": "integer",
            "nullable": true,
            "description": "Year the organization was founded"
          },
          "publicly_traded_symbol": {
            "type": "string",
            "nullable": true,
            "description": "Stock ticker symbol if publicly traded"
          },
          "publicly_traded_exchange": {
            "type": "string",
            "nullable": true,
            "description": "Stock exchange if publicly traded"
          },
          "logo_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Organization logo URL"
          },
          "crunchbase_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Crunchbase profile URL"
          },
          "primary_domain": {
            "type": "string",
            "description": "Primary domain name"
          },
          "industry": {
            "type": "string",
            "description": "Primary industry"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Keywords associated with the organization"
          },
          "estimated_num_employees": {
            "type": "integer",
            "description": "Estimated number of employees"
          },
          "industries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of industries the organization operates in"
          },
          "secondary_industries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Secondary industries"
          },
          "snippets_loaded": {
            "type": "boolean",
            "description": "Whether snippets have been loaded"
          },
          "industry_tag_id": {
            "type": "string",
            "description": "Industry tag identifier"
          },
          "industry_tag_hash": {
            "type": "object",
            "description": "Industry tag hash mapping"
          },
          "retail_location_count": {
            "type": "integer",
            "description": "Number of retail locations"
          },
          "raw_address": {
            "type": "string",
            "description": "Full raw address"
          },
          "street_address": {
            "type": "string",
            "description": "Street address"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State or province"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal or ZIP code"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "owned_by_organization_id": {
            "type": "string",
            "nullable": true,
            "description": "ID of parent organization if owned by another organization"
          },
          "seo_description": {
            "type": "string",
            "description": "SEO description of the organization"
          },
          "short_description": {
            "type": "string",
            "description": "Short description of the organization"
          },
          "suborganizations": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of suborganizations"
          },
          "num_suborganizations": {
            "type": "integer",
            "description": "Number of suborganizations"
          },
          "annual_revenue_printed": {
            "type": "string",
            "description": "Annual revenue in human-readable format"
          },
          "annual_revenue": {
            "type": "integer",
            "description": "Annual revenue in numeric format"
          },
          "total_funding": {
            "type": "integer",
            "description": "Total funding amount"
          },
          "total_funding_printed": {
            "type": "string",
            "description": "Total funding in human-readable format"
          },
          "latest_funding_round_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of latest funding round"
          },
          "latest_funding_stage": {
            "type": "string",
            "description": "Latest funding stage (e.g., Series D)"
          },
          "funding_events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "news_url": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "type": {
                  "type": "string"
                },
                "investors": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                }
              }
            },
            "description": "List of funding events"
          },
          "technology_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of technology names used by the organization"
          },
          "current_technologies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                }
              }
            },
            "description": "Detailed list of current technologies with categories"
          },
          "org_chart_root_people_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of root people in org chart"
          },
          "org_chart_sector": {
            "type": "string",
            "description": "Organization chart sector classification"
          },
          "org_chart_removed": {
            "type": "boolean",
            "description": "Whether org chart has been removed"
          },
          "org_chart_show_department_filter": {
            "type": "boolean",
            "description": "Whether to show department filter in org chart"
          },
          "account_id": {
            "type": "string",
            "description": "Associated account ID"
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Account"
              }
            ],
            "nullable": true,
            "description": "Associated account object"
          },
          "departmental_head_count": {
            "type": "object",
            "properties": {
              "engineering": {
                "type": "integer"
              },
              "operations": {
                "type": "integer"
              },
              "support": {
                "type": "integer"
              },
              "marketing": {
                "type": "integer"
              },
              "human_resources": {
                "type": "integer"
              },
              "sales": {
                "type": "integer"
              },
              "finance": {
                "type": "integer"
              },
              "consulting": {
                "type": "integer"
              },
              "legal": {
                "type": "integer"
              },
              "arts_and_design": {
                "type": "integer"
              },
              "accounting": {
                "type": "integer"
              },
              "business_development": {
                "type": "integer"
              },
              "information_technology": {
                "type": "integer"
              },
              "education": {
                "type": "integer"
              },
              "media_and_commmunication": {
                "type": "integer"
              },
              "product_management": {
                "type": "integer"
              },
              "entrepreneurship": {
                "type": "integer"
              },
              "data_science": {
                "type": "integer"
              },
              "administrative": {
                "type": "integer"
              }
            },
            "description": "Employee count by department"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the account"
          },
          "domain": {
            "type": "string",
            "description": "Domain name of the account"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "team_id": {
            "type": "string",
            "description": "Team ID associated with the account"
          },
          "organization_id": {
            "type": "string",
            "nullable": true,
            "description": "Organization ID if linked to an organization"
          },
          "account_stage_id": {
            "type": "string",
            "description": "Account stage ID"
          },
          "source": {
            "type": "string",
            "description": "Source of the account creation"
          },
          "original_source": {
            "type": "string",
            "description": "Original source of the account"
          },
          "creator_id": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who created the account"
          },
          "owner_id": {
            "type": "string",
            "description": "ID of the account owner"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "phone": {
            "type": "string",
            "description": "Phone number for the account"
          },
          "phone_status": {
            "type": "string",
            "description": "Status of the phone number"
          },
          "hubspot_id": {
            "type": "string",
            "nullable": true,
            "description": "HubSpot ID if integrated"
          },
          "salesforce_id": {
            "type": "string",
            "nullable": true,
            "description": "Salesforce ID if integrated"
          },
          "crm_owner_id": {
            "type": "string",
            "nullable": true,
            "description": "CRM owner ID"
          },
          "parent_account_id": {
            "type": "string",
            "nullable": true,
            "description": "Parent account ID if this is a sub-account"
          },
          "linkedin_url": {
            "type": "string",
            "nullable": true,
            "description": "LinkedIn URL for the account"
          },
          "sanitized_phone": {
            "type": "string",
            "description": "Sanitized version of the phone number"
          },
          "account_playbook_statuses": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Account playbook statuses"
          },
          "account_rule_config_statuses": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Account rule configuration statuses"
          },
          "existence_level": {
            "type": "string",
            "description": "Existence level of the account"
          },
          "label_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of label IDs associated with the account"
          },
          "typed_custom_fields": {
            "type": "object",
            "description": "Typed custom fields for the account"
          },
          "custom_field_errors": {
            "type": "object",
            "description": "Custom field validation errors"
          },
          "modality": {
            "type": "string",
            "description": "Account modality"
          },
          "source_display_name": {
            "type": "string",
            "description": "Display name for the account source"
          },
          "crm_record_url": {
            "type": "string",
            "nullable": true,
            "description": "URL to the CRM record"
          },
          "intent_strength": {
            "type": "string",
            "nullable": true,
            "description": "Intent strength indicator"
          },
          "show_intent": {
            "type": "boolean",
            "description": "Whether to show intent information"
          },
          "has_intent_signal_account": {
            "type": "boolean",
            "description": "Whether the account has intent signals"
          },
          "intent_signal_account": {
            "type": "object",
            "nullable": true,
            "description": "Intent signal account data"
          }
        },
        "example": {
          "id": "66e9abf95ac32901b20d1a0d",
          "domain": "irishcopywriters.ie",
          "name": "The Irish Copywriters",
          "team_id": "6095a710bd01d100a506d4ac",
          "organization_id": null,
          "account_stage_id": "6095a710bd01d100a506d4b9",
          "source": "api",
          "original_source": "api",
          "creator_id": null,
          "owner_id": "66302798d03b9601c7934ebf",
          "created_at": "2024-09-17T16:19:05.663Z",
          "phone": "555-303-2020",
          "phone_status": "no_status",
          "hubspot_id": null,
          "salesforce_id": null,
          "crm_owner_id": null,
          "parent_account_id": null,
          "linkedin_url": null,
          "sanitized_phone": "+15553032020",
          "account_playbook_statuses": [],
          "account_rule_config_statuses": [],
          "existence_level": "full",
          "label_ids": [],
          "typed_custom_fields": {},
          "custom_field_errors": {},
          "modality": "account",
          "source_display_name": "Created from API",
          "crm_record_url": null,
          "intent_strength": null,
          "show_intent": false,
          "has_intent_signal_account": false,
          "intent_signal_account": null
        }
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Account"
              }
            ],
            "description": "The account object with all account details"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Array of labels associated with the account"
          }
        },
        "example": {
          "account": {
            "id": "66e9abf95ac32901b20d1a0d",
            "domain": "irishcopywriters.com",
            "name": "The Fast Irish Copywriters",
            "team_id": "6095a710bd01d100a506d4ac",
            "organization_id": null,
            "account_stage_id": "61b8e913e0f4d2012e3af74e",
            "source": "api",
            "original_source": "api",
            "creator_id": null,
            "owner_id": "66302798d03b9601c7934ebf",
            "created_at": "2024-09-17T16:19:05.663Z",
            "phone": "555-303-8080",
            "phone_status": "no_status",
            "hubspot_id": null,
            "salesforce_id": null,
            "crm_owner_id": null,
            "parent_account_id": null,
            "linkedin_url": null,
            "sanitized_phone": "+15553038080",
            "account_playbook_statuses": [],
            "account_rule_config_statuses": [],
            "existence_level": "full",
            "label_ids": [],
            "typed_custom_fields": {},
            "custom_field_errors": {},
            "modality": "account",
            "source_display_name": "Created from API",
            "crm_record_url": null,
            "intent_strength": null,
            "show_intent": false,
            "has_intent_signal_account": false,
            "intent_signal_account": null
          },
          "labels": []
        }
      },
      "AccountSearchResponse": {
        "type": "object",
        "properties": {
          "breadcrumbs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "signal_field_name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                }
              }
            },
            "description": "Search criteria breadcrumbs showing applied filters"
          },
          "partial_results_only": {
            "type": "boolean",
            "description": "Indicates if only partial results are returned"
          },
          "has_join": {
            "type": "boolean",
            "description": "Indicates if the query involves joins"
          },
          "disable_eu_prospecting": {
            "type": "boolean",
            "description": "EU prospecting disabled flag"
          },
          "partial_results_limit": {
            "type": "integer",
            "description": "Limit for partial results"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "description": "Current page number"
              },
              "per_page": {
                "type": "integer",
                "description": "Number of results per page"
              },
              "total_entries": {
                "type": "integer",
                "description": "Total number of matching entries"
              },
              "total_pages": {
                "type": "integer",
                "description": "Total number of pages"
              }
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "description": "Array of matching accounts"
          },
          "num_fetch_result": {
            "type": "integer",
            "nullable": true,
            "description": "Number of fetched results"
          }
        },
        "example": {
          "breadcrumbs": [
            {
              "label": "Company Name",
              "signal_field_name": "q_organization_name",
              "value": "Irish Copywriters",
              "display_name": "Irish Copywriters"
            },
            {
              "label": "Account Stage",
              "signal_field_name": "account_stage_ids",
              "value": "61b8e913e0f4d2012e3af74e",
              "display_name": "Lead"
            }
          ],
          "partial_results_only": false,
          "has_join": false,
          "disable_eu_prospecting": false,
          "partial_results_limit": 10000,
          "pagination": {
            "page": 1,
            "per_page": 5,
            "total_entries": 1,
            "total_pages": 1
          },
          "accounts": [
            {
              "id": "66e9abf95ac32901b20d1a0d",
              "domain": "irishcopywriters.com",
              "name": "The Fast Irish Copywriters",
              "team_id": "6095a710bd01d100a506d4ac",
              "organization_id": null,
              "account_stage_id": "61b8e913e0f4d2012e3af74e",
              "source": "api",
              "original_source": "api",
              "creator_id": null,
              "owner_id": "66302798d03b9601c7934ebf",
              "created_at": "2024-09-17T16:19:05.663Z",
              "phone": "555-303-8080",
              "phone_status": "no_status",
              "hubspot_id": null,
              "salesforce_id": null,
              "crm_owner_id": null,
              "parent_account_id": null,
              "linkedin_url": null,
              "sanitized_phone": "+15553038080",
              "account_playbook_statuses": [],
              "account_rule_config_statuses": [],
              "existence_level": "full",
              "label_ids": [],
              "typed_custom_fields": {},
              "custom_field_errors": {},
              "modality": "account",
              "source_display_name": "Created from API",
              "crm_record_url": null,
              "contact_emailer_campaign_ids": [],
              "contact_campaign_status_tally": {},
              "num_contacts": 0,
              "last_activity_date": null,
              "intent_strength": null,
              "show_intent": false,
              "has_intent_signal_account": false,
              "intent_signal_account": null
            }
          ],
          "num_fetch_result": null
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "contact_roles": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "linkedin_url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "contact_stage_id": {
            "type": "string"
          },
          "owner_id": {
            "type": "string"
          },
          "creator_id": {
            "type": "string"
          },
          "person_id": {
            "type": "string"
          },
          "email_needs_tickling": {
            "type": "boolean"
          },
          "organization_name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "original_source": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "headline": {
            "type": "string"
          },
          "photo_url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "present_raw_address": {
            "type": "string"
          },
          "linkedin_uid": {
            "type": "string"
          },
          "extrapolated_email_confidence": {
            "type": "string",
            "nullable": true
          },
          "salesforce_id": {
            "type": "string",
            "nullable": true
          },
          "salesforce_lead_id": {
            "type": "string",
            "nullable": true
          },
          "salesforce_contact_id": {
            "type": "string",
            "nullable": true
          },
          "salesforce_account_id": {
            "type": "string",
            "nullable": true
          },
          "crm_owner_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "emailer_campaign_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "direct_dial_status": {
            "type": "string",
            "nullable": true
          },
          "direct_dial_enrichment_failed_at": {
            "type": "string",
            "nullable": true
          },
          "email_status": {
            "type": "string"
          },
          "email_source": {
            "type": "string",
            "nullable": true
          },
          "account_id": {
            "type": "string"
          },
          "last_activity_date": {
            "type": "string",
            "nullable": true,
            "format": "date-time"
          },
          "hubspot_vid": {
            "type": "string",
            "nullable": true
          },
          "hubspot_company_id": {
            "type": "string",
            "nullable": true
          },
          "crm_id": {
            "type": "string",
            "nullable": true
          },
          "sanitized_phone": {
            "type": "string"
          },
          "merged_crm_ids": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "queued_for_crm_push": {
            "type": "boolean"
          },
          "suggested_from_rule_engine_config_id": {
            "type": "string",
            "nullable": true
          },
          "email_unsubscribed": {
            "type": "boolean",
            "nullable": true
          },
          "label_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_pending_email_arcgate_request": {
            "type": "boolean"
          },
          "has_email_arcgate_request": {
            "type": "boolean"
          },
          "existence_level": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "format": "email"
          },
          "email_from_customer": {
            "type": "boolean",
            "nullable": true
          },
          "typed_custom_fields": {
            "type": "object",
            "additionalProperties": true
          },
          "custom_field_errors": {
            "type": "object",
            "additionalProperties": true
          },
          "salesforce_record_url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "crm_record_url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "email_status_unavailable_reason": {
            "type": "string",
            "nullable": true
          },
          "email_true_status": {
            "type": "string"
          },
          "updated_email_true_status": {
            "type": "boolean"
          },
          "contact_rule_config_statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "nullable": true
                },
                "rule_action_config_id": {
                  "type": "string"
                },
                "rule_config_id": {
                  "type": "string"
                },
                "status_cd": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "nullable": true
                },
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "source_display_name": {
            "type": "string"
          },
          "twitter_url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "contact_campaign_statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "emailer_campaign_id": {
                  "type": "string"
                },
                "send_email_from_user_id": {
                  "type": "string"
                },
                "inactive_reason": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "added_by_user_id": {
                  "type": "string"
                },
                "finished_at": {
                  "type": "string",
                  "nullable": true,
                  "format": "date-time"
                },
                "paused_at": {
                  "type": "string",
                  "nullable": true,
                  "format": "date-time"
                },
                "auto_unpause_at": {
                  "type": "string",
                  "nullable": true
                },
                "send_email_from_email_address": {
                  "type": "string"
                },
                "send_email_from_email_account_id": {
                  "type": "string"
                },
                "manually_set_unpause": {
                  "type": "boolean",
                  "nullable": true
                },
                "failure_reason": {
                  "type": "string",
                  "nullable": true
                },
                "current_step_id": {
                  "type": "string",
                  "nullable": true
                },
                "in_response_to_emailer_message_id": {
                  "type": "string",
                  "nullable": true
                },
                "cc_emails": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "string"
                  }
                },
                "bcc_emails": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "string"
                  }
                },
                "to_emails": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "contact_emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "email_md5": {
                  "type": "string"
                },
                "email_sha256": {
                  "type": "string"
                },
                "email_status": {
                  "type": "string"
                },
                "email_source": {
                  "type": "string"
                },
                "extrapolated_email_confidence": {
                  "type": "number",
                  "nullable": true
                },
                "position": {
                  "type": "integer"
                },
                "email_from_customer": {
                  "type": "boolean",
                  "nullable": true
                },
                "free_domain": {
                  "type": "boolean"
                }
              }
            }
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "employment_history": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "nullable": true
                },
                "current": {
                  "type": "boolean"
                },
                "degree": {
                  "type": "string",
                  "nullable": true
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "emails": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "string"
                  }
                },
                "end_date": {
                  "type": "string",
                  "nullable": true
                },
                "grade_level": {
                  "type": "string",
                  "nullable": true
                },
                "kind": {
                  "type": "string",
                  "nullable": true
                },
                "major": {
                  "type": "string",
                  "nullable": true
                },
                "organization_id": {
                  "type": "string",
                  "nullable": true
                },
                "organization_name": {
                  "type": "string"
                },
                "raw_address": {
                  "type": "string",
                  "nullable": true
                },
                "start_date": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "nullable": true
                },
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "time_zone": {
            "type": "string"
          },
          "intent_strength": {
            "type": "number",
            "nullable": true
          },
          "show_intent": {
            "type": "boolean"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "raw_number": {
                  "type": "string"
                },
                "sanitized_number": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "dnc_status": {
                  "type": "string",
                  "nullable": true
                },
                "dnc_other_info": {
                  "type": "string",
                  "nullable": true
                },
                "dialer_flags": {
                  "type": "object",
                  "properties": {
                    "country_name": {
                      "type": "string"
                    },
                    "country_enabled": {
                      "type": "boolean"
                    },
                    "high_risk_calling_enabled": {
                      "type": "boolean"
                    },
                    "potential_high_risk_number": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "account_phone_note": {
            "type": "string",
            "nullable": true
          },
          "free_domain": {
            "type": "boolean"
          },
          "is_likely_to_engage": {
            "type": "boolean"
          },
          "email_domain_catchall": {
            "type": "boolean"
          },
          "contact_job_change_event": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "EmailerCampaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the emailer campaign"
          },
          "name": {
            "type": "string",
            "description": "Name of the emailer campaign"
          },
          "archived": {
            "type": "boolean",
            "description": "Whether the campaign is archived"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the campaign was created"
          },
          "emailer_schedule_id": {
            "type": "string",
            "description": "ID of the emailer schedule"
          },
          "max_emails_per_day": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum emails per day"
          },
          "user_id": {
            "type": "string",
            "description": "ID of the user who created the campaign"
          },
          "same_account_reply_policy_cd": {
            "type": "string",
            "nullable": true,
            "description": "Same account reply policy code"
          },
          "excluded_account_stage_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of excluded account stage IDs"
          },
          "excluded_contact_stage_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of excluded contact stage IDs"
          },
          "contact_email_event_to_stage_mapping": {
            "type": "object",
            "additionalProperties": true,
            "description": "Contact email event to stage mapping"
          },
          "label_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of label IDs"
          },
          "create_task_if_email_open": {
            "type": "boolean",
            "description": "Whether to create task if email is opened"
          },
          "email_open_trigger_task_threshold": {
            "type": "integer",
            "description": "Email open trigger task threshold"
          },
          "mark_finished_if_click": {
            "type": "boolean",
            "description": "Whether to mark finished if clicked"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the campaign is active"
          },
          "days_to_wait_before_mark_as_response": {
            "type": "integer",
            "description": "Days to wait before marking as response"
          },
          "starred_by_user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of user IDs who starred this campaign"
          },
          "mark_finished_if_reply": {
            "type": "boolean",
            "description": "Whether to mark finished if reply received"
          },
          "mark_finished_if_interested": {
            "type": "boolean",
            "description": "Whether to mark finished if interested"
          },
          "mark_paused_if_ooo": {
            "type": "boolean",
            "description": "Whether to mark paused if out of office"
          },
          "sequence_by_exact_daytime": {
            "type": "string",
            "nullable": true,
            "description": "Sequence by exact daytime"
          },
          "permissions": {
            "type": "string",
            "description": "Campaign permissions"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the campaign was last used"
          },
          "sequence_ruleset_id": {
            "type": "string",
            "description": "ID of the sequence ruleset"
          },
          "folder_id": {
            "type": "string",
            "nullable": true,
            "description": "ID of the folder"
          },
          "same_account_reply_delay_days": {
            "type": "integer",
            "description": "Same account reply delay in days"
          },
          "is_performing_poorly": {
            "type": "boolean",
            "description": "Whether the campaign is performing poorly"
          },
          "num_contacts_email_status_extrapolated": {
            "type": "integer",
            "description": "Number of contacts with extrapolated email status"
          },
          "remind_ab_test_results": {
            "type": "boolean",
            "description": "Whether to remind about A/B test results"
          },
          "ab_test_step_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of A/B test step IDs"
          },
          "prioritized_by_user": {
            "type": "string",
            "nullable": true,
            "description": "User who prioritized this campaign"
          },
          "creation_type": {
            "type": "string",
            "description": "Type of creation"
          },
          "num_steps": {
            "type": "integer",
            "description": "Number of steps in the campaign"
          },
          "unique_scheduled": {
            "type": "integer",
            "description": "Number of unique scheduled emails"
          },
          "unique_delivered": {
            "type": "integer",
            "description": "Number of unique delivered emails"
          },
          "unique_bounced": {
            "type": "integer",
            "description": "Number of unique bounced emails"
          },
          "unique_opened": {
            "type": "integer",
            "description": "Number of unique opened emails"
          },
          "unique_hard_bounced": {
            "type": "integer",
            "description": "Number of unique hard bounced emails"
          },
          "unique_spam_blocked": {
            "type": "integer",
            "description": "Number of unique spam blocked emails"
          },
          "unique_replied": {
            "type": "integer",
            "description": "Number of unique replied emails"
          },
          "unique_demoed": {
            "type": "integer",
            "description": "Number of unique demoed contacts"
          },
          "unique_clicked": {
            "type": "integer",
            "description": "Number of unique clicked emails"
          },
          "unique_unsubscribed": {
            "type": "integer",
            "description": "Number of unique unsubscribed contacts"
          },
          "bounce_rate": {
            "type": "number",
            "description": "Bounce rate percentage"
          },
          "hard_bounce_rate": {
            "type": "number",
            "description": "Hard bounce rate percentage"
          },
          "open_rate": {
            "type": "number",
            "description": "Open rate percentage"
          },
          "click_rate": {
            "type": "number",
            "description": "Click rate percentage"
          },
          "reply_rate": {
            "type": "number",
            "description": "Reply rate percentage"
          },
          "spam_block_rate": {
            "type": "number",
            "description": "Spam block rate percentage"
          },
          "opt_out_rate": {
            "type": "number",
            "description": "Opt out rate percentage"
          },
          "demo_rate": {
            "type": "number",
            "description": "Demo rate percentage"
          },
          "loaded_stats": {
            "type": "boolean",
            "description": "Whether stats are loaded"
          },
          "cc_emails": {
            "type": "string",
            "description": "CC emails"
          },
          "bcc_emails": {
            "type": "string",
            "description": "BCC emails"
          },
          "underperforming_touches_count": {
            "type": "integer",
            "description": "Count of underperforming touches"
          }
        }
      },
      "Label": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the label"
          },
          "name": {
            "type": "string",
            "description": "Display name of the label"
          },
          "team_id": {
            "type": "string",
            "description": "ID of the team that owns this label"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the label was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the label was last updated"
          },
          "modality": {
            "type": "string",
            "description": "Type of entity this label applies to (contacts, accounts, etc.)"
          }
        }
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Label"
            },
            "description": "Array of labels associated with the contact"
          }
        }
      },
      "ContactStage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the contact stage"
          },
          "team_id": {
            "type": "string",
            "description": "ID of the team that owns this contact stage"
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the contact stage"
          },
          "name": {
            "type": "string",
            "description": "Internal name of the contact stage"
          },
          "display_order": {
            "type": "integer",
            "description": "Order in which this stage should be displayed"
          },
          "ignore_trigger_override": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to ignore trigger overrides for this stage"
          },
          "category": {
            "type": "string",
            "nullable": true,
            "enum": [
              "in_progress",
              "succeeded",
              "failed",
              null
            ],
            "description": "Category classification of the contact stage"
          },
          "is_meeting_set": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether a meeting is set for this stage"
          }
        }
      },
      "Deal": {
        "type": "object",
        "properties": {
          "opportunity": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the deal"
              },
              "team_id": {
                "type": "string",
                "description": "ID of the team that owns this deal"
              },
              "owner_id": {
                "type": "string",
                "nullable": true,
                "description": "Apollo ID of the deal owner"
              },
              "salesforce_owner_id": {
                "type": "string",
                "nullable": true,
                "description": "Salesforce owner ID if integrated"
              },
              "amount": {
                "type": "number",
                "description": "Monetary value of the deal"
              },
              "closed_date": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "description": "Expected close date of the deal"
              },
              "account_id": {
                "type": "string",
                "description": "Apollo ID of the associated account"
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "Description of the deal"
              },
              "is_closed": {
                "type": "boolean",
                "description": "Whether the deal is closed"
              },
              "is_won": {
                "type": "boolean",
                "description": "Whether the deal is won"
              },
              "name": {
                "type": "string",
                "description": "Name of the deal"
              },
              "stage_name": {
                "type": "string",
                "nullable": true,
                "description": "Name of the current deal stage"
              },
              "opportunity_stage_id": {
                "type": "string",
                "description": "Apollo ID of the deal stage"
              },
              "source": {
                "type": "string",
                "description": "Source of the deal creation"
              },
              "salesforce_id": {
                "type": "string",
                "nullable": true,
                "description": "Salesforce ID if integrated"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the deal was created"
              },
              "actual_close_date": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "description": "Actual close date of the deal"
              },
              "next_step": {
                "type": "string",
                "nullable": true,
                "description": "Next step for the deal"
              },
              "next_step_date": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "description": "Date for the next step"
              },
              "closed_lost_reason": {
                "type": "string",
                "nullable": true,
                "description": "Reason if deal was closed lost"
              },
              "closed_won_reason": {
                "type": "string",
                "nullable": true,
                "description": "Reason if deal was closed won"
              },
              "forecast_category": {
                "type": "string",
                "description": "Forecast category of the deal"
              },
              "deal_probability": {
                "type": "number",
                "description": "Probability of closing the deal"
              },
              "created_by_id": {
                "type": "string",
                "description": "ID of the user who created the deal"
              },
              "current_solutions": {
                "type": "string",
                "nullable": true,
                "description": "Current solutions for the deal"
              },
              "deal_source": {
                "type": "string",
                "nullable": true,
                "description": "Source of the deal"
              },
              "manually_updated_probability": {
                "type": "number",
                "nullable": true,
                "description": "Manually updated probability"
              },
              "manually_updated_forecast": {
                "type": "string",
                "nullable": true,
                "description": "Manually updated forecast"
              },
              "crm_id": {
                "type": "string",
                "nullable": true,
                "description": "CRM ID if integrated"
              },
              "crm_record_url": {
                "type": "string",
                "nullable": true,
                "description": "CRM record URL if integrated"
              },
              "crm_owner_id": {
                "type": "string",
                "nullable": true,
                "description": "CRM owner ID if integrated"
              },
              "probability": {
                "type": "number",
                "nullable": true,
                "description": "Deal probability"
              },
              "opportunity_pipeline_id": {
                "type": "string",
                "description": "ID of the opportunity pipeline"
              },
              "stage_updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the stage was last updated"
              },
              "next_step_last_updated_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When the next step was last updated"
              },
              "exchange_rate_code": {
                "type": "string",
                "description": "Currency exchange rate code"
              },
              "exchange_rate_value": {
                "type": "number",
                "description": "Currency exchange rate value"
              },
              "amount_in_team_currency": {
                "type": "number",
                "description": "Deal amount in team currency"
              },
              "forecasted_revenue": {
                "type": "number",
                "description": "Forecasted revenue from the deal"
              },
              "last_activity_date": {
                "type": "string",
                "format": "date-time",
                "description": "Date of last activity on the deal"
              },
              "existence_level": {
                "type": "string",
                "description": "Existence level of the deal"
              },
              "typed_custom_fields": {
                "type": "object",
                "description": "Custom fields for the deal"
              },
              "opportunity_rule_config_statuses": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "description": "Rule configuration statuses"
              },
              "opportunity_contact_roles": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "description": "Contact roles for the opportunity"
              },
              "currency": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Currency name"
                  },
                  "iso_code": {
                    "type": "string",
                    "description": "Currency ISO code"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Currency symbol"
                  }
                }
              },
              "account": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Account ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Account name"
                  },
                  "website_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "Account website URL"
                  },
                  "blog_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "Account blog URL"
                  },
                  "angellist_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "AngelList URL"
                  },
                  "linkedin_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "LinkedIn URL"
                  },
                  "twitter_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "Twitter URL"
                  },
                  "facebook_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "Facebook URL"
                  },
                  "primary_phone": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "number": {
                        "type": "string"
                      },
                      "source": {
                        "type": "string"
                      },
                      "sanitized_number": {
                        "type": "string"
                      }
                    }
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "alexa_ranking": {
                    "type": "integer",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "linkedin_uid": {
                    "type": "string",
                    "nullable": true
                  },
                  "founded_year": {
                    "type": "integer",
                    "nullable": true
                  },
                  "publicly_traded_symbol": {
                    "type": "string",
                    "nullable": true
                  },
                  "publicly_traded_exchange": {
                    "type": "string",
                    "nullable": true
                  },
                  "logo_url": {
                    "type": "string",
                    "nullable": true
                  },
                  "crunchbase_url": {
                    "type": "string",
                    "nullable": true
                  },
                  "primary_domain": {
                    "type": "string"
                  },
                  "sanitized_phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "market_cap": {
                    "type": "string",
                    "nullable": true
                  },
                  "domain": {
                    "type": "string"
                  },
                  "team_id": {
                    "type": "string"
                  },
                  "organization_id": {
                    "type": "string"
                  },
                  "account_stage_id": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  },
                  "original_source": {
                    "type": "string"
                  },
                  "creator_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "owner_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phone_status": {
                    "type": "string"
                  },
                  "hubspot_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "salesforce_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "crm_owner_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "parent_account_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "account_playbook_statuses": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "account_rule_config_statuses": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "existence_level": {
                    "type": "string"
                  },
                  "label_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "typed_custom_fields": {
                    "type": "object"
                  },
                  "custom_field_errors": {
                    "type": "object",
                    "nullable": true
                  },
                  "modality": {
                    "type": "string"
                  },
                  "source_display_name": {
                    "type": "string"
                  },
                  "crm_record_url": {
                    "type": "string",
                    "nullable": true
                  },
                  "contact_emailer_campaign_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "contact_campaign_status_tally": {
                    "type": "object"
                  },
                  "num_contacts": {
                    "type": "integer"
                  },
                  "last_activity_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "DealStage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the deal stage",
            "example": "6095a710bd01d100a506d4bd"
          },
          "team_id": {
            "type": "string",
            "description": "ID of the team that owns this deal stage",
            "example": "6095a710bd01d100a506d4ac"
          },
          "name": {
            "type": "string",
            "description": "Name of the deal stage",
            "example": "Qualify"
          },
          "display_order": {
            "type": "integer",
            "description": "Order in which this stage should be displayed",
            "example": 0
          },
          "forecast_category_cd": {
            "type": "string",
            "nullable": true,
            "description": "Forecast category code for the deal stage",
            "enum": [
              "Pipeline",
              "Best Case",
              "Committed",
              "Closed",
              "Omitted"
            ],
            "example": "Pipeline"
          },
          "is_won": {
            "type": "boolean",
            "description": "Whether this stage represents a won deal",
            "example": false
          },
          "is_closed": {
            "type": "boolean",
            "description": "Whether this stage represents a closed deal",
            "example": false
          },
          "probability": {
            "type": "integer",
            "description": "Win probability percentage for this stage",
            "minimum": 0,
            "maximum": 100,
            "example": 10
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the deal stage",
            "example": "Very first interaction with the AE on the account to determine their pain and fit for sales enablement in their business."
          },
          "salesforce_id": {
            "type": "string",
            "nullable": true,
            "description": "Salesforce ID for integration purposes",
            "example": "01Jbn00000QmeZmEAJ"
          },
          "is_meeting_set": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether a meeting is set for this stage"
          },
          "opportunity_pipeline_id": {
            "type": "string",
            "nullable": true,
            "description": "ID of the opportunity pipeline this stage belongs to",
            "example": "654b989fcb2a5200010a90db"
          },
          "is_editable": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether this stage can be edited"
          },
          "type": {
            "type": "string",
            "description": "Type of the deal stage",
            "enum": [
              "Open",
              "Closed/Won",
              "Closed/Lost"
            ],
            "example": "Open"
          }
        }
      },
      "ContactCreate": {
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the contact you want to create.",
            "example": "Tim"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact you want to create.",
            "example": "Zheng"
          },
          "organization_name": {
            "type": "string",
            "description": "The name of the contact's employer (company).",
            "example": "apollo"
          },
          "title": {
            "type": "string",
            "description": "The current job title that the contact holds.",
            "example": "senior research analyst"
          },
          "account_id": {
            "type": "string",
            "description": "The Apollo ID for the account.",
            "example": "63f53afe4ceeca00016bdd2f"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the contact.",
            "example": "example@email.com"
          },
          "website_url": {
            "type": "string",
            "format": "uri",
            "description": "The corporate website URL.",
            "example": "https://www.apollo.io/"
          },
          "label_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lists to which the contact belongs."
          },
          "contact_stage_id": {
            "type": "string",
            "description": "The Apollo ID for the contact stage.",
            "example": "6095a710bd01d100a506d4ae"
          },
          "present_raw_address": {
            "type": "string",
            "description": "The personal location for the contact.",
            "example": "Atlanta, United States"
          },
          "direct_phone": {
            "type": "string",
            "description": "The primary phone number.",
            "example": "555-303-1234"
          },
          "corporate_phone": {
            "type": "string",
            "description": "The work/office phone number.",
            "example": "+44 7911 123456"
          },
          "mobile_phone": {
            "type": "string",
            "description": "The mobile phone number.",
            "example": "555-303-1234"
          },
          "home_phone": {
            "type": "string",
            "description": "The home phone number.",
            "example": "555-303-1234"
          },
          "other_phone": {
            "type": "string",
            "description": "Alternative phone number.",
            "example": "555-303-1234"
          },
          "typed_custom_fields": {
            "type": "object",
            "additionalProperties": true,
            "description": "Add information to custom fields in Apollo. Your custom fields are unique to your team's Apollo account. This means that the examples in this documentation may not work for your testing purposes. To utilize this parameter successfully, call the Get a List of All Custom Fields endpoint and identify the id value for the custom field, as well as the appropriate data type. For example, if a custom field accepts picklist entries, you need to pass the accompanying id value for the picklist entry that you want to use as the input value.",
            "example": {
              "60c39ed82bd02f01154c470a": "2025-08-07"
            }
          }
        }
      },
      "ContactUpdate": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Update the contact's first name.",
            "example": "Tim"
          },
          "last_name": {
            "type": "string",
            "description": "Update the contact's last name.",
            "example": "Zheng"
          },
          "organization_name": {
            "type": "string",
            "description": "Update the employer (company) name.",
            "example": "apollo"
          },
          "title": {
            "type": "string",
            "description": "Update the job title.",
            "example": "senior research analyst"
          },
          "account_id": {
            "type": "string",
            "description": "Update the account ID.",
            "example": "63f53afe4ceeca00016bdd2f"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Update the contact email.",
            "example": "example@email.com"
          },
          "website_url": {
            "type": "string",
            "format": "uri",
            "description": "Update the employer website URL.",
            "example": "https://www.apollo.io/"
          },
          "label_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Replace lists this contact belongs to. (Passing new values will overwrite existing lists.)"
          },
          "contact_stage_id": {
            "type": "string",
            "description": "Update the contact stage ID.",
            "example": "6095a710bd01d100a506d4af"
          },
          "present_raw_address": {
            "type": "string",
            "description": "Update location (city/state/country).",
            "example": "Atlanta, United States"
          },
          "direct_phone": {
            "type": "string",
            "description": "Primary phone."
          },
          "corporate_phone": {
            "type": "string",
            "description": "Work/office phone."
          },
          "mobile_phone": {
            "type": "string",
            "description": "Mobile phone."
          },
          "home_phone": {
            "type": "string",
            "description": "Home phone."
          },
          "other_phone": {
            "type": "string",
            "description": "Alternate phone."
          },
          "typed_custom_fields": {
            "type": "object",
            "additionalProperties": true,
            "description": "Add information to custom fields in Apollo. Your custom fields are unique to your team's Apollo account. This means that the examples in this documentation may not work for your testing purposes. To utilize this parameter successfully, call the Get a List of All Custom Fields endpoint and identify the id value for the custom field, as well as the appropriate data type. For example, if a custom field accepts picklist entries, you need to pass the accompanying id value for the picklist entry that you want to use as the input value.",
            "example": {
              "60c39ed82bd02f01154c470a": "2025-08-07"
            }
          }
        }
      },
      "NewsArticlesResponse": {
        "type": "object",
        "properties": {
          "news_articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsArticle"
            },
            "description": "Array of news articles matching the search criteria"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "description": "Current page number"
              },
              "per_page": {
                "type": "integer",
                "description": "Number of articles per page"
              },
              "total_entries": {
                "type": "integer",
                "description": "Total number of articles found"
              },
              "total_pages": {
                "type": "integer",
                "description": "Total number of pages available"
              }
            },
            "description": "Pagination information for the search results"
          }
        },
        "example": {
          "pagination": {
            "page": 1,
            "per_page": 25,
            "total_entries": 10,
            "total_pages": 1
          },
          "news_articles": [
            {
              "id": "6815925ac310740011aba570",
              "url": "https://techintelpro.com/news/apolloio-appoints-marcio-arnecke-as-cmo-and-adam-carr-as-cro-to-accelerate-ai-powered-go-to-market-innovation",
              "domain": "techintelpro.com",
              "title": "Apollo.io Appoints Marcio Arnecke as CMO and Adam Carr as CRO to Accelerate AI-Powered Go-to-Market Innovation",
              "snippet": "Apollo.io, a leading AI-powered go-to-market sales platform, today announced the appointments of Marcio Arnecke as Chief Marketing Officer (CMO) and Adam Carr as Chief Revenue Officer (CRO).",
              "organization_ids": [
                "5e66b6381e05b4008c8331b8"
              ],
              "published_at": "2025-05-02T00:00:00.000+00:00",
              "event_categories": [
                "hires"
              ]
            }
          ]
        }
      },
      "NewsArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the news article"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the news article"
          },
          "domain": {
            "type": "string",
            "description": "Domain of the news source"
          },
          "title": {
            "type": "string",
            "description": "Title of the news article"
          },
          "snippet": {
            "type": "string",
            "description": "Brief excerpt or summary of the article content"
          },
          "organization_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Apollo organization IDs mentioned in the article"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "description": "Publication date and time of the article"
          },
          "event_categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Categories of events mentioned in the article (e.g., hires, investment, contract)"
          }
        },
        "example": {
          "id": "6815925ac310740011aba570",
          "url": "https://techintelpro.com/news/apolloio-appoints-marcio-arnecke-as-cmo-and-adam-carr-as-cro-to-accelerate-ai-powered-go-to-market-innovation",
          "domain": "techintelpro.com",
          "title": "Apollo.io Appoints Marcio Arnecke as CMO and Adam Carr as CRO to Accelerate AI-Powered Go-to-Market Innovation",
          "snippet": "Apollo.io, a leading AI-powered go-to-market sales platform, today announced the appointments of Marcio Arnecke as Chief Marketing Officer (CMO) and Adam Carr as Chief Revenue Officer (CRO).",
          "organization_ids": [
            "5e66b6381e05b4008c8331b8"
          ],
          "published_at": "2025-05-02T00:00:00.000+00:00",
          "event_categories": [
            "hires"
          ]
        }
      },
      "JobPostingsResponse": {
        "type": "object",
        "properties": {
          "organization_job_postings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the job posting"
                },
                "title": {
                  "type": "string",
                  "description": "Job title"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to the job posting"
                },
                "city": {
                  "type": "string",
                  "nullable": true,
                  "description": "City where the job is located"
                },
                "state": {
                  "type": "string",
                  "nullable": true,
                  "description": "State where the job is located"
                },
                "country": {
                  "type": "string",
                  "description": "Country where the job is located"
                },
                "last_seen_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the job posting was last seen"
                },
                "posted_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the job posting was originally posted"
                }
              }
            }
          }
        }
      },
      "PeopleSearchResponse": {
        "type": "object",
        "properties": {
          "breadcrumbs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "signal_field_name": {
                  "type": "string"
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "display_name": {
                  "type": "string"
                }
              }
            }
          },
          "partial_results_only": {
            "type": "boolean"
          },
          "has_join": {
            "type": "boolean"
          },
          "disable_eu_prospecting": {
            "type": "boolean"
          },
          "partial_results_limit": {
            "type": "integer"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_entries": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "people": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "model_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "num_fetch_result": {
            "type": "integer",
            "nullable": true
          },
          "derived_params": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "PersonEnrichmentResponse": {
        "type": "object",
        "properties": {
          "person": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Apollo ID for the person"
              },
              "first_name": {
                "type": "string",
                "description": "First name of the person"
              },
              "last_name": {
                "type": "string",
                "description": "Last name of the person"
              },
              "name": {
                "type": "string",
                "description": "Full name of the person"
              },
              "linkedin_url": {
                "type": "string",
                "format": "uri",
                "description": "LinkedIn profile URL"
              },
              "title": {
                "type": "string",
                "description": "Job title"
              },
              "email_status": {
                "type": "string",
                "description": "Email verification status"
              },
              "photo_url": {
                "type": "string",
                "format": "uri",
                "description": "Profile photo URL"
              },
              "twitter_url": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "Twitter profile URL"
              },
              "github_url": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "GitHub profile URL"
              },
              "facebook_url": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "Facebook profile URL"
              },
              "extrapolated_email_confidence": {
                "type": "number",
                "nullable": true,
                "description": "Confidence score for extrapolated email"
              },
              "headline": {
                "type": "string",
                "description": "Professional headline"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Email address"
              },
              "organization_id": {
                "type": "string",
                "description": "Apollo organization ID"
              },
              "employment_history": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "current": {
                      "type": "boolean"
                    },
                    "degree": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true
                    },
                    "end_date": {
                      "type": "string",
                      "nullable": true
                    },
                    "grade_level": {
                      "type": "string",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "nullable": true
                    },
                    "major": {
                      "type": "string",
                      "nullable": true
                    },
                    "organization_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "organization_name": {
                      "type": "string"
                    },
                    "raw_address": {
                      "type": "string",
                      "nullable": true
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "id": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                }
              },
              "state": {
                "type": "string",
                "description": "State/province"
              },
              "city": {
                "type": "string",
                "description": "City"
              },
              "country": {
                "type": "string",
                "description": "Country"
              },
              "contact_id": {
                "type": "string",
                "description": "Contact ID if person is a contact"
              },
              "contact": {
                "type": "object",
                "nullable": true,
                "description": "Contact details if person is a contact",
                "properties": {
                  "contact_roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "linkedin_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "title": {
                    "type": "string"
                  },
                  "contact_stage_id": {
                    "type": "string"
                  },
                  "owner_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "creator_id": {
                    "type": "string"
                  },
                  "person_id": {
                    "type": "string"
                  },
                  "email_needs_tickling": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "organization_name": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  },
                  "original_source": {
                    "type": "string"
                  },
                  "organization_id": {
                    "type": "string"
                  },
                  "headline": {
                    "type": "string"
                  },
                  "photo_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "present_raw_address": {
                    "type": "string"
                  },
                  "linkedin_uid": {
                    "type": "string",
                    "nullable": true
                  },
                  "extrapolated_email_confidence": {
                    "type": "number",
                    "nullable": true
                  },
                  "salesforce_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "salesforce_lead_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "salesforce_contact_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "salesforce_account_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "crm_owner_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "emailer_campaign_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "direct_dial_status": {
                    "type": "string",
                    "nullable": true
                  },
                  "direct_dial_enrichment_failed_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "email_status": {
                    "type": "string"
                  },
                  "email_source": {
                    "type": "string",
                    "nullable": true
                  },
                  "account_id": {
                    "type": "string"
                  },
                  "last_activity_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "hubspot_vid": {
                    "type": "string",
                    "nullable": true
                  },
                  "hubspot_company_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "crm_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "sanitized_phone": {
                    "type": "string"
                  },
                  "merged_crm_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "queued_for_crm_push": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "suggested_from_rule_engine_config_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "email_unsubscribed": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "label_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "has_pending_email_arcgate_request": {
                    "type": "boolean"
                  },
                  "has_email_arcgate_request": {
                    "type": "boolean"
                  },
                  "existence_level": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "email_from_customer": {
                    "type": "boolean"
                  },
                  "typed_custom_fields": {
                    "type": "object"
                  },
                  "custom_field_errors": {
                    "type": "object",
                    "nullable": true
                  },
                  "crm_record_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "email_status_unavailable_reason": {
                    "type": "string",
                    "nullable": true
                  },
                  "email_true_status": {
                    "type": "string"
                  },
                  "updated_email_true_status": {
                    "type": "boolean"
                  },
                  "contact_rule_config_statuses": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "source_display_name": {
                    "type": "string"
                  },
                  "contact_emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "email_md5": {
                          "type": "string"
                        },
                        "email_sha256": {
                          "type": "string"
                        },
                        "email_status": {
                          "type": "string"
                        },
                        "email_source": {
                          "type": "string",
                          "nullable": true
                        },
                        "extrapolated_email_confidence": {
                          "type": "number",
                          "nullable": true
                        },
                        "position": {
                          "type": "integer"
                        },
                        "email_from_customer": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "free_domain": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "time_zone": {
                    "type": "string"
                  },
                  "phone_numbers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "raw_number": {
                          "type": "string"
                        },
                        "sanitized_number": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "nullable": true
                        },
                        "position": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "dnc_status": {
                          "type": "string",
                          "nullable": true
                        },
                        "dnc_other_info": {
                          "type": "string",
                          "nullable": true
                        },
                        "dialer_flags": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "country_name": {
                              "type": "string"
                            },
                            "country_enabled": {
                              "type": "boolean"
                            },
                            "high_risk_calling_enabled": {
                              "type": "boolean"
                            },
                            "potential_high_risk_number": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "account_phone_note": {
                    "type": "string",
                    "nullable": true
                  },
                  "free_domain": {
                    "type": "boolean"
                  },
                  "is_likely_to_engage": {
                    "type": "boolean"
                  }
                }
              },
              "revealed_for_current_team": {
                "type": "boolean",
                "description": "Whether person data is revealed for current team"
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "website_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "blog_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "angellist_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "linkedin_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "twitter_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "facebook_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "primary_phone": {
                    "type": "object"
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "alexa_ranking": {
                    "type": "integer"
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "linkedin_uid": {
                    "type": "string"
                  },
                  "founded_year": {
                    "type": "integer"
                  },
                  "publicly_traded_symbol": {
                    "type": "string",
                    "nullable": true
                  },
                  "publicly_traded_exchange": {
                    "type": "string",
                    "nullable": true
                  },
                  "logo_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "crunchbase_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "primary_domain": {
                    "type": "string"
                  },
                  "industry": {
                    "type": "string"
                  },
                  "keywords": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "estimated_num_employees": {
                    "type": "integer"
                  },
                  "industries": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "secondary_industries": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "snippets_loaded": {
                    "type": "boolean"
                  },
                  "industry_tag_id": {
                    "type": "string"
                  },
                  "industry_tag_hash": {
                    "type": "object"
                  },
                  "retail_location_count": {
                    "type": "integer"
                  },
                  "raw_address": {
                    "type": "string"
                  },
                  "street_address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "owned_by_organization_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "seo_description": {
                    "type": "string"
                  },
                  "short_description": {
                    "type": "string"
                  },
                  "suborganizations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "num_suborganizations": {
                    "type": "integer"
                  },
                  "annual_revenue_printed": {
                    "type": "string"
                  },
                  "annual_revenue": {
                    "type": "integer"
                  },
                  "total_funding": {
                    "type": "integer"
                  },
                  "total_funding_printed": {
                    "type": "string"
                  },
                  "latest_funding_round_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "latest_funding_stage": {
                    "type": "string"
                  },
                  "funding_events": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "technology_names": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "current_technologies": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "org_chart_root_people_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "org_chart_sector": {
                    "type": "string"
                  },
                  "org_chart_removed": {
                    "type": "boolean"
                  },
                  "org_chart_show_department_filter": {
                    "type": "boolean"
                  }
                }
              },
              "is_likely_to_engage": {
                "type": "boolean",
                "description": "Whether person is likely to engage"
              },
              "intent_strength": {
                "type": "string",
                "nullable": true,
                "description": "Intent strength indicator"
              },
              "show_intent": {
                "type": "boolean",
                "description": "Whether to show intent data"
              },
              "departments": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Departments the person belongs to"
              },
              "subdepartments": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Subdepartments the person belongs to"
              },
              "functions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Functions the person performs"
              },
              "seniority": {
                "type": "string",
                "description": "Seniority level"
              }
            }
          }
        }
      },
      "BulkOrganizationEnrichmentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the bulk enrichment request",
            "example": "success"
          },
          "error_code": {
            "type": "string",
            "nullable": true,
            "description": "Error code if request failed"
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "Error message if request failed"
          },
          "total_requested_domains": {
            "type": "integer",
            "description": "Total number of domains requested for enrichment",
            "example": 4
          },
          "unique_domains": {
            "type": "integer",
            "description": "Number of unique domains processed",
            "example": 4
          },
          "unique_enriched_records": {
            "type": "integer",
            "description": "Number of unique records successfully enriched",
            "example": 4
          },
          "missing_records": {
            "type": "integer",
            "description": "Number of records that could not be enriched",
            "example": 0
          },
          "organizations": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OrganizationEnrichment"
                },
                {
                  "type": "object",
                  "properties": {
                    "sanitized_phone": {
                      "type": "string",
                      "nullable": true,
                      "description": "Sanitized phone number"
                    },
                    "market_cap": {
                      "type": "string",
                      "nullable": true,
                      "description": "Market capitalization"
                    },
                    "snippets_loaded": {
                      "type": "boolean",
                      "description": "Whether snippets are loaded"
                    },
                    "industry_tag_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Primary industry tag ID"
                    },
                    "industry_tag_hash": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Mapping of industry names to tag IDs"
                    },
                    "retail_location_count": {
                      "type": "integer",
                      "description": "Number of retail locations"
                    },
                    "raw_address": {
                      "type": "string",
                      "nullable": true,
                      "description": "Raw address string"
                    },
                    "street_address": {
                      "type": "string",
                      "nullable": true,
                      "description": "Street address"
                    },
                    "city": {
                      "type": "string",
                      "nullable": true,
                      "description": "City"
                    },
                    "state": {
                      "type": "string",
                      "nullable": true,
                      "description": "State or province"
                    },
                    "country": {
                      "type": "string",
                      "nullable": true,
                      "description": "Country"
                    },
                    "postal_code": {
                      "type": "string",
                      "nullable": true,
                      "description": "Postal code"
                    },
                    "owned_by_organization_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "ID of parent organization if owned"
                    },
                    "owned_by_organization": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "website_url": {
                          "type": "string"
                        }
                      },
                      "description": "Parent organization if owned by another organization"
                    },
                    "seo_description": {
                      "type": "string",
                      "nullable": true,
                      "description": "SEO description"
                    },
                    "short_description": {
                      "type": "string",
                      "nullable": true,
                      "description": "Short company description"
                    },
                    "account_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Associated account ID"
                    },
                    "account": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "domain": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "team_id": {
                          "type": "string"
                        },
                        "organization_id": {
                          "type": "string"
                        },
                        "account_stage_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "source": {
                          "type": "string"
                        },
                        "original_source": {
                          "type": "string"
                        },
                        "creator_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "owner_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true
                        },
                        "phone_status": {
                          "type": "string"
                        },
                        "hubspot_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "salesforce_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "crm_owner_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "parent_account_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "linkedin_url": {
                          "type": "string",
                          "nullable": true
                        },
                        "sanitized_phone": {
                          "type": "string",
                          "nullable": true
                        },
                        "account_playbook_statuses": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "account_rule_config_statuses": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "existence_level": {
                          "type": "string"
                        },
                        "label_ids": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "typed_custom_fields": {
                          "type": "object"
                        },
                        "custom_field_errors": {
                          "type": "object",
                          "nullable": true
                        },
                        "modality": {
                          "type": "string"
                        },
                        "source_display_name": {
                          "type": "string"
                        },
                        "crm_record_url": {
                          "type": "string",
                          "nullable": true
                        },
                        "intent_strength": {
                          "type": "string",
                          "nullable": true
                        },
                        "show_intent": {
                          "type": "boolean"
                        },
                        "has_intent_signal_account": {
                          "type": "boolean"
                        },
                        "intent_signal_account": {
                          "type": "object",
                          "nullable": true
                        }
                      },
                      "description": "Associated account information"
                    },
                    "departmental_head_count": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "integer"
                      },
                      "description": "Employee count by department"
                    },
                    "intent_strength": {
                      "type": "string",
                      "nullable": true,
                      "description": "Intent strength indicator"
                    },
                    "show_intent": {
                      "type": "boolean",
                      "description": "Whether to show intent data"
                    },
                    "has_intent_signal_account": {
                      "type": "boolean",
                      "description": "Whether account has intent signals"
                    },
                    "intent_signal_account": {
                      "type": "object",
                      "nullable": true,
                      "description": "Intent signal account data"
                    }
                  }
                }
              ]
            },
            "description": "Array of enriched organization data"
          }
        },
        "required": [
          "status",
          "organizations"
        ]
      },
      "EmailerMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the emailer message"
          },
          "user_id": {
            "type": "string",
            "description": "ID of the user who created the email"
          },
          "status": {
            "type": "string",
            "description": "Current status of the email"
          },
          "time_zone": {
            "type": "string",
            "description": "Time zone for the email"
          },
          "provider_message_id": {
            "type": "string",
            "nullable": true,
            "description": "Provider-specific message ID"
          },
          "to_name": {
            "type": "string",
            "description": "Name of the recipient"
          },
          "due_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the email is scheduled to be sent"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the email was completed/sent"
          },
          "emailer_touch_id": {
            "type": "string",
            "description": "ID of the emailer touch"
          },
          "emailer_campaign_id": {
            "type": "string",
            "description": "ID of the sequence/campaign"
          },
          "emailer_step_id": {
            "type": "string",
            "description": "ID of the sequence step"
          },
          "failed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the email failed"
          },
          "failure_reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason for email failure"
          },
          "attachment_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of attachment IDs"
          },
          "enable_tracking": {
            "type": "boolean",
            "description": "Whether tracking is enabled"
          },
          "type": {
            "type": "string",
            "description": "Type of email"
          },
          "contact_id": {
            "type": "string",
            "description": "ID of the contact"
          },
          "provider_thread_id": {
            "type": "string",
            "nullable": true,
            "description": "Provider thread ID"
          },
          "schedule_delayed_reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason for schedule delay"
          },
          "demoed": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether contact was demoed"
          },
          "email_account_id": {
            "type": "string",
            "description": "ID of the email account"
          },
          "due_at_manually_changed": {
            "type": "boolean",
            "description": "Whether due date was manually changed"
          },
          "not_sent_reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason email was not sent"
          },
          "bounce": {
            "type": "object",
            "nullable": true,
            "description": "Bounce information"
          },
          "spam_blocked": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether email was spam blocked"
          },
          "tracking_disabled_reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason tracking was disabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the record was created"
          },
          "async_sending": {
            "type": "boolean",
            "description": "Whether email is sent asynchronously"
          },
          "due_at_source": {
            "type": "string",
            "description": "Source of the due date"
          },
          "crm_id": {
            "type": "string",
            "nullable": true,
            "description": "CRM ID"
          },
          "replied": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether contact replied"
          },
          "needs_dynamic_assemble": {
            "type": "boolean",
            "description": "Whether email needs dynamic assembly"
          },
          "personalized_opener": {
            "type": "string",
            "nullable": true,
            "description": "Personalized opener text"
          },
          "reply_class": {
            "type": "string",
            "nullable": true,
            "description": "Classification of reply"
          },
          "schedule_delayed_limit_reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason for schedule delay limit"
          },
          "schedule_delayed_reason_details": {
            "type": "string",
            "nullable": true,
            "description": "Details of schedule delay reason"
          },
          "sensitive_info_redacted": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether sensitive info was redacted"
          },
          "account_id": {
            "type": "string",
            "description": "ID of the account"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "raw_name": {
                  "type": "string"
                },
                "recipient_type_cd": {
                  "type": "string"
                },
                "contact_id": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "description": "Array of email recipients"
          },
          "send_from": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "raw_name": {
                "type": "string"
              },
              "recipient_type_cd": {
                "type": "string",
                "nullable": true
              },
              "contact_id": {
                "type": "string",
                "nullable": true
              },
              "user_id": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "Sender information"
          },
          "from_email": {
            "type": "string",
            "description": "From email address"
          },
          "to_email": {
            "type": "string",
            "description": "To email address"
          },
          "from_name": {
            "type": "string",
            "description": "From name"
          },
          "bcc_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "BCC email addresses"
          },
          "cc_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "CC email addresses"
          },
          "send_from_info": {
            "type": "string",
            "description": "Send from information"
          },
          "body_text": {
            "type": "string",
            "description": "Plain text body"
          },
          "body_html": {
            "type": "string",
            "description": "HTML body"
          },
          "body_html_loaded": {
            "type": "boolean",
            "description": "Whether HTML body is loaded"
          },
          "appendment_html": {
            "type": "string",
            "description": "HTML appendment"
          },
          "appendment_html_loaded": {
            "type": "boolean",
            "description": "Whether HTML appendment is loaded"
          },
          "subject": {
            "type": "string",
            "description": "Email subject"
          },
          "campaign_name": {
            "type": "string",
            "description": "Name of the campaign/sequence"
          },
          "campaign_max_emails_per_day": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum emails per day for campaign"
          },
          "campaign_position": {
            "type": "integer",
            "description": "Position in the campaign"
          },
          "step_max_emails_per_day": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum emails per day for step"
          }
        }
      },
      "EmailerStep": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the emailer step"
          },
          "emailer_campaign_id": {
            "type": "string",
            "description": "ID of the sequence/campaign"
          },
          "wait_time": {
            "type": "integer",
            "description": "Wait time before this step"
          },
          "wait_mode": {
            "type": "string",
            "description": "Unit of wait time (minute, day, etc.)"
          },
          "max_emails_per_day": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum emails per day for this step"
          },
          "exact_datetime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Exact datetime for step execution"
          },
          "auto_skip_in_x_days": {
            "type": "integer",
            "nullable": true,
            "description": "Auto skip after X days"
          },
          "position": {
            "type": "integer",
            "description": "Position of step in sequence"
          }
        }
      },
      "EmailerMessageActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the activity"
          },
          "type": {
            "type": "string",
            "description": "Type of activity",
            "example": "emailer_message"
          },
          "emailer_message_id": {
            "type": "string",
            "description": "ID of the associated emailer message"
          },
          "emailer_message": {
            "$ref": "#/components/schemas/EmailerMessage"
          }
        }
      },
      "EmailerMessageWithContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EmailerMessage"
          },
          {
            "type": "object",
            "properties": {
              "contact": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}