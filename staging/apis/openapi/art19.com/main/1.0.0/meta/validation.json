[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 2 absolute http references: [(('servers', 0, 'url'), 'url', 'https://art19.com/'), (('info', 'termsOfService'), 'termsOfService', 'https://art19.com/business-terms')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "2"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Select which page number to receive results for. Pages are numbered starting at 1.\\n\\n', 'in': 'query', 'name': 'page[number]', 'required': 'true', 'schema': {'minimum': 1, 'type': 'integer'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Indicate how many records to return per page. The maximum is 100.\\n\\n', 'in': 'query', 'name': 'page[size]', 'required': 'true', 'schema': {'maximum': 100, 'minimum': 1, 'type': 'integer'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        2
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Limit the result to networks containing at least one series with an ad deal of this Ad Ops profile.\\n', 'in': 'query', 'name': 'ad_rep_account_id', 'schema': {'type': 'uuid'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        4
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'properties': {'attributes': {'properties': {'amazon_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render an Amazon subscription badge', 'type': 'boolean'}, 'amazon_subscription_url': {'description': 'The Amazon Music subscription URL', 'type': 'string'}, 'castbox_subscription_url': {'description': 'The CastBox subscription URL', 'type': 'string'}, 'cover_image_id': {'deprecated': True, 'description': 'This will be replaced by the relationship `cover_image` in a future update.<br/>\\nThe image ID of the cover art for this series. The `/images` endpoint provideds details to the image.\\n', 'example': 'ec8f13bf-77c0-40fe-933a-8c088c16bc17', 'format': 'uuid', 'type': 'string'}, 'created_at': {'format': 'date-time', 'type': 'string'}, 'description': {'description': 'The description of the series eventually in HTML format', 'example': '<p><strong>Some</strong> funny example.</p>', 'type': 'string'}, 'description_is_html': {'description': 'Determines whether `description` is in HTML format or plain.', 'type': 'boolean'}, 'description_plain': {'description': 'The description with all HTML markup removed. If the description does not contain markup\\nthis is identitcal to `description`.\\n', 'example': 'Some funny example.', 'type': 'string'}, 'facebook_url': {'description': 'The URL of the series on Facebook', 'type': 'string'}, 'google_subscription_url': {'description': 'The Google subscription URL', 'type': 'string'}, 'iheart_subscription_url': {'description': 'The iHeartRadio subscription URL', 'type': 'string'}, 'instagram_url': {'description': 'The URL of the series on Instagram', 'type': 'string'}, 'itunes_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render an iTunes subscription badge', 'type': 'boolean'}, 'itunes_subscription_url': {'description': 'The Apple iTunes subscription URL', 'type': 'string'}, 'linkedin_url': {'description': 'The URL of the series on LinkedIn', 'type': 'string'}, 'pocket_casts_subscription_url': {'description': 'The Pocket Casts subscription URL', 'type': 'string'}, 'podcast_subscription_url': {'description': 'The URL of the RSS feed', 'example': 'https://rss.art19.com/greatest-show-ever', 'type': 'string'}, 'public_page_enabled': {'description': 'If this is `true`, a public web page for this series is available under\\n`https://art19.com/shows/{slug}`, where `slug` is the value of the corresponding attribute.\\nThis public page provides details about the series as well as descriptive links to all its\\nepisodes. If this is `false`, no such public page is available.\\n', 'type': 'boolean'}, 'public_title': {'description': 'If present, this is the preferred title for the series in the RSS Feed', 'type': 'string'}, 'radio_public_subscription_url': {'description': 'The RadioPublic subscription URL', 'type': 'string'}, 'rss_author': {'description': 'The author responsible for the RSS feed', 'type': 'string'}, 'rss_copyright': {'description': 'The copyright disclaimer for the contents of the show, appearing after a Â© symbol, e.g. `2020 ART19, Inc.`', 'type': 'string'}, 'rss_email': {'description': 'The pubic point of contact for the show', 'type': 'string'}, 'rss_owner': {'description': 'The name of the contact for the show', 'type': 'string'}, 'slug': {'description': \"This slug is unique over all series and networks system wide and is used to access the series' feed\\nas well as its eventually enabled public page on ART19.\\n\", 'example': 'greatest-show-ever', 'type': 'string'}, 'sort_title': {'description': 'The title of the series modified for sorting. This converts all characters to\\nlower case, removes an eventually leading `The` as well as leading and trailling whitespace characters.\\n', 'example': 'greatest show ever', 'type': 'string'}, 'spotify_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render a Spotify subscription badge', 'type': 'boolean'}, 'spotify_subscription_url': {'description': 'The Spotify subscription URL', 'type': 'string'}, 'status': {'description': 'The status of the series', 'enum': ['active', 'inactive'], 'type': 'string'}, 'stitcher_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render a Stitcher subscription badge', 'type': 'boolean'}, 'stitcher_subscription_url': {'description': 'The Stitcher subscription URL', 'type': 'string'}, 'title': {'description': 'The title of the series', 'example': 'The greatest show ever', 'type': 'string'}, 'tumblr_url': {'description': 'The URL of the series on Tumblr', 'type': 'string'}, 'tune_in_subscription_url': {'description': 'The TuneIn subscription URL', 'type': 'string'}, 'twitter_url': {'description': 'The URL of the series on Twitter', 'type': 'string'}, 'type': {'description': 'The type of the series', 'enum': ['Series'], 'type': 'String'}, 'updated_at': {'format': 'date-time', 'type': 'string'}, 'website_url': {'description': 'The custom website URL for the series', 'type': 'string'}}, 'type': 'object'}, 'id': {'example': 'c1fbb1bf-45b1-4803-986e-123166f7f427', 'format': 'uuid', 'type': 'string'}, 'relationships': {'properties': {'tags': {'deprecated': True, 'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of tags associated with the series', 'type': 'object'}, 'classification_inclusions': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of classifications associated with the series', 'type': 'object'}, 'cover_image': {'description': 'The cover image for the series', 'properties': {'data': {'$ref': '#/components/schemas/ResourceIdentifier'}}, 'type': 'object'}, 'credits': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of credits given to people in the series', 'type': 'object'}, 'episodes': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of published and released episodes with an actual media file', 'type': 'object'}, 'images': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'The cover image for the series', 'type': 'object'}, 'network': {'properties': {'data': {'$ref': '#/components/schemas/ResourceIdentifier'}}, 'title': 'The network the series belongs to', 'type': 'object'}, 'seasons': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of seasons in the series', 'type': 'object'}, 'taggings': {'deprecated': True, 'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of associations linking tags to the series', 'type': 'object'}}, 'type': 'object'}, 'type': {'description': 'The type of resource. This is always `series`', 'example': 'series', 'type': 'string'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'created_at' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'value' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'position' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'sort_title' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'name' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'last_name,first_name' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'sort_title' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'sort_title' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Server `url` should not have a trailing slash. [path: servers.0.url]",
    "severity": 1,
    "code": "no-server-trailing-slash",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        0,
        "url"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `boolean` but got `string`. [path: paths./episodes.get.parameters.1.required]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        1,
        "required"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `boolean` but got `string`. [path: paths./episodes.get.parameters.2.required]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        2,
        "required"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./networks.get.parameters.4.schema.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        4,
        "schema",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: components.schemas.Series.properties.attributes.properties.type.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"String\" but received \"string\". [path: components.schemas.Series.properties.attributes.properties.type.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "enum",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classification_inclusions.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classification_inclusions/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classifications.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classifications/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./credits.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./credits/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes/{id}/next_sibling.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes/{id}/previous_sibling.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./images.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./images/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./media_assets.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./media_assets/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./networks.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./networks/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./people.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./people/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./seasons.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./seasons/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./series.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./series/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 15,
        "character": 13
      },
      "end": {
        "line": 15,
        "character": 33
      }
    },
    "message": "Server URL must not have trailing slash. [path: servers.0.url]",
    "severity": 2,
    "code": "oas3-server-trailing-slash",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        "0",
        "url"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 20,
        "character": 12
      },
      "end": {
        "line": 252,
        "character": 292
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classification_inclusions.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 117,
        "character": 25
      },
      "end": {
        "line": 117,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./classification_inclusions.get.parameters.8.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get",
        "parameters",
        "8",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 229,
        "character": 10
      },
      "end": {
        "line": 229,
        "character": 35
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classification_inclusions.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 258,
        "character": 12
      },
      "end": {
        "line": 335,
        "character": 292
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./classification_inclusions/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 258,
        "character": 12
      },
      "end": {
        "line": 335,
        "character": 292
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classification_inclusions/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 313,
        "character": 10
      },
      "end": {
        "line": 313,
        "character": 35
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classification_inclusions/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 341,
        "character": 12
      },
      "end": {
        "line": 549,
        "character": 282
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./classifications.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 341,
        "character": 12
      },
      "end": {
        "line": 549,
        "character": 282
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classifications.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 415,
        "character": 25
      },
      "end": {
        "line": 415,
        "character": 32
      }
    },
    "message": "\"default\" property type must be array [path: paths./classifications.get.parameters.6.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get",
        "parameters",
        "6",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 527,
        "character": 10
      },
      "end": {
        "line": 527,
        "character": 26
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classifications.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 555,
        "character": 12
      },
      "end": {
        "line": 632,
        "character": 282
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./classifications/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 555,
        "character": 12
      },
      "end": {
        "line": 632,
        "character": 282
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classifications/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 610,
        "character": 10
      },
      "end": {
        "line": 610,
        "character": 26
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classifications/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 638,
        "character": 12
      },
      "end": {
        "line": 836,
        "character": 274
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./credits.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 638,
        "character": 12
      },
      "end": {
        "line": 836,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./credits.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 702,
        "character": 25
      },
      "end": {
        "line": 702,
        "character": 35
      }
    },
    "message": "\"default\" property type must be array [path: paths./credits.get.parameters.5.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get",
        "parameters",
        "5",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 814,
        "character": 10
      },
      "end": {
        "line": 814,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./credits.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 842,
        "character": 12
      },
      "end": {
        "line": 919,
        "character": 274
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./credits/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 842,
        "character": 12
      },
      "end": {
        "line": 919,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./credits/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 897,
        "character": 10
      },
      "end": {
        "line": 897,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./credits/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 925,
        "character": 12
      },
      "end": {
        "line": 1195,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 946,
        "character": 24
      },
      "end": {
        "line": 946,
        "character": 30
      }
    },
    "message": "\"required\" property must be boolean. [path: paths./episodes.get.parameters.1.required]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        "1",
        "required"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 956,
        "character": 24
      },
      "end": {
        "line": 956,
        "character": 30
      }
    },
    "message": "\"required\" property must be boolean. [path: paths./episodes.get.parameters.2.required]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        "2",
        "required"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1048,
        "character": 25
      },
      "end": {
        "line": 1048,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./episodes.get.parameters.12.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        "12",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1172,
        "character": 10
      },
      "end": {
        "line": 1172,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1201,
        "character": 12
      },
      "end": {
        "line": 1278,
        "character": 275
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./episodes/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1201,
        "character": 12
      },
      "end": {
        "line": 1278,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1256,
        "character": 10
      },
      "end": {
        "line": 1256,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1284,
        "character": 12
      },
      "end": {
        "line": 1369,
        "character": 288
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./episodes/{id}/next_sibling.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1284,
        "character": 12
      },
      "end": {
        "line": 1369,
        "character": 288
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes/{id}/next_sibling.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1347,
        "character": 10
      },
      "end": {
        "line": 1347,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes/{id}/next_sibling.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1375,
        "character": 12
      },
      "end": {
        "line": 1460,
        "character": 292
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./episodes/{id}/previous_sibling.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1375,
        "character": 12
      },
      "end": {
        "line": 1460,
        "character": 292
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes/{id}/previous_sibling.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1438,
        "character": 10
      },
      "end": {
        "line": 1438,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes/{id}/previous_sibling.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1466,
        "character": 12
      },
      "end": {
        "line": 1605,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./images.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1582,
        "character": 10
      },
      "end": {
        "line": 1582,
        "character": 17
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./images.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1611,
        "character": 12
      },
      "end": {
        "line": 1689,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./images/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1666,
        "character": 10
      },
      "end": {
        "line": 1666,
        "character": 17
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./images/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1695,
        "character": 12
      },
      "end": {
        "line": 1834,
        "character": 279
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./media_assets.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1811,
        "character": 10
      },
      "end": {
        "line": 1811,
        "character": 22
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./media_assets.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1840,
        "character": 12
      },
      "end": {
        "line": 1918,
        "character": 279
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./media_assets/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1895,
        "character": 10
      },
      "end": {
        "line": 1895,
        "character": 22
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./media_assets/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1924,
        "character": 12
      },
      "end": {
        "line": 2132,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./networks.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1973,
        "character": 22
      },
      "end": {
        "line": 1973,
        "character": 28
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". [path: paths./networks.get.parameters.4.schema.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        "4",
        "schema",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1997,
        "character": 25
      },
      "end": {
        "line": 1997,
        "character": 31
      }
    },
    "message": "\"default\" property type must be array [path: paths./networks.get.parameters.6.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        "6",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2109,
        "character": 10
      },
      "end": {
        "line": 2109,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./networks.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2138,
        "character": 12
      },
      "end": {
        "line": 2216,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./networks/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2193,
        "character": 10
      },
      "end": {
        "line": 2193,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./networks/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2222,
        "character": 12
      },
      "end": {
        "line": 2407,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./people.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2271,
        "character": 25
      },
      "end": {
        "line": 2271,
        "character": 47
      }
    },
    "message": "\"default\" property type must be array [path: paths./people.get.parameters.4.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get",
        "parameters",
        "4",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2384,
        "character": 10
      },
      "end": {
        "line": 2384,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./people.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2413,
        "character": 12
      },
      "end": {
        "line": 2491,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./people/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2468,
        "character": 10
      },
      "end": {
        "line": 2468,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./people/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2497,
        "character": 12
      },
      "end": {
        "line": 2692,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./seasons.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2556,
        "character": 25
      },
      "end": {
        "line": 2556,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./seasons.get.parameters.5.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get",
        "parameters",
        "5",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2669,
        "character": 10
      },
      "end": {
        "line": 2669,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./seasons.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2698,
        "character": 12
      },
      "end": {
        "line": 2775,
        "character": 274
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./seasons/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2698,
        "character": 12
      },
      "end": {
        "line": 2775,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./seasons/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2753,
        "character": 10
      },
      "end": {
        "line": 2753,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./seasons/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2781,
        "character": 12
      },
      "end": {
        "line": 2987,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./series.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2850,
        "character": 25
      },
      "end": {
        "line": 2850,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./series.get.parameters.6.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get",
        "parameters",
        "6",
        "schema",
        "default"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2964,
        "character": 10
      },
      "end": {
        "line": 2964,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./series.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2993,
        "character": 12
      },
      "end": {
        "line": 3070,
        "character": 273
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./series/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2993,
        "character": 12
      },
      "end": {
        "line": 3070,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./series/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3048,
        "character": 10
      },
      "end": {
        "line": 3048,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./series/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3325,
        "character": 35
      },
      "end": {
        "line": 3325,
        "character": 66
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credit.properties.relationships.properties.creditable.properties.data.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credit",
        "properties",
        "relationships",
        "properties",
        "creditable",
        "properties",
        "data",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3334,
        "character": 35
      },
      "end": {
        "line": 3334,
        "character": 64
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credit.properties.relationships.properties.person.properties.data.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credit",
        "properties",
        "relationships",
        "properties",
        "person",
        "properties",
        "data",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4478,
        "character": 18
      },
      "end": {
        "line": 4478,
        "character": 26
      }
    },
    "message": "Enum value \"Series\" must be \"String\". [path: components.schemas.Series.properties.attributes.properties.type.enum.0]",
    "severity": 2,
    "code": "typed-enum",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "enum",
        "0"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4480,
        "character": 24
      },
      "end": {
        "line": 4480,
        "character": 32
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"string\"?. [path: components.schemas.Series.properties.attributes.properties.type.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 2 absolute http references: [(('servers', 0, 'url'), 'url', 'https://art19.com/'), (('info', 'termsOfService'), 'termsOfService', 'https://art19.com/business-terms')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "2"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Select which page number to receive results for. Pages are numbered starting at 1.\\n\\n', 'in': 'query', 'name': 'page[number]', 'required': 'true', 'schema': {'minimum': 1, 'type': 'integer'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Indicate how many records to return per page. The maximum is 100.\\n\\n', 'in': 'query', 'name': 'page[size]', 'required': 'true', 'schema': {'maximum': 100, 'minimum': 1, 'type': 'integer'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        2
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Limit the result to networks containing at least one series with an ad deal of this Ad Ops profile.\\n', 'in': 'query', 'name': 'ad_rep_account_id', 'schema': {'type': 'uuid'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        4
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'properties': {'attributes': {'properties': {'amazon_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render an Amazon subscription badge', 'type': 'boolean'}, 'amazon_subscription_url': {'description': 'The Amazon Music subscription URL', 'type': 'string'}, 'castbox_subscription_url': {'description': 'The CastBox subscription URL', 'type': 'string'}, 'cover_image_id': {'deprecated': True, 'description': 'This will be replaced by the relationship `cover_image` in a future update.<br/>\\nThe image ID of the cover art for this series. The `/images` endpoint provideds details to the image.\\n', 'example': 'ec8f13bf-77c0-40fe-933a-8c088c16bc17', 'format': 'uuid', 'type': 'string'}, 'created_at': {'format': 'date-time', 'type': 'string'}, 'description': {'description': 'The description of the series eventually in HTML format', 'example': '<p><strong>Some</strong> funny example.</p>', 'type': 'string'}, 'description_is_html': {'description': 'Determines whether `description` is in HTML format or plain.', 'type': 'boolean'}, 'description_plain': {'description': 'The description with all HTML markup removed. If the description does not contain markup\\nthis is identitcal to `description`.\\n', 'example': 'Some funny example.', 'type': 'string'}, 'facebook_url': {'description': 'The URL of the series on Facebook', 'type': 'string'}, 'google_subscription_url': {'description': 'The Google subscription URL', 'type': 'string'}, 'iheart_subscription_url': {'description': 'The iHeartRadio subscription URL', 'type': 'string'}, 'instagram_url': {'description': 'The URL of the series on Instagram', 'type': 'string'}, 'itunes_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render an iTunes subscription badge', 'type': 'boolean'}, 'itunes_subscription_url': {'description': 'The Apple iTunes subscription URL', 'type': 'string'}, 'linkedin_url': {'description': 'The URL of the series on LinkedIn', 'type': 'string'}, 'pocket_casts_subscription_url': {'description': 'The Pocket Casts subscription URL', 'type': 'string'}, 'podcast_subscription_url': {'description': 'The URL of the RSS feed', 'example': 'https://rss.art19.com/greatest-show-ever', 'type': 'string'}, 'public_page_enabled': {'description': 'If this is `true`, a public web page for this series is available under\\n`https://art19.com/shows/{slug}`, where `slug` is the value of the corresponding attribute.\\nThis public page provides details about the series as well as descriptive links to all its\\nepisodes. If this is `false`, no such public page is available.\\n', 'type': 'boolean'}, 'public_title': {'description': 'If present, this is the preferred title for the series in the RSS Feed', 'type': 'string'}, 'radio_public_subscription_url': {'description': 'The RadioPublic subscription URL', 'type': 'string'}, 'rss_author': {'description': 'The author responsible for the RSS feed', 'type': 'string'}, 'rss_copyright': {'description': 'The copyright disclaimer for the contents of the show, appearing after a Â© symbol, e.g. `2020 ART19, Inc.`', 'type': 'string'}, 'rss_email': {'description': 'The pubic point of contact for the show', 'type': 'string'}, 'rss_owner': {'description': 'The name of the contact for the show', 'type': 'string'}, 'slug': {'description': \"This slug is unique over all series and networks system wide and is used to access the series' feed\\nas well as its eventually enabled public page on ART19.\\n\", 'example': 'greatest-show-ever', 'type': 'string'}, 'sort_title': {'description': 'The title of the series modified for sorting. This converts all characters to\\nlower case, removes an eventually leading `The` as well as leading and trailling whitespace characters.\\n', 'example': 'greatest show ever', 'type': 'string'}, 'spotify_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render a Spotify subscription badge', 'type': 'boolean'}, 'spotify_subscription_url': {'description': 'The Spotify subscription URL', 'type': 'string'}, 'status': {'description': 'The status of the series', 'enum': ['active', 'inactive'], 'type': 'string'}, 'stitcher_subscription_badge_enabled': {'description': 'If `null` or `true`, the ART19 web player will render a Stitcher subscription badge', 'type': 'boolean'}, 'stitcher_subscription_url': {'description': 'The Stitcher subscription URL', 'type': 'string'}, 'title': {'description': 'The title of the series', 'example': 'The greatest show ever', 'type': 'string'}, 'tumblr_url': {'description': 'The URL of the series on Tumblr', 'type': 'string'}, 'tune_in_subscription_url': {'description': 'The TuneIn subscription URL', 'type': 'string'}, 'twitter_url': {'description': 'The URL of the series on Twitter', 'type': 'string'}, 'type': {'description': 'The type of the series', 'enum': ['Series'], 'type': 'String'}, 'updated_at': {'format': 'date-time', 'type': 'string'}, 'website_url': {'description': 'The custom website URL for the series', 'type': 'string'}}, 'type': 'object'}, 'id': {'example': 'c1fbb1bf-45b1-4803-986e-123166f7f427', 'format': 'uuid', 'type': 'string'}, 'relationships': {'properties': {'tags': {'deprecated': True, 'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of tags associated with the series', 'type': 'object'}, 'classification_inclusions': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of classifications associated with the series', 'type': 'object'}, 'cover_image': {'description': 'The cover image for the series', 'properties': {'data': {'$ref': '#/components/schemas/ResourceIdentifier'}}, 'type': 'object'}, 'credits': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of credits given to people in the series', 'type': 'object'}, 'episodes': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of published and released episodes with an actual media file', 'type': 'object'}, 'images': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'The cover image for the series', 'type': 'object'}, 'network': {'properties': {'data': {'$ref': '#/components/schemas/ResourceIdentifier'}}, 'title': 'The network the series belongs to', 'type': 'object'}, 'seasons': {'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of seasons in the series', 'type': 'object'}, 'taggings': {'deprecated': True, 'properties': {'data': {'items': {'$ref': '#/components/schemas/ResourceIdentifier'}, 'type': 'array'}}, 'title': 'A list of associations linking tags to the series', 'type': 'object'}}, 'type': 'object'}, 'type': {'description': 'The type of resource. This is always `series`', 'example': 'series', 'type': 'string'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'created_at' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'value' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'position' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'sort_title' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'name' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'last_name,first_name' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'sort_title' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'sort_title' is not of type 'array'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Server `url` should not have a trailing slash. [path: servers.0.url]",
    "severity": 1,
    "code": "no-server-trailing-slash",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        0,
        "url"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `boolean` but got `string`. [path: paths./episodes.get.parameters.1.required]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        1,
        "required"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `boolean` but got `string`. [path: paths./episodes.get.parameters.2.required]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        2,
        "required"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./networks.get.parameters.4.schema.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        4,
        "schema",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: components.schemas.Series.properties.attributes.properties.type.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"String\" but received \"string\". [path: components.schemas.Series.properties.attributes.properties.type.enum.0]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "enum",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classification_inclusions.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classification_inclusions/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classifications.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./classifications/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./credits.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./credits/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes/{id}/next_sibling.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./episodes/{id}/previous_sibling.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./images.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./images/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./media_assets.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./media_assets/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./networks.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./networks/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./people.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./people/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./seasons.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./seasons/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./series.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./series/{id}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 15,
        "character": 13
      },
      "end": {
        "line": 15,
        "character": 33
      }
    },
    "message": "Server URL must not have trailing slash. [path: servers.0.url]",
    "severity": 2,
    "code": "oas3-server-trailing-slash",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        "0",
        "url"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 20,
        "character": 12
      },
      "end": {
        "line": 252,
        "character": 292
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classification_inclusions.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 117,
        "character": 25
      },
      "end": {
        "line": 117,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./classification_inclusions.get.parameters.8.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get",
        "parameters",
        "8",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 229,
        "character": 10
      },
      "end": {
        "line": 229,
        "character": 35
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classification_inclusions.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 258,
        "character": 12
      },
      "end": {
        "line": 335,
        "character": 292
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./classification_inclusions/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 258,
        "character": 12
      },
      "end": {
        "line": 335,
        "character": 292
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classification_inclusions/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 313,
        "character": 10
      },
      "end": {
        "line": 313,
        "character": 35
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classification_inclusions/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classification_inclusions/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 341,
        "character": 12
      },
      "end": {
        "line": 549,
        "character": 282
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./classifications.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 341,
        "character": 12
      },
      "end": {
        "line": 549,
        "character": 282
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classifications.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 415,
        "character": 25
      },
      "end": {
        "line": 415,
        "character": 32
      }
    },
    "message": "\"default\" property type must be array [path: paths./classifications.get.parameters.6.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get",
        "parameters",
        "6",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 527,
        "character": 10
      },
      "end": {
        "line": 527,
        "character": 26
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classifications.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 555,
        "character": 12
      },
      "end": {
        "line": 632,
        "character": 282
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./classifications/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 555,
        "character": 12
      },
      "end": {
        "line": 632,
        "character": 282
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./classifications/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 610,
        "character": 10
      },
      "end": {
        "line": 610,
        "character": 26
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./classifications/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/classifications/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 638,
        "character": 12
      },
      "end": {
        "line": 836,
        "character": 274
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./credits.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 638,
        "character": 12
      },
      "end": {
        "line": 836,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./credits.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 702,
        "character": 25
      },
      "end": {
        "line": 702,
        "character": 35
      }
    },
    "message": "\"default\" property type must be array [path: paths./credits.get.parameters.5.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get",
        "parameters",
        "5",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 814,
        "character": 10
      },
      "end": {
        "line": 814,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./credits.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 842,
        "character": 12
      },
      "end": {
        "line": 919,
        "character": 274
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./credits/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 842,
        "character": 12
      },
      "end": {
        "line": 919,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./credits/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 897,
        "character": 10
      },
      "end": {
        "line": 897,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./credits/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/credits/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 925,
        "character": 12
      },
      "end": {
        "line": 1195,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 946,
        "character": 24
      },
      "end": {
        "line": 946,
        "character": 30
      }
    },
    "message": "\"required\" property must be boolean. [path: paths./episodes.get.parameters.1.required]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        "1",
        "required"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 956,
        "character": 24
      },
      "end": {
        "line": 956,
        "character": 30
      }
    },
    "message": "\"required\" property must be boolean. [path: paths./episodes.get.parameters.2.required]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        "2",
        "required"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1048,
        "character": 25
      },
      "end": {
        "line": 1048,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./episodes.get.parameters.12.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "parameters",
        "12",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1172,
        "character": 10
      },
      "end": {
        "line": 1172,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1201,
        "character": 12
      },
      "end": {
        "line": 1278,
        "character": 275
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./episodes/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1201,
        "character": 12
      },
      "end": {
        "line": 1278,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1256,
        "character": 10
      },
      "end": {
        "line": 1256,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1284,
        "character": 12
      },
      "end": {
        "line": 1369,
        "character": 288
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./episodes/{id}/next_sibling.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1284,
        "character": 12
      },
      "end": {
        "line": 1369,
        "character": 288
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes/{id}/next_sibling.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1347,
        "character": 10
      },
      "end": {
        "line": 1347,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes/{id}/next_sibling.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/next_sibling",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1375,
        "character": 12
      },
      "end": {
        "line": 1460,
        "character": 292
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./episodes/{id}/previous_sibling.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1375,
        "character": 12
      },
      "end": {
        "line": 1460,
        "character": 292
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./episodes/{id}/previous_sibling.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1438,
        "character": 10
      },
      "end": {
        "line": 1438,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./episodes/{id}/previous_sibling.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/episodes/{id}/previous_sibling",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1466,
        "character": 12
      },
      "end": {
        "line": 1605,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./images.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1582,
        "character": 10
      },
      "end": {
        "line": 1582,
        "character": 17
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./images.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1611,
        "character": 12
      },
      "end": {
        "line": 1689,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./images/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1666,
        "character": 10
      },
      "end": {
        "line": 1666,
        "character": 17
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./images/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/images/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1695,
        "character": 12
      },
      "end": {
        "line": 1834,
        "character": 279
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./media_assets.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1811,
        "character": 10
      },
      "end": {
        "line": 1811,
        "character": 22
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./media_assets.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1840,
        "character": 12
      },
      "end": {
        "line": 1918,
        "character": 279
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./media_assets/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1895,
        "character": 10
      },
      "end": {
        "line": 1895,
        "character": 22
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./media_assets/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/media_assets/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1924,
        "character": 12
      },
      "end": {
        "line": 2132,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./networks.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1973,
        "character": 22
      },
      "end": {
        "line": 1973,
        "character": 28
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". [path: paths./networks.get.parameters.4.schema.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        "4",
        "schema",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1997,
        "character": 25
      },
      "end": {
        "line": 1997,
        "character": 31
      }
    },
    "message": "\"default\" property type must be array [path: paths./networks.get.parameters.6.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "parameters",
        "6",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2109,
        "character": 10
      },
      "end": {
        "line": 2109,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./networks.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2138,
        "character": 12
      },
      "end": {
        "line": 2216,
        "character": 275
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./networks/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2193,
        "character": 10
      },
      "end": {
        "line": 2193,
        "character": 19
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./networks/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/networks/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2222,
        "character": 12
      },
      "end": {
        "line": 2407,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./people.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2271,
        "character": 25
      },
      "end": {
        "line": 2271,
        "character": 47
      }
    },
    "message": "\"default\" property type must be array [path: paths./people.get.parameters.4.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get",
        "parameters",
        "4",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2384,
        "character": 10
      },
      "end": {
        "line": 2384,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./people.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2413,
        "character": 12
      },
      "end": {
        "line": 2491,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./people/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2468,
        "character": 10
      },
      "end": {
        "line": 2468,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./people/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/people/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2497,
        "character": 12
      },
      "end": {
        "line": 2692,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./seasons.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2556,
        "character": 25
      },
      "end": {
        "line": 2556,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./seasons.get.parameters.5.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get",
        "parameters",
        "5",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2669,
        "character": 10
      },
      "end": {
        "line": 2669,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./seasons.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2698,
        "character": 12
      },
      "end": {
        "line": 2775,
        "character": 274
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./seasons/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2698,
        "character": 12
      },
      "end": {
        "line": 2775,
        "character": 274
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./seasons/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2753,
        "character": 10
      },
      "end": {
        "line": 2753,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./seasons/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/seasons/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2781,
        "character": 12
      },
      "end": {
        "line": 2987,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./series.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2850,
        "character": 25
      },
      "end": {
        "line": 2850,
        "character": 37
      }
    },
    "message": "\"default\" property type must be array [path: paths./series.get.parameters.6.schema.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get",
        "parameters",
        "6",
        "schema",
        "default"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2964,
        "character": 10
      },
      "end": {
        "line": 2964,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./series.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2993,
        "character": 12
      },
      "end": {
        "line": 3070,
        "character": 273
      }
    },
    "message": "Operation \"description\" must be present and non-empty string. [path: paths./series/{id}.get]",
    "severity": 2,
    "code": "operation-description",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2993,
        "character": 12
      },
      "end": {
        "line": 3070,
        "character": 273
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./series/{id}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3048,
        "character": 10
      },
      "end": {
        "line": 3048,
        "character": 18
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./series/{id}.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/series/{id}",
        "get",
        "tags",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3325,
        "character": 35
      },
      "end": {
        "line": 3325,
        "character": 66
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credit.properties.relationships.properties.creditable.properties.data.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credit",
        "properties",
        "relationships",
        "properties",
        "creditable",
        "properties",
        "data",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3334,
        "character": 35
      },
      "end": {
        "line": 3334,
        "character": 64
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credit.properties.relationships.properties.person.properties.data.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credit",
        "properties",
        "relationships",
        "properties",
        "person",
        "properties",
        "data",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4478,
        "character": 18
      },
      "end": {
        "line": 4478,
        "character": 26
      }
    },
    "message": "Enum value \"Series\" must be \"String\". [path: components.schemas.Series.properties.attributes.properties.type.enum.0]",
    "severity": 2,
    "code": "typed-enum",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "enum",
        "0"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4480,
        "character": 24
      },
      "end": {
        "line": 4480,
        "character": 32
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"string\"?. [path: components.schemas.Series.properties.attributes.properties.type.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Series",
        "properties",
        "attributes",
        "properties",
        "type",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]