[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'APIKeyHeader' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Image background removed', 'content': {'image/*': {'schema': {'type': 'string', 'format': 'binary', 'example': '(binary image data)'}}, 'application/json': {'schema': {'$ref': '#/components/schemas/RemoveBgJsonResponse'}}}, 'headers': {'X-Type': {'schema': {'type': 'string', 'enum': ['person', 'product', 'animal', 'car', 'car_interior', 'car_part', 'transportation', 'graphics', 'other']}, 'description': 'Detected foreground type (How specific this classification is depends on the type_level parameter sent in the request)'}, 'X-Width': {'schema': {'type': 'integer'}, 'description': 'Width of the result image'}, 'X-Height': {'schema': {'type': 'integer'}, 'description': 'Height of the result image'}, 'X-Credits-Charged': {'schema': {'type': 'float'}, 'description': 'Amount of credits charged for this call'}, 'X-Foreground-Top': {'schema': {'type': 'integer'}, 'description': 'Top position of the foreground image along the vertical axis. In case the input image resolution is higher than the limit (> 50 megapixels) this value is expressed with respect to the input image resolution.'}, 'X-Foreground-Left': {'schema': {'type': 'integer'}, 'description': 'Left position of the foreground image along the horizontal axis. In case the input image resolution is higher than the limit (> 50 megapixels) this value is expressed with respect to the input image resolution.'}, 'X-Foreground-Width': {'schema': {'type': 'integer'}, 'description': 'Width of the foreground image. In case the input image resolution is higher than the limit (> 50 megapixels) this value is expressed with respect to the input image resolution.'}, 'X-Foreground-Height': {'schema': {'type': 'integer'}, 'description': 'Height of the foreground image. In case the input image resolution is higher than the limit (> 50 megapixels) this value is expressed with respect to the input image resolution.'}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/removebg",
        "post",
        "responses",
        "200"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'*/*': {'schema': {'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'attributes': {'type': 'object', 'properties': {'credits': {'type': 'object', 'properties': {'total': {'type': 'float', 'example': 200}, 'subscription': {'type': 'float', 'example': 150}, 'payg': {'type': 'float', 'example': 50}, 'enterprise': {'type': 'float', 'example': 0}}}, 'api': {'type': 'object', 'properties': {'free_calls': {'type': 'integer', 'example': 50}, 'sizes': {'type': 'string', 'example': 'all'}}}}}}}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "1 is not of type 'string'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'false' is not of type 'boolean'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'true' is not of type 'boolean'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "1 is not of type 'string'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'false' is not of type 'boolean'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "'true' is not of type 'boolean'",
    "severity": 1,
    "code": "type",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.RemoveBgMultipart.properties.type_level.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgMultipart",
        "properties",
        "type_level",
        "enum",
        1
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.RemoveBgMultipart.properties.type_level.enum.2]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgMultipart",
        "properties",
        "type_level",
        "enum",
        2
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.RemoveBgJson.properties.type_level.enum.1]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgJson",
        "properties",
        "type_level",
        "enum",
        1
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "All values of `enum` field must be of the same type as the `type` field: expected \"string\" but received \"integer\". [path: components.schemas.RemoveBgJson.properties.type_level.enum.2]",
    "severity": 1,
    "code": "no-enum-type-mismatch",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgJson",
        "properties",
        "type_level",
        "enum",
        2
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./removebg.post.responses.200.headers.X-Credits-Charged.schema.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/removebg",
        "post",
        "responses",
        200,
        "headers",
        "X-Credits-Charged",
        "schema",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./improve.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/improve",
        "post",
        "summary"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The field `description` must be present on this level. [path: paths./account.get.responses.200]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        200
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.total.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        200,
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "total",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.subscription.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        200,
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "subscription",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.payg.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        200,
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "payg",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.enterprise.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        200,
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "enterprise",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./removebg.post.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/removebg",
        "post",
        "operationId"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./improve.post.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/improve",
        "post",
        "operationId"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./account.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "operationId"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2,
        "character": 9
      },
      "end": {
        "line": 6,
        "character": 67
      }
    },
    "message": "Info object must have \"contact\" object. [path: info]",
    "severity": 2,
    "code": "info-contact",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 15,
        "character": 13
      },
      "end": {
        "line": 464,
        "character": 58
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./removebg.post]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/removebg",
        "post"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 17,
        "character": 10
      },
      "end": {
        "line": 17,
        "character": 30
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./removebg.post.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/removebg",
        "post",
        "tags",
        "0"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 90,
        "character": 26
      },
      "end": {
        "line": 90,
        "character": 33
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"array\"?. [path: paths./removebg.post.responses.200.headers.X-Credits-Charged.schema.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/removebg",
        "post",
        "responses",
        "200",
        "headers",
        "X-Credits-Charged",
        "schema",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 473,
        "character": 13
      },
      "end": {
        "line": 549,
        "character": 58
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./improve.post]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/improve",
        "post"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 475,
        "character": 10
      },
      "end": {
        "line": 475,
        "character": 31
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./improve.post.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/improve",
        "post",
        "tags",
        "0"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 558,
        "character": 12
      },
      "end": {
        "line": 635,
        "character": 58
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./account.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 560,
        "character": 10
      },
      "end": {
        "line": 560,
        "character": 30
      }
    },
    "message": "Operation tags must be defined in global tags. [path: paths./account.get.tags.0]",
    "severity": 2,
    "code": "operation-tag-defined",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "tags",
        "0"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 565,
        "character": 16
      },
      "end": {
        "line": 607,
        "character": 50
      }
    },
    "message": "\"200\" property must have required property \"description\". [path: paths./account.get.responses.200]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 581,
        "character": 42
      },
      "end": {
        "line": 581,
        "character": 49
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"array\"?. [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.total.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "total",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 582,
        "character": 45
      },
      "end": {
        "line": 582,
        "character": 48
      }
    },
    "message": "schema is invalid: data/type must be equal to one of the allowed values, data/type must be array, data/type must match a schema in anyOf [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.total.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "total",
        "example"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 585,
        "character": 42
      },
      "end": {
        "line": 585,
        "character": 49
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"array\"?. [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.subscription.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "subscription",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 586,
        "character": 45
      },
      "end": {
        "line": 586,
        "character": 48
      }
    },
    "message": "schema is invalid: data/type must be equal to one of the allowed values, data/type must be array, data/type must match a schema in anyOf [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.subscription.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "subscription",
        "example"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 589,
        "character": 42
      },
      "end": {
        "line": 589,
        "character": 49
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"array\"?. [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.payg.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "payg",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 590,
        "character": 45
      },
      "end": {
        "line": 590,
        "character": 47
      }
    },
    "message": "schema is invalid: data/type must be equal to one of the allowed values, data/type must be array, data/type must match a schema in anyOf [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.payg.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "payg",
        "example"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 593,
        "character": 42
      },
      "end": {
        "line": 593,
        "character": 49
      }
    },
    "message": "\"type\" property must be equal to one of the allowed values: \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\". Did you mean \"array\"?. [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.enterprise.type]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "enterprise",
        "type"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 594,
        "character": 45
      },
      "end": {
        "line": 594,
        "character": 46
      }
    },
    "message": "schema is invalid: data/type must be equal to one of the allowed values, data/type must be array, data/type must match a schema in anyOf [path: paths./account.get.responses.200.content.*/*.schema.properties.data.properties.attributes.properties.credits.properties.enterprise.example]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/account",
        "get",
        "responses",
        "200",
        "content",
        "*/*",
        "schema",
        "properties",
        "data",
        "properties",
        "attributes",
        "properties",
        "credits",
        "properties",
        "enterprise",
        "example"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 699,
        "character": 14
      },
      "end": {
        "line": 699,
        "character": 15
      }
    },
    "message": "Enum value 1 must be \"string\". [path: components.schemas.RemoveBgMultipart.properties.type_level.enum.1]",
    "severity": 2,
    "code": "typed-enum",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgMultipart",
        "properties",
        "type_level",
        "enum",
        "1"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 700,
        "character": 14
      },
      "end": {
        "line": 700,
        "character": 15
      }
    },
    "message": "Enum value 2 must be \"string\". [path: components.schemas.RemoveBgMultipart.properties.type_level.enum.2]",
    "severity": 2,
    "code": "typed-enum",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgMultipart",
        "properties",
        "type_level",
        "enum",
        "2"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 703,
        "character": 23
      },
      "end": {
        "line": 703,
        "character": 24
      }
    },
    "message": "\"default\" property type must be string [path: components.schemas.RemoveBgMultipart.properties.type_level.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgMultipart",
        "properties",
        "type_level",
        "default"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 726,
        "character": 23
      },
      "end": {
        "line": 726,
        "character": 30
      }
    },
    "message": "\"default\" property type must be boolean [path: components.schemas.RemoveBgMultipart.properties.crop.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgMultipart",
        "properties",
        "crop",
        "default"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 767,
        "character": 23
      },
      "end": {
        "line": 767,
        "character": 29
      }
    },
    "message": "\"default\" property type must be boolean [path: components.schemas.RemoveBgMultipart.properties.semitransparency.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgMultipart",
        "properties",
        "semitransparency",
        "default"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 827,
        "character": 14
      },
      "end": {
        "line": 827,
        "character": 15
      }
    },
    "message": "Enum value 1 must be \"string\". [path: components.schemas.RemoveBgJson.properties.type_level.enum.1]",
    "severity": 2,
    "code": "typed-enum",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgJson",
        "properties",
        "type_level",
        "enum",
        "1"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 828,
        "character": 14
      },
      "end": {
        "line": 828,
        "character": 15
      }
    },
    "message": "Enum value 2 must be \"string\". [path: components.schemas.RemoveBgJson.properties.type_level.enum.2]",
    "severity": 2,
    "code": "typed-enum",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgJson",
        "properties",
        "type_level",
        "enum",
        "2"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 831,
        "character": 23
      },
      "end": {
        "line": 831,
        "character": 24
      }
    },
    "message": "\"default\" property type must be string [path: components.schemas.RemoveBgJson.properties.type_level.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgJson",
        "properties",
        "type_level",
        "default"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 854,
        "character": 23
      },
      "end": {
        "line": 854,
        "character": 30
      }
    },
    "message": "\"default\" property type must be boolean [path: components.schemas.RemoveBgJson.properties.crop.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgJson",
        "properties",
        "crop",
        "default"
      ],
      "target": "final-spec_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 895,
        "character": 23
      },
      "end": {
        "line": 895,
        "character": 29
      }
    },
    "message": "\"default\" property type must be boolean [path: components.schemas.RemoveBgJson.properties.semitransparency.default]",
    "severity": 1,
    "code": "oas3-valid-schema-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "RemoveBgJson",
        "properties",
        "semitransparency",
        "default"
      ],
      "target": "final-spec_bundled-spec"
    }
  }
]