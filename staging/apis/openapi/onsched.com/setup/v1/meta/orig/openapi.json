{
  "openapi": "3.0.1",
  "info": {
    "title": "OnSched Setup API",
    "description": "Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.\r\n<br><br>\r\nTake the API for a test drive. Just click on the Authorize button below and authenticate. \r\nYou can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.\r\n<br><br>\r\nThe API has two interfaces, consumer and setup. \r\n<ul>\r\n<li>\r\nThe consumer interface provides all the endpoints required for implementing consumer booking flows.\r \n</li>\r\n<li>\r\nThe setup interface provides endpoints for profile configuration and setup.\r\n</li>\r\n</ul>\r\nToggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.\r\n",
    "version": "v1",
    "x-jentic-source-url": "https://sandbox-api.onsched.com/swagger/setup/swagger.json"
  },
  "servers": [
    {
      "url": "https://sandbox-api.onsched.com/"
    }
  ],
  "paths": {
    "/setup/v1/appointments": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "List Appointments",
        "description": "<p>Use this endpoint to return a <b>List of Appointments</b>. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further. For more information: <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointments Overview</a></p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter appointments by email address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "Filter appointments by lastname or part of",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "query",
            "description": "Filter appointments by service",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarId",
            "in": "query",
            "description": "Filter appointments by calendar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "Filter appointments by resource",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter appointments by customer",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceAllocationId",
            "in": "query",
            "description": "Filter appointments by service allocation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Format YYYY-MM-DD: Filter appointments by on/after startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Format YYYY-MM-DD: Filter appointments on/before endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter appointments by status: IN, BK, CN, RE, RS",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookedBy",
            "in": "query",
            "description": "Filter appointments by user email who booked",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/appointments/{id}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Get Appointment",
        "description": "<p>Use this endpoint to return an <b>Appointment</b> object. A valid <b>appointment id</b> is required. Find appointment id's by using the <i>GET\u200b/setup\u200b/v1\u200b/appointments</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of appointment object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/appointments/{id}/reassign/resource/{resourceId}": {
      "put": {
        "tags": [
          "Appointments"
        ],
        "summary": "Reassign Appointment",
        "description": "<p>Use this endpoint to <b>Reassign</b> an appointment from one resource to another. The result returned is a single appointment that was reassigned to the target resource. A valid <b>appointment id</b> and <b>resource id</b> is required. Find appointment id's by using the <i>GET /setup/v1/appointments</i> endpoint, find resource id's by using the <i>GET \u200b/setup\u200b/v1\u200b/resources</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of appointment object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "id of target resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/businessusers": {
      "get": {
        "tags": [
          "BusinessUsers"
        ],
        "summary": "List Users",
        "description": "<p>Use this endpoint to return a <b>List of Business Users and their Roles</b>. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter by email address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter user role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUserListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BusinessUsers"
        ],
        "summary": "Create User",
        "description": "<p>Use this endpoint to <b>Create</b> a Business User. If not specified, the business location defaults to the primary business location. </p>\r\n<p>Required fields: <b>Name</b>, <b>Email</b> and <b>Role</b><b>Note:</b> If the businessUser is a bookable resource (bizresource) then a resourceId is required.</p>\r\n<p>For role, use one of the values listed. <b>Business Roles Include: bizowner</b> (Business Owner), <b>bizadmin</b> (Business Administrator), <b>bizresource</b> (Business User - Bookable Resource).</p>\r\n<p>The <b>sendRegistrationInvite</b> parameter is available to API consumers for their own use. It provides no added functionality in OnSched.</p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUserViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/businessusers/{id}": {
      "get": {
        "tags": [
          "BusinessUsers"
        ],
        "summary": "Get User",
        "description": "<p>Use this endpoint to return a <b>Business User</b> object. A valid <b>businessUser id</b> is required. Find businessUser id's using the <i>GET /setup/v1/businessusers</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of businessUser object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUserViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BusinessUsers"
        ],
        "summary": "Update User",
        "description": "<p>Use this endpoint to <b>Update</b> a Business User. A valid <b>businessUser id</b> is required.</p>\r\n<p>\r\n  <b>Business Roles Include: bizowner</b> (Business Owner), <b>bizadmin</b> (Business Administrator), <b>bizresource</b> (Business User - Bookable Resource).</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUserUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUserViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BusinessUsers"
        ],
        "summary": "Delete User",
        "description": "<p>Use this endpoint to permanently <b>Delete</b> a Business User. A valid <b>businessUser id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/setup/v1/businessusers/permissions": {
      "get": {
        "tags": [
          "BusinessUsers"
        ],
        "summary": "List User Permissions",
        "description": "<p>Use this endpoint to return a <b>List of Business User Permissions by Role</b>. Results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "Filter permissions by role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPermissionListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/businessusers/{email}/companies": {
      "get": {
        "tags": [
          "BusinessUsers"
        ],
        "summary": "List User Companies",
        "description": "<p>Use this endpoint to return a <b>List of Companies</b> associated with the business users email requested. A business user <b>email</b> address is required. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of business user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "All or partial company name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedCompanyListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/calendars": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "List Calendars",
        "description": "<p>Use this endpoint to return a <b>List of Calendars</b> from the requested location. If not specified, the business location defaults to the primary business location. </p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Filter by deleted status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendars"
        ],
        "summary": "DEPRECATING: Create",
        "description": "<p>\r\n  <b>DEPRECATING:</b> Create Calendar</p>\r\n<p>We are no longer supporting Multiple Calendar Functionality as it is part of our Legacy Application and has no relevance in the API.</p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/calendars/{id}": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "Get Calendar",
        "description": "<p>Use this endpoint to return a <b>Calendar</b> object. A valid <b>calendar id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendar object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Calendars"
        ],
        "summary": "Update Calendar",
        "description": "<p>Use this endpoint to <b>Update</b> a calendar object. A valid <b>calendar id</b> is required. When your company was created a calendar object was automatically created with 24-hour weekly availability. Its <b>name = Main</b>, the <b>type = resource</b> and by default the <b>interval = 30 mins</b>. We are currently supporting resource calendar type. Other types were part of our Legacy Application and has no relevance in the API product.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendar object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input model for the calendar object",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Calendars"
        ],
        "summary": "Delete Calendar",
        "description": "<p>Use this endpoint to <b>Delete</b> a calendar object. A valid <b>calendar id</b> is required. The calendar is not permanently deleted and can be recovered by using the <i>PUT \u200b/setup\u200b/v1\u200b/calendars\u200b/{id}\u200b/recover </i>endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendar object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/calendars/{id}/recover": {
      "put": {
        "tags": [
          "Calendars"
        ],
        "summary": "Recover Calendar",
        "description": "<p>Use this endpoint to <b>Recover</b> a previously deleted calendar object. A valid <b>calendar id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendar object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/calendars/{id}/services": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "List Calendar Services",
        "description": "<p>Use this endpoint to return a <b>List of Linked Services</b> of a calendar object. A valid <b>calendar id</b> is required. Find calendar id's by using the <i>GET /setup/v1/calendars</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendar object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/calendars/{id}/blocks": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "List Calendar Blocks",
        "description": "<p>Use this endpoint to return a <b>List of Calendar Blocks</b> for the requested calendar. A valid <b>calendar id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendar to list blocks",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarBlockListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error."
          },
          "404": {
            "description": "Resource was not found"
          }
        }
      }
    },
    "/setup/v1/calendars/blocks/{id}": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "Get Calendar Block",
        "description": "<p>Use this endpoint to return a <b>Calendar Block</b>. A valid <b>calendarBlock id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendarBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/calendars/{id}/block": {
      "post": {
        "tags": [
          "Calendars"
        ],
        "summary": "Create Calendar Block",
        "description": "<p>Use this endpoint to <b>Create</b> a Calendar Block. A valid <b>calendar id</b> is required.</p>\r\n<p>Required fields: <b>startDate, endDate, startTime, endTime</b> and <b>reason</b>.</p>\r\n<p>Calendar blocks can be set to specific time ranges or for the whole day. Th block a whole day set the startTime to 0 and endTime to 2400.</p>\r\n<p>Calendar blocks can be for a specific date range instance or set to repeat at a specified frequency.</p>\r\n<p>\r\n  <b>Repeat object: (repeats = true)</b>\r\n</p>\r\n<p>The <b>frequency</b> can be set to a value of <b>D, W or M</b> for <b>Day, Week</b> or <b>Month</b> respectively.</p>\r\n<p>Use the <b>interval</b> property to specify the interval that the block repeats. For example, an interval of 2 for a weekly block means that the block will repeat every 2nd week beginning at the day specified. A daily block with an interval of 10 means the block will repeat every 10 days. The interval property applies to all repeat frequencies. <b>If using the repeat functionality an interval value is required</b>.</p>\r\n<p>\r\n  <b>DAILY BLOCKS</b>: Will repeat for each day of the week for the date range specified for the interval specified.  An interval value of \u201c1\u201d repeats every day, and an interval value of \u201c3\u201d is every 3rd day.</p>\r\n<p>\r\n  <b>WEEKLY BLOCKS</b>: Will repeat only on the specified days of the week for the date range specified. For weekly the <b>frequency</b>  is required and should be set to <b>\u201cW\u201d</b>.  You must specify the <b>weekdays</b> parameter. Weekdays are expressed as a string of digits with each single digit in the string representing a day of the week. The possible values are <b>0,1,2,3,4,5,6</b> where <b>0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday</b>. For example, a weekly frequency with an interval of \u201c1\u201d, and an entry of weekdays = \u201c24\u201d, will repeat each week on Tuesday and Thursday for the duration of the block date range.</p>\r\n<p>\r\n  <b>MONTHLY BLOCKS</b>: Will repeat either on the day of the month specified in the <b>monthDay</b> property or on the day of the week and week of the month specified by the <b>monthType</b> property.  In both cases <b>frequency</b> is required and should be set to <b>\u201cM\u201d</b>, monthly, <b>monthDay</b> is the day of the month you want blocked.  If monthDay=\u201915\u2019 this means to block the 15th of every month in the date range requested. Using monthDay in conjunction with monthType addresses \u201cday of the week and week of the month\u201d scenario.  There are two possible values for monthType: <b>D for Day of Month</b> or <b>W for Week of Month.</b> For <b>monthType D</b>, monthDay value must be between 1 and 31. It is the day of the month to repeat on. For <b>monthType M</b>, monthDay value contains 2 digits: day of week (0-6), (0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday) and week of month (1-5). 1 being the first week, 2 being the second. The third Thursday of the month is depicted as a monthType=\u201dM\u201d and monthDay=\u201d43\u201d.</p>\r\n<p>\r\n  <b>Repeats will end on the date specified by the end date.</b>\r\n</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendar object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/calendars/block/{id}": {
      "put": {
        "tags": [
          "Calendars"
        ],
        "summary": "Update Calendar Block",
        "description": "<p>Use this endpoint to <b>Create</b> a Calendar Block. A valid <b>calendarBlock id</b> is required. Refer to the <i>POST \u200b/setup\u200b/v1\u200b/calendars\u200b/{id}\u200b/block</i> endpoint for fieldnames and details.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calendarBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource Block input model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarBlockUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarBlockViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Calendars"
        ],
        "summary": "Delete Calendar Block",
        "description": "<p>Use this endpoint to permanently <b>Delete</b> a calendar block. A valid <b>calendarBlock id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of a calendarBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company",
        "description": "<p>Use this endpoint to return the <b>Authorized Company</b> information. The company is the main entity that oversees all business locations defined below it, hierarchically. </p>\r\n<p>Access to the company credentials gives you access to all business locations defined in the authorized company. Client credentials resolve to a single company and are purposely hidden from this endpoint.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Company",
        "description": "<p>Use this endpoint to <b>Update</b> the authorized company information. Your client credentials resolve to a single company. The timezoneName must be expressed as an IANA Timezone, e.g., <i>America/New_York</i>. </p>\r\n <p>For more information: <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Timezone IANA Wiki</a></p>",
        "requestBody": {
          "description": "Company Update Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company",
        "description": "<p>Use this endpoint to <b>Create</b> a new authorized company.</p>\r\n<p>\r\n  <b>Note: Special API Partner credentials are required to access this endpoint.</b>\r\n</p>\r\n<p>The <b>name, registrationEmail, phone, country</b> and <b>timezoneName</b> are required fields. For <b>country</b> use the standard ISO 3166 2-character country code.</p>\r\n<p>The <b>timezoneName</b> must be expressed as an IANA Timezone e.g., <i>America/New_York</i>.</p>\r\n<p>For more information: <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Timezone IANA Wiki</a></p>",
        "requestBody": {
          "description": "Company Input Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/domains": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "List Company Domains",
        "description": "<p>Use this endpoint to return a <b>List of Company Domains</b> for the authorized company. To share the OnSchedJS booking widget on your website or in your application your domain must be listed.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDomainListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company Domain",
        "description": "<p>Use this endpoint to <b>Create</b> an OnSchedJs domain for your authorized company. To share the OnSchedJS booking widget on your website or in your application you must add the domain.</p>",
        "requestBody": {
          "description": "Company Domain Input Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDomainViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/domains/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Domain",
        "description": "<p>Use this endpoint to return a <b>Company Domain</b> object. A valid <b>companyDomain id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of companyDomain object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDomainViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Company Domain",
        "description": "<p>Use this endpoint to <b>Update</b> an OnSchedJs domain for your authorized company. A valid <b>companyDomain id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of companyDomain object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Company Domain Update Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDomainUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDomainViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Company Domain",
        "description": "<p>Use this endpoint to <b>Delete</b> an OnSchedJs domain from your authorized company. A valid <b>companyDomain id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of companyDomain object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDomainViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/regions": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "List Regions",
        "description": "<p>Use this endpoint to return a list of <b>Regions</b> in the authorized company. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further. </p>",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "region object's",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error."
          },
          "404": {
            "description": "Resource was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Region",
        "description": "<p>Use this endpoint to <b>Create</b> a region object. Regions can be mapped to business locations. They can be used by the locations endpoints to filter locations by region id.</p>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegionInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegionInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegionInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegionInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/regions/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Region",
        "description": "<p>Use this endpoint to return a <b>Region</b> object. A valid <b>region id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of a region object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Region",
        "description": "<p>Use this endpoint to <b>Update</b> a region object. A valid <b>region id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of Region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Region Update Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegionUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegionUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegionUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegionUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Region",
        "description": "<p>Use this endpoint to <b>Delete</b> a region object. A valid <b>region id</b> is required. If the region is related to any business locations it won't be deleted. You must first remove any references to region id from the business locations prior to deleting.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of Region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/email/templates": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "List Email Templates",
        "description": "<p>Use this endpoint to return a <b>List of Email Templates</b> that are provided and may be customized. If the template has been customized, the customized property is true. The scope parameter indicates if the email template has been customized at the Business Location level or Company level. This endpoint returns <b>only company level templates</b>, so the scope is always company.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/email/templates/{templateName}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Email Template",
        "description": "<p>Use this endpoint to return the requested <b>Email Template</b>. If it wasn't customized the default template is returned. The response content is in html format. A valid emailTemplate <b>name</b> is required. Find template names by using the: <i>GET \u200b/setup\u200b/v1\u200b/companies\u200b/email\u200b/templates</i> endpoint. Note: The master template cannot be accessed here. </p>\r\n<p>To create custom company email templates, go to the <i>POST \u200b/setup\u200b/v1\u200b/locations\u200b/{id}\u200b/email\u200b/templates</i> endpoint and create a template using the Primary Business Location Id.</p>",
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "description": "Email template name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/email/templates/master": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Master Template Settings",
        "description": "<p>Use this endpoint to return the <b>Master Email Template Settings</b>. Settings exist for showing or hiding email panels and for changing color schemes. </p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEmailTemplateSettingsViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Master Template Settings",
        "description": "<p>Use this endpoint to <b>Create Custom Master Email Template Settings</b>. Settings exist for showing or hiding email panels and for changing color schemes. Use the <i>GET \u200b/setup\u200b/v1\u200b/companies\u200b/email\u200b/templates</i> endpoint to display the settings offered. Changes to the Master Template Settings will be reflected in all business locations associated with this company. </p>\r\n<p>The email template endpoints work a little differently than most. There are no endpoints to update the templates, we use the post endpoint to create a custom template instead. This endpoint creates a new custom Master Template Settings file that will be used instead. If you delete it you are deleting the custom template settings you created and the original default Master Template created by OnSched would be reactivated.</p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEmailTemplateSettingsViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Master Template Settings",
        "description": "<p>Use this endpoint to <b>Delete Custom Master Email Template Settings</b>. Deleting a custom master email template setting will reactivate the original default OnSched template settings.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEmailTemplateSettingsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/companies/timezones/{date}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "List Time Zones",
        "description": "<p>Use this endpoint to return a <b>List of timezone names, timezoneIana and tzOffset values</b> calculated for the date requested. Daylight Savings may or may not apply depending on the date specified.</p>",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "\"YYYY-MM-DD: Date for timezone info\"",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimezoneViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List Customers",
        "description": "<p>Use this endpoint to return a <b>List of Customers</b>. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Filter by groupId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter by email address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "Search by lastname.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Filter by deleted status.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer",
        "description": "<p>Use this endpoint to return a <b>Customer</b> object. A valid <b>customer id</b> is required. Find customer id's by using the <i>GET /setup/v1/customers</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of customer object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/customers/{id}/privacy": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer Data",
        "description": "<p>Use this endpoint to return the <b>Customer</b> object. A valid <b>customer id</b> is required. Find customer id's using the <i>GET /setup/v1/customers</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of customer object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPrivacyViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "List Locations",
        "description": "<p>Use this endpoint to <b>List Business Locations</b> associated with your company. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>\r\n<p>\r\n  <b>IMPORTANT DEPRECATION NOTICE</b>: The following online settings parameters were intended for internal use in our Portal application only. They will be deprecated on <b>OCTOBER 15, 2022</b>. These fields are currently part of the <b>SETTINGS</b> object in all location endpoints: <b>businessId, enabled, familyMembersEnabled, serviceLabel, resourceLabel, resourceAnyLabel, resourceSelection, liveMode, formFlow, availabilityForm, showServiceGroups, showOnSchedLogo, showBusinessLogo, disableAuthorization, hideNavBar, hideLocationNav, hideServiceGroupsNav, hideServicesNav, hideContinueBooking, returnToService, returnToAvailability, hideBreadCrumbNav.</b> If you are using these fields, please adjust your code to handle the deprecation or let us know by submitting a ticket to: <b><i>support@onsched.com</i></b> as we do not want to interrupt your existing workflows.</p>",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Location name(full or partial) to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "query",
            "description": "Find locations that offer this service",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "friendlyId",
            "in": "query",
            "description": "friendlyId of location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Filter locations on deleted status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Location",
        "description": "<p>Use this endpoint to <b>Create</b> a new business location. The result is a business location object with a GUID assigned to the location.</p>\r \n<p>The <b>name</b> and <b>timezoneName</b> fields are required. The <b>timezoneName</b> must be expressed as an IANA Timezone e.g., <i>America/New_York</i>. Refer to: <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Timezone Wiki</a> for a listing of IANA time zones.</p>\r\n<p>\r\n  <b>Business hours</b> are set by defining the <b>startTime</b> and <b>endTime</b> values for each day available/open. All days of the week must be provided when setting availability. Days are defined as <b>sun, mon, tue, wed, thu, fri and sat</b>. Start and End Times are entered in <b>military format. e.g., 800 is 8:00am, 2230 is 10:30pm</b>. If there is no physical location and the business hours are irrelevant, set the hours to open 24 hours by setting startTime=0 and endTime=2400. To set a whole day as unavailable, set both the startTime and endTime to 0. </p>\r\n<p>\r\n  <b>Settings</b> can be set here. Booking timer minutes, book ahead restrictions and customer bookings per day are all available here. Please read about the settings scope parameter before setting these values as it may simplify your process.</p>\r\n<p>\r\n  <b>Settings Scope</b> can be set to the company or the business location level. You can have all locations use the same company level settings or individual business locations can define their own, business location scope. If you want to use the company settings throughout all locations, do not pass in <b>settings element</b>. To create business location scoped settings, pass in the <b>settings element</b> with the field values defined in the post body. </p>\r\n<p>\r\n  <b>Appointment Reminders</b> Reminder values are used to define how many hours, days, or weeks (interval value) prior to the appointment to send the reminder. <b>Interval</b> values are used to define the reminder interval: <b>1 = Hours</b>, <b>2 = Days</b> and <b>3 = Weeks</b>. The reminder fields are numbers. If you are using the hours interval, use a number from 1 to 24.</p>\r\n<p>Example 1: <b>emailFirstReminder:  1, emailFirstReminderInterval:  2</b> - results in 1st reminder being sent <b>1 Day before</b> the appointment time.</p>\r\n <p>Example 2: <b>emailSecondReminder: 3, emailSecondReminderInterval: 1</b> - results in 2nd reminder being sent <b>3 Hours before</b> the appointment time.</p>\r\n<p>\r\n  <b>IMPORTANT DEPRECATION NOTICE</b>: The following online settings parameters were intended for internal use in our Portal application only. They will be deprecated on <b>OCTOBER 15, 2022</b>. These fields are currently part of the <b>SETTINGS</b> object in all location endpoints: <b>businessId, enabled, familyMembersEnabled, serviceLabel, resourceLabel, resourceAnyLabel, resourceSelection, liveMode, formFlow, availabilityForm, showServiceGroups, showOnSchedLogo, showBusinessLogo, disableAuthorization, hideNavBar, hideLocationNav, hideServiceGroupsNav, hideServicesNav, hideContinueBooking, returnToService, returnToAvailability, hideBreadCrumbNav.</b> If you are using these fields, please adjust your code to handle the deprecation or let us know by submitting a ticket to: <b><i>support@onsched.com</i></b> as we do not want to interrupt your existing workflows.</p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get Location",
        "description": "<p>Use this endpoint to return a <b>Location</b> object. A valid <b>location id</b> is required. If not specified, the business location defaults to the primary business location. Find all business location id's, by using the <i>GET /consumer/v1/locations</i> endpoint.</p>\r\n<p>\r\n  <b>IMPORTANT DEPRECATION NOTICE</b>: The following online settings parameters were intended for internal use in our Portal application only. They will be deprecated on <b>OCTOBER 15, 2022</b>. These fields are currently part of the <b>SETTINGS</b> object in all location endpoints: <b>businessId, enabled, familyMembersEnabled, serviceLabel, resourceLabel, resourceAnyLabel, resourceSelection, liveMode, formFlow, availabilityForm, showServiceGroups, showOnSchedLogo, showBusinessLogo, disableAuthorization, hideNavBar, hideLocationNav, hideServiceGroupsNav, hideServicesNav, hideContinueBooking, returnToService, returnToAvailability, hideBreadCrumbNav.</b> If you are using these fields, please adjust your code to handle the deprecation or let us know by submitting a ticket to: <b><i>support@onsched.com</i></b> as we do not want to interrupt your existing workflows.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Update Location",
        "description": "<p>Use this endpoint to <b>Update</b> a business location object. A valid business <b>location id</b> is required. The optional removeRegion query parameter can be used to remove the region relationship from the location.</p>\r \n<p>If the settings element is populated the scope will be set to the business location with the settings supplied. If your settings are uniform across all locations, then do not supply the settings element and the location will use the settings defined on the primary business location (company scoped). Company scoped settings cascade down to the locations. You can override any location that needs different settings by providing settings in the update model. Use the <i>PUT /setup/v1/locations/{id}/settings/scope/{settingsScope}</i> endpoint to change the settings scope only. This is typically used when switching from business location scope back to company.</p>\r\n<p>Refer to: <i><b>POST \u200b/setup\u200b/v1\u200b/locations</b></i> endpoint for details.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "removeRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete Location",
        "description": "<p>Use this endpoint to <b>Delete</b> a business location. A valid business <b>location id</b> is required. The location is not permanently deleted and can be recovered by using the <i>PUT /setup\u200b/v1\u200b/locations\u200b/{id}\u200b/recover</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/bulk": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Locations Bulk",
        "description": "<p>Use this endpoint to <b>Create Bulk</b> business locations. The posted list of locations cannot exceed 100 location objects per transaction for performance purposes. The result is a list of new business location objects with a GUID assigned to each location.</p>\r\n<p>The <b>name</b> and <b>timezoneName</b> fields are required. The <b>timezoneName</b> must be expressed as an IANA Timezone e.g., <i>America/New_York</i>. Refer to: <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Timezone Wiki</a> for a listing of IANA time zones.</p>\r\n<p>\r\n  <b>Business hours</b> are set by defining the <b>startTime</b> and <b>endTime</b> values for each day available/open. All days of the week must be provided when setting availability. Days are defined as <b>sun, mon, tue, wed, thu, fri and sat</b>. Start and End Times are entered in <b>military format. e.g., 800 is 8:00am, 2230 is 10:30pm</b>. If there is no physical location and the business hours are irrelevant, set the hours to open 24 hours by setting startTime=0 and endTime=2400. To set a whole day as unavailable, set both the startTime and endTime to 0. </p>\r\n<p>\r\n  <b>Settings</b> can be set here. Booking timer minutes, book ahead restrictions and customer bookings per day are all available here. Please read about the settings scope parameter before setting these values as it may simplify your process.</p>\r\n<p>\r\n  <b>Settings Scope</b> can be set to the company or the business location level. You can have all locations use the same company level settings or individual business locations can define their own, business location scope. If you want to use the company settings throughout all locations, do not pass in <b>settings element</b>. To create business location scoped settings, pass in the <b>settings element</b> with the field values defined in the post body. </p>\r\n<p>\r\n  <b>Appointment Reminders</b> Reminder values are used to define how many hours, days, or weeks (interval value) prior to the appointment to send the reminder. <b>Interval</b> values are used to define the reminder interval: <b>1 = Hours</b>, <b>2 = Days</b> and <b>3 = Weeks</b>. The reminder fields are numbers. If you are using the hours interval, use a number from 1 to 24.</p>\r\n<p>Example 1: <b>emailFirstReminder:  1, emailFirstReminderInterval:  2</b> - results in 1st reminder being sent <b>1 Day before</b> the appointment time.</p>\r\n <p>Example 2: <b>emailSecondReminder: 3, emailSecondReminderInterval: 1</b> - results in 2nd reminder being sent <b>3 Hours before</b> the appointment time.</p>\r\n<p>\r\n  <b>IMPORTANT DEPRECATION NOTICE</b>: The following online settings parameters were intended for internal use in our Portal application only. They will be deprecated on <b>OCTOBER 15, 2022</b>. These fields are currently part of the <b>SETTINGS</b> object in all location endpoints: <b>businessId, enabled, familyMembersEnabled, serviceLabel, resourceLabel, resourceAnyLabel, resourceSelection, liveMode, formFlow, availabilityForm, showServiceGroups, showOnSchedLogo, showBusinessLogo, disableAuthorization, hideNavBar, hideLocationNav, hideServiceGroupsNav, hideServicesNav, hideContinueBooking, returnToService, returnToAvailability, hideBreadCrumbNav.</b> If you are using these fields, please adjust your code to handle the deprecation or let us know by submitting a ticket to: <b><i>support@onsched.com</i></b> as we do not want to interrupt your existing workflows.</p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationsInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationsInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationsInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationsInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/settings/scope/{settingsScope}": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Update Location Scope",
        "description": "<p>Use this endpoint to <b>Update</b> a business locations online booking settings scope. A valid business <b>location id</b> is required.</p>\r\n<p>\r\n  <b>settingsScope</b> values are <b>0 = company scope, 1 = business location scope</b>. To inherit the online settings defined in the primary business location, then use value = 0 for company scope. Otherwise, to override the settings for a specific location then use value = 1 for business location scope. <b>Note</b>: You cannot change the settings scope of the Primary Business Location.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settingsScope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/holidays/{holidayId}/{closed}": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Update Location Holidays",
        "description": "<p>Use this endpoint to <b>Update</b> Business Holidays as Opened or Closed. A valid business <b>location id</b> is required. If not specified, the business location defaults to the primary business location.</p>\r\n<p>Holidays are automatically defined with the initial Post Location endpoint and are based on country code. Find your location holiday codes by using the: <i>GET /setup\u200b/v1\u200b/locations\u200b/{id}</i> endpoint. Change your holidays to open or closed by passing in the <b>holidayId</b> along with the <b>closed</b> boolean value to change the status of a specific holiday. Pass in an <b>asterisk *</b> for the holidayId then all business holidays will be set as defined.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holidayId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "closed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/recover": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Recover Location",
        "description": "<p>Use this endpoint to <b>Recover</b> a deleted business location. A valid business <b>location id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/services": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "List Location Linked Services",
        "description": "<p>Use this endpoint to return a list of <b>Location Linked Services</b>. A valid business <b>location id</b> is required. By default, there are no location linked services attached to a location. Refer to the: <i>POST /setup\u200b/v1\u200b/locations\u200b/{id}\u200b/services</i> for details. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "location service objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessServiceListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error"
          },
          "404": {
            "description": "Location was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Linked Service",
        "description": "<p>Use this endpoint to <b>Link Services</b> to a location object. A valid business <b>location id</b> is required. By default, there are <i>no services linked</i> to a location. </p>\r\n<p>Services are definable globally at the Company level and associated with the Primary Business Location, or at a Secondary Business Location. When accessing the Services endpoints, by default, API consumers are provided with a <b>combined</b> list of Services defined from both the Primary and Secondary Business Location.</p>\r\n<p>If necessary, the list of Service(s) provided can be cherry-picked/linked to <b>only include specific Service(s)</b> by using this endpoint. This allows for a subset of defined Services to be provided for a location.</p>\r\n<p>Supplying the list of services ids to cherry-pick/link to the location in the request body will explicitly define which Primary Location Services are offered by the specified business location.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "array of valid service object id's",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete Linked Services",
        "description": "<p>Use this endpoint to <b>Delete All</b> location linked services from a business location. A valid business <b>location id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/services/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get Linked Service",
        "description": "<p>Use this endpoint to <b>Get a Linked Service</b>. A valid <b>locationService id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of locationService object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "location service objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessServiceViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error."
          },
          "404": {
            "description": "Location was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Unlink Service",
        "description": "<p>Use this endpoint to <b>Unlink</b> a location service from a business location. A valid <b>locationService id</b> is required. Find location services by using the <i>GET \u200b/setup\u200b/v1\u200b/locations\u200b/{id}\u200b/services</i> endpoint. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of locationService object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/uploadimage": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Upload Location Image",
        "description": "<p>Use this endpoint to <b>Upload</b> an image to a location object. A valid business <b>location id</b> is required. You must convert the image to a <b>base64 encoded string</b> and pass that string as input along with your <b>filename</b>.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input model for image upload",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/deleteimage": {
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete Location Image",
        "description": "<p>Use this endpoint to <b>Delete</b> a previously uploaded location image. A valid business <b>location id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/deleteallimages": {
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete All Location Images",
        "description": "<p>Use this endpoint to <b>Delete All</b> location images from the location blob storage container. An option exists to use upper case for matching the subdirectory name. Legacy apps stored pics using upper case while the API uses lower case names.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uppercase",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/email/templates": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "List Email Templates",
        "description": "<p>Use this endpoint to return a <b>List of Email Templates</b> that are provided and may be customized. If the template has been customized, the customized property is true. The scope parameter indicates if the email template has been customized. This endpoint returns <b>only company level templates</b>, so the scope is always company.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Custom Template",
        "description": "<p>Use this endpoint to a <b>Create</b> a Custom Email Template. You must convert the content to a base64 encoded string. Updates to the primary business location create company scoped custom templates. Updates to non-primary business locations create business location scoped custom templates. The master template cannot be updated with this endpoint.</p>\r\n<p>The email template endpoints work a little differently than most. There are no endpoints to update the templates, we use the post endpoint to create a custom template instead. This endpoint creates a new email template that will be used instead. If you delete it, you are deleting the custom template you created and the original default template created by OnSched will be reactivated.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input model for email template",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/email/templates/{templateName}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get Email Template",
        "description": "<p>Use this endpoint to return the requested <b>Email Template</b>. The template is from the primary business location. If it wasn't customized the default template is returned. The response content is in html format. A valid <b>emailTemplate name</b> is required. Find template names by using the <i>GET \u200b/setup\u200b/v1\u200b/locations\u200b/{id}\u200b/email\u200b/templates</i> endpoint. Note: The master template cannot be accessed here. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "name of the email template",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete Custom Template",
        "description": "<p>Use this endpoint to <b>Delete</b> a Custom Email Template that was previously created. A valid business <b>location id</b> and email <b>templateName</b> are required. Deleting a custom email template will revert the template back to its default originally created by OnSched. Changes will be reflected in all business locations associated with this company.</p>\r \n<p>The email template endpoints work a little differently than most. When you delete you are deleting the custom template you created, and the original default Email Template created by OnSched will be reactivated.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "Name of the email template",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/email/templates/master": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get Master Template Settings",
        "description": "<p>Use this endpoint to get <b>Master Email Template Settings</b>. A valid business <b>location id</b> is required. Settings exist for showing or hiding panels and for changing color schemes. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEmailTemplateSettingsViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Master Template Settings",
        "description": "<p>Use this endpoint to <b>Create Custom Master Email Template Settings</b>. A valid business <b>location id</b> is required. Settings exist for showing or hiding email panels and for changing color schemes. Use the <i>GET \u200b/setup\u200b/v1\u200b/locations\u200b/{id}\u200b/email\u200b/templates\u200b/masterSettings</i> endpoint to display the settings offered. Changes to the Master Template Settings will be reflected in all business locations associated with this company. </p>\r\n<p>The email template endpoints work a little differently than most. There are no endpoints to update the templates, we use the post endpoint to create a custom template instead. This endpoint creates a new custom Master Template Settings file that will be used instead. If you delete it, you are deleting the custom template settings you created and the original default Master Template created by OnSched would be reactivated.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input model for master email template settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MasterTemplateSettingsInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEmailTemplateSettingsViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete Master Template Settings",
        "description": "<p>Use this endpoint to <b>Delete Custom Master Email Template Settings</b>. A valid business <b>location id</b> is required. Deleting a custom master email template will reactivate the original default OnSched template settings.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEmailTemplateSettingsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/locations/{id}/google/service/account": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Google Service Account Info",
        "description": "<p>Use this endpoint to get <b>Google Service Account</b> info and optionally, verify each Resource within the Google API using the Service Account. A valid business <b>location id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verify",
            "in": "query",
            "description": "When true, verifies each Resource in this location with Google Calendar Enabled using the Google API",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleServiceAccountViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Google Cal Access",
        "description": "<p>Use this endpoint to <b>Authorize Access</b> to google calendar users in your organization. You must create/have a Google Service account as an admin of your GSuite, then save the credentials as a Json Key file. This <b>Json Key</b> and a valid business <b>location id</b> are required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Generated Json Key file from Google",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountCreds"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountCreds"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountCreds"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountCreds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleServiceAccountCreds"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete Google Cal Access",
        "description": "<p>Use this endpoint to <b>Delete</b> authorized access to all google calendar users in your organization. Upon deletion Google Calendars will no longer be synced for resources.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/setup/v1/locations/{id}/appointmentreminders": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get Reminders",
        "description": "<p>Use this endpoint to <b>Get Email and SMS appointment reminder settings</b> for the requested location. A valid business <b>location id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentReminderViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Update Reminders",
        "description": "<p>Use this endpoint to <b>Update</b> Email and SMS appointment reminder settings for the requested location. A valid business <b>location id</b> is required. </p>\r\n<p>\r\n  <b>Appointment Reminders</b> Reminder values are used to define how many hours, days, or weeks (interval value) prior to the appointment to send the reminder. <b>Interval</b> values are used to define the reminder interval: <b>1 = Hours</b>, <b>2 = Days</b> and <b>3 = Weeks</b>. The reminder fields are numbers. If you are using the hours interval, use a number from 1 to 24.</p>\r\n<p>Example 1: <b>emailFirstReminder:  1, emailFirstReminderInterval:  2</b> - results in 1st reminder being sent <b>1 Day before</b> the appointment time.</p>\r\n<p>Example 2: <b>emailSecondReminder: 3, emailSecondReminderInterval: 1</b> - results in 2nd reminder being sent <b>3 Hours before</b> the appointment time.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of business location, defaults to primary business location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "input model for reminders",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentRemindersInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentRemindersInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentRemindersInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentRemindersInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resourcegroups": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "List Resource Groups",
        "description": "<p>Use this endpoint to <b>List Resource Groups</b> for the specified location. If not specified, the business location defaults to the primary business location. <b>Name</b> is a required field.</p>\r\n<p>Use the offset and limit parameters to control the page start and size. Default offset is 0, limit is 20, maximum is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Filter results by deleted status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "Create Resource Group",
        "description": "<p>Use this endpoint to <b>Create</b> a resourceGroup object. Resource groups are used to categorize your resources.</p>",
        "requestBody": {
          "description": "Resource input model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resourcegroups/{id}": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "Get Resource Group",
        "description": "<p>Use this endpoint to return a <b>Resource Group</b> object. A valid <b>resourceGroup id</b> is required. Find resourceGroup id's by using the <i>GET setup/v1/resourceGroups</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceGroup object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "Update Resource Group",
        "description": "<p>Use this endpoint to <b>Update</b> a resourceGroup object. A valid <b>resourceGroup id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourcGroup object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource Group Update Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroupUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "Delete Resource Group",
        "description": "<p>Use this endpoint to <b>Delete</b> a resourceGroup object. A valid <b>resourceGroup id</b> is required. The resource group is not permanently deleted and can be recovered by using the <i>PUT \u200b/setup\u200b/v1\u200b/resourcegroups\u200b/{id}\u200b/recover</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceGroup object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resourcegroups/{id}/recover": {
      "put": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "Recover Resource Group",
        "description": "<p>Use this endpoint to <b>Recover</b> a deleted resourceGroup object. A valid <b>resourceGroup id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceGroup object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "List Resources",
        "description": "<p>Use this endpoint to return a <b>List of Resources</b>. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceGroupId",
            "in": "query",
            "description": "Filter by group Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter by email address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Show by deleted status, default is false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max is 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resource object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "404": {
            "description": "Resource was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create Resource",
        "description": "<p>Use this endpoint to <b>Create</b> a new resource.</p>\r\n <p>Required Fields: <b>Email Address</b> and <b>Name</b></p>\r\n<p>Providing a single or many serviceId(s) in the service array will result the resource explicitly being available to provide those services only. While passing in an empty array will result in all services being available to the resources. This includes all company and business scoped services. See the <i>POST \u200b/setup\u200b/v1\u200b/resources\u200b/{id}\u200b/services</i> endpoint for details about explicitly linking services.</p>\r\n<p>Set the resource availability type by using the <b>recurringAvailability</b> flag. Set recurringAvailability to <b>True</b> for <b>Weekly Availability</b> or <b>False</b> for <b>Resource Allocations</b>.</p>",
        "parameters": [
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource input model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get Resource",
        "description": "<p>Use this endpoint to return a <b>Resource</b> object. A valid <b>resource id</b> is required. Find resource id's by using the: <i>GET /setup/v1/resources</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update Resource",
        "description": "<p>Use this endpoint to <b>Update</b> a resource. A valid <b>resource id</b> is required.</p>\r\n<p>Required Fields: <b>Email Address</b> and <b>Name</b></p>\r \n<p>Providing a single or many serviceId(s) in the service array will result the resource explicitly being available to provide those services only. While passing in an empty array will result in all services being available to the resources. This includes all company and business scoped services. See the <i>POST \u200b/setup\u200b/v1\u200b/resources\u200b/{id}\u200b/services</i> endpoint for details about explicitly linking services.</p>\r\n<p>Set the resource availability type by using the <b>recurringAvailability</b> flag. Set recurringAvailability to <b>True</b> for <b>Weekly Availability</b> or <b>False</b> for <b>Resource Allocations</b>.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource Update Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete Resource",
        "description": "<p>Use this endpoint to <b>Delete</b> a resource. The resource is not permanently deleted and can be recovered. A valid <b>resource id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/calendar/auth/google/{googleEmailAddress}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get Resource Google URL",
        "description": "<p>Use this endpoint to return the <b>Resources Google Calendar Authorization URL</b>. A valid <b>resource id</b> and <b>Google Email Address</b> are required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "googleEmailAddress",
            "in": "path",
            "description": "Email address of Google Calendar",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarAuthViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/calendar/auth/outlook/{outlookEmailAddress}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get Resource Outlook URL",
        "description": "<p>Use this endpoint to return the <b>Resources Outlook Calendar Authorization URL</b>. A valid <b>resource id</b> and <b>Outlook Email Address</b> are required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookEmailAddress",
            "in": "path",
            "description": "Email address of Outlook Calendar",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarAuthViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/timezones": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get Time Zones",
        "description": "<p>Use this endpoint to return a <b>List of Time Zones</b>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemTimezoneViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/bulk": {
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create Resources Bulk",
        "description": "<p>Use this endpoint to <b>Bulk Create</b> resources. Valid <b>resource ids</b> are required. The posted list of resources cannot exceed 100 resource objects per transaction for performance purposes.</p>\r\n<p>Required Fields: <b>Email Address</b> and <b>Name</b></p>\r\n<p>Providing a single or many serviceId(s) in the service array will result the resource explicitly being available to provide those services only. While passing in an empty array will result in all services being available to the resources. This includes all company and business scoped services. See the <i>POST \u200b/setup\u200b/v1\u200b/resources\u200b/{id}\u200b/services</i> endpoint for details about explicitly linking services.</p>\r\n<p>Set the resource availability type by using the <b>recurringAvailability</b> flag. Set recurringAvailability to <b>True</b> for <b>Weekly Availability</b> or <b>False</b> for <b>Resource Allocations</b>.</p>",
        "parameters": [
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resources input model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceViewModel"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update Resources Bulk",
        "description": "<p>Use this endpoint to <b>Bulk Update</b> resources. Valid <b>resource id's</b> are required. The list of resources cannot exceed 100 resource objects per transaction for performance purposes.</p>\r\n<p>Required Fields: <b>Email Address</b> and <b>Name</b></p>\r\n<p>Providing a single or many serviceId(s) in the service array will result the resource explicitly being available to provide those services only. While passing in an empty array will result in all services being available to the resources. This includes all company and business scoped services. See the <i>POST \u200b/setup\u200b/v1\u200b/resources\u200b/{id}\u200b/services</i> endpoint for details about explicitly linking services.</p>\r\n<p>Set the resource availability type by using the <b>recurringAvailability</b> flag. Set recurringAvailability to <b>True</b> for <b>Weekly Availability</b> or <b>False</b> for <b>Resource Allocations</b>.</p>",
        "parameters": [
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resources update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/reassign/appointments/{resourceId}": {
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Reassign Resource",
        "description": "<p>Use this endpoint to <b>Reassign</b> appointments from one resource to another. If the startDate is not supplied, the default is today's date + 1 day; If the endDate is not supplied, all future appointments from the start date will be reassigned. If the calendar id is not supplied the default is the primary calendar of the location.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the original resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "id of the target resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "YYYY-MM-DD, Appt range start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "YYYY-MM-DD, Appt range end date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "calendarId",
            "in": "query",
            "description": "CalendarId of calendar containing appointments",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/recover": {
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Recover Resource",
        "description": "<p>Use this endpoint to <b>Recover</b> a deleted resource. A valid <b>resource id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/availability": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "List Weekly Availability",
        "description": "<p>Use this endpoint to view the <b>Weekly Availability</b> for a resource. The displayed available times are represented in the resource's timezone. The resource timezone can be set to any world timezone. If not provided, by default it is set to the Business timezone.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAvailabilityViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update Weekly Availability",
        "description": "<p>Use this endpoint to <b>Update</b> resource weekly availability. A valid <b>resource id</b> is required. The availability day entries are created when a resource object is created.</p>\r\n<p>To update weekly availability hours, all days of the week must be provided. Days are defined as <b>sun, mon, tue, wed, thu, fri</b> and <b>sat</b>. The <b>startTime</b> and <b>endTime</b> fields are entered in <b>military format. e.g., 800 is 8:00am, 2230 is 10:30pm</b>. We support 24-hour availability, set startTime=0 and endTime=2400. To set a whole day as unavailable, set both the startTime and endTime to 0.</p>\r \n<p>If you require times in between specified hours to be unavailable, use the resource blocks endpoints. Times entered represent the timezone of the resource. Resources can be set to any world timezone. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource Availability Input Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAvailabilityViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/allocations": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "List Resource Allocations",
        "description": "<p>Use this endpoint to return a list of <b>Resource Allocations</b> for a specified resource. We recommend using allocations if a resource's schedule changes frequently from day to day or week to week. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource to list allocations for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "yyyy-mm-dd, filter allocations on/after startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "yyyy-mm-dd, filter on/before endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resource allocation objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAllocationListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error."
          },
          "404": {
            "description": "Resource was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create Allocation",
        "description": "<p>Use this endpoint to <b>Create</b> a resource allocation for a resource. A valid <b>resource id</b> is required.</p>\r\n<p>Required fields: <b>startDate, endDate, startTime, endTime</b> and <b>reason</b>. Resource allocations can be set to specific time ranges or for the whole day by setting startTime=0 and endTime=2400. They can repeat for a specific date range instance or set to repeat at a specified frequency.</p>\r\n<p>\r\n  <b>Repeat object: (repeats = true)</b>\r\n</p>\r\n<p>The <b>frequency</b> can be set to a value of <b>D, W or M </b>for <b>Day, Week</b> or <b>Month</b> respectively.</p>\r \n<p>Use the <b>interval</b> property to specify the interval that the allocation repeats. For example, an interval of 2 for a weekly allocation means that the allocation will repeat every 2nd week beginning at the day specified. A daily allocation with an interval of 10 means the allocation will repeat every 10 days. The interval property applies to all repeat frequencies.  <b>If using the repeat functionality an interval value is required</b>.</p>\r\n<p>\r\n  <b>DAILY ALLOCATIONS</b>: Will repeat for each day of the week for the date range specified for the interval specified.  An interval value of \u201c1\u201d repeats every day, and an interval value of \u201c3\u201d is every 3rd day.</p>\r\n<p>\r\n  <b>WEEKLY ALLOCATIONS</b>: Will repeat only on the specified days of the week for the date range specified. For weekly the <b>frequency</b> is required and should be set to <b>\u201cW\u201d</b>. You must specify the <b>\u201cweekdays\u201d</b> parameter. Weekdays are expressed as a string of digits with each single digit in the string representing a day of the week. The possible values are <b>0,1,2,3,4,5,6</b> where <b>0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday</b>.  For example, a weekly frequency with an interval of \u201c1\u201d, and an entry of weekdays = \u201c24\u201d, will repeat each week on Tuesday and Thursday for the duration of the allocation date range.</p>\r\n<p>\r\n  <b>MONTHLY ALLOCATIONS</b>: Will repeat either on the day of the month specified in the <b>monthDay</b> property or on the day of the week and week of the month specified by the <b>monthType</b> property.  In both cases <b>frequency</b> is required and should be set to <b>\u201cM\u201d</b>, monthly. <b>monthDay</b> is the day of the month you want allocated.  If monthDay=\u201915\u2019 this means to allocate the 15th of every month in the date range requested. Using monthDay in conjunction with monthType addresses \u201cday of the week and week of the month\u201d scenario.  There are two possible values for monthType: <b>D for Day of Month</b> or <b>W for Week of Month.</b> For <b>monthType D</b>, monthDay value must be between 1 and 31. It is the day of the month to repeat on.  For <b>monthType M</b>, monthDay value contains 2 digits:  day of week (0-6), (0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday) and week of month (1-5). 1 being the first week, 2 being the second. The third Thursday of the month is depicted as a monthType=\u201dM\u201d and monthDay=\u201d43\u201d.</p>\r\n<p>\r\n  <b>Repeats will end on the date specified by the end date.</b>\r\n</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/allocations/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get Allocation",
        "description": "<p>Use this endpoint to return a <b>Resource Allocation</b>. A valid <b>resourceAllocation id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceAllocation object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAllocationViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update Allocation",
        "description": "<p>Use this endpoint to <b>Update</b> a resource allocation. A valid <b>resourceAllocation id</b> is required. Refer to the <i>POST /setup/v1/resources/{id}/allocations</i> endpoint for details.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceAllocation object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource allocation update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAllocationUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete Allocation",
        "description": "<p>Use this endpoint to <b>Delete</b> a Resource Allocation. A valid <b>resourceAllocation id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceAllocation object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/blocks": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "List Resource Blocks",
        "description": "<p>Use this endpoint to return a list of <b>Resource Blocks</b>. A valid <b>resource id</b> is required. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource to list blocks for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "YYYY-MM-DD, filter blocks on/after startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "YYYY-MM-DD, filter on/before endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resource block object's",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error."
          },
          "404": {
            "description": "Resource was not found"
          }
        }
      }
    },
    "/setup/v1/resources/blocks/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get Block",
        "description": "<p>Use this endpoint to <b>Get</b> a Resource Block. A valid <b>resourceBlock id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/block": {
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create Block",
        "description": "<p>Use this endpoint to <b>Create</b> a Resource Block. A valid <b>resource id</b> is required.</p>\r\n<p>Required fields: <b>startDate, endDate, startTime, endTime</b> and <b>reason</b>.</p>\r\n<p>Resource blocks can be set to specific time ranges or for the whole day. Use the <b>AllDay</b> setting to create an all-day block. <b>AllDay</b> will automatically set startTime to 0 and endTime to 2400.</p>\r\n<p>Resource blocks can be for a specific date range instance or set to repeat at a specified frequency. </p>\r\n<p>\r\n  <b>Repeat object: (repeats = true)</b>\r\n</p>\r\n<p>The <b>frequency</b> can be set to a value of <b>D, W or M</b> for <b>Day, Week</b> or <b>Month</b> respectively.</p>\r\n<p>Use the <b>interval</b> property to specify the interval that the block repeats. For example, an interval of 2 for a weekly block means that the block will repeat every 2nd week beginning at the day specified. A daily block with an interval of 10 means the block will repeat every 10 days. The interval property applies to all repeat frequencies. <b>If using the repeat functionality an interval value is required</b>.</p>\r\n<p>\r\n  <b>DAILY BLOCKS</b>: Will repeat for each day of the week for the date range specified for the interval specified.  An interval value of \u201c1\u201d repeats every day, and an interval value of \u201c3\u201d is every 3rd day.</p>\r\n<p>\r\n  <b>WEEKLY BLOCKS</b>: Will repeat only on the specified days of the week for the date range specified. For weekly the <b>frequency</b> is required and should be set to <b>\u201cW\u201d</b>.  You must specify the <b>weekdays</b> parameter. Weekdays are expressed as a string of digits with each single digit in the string representing a day of the week. The possible values are <b>0,1,2,3,4,5,6</b> where <b>0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday</b>. For example, a weekly frequency with an interval of \u201c1\u201d, and an entry of weekdays = \u201c24\u201d, will repeat each week on Tuesday and Thursday for the duration of the block date range.</p>\r\n<p>\r\n  <b>MONTHLY BLOCKS</b>: Will repeat either on the day of the month specified in the <b>monthDay</b> property or on the day of the week and week of the month specified by the <b>monthType</b> property.  In both cases <b>frequency</b> is required and should be set to <b>\u201cM\u201d</b>, monthly, <b>monthDay</b> is the day of the month you want blocked.  If monthDay=\u201915\u2019 this means to block the 15th of every month in the date range requested. Using monthDay in conjunction with monthType addresses \u201cday of the week and week of the month\u201d scenario.  There are two possible values for monthType: <b>D for Day of Month</b> or <b>W for Week of Month.</b> For <b>monthType D</b>, monthDay value must be between 1 and 31. It is the day of the month to repeat on. For <b>monthType M</b>, monthDay value contains 2 digits: day of week (0-6), (0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday) and week of month (1-5). 1 being the first week, 2 being the second. The third Thursday of the month is depicted as a monthType=\u201dM\u201d and monthDay=\u201d43\u201d. </p>\r\n<p>\r\n  <b>Repeats will end on the date specified by the end date.</b>\r\n</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/block/{id}": {
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update Block",
        "description": "<p>Use this endpoint to <b>Update</b> a Resource Block. A valid <b>resourceBlock id</b> is required. Refer to the <i>POST \u200b/setup\u200b/v1\u200b/resources\u200b/{id}\u200b/block</i> endpoint for fieldnames and details.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource Block update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete Block",
        "description": "<p>Use this endpoint to <b>Delete</b> a Resource Block. A valid <b>resourceBlock id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resourceBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/services": {
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create Linked Services",
        "description": "<p>Use this endpoint to explicitly <b>Link Services</b> to a Resource. A valid <b>resource id</b> is required.</p>\r\n<p>\r\n  <b>Note:</b> By default, the services array is empty which signifies that all services are provided by the resource. Linking services here will add to the linked service(s) array available to this resource. This will limit the services available to the resource.</p>\r\n<p>You cannot post services that already exist in the array, you can only add new ones. Use the <i>PUT \u200b/setup\u200b/v1\u200b/resources\u200b/{id}\u200b/services</i> endpoint to update the entire list.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Array of valid service object id's",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update Linked Services",
        "description": "<p>Use this endpoint to <b>Update</b> the linked services of a Resource. A valid <b>resource id</b> is required.</p>\r\n<p>Updating services with this endpoint will update the linked services available to the resource. Only those services will be available to the resource.</p>\r\n<p>\r\n  <b>Note:</b> This is a destructive process, any existing linked services will be removed and replaced with the list of services supplied here. Provide the resources complete list of services when using this endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Array of valid service object id's",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete Linked Services",
        "description": "<p>Use this endpoint to <b>Delete</b> linked services from a Resource, i.e. unlink the services. A valid <b>resource id</b> is required. Once deleted, all services become available to the resource.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/uploadimage": {
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Upload Resource Image",
        "description": "<p>Use this endpoint to <b>Upload</b> a resource image to the resource. A valid <b>resource id</b> is required. You must convert the image to a <b>base64 encoded string</b> and pass that string as input along with your <b>filename</b>.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input model for image upload",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceImageInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/resources/{id}/deleteimage": {
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete Resource Image",
        "description": "<p>Use this endpoint to permanently <b>Delete</b> a previously uploaded resource image. A valid <b>resource id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of resource object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/servicegroups": {
      "get": {
        "tags": [
          "ServiceGroups"
        ],
        "summary": "List Service Groups",
        "description": "<p>Use this endpoint to return a list of <b>Service Groups</b> for the requested location. If no business location is specified it will default to the Primary Business Location of the company. Use the offset and limit parameters to control the page start and size. Default offset is 0, limit is 20, maximum is 100. Use the other query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceGroups"
        ],
        "summary": "Create Service Group",
        "description": "<p>Use this endpoint to <b>Create</b> a Service Group. If no locationId is specified in the body, the business location will default to the primary business location. Service groups are used to categorize services. Service groups are optional and only make sense if you have multiple services that will be easier read if categorized. Only the service group Type of 0 is supported by the API. It defaults to 0 if not supplied.</p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/servicegroups/{id}": {
      "get": {
        "tags": [
          "ServiceGroups"
        ],
        "summary": "Get Service Group",
        "description": "<p>Use this endpoint to return a <b>Service Group</b> object. A valid <b>serviceGroup id</b> is required. Find service group id's by using the <i>GET /setup/v1/serviceGroups</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceGroup object",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceGroups"
        ],
        "summary": "Update Service Group",
        "description": "<p>Use this endpoint to <b>Update</b> a Service Group object. A valid <b>serviceGroup id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceGroup object",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGroupInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceGroups"
        ],
        "summary": "Delete Service Group",
        "description": "<p>Use this endpoint to <b>Delete</b> a Service Group object. A valid <b>serviceGroup id</b> is required. The service group is not permanently deleted and can be recovered by using the <i>PUT \u200b/setup\u200b/v1\u200b/servicegroups\u200b/{id}\u200b/recover</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceGroup object",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/servicegroups/{id}/recover": {
      "put": {
        "tags": [
          "ServiceGroups"
        ],
        "summary": "Recover Service Group",
        "description": "<p>Use this endpoint to <b>Recover</b> a deleted Service Group. A valid <b>serviceGroup id</b> is required. </p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceGroup object",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "List Services",
        "description": "<p>Use this endpoint to return a <b>List of Service</b>. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceGroupId",
            "in": "query",
            "description": "Filter services by groupId",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Filter by deleted status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create Service",
        "description": "<p>Use this endpoint to <b>Create</b> a new service. If not specified, the business location defaults to the primary business location. Note: Posting a service to the Primary Business Location will scope as company scoped and make the service available to all locations. If you want a service to only be available from a specific location, include the business location id.</p>\r \n<p>Required fields: <b>Name</b> and <b>Duration</b></p>\r\n<p>The service <b>Type</b> is either, <b>1 = Appointment</b> or <b>2 = Event</b>. Default is 1 if not specified.</p>\r\n<p>For type = 1, Appointments - Create an availability entry for each weekday to provide the service for. <b>All days of the week must be provided when adding service availability.</b> Days are defined as <b>sun, mon, tue, wed, thu, fri</b> and <b>sat</b>. Start and End Times are entered in military format. e.g., 800 is 8:00am, 2230 is 10:30pm. If not provided, it defaults to the primary location business hours.</p>\r\n<p>We support 24-hour availability, set startTime=0 and endTime=2400. To set a whole day as unavailable, set both the startTime and endTime to 0. If you require times in between specified hours to be unavailable, use the service block endpoint at: <i>POST \u200b/setup\u200b/v1\u200b/services\u200b/{id}\u200b/block</i>.</p>\r \n<p>For type = 2, Events - Create service allocations for their availability. Refer to the: <i>POST /setup\u200b/v1\u200b/services\u200b/{id}\u200b/allocations</i> to set up service allocations for the event.</p>\r\n<p>Options are available for customer selected durations, for details: <a href=\"https://docs.onsched.com/docs/services-overview#variable-duration\">Variable Duration Overview</a></p>\r\n<p>Additional parameters include but are not limited to bookingLimit, maxCapacity and maxGroupSize. For details: <a href=\"https://docs.onsched.com/docs/service-max-capacity\">Service Limits Overview</a></p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get Service",
        "description": "<p>Use this endpoint to return a <b>Service</b> object. A valid <b>service id</b> is required. Find service id's by using the <i>GET /setup/v1/services</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update Service",
        "description": "<p>Use this endpoint to <b>Update</b> a service object. A valid <b>service id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete Service",
        "description": "<p>Use this endpoint to <b>Delete</b> a service object. A valid <b>service id</b> is required. The service is not permanently deleted and can be recovered by using the <i>PUT /setup\u200b/v1\u200b/services\u200b/{id}\u200b/recover</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/resources": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "List Resources for Service",
        "description": "<p>Use this endpoint to return a list of <b>Resources</b> that provide the requested service. A valid <b>service id</b> is required. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "googleAuthReturnUrl",
            "in": "query",
            "description": "Google calendar authorization return url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlookAuthReturnUrl",
            "in": "query",
            "description": "Outlook calendar authorization return url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/recover": {
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Recover Service",
        "description": "<p>Use this endpoint to <b>Recover</b> a deleted service object. A valid <b>service id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/blocks": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "List Service Blocks",
        "description": "<p>Use this endpoint to return a list of <b>Service Blocks</b>. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service to list blocks for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Format YYYY-MM-DD. Filter blocks on/after startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Format YYYY-MM-DD. Filter on/before endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "service block object's",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceBlockListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error."
          },
          "404": {
            "description": "Service was not found"
          }
        }
      }
    },
    "/setup/v1/services/blocks/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get Block",
        "description": "<p>Use this endpoint to <b>Get a Service Block</b>. A valid <b>serviceBlock id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/block": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create Block",
        "description": "<p>Use this endpoint to <b>Create</b> a Service Block. A valid <b>service id</b> is required.</p>\r\n<p>Required fields: <b>startDate, endDate, startTime, endTime</b> and <b>reason</b>.</p>\r\n<p>Service blocks can be set to specific time ranges or for the whole day. To block a whole day set startTime to 0 and endTime to 2400.</p>\r\n<p>Service blocks can be for a specific date range instance or set to repeat at a specified frequency. </p>\r\n<p>\r\n  <b>Repeat object: (repeats = true)</b>\r\n</p>\r\n<p>The <b>frequency</b> can be set to a value of <b>D, W or M</b> for <b>Day, Week</b> or <b>Month</b> respectively.</p>\r\n<p>Use the <b>interval</b> property to specify the interval that the block repeats. For example, an interval of 2 for a weekly block means that the block will repeat every 2nd week beginning at the day specified. A daily block with an interval of 10 means the block will repeat every 10 days. The interval property applies to all repeat frequencies. <b>If using the repeat functionality an interval value is required</b>.</p>\r\n<p>\r\n  <b>DAILY BLOCKS</b>: Will repeat for each day of the week for the date range specified for the interval specified.  An interval value of \u201c1\u201d repeats every day, and an interval value of \u201c3\u201d is every 3rd day.</p>\r\n<p>\r\n  <b>WEEKLY BLOCKS</b>: Will repeat only on the specified days of the week for the date range specified. For weekly the <b>frequency</b> is required and should be set to <b>\u201cW\u201d</b>.  You must specify the <b>weekdays</b> parameter. Weekdays are expressed as a string of digits with each single digit in the string representing a day of the week. The possible values are <b>0,1,2,3,4,5,6</b> where <b>0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday</b>. For example, a weekly frequency with an interval of \u201c1\u201d, and an entry of weekdays = \u201c24\u201d, will repeat each week on Tuesday and Thursday for the duration of the block date range.</p>\r\n<p>\r\n  <b>MONTHLY BLOCKS</b>: Will repeat either on the day of the month specified in the <b>monthDay</b> property or on the day of the week and week of the month specified by the <b>monthType</b> property.  In both cases <b>frequency</b> is required and should be set to <b>\u201cM\u201d</b>, monthly, <b>monthDay</b> is the day of the month you want blocked.  If monthDay=\u201915\u2019 this means to block the 15th of every month in the date range requested. Using monthDay in conjunction with monthType addresses \u201cday of the week and week of the month\u201d scenario.  There are two possible values for monthType: <b>D for Day of Month</b> or <b>W for Week of Month.</b> For <b>monthType D</b>, monthDay value must be between 1 and 31. It is the day of the month to repeat on. For <b>monthType M</b>, monthDay value contains 2 digits: day of week (0-6), (0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday) and week of month (1-5). 1 being the first week, 2 being the second. The third Thursday of the month is depicted as a monthType=\u201dM\u201d and monthDay=\u201d43\u201d.</p>\r\n<p>\r\n  <b>Repeats will end on the date specified by the end date.</b>\r\n</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/block/{id}": {
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update Block",
        "description": "<p>Use this endpoint to <b>Update</b> a Service Block. A valid <b>serviceBlock id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Service Block update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBlockUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceBlockViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete Block",
        "description": "<p>Use this endpoint to permanently <b>Delete</b> a Service Block. A valid <b>serviceBlock id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceBlock object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/calendar": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get Linked Calendar",
        "description": "<p>Use this endpoint to <b>Get the Linked Calendar</b> for the service requested. A valid <b>service id</b> is required. A service can only be linked to one calendar in a location.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "description": "id of business location, defaults to primary business location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceCalendarViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/calendar": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Link Service to Calendar",
        "description": "<p>Use this endpoint to <b>Link a Service</b> to a calendar. </p>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCalendarInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCalendarInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCalendarInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCalendarInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceCalendarViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/calendar/{id}": {
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete Service Links",
        "description": "<p>Use this endpoint to <b>Delete</b> service links from the calendar specified. A valid <b>calendar id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of calender to delete service links from",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceCalendarViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/availability": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get Weekly Availability",
        "description": "<p>Use this endpoint to return the <b>Weekly Service Availability</b> for an appointment service. A valid <b>service id</b> is required. Weekly availability is returned for services where the Type = 1. For event type services, where service Type = 2, refer to the <i>GET \u200b/setup\u200b/v1\u200b/services\u200b/{id}\u200b/allocations</i> endpoint.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAvailabilityViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update Weekly Availability",
        "description": "<p>Use this endpoint to <b>Update</b> service weekly availability. A valid <b>service id</b> is required. The availability day entries are created when a service object is created.</p>\r\n<p>To update weekly availability hours, all days of the week must be provided. Days are defined as <b>sun, mon, tue, wed, thu, fri</b> and <b>sat</b>. The <b>startTime</b> and <b>endTime</b> fields are entered in <b>military format. e.g., 800 is 8:00am, 2230 is 10:30pm</b>. We support 24-hour availability, set startTime=0 and endTime=2400. To set a whole day as unavailable, set both the startTime and endTime to 0.</p>\r \n<p>If you require times in between specified hours to be unavailable, use the resource blocks endpoints. Times entered represent the timezone of the business location.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Service Availability Input Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAvailabilityViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/allocations": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "List Service Allocations",
        "description": "<p>Use this endpoint to return a <b>List of Service Allocations</b> for a specified service. A valid <b>service id</b> is required. Service allocations are used for <b>Event type services only</b> where the events are offered on specific dates and times. Retrieve all allocations for a location by passing in 0 as the service id.</p>\r\n<p>The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of  service to list allocations for, 0 for all",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "description": "The id of the location. Defaults to the primary location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "The id of the resource to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Format YYYY-MM-DD. Filter appointments by on/after startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Format YYYY-MM-DD. Filter appointments on/before endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting row of page, default 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit default 20, max 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "service alloaction object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAllocationListViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid values in the request"
          },
          "401": {
            "description": "Authorization error."
          },
          "404": {
            "description": "Service was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create Allocation",
        "description": "<p>Use this endpoint to <b>Create</b> a service allocation for a service. A valid <b>service id</b> is required. Service allocations are used for <b>Event type services only</b>. Service allocations allow you to specify the time(s) a service is available as opposed to using weekly availability which represents a weekly schedule, ie: Mon-Fri 9am-5pm.</p>\r\n<p>Required fields: <b>startDate, endDate, startTime, endTime</b> and <b>reason</b>. Service allocations can be set to specific time ranges or for the whole day by setting startTime=0 and endTime=2400. Service allocations can repeat for a specific date range instance or set to repeat at a specified frequency.</p>\r\n<p>\r\n  <b>Repeat object: (repeats = true)</b>\r\n</p>\r\n<p>The <b>frequency</b> can be set to a value of <b>D, W or M</b> for <b>Day, Week</b> or <b>Month</b> respectively.</p>\r\n<p>Use the <b>interval</b> property to specify the interval that the allocation repeats. For example, an interval of 2 for a weekly allocation means that the allocation will repeat every 2nd week beginning at the day specified. A daily allocation with an interval of 10 means the allocation will repeat every 10 days. The interval property applies to all repeat frequencies.  <b>If using the repeat functionality an interval value is required</b>.</p>\r\n<p>\r\n  <b>DAILY ALLOCATIONS</b>: Will repeat for each day of the week for the date range specified for the interval specified.  An interval value of \u201c1\u201d repeats every day, and an interval value of \u201c3\u201d is every 3rd day.</p>\r\n<p>\r\n  <b>WEEKLY ALLOCATIONS</b>: Will repeat only on the specified days of the week for the date range specified. For weekly the <b>frequency</b> is required and should be set to <b>\u201cW\u201d</b>. You must specify the <b>\u201cweekdays\u201d</b> parameter. Weekdays are expressed as a string of digits with each single digit in the string representing a day of the week. The possible values are <b>0,1,2,3,4,5,6</b> where <b>0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday</b>.  For example, a weekly frequency with an interval of \u201c1\u201d, and an entry of weekdays = \u201c24\u201d, will repeat each week on Tuesday and Thursday for the duration of the allocation date range.</p>\r\n<p>\r\n  <b>MONTHLY ALLOCATIONS</b>: Will repeat either on the day of the month specified in the <b>monthDay</b> property or on the day of the week and week of the month specified by the <b>monthType</b> property.  In both cases <b>frequency</b> is required and should be set to <b>\u201cM\u201d</b>, monthly. <b>monthDay</b> is the day of the month you want allocated.  If monthDay=\u201915\u2019 this means to allocate the 15th of every month in the date range requested. Using monthDay in conjunction with monthType addresses \u201cday of the week and week of the month\u201d scenario.  There are two possible values for monthType: <b>D for Day of Month</b> or <b>W for Week of Month.</b> For <b>monthType D</b>, monthDay value must be between 1 and 31. It is the day of the month to repeat on.  For <b>monthType M</b>, monthDay value contains 2 digits:  day of week (0-6), (0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday) and week of month (1-5). 1 being the first week, 2 being the second. The third Thursday of the month is depicted as a monthType=\u201dM\u201d and monthDay=\u201d43\u201d.</p>\r\n<p>\r\n  <b>Repeats will end on the date specified by the end date.</b>\r\n</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAllocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/allocations/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get Allocation",
        "description": "<p>Use this endpoint to <b>Get a Service Allocation</b>. A valid <b>serviceAllocation id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceAllocation object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAllocationViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update Allocation",
        "description": "<p>Use this endpoint to <b>Update</b> a service allocation. A valid <b>serviceAllocation id</b> is required. Refer to the <i>POST /setup/v1/services/{id}/allocations</i> endpoint for fields names and details.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceAllocation object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Service allocation update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAllocationViewModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete Allocation",
        "description": "<p>Use this endpoint to permanently <b>Delete</b> a service allocation. A valid <b>serviceAllocation id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of serviceAllocation object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAllocationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/allocations/bulk": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create Allocations Bulk",
        "description": "<p>Use this endpoint to <b>Create</b> bulk service allocations. A valid <b>service id</b> is required. Use this endpoint only if you need to POST multiple service allocations in one transaction. For details refer to: <a href=\"POST \u200b/setup\u200b/v1\u200b/services\u200b/{id}\u200b/allocations\">Post Service Allocation</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationsInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationsInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationsInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAllocationsInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceAllocationViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/uploadimage": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Upload Service Image",
        "description": "<p>Use this endpoint to <b>Upload</b> an image to the service. A valid <b>service id</b> is required. You must convert the image to a <b>base64 encoded string</b> and pass that string as input along with your <b>filename</b>.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input model for image upload",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceImageInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceImageInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceImageInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceImageInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/setup/v1/services/{id}/deleteimage": {
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete Service Image",
        "description": "<p>Use this endpoint to permanently <b>Delete</b> a previously uploaded service image. A valid <b>service id</b> is required.</p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceViewModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressInputModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressUpdateModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressViewModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentAuditViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "appointmentId": {
            "type": "string",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modificationType": {
            "type": "string",
            "nullable": true
          },
          "statusBefore": {
            "type": "string",
            "nullable": true
          },
          "statusAfter": {
            "type": "string",
            "nullable": true
          },
          "notesBefore": {
            "type": "string",
            "nullable": true
          },
          "notesAfter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentCustomerViewModel": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentRemindersInputModel": {
        "type": "object",
        "properties": {
          "emailFirstReminder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "emailFirstReminderInterval": {
            "type": "integer",
            "format": "int32"
          },
          "emailSecondReminder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "emailSecondReminderInterval": {
            "type": "integer",
            "format": "int32"
          },
          "smsFirstReminder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "smsFirstReminderInterval": {
            "type": "integer",
            "format": "int32"
          },
          "smsSecondReminder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "smsSecondReminderInterval": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppointmentReminderViewModel": {
        "type": "object",
        "properties": {
          "emailFirstReminder": {
            "type": "integer",
            "format": "int32"
          },
          "emailFirstReminderInterval": {
            "type": "integer",
            "format": "int32"
          },
          "emailSecondReminder": {
            "type": "integer",
            "format": "int32"
          },
          "emailSecondReminderInterval": {
            "type": "integer",
            "format": "int32"
          },
          "smsFirstReminder": {
            "type": "integer",
            "format": "int32"
          },
          "smsFirstReminderInterval": {
            "type": "integer",
            "format": "int32"
          },
          "smsSecondReminder": {
            "type": "integer",
            "format": "int32"
          },
          "smsSecondReminderInterval": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppointmentResourceViewModel": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "resourceName": {
            "type": "string",
            "nullable": true
          },
          "resourceGroupId": {
            "type": "string",
            "nullable": true
          },
          "resourceEmail": {
            "type": "string",
            "nullable": true
          },
          "resourceImageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "calendarId": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "serviceImageUrl": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "resourceName": {
            "type": "string",
            "nullable": true
          },
          "resourceGroupId": {
            "type": "string",
            "nullable": true
          },
          "resourceGroupName": {
            "type": "string",
            "nullable": true
          },
          "resourceImageUrl": {
            "type": "string",
            "nullable": true
          },
          "resourceEmail": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "serviceAllocationId": {
            "type": "string",
            "nullable": true
          },
          "rescheduledId": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "nullable": true
          },
          "endDateTime": {
            "type": "string",
            "nullable": true
          },
          "dateInternational": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "timezone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "timezoneIana": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "confirmationNumber": {
            "type": "string",
            "nullable": true
          },
          "downloadIcsUrl": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "onlineBooking": {
            "type": "boolean",
            "nullable": true
          },
          "confirmed": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneType": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "customerMessage": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "groupSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifiedOn": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmationSent": {
            "type": "string",
            "nullable": true
          },
          "emailReminderSent": {
            "type": "string",
            "nullable": true
          },
          "smsConfirmationSent": {
            "type": "string",
            "nullable": true
          },
          "smsReminderSent": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "stripeChargeId": {
            "type": "string",
            "nullable": true
          },
          "stripeRefundId": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "type": "integer",
            "format": "int32"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentResourceViewModel"
            },
            "nullable": true
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentCustomerViewModel"
            },
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomFieldViewModel"
            },
            "nullable": true
          },
          "auditTrail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentAuditViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthorizedCompanyListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizedCompanyViewModel"
            },
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthorizedCompanyViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AvailabilityInputModel": {
        "type": "object",
        "properties": {
          "sun": {
            "$ref": "#/components/schemas/WeekDayInputModel"
          },
          "mon": {
            "$ref": "#/components/schemas/WeekDayInputModel"
          },
          "tue": {
            "$ref": "#/components/schemas/WeekDayInputModel"
          },
          "wed": {
            "$ref": "#/components/schemas/WeekDayInputModel"
          },
          "thu": {
            "$ref": "#/components/schemas/WeekDayInputModel"
          },
          "fri": {
            "$ref": "#/components/schemas/WeekDayInputModel"
          },
          "sat": {
            "$ref": "#/components/schemas/WeekDayInputModel"
          }
        },
        "additionalProperties": false
      },
      "AvailabilityViewModel2": {
        "type": "object",
        "properties": {
          "sun": {
            "$ref": "#/components/schemas/WeekDayViewModel2"
          },
          "mon": {
            "$ref": "#/components/schemas/WeekDayViewModel2"
          },
          "tue": {
            "$ref": "#/components/schemas/WeekDayViewModel2"
          },
          "wed": {
            "$ref": "#/components/schemas/WeekDayViewModel2"
          },
          "thu": {
            "$ref": "#/components/schemas/WeekDayViewModel2"
          },
          "fri": {
            "$ref": "#/components/schemas/WeekDayViewModel2"
          },
          "sat": {
            "$ref": "#/components/schemas/WeekDayViewModel2"
          }
        },
        "additionalProperties": false
      },
      "BusinessDefaultsInputModel": {
        "type": "object",
        "properties": {
          "enableUtcTimezone": {
            "type": "boolean",
            "nullable": true
          },
          "customerState": {
            "type": "boolean",
            "nullable": true
          },
          "customerCity": {
            "type": "boolean",
            "nullable": true
          },
          "autoUpdateCustomer": {
            "type": "boolean",
            "nullable": true
          },
          "businessNotification": {
            "type": "boolean",
            "nullable": true
          },
          "emailInfo": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessDefaultsUpdateModel": {
        "type": "object",
        "properties": {
          "enableUtcTimezone": {
            "type": "boolean",
            "nullable": true
          },
          "customerState": {
            "type": "boolean",
            "nullable": true
          },
          "customerCity": {
            "type": "boolean",
            "nullable": true
          },
          "autoUpdateCustomer": {
            "type": "boolean",
            "nullable": true
          },
          "businessNotification": {
            "type": "boolean",
            "nullable": true
          },
          "emailInfo": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessDefaultsViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "enableUtcTimezone": {
            "type": "boolean",
            "nullable": true
          },
          "customerState": {
            "type": "boolean",
            "nullable": true
          },
          "customerCity": {
            "type": "boolean",
            "nullable": true
          },
          "autoUpdateCustomer": {
            "type": "boolean",
            "nullable": true
          },
          "businessNotification": {
            "type": "boolean",
            "nullable": true
          },
          "emailInfo": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessHolidayViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "holidayName": {
            "type": "string",
            "nullable": true
          },
          "businessClosed": {
            "type": "boolean"
          },
          "publicHolidayId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BusinessHourInputModel": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "description": "startTime is entered in military format. e.g. 0 = midnight start, 900 = 9am start",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "description": "endTime is entered in military format. e.g. 1800 = 6pm end, 2400 = midnight end of day.\r\nFor 24 hours enter startTime = 0 and endTime = 2400",
            "format": "int32"
          },
          "isOpen": {
            "type": "boolean",
            "description": "If false, then not available entire day, starTime and endTime must both be zero. If true, then available between startTime and endTime."
          },
          "is24Hours": {
            "type": "boolean",
            "description": "If true then available for 24 hours. startTime must be zero and endTime must be 2400."
          }
        },
        "additionalProperties": false
      },
      "BusinessHoursInputModel": {
        "type": "object",
        "properties": {
          "mon": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "tue": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "wed": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "thu": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "fri": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "sat": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "sun": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          }
        },
        "additionalProperties": false
      },
      "BusinessHoursUpdateModel": {
        "type": "object",
        "properties": {
          "mon": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "tue": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "wed": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "thu": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "fri": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "sat": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          },
          "sun": {
            "$ref": "#/components/schemas/BusinessHourInputModel"
          }
        },
        "additionalProperties": false
      },
      "BusinessHoursViewModel": {
        "type": "object",
        "properties": {
          "mon": {
            "$ref": "#/components/schemas/BusinessHourViewModel"
          },
          "tue": {
            "$ref": "#/components/schemas/BusinessHourViewModel"
          },
          "wed": {
            "$ref": "#/components/schemas/BusinessHourViewModel"
          },
          "thu": {
            "$ref": "#/components/schemas/BusinessHourViewModel"
          },
          "fri": {
            "$ref": "#/components/schemas/BusinessHourViewModel"
          },
          "sat": {
            "$ref": "#/components/schemas/BusinessHourViewModel"
          },
          "sun": {
            "$ref": "#/components/schemas/BusinessHourViewModel"
          }
        },
        "additionalProperties": false
      },
      "BusinessHourViewModel": {
        "type": "object",
        "properties": {
          "isOpen": {
            "type": "boolean"
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "is24Hours": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BusinessPermissionListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessPermissionViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessPermissionViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "function": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessServiceListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessServiceViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessServiceViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessUserInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "sendRegistrationInvite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BusinessUserListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessUserViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessUserPermissionViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "function": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessUserUpdateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "sendRegistrationInvite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BusinessUserViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "identityAccount": {
            "type": "boolean"
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "resourceName": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessUserPermissionViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarAuthViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "calendarId": {
            "type": "string",
            "nullable": true
          },
          "calendarAuthUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarBlockInputModel": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "CalendarBlockListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarBlockViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarBlockUpdateModel": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "CalendarBlockViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "calendarId": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean"
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatViewModel"
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarHoursViewModel": {
        "type": "object",
        "properties": {
          "mon": {
            "$ref": "#/components/schemas/CalendarHourViewModel"
          },
          "tue": {
            "$ref": "#/components/schemas/CalendarHourViewModel"
          },
          "wed": {
            "$ref": "#/components/schemas/CalendarHourViewModel"
          },
          "thu": {
            "$ref": "#/components/schemas/CalendarHourViewModel"
          },
          "fri": {
            "$ref": "#/components/schemas/CalendarHourViewModel"
          },
          "sat": {
            "$ref": "#/components/schemas/CalendarHourViewModel"
          },
          "sun": {
            "$ref": "#/components/schemas/CalendarHourViewModel"
          }
        },
        "additionalProperties": false
      },
      "CalendarHourViewModel": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CompanyDomainInputModel": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDomainListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyDomainViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDomainUpdateModel": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDomainViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyInputModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "registrationEmail": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "timezoneName": {
            "type": "string",
            "nullable": true
          },
          "notificationFromEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "notificationFromName": {
            "type": "string",
            "nullable": true
          },
          "bookingWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "customerWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "reminderWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "resourceWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "webhookSignatureHash": {
            "type": "string",
            "nullable": true
          },
          "disableEmailAndSmsNotifications": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUpdateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "registrationEmail": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "timezoneName": {
            "type": "string",
            "nullable": true
          },
          "notificationFromEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "notificationFromName": {
            "type": "string",
            "nullable": true
          },
          "bookingWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "customerWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "reminderWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "resourceWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "webhookSignatureHash": {
            "type": "string",
            "nullable": true
          },
          "disableEmailAndSmsNotifications": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "nullable": true
          },
          "registrationEmail": {
            "type": "string",
            "nullable": true
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "timezoneName": {
            "type": "string",
            "nullable": true
          },
          "notificationFromEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "notificationFromName": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "bookingWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "customerWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "reminderWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "resourceWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "webhookSignatureHash": {
            "type": "string",
            "nullable": true
          },
          "disableEmailAndSmsNotifications": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ContactInputModel": {
        "type": "object",
        "properties": {
          "preferredPhoneType": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhoneExt": {
            "type": "string",
            "nullable": true
          },
          "skypeUsername": {
            "type": "string",
            "nullable": true
          },
          "conferenceInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactUpdateModel": {
        "type": "object",
        "properties": {
          "preferredPhoneType": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhoneExt": {
            "type": "string",
            "nullable": true
          },
          "skypeUsername": {
            "type": "string",
            "nullable": true
          },
          "conferenceInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactViewModel": {
        "type": "object",
        "properties": {
          "phoneType": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhoneExt": {
            "type": "string",
            "nullable": true
          },
          "skypeUsername": {
            "type": "string",
            "nullable": true
          },
          "conferenceInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContentResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerPrivacyViewModel": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/CustomerViewModel"
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "nullable": true
          },
          "lastVisitDate": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "registeredBy": {
            "type": "string",
            "nullable": true
          },
          "verifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "nullable": true
          },
          "verificationDate": {
            "type": "string",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "nullable": true
          },
          "emailInfo": {
            "type": "boolean",
            "nullable": true
          },
          "emailPromotion": {
            "type": "boolean",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "nullable": true
          },
          "inviteEmailSent": {
            "type": "string",
            "nullable": true
          },
          "welcomeEmailSent": {
            "type": "string",
            "nullable": true
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "nullable": true
          },
          "notificationType": {
            "type": "string",
            "nullable": true
          },
          "subscriptionId": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "stripeCustomerId": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "$ref": "#/components/schemas/ContactViewModel"
          },
          "address": {
            "$ref": "#/components/schemas/AddressViewModel"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomFieldViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldInputModel": {
        "type": "object",
        "properties": {
          "field1": {
            "type": "string",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "nullable": true
          },
          "field5": {
            "type": "string",
            "nullable": true
          },
          "field6": {
            "type": "string",
            "nullable": true
          },
          "field7": {
            "type": "string",
            "nullable": true
          },
          "field8": {
            "type": "string",
            "nullable": true
          },
          "field9": {
            "type": "string",
            "nullable": true
          },
          "field10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldUpdateModel": {
        "type": "object",
        "properties": {
          "field1": {
            "type": "string",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "nullable": true
          },
          "field5": {
            "type": "string",
            "nullable": true
          },
          "field6": {
            "type": "string",
            "nullable": true
          },
          "field7": {
            "type": "string",
            "nullable": true
          },
          "field8": {
            "type": "string",
            "nullable": true
          },
          "field9": {
            "type": "string",
            "nullable": true
          },
          "field10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldViewModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateInputModel": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "templateContent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailTemplateViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "customized": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GoogleServiceAccountCreds": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "private_key_id": {
            "type": "string",
            "nullable": true
          },
          "private_key": {
            "type": "string",
            "nullable": true
          },
          "client_email": {
            "type": "string",
            "nullable": true
          },
          "client_id": {
            "type": "string",
            "nullable": true
          },
          "auth_uri": {
            "type": "string",
            "nullable": true
          },
          "token_uri": {
            "type": "string",
            "nullable": true
          },
          "auth_provider_x509_cert_url": {
            "type": "string",
            "nullable": true
          },
          "client_x509_cert_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GoogleServiceAccountViewModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "private_key_id": {
            "type": "string",
            "nullable": true
          },
          "private_key_hash": {
            "type": "string",
            "nullable": true
          },
          "client_email": {
            "type": "string",
            "nullable": true
          },
          "client_id": {
            "type": "string",
            "nullable": true
          },
          "auth_uri": {
            "type": "string",
            "nullable": true
          },
          "token_uri": {
            "type": "string",
            "nullable": true
          },
          "auth_provider_x509_cert_url": {
            "type": "string",
            "nullable": true
          },
          "client_x509_cert_url": {
            "type": "string",
            "nullable": true
          },
          "verified_with_google": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationInputModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "adminEmail": {
            "type": "string",
            "description": "Field is required.",
            "nullable": true
          },
          "adminName": {
            "type": "string",
            "description": "This field is no longer required and has been deprecated.",
            "nullable": true
          },
          "timezoneName": {
            "type": "string",
            "description": "Field is required. It is in Iana format. e.g. America/New_York. Use moment.js in your client for ease of timezone detection and selection",
            "nullable": true
          },
          "friendlyId": {
            "type": "string",
            "description": "Use the friendlyId as an alternative to the assigned locationId\r \nChoose something easy and meaningful. Must be unique within your company.\r\nFriendlyId's are limited to maximum of 64 characters.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "GroupSize Limits the number of people that can come\r\nalong on a single appointment",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressInputModel"
          },
          "businessHours": {
            "$ref": "#/components/schemas/BusinessHoursInputModel"
          },
          "settings": {
            "$ref": "#/components/schemas/OnlineSettingsInputModel"
          },
          "defaults": {
            "$ref": "#/components/schemas/BusinessDefaultsInputModel"
          },
          "appointmentReminders": {
            "$ref": "#/components/schemas/AppointmentRemindersInputModel"
          }
        },
        "additionalProperties": false
      },
      "LocationListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationsInputModel": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationInputModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationUpdateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "adminEmail": {
            "type": "string",
            "nullable": true
          },
          "adminName": {
            "type": "string",
            "nullable": true
          },
          "timezoneName": {
            "type": "string",
            "nullable": true
          },
          "friendlyId": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressUpdateModel"
          },
          "businessHours": {
            "$ref": "#/components/schemas/BusinessHoursUpdateModel"
          },
          "settings": {
            "$ref": "#/components/schemas/OnlineSettingsUpdateModel"
          },
          "defaults": {
            "$ref": "#/components/schemas/BusinessDefaultsUpdateModel"
          },
          "appointmentReminders": {
            "$ref": "#/components/schemas/AppointmentRemindersInputModel"
          }
        },
        "additionalProperties": false
      },
      "LocationViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "friendlyId": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "adminEmail": {
            "type": "string",
            "nullable": true
          },
          "adminName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "timezoneIana": {
            "type": "string",
            "nullable": true
          },
          "timezoneOffset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "primaryBusiness": {
            "type": "boolean"
          },
          "primaryCalendarId": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "travel": {
            "$ref": "#/components/schemas/TravelViewModel"
          },
          "address": {
            "$ref": "#/components/schemas/AddressViewModel"
          },
          "businessHours": {
            "$ref": "#/components/schemas/BusinessHoursViewModel"
          },
          "businessHolidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessHolidayViewModel"
            },
            "nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessServiceViewModel"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/OnlineSettingsViewModel"
          },
          "defaults": {
            "$ref": "#/components/schemas/BusinessDefaultsViewModel"
          },
          "appointmentReminders": {
            "$ref": "#/components/schemas/AppointmentReminderViewModel"
          }
        },
        "additionalProperties": false
      },
      "MasterEmailTemplateSettingsViewModel": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "headerLogoHeight": {
            "type": "string",
            "nullable": true
          },
          "footerLogoHeight": {
            "type": "string",
            "nullable": true
          },
          "headerLogoPadding": {
            "type": "string",
            "nullable": true
          },
          "footerLogoPadding": {
            "type": "string",
            "nullable": true
          },
          "emailBackgroundColor": {
            "type": "string",
            "nullable": true
          },
          "emailColor": {
            "type": "string",
            "nullable": true
          },
          "emailLinkColor": {
            "type": "string",
            "nullable": true
          },
          "panelBackgroundColor": {
            "type": "string",
            "nullable": true
          },
          "panelColor": {
            "type": "string",
            "nullable": true
          },
          "panelLinkColor": {
            "type": "string",
            "nullable": true
          },
          "contentBackgroundColor": {
            "type": "string",
            "nullable": true
          },
          "contentColor": {
            "type": "string",
            "nullable": true
          },
          "contentLinkColor": {
            "type": "string",
            "nullable": true
          },
          "showHeaderLogo": {
            "type": "boolean"
          },
          "showFooterLogo": {
            "type": "boolean"
          },
          "footerFontSize": {
            "type": "string",
            "nullable": true
          },
          "privacyPolicyLink": {
            "type": "string",
            "nullable": true
          },
          "showHeaderPanel": {
            "type": "boolean"
          },
          "showFooterPanel": {
            "type": "boolean"
          },
          "showContentPanel": {
            "type": "boolean"
          },
          "centerEmailContent": {
            "type": "boolean"
          },
          "centerEmailContentPanel": {
            "type": "boolean"
          },
          "centerEmailFooter": {
            "type": "boolean"
          },
          "footerPanelEmailContact": {
            "type": "boolean"
          },
          "footerPanelPhoneContact": {
            "type": "boolean"
          },
          "footerPanelWebsiteContact": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MasterTemplateSettingsInputModel": {
        "type": "object",
        "properties": {
          "headerLogoHeight": {
            "type": "string",
            "nullable": true
          },
          "footerLogoHeight": {
            "type": "string",
            "nullable": true
          },
          "headerLogoPadding": {
            "type": "string",
            "nullable": true
          },
          "footerLogoPadding": {
            "type": "string",
            "nullable": true
          },
          "emailBackgroundColor": {
            "type": "string",
            "nullable": true
          },
          "emailColor": {
            "type": "string",
            "nullable": true
          },
          "emailLinkColor": {
            "type": "string",
            "nullable": true
          },
          "panelBackgroundColor": {
            "type": "string",
            "nullable": true
          },
          "panelColor": {
            "type": "string",
            "nullable": true
          },
          "panelLinkColor": {
            "type": "string",
            "nullable": true
          },
          "contentBackgroundColor": {
            "type": "string",
            "nullable": true
          },
          "contentColor": {
            "type": "string",
            "nullable": true
          },
          "contentLinkColor": {
            "type": "string",
            "nullable": true
          },
          "showHeaderLogo": {
            "type": "boolean",
            "nullable": true
          },
          "showFooterLogo": {
            "type": "boolean",
            "nullable": true
          },
          "footerFontSize": {
            "type": "string",
            "nullable": true
          },
          "privacyPolicyLink": {
            "type": "string",
            "nullable": true
          },
          "showHeaderPanel": {
            "type": "boolean",
            "nullable": true
          },
          "showFooterPanel": {
            "type": "boolean",
            "nullable": true
          },
          "showContentPanel": {
            "type": "boolean",
            "nullable": true
          },
          "centerEmailContent": {
            "type": "boolean",
            "nullable": true
          },
          "centerEmailContentPanel": {
            "type": "boolean",
            "nullable": true
          },
          "centerEmailFooter": {
            "type": "boolean",
            "nullable": true
          },
          "footerPanelEmailContact": {
            "type": "boolean",
            "nullable": true
          },
          "footerPanelPhoneContact": {
            "type": "boolean",
            "nullable": true
          },
          "footerPanelWebsiteContact": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlineSettingsInputModel": {
        "type": "object",
        "properties": {
          "bookAheadUnit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookAheadValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookInAdvance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerBookingsPerDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enableWorldTimezones": {
            "type": "boolean",
            "nullable": true
          },
          "bookingTimerMins": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlineSettingsUpdateModel": {
        "type": "object",
        "properties": {
          "bookAheadUnit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookAheadValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookInAdvance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerBookingsPerDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enableWorldTimezones": {
            "type": "boolean",
            "nullable": true
          },
          "bookingTimerMins": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlineSettingsViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "familyMembersEnabled": {
            "type": "boolean"
          },
          "customerVerification": {
            "type": "boolean"
          },
          "serviceLabel": {
            "type": "string",
            "nullable": true
          },
          "resourceSelection": {
            "type": "boolean"
          },
          "resourceLabel": {
            "type": "string",
            "nullable": true
          },
          "resourceAnyLabel": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "defaultService": {
            "type": "boolean",
            "nullable": true
          },
          "liveMode": {
            "type": "boolean",
            "nullable": true
          },
          "firstAvailable": {
            "type": "boolean",
            "nullable": true
          },
          "formFlow": {
            "type": "integer",
            "format": "int32"
          },
          "availabilityForm": {
            "type": "integer",
            "format": "int32"
          },
          "showServiceGroups": {
            "type": "boolean"
          },
          "bookWithAccount": {
            "type": "boolean"
          },
          "bookingPolicy": {
            "type": "string",
            "nullable": true
          },
          "bookingMessage": {
            "type": "string",
            "nullable": true
          },
          "showOnSchedLogo": {
            "type": "boolean"
          },
          "showBusinessLogo": {
            "type": "boolean"
          },
          "enableWorldTimezones": {
            "type": "boolean",
            "nullable": true
          },
          "disableAuthorization": {
            "type": "boolean",
            "nullable": true
          },
          "hideNavBar": {
            "type": "boolean",
            "nullable": true
          },
          "hideLocationNav": {
            "type": "boolean",
            "nullable": true
          },
          "hideServiceGroupsNav": {
            "type": "boolean",
            "nullable": true
          },
          "hideServicesNav": {
            "type": "boolean",
            "nullable": true
          },
          "hideContinueBooking": {
            "type": "boolean",
            "nullable": true
          },
          "defaultToCustomerTimezone": {
            "type": "boolean"
          },
          "returnToService": {
            "type": "boolean"
          },
          "returnToAvailability": {
            "type": "boolean"
          },
          "hideBreadCrumbNav": {
            "type": "boolean"
          },
          "bookingTimerMins": {
            "type": "integer",
            "format": "int32"
          },
          "bookAheadUnit": {
            "type": "integer",
            "format": "int32"
          },
          "bookAheadValue": {
            "type": "integer",
            "format": "int32"
          },
          "bookInAdvance": {
            "type": "integer",
            "format": "int32"
          },
          "customerBookingsPerDay": {
            "type": "integer",
            "format": "int32"
          },
          "lateCancelHours": {
            "type": "integer",
            "format": "int32"
          },
          "lateCancelAction": {
            "type": "integer",
            "format": "int32"
          },
          "lateRescheduleHours": {
            "type": "integer",
            "format": "int32"
          },
          "lateRescheduleAction": {
            "type": "integer",
            "format": "int32"
          },
          "bookingConfirmationMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneViewModel": {
        "type": "object",
        "properties": {
          "phoneType": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "type": "string",
            "nullable": true
          },
          "businessPhoneExt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionInputModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionUpdateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RepeatInputModel": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weekdays": {
            "type": "string",
            "nullable": true
          },
          "monthDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RepeatUpdateModel": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weekdays": {
            "type": "string",
            "nullable": true
          },
          "monthDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RepeatViewModel": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "weekdays": {
            "type": "string",
            "nullable": true
          },
          "monthDay": {
            "type": "string",
            "nullable": true
          },
          "monthType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceAllocationInputModel": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceAllocationListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAllocationViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceAllocationUpdateModel": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceAllocationViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "businessId": {
            "type": "integer",
            "format": "int32"
          },
          "resourceId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean"
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatViewModel"
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceAvailabilityViewModel": {
        "type": "object",
        "properties": {
          "businessId": {
            "type": "integer",
            "format": "int32"
          },
          "resourceId": {
            "type": "integer",
            "format": "int32"
          },
          "resourceName": {
            "type": "string",
            "nullable": true
          },
          "resourceTzo": {
            "type": "integer",
            "format": "int32"
          },
          "ignoreBusinessHours": {
            "type": "boolean"
          },
          "weekdays": {
            "$ref": "#/components/schemas/AvailabilityViewModel2"
          }
        },
        "additionalProperties": false
      },
      "ResourceBlockInputModel": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "allDay": {
            "type": "boolean",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceBlockListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceBlockViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceBlockUpdateModel": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "allDay": {
            "type": "boolean",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceBlockViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "businessId": {
            "type": "integer",
            "format": "int32"
          },
          "resourceId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean"
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatViewModel"
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceBulkUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "recurringAvailability": {
            "type": "boolean",
            "nullable": true
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressUpdateModel"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactUpdateModel"
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityInputModel"
          },
          "options": {
            "$ref": "#/components/schemas/ResourceOptionsUpdateModel"
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomFieldUpdateModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceGroupInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceGroupListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceGroupViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceGroupUpdateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceGroupViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "bookingNotification": {
            "type": "integer",
            "format": "int32"
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceHoursViewModel": {
        "type": "object",
        "properties": {
          "mon": {
            "$ref": "#/components/schemas/ResourceHourViewModel"
          },
          "tue": {
            "$ref": "#/components/schemas/ResourceHourViewModel"
          },
          "wed": {
            "$ref": "#/components/schemas/ResourceHourViewModel"
          },
          "thu": {
            "$ref": "#/components/schemas/ResourceHourViewModel"
          },
          "fri": {
            "$ref": "#/components/schemas/ResourceHourViewModel"
          },
          "sat": {
            "$ref": "#/components/schemas/ResourceHourViewModel"
          },
          "sun": {
            "$ref": "#/components/schemas/ResourceHourViewModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceHourViewModel": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ResourceImageInputModel": {
        "type": "object",
        "properties": {
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "imageFileData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "recurringAvailability": {
            "type": "boolean",
            "nullable": true
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressInputModel"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactInputModel"
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityInputModel"
          },
          "options": {
            "$ref": "#/components/schemas/ResourceOptionsInputModel"
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomFieldInputModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceOptionsInputModel": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notificationType": {
            "type": "integer",
            "description": "0 = None, 1=Online Bookings 2=All Bookings.",
            "format": "int32",
            "nullable": true
          },
          "displayColor": {
            "type": "string",
            "nullable": true
          },
          "googleCalendarId": {
            "type": "string",
            "nullable": true
          },
          "outlookCalendarId": {
            "type": "string",
            "nullable": true
          },
          "ignoreBusinessHours": {
            "type": "boolean",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "hourly": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "calendarAvailability": {
            "type": "integer",
            "description": "0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar",
            "format": "int32",
            "nullable": true
          },
          "bookingNotification": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortKey": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bioLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Options for the new resource"
      },
      "ResourceOptionsUpdateModel": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notificationType": {
            "type": "integer",
            "description": "0 = None, 1=Online Bookings 2=All Bookings.",
            "format": "int32",
            "nullable": true
          },
          "displayColor": {
            "type": "string",
            "nullable": true
          },
          "googleCalendarId": {
            "type": "string",
            "nullable": true
          },
          "outlookCalendarId": {
            "type": "string",
            "nullable": true
          },
          "ignoreBusinessHours": {
            "type": "boolean",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "hourly": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "calendarAvailability": {
            "type": "integer",
            "description": "0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar",
            "format": "int32",
            "nullable": true
          },
          "bookingNotification": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortKey": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bioLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceServiceViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourcesInputModel": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceInputModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourcesUpdateModel": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceBulkUpdateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceUpdateModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "recurringAvailability": {
            "type": "boolean",
            "nullable": true
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressUpdateModel"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactUpdateModel"
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityInputModel"
          },
          "options": {
            "$ref": "#/components/schemas/ResourceOptionsUpdateModel"
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomFieldUpdateModel"
          }
        },
        "additionalProperties": false
      },
      "ResourceViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notificationType": {
            "type": "integer",
            "format": "int32"
          },
          "bookingNotification": {
            "type": "integer",
            "format": "int32"
          },
          "googleCalendarId": {
            "type": "string",
            "nullable": true
          },
          "googleCalendarAuthorized": {
            "type": "boolean"
          },
          "googleCalendarAuthUrl": {
            "type": "string",
            "nullable": true
          },
          "outlookCalendarId": {
            "type": "string",
            "nullable": true
          },
          "outlookCalendarAuthUrl": {
            "type": "string",
            "nullable": true
          },
          "outlookCalendarAuthorized": {
            "type": "boolean"
          },
          "ignoreBusinessHours": {
            "type": "boolean"
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "recurringAvailability": {
            "type": "boolean",
            "nullable": true
          },
          "hourly": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "calendarAvailability": {
            "type": "integer",
            "format": "int32"
          },
          "sortKey": {
            "type": "integer",
            "format": "int32"
          },
          "skypeName": {
            "type": "string",
            "nullable": true
          },
          "bioLink": {
            "type": "string",
            "nullable": true
          },
          "timezoneOffset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "timezoneIana": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contact": {
            "$ref": "#/components/schemas/ContactViewModel"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneViewModel"
          },
          "address": {
            "$ref": "#/components/schemas/AddressViewModel"
          },
          "availability": {
            "$ref": "#/components/schemas/ResourceHoursViewModel"
          },
          "options": {
            "$ref": "#/components/schemas/ResourceOptionsInputModel"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceServiceViewModel"
            },
            "nullable": true
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomFieldInputModel"
          }
        },
        "additionalProperties": false
      },
      "ScheduleInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "bookingsPerSlot": {
            "type": "integer",
            "format": "int32"
          },
          "resourceGroupId": {
            "type": "string",
            "nullable": true
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityInputModel"
          }
        },
        "additionalProperties": false
      },
      "ScheduleListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleUpdateModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "bookingsPerSlot": {
            "type": "integer",
            "format": "int32"
          },
          "resourceGroupId": {
            "type": "string",
            "nullable": true
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityInputModel"
          }
        },
        "additionalProperties": false
      },
      "ScheduleViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "primary": {
            "type": "boolean"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "bookingsPerSlot": {
            "type": "integer",
            "format": "int32"
          },
          "resourceGroupId": {
            "type": "string",
            "nullable": true
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availability": {
            "$ref": "#/components/schemas/CalendarHoursViewModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceAllocationInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "bookingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceAllocationListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceAllocationViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceAllocationsInputModel": {
        "type": "object",
        "properties": {
          "serviceAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceAllocationInputModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceAllocationUpdateModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "bookingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceAllocationViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "timezoneOffset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezoneName": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "serviceDescription": {
            "type": "string",
            "nullable": true
          },
          "serviceImageUrl": {
            "type": "string",
            "nullable": true
          },
          "serviceDuration": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "bookingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "bookingCount": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "repeats": {
            "type": "boolean"
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatViewModel"
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "resourceName": {
            "type": "string",
            "nullable": true
          },
          "resourceDescription": {
            "type": "string",
            "nullable": true
          },
          "resourceImageUrl": {
            "type": "string",
            "nullable": true
          },
          "resourcePhone": {
            "$ref": "#/components/schemas/PhoneViewModel"
          },
          "resourceAddress": {
            "$ref": "#/components/schemas/AddressViewModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceAvailabilityViewModel": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "ignoreBusinessHours": {
            "type": "boolean"
          },
          "weekdays": {
            "$ref": "#/components/schemas/AvailabilityViewModel2"
          }
        },
        "additionalProperties": false
      },
      "ServiceBlockInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean"
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatInputModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceBlockListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceBlockViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceBlockUpdateModel": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "nullable": true
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatUpdateModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceBlockViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "repeats": {
            "type": "boolean"
          },
          "repeat": {
            "$ref": "#/components/schemas/RepeatViewModel"
          },
          "deletedStatus": {
            "type": "boolean"
          },
          "deletedTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceCalendarInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "calendarId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceCalendarViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "calendarId": {
            "type": "string",
            "nullable": true
          },
          "calendarName": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceFeesInputModel": {
        "type": "object",
        "properties": {
          "feeAmount": {
            "type": "number",
            "format": "double"
          },
          "feeTaxable": {
            "type": "boolean"
          },
          "cancellationFeeAmount": {
            "type": "number",
            "format": "double"
          },
          "cancellationFeeTaxable": {
            "type": "boolean"
          },
          "nonRefundable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ServiceFeesUpdateModel": {
        "type": "object",
        "properties": {
          "feeAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "feeTaxable": {
            "type": "boolean",
            "nullable": true
          },
          "cancellationFeeAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cancellationFeeTaxable": {
            "type": "boolean",
            "nullable": true
          },
          "nonRefundable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceGroupInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceGroupListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceGroupViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceGroupViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ServiceHoursViewModel": {
        "type": "object",
        "properties": {
          "mon": {
            "$ref": "#/components/schemas/ServiceHourViewModel"
          },
          "tue": {
            "$ref": "#/components/schemas/ServiceHourViewModel"
          },
          "wed": {
            "$ref": "#/components/schemas/ServiceHourViewModel"
          },
          "thu": {
            "$ref": "#/components/schemas/ServiceHourViewModel"
          },
          "fri": {
            "$ref": "#/components/schemas/ServiceHourViewModel"
          },
          "sat": {
            "$ref": "#/components/schemas/ServiceHourViewModel"
          },
          "sun": {
            "$ref": "#/components/schemas/ServiceHourViewModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceHourViewModel": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServiceImageInputModel": {
        "type": "object",
        "properties": {
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "imageFileData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceInputModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "bookingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "bookingInterval": {
            "type": "integer",
            "format": "int32"
          },
          "maxCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "maxGroupSize": {
            "type": "integer",
            "format": "int32"
          },
          "serviceGroupId": {
            "type": "string",
            "nullable": true
          },
          "public": {
            "type": "boolean"
          },
          "mediaPageUrl": {
            "type": "string",
            "nullable": true
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityInputModel"
          },
          "settings": {
            "$ref": "#/components/schemas/ServiceSettingsInputModel"
          },
          "options": {
            "$ref": "#/components/schemas/ServiceOptionsInputModel"
          },
          "fees": {
            "$ref": "#/components/schemas/ServiceFeesInputModel"
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomFieldInputModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceListViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceOptionsInputModel": {
        "type": "object",
        "properties": {
          "defaultService": {
            "type": "boolean",
            "nullable": true
          },
          "durationSelect": {
            "type": "boolean",
            "nullable": true
          },
          "durationInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationMin": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationMax": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "padding": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consumerPadding": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceOptionsUpdateModel": {
        "type": "object",
        "properties": {
          "defaultService": {
            "type": "boolean",
            "nullable": true
          },
          "durationSelect": {
            "type": "boolean",
            "nullable": true
          },
          "durationInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationMin": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationMax": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "padding": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consumerPadding": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceSettingsInputModel": {
        "type": "object",
        "properties": {
          "bookAheadUnit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookAheadValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookInAdvance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceSettingsUpdateModel": {
        "type": "object",
        "properties": {
          "bookAheadUnit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookAheadValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookInAdvance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceUpdateModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookingLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookingInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxCapacity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxGroupSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceGroupId": {
            "type": "string",
            "nullable": true
          },
          "public": {
            "type": "boolean",
            "nullable": true
          },
          "mediaPageUrl": {
            "type": "string",
            "nullable": true
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityInputModel"
          },
          "settings": {
            "$ref": "#/components/schemas/ServiceSettingsUpdateModel"
          },
          "options": {
            "$ref": "#/components/schemas/ServiceOptionsUpdateModel"
          },
          "fees": {
            "$ref": "#/components/schemas/ServiceFeesUpdateModel"
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomFieldUpdateModel"
          }
        },
        "additionalProperties": false
      },
      "ServiceViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "mediaPageUrl": {
            "type": "string",
            "nullable": true
          },
          "serviceGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceGroupName": {
            "type": "string",
            "nullable": true
          },
          "calendarId": {
            "type": "string",
            "nullable": true
          },
          "calendarResourceGroupId": {
            "type": "string",
            "nullable": true
          },
          "bookingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "bookingInterval": {
            "type": "integer",
            "format": "int32"
          },
          "bookAheadUnit": {
            "type": "integer",
            "format": "int32"
          },
          "bookAheadValue": {
            "type": "integer",
            "format": "int32"
          },
          "bookInAdvance": {
            "type": "integer",
            "format": "int32"
          },
          "roundRobin": {
            "type": "integer",
            "format": "int32"
          },
          "showOnline": {
            "type": "boolean"
          },
          "defaultService": {
            "type": "boolean"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "durationSelect": {
            "type": "boolean"
          },
          "durationMin": {
            "type": "integer",
            "format": "int32"
          },
          "durationMax": {
            "type": "integer",
            "format": "int32"
          },
          "durationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "padding": {
            "type": "integer",
            "format": "int32"
          },
          "consumerPadding": {
            "type": "boolean"
          },
          "feeAmount": {
            "type": "number",
            "format": "double"
          },
          "feeTaxable": {
            "type": "boolean"
          },
          "cancellationFeeAmount": {
            "type": "number",
            "format": "double"
          },
          "cancellationFeeTaxable": {
            "type": "boolean"
          },
          "nonRefundable": {
            "type": "boolean"
          },
          "dailyBookingLimitCount": {
            "type": "integer",
            "format": "int32"
          },
          "dailyBookingLimitMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "maxBookingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "maxResourceBookingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "maxCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "maxGroupSize": {
            "type": "integer",
            "format": "int32"
          },
          "availability": {
            "$ref": "#/components/schemas/ServiceHoursViewModel"
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomFieldInputModel"
          }
        },
        "additionalProperties": false
      },
      "SystemTimezoneViewModel": {
        "type": "object",
        "properties": {
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "standardName": {
            "type": "string",
            "nullable": true
          },
          "daylightName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "timezoneIana": {
            "type": "string",
            "nullable": true
          },
          "baseUtcOffset": {
            "type": "integer",
            "format": "int32"
          },
          "supportsDaylightSavingTime": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TimezonesViewModel": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "timezoneIanna": {
            "type": "string",
            "nullable": true
          },
          "tzOffset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimezoneViewModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "timezones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimezonesViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TravelViewModel": {
        "type": "object",
        "properties": {
          "startAddress": {
            "type": "string",
            "nullable": true
          },
          "startLat": {
            "type": "string",
            "nullable": true
          },
          "startLon": {
            "type": "string",
            "nullable": true
          },
          "distance": {
            "type": "string",
            "nullable": true
          },
          "proximity": {
            "type": "string",
            "nullable": true
          },
          "units": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeekDayInputModel": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WeekDayViewModel2": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "displayStartTime": {
            "type": "string",
            "nullable": true
          },
          "displayEndTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://sandbox-identity.onsched.com/connect/token",
            "scopes": {
              "OnSchedApi": "Consumer and Setup Interface",
              "distance": "Travel and Distance calculations"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "OnSchedApi"
      ]
    }
  ]
}