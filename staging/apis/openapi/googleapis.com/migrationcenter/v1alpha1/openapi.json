{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Migration Center API",
    "version": "v1alpha1",
    "x-jentic-source-url": "https://migrationcenter.googleapis.com/$discovery/rest?version=v1alpha1"
  },
  "servers": [
    {
      "url": "https://migrationcenter.googleapis.com/"
    }
  ],
  "paths": {
    "/v1alpha1/{+group}:addAssets": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. Group reference.",
            "in": "path",
            "name": "group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Adds assets to a group.",
        "operationId": "migrationcenter.projects.locations.groups.addAssets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAssetsToGroupRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+group}:removeAssets": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. Group reference.",
            "in": "path",
            "name": "group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Removes assets from a group.",
        "operationId": "migrationcenter.projects.locations.groups.removeAssets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveAssetsFromGroupRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+name}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "Required. The discovery client name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Deletes a discovery client.",
        "operationId": "migrationcenter.projects.locations.discoveryClients.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "Required. Name of the resource.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Determines what information to retrieve for the Report.",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": [
                "REPORT_VIEW_UNSPECIFIED",
                "REPORT_VIEW_BASIC",
                "REPORT_VIEW_FULL",
                "REPORT_VIEW_STANDARD"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Relation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Gets the details of an relation.",
        "operationId": "migrationcenter.projects.locations.relations.get"
      },
      "patch": {
        "parameters": [
          {
            "description": "Output only. Identifier. Full name of this discovery client.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. Update mask is used to specify the fields to be overwritten in the `DiscoveryClient` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
            "in": "query",
            "name": "updateMask",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Updates a discovery client.",
        "operationId": "migrationcenter.projects.locations.discoveryClients.patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryClient"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+name}/locations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "The resource that owns the locations collection, if applicable.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations.",
            "explode": true,
            "in": "query",
            "name": "extraLocationTypes",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of results to return. If not set, the service selects a default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListLocationsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists information about the supported locations for this service.",
        "operationId": "migrationcenter.projects.locations.list"
      }
    },
    "/v1alpha1/{+name}/operations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "The name of the operation's parent resource.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The standard list filter.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The standard list page size.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The standard list page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListOperationsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
        "operationId": "migrationcenter.projects.locations.operations.list"
      }
    },
    "/v1alpha1/{+name}:cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "The name of the operation resource to be cancelled.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
        "operationId": "migrationcenter.projects.locations.operations.cancel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOperationRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+name}:run": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. Name of the resource.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Runs an assets export job, returning an AssetsExportJobExecution.",
        "operationId": "migrationcenter.projects.locations.assetsExportJobs.run",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunAssetsExportJobRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+name}:sendHeartbeat": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The discovery client name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Sends a discovery client heartbeat. Healthy clients are expected to send heartbeats regularly (normally every few minutes).",
        "operationId": "migrationcenter.projects.locations.discoveryClients.sendHeartbeat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendDiscoveryClientHeartbeatRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+name}:validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The name of the import job to validate.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Validates an import job.",
        "operationId": "migrationcenter.projects.locations.importJobs.validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateImportJobRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/assets": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListAssetsRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. When this value is set to 'true' the response will include all assets, including those that are hidden.",
            "in": "query",
            "name": "showHidden",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "View of the assets. Defaults to BASIC.",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": [
                "ASSET_VIEW_UNSPECIFIED",
                "ASSET_VIEW_BASIC",
                "ASSET_VIEW_FULL",
                "ASSET_VIEW_STANDARD"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all the assets in a given project and location.",
        "operationId": "migrationcenter.projects.locations.assets.list"
      }
    },
    "/v1alpha1/{+parent}/assets:aggregateValues": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AggregateAssetsValuesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Aggregates the requested fields based on provided function.",
        "operationId": "migrationcenter.projects.locations.assets.aggregateValues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AggregateAssetsValuesRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/assets:batchDelete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. Parent value for batch asset delete.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Deletes list of Assets.",
        "operationId": "migrationcenter.projects.locations.assets.batchDelete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteAssetsRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/assets:batchUpdate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. Parent value for batch asset update.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateAssetsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Updates the parameters of a list of assets.",
        "operationId": "migrationcenter.projects.locations.assets.batchUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUpdateAssetsRequest"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/assets:reportAssetFrames": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. Parent of the resource.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. Reference to a source.",
            "in": "query",
            "name": "source",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportAssetFramesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Reports a set of frames.",
        "operationId": "migrationcenter.projects.locations.assets.reportAssetFrames",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Frames"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/assetsExportJobs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent resource.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Optional. A token identifying a page of results that the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetsExportJobsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all the assets export jobs in a given project and location.",
        "operationId": "migrationcenter.projects.locations.assetsExportJobs.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. The parent resource where the assts export job will be created.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The ID to use for the asset export job.",
            "in": "query",
            "name": "assetsExportJobId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a new assets export job.",
        "operationId": "migrationcenter.projects.locations.assetsExportJobs.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetsExportJob"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/discoveryClients": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent resource.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter expression to filter results by.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Field to sort by.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The maximum number of items to return. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Optional. A page token, received from a previous `ListDiscoveryClients` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDiscoveryClients` must match the call that provided the page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListDiscoveryClientsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all the discovery clients in a given project and location.",
        "operationId": "migrationcenter.projects.locations.discoveryClients.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Parent resource.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
            "in": "query",
            "name": "discoveryClientId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a new discovery client.",
        "operationId": "migrationcenter.projects.locations.discoveryClients.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryClient"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/errorFrames": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": [
                "ERROR_FRAME_VIEW_UNSPECIFIED",
                "ERROR_FRAME_VIEW_BASIC",
                "ERROR_FRAME_VIEW_FULL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListErrorFramesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all error frames in a given source and location.",
        "operationId": "migrationcenter.projects.locations.sources.errorFrames.list"
      }
    },
    "/v1alpha1/{+parent}/groups": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListGroupsRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListGroupsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all groups in a given project and location.",
        "operationId": "migrationcenter.projects.locations.groups.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Value for parent.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
            "in": "query",
            "name": "groupId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a new group in a given project and location.",
        "operationId": "migrationcenter.projects.locations.groups.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/importDataFiles": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListImportDataFilesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "List import data files.",
        "operationId": "migrationcenter.projects.locations.importJobs.importDataFiles.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Name of the parent of the ImportDataFile.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The ID of the new data file.",
            "in": "query",
            "name": "importDataFileId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates an import data file.",
        "operationId": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportDataFile"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/importJobs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListImportJobsRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The level of details of each import job. Default value is BASIC.",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": [
                "IMPORT_JOB_VIEW_UNSPECIFIED",
                "IMPORT_JOB_VIEW_BASIC",
                "IMPORT_JOB_VIEW_FULL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListImportJobsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all import jobs.",
        "operationId": "migrationcenter.projects.locations.importJobs.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Value for parent.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. ID of the import job.",
            "in": "query",
            "name": "importJobId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates an import job.",
        "operationId": "migrationcenter.projects.locations.importJobs.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportJob"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/preferenceSets": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListPreferenceSetsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all the preference sets in a given project and location.",
        "operationId": "migrationcenter.projects.locations.preferenceSets.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Value for parent.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preferenceSetId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a new preference set in a given project and location.",
        "operationId": "migrationcenter.projects.locations.preferenceSets.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferenceSet"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/relations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListRelationsRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListRelationsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all the relations in a given project and location.",
        "operationId": "migrationcenter.projects.locations.relations.list"
      }
    },
    "/v1alpha1/{+parent}/reportConfigs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListReportConfigsRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListReportConfigsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists ReportConfigs in a given project and location.",
        "operationId": "migrationcenter.projects.locations.reportConfigs.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Value for parent.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
            "in": "query",
            "name": "reportConfigId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a report configuration.",
        "operationId": "migrationcenter.projects.locations.reportConfigs.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportConfig"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/reports": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListReportsRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results that the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Determines what information to retrieve for each Report.",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": [
                "REPORT_VIEW_UNSPECIFIED",
                "REPORT_VIEW_BASIC",
                "REPORT_VIEW_FULL",
                "REPORT_VIEW_STANDARD"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListReportsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists Reports in a given ReportConfig.",
        "operationId": "migrationcenter.projects.locations.reportConfigs.reports.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Value for parent.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
            "in": "query",
            "name": "reportId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a report.",
        "operationId": "migrationcenter.projects.locations.reportConfigs.reports.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Report"
              }
            }
          }
        }
      }
    },
    "/v1alpha1/{+parent}/sources": {
      "parameters": [
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. Parent value for `ListSourcesRequest`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering results.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A token identifying a page of results that the server should return.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListSourcesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all the sources in a given project and location.",
        "operationId": "migrationcenter.projects.locations.sources.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. Value for parent.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "in": "query",
            "name": "requestId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
            "in": "query",
            "name": "sourceId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a new source in a given project and location.",
        "operationId": "migrationcenter.projects.locations.sources.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Source"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "_.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "schema": {
          "enum": [
            "1",
            "2"
          ],
          "type": "string"
        }
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "schema": {
          "type": "string"
        }
      },
      "alt": {
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "schema": {
          "default": "json",
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "type": "string"
        }
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        }
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "schema": {
          "type": "string"
        }
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "schema": {
          "type": "string"
        }
      },
      "prettyPrint": {
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "default": true,
          "type": "boolean"
        }
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "schema": {
          "type": "string"
        }
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "schema": {
          "type": "string"
        }
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "DiscoveryClient": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DiscoveryClient"
            }
          }
        }
      }
    },
    "schemas": {
      "AddAssetsToGroupRequest": {
        "description": "A request to add assets to a group.",
        "properties": {
          "allowExisting": {
            "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
            "type": "boolean"
          },
          "assets": {
            "$ref": "#/components/schemas/AssetList",
            "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
          },
          "requestId": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AggregateAssetsValuesRequest": {
        "description": "A request to aggregate one or more values.",
        "properties": {
          "aggregations": {
            "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
            "items": {
              "$ref": "#/components/schemas/Aggregation"
            },
            "type": "array"
          },
          "filter": {
            "description": "Optional. The aggregation will be performed on assets that match the provided filter.",
            "type": "string"
          },
          "showHidden": {
            "description": "Optional. When this value is set to 'true' the response will include all assets, including those that are hidden.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AggregateAssetsValuesResponse": {
        "description": "A response to a request to aggregated assets values.",
        "properties": {
          "results": {
            "description": "The aggregation results.",
            "items": {
              "$ref": "#/components/schemas/AggregationResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Aggregation": {
        "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/AggregationCount",
            "description": "Count the number of matching objects."
          },
          "field": {
            "description": "The name of the field on which to aggregate.",
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/AggregationFrequency",
            "description": "Creates a frequency distribution of all field values."
          },
          "histogram": {
            "$ref": "#/components/schemas/AggregationHistogram",
            "description": "Creates a bucketed histogram of field values."
          },
          "sum": {
            "$ref": "#/components/schemas/AggregationSum",
            "description": "Sum over a numeric field."
          }
        },
        "type": "object"
      },
      "AggregationCount": {
        "description": "Object count.",
        "properties": {},
        "type": "object"
      },
      "AggregationFrequency": {
        "description": "Frequency distribution of all field values.",
        "properties": {},
        "type": "object"
      },
      "AggregationHistogram": {
        "description": "Histogram of bucketed assets counts by field value.",
        "properties": {
          "lowerBounds": {
            "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AggregationResult": {
        "description": "Message describing a result of an aggregation.",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/AggregationResultCount"
          },
          "field": {
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/AggregationResultFrequency"
          },
          "histogram": {
            "$ref": "#/components/schemas/AggregationResultHistogram"
          },
          "sum": {
            "$ref": "#/components/schemas/AggregationResultSum"
          }
        },
        "type": "object"
      },
      "AggregationResultCount": {
        "description": "The result of a count aggregation.",
        "properties": {
          "value": {
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AggregationResultFrequency": {
        "description": "The result of a frequency distribution aggregation.",
        "properties": {
          "values": {
            "additionalProperties": {
              "format": "int64",
              "type": "string"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AggregationResultHistogram": {
        "description": "The result of a bucketed histogram aggregation.",
        "properties": {
          "buckets": {
            "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
            "items": {
              "$ref": "#/components/schemas/AggregationResultHistogramBucket"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AggregationResultHistogramBucket": {
        "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
        "properties": {
          "count": {
            "description": "Count of items in the bucket.",
            "format": "int64",
            "type": "string"
          },
          "lowerBound": {
            "description": "Lower bound - inclusive.",
            "format": "double",
            "type": "number"
          },
          "upperBound": {
            "description": "Upper bound - exclusive.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "AggregationResultSum": {
        "description": "The result of a sum aggregation.",
        "properties": {
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "AggregationSum": {
        "description": "Sum of field values.",
        "properties": {},
        "type": "object"
      },
      "Asset": {
        "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
        "properties": {
          "assignedGroups": {
            "description": "Output only. The list of groups that the asset is assigned to.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "attributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Generic asset attributes.",
            "type": "object"
          },
          "createTime": {
            "description": "Output only. The timestamp when the asset was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "databaseDeploymentDetails": {
            "$ref": "#/components/schemas/DatabaseDeploymentDetails",
            "description": "Output only. Asset information specific for database deployments.",
            "readOnly": true
          },
          "databaseDetails": {
            "$ref": "#/components/schemas/DatabaseDetails",
            "description": "Output only. Asset information specific for logical databases.",
            "readOnly": true
          },
          "hidden": {
            "description": "Optional. Indicates if the asset is hidden.",
            "type": "boolean"
          },
          "hideReason": {
            "description": "Optional. An optional reason for marking this asset as hidden.",
            "type": "string"
          },
          "hideTime": {
            "description": "Output only. The timestamp when the asset was marked as hidden.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "insightList": {
            "$ref": "#/components/schemas/InsightList",
            "description": "Output only. The list of insights associated with the asset.",
            "readOnly": true
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "machineDetails": {
            "$ref": "#/components/schemas/MachineDetails",
            "description": "Output only. Asset information specific for virtual machines.",
            "readOnly": true
          },
          "name": {
            "description": "Output only. The full name of the asset.",
            "readOnly": true,
            "type": "string"
          },
          "performanceData": {
            "$ref": "#/components/schemas/AssetPerformanceData",
            "description": "Performance data for the asset."
          },
          "sources": {
            "description": "Output only. The list of sources contributing to the asset.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "title": {
            "description": "Output only. Server generated human readable name of the asset.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the asset was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "virtualMachineDetails": {
            "$ref": "#/components/schemas/VirtualMachineDetails",
            "description": "Output only. Asset information specific for virtual machines.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AssetFrame": {
        "description": "Contains data reported from an inventory source on an asset.",
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Generic asset attributes.",
            "type": "object"
          },
          "collectionType": {
            "description": "Optional. Frame collection type, if not specified the collection type will be based on the source type of the source the frame was reported on.",
            "enum": [
              "SOURCE_TYPE_UNKNOWN",
              "SOURCE_TYPE_UPLOAD",
              "SOURCE_TYPE_GUEST_OS_SCAN",
              "SOURCE_TYPE_INVENTORY_SCAN",
              "SOURCE_TYPE_CUSTOM",
              "SOURCE_TYPE_DISCOVERY_CLIENT"
            ],
            "type": "string"
          },
          "databaseDeploymentDetails": {
            "$ref": "#/components/schemas/DatabaseDeploymentDetails",
            "description": "Asset information specific for database deployments."
          },
          "databaseDetails": {
            "$ref": "#/components/schemas/DatabaseDetails",
            "description": "Asset information specific for logical databases."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "machineDetails": {
            "$ref": "#/components/schemas/MachineDetails",
            "description": "Asset information specific for virtual and physical machines."
          },
          "performanceSamples": {
            "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
            "items": {
              "$ref": "#/components/schemas/PerformanceSample"
            },
            "type": "array"
          },
          "reportTime": {
            "description": "The time the data was reported.",
            "format": "google-datetime",
            "type": "string"
          },
          "traceToken": {
            "description": "Optional. Trace token is optionally provided to assist with debugging and traceability.",
            "type": "string"
          },
          "virtualMachineDetails": {
            "$ref": "#/components/schemas/VirtualMachineDetails",
            "description": "Asset information specific for virtual machines."
          }
        },
        "type": "object"
      },
      "AssetList": {
        "description": "Lists the asset IDs of all assets.",
        "properties": {
          "assetIds": {
            "description": "Required. A list of asset IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AssetPerformanceData": {
        "description": "Performance data for an asset.",
        "properties": {
          "dailyResourceUsageAggregations": {
            "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
            "items": {
              "$ref": "#/components/schemas/DailyResourceUsageAggregation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AssetsExportJob": {
        "description": "Assets export job message.",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/AssetsExportJobExportCondition",
            "description": "Optional. Conditions for selecting assets to export."
          },
          "createTime": {
            "description": "Output only. Resource creation time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "inventory": {
            "$ref": "#/components/schemas/AssetsExportJobInventory",
            "description": "Export asset inventory details."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Labels as key value pairs. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.",
            "type": "object"
          },
          "name": {
            "description": "Output only. Identifier. Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "networkDependencies": {
            "$ref": "#/components/schemas/AssetsExportJobNetworkDependencies",
            "description": "Export data regarding asset network dependencies."
          },
          "performanceData": {
            "$ref": "#/components/schemas/AssetsExportJobPerformanceData",
            "description": "Export asset with performance data."
          },
          "recentExecutions": {
            "description": "Output only. Recent non expired executions of the job.",
            "items": {
              "$ref": "#/components/schemas/AssetsExportJobExecution"
            },
            "readOnly": true,
            "type": "array"
          },
          "showHidden": {
            "description": "Optional. When this value is set to 'true' the response will include all assets, including those that are hidden.",
            "type": "boolean"
          },
          "signedUriDestination": {
            "$ref": "#/components/schemas/SignedUriDestination",
            "description": "Export to Cloud Storage files downloadable using signed URIs."
          },
          "updateTime": {
            "description": "Output only. Resource update time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetsExportJobExecution": {
        "description": "Execution status of assets export job.",
        "properties": {
          "endTime": {
            "description": "Output only. Completion time of the export.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "executionId": {
            "description": "Output only. Globally unique identifier of the execution.",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. Expiration time for the export and artifacts.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "requestedAssetCount": {
            "description": "Output only. Number of assets requested for export after resolving the requested filters.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "result": {
            "$ref": "#/components/schemas/AssetsExportJobExecutionResult",
            "description": "Output only. Result of the export execution.",
            "readOnly": true
          },
          "startTime": {
            "description": "Output only. Execution timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetsExportJobExecutionResult": {
        "description": "Contains the result of the assets export.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Status",
            "description": "Output only. Error encountered during export.",
            "readOnly": true
          },
          "outputFiles": {
            "$ref": "#/components/schemas/OutputFileList",
            "description": "Output only. List of output files.",
            "readOnly": true
          },
          "signedUris": {
            "$ref": "#/components/schemas/SignedUris",
            "description": "Output only. Signed URLs for downloading export artifacts.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AssetsExportJobExportCondition": {
        "description": "Conditions for selecting assets to export.",
        "properties": {
          "filter": {
            "description": "Optional. Assets filter, supports the same syntax as asset listing.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetsExportJobInventory": {
        "description": "Configuration for asset inventory details exports.",
        "properties": {},
        "type": "object"
      },
      "AssetsExportJobNetworkDependencies": {
        "description": "Configuration for network dependencies exports.",
        "properties": {
          "maxDays": {
            "description": "Optional. When this value is set to a positive integer, network connections data will be returned for the most recent days for which data is available. When this value is unset (or set to zero), all available data is returned.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AssetsExportJobPerformanceData": {
        "description": "Configuration for performance data exports.",
        "properties": {
          "maxDays": {
            "description": "Optional. When this value is set to a positive integer, performance data will be returned for the most recent days for which data is available. When this value is unset (or set to zero), all available data is returned. The maximum value is 420; values above 420 will be coerced to 420. If unset (0 value) a default value of 40 will be used.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AwsEc2PlatformDetails": {
        "description": "AWS EC2 specific details.",
        "properties": {
          "hyperthreading": {
            "description": "Optional. Whether the machine is hyperthreaded.",
            "enum": [
              "HYPERTHREADING_STATUS_UNSPECIFIED",
              "HYPERTHREADING_STATUS_DISABLED",
              "HYPERTHREADING_STATUS_ENABLED"
            ],
            "type": "string"
          },
          "location": {
            "description": "The location of the machine in the AWS format.",
            "type": "string"
          },
          "machineTypeLabel": {
            "description": "AWS platform's machine type label.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AwsRds": {
        "description": "Specific details for an AWS RDS database deployment.",
        "properties": {},
        "type": "object"
      },
      "AzureVmPlatformDetails": {
        "description": "Azure VM specific details.",
        "properties": {
          "hyperthreading": {
            "description": "Whether the machine is hyperthreaded.",
            "enum": [
              "HYPERTHREADING_STATUS_UNSPECIFIED",
              "HYPERTHREADING_STATUS_DISABLED",
              "HYPERTHREADING_STATUS_ENABLED"
            ],
            "type": "string"
          },
          "location": {
            "description": "The location of the machine in the Azure format.",
            "type": "string"
          },
          "machineTypeLabel": {
            "description": "Azure platform's machine type label.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Azure platform's provisioning state.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BatchDeleteAssetsRequest": {
        "description": "A request to delete a list of asset.",
        "properties": {
          "allowMissing": {
            "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
            "type": "boolean"
          },
          "cascadingRules": {
            "description": "Optional. Optional cascading rules for deleting related assets.",
            "items": {
              "$ref": "#/components/schemas/CascadingRule"
            },
            "type": "array"
          },
          "names": {
            "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchUpdateAssetsRequest": {
        "description": "A request to update a list of assets.",
        "properties": {
          "requests": {
            "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
            "items": {
              "$ref": "#/components/schemas/UpdateAssetRequest"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchUpdateAssetsResponse": {
        "description": "Response for updating a list of assets.",
        "properties": {
          "assets": {
            "description": "Update asset content. The content only includes values after field mask being applied.",
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BiosDetails": {
        "description": "Details about the BIOS.",
        "properties": {
          "biosManufacturer": {
            "description": "BIOS manufacturer.",
            "type": "string"
          },
          "biosName": {
            "description": "BIOS name.",
            "type": "string"
          },
          "biosReleaseDate": {
            "description": "BIOS release date.",
            "type": "string"
          },
          "biosVersion": {
            "description": "BIOS version.",
            "type": "string"
          },
          "smbiosUuid": {
            "description": "SMBIOS UUID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CancelOperationRequest": {
        "description": "The request message for Operations.CancelOperation.",
        "properties": {},
        "type": "object"
      },
      "CascadeLogicalDBsRule": {
        "description": "Cascading rule for related logical DBs.",
        "properties": {},
        "type": "object"
      },
      "CascadingRule": {
        "description": "Specifies cascading rules for traversing relations.",
        "properties": {
          "cascadeLogicalDbs": {
            "$ref": "#/components/schemas/CascadeLogicalDBsRule",
            "description": "Cascading rule for related logical DBs."
          }
        },
        "type": "object"
      },
      "CloudDatabaseMigrationTarget": {
        "description": "Cloud database migration target.",
        "properties": {
          "cloudSqlForMysqlShape": {
            "$ref": "#/components/schemas/CloudSqlForMySqlShape",
            "description": "Cloud SQL for MySQL database shape."
          },
          "cloudSqlForPostgresqlShape": {
            "$ref": "#/components/schemas/CloudSqlForPostgreSqlShape",
            "description": "Cloud SQL for PostgreSQL database shape."
          },
          "cloudSqlShape": {
            "$ref": "#/components/schemas/CloudSqlForSqlServerShape",
            "description": "Cloud SQL for SQL Server database shape."
          }
        },
        "type": "object"
      },
      "CloudSqlForMySqlShape": {
        "description": "Cloud SQL for MySQL database shape.",
        "properties": {
          "backupStorageGb": {
            "description": "Output only. Predicted backup storage size in GiB.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "edition": {
            "description": "Output only. Cloud SQL edition.",
            "enum": [
              "CLOUD_SQL_EDITION_UNSPECIFIED",
              "CLOUD_SQL_EDITION_ENTERPRISE",
              "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "egressGbPerMonth": {
            "description": "Output only. Predicted Network Out traffic GiB per month.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "logicalCoreCount": {
            "description": "Output only. Number of logical cores.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "memoryMb": {
            "description": "Output only. Predicted amount of memory in MiB.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/ComputeStorageDescriptor",
            "description": "Output only. Predicted storage shape.",
            "readOnly": true
          },
          "version": {
            "description": "Output only. MySQL version to be used on the Cloud SQL for MySQL instance.",
            "enum": [
              "MY_SQL_VERSION_UNSPECIFIED",
              "MY_SQL_VERSION_5_6",
              "MY_SQL_VERSION_5_7",
              "MY_SQL_VERSION_8_0"
            ],
            "readOnly": true,
            "type": "string"
          },
          "zoneAvailability": {
            "description": "Output only. Cloud SQL zone availability.",
            "enum": [
              "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
              "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
              "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudSqlForPostgreSqlShape": {
        "description": "Cloud SQL for PostgreSQL database shape.",
        "properties": {
          "backupStorageGb": {
            "description": "Output only. Predicted backup storage size in GiB.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "edition": {
            "description": "Output only. Cloud SQL edition.",
            "enum": [
              "CLOUD_SQL_EDITION_UNSPECIFIED",
              "CLOUD_SQL_EDITION_ENTERPRISE",
              "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "egressGbPerMonth": {
            "description": "Output only. Predicted Network Out traffic GiB per month.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "logicalCoreCount": {
            "description": "Output only. Number of logical cores.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "memoryMb": {
            "description": "Output only. Predicted amount of memory in MiB.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/ComputeStorageDescriptor",
            "description": "Output only. Predicted storage shape.",
            "readOnly": true
          },
          "version": {
            "description": "Output only. PostgreSql version to be used on the Cloud SQL for PostgreSql instance.",
            "enum": [
              "POSTGRESQL_VERSION_UNSPECIFIED",
              "POSTGRESQL_VERSION_9_6",
              "POSTGRESQL_VERSION_10",
              "POSTGRESQL_VERSION_11",
              "POSTGRESQL_VERSION_12",
              "POSTGRESQL_VERSION_13",
              "POSTGRESQL_VERSION_14",
              "POSTGRESQL_VERSION_15"
            ],
            "readOnly": true,
            "type": "string"
          },
          "zoneAvailability": {
            "description": "Output only. Cloud SQL zone availability.",
            "enum": [
              "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
              "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
              "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudSqlForSqlServerShape": {
        "description": "Cloud SQL for SQL Server database shape.",
        "properties": {
          "backupStorageGb": {
            "description": "Output only. Predicted backup storage size in GiB.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "edition": {
            "description": "Output only. Cloud SQL edition.",
            "enum": [
              "CLOUD_SQL_EDITION_UNSPECIFIED",
              "CLOUD_SQL_EDITION_ENTERPRISE",
              "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "egressGbPerMonth": {
            "description": "Output only. Predicted Network Out traffic GiB per month.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "logicalCoreCount": {
            "description": "Output only. Number of logical cores.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "memoryMb": {
            "description": "Output only. Predicted amount of memory in MiB.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "smtEnabled": {
            "description": "Output only. Whether simultaneous multithreading is enabled (see https://cloud.google.com/sql/docs/sqlserver/create-instance#smt-create-instance).",
            "readOnly": true,
            "type": "boolean"
          },
          "storage": {
            "$ref": "#/components/schemas/ComputeStorageDescriptor",
            "description": "Output only. Predicted storage shape.",
            "readOnly": true
          },
          "version": {
            "description": "Output only. Microsoft SQL Server version to be used on the Cloud SQL for SQL server instance.",
            "enum": [
              "SQL_SERVER_VERSION_UNSPECIFIED",
              "SQL_SERVER_VERSION_2017_EXPRESS",
              "SQL_SERVER_VERSION_2017_WEB",
              "SQL_SERVER_VERSION_2017_STANDARD",
              "SQL_SERVER_VERSION_2017_ENTERPRISE",
              "SQL_SERVER_VERSION_2019_EXPRESS",
              "SQL_SERVER_VERSION_2019_WEB",
              "SQL_SERVER_VERSION_2019_STANDARD",
              "SQL_SERVER_VERSION_2019_ENTERPRISE",
              "SQL_SERVER_VERSION_2022_EXPRESS",
              "SQL_SERVER_VERSION_2022_WEB",
              "SQL_SERVER_VERSION_2022_STANDARD",
              "SQL_SERVER_VERSION_2022_ENTERPRISE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "zoneAvailability": {
            "description": "Output only. Cloud SQL zone availability.",
            "enum": [
              "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
              "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
              "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ComputeEngineMigrationTarget": {
        "description": "Compute engine migration target.",
        "properties": {
          "shape": {
            "$ref": "#/components/schemas/ComputeEngineShapeDescriptor",
            "description": "Description of the suggested shape for the migration target."
          }
        },
        "type": "object"
      },
      "ComputeEnginePreferences": {
        "description": "The user preferences relating to Compute Engine target platform.",
        "properties": {
          "licenseType": {
            "description": "License type to consider when calculating costs for operating systems. If unspecified, costs are calculated based on the default licensing plan. If os_pricing_preferences is specified, it overrides this field.",
            "enum": [
              "LICENSE_TYPE_UNSPECIFIED",
              "LICENSE_TYPE_DEFAULT",
              "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
            ],
            "type": "string"
          },
          "machinePreferences": {
            "$ref": "#/components/schemas/MachinePreferences",
            "description": "Preferences concerning the machine types to consider on Compute Engine."
          },
          "multithreading": {
            "description": "Optional. Preferences for multithreading support on Windows Server.",
            "enum": [
              "MULTITHREADING_UNSPECIFIED",
              "MULTITHREADING_DISABLED",
              "MULTITHREADING_ENABLED",
              "MULTITHREADING_DISABLED_WITH_COMPENSATION"
            ],
            "type": "string"
          },
          "osPricingPreferences": {
            "$ref": "#/components/schemas/OperatingSystemPricingPreferences",
            "description": "Optional. Pricing options for OS images."
          },
          "persistentDiskType": {
            "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ComputeEngineShapeDescriptor": {
        "description": "Compute Engine target shape descriptor.",
        "properties": {
          "logicalCoreCount": {
            "description": "Output only. Number of logical cores.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "machineType": {
            "description": "Output only. Compute Engine machine type.",
            "readOnly": true,
            "type": "string"
          },
          "memoryMb": {
            "description": "Output only. Memory in mebibytes.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "physicalCoreCount": {
            "description": "Output only. Number of physical cores.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "series": {
            "description": "Output only. Compute Engine machine series.",
            "readOnly": true,
            "type": "string"
          },
          "smtEnabled": {
            "description": "Output only. Whether simultaneous multithreading is enabled (see https://cloud.google.com/compute/docs/instances/set-threads-per-core).",
            "readOnly": true,
            "type": "boolean"
          },
          "storage": {
            "description": "Output only. Compute Engine storage. Never empty.",
            "items": {
              "$ref": "#/components/schemas/ComputeStorageDescriptor"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ComputeEngineSoleTenantMigrationTarget": {
        "description": "Compute engine sole tenant migration target.",
        "properties": {},
        "type": "object"
      },
      "ComputeStorageDescriptor": {
        "description": "Compute Engine storage option descriptor.",
        "properties": {
          "sizeGb": {
            "description": "Disk size in GiB.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Output only. Disk type backing the storage.",
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CpuUsageSample": {
        "description": "CPU usage sample.",
        "properties": {
          "utilizedPercentage": {
            "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CsvOutputFile": {
        "description": "Contains a single output file of type CSV.",
        "properties": {
          "columnsCount": {
            "description": "Output only. Number of columns in the file.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "rowCount": {
            "description": "Output only. Number of rows in the file.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "signedUri": {
            "$ref": "#/components/schemas/SignedUri",
            "description": "Output only. Signed URI destination.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregation": {
        "description": "Usage data aggregation for a single day.",
        "properties": {
          "cpu": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationCPU",
            "description": "CPU usage."
          },
          "date": {
            "$ref": "#/components/schemas/Date",
            "description": "Aggregation date. Day boundaries are at midnight UTC."
          },
          "disk": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationDisk",
            "description": "Disk usage."
          },
          "memory": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationMemory",
            "description": "Memory usage."
          },
          "network": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationNetwork",
            "description": "Network usage."
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationCPU": {
        "description": "Statistical aggregation of CPU usage.",
        "properties": {
          "utilizationPercentage": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationStats",
            "description": "CPU utilization percentage."
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationDisk": {
        "description": "Statistical aggregation of disk usage.",
        "properties": {
          "iops": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationStats",
            "description": "Disk I/O operations per second."
          },
          "readIops": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationStats",
            "description": "Disk read I/O operations per second."
          },
          "writeIops": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationStats",
            "description": "Disk write I/O operations per second."
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationMemory": {
        "description": "Statistical aggregation of memory usage.",
        "properties": {
          "utilizationPercentage": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationStats",
            "description": "Memory utilization percentage."
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationNetwork": {
        "description": "Statistical aggregation of network usage.",
        "properties": {
          "egressBps": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationStats",
            "description": "Network egress in B/s."
          },
          "ingressBps": {
            "$ref": "#/components/schemas/DailyResourceUsageAggregationStats",
            "description": "Network ingress in B/s."
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationStats": {
        "description": "Statistical aggregation of samples for a single resource usage.",
        "properties": {
          "average": {
            "description": "Average usage value.",
            "format": "float",
            "type": "number"
          },
          "median": {
            "description": "Median usage value.",
            "format": "float",
            "type": "number"
          },
          "ninteyFifthPercentile": {
            "description": "95th percentile usage value.",
            "format": "float",
            "type": "number"
          },
          "peak": {
            "description": "Peak usage value.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "DatabaseDeploymentDetails": {
        "description": "The details of a database deployment asset.",
        "properties": {
          "aggregatedStats": {
            "$ref": "#/components/schemas/DatabaseDeploymentDetailsAggregatedStats",
            "description": "Output only. Aggregated stats for the database deployment.",
            "readOnly": true
          },
          "awsRds": {
            "$ref": "#/components/schemas/AwsRds",
            "description": "Optional. Details of an AWS RDS instance."
          },
          "edition": {
            "description": "The database deployment edition.",
            "type": "string"
          },
          "generatedId": {
            "description": "The database deployment generated ID.",
            "type": "string"
          },
          "manualUniqueId": {
            "description": "A manual unique ID set by the user.",
            "type": "string"
          },
          "mysql": {
            "$ref": "#/components/schemas/MysqlDatabaseDeployment",
            "description": "Details of a MYSQL database deployment."
          },
          "postgresql": {
            "$ref": "#/components/schemas/PostgreSqlDatabaseDeployment",
            "description": "Details of a PostgreSQL database deployment."
          },
          "sqlServer": {
            "$ref": "#/components/schemas/SqlServerDatabaseDeployment",
            "description": "Details of a Microsoft SQL Server database deployment."
          },
          "topology": {
            "$ref": "#/components/schemas/DatabaseDeploymentTopology",
            "description": "Details of the database deployment topology."
          },
          "version": {
            "description": "The database deployment version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabaseDeploymentDetailsAggregatedStats": {
        "description": "Aggregated stats for the database deployment.",
        "properties": {
          "databaseCount": {
            "description": "Output only. The number of databases in the deployment.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DatabaseDeploymentTopology": {
        "description": "Details of database deployment's topology.",
        "properties": {
          "coreCount": {
            "description": "Optional. Number of total logical cores.",
            "format": "int32",
            "type": "integer"
          },
          "coreLimit": {
            "description": "Optional. Number of total logical cores limited by db deployment.",
            "format": "int32",
            "type": "integer"
          },
          "diskAllocatedBytes": {
            "description": "Optional. Disk allocated in bytes.",
            "format": "int64",
            "type": "string"
          },
          "diskUsedBytes": {
            "description": "Optional. Disk used in bytes.",
            "format": "int64",
            "type": "string"
          },
          "instances": {
            "description": "Optional. List of database instances.",
            "items": {
              "$ref": "#/components/schemas/DatabaseInstance"
            },
            "type": "array"
          },
          "memoryBytes": {
            "description": "Optional. Total memory in bytes.",
            "format": "int64",
            "type": "string"
          },
          "memoryLimitBytes": {
            "description": "Optional. Total memory in bytes limited by db deployment.",
            "format": "int64",
            "type": "string"
          },
          "physicalCoreCount": {
            "description": "Optional. Number of total physical cores.",
            "format": "int32",
            "type": "integer"
          },
          "physicalCoreLimit": {
            "description": "Optional. Number of total physical cores limited by db deployment.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DatabaseDetails": {
        "description": "Details of a logical database.",
        "properties": {
          "allocatedStorageBytes": {
            "description": "The allocated storage for the database in bytes.",
            "format": "int64",
            "type": "string"
          },
          "databaseName": {
            "description": "The name of the database.",
            "type": "string"
          },
          "parentDatabaseDeployment": {
            "$ref": "#/components/schemas/DatabaseDetailsParentDatabaseDeployment",
            "description": "The parent database deployment that contains the logical database."
          },
          "schemas": {
            "description": "The database schemas.",
            "items": {
              "$ref": "#/components/schemas/DatabaseSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabaseDetailsParentDatabaseDeployment": {
        "description": "The identifiers of the parent database deployment.",
        "properties": {
          "generatedId": {
            "description": "The parent database deployment generated ID.",
            "type": "string"
          },
          "manualUniqueId": {
            "description": "The parent database deployment optional manual unique ID set by the user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabaseInstance": {
        "description": "Details of a database instance.",
        "properties": {
          "instanceName": {
            "description": "The instance's name.",
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/DatabaseInstanceNetwork",
            "description": "Optional. Networking details."
          },
          "role": {
            "description": "The instance role in the database engine.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "PRIMARY",
              "SECONDARY",
              "ARBITER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabaseInstanceNetwork": {
        "description": "Network details of a database instance.",
        "properties": {
          "hostNames": {
            "description": "Optional. The instance's host names.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipAddresses": {
            "description": "Optional. The instance's IP addresses.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "primaryMacAddress": {
            "description": "Optional. The instance's primary MAC address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabaseObjects": {
        "description": "Details of a group of database objects.",
        "properties": {
          "category": {
            "description": "The category of the objects.",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "TABLE",
              "INDEX",
              "CONSTRAINTS",
              "VIEWS",
              "SOURCE_CODE",
              "OTHER"
            ],
            "type": "string"
          },
          "count": {
            "description": "The number of objects.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabasePreferences": {
        "description": "DatabasePreferences enables you to create sets of preferences for your migrated databases.",
        "properties": {
          "mssqlToCloudSqlForSqlServerPreferences": {
            "$ref": "#/components/schemas/DatabasePreferencesCloudSqlSqlServer",
            "description": "Optional. Preferences for target SQL Server on Cloud SQL when migrating from source Microsoft SQL server."
          },
          "mysqlToCloudSqlForMysqlPreferences": {
            "$ref": "#/components/schemas/DatabasePreferencesCloudSqlMySql",
            "description": "Optional. Preferences for target MySQL on Cloud SQL when migrating from source MySQL."
          },
          "postgresqlToCloudSqlForPostgresqlPreferences": {
            "$ref": "#/components/schemas/DatabasePreferencesCloudSqlPostgreSql",
            "description": "Optional. Preferences for target PostgreSQL on Cloud SQL when migrating from source PostgreSQL."
          }
        },
        "type": "object"
      },
      "DatabasePreferencesCloudSqlCommon": {
        "description": "Preferences common to Cloud SQL databases.",
        "properties": {
          "backup": {
            "$ref": "#/components/schemas/DatabasePreferencesCloudSqlCommonBackup",
            "description": "Optional. Preferences for database backups."
          },
          "commitmentPlan": {
            "description": "Optional. Commitment plan to consider when calculating costs. Only regular CUDs (not flexible) are currently available.",
            "enum": [
              "COMMITMENT_PLAN_UNSPECIFIED",
              "COMMITMENT_PLAN_NONE",
              "COMMITMENT_PLAN_ONE_YEAR",
              "COMMITMENT_PLAN_THREE_YEARS",
              "COMMITMENT_PLAN_FLEXIBLE_ONE_YEAR",
              "COMMITMENT_PLAN_FLEXIBLE_THREE_YEARS"
            ],
            "type": "string"
          },
          "edition": {
            "description": "Optional. Preferred Cloud SQL edition.",
            "enum": [
              "CLOUD_SQL_EDITION_UNSPECIFIED",
              "CLOUD_SQL_EDITION_ENTERPRISE",
              "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
            ],
            "type": "string"
          },
          "persistentDiskType": {
            "description": "Optional. Persistent disk type to use. If unspecified, a disk type is recommended based on available usage data. For SQL Server, only SSD is available. For MySQL and PostgreSQL, only STANDARD (HDD) and SSD types are available.",
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "type": "string"
          },
          "sizingOptimizationStrategy": {
            "description": "Optional. Sizing optimization strategy of the database. Currently supported for Cloud SQL are just two values: SIZING_OPTIMIZATION_STRATEGY_MODERATE and SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE. SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED will behave like SIZING_OPTIMIZATION_STRATEGY_MODERATE.",
            "enum": [
              "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
              "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
              "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
              "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",
              "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
            ],
            "type": "string"
          },
          "zoneAvailability": {
            "description": "Optional. Preferred zone availability.",
            "enum": [
              "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
              "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
              "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabasePreferencesCloudSqlCommonBackup": {
        "description": "Preferences for database backups.",
        "properties": {
          "backupMode": {
            "description": "Optional. Automated backup mode.",
            "enum": [
              "BACKUP_MODE_UNSPECIFIED",
              "BACKUP_MODE_DISABLED",
              "BACKUP_MODE_ENABLED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabasePreferencesCloudSqlMySql": {
        "description": "Preferences for MySQL on Cloud SQL.",
        "properties": {
          "common": {
            "$ref": "#/components/schemas/DatabasePreferencesCloudSqlCommon",
            "description": "Optional. Preferences to Cloud SQL databases."
          }
        },
        "type": "object"
      },
      "DatabasePreferencesCloudSqlPostgreSql": {
        "description": "Preferences for PostgreSQL on Cloud SQL.",
        "properties": {
          "common": {
            "$ref": "#/components/schemas/DatabasePreferencesCloudSqlCommon",
            "description": "Optional. Preferences to Cloud SQL databases."
          }
        },
        "type": "object"
      },
      "DatabasePreferencesCloudSqlSqlServer": {
        "description": "Preferences for SQL Server on Cloud SQL.",
        "properties": {
          "common": {
            "$ref": "#/components/schemas/DatabasePreferencesCloudSqlCommon",
            "description": "Optional. Preferences to Cloud SQL databases."
          },
          "multithreading": {
            "description": "Optional. Preferences for multithreading support.",
            "enum": [
              "MULTITHREADING_UNSPECIFIED",
              "MULTITHREADING_DISABLED",
              "MULTITHREADING_ENABLED",
              "MULTITHREADING_DISABLED_WITH_COMPENSATION"
            ],
            "type": "string"
          },
          "versionType": {
            "description": "Optional. Edition of Microsoft SQL version that is used on a Cloud SQL for SQL server instance.",
            "enum": [
              "VERSION_TYPE_UNSPECIFIED",
              "VERSION_TYPE_AUTO",
              "VERSION_TYPE_EXPRESS",
              "VERSION_TYPE_WEB",
              "VERSION_TYPE_STANDARD",
              "VERSION_TYPE_ENTERPRISE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabaseSchema": {
        "description": "Details of a database schema.",
        "properties": {
          "mysql": {
            "$ref": "#/components/schemas/MySqlSchemaDetails",
            "description": "Details of a Mysql schema."
          },
          "objects": {
            "description": "List of details of objects by category.",
            "items": {
              "$ref": "#/components/schemas/DatabaseObjects"
            },
            "type": "array"
          },
          "postgresql": {
            "$ref": "#/components/schemas/PostgreSqlSchemaDetails",
            "description": "Details of a PostgreSql schema."
          },
          "schemaName": {
            "description": "The name of the schema.",
            "type": "string"
          },
          "sqlServer": {
            "$ref": "#/components/schemas/SqlServerSchemaDetails",
            "description": "Details of a SqlServer schema."
          },
          "tablesSizeBytes": {
            "description": "The total size of tables in bytes.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DateTime": {
        "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
        "properties": {
          "day": {
            "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
            "format": "int32",
            "type": "integer"
          },
          "hours": {
            "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone",
            "description": "Time zone."
          },
          "utcOffset": {
            "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
            "format": "google-duration",
            "type": "string"
          },
          "year": {
            "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DetectedSoftware": {
        "description": "Information about software detected on an asset.",
        "properties": {
          "softwareFamily": {
            "description": "Output only. Software family of the detected software, e.g. Database, SAP family.",
            "readOnly": true,
            "type": "string"
          },
          "softwareName": {
            "description": "Output only. Software's name.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryClient": {
        "description": "Represents an installed Migration Center Discovery Client instance.",
        "properties": {
          "createTime": {
            "description": "Output only. Time when the discovery client was first created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. Free text description. Maximum length is 1000 characters.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. Free text display name. Maximum length is 63 characters.",
            "type": "string"
          },
          "errors": {
            "description": "Output only. Errors affecting client functionality.",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "readOnly": true,
            "type": "array"
          },
          "expireTime": {
            "description": "Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.",
            "format": "google-datetime",
            "type": "string"
          },
          "heartbeatTime": {
            "description": "Output only. Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Labels as key value pairs.",
            "type": "object"
          },
          "name": {
            "description": "Output only. Identifier. Full name of this discovery client.",
            "readOnly": true,
            "type": "string"
          },
          "serviceAccount": {
            "description": "Required. Service account used by the discovery client for various operation.",
            "type": "string"
          },
          "signalsEndpoint": {
            "description": "Output only. This field is intended for internal use.",
            "readOnly": true,
            "type": "string"
          },
          "source": {
            "description": "Required. Full name of the source object associated with this discovery client.",
            "type": "string"
          },
          "state": {
            "description": "Output only. Current state of the discovery client.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "OFFLINE",
              "DEGRADED",
              "EXPIRED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "ttl": {
            "description": "Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.",
            "format": "google-duration",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "description": "Output only. Client version, as reported in recent heartbeat.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskEntry": {
        "description": "Single disk entry.",
        "properties": {
          "diskLabel": {
            "description": "Disk label.",
            "type": "string"
          },
          "diskLabelType": {
            "description": "Disk label type (e.g. BIOS/GPT)",
            "type": "string"
          },
          "hwAddress": {
            "description": "Disk hardware address (e.g. 0:1 for SCSI).",
            "type": "string"
          },
          "interfaceType": {
            "description": "Disks interface type (e.g. SATA/SCSI)",
            "type": "string"
          },
          "partitions": {
            "$ref": "#/components/schemas/DiskPartitionList",
            "description": "Partition layout."
          },
          "status": {
            "description": "Disk status (e.g. online).",
            "type": "string"
          },
          "totalCapacityBytes": {
            "description": "Disk capacity.",
            "format": "int64",
            "type": "string"
          },
          "totalFreeBytes": {
            "description": "Disk free space.",
            "format": "int64",
            "type": "string"
          },
          "vmwareConfig": {
            "$ref": "#/components/schemas/VmwareDiskConfig",
            "description": "VMware disk details."
          }
        },
        "type": "object"
      },
      "DiskEntryList": {
        "description": "VM disks.",
        "properties": {
          "entries": {
            "description": "Disk entries.",
            "items": {
              "$ref": "#/components/schemas/DiskEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiskPartition": {
        "description": "Disk Partition details.",
        "properties": {
          "capacityBytes": {
            "description": "Partition capacity.",
            "format": "int64",
            "type": "string"
          },
          "fileSystem": {
            "description": "Partition file system.",
            "type": "string"
          },
          "freeBytes": {
            "description": "Partition free space.",
            "format": "int64",
            "type": "string"
          },
          "mountPoint": {
            "description": "Mount point (Linux/Windows) or drive letter (Windows).",
            "type": "string"
          },
          "subPartitions": {
            "$ref": "#/components/schemas/DiskPartitionList",
            "description": "Sub-partitions."
          },
          "type": {
            "description": "Partition type (e.g. BIOS boot).",
            "type": "string"
          },
          "uuid": {
            "description": "Partition UUID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskPartitionDetails": {
        "description": "Disk partition details.",
        "properties": {
          "freeSpaceBytes": {
            "description": "Output only. Total free space of all partitions.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "partitions": {
            "$ref": "#/components/schemas/DiskPartitionList",
            "description": "Optional. List of partitions."
          },
          "totalCapacityBytes": {
            "description": "Output only. Total capacity of all partitions.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskPartitionList": {
        "description": "Disk partition list.",
        "properties": {
          "entries": {
            "description": "Partition entries.",
            "items": {
              "$ref": "#/components/schemas/DiskPartition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiskUsageSample": {
        "description": "Disk usage sample. Values are across all disks.",
        "properties": {
          "averageIops": {
            "description": "Average IOPS sampled over a short window. Must be non-negative. If read or write are set, the sum of read and write will override the value of the average_iops.",
            "format": "float",
            "type": "number"
          },
          "averageReadIops": {
            "description": "Average read IOPS sampled over a short window. Must be non-negative. If both read and write are zero they are ignored.",
            "format": "float",
            "type": "number"
          },
          "averageWriteIops": {
            "description": "Average write IOPS sampled over a short window. Must be non-negative. If both read and write are zero they are ignored.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Empty": {
        "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
        "properties": {},
        "type": "object"
      },
      "ErrorFrame": {
        "description": "Message representing a frame which failed to be processed due to an error.",
        "properties": {
          "ingestionTime": {
            "description": "Output only. Frame ingestion time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. The identifier of the ErrorFrame.",
            "readOnly": true,
            "type": "string"
          },
          "originalFrame": {
            "$ref": "#/components/schemas/AssetFrame",
            "description": "Output only. The frame that was originally reported.",
            "readOnly": true
          },
          "violations": {
            "description": "Output only. All the violations that were detected for the frame.",
            "items": {
              "$ref": "#/components/schemas/FrameViolationEntry"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExecutionReport": {
        "description": "A resource that reports result of the import job execution.",
        "properties": {
          "executionErrors": {
            "$ref": "#/components/schemas/ValidationReport",
            "description": "Validation errors encountered during the execution of the import job."
          },
          "framesReported": {
            "description": "Total number of asset frames reported for the import job.",
            "format": "int32",
            "type": "integer"
          },
          "jobErrors": {
            "deprecated": true,
            "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
            "items": {
              "$ref": "#/components/schemas/ImportError"
            },
            "type": "array"
          },
          "totalRowsCount": {
            "description": "Total number of rows in the import job.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FileValidationReport": {
        "description": "A resource that aggregates the validation errors found in an import job file.",
        "properties": {
          "fileErrors": {
            "description": "List of file level errors.",
            "items": {
              "$ref": "#/components/schemas/ImportError"
            },
            "type": "array"
          },
          "fileName": {
            "description": "The name of the file.",
            "type": "string"
          },
          "partialReport": {
            "description": "Flag indicating that processing was aborted due to maximum number of errors.",
            "type": "boolean"
          },
          "rowErrors": {
            "description": "Partial list of rows that encountered validation error.",
            "items": {
              "$ref": "#/components/schemas/ImportRowError"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FitDescriptor": {
        "description": "Describes the fit level of an asset for migration to a specific target.",
        "properties": {
          "fitLevel": {
            "description": "Output only. Fit level.",
            "enum": [
              "FIT_LEVEL_UNSPECIFIED",
              "FIT",
              "NO_FIT",
              "REQUIRES_EFFORT"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FrameViolationEntry": {
        "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
        "properties": {
          "field": {
            "description": "The field of the original frame where the violation occurred.",
            "type": "string"
          },
          "violation": {
            "description": "A message describing the violation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Frames": {
        "description": "Collection of frame data.",
        "properties": {
          "framesData": {
            "description": "A repeated field of asset data.",
            "items": {
              "$ref": "#/components/schemas/AssetFrame"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FstabEntry": {
        "description": "Single fstab entry.",
        "properties": {
          "file": {
            "description": "The mount point for the filesystem.",
            "type": "string"
          },
          "freq": {
            "description": "Used by dump to determine which filesystems need to be dumped.",
            "format": "int32",
            "type": "integer"
          },
          "mntops": {
            "description": "Mount options associated with the filesystem.",
            "type": "string"
          },
          "passno": {
            "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
            "format": "int32",
            "type": "integer"
          },
          "spec": {
            "description": "The block special device or remote filesystem to be mounted.",
            "type": "string"
          },
          "vfstype": {
            "description": "The type of the filesystem.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FstabEntryList": {
        "description": "Fstab content.",
        "properties": {
          "entries": {
            "description": "Fstab entries.",
            "items": {
              "$ref": "#/components/schemas/FstabEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GCSPayloadInfo": {
        "description": "A resource that represents a payload hosted on Google Cloud Storage.",
        "properties": {
          "format": {
            "description": "The import job format.",
            "enum": [
              "IMPORT_JOB_FORMAT_UNSPECIFIED",
              "IMPORT_JOB_FORMAT_CMDB",
              "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
              "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
              "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
              "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
              "IMPORT_JOB_FORMAT_MANUAL_CSV",
              "IMPORT_JOB_FORMAT_DATABASE_ZIP"
            ],
            "enumDeprecated": [
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false
            ],
            "type": "string"
          },
          "path": {
            "description": "The payload path in Google Cloud Storage.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GenericInsight": {
        "description": "A generic insight about an asset.",
        "properties": {
          "additionalInformation": {
            "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "defaultMessage": {
            "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead. Text can contain md file style links.",
            "readOnly": true,
            "type": "string"
          },
          "messageId": {
            "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GenericPlatformDetails": {
        "description": "Generic platform details.",
        "properties": {
          "hyperthreading": {
            "description": "Whether the machine is hyperthreaded.",
            "enum": [
              "HYPERTHREADING_STATUS_UNSPECIFIED",
              "HYPERTHREADING_STATUS_DISABLED",
              "HYPERTHREADING_STATUS_ENABLED"
            ],
            "type": "string"
          },
          "location": {
            "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleKubernetesEngineMigrationTarget": {
        "description": "GKE migration target.",
        "properties": {},
        "type": "object"
      },
      "Group": {
        "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp when the group was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the group.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. User-friendly display name.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The name of the group.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the group was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestConfigDetails": {
        "description": "Guest OS config information.",
        "properties": {
          "fstab": {
            "$ref": "#/components/schemas/FstabEntryList",
            "description": "Mount list (Linux fstab)."
          },
          "hosts": {
            "$ref": "#/components/schemas/HostsEntryList",
            "description": "Output only. Hosts file (/etc/hosts).",
            "readOnly": true
          },
          "issue": {
            "description": "OS issue (typically /etc/issue in Linux).",
            "type": "string"
          },
          "nfsExports": {
            "$ref": "#/components/schemas/NfsExportList",
            "description": "NFS exports."
          },
          "selinux": {
            "$ref": "#/components/schemas/Selinux",
            "description": "SELinux details."
          }
        },
        "type": "object"
      },
      "GuestInstalledApplication": {
        "description": "Guest installed application information.",
        "properties": {
          "licenses": {
            "description": "License strings associated with the installed application.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Installed application name.",
            "type": "string"
          },
          "path": {
            "description": "Source path.",
            "type": "string"
          },
          "time": {
            "description": "Date application was installed.",
            "type": "string"
          },
          "vendor": {
            "description": "Installed application vendor.",
            "type": "string"
          },
          "version": {
            "description": "Installed application version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestInstalledApplicationList": {
        "description": "Guest installed application list.",
        "properties": {
          "entries": {
            "description": "Application entries.",
            "items": {
              "$ref": "#/components/schemas/GuestInstalledApplication"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GuestOsDetails": {
        "description": "Information from Guest-level collections.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/GuestConfigDetails",
            "description": "OS and app configuration."
          },
          "runtime": {
            "$ref": "#/components/schemas/GuestRuntimeDetails",
            "description": "Runtime information."
          }
        },
        "type": "object"
      },
      "GuestRuntimeDetails": {
        "description": "Guest OS runtime information.",
        "properties": {
          "domain": {
            "description": "Domain, e.g. c.stratozone-development.internal.",
            "type": "string"
          },
          "installedApps": {
            "$ref": "#/components/schemas/GuestInstalledApplicationList",
            "description": "Installed applications information."
          },
          "lastUptime": {
            "$ref": "#/components/schemas/Date",
            "description": "Date since last booted (last uptime date)."
          },
          "machineName": {
            "description": "Machine name.",
            "type": "string"
          },
          "networkInfo": {
            "$ref": "#/components/schemas/RuntimeNetworkInfo",
            "description": "Runtime network information (connections, ports)."
          },
          "openFileList": {
            "$ref": "#/components/schemas/OpenFileList",
            "description": "Open files information."
          },
          "processes": {
            "$ref": "#/components/schemas/RunningProcessList",
            "description": "Running processes."
          },
          "services": {
            "$ref": "#/components/schemas/RunningServiceList",
            "description": "Running background services."
          }
        },
        "type": "object"
      },
      "HostsEntry": {
        "description": "Single /etc/hosts entry.",
        "properties": {
          "hostNames": {
            "description": "List of host names / aliases.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ip": {
            "description": "IP (raw, IPv4/6 agnostic).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostsEntryList": {
        "description": "Hosts content.",
        "properties": {
          "entries": {
            "description": "Output only. Hosts entries.",
            "items": {
              "$ref": "#/components/schemas/HostsEntry"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ImportDataFile": {
        "description": "A resource that represents a payload file in an import job.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp when the file was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. User-friendly display name. Maximum length is 256 characters.",
            "type": "string"
          },
          "format": {
            "description": "Required. The payload format.",
            "enum": [
              "IMPORT_JOB_FORMAT_UNSPECIFIED",
              "IMPORT_JOB_FORMAT_CMDB",
              "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
              "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
              "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
              "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
              "IMPORT_JOB_FORMAT_MANUAL_CSV",
              "IMPORT_JOB_FORMAT_DATABASE_ZIP"
            ],
            "enumDeprecated": [
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false
            ],
            "type": "string"
          },
          "name": {
            "description": "Output only. The name of the file.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the import data file.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uploadFileInfo": {
            "$ref": "#/components/schemas/UploadFileInfo",
            "description": "Information about a file that is uploaded to a storage service."
          }
        },
        "type": "object"
      },
      "ImportError": {
        "description": "A resource that reports the errors encountered while processing an import job.",
        "properties": {
          "errorDetails": {
            "description": "The error information.",
            "type": "string"
          },
          "severity": {
            "description": "The severity of the error.",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "ERROR",
              "WARNING",
              "INFO"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImportJob": {
        "description": "A resource that represents the background job that imports asset frames.",
        "properties": {
          "assetSource": {
            "description": "Required. Reference to a source.",
            "type": "string"
          },
          "completeTime": {
            "description": "Output only. The timestamp when the import job was completed.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The timestamp when the import job was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly display name. Maximum length is 63 characters.",
            "type": "string"
          },
          "executionReport": {
            "$ref": "#/components/schemas/ExecutionReport",
            "description": "Output only. The report with the results of running the import job.",
            "readOnly": true
          },
          "gcsPayload": {
            "$ref": "#/components/schemas/GCSPayloadInfo",
            "deprecated": true,
            "description": "The payload is in Google Cloud Storage."
          },
          "inlinePayload": {
            "$ref": "#/components/schemas/InlinePayloadInfo",
            "description": "The payload is included in the request, mainly used for small import jobs."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The full name of the import job.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the import job.",
            "enum": [
              "IMPORT_JOB_STATE_UNSPECIFIED",
              "IMPORT_JOB_STATE_PENDING",
              "IMPORT_JOB_STATE_RUNNING",
              "IMPORT_JOB_STATE_COMPLETED",
              "IMPORT_JOB_STATE_FAILED",
              "IMPORT_JOB_STATE_VALIDATING",
              "IMPORT_JOB_STATE_FAILED_VALIDATION",
              "IMPORT_JOB_STATE_READY"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the import job was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "validationReport": {
            "$ref": "#/components/schemas/ValidationReport",
            "description": "Output only. The report with the validation results of the import job.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportRowError": {
        "description": "A resource that reports the import job errors at row level.",
        "properties": {
          "archiveError": {
            "$ref": "#/components/schemas/ImportRowErrorArchiveErrorDetails",
            "description": "Error details for an archive file."
          },
          "assetTitle": {
            "description": "The asset title.",
            "type": "string"
          },
          "csvError": {
            "$ref": "#/components/schemas/ImportRowErrorCsvErrorDetails",
            "description": "Error details for a CSV file."
          },
          "errors": {
            "description": "The list of errors detected in the row.",
            "items": {
              "$ref": "#/components/schemas/ImportError"
            },
            "type": "array"
          },
          "rowNumber": {
            "deprecated": true,
            "description": "The row number where the error was detected.",
            "format": "int32",
            "type": "integer"
          },
          "vmName": {
            "description": "The name of the VM in the row.",
            "type": "string"
          },
          "vmUuid": {
            "description": "The VM UUID.",
            "type": "string"
          },
          "xlsxError": {
            "$ref": "#/components/schemas/ImportRowErrorXlsxErrorDetails",
            "description": "Error details for an XLSX file."
          }
        },
        "type": "object"
      },
      "ImportRowErrorArchiveErrorDetails": {
        "description": "Error details for an archive file.",
        "properties": {
          "csvError": {
            "$ref": "#/components/schemas/ImportRowErrorCsvErrorDetails",
            "description": "Error details for a CSV file."
          },
          "filePath": {
            "description": "The file path inside the archive where the error was detected.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImportRowErrorCsvErrorDetails": {
        "description": "Error details for a CSV file.",
        "properties": {
          "rowNumber": {
            "description": "The row number where the error was detected.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ImportRowErrorXlsxErrorDetails": {
        "description": "Error details for an XLSX file.",
        "properties": {
          "rowNumber": {
            "description": "The row number where the error was detected.",
            "format": "int32",
            "type": "integer"
          },
          "sheet": {
            "description": "The name of the sheet where the error was detected.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InlinePayloadInfo": {
        "description": "A resource that represents the inline import job payload.",
        "properties": {
          "format": {
            "description": "The import job format.",
            "enum": [
              "IMPORT_JOB_FORMAT_UNSPECIFIED",
              "IMPORT_JOB_FORMAT_CMDB",
              "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
              "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
              "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
              "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
              "IMPORT_JOB_FORMAT_MANUAL_CSV",
              "IMPORT_JOB_FORMAT_DATABASE_ZIP"
            ],
            "enumDeprecated": [
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false
            ],
            "type": "string"
          },
          "payload": {
            "description": "List of payload files.",
            "items": {
              "$ref": "#/components/schemas/PayloadFile"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Insight": {
        "description": "An insight about an asset.",
        "properties": {
          "genericInsight": {
            "$ref": "#/components/schemas/GenericInsight",
            "description": "Output only. A generic insight about an asset.",
            "readOnly": true
          },
          "migrationInsight": {
            "$ref": "#/components/schemas/MigrationInsight",
            "description": "Output only. An insight about potential migrations for an asset.",
            "readOnly": true
          },
          "softwareInsight": {
            "$ref": "#/components/schemas/SoftwareInsight",
            "description": "Output only. An insight regarding software detected on an asset.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "InsightList": {
        "description": "Message containing insights list.",
        "properties": {
          "insights": {
            "description": "Output only. Insights of the list.",
            "items": {
              "$ref": "#/components/schemas/Insight"
            },
            "readOnly": true,
            "type": "array"
          },
          "updateTime": {
            "description": "Output only. Update timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Issue": {
        "description": "An issue associated with a migration.",
        "properties": {
          "compatibilityIssue": {
            "$ref": "#/components/schemas/IssueCompatibilityIssue",
            "description": "Output only. Details about a compatibility issue.",
            "readOnly": true
          },
          "description": {
            "description": "Output only. English description of the issue.",
            "readOnly": true,
            "type": "string"
          },
          "issueCode": {
            "description": "Output only. Unique identifier for this issue type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "IssueCompatibilityIssue": {
        "description": "Details about a compatibility issue.",
        "properties": {
          "associatedObject": {
            "description": "Output only. Name of the object associated with this compatibility issue relative to the relevant asset. Does not represent a fully qualified resource name and is not intended for programmatic use.",
            "readOnly": true,
            "type": "string"
          },
          "associatedObjectType": {
            "description": "Output only. Type of object associated with this migration compatibility issue.",
            "enum": [
              "OBJECT_TYPE_UNSPECIFIED",
              "DATABASE_DEPLOYMENT",
              "DATABASE",
              "SCHEMA"
            ],
            "readOnly": true,
            "type": "string"
          },
          "associatedValue": {
            "description": "Output only. A string representation of actual value associated with this issue. Some values may contain aggregated information, such as a flag name and the actual value assigned to it.",
            "readOnly": true,
            "type": "string"
          },
          "category": {
            "description": "Output only. Category of this compatibility issue.",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "DATABASE_FLAG",
              "DATABASE_FEATURE"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListAssetsExportJobsResponse": {
        "description": "Response message for listing assets export jobs.",
        "properties": {
          "assetsExportJobs": {
            "description": "Output only. The list of assets export jobs.",
            "items": {
              "$ref": "#/components/schemas/AssetsExportJob"
            },
            "readOnly": true,
            "type": "array"
          },
          "nextPageToken": {
            "description": "Output only. A token identifying a page of results the server should return.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListAssetsResponse": {
        "description": "Response message for listing assets.",
        "properties": {
          "assets": {
            "description": "A list of assets.",
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListDiscoveryClientsResponse": {
        "description": "Response message for listing discovery clients.",
        "properties": {
          "discoveryClients": {
            "description": "List of discovery clients.",
            "items": {
              "$ref": "#/components/schemas/DiscoveryClient"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
            "type": "string"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListErrorFramesResponse": {
        "description": "A response for listing error frames.",
        "properties": {
          "errorFrames": {
            "description": "The list of error frames.",
            "items": {
              "$ref": "#/components/schemas/ErrorFrame"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListGroupsResponse": {
        "description": "A response for listing groups.",
        "properties": {
          "groups": {
            "description": "The list of Group",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListImportDataFilesResponse": {
        "description": "Response for listing payload files of an import job.",
        "properties": {
          "importDataFiles": {
            "description": "The list of import data files.",
            "items": {
              "$ref": "#/components/schemas/ImportDataFile"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
            "type": "string"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListImportJobsResponse": {
        "description": "A response for listing import jobs.",
        "properties": {
          "importJobs": {
            "description": "The list of import jobs.",
            "items": {
              "$ref": "#/components/schemas/ImportJob"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListLocationsResponse": {
        "description": "The response message for Locations.ListLocations.",
        "properties": {
          "locations": {
            "description": "A list of locations that matches the specified filter in the request.",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "The standard List next-page token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListOperationsResponse": {
        "description": "The response message for Operations.ListOperations.",
        "properties": {
          "nextPageToken": {
            "description": "The standard List next-page token.",
            "type": "string"
          },
          "operations": {
            "description": "A list of operations that matches the specified filter in the request.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListPreferenceSetsResponse": {
        "description": "Response message for listing preference sets.",
        "properties": {
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "preferenceSets": {
            "description": "The list of PreferenceSets",
            "items": {
              "$ref": "#/components/schemas/PreferenceSet"
            },
            "type": "array"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListRelationsResponse": {
        "description": "Response message for listing relations.",
        "properties": {
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "relations": {
            "description": "A list of relations.",
            "items": {
              "$ref": "#/components/schemas/Relation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListReportConfigsResponse": {
        "description": "Response message for listing report configs.",
        "properties": {
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "reportConfigs": {
            "description": "A list of report configs.",
            "items": {
              "$ref": "#/components/schemas/ReportConfig"
            },
            "type": "array"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListReportsResponse": {
        "description": "Response message for listing Reports.",
        "properties": {
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "reports": {
            "description": "The list of Reports.",
            "items": {
              "$ref": "#/components/schemas/Report"
            },
            "type": "array"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListSourcesResponse": {
        "description": "Response message for listing sources.",
        "properties": {
          "nextPageToken": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "sources": {
            "description": "The list of sources.",
            "items": {
              "$ref": "#/components/schemas/Source"
            },
            "type": "array"
          },
          "unreachable": {
            "description": "Locations that could not be reached.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Location": {
        "description": "A resource that represents a Google Cloud location.",
        "properties": {
          "displayName": {
            "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
            "type": "object"
          },
          "locationId": {
            "description": "The canonical id for this location. For example: `\"us-east1\"`.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Service-specific metadata. For example the available capacity at the given location.",
            "type": "object"
          },
          "name": {
            "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineArchitectureDetails": {
        "description": "Details of the machine architecture.",
        "properties": {
          "bios": {
            "$ref": "#/components/schemas/BiosDetails",
            "description": "BIOS Details."
          },
          "cpuArchitecture": {
            "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
            "type": "string"
          },
          "cpuName": {
            "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
            "type": "string"
          },
          "cpuSocketCount": {
            "description": "Number of processor sockets allocated to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "firmwareType": {
            "description": "Firmware type.",
            "enum": [
              "FIRMWARE_TYPE_UNSPECIFIED",
              "BIOS",
              "EFI"
            ],
            "type": "string"
          },
          "hyperthreading": {
            "description": "CPU hyper-threading support.",
            "enum": [
              "CPU_HYPER_THREADING_UNSPECIFIED",
              "DISABLED",
              "ENABLED"
            ],
            "type": "string"
          },
          "vendor": {
            "description": "Hardware vendor.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineDetails": {
        "description": "Details of a machine.",
        "properties": {
          "architecture": {
            "$ref": "#/components/schemas/MachineArchitectureDetails",
            "description": "Architecture details (vendor, CPU architecture)."
          },
          "coreCount": {
            "description": "Number of logical CPU cores in the machine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "createTime": {
            "description": "Machine creation time.",
            "format": "google-datetime",
            "type": "string"
          },
          "diskPartitions": {
            "$ref": "#/components/schemas/DiskPartitionDetails",
            "description": "Optional. Disk partitions details. Note: Partitions are not necessarily mounted on local disks and therefore might not have a one-to-one correspondence with local disks."
          },
          "disks": {
            "$ref": "#/components/schemas/MachineDiskDetails",
            "description": "Disk details."
          },
          "guestOs": {
            "$ref": "#/components/schemas/GuestOsDetails",
            "description": "Guest OS information."
          },
          "machineName": {
            "description": "Machine name.",
            "type": "string"
          },
          "memoryMb": {
            "description": "The amount of memory in the machine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "network": {
            "$ref": "#/components/schemas/MachineNetworkDetails",
            "description": "Network details."
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformDetails",
            "description": "Platform specific information."
          },
          "powerState": {
            "description": "Power state of the machine.",
            "enum": [
              "POWER_STATE_UNSPECIFIED",
              "PENDING",
              "ACTIVE",
              "SUSPENDING",
              "SUSPENDED",
              "DELETING",
              "DELETED"
            ],
            "type": "string"
          },
          "uuid": {
            "description": "Machine unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineDiskDetails": {
        "description": "Details of machine disks.",
        "properties": {
          "disks": {
            "$ref": "#/components/schemas/DiskEntryList",
            "description": "List of disks."
          },
          "rawScanResult": {
            "description": "Raw disk scan result. This field is intended for human inspection. The format of this field may be lsblk output or any another raw output. The exact format may change without notice and should not be relied upon.",
            "type": "string"
          },
          "totalCapacityBytes": {
            "description": "Disk total Capacity.",
            "format": "int64",
            "type": "string"
          },
          "totalFreeBytes": {
            "description": "Total disk free space.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineNetworkDetails": {
        "description": "Details of network adapters and settings.",
        "properties": {
          "defaultGateway": {
            "description": "Default gateway address.",
            "type": "string"
          },
          "networkAdapters": {
            "$ref": "#/components/schemas/NetworkAdapterList",
            "description": "List of network adapters."
          },
          "primaryIpAddress": {
            "description": "The primary IP address of the machine.",
            "type": "string"
          },
          "primaryMacAddress": {
            "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
            "type": "string"
          },
          "publicIpAddress": {
            "description": "The public IP address of the machine.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachinePreferences": {
        "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations for GCE. Not all machine types are available in all zones and regions.",
        "properties": {
          "allowedMachineSeries": {
            "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
            "items": {
              "$ref": "#/components/schemas/MachineSeries"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MachineSeries": {
        "description": "A machine series, for a target product (e.g. Compute Engine, Google Cloud VMware Engine).",
        "properties": {
          "code": {
            "description": "Code to identify a machine series. Consult this for more details on the available series for Compute Engine: https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison Consult this for more details on the available series for Google Cloud VMware Engine: https://cloud.google.com/vmware-engine/pricing",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MemoryUsageSample": {
        "description": "Memory usage sample.",
        "properties": {
          "utilizedPercentage": {
            "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MigrationInsight": {
        "description": "An insight about potential migrations for an asset.",
        "properties": {
          "cloudDatabaseTarget": {
            "$ref": "#/components/schemas/CloudDatabaseMigrationTarget",
            "description": "Output only. A Cloud database migration target.",
            "readOnly": true
          },
          "computeEngineSoleTenantTarget": {
            "$ref": "#/components/schemas/ComputeEngineSoleTenantMigrationTarget",
            "description": "Output only. A Google Compute Engine Sole Tenant target.",
            "readOnly": true
          },
          "computeEngineTarget": {
            "$ref": "#/components/schemas/ComputeEngineMigrationTarget",
            "description": "Output only. A Google Compute Engine target.",
            "readOnly": true
          },
          "fit": {
            "$ref": "#/components/schemas/FitDescriptor",
            "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
            "readOnly": true
          },
          "gkeTarget": {
            "$ref": "#/components/schemas/GoogleKubernetesEngineMigrationTarget",
            "description": "Output only. A Google Kubernetes Engine target.",
            "readOnly": true
          },
          "issues": {
            "description": "Output only. Issues associated with this migration.",
            "items": {
              "$ref": "#/components/schemas/Issue"
            },
            "readOnly": true,
            "type": "array"
          },
          "vmwareEngineTarget": {
            "$ref": "#/components/schemas/VmwareEngineMigrationTarget",
            "description": "Output only. A VMWare Engine target.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Money": {
        "description": "Represents an amount of money with its currency type.",
        "properties": {
          "currencyCode": {
            "description": "The three-letter currency code defined in ISO 4217.",
            "type": "string"
          },
          "nanos": {
            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "format": "int32",
            "type": "integer"
          },
          "units": {
            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MySqlPlugin": {
        "description": "MySql plugin.",
        "properties": {
          "enabled": {
            "description": "Required. The plugin is active.",
            "type": "boolean"
          },
          "plugin": {
            "description": "Required. The plugin name.",
            "type": "string"
          },
          "version": {
            "description": "Required. The plugin version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MySqlProperty": {
        "description": "MySql property.",
        "properties": {
          "enabled": {
            "description": "Required. The property is enabled.",
            "type": "boolean"
          },
          "numericValue": {
            "description": "Required. The property numeric value.",
            "format": "int64",
            "type": "string"
          },
          "property": {
            "description": "Required. The property name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MySqlSchemaDetails": {
        "description": "Specific details for a Mysql database.",
        "properties": {
          "storageEngines": {
            "description": "Optional. Mysql storage engine tables.",
            "items": {
              "$ref": "#/components/schemas/MySqlStorageEngineDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MySqlStorageEngineDetails": {
        "description": "Mysql storage engine tables.",
        "properties": {
          "encryptedTableCount": {
            "description": "Optional. The number of encrypted tables.",
            "format": "int32",
            "type": "integer"
          },
          "engine": {
            "description": "Required. The storage engine.",
            "enum": [
              "ENGINE_UNSPECIFIED",
              "INNODB",
              "MYISAM",
              "MEMORY",
              "CSV",
              "ARCHIVE",
              "BLACKHOLE",
              "NDB",
              "MERGE",
              "FEDERATED",
              "EXAMPLE",
              "OTHER"
            ],
            "type": "string"
          },
          "tableCount": {
            "description": "Optional. The number of tables.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MySqlVariable": {
        "description": "MySql variable.",
        "properties": {
          "category": {
            "description": "Required. The variable category.",
            "type": "string"
          },
          "value": {
            "description": "Required. The variable value.",
            "type": "string"
          },
          "variable": {
            "description": "Required. The variable name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MysqlDatabaseDeployment": {
        "description": "Specific details for a Mysql database deployment.",
        "properties": {
          "plugins": {
            "description": "Optional. List of MySql plugins.",
            "items": {
              "$ref": "#/components/schemas/MySqlPlugin"
            },
            "type": "array"
          },
          "properties": {
            "description": "Optional. List of MySql properties.",
            "items": {
              "$ref": "#/components/schemas/MySqlProperty"
            },
            "type": "array"
          },
          "resourceGroupsCount": {
            "description": "Optional. Number of resource groups.",
            "format": "int32",
            "type": "integer"
          },
          "variables": {
            "description": "Optional. List of MySql variables.",
            "items": {
              "$ref": "#/components/schemas/MySqlVariable"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkAdapterDetails": {
        "description": "Details of network adapter.",
        "properties": {
          "adapterType": {
            "description": "Network adapter type (e.g. VMXNET3).",
            "type": "string"
          },
          "addresses": {
            "$ref": "#/components/schemas/NetworkAddressList",
            "description": "NetworkAddressList"
          },
          "macAddress": {
            "description": "MAC address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkAdapterList": {
        "description": "List of network adapters.",
        "properties": {
          "networkAdapters": {
            "description": "Network adapter descriptions.",
            "items": {
              "$ref": "#/components/schemas/NetworkAdapterDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkAddress": {
        "description": "Details of network address.",
        "properties": {
          "assignment": {
            "description": "Whether DHCP is used to assign addresses.",
            "enum": [
              "ADDRESS_ASSIGNMENT_UNSPECIFIED",
              "ADDRESS_ASSIGNMENT_STATIC",
              "ADDRESS_ASSIGNMENT_DHCP"
            ],
            "type": "string"
          },
          "bcast": {
            "description": "Broadcast address.",
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name.",
            "type": "string"
          },
          "ipAddress": {
            "description": "Assigned or configured IP Address.",
            "type": "string"
          },
          "subnetMask": {
            "description": "Subnet mask.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkAddressList": {
        "description": "List of allocated/assigned network addresses.",
        "properties": {
          "addresses": {
            "description": "Network address entries.",
            "items": {
              "$ref": "#/components/schemas/NetworkAddress"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkConnection": {
        "properties": {
          "localIpAddress": {
            "description": "Local IP address.",
            "type": "string"
          },
          "localPort": {
            "description": "Local port.",
            "format": "int32",
            "type": "integer"
          },
          "pid": {
            "description": "Process ID.",
            "format": "int64",
            "type": "string"
          },
          "processName": {
            "description": "Process or service name.",
            "type": "string"
          },
          "protocol": {
            "description": "Connection protocol (e.g. TCP/UDP).",
            "type": "string"
          },
          "remoteIpAddress": {
            "description": "Remote IP address.",
            "type": "string"
          },
          "remotePort": {
            "description": "Remote port.",
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "description": "Connection state (e.g. CONNECTED).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkConnectionList": {
        "description": "Network connection list.",
        "properties": {
          "entries": {
            "description": "Network connection entries.",
            "items": {
              "$ref": "#/components/schemas/NetworkConnection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkUsageSample": {
        "description": "Network usage sample. Values are across all network interfaces.",
        "properties": {
          "averageEgressBps": {
            "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
            "format": "float",
            "type": "number"
          },
          "averageIngressBps": {
            "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "NfsExport": {
        "description": "NFS export.",
        "properties": {
          "exportDirectory": {
            "description": "The directory being exported.",
            "type": "string"
          },
          "hosts": {
            "description": "The hosts or networks to which the export is being shared.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NfsExportList": {
        "description": "NFS exports.",
        "properties": {
          "entries": {
            "description": "NFS export entries.",
            "items": {
              "$ref": "#/components/schemas/NfsExport"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OpenFileDetails": {
        "description": "Open file Information.",
        "properties": {
          "command": {
            "description": "Opened file command.",
            "type": "string"
          },
          "filePath": {
            "description": "Opened file file path.",
            "type": "string"
          },
          "fileType": {
            "description": "Opened file file type.",
            "type": "string"
          },
          "user": {
            "description": "Opened file user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OpenFileList": {
        "description": "Open file list.",
        "properties": {
          "entries": {
            "description": "Open file details entries.",
            "items": {
              "$ref": "#/components/schemas/OpenFileDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperatingSystemPricingPreferences": {
        "description": "Pricing options for OS images.",
        "properties": {
          "rhel": {
            "$ref": "#/components/schemas/OperatingSystemPricingPreferencesOperatingSystemPricing",
            "description": "Optional. Pricing options for RHEL images."
          },
          "sles": {
            "$ref": "#/components/schemas/OperatingSystemPricingPreferencesOperatingSystemPricing",
            "description": "Optional. Pricing options for SLES images."
          },
          "slesForSap": {
            "$ref": "#/components/schemas/OperatingSystemPricingPreferencesOperatingSystemPricing",
            "description": "Optional. Pricing options for SLES for SAP images."
          },
          "windows": {
            "$ref": "#/components/schemas/OperatingSystemPricingPreferencesOperatingSystemPricing",
            "description": "Optional. Pricing options for Windows images. No commitment plans are available, set it to unspecified."
          }
        },
        "type": "object"
      },
      "OperatingSystemPricingPreferencesOperatingSystemPricing": {
        "description": "Pricing options of an OS image.",
        "properties": {
          "commitmentPlan": {
            "description": "Optional. The plan of commitments for committed use discounts (CUD).",
            "enum": [
              "COMMITMENT_PLAN_UNSPECIFIED",
              "COMMITMENT_PLAN_ON_DEMAND",
              "COMMITMENT_PLAN_1_YEAR",
              "COMMITMENT_PLAN_3_YEAR"
            ],
            "type": "string"
          },
          "licenseType": {
            "description": "Optional. License type for premium images (RHEL, RHEL for SAP, SLES, SLES for SAP, Windows Server).",
            "enum": [
              "LICENSE_TYPE_UNSPECIFIED",
              "LICENSE_TYPE_DEFAULT",
              "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "This resource represents a long-running operation that is the result of a network API call.",
        "properties": {
          "done": {
            "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/Status",
            "description": "The error result of the operation in case of failure or cancellation."
          },
          "metadata": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "type": "object"
          },
          "name": {
            "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "type": "string"
          },
          "response": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "OperationMetadata": {
        "description": "Represents the metadata of the long-running operation.",
        "properties": {
          "apiVersion": {
            "description": "Output only. API version used to start the operation.",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the operation was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "Output only. The time the operation finished running.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "requestedCancellation": {
            "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
            "readOnly": true,
            "type": "boolean"
          },
          "statusMessage": {
            "description": "Output only. Human-readable status of the operation, if any.",
            "readOnly": true,
            "type": "string"
          },
          "target": {
            "description": "Output only. Server-defined resource path for the target of the operation.",
            "readOnly": true,
            "type": "string"
          },
          "verb": {
            "description": "Output only. Name of the verb executed by the operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OutputFile": {
        "description": "Contains a single output file.",
        "properties": {
          "csvOutputFile": {
            "$ref": "#/components/schemas/CsvOutputFile",
            "description": "Output only. CSV output file.",
            "readOnly": true
          },
          "fileSizeBytes": {
            "description": "Output only. File size in bytes.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "xlsxOutputFile": {
            "$ref": "#/components/schemas/XlsxOutputFile",
            "description": "Output only. XLSX output file.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OutputFileList": {
        "description": "Contains a list of output files.",
        "properties": {
          "entries": {
            "description": "List of output files.",
            "items": {
              "$ref": "#/components/schemas/OutputFile"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PayloadFile": {
        "description": "Payload file for inline import job payload.",
        "properties": {
          "data": {
            "description": "The file data.",
            "format": "byte",
            "type": "string"
          },
          "name": {
            "description": "The file name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PerformanceSample": {
        "description": "Performance data sample.",
        "properties": {
          "cpu": {
            "$ref": "#/components/schemas/CpuUsageSample",
            "description": "CPU usage sample."
          },
          "disk": {
            "$ref": "#/components/schemas/DiskUsageSample",
            "description": "Disk usage sample."
          },
          "memory": {
            "$ref": "#/components/schemas/MemoryUsageSample",
            "description": "Memory usage sample."
          },
          "network": {
            "$ref": "#/components/schemas/NetworkUsageSample",
            "description": "Network usage sample."
          },
          "sampleTime": {
            "description": "Time the sample was collected. If omitted, the frame report time will be used.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PhysicalPlatformDetails": {
        "description": "Platform specific details for Physical Machines.",
        "properties": {
          "hyperthreading": {
            "description": "Whether the machine is hyperthreaded.",
            "enum": [
              "HYPERTHREADING_STATUS_UNSPECIFIED",
              "HYPERTHREADING_STATUS_DISABLED",
              "HYPERTHREADING_STATUS_ENABLED"
            ],
            "type": "string"
          },
          "location": {
            "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlatformDetails": {
        "description": "Information about the platform.",
        "properties": {
          "awsEc2Details": {
            "$ref": "#/components/schemas/AwsEc2PlatformDetails",
            "description": "AWS EC2 specific details."
          },
          "azureVmDetails": {
            "$ref": "#/components/schemas/AzureVmPlatformDetails",
            "description": "Azure VM specific details."
          },
          "genericDetails": {
            "$ref": "#/components/schemas/GenericPlatformDetails",
            "description": "Generic platform details."
          },
          "physicalDetails": {
            "$ref": "#/components/schemas/PhysicalPlatformDetails",
            "description": "Physical machines platform details."
          },
          "vmwareDetails": {
            "$ref": "#/components/schemas/VmwarePlatformDetails",
            "description": "VMware specific details."
          }
        },
        "type": "object"
      },
      "PostgreSqlDatabaseDeployment": {
        "description": "Specific details for a PostgreSQL database deployment.",
        "properties": {
          "properties": {
            "description": "Optional. List of PostgreSql properties.",
            "items": {
              "$ref": "#/components/schemas/PostgreSqlProperty"
            },
            "type": "array"
          },
          "settings": {
            "description": "Optional. List of PostgreSql settings.",
            "items": {
              "$ref": "#/components/schemas/PostgreSqlSetting"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PostgreSqlExtension": {
        "description": "PostgreSql extension.",
        "properties": {
          "extension": {
            "description": "Required. The extension name.",
            "type": "string"
          },
          "version": {
            "description": "Required. The extension version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostgreSqlProperty": {
        "description": "PostgreSql property.",
        "properties": {
          "enabled": {
            "description": "Required. The property is enabled.",
            "type": "boolean"
          },
          "numericValue": {
            "description": "Required. The property numeric value.",
            "format": "int64",
            "type": "string"
          },
          "property": {
            "description": "Required. The property name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostgreSqlSchemaDetails": {
        "description": "Specific details for a PostgreSql schema.",
        "properties": {
          "foreignTablesCount": {
            "description": "Optional. PostgreSql foreign tables.",
            "format": "int32",
            "type": "integer"
          },
          "postgresqlExtensions": {
            "description": "Optional. PostgreSql extensions.",
            "items": {
              "$ref": "#/components/schemas/PostgreSqlExtension"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PostgreSqlSetting": {
        "description": "PostgreSql setting.",
        "properties": {
          "boolValue": {
            "description": "Required. The setting boolean value.",
            "type": "boolean"
          },
          "intValue": {
            "description": "Required. The setting int value.",
            "format": "int64",
            "type": "string"
          },
          "realValue": {
            "description": "Required. The setting real value.",
            "format": "float",
            "type": "number"
          },
          "setting": {
            "description": "Required. The setting name.",
            "type": "string"
          },
          "source": {
            "description": "Required. The setting source.",
            "type": "string"
          },
          "stringValue": {
            "description": "Required. The setting string value. Notice that enum values are stored as strings.",
            "type": "string"
          },
          "unit": {
            "description": "Optional. The setting unit.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PreferenceSet": {
        "description": "The preferences that apply to all assets in a given context.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp when the preference set was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "databasePreferences": {
            "$ref": "#/components/schemas/DatabasePreferences",
            "description": "Optional. A set of preferences that applies to all databases in the context."
          },
          "description": {
            "description": "A description of the preference set.",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly display name. Maximum length is 63 characters.",
            "type": "string"
          },
          "name": {
            "description": "Output only. Name of the PreferenceSet.",
            "readOnly": true,
            "type": "string"
          },
          "regionPreferences": {
            "$ref": "#/components/schemas/RegionPreferences",
            "description": "Optional. Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with. If unspecified, VirtualMachinePreferences.RegionPreferences is used."
          },
          "updateTime": {
            "description": "Output only. The timestamp when the preference set was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "virtualMachinePreferences": {
            "$ref": "#/components/schemas/VirtualMachinePreferences",
            "description": "A set of preferences that applies to all virtual machines in the context."
          }
        },
        "type": "object"
      },
      "RegionPreferences": {
        "description": "The user preferences relating to target regions.",
        "properties": {
          "preferredRegions": {
            "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Relation": {
        "description": "Message representing a relation between 2 resource.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp when the relation was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "dstAsset": {
            "description": "Output only. The destination asset name in the relation.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. Identifier. The identifier of the relation.",
            "readOnly": true,
            "type": "string"
          },
          "srcAsset": {
            "description": "Output only. The source asset name in the relation.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Optional. The type of the relation.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "LOGICAL_DATABASE",
              "DATABASE_DEPLOYMENT_HOSTING_SERVER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemoveAssetsFromGroupRequest": {
        "description": "A request to remove assets from a group.",
        "properties": {
          "allowMissing": {
            "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
            "type": "boolean"
          },
          "assets": {
            "$ref": "#/components/schemas/AssetList",
            "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000."
          },
          "requestId": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Report": {
        "description": "Report represents a point-in-time rendering of the ReportConfig results.",
        "properties": {
          "createTime": {
            "description": "Output only. Creation timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Free-text description.",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly display name. Maximum length is 63 characters.",
            "type": "string"
          },
          "name": {
            "description": "Output only. Name of resource.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Report creation state.",
            "enum": [
              "STATE_UNSPECIFIED",
              "PENDING",
              "SUCCEEDED",
              "FAILED"
            ],
            "type": "string"
          },
          "summary": {
            "$ref": "#/components/schemas/ReportSummary",
            "description": "Output only. Summary view of the Report.",
            "readOnly": true
          },
          "type": {
            "description": "Report type.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "TOTAL_COST_OF_OWNERSHIP"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Last update timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportAssetFramesResponse": {
        "description": "A response to a call to `ReportAssetFrame`.",
        "properties": {},
        "type": "object"
      },
      "ReportConfig": {
        "description": "The groups and associated preference sets on which we can generate reports.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp when the resource was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Free-text description.",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly display name. Maximum length is 63 characters.",
            "type": "string"
          },
          "groupPreferencesetAssignments": {
            "description": "Required. Collection of combinations of groups and preference sets.",
            "items": {
              "$ref": "#/components/schemas/ReportConfigGroupPreferenceSetAssignment"
            },
            "type": "array"
          },
          "name": {
            "description": "Output only. Name of resource.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the resource was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportConfigGroupPreferenceSetAssignment": {
        "description": "Represents a combination of a group with a preference set.",
        "properties": {
          "group": {
            "description": "Required. Name of the group.",
            "type": "string"
          },
          "preferenceSet": {
            "description": "Required. Name of the Preference Set.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportSummary": {
        "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
        "properties": {
          "allAssetsStats": {
            "$ref": "#/components/schemas/ReportSummaryAssetAggregateStats",
            "description": "Aggregate statistics for unique assets across all the groups."
          },
          "databaseStats": {
            "$ref": "#/components/schemas/ReportSummaryAssetAggregateStats",
            "description": "Output only. Aggregate statistics for unique database assets across all the groups.",
            "readOnly": true
          },
          "groupFindings": {
            "description": "Findings for each Group included in this report.",
            "items": {
              "$ref": "#/components/schemas/ReportSummaryGroupFinding"
            },
            "type": "array"
          },
          "virtualMachineStats": {
            "$ref": "#/components/schemas/ReportSummaryAssetAggregateStats",
            "description": "Output only. Aggregate statistics for unique virtual machine assets across all the groups.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ReportSummaryAssetAggregateStats": {
        "description": "Aggregate statistics for a collection of assets.",
        "properties": {
          "assetAge": {
            "$ref": "#/components/schemas/ReportSummaryChartData",
            "deprecated": true,
            "description": "Count of assets grouped by age."
          },
          "coreCountHistogram": {
            "$ref": "#/components/schemas/ReportSummaryHistogramChartData",
            "description": "Histogram showing a distribution of logical CPU core counts."
          },
          "databaseTypes": {
            "$ref": "#/components/schemas/ReportSummaryChartData",
            "description": "Output only. Count of assets grouped by database type. Keys here are taken from DatabaseType enum. Only present for databases.",
            "readOnly": true
          },
          "memoryBytesHistogram": {
            "$ref": "#/components/schemas/ReportSummaryHistogramChartData",
            "description": "Histogram showing a distribution of memory sizes."
          },
          "memoryUtilization": {
            "$ref": "#/components/schemas/ReportSummaryChartData",
            "deprecated": true,
            "description": "Total memory split into Used/Free buckets."
          },
          "memoryUtilizationChart": {
            "$ref": "#/components/schemas/ReportSummaryUtilizationChartData",
            "description": "Total memory split into Used/Free buckets."
          },
          "operatingSystem": {
            "$ref": "#/components/schemas/ReportSummaryChartData",
            "description": "Count of assets grouped by Operating System families. Only present for virtual machines."
          },
          "storageBytesHistogram": {
            "$ref": "#/components/schemas/ReportSummaryHistogramChartData",
            "description": "Histogram showing a distribution of storage sizes."
          },
          "storageUtilization": {
            "$ref": "#/components/schemas/ReportSummaryChartData",
            "deprecated": true,
            "description": "Total storage split into Used/Free buckets."
          },
          "storageUtilizationChart": {
            "$ref": "#/components/schemas/ReportSummaryUtilizationChartData",
            "description": "Total memory split into Used/Free buckets."
          },
          "totalAssets": {
            "description": "Count of the number of unique assets in this collection.",
            "format": "int64",
            "type": "string"
          },
          "totalCores": {
            "description": "Sum of the CPU core count of all the assets in this collection.",
            "format": "int64",
            "type": "string"
          },
          "totalMemoryBytes": {
            "description": "Sum of the memory in bytes of all the assets in this collection.",
            "format": "int64",
            "type": "string"
          },
          "totalStorageBytes": {
            "description": "Sum of persistent storage in bytes of all the assets in this collection.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportSummaryChartData": {
        "description": "Describes a collection of data points rendered as a Chart.",
        "properties": {
          "dataPoints": {
            "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
            "items": {
              "$ref": "#/components/schemas/ReportSummaryChartDataDataPoint"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportSummaryChartDataDataPoint": {
        "description": "Describes a single data point in the Chart.",
        "properties": {
          "label": {
            "description": "The X-axis label for this data point.",
            "type": "string"
          },
          "value": {
            "description": "The Y-axis value for this data point.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReportSummaryDatabaseFinding": {
        "description": "DatabaseFinding contains an aggregate costs and shapes for a single database type.",
        "properties": {
          "allocatedAssetCount": {
            "description": "Output only. Number of database assets which were successfully assigned in this finding.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "totalAssets": {
            "description": "Output only. Number of database assets in this finding.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportSummaryGroupFinding": {
        "description": "Summary Findings for a specific Group.",
        "properties": {
          "assetAggregateStats": {
            "$ref": "#/components/schemas/ReportSummaryAssetAggregateStats",
            "description": "Summary statistics for all the assets in this group."
          },
          "assetType": {
            "description": "Output only. Asset type for the group finding.",
            "enum": [
              "ASSET_TYPE_UNSPECIFIED",
              "VIRTUAL_MACHINE",
              "DATABASE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "databaseType": {
            "description": "Output only. Source asset database type for the group finding. Only present for databases.",
            "enum": [
              "DATABASE_TYPE_UNSPECIFIED",
              "SQL_SERVER",
              "MYSQL",
              "POSTGRES"
            ],
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description for this group finding.",
            "type": "string"
          },
          "displayName": {
            "description": "Display Name for this group finding.",
            "type": "string"
          },
          "group": {
            "description": "Output only. Full name of the group.",
            "readOnly": true,
            "type": "string"
          },
          "overlappingAssetCount": {
            "deprecated": true,
            "description": "This field is deprecated, do not rely on it having a value.",
            "format": "int64",
            "type": "string"
          },
          "preferenceSetFindings": {
            "description": "Findings for each of the PreferenceSets for this group.",
            "items": {
              "$ref": "#/components/schemas/ReportSummaryGroupPreferenceSetFinding"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportSummaryGroupPreferenceSetFinding": {
        "description": "Summary Findings for a specific Group/PreferenceSet combination.",
        "properties": {
          "databaseFinding": {
            "$ref": "#/components/schemas/ReportSummaryDatabaseFinding",
            "description": "Output only. Details about databases in this finding. Only present for databases.",
            "readOnly": true
          },
          "description": {
            "description": "Description for the Preference Set.",
            "type": "string"
          },
          "displayName": {
            "description": "Display Name of the Preference Set",
            "type": "string"
          },
          "machineFinding": {
            "$ref": "#/components/schemas/ReportSummaryMachineFinding",
            "description": "Output only. A set of findings that applies to all virtual machines in the input. Only present for virtual machines.",
            "readOnly": true
          },
          "machinePreferences": {
            "$ref": "#/components/schemas/VirtualMachinePreferences",
            "description": "A set of preferences that applies to all machines in the context."
          },
          "monthlyCostCompute": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. Compute monthly cost for this preference set.",
            "readOnly": true
          },
          "monthlyCostDatabaseBackup": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. Backup monthly cost for this preference set. Only present for databases.",
            "readOnly": true
          },
          "monthlyCostDatabaseLicensing": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. Database licensing monthly cost for this preference set. Only present for databases.",
            "readOnly": true
          },
          "monthlyCostGcveProtected": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. GCVE Protected nodes cost for this preference set.",
            "readOnly": true
          },
          "monthlyCostNetworkEgress": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. Network Egress monthly cost for this preference set. Only present for virtual machines.",
            "readOnly": true
          },
          "monthlyCostOsLicense": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. All operating systems licensing monthly cost for this preference set. Only present for virtual machines.",
            "readOnly": true
          },
          "monthlyCostOther": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. Miscellaneous monthly cost for this preference set.",
            "readOnly": true
          },
          "monthlyCostPortableVmwareLicense": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. VMware portable license monthly cost for this preference set. Only present for VMware target with portable license service type. This cost is not paid to google, but is an estimate of license costs paid to VMware.",
            "readOnly": true
          },
          "monthlyCostStorage": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. Storage monthly cost for this preference set.",
            "readOnly": true
          },
          "monthlyCostTotal": {
            "$ref": "#/components/schemas/Money",
            "description": "Output only. Total monthly cost for this preference set.",
            "readOnly": true
          },
          "preferenceSet": {
            "$ref": "#/components/schemas/PreferenceSet",
            "description": "Output only. A copy of the preference set used for this finding.",
            "readOnly": true
          },
          "preferredRegion": {
            "deprecated": true,
            "description": "Target region for this Preference Set",
            "type": "string"
          },
          "pricingTrack": {
            "deprecated": true,
            "description": "Text describing the pricing track specified for this Preference Set",
            "type": "string"
          },
          "soleTenantFinding": {
            "$ref": "#/components/schemas/ReportSummarySoleTenantFinding",
            "description": "A set of findings that applies to Stole-Tenant machines in the input. Only present for virtual machines."
          },
          "topPriority": {
            "deprecated": true,
            "description": "Text describing the business priority specified for this Preference Set",
            "type": "string"
          },
          "vmwareEngineFinding": {
            "$ref": "#/components/schemas/ReportSummaryVMWareEngineFinding",
            "description": "A set of findings that applies to VMWare machines in the input. Only present for virtual machines."
          }
        },
        "type": "object"
      },
      "ReportSummaryHistogramChartData": {
        "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
        "properties": {
          "buckets": {
            "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
            "items": {
              "$ref": "#/components/schemas/ReportSummaryHistogramChartDataBucket"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportSummaryHistogramChartDataBucket": {
        "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
        "properties": {
          "count": {
            "description": "Count of items in the bucket.",
            "format": "int64",
            "type": "string"
          },
          "lowerBound": {
            "description": "Lower bound - inclusive.",
            "format": "int64",
            "type": "string"
          },
          "upperBound": {
            "description": "Upper bound - exclusive.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportSummaryMachineFinding": {
        "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
        "properties": {
          "allocatedAssetCount": {
            "description": "Count of assets which were allocated.",
            "format": "int64",
            "type": "string"
          },
          "allocatedDiskTypes": {
            "description": "Set of disk types allocated to assets.",
            "items": {
              "enum": [
                "PERSISTENT_DISK_TYPE_UNSPECIFIED",
                "PERSISTENT_DISK_TYPE_STANDARD",
                "PERSISTENT_DISK_TYPE_BALANCED",
                "PERSISTENT_DISK_TYPE_SSD"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "allocatedRegions": {
            "description": "Set of regions in which the assets were allocated.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "machineSeriesAllocations": {
            "description": "Distribution of assets based on the Machine Series.",
            "items": {
              "$ref": "#/components/schemas/ReportSummaryMachineSeriesAllocation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportSummaryMachineSeriesAllocation": {
        "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
        "properties": {
          "allocatedAssetCount": {
            "description": "Count of assets allocated to this machine series.",
            "format": "int64",
            "type": "string"
          },
          "machineSeries": {
            "$ref": "#/components/schemas/MachineSeries",
            "description": "The Machine Series (e.g. \"E2\", \"N2\")"
          }
        },
        "type": "object"
      },
      "ReportSummarySoleTenantFinding": {
        "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
        "properties": {
          "allocatedAssetCount": {
            "description": "Count of assets which are allocated",
            "format": "int64",
            "type": "string"
          },
          "allocatedRegions": {
            "description": "Set of regions in which the assets are allocated",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "nodeAllocations": {
            "description": "Set of per-nodetype allocation records",
            "items": {
              "$ref": "#/components/schemas/ReportSummarySoleTenantNodeAllocation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportSummarySoleTenantNodeAllocation": {
        "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
        "properties": {
          "allocatedAssetCount": {
            "description": "Count of assets allocated to these nodes",
            "format": "int64",
            "type": "string"
          },
          "node": {
            "$ref": "#/components/schemas/SoleTenantNodeType",
            "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
          },
          "nodeCount": {
            "description": "Count of this node type to be provisioned",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportSummaryUtilizationChartData": {
        "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
        "properties": {
          "free": {
            "description": "Aggregate value which falls into the \"Free\" bucket.",
            "format": "int64",
            "type": "string"
          },
          "used": {
            "description": "Aggregate value which falls into the \"Used\" bucket.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportSummaryVMWareEngineFinding": {
        "description": "A set of findings that applies to assets destined for VMWare Engine.",
        "properties": {
          "allocatedAssetCount": {
            "description": "Count of assets which are allocated",
            "format": "int64",
            "type": "string"
          },
          "allocatedRegions": {
            "description": "Set of regions in which the assets were allocated",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "nodeAllocations": {
            "description": "Set of per-nodetype allocation records",
            "items": {
              "$ref": "#/components/schemas/ReportSummaryVMWareNodeAllocation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportSummaryVMWareNode": {
        "description": "A VMWare Engine Node",
        "properties": {
          "code": {
            "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportSummaryVMWareNodeAllocation": {
        "description": "Represents assets allocated to a specific VMWare Node type.",
        "properties": {
          "allocatedAssetCount": {
            "description": "Count of assets allocated to these nodes",
            "format": "int64",
            "type": "string"
          },
          "nodeCount": {
            "description": "Count of this node type to be provisioned",
            "format": "int64",
            "type": "string"
          },
          "vmwareNode": {
            "$ref": "#/components/schemas/ReportSummaryVMWareNode",
            "description": "VMWare node type, e.g. \"ve1-standard-72\""
          }
        },
        "type": "object"
      },
      "RunAssetsExportJobRequest": {
        "description": "A request to run an assets export job.",
        "properties": {
          "requestId": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunAssetsExportJobResponse": {
        "description": "Response message for running an assets export job.",
        "properties": {
          "assetsExportJobExecution": {
            "$ref": "#/components/schemas/AssetsExportJobExecution",
            "description": "Output only. Execution status of the assets export operation.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "RunImportJobRequest": {
        "description": "A request to run an import job.",
        "properties": {
          "requestId": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunningProcess": {
        "description": "Guest OS running process details.",
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Process extended attributes.",
            "type": "object"
          },
          "cmdline": {
            "description": "Process full command line.",
            "type": "string"
          },
          "exePath": {
            "description": "Process binary path.",
            "type": "string"
          },
          "pid": {
            "description": "Process ID.",
            "format": "int64",
            "type": "string"
          },
          "user": {
            "description": "User running the process.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunningProcessList": {
        "description": "List of running guest OS processes.",
        "properties": {
          "processes": {
            "description": "Running process entries.",
            "items": {
              "$ref": "#/components/schemas/RunningProcess"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RunningService": {
        "description": "Guest OS running service details.",
        "properties": {
          "cmdline": {
            "description": "Service command line.",
            "type": "string"
          },
          "exePath": {
            "description": "Service binary path.",
            "type": "string"
          },
          "name": {
            "description": "Service name.",
            "type": "string"
          },
          "pid": {
            "description": "Service pid.",
            "format": "int64",
            "type": "string"
          },
          "startMode": {
            "description": "Service start mode (raw, OS-agnostic).",
            "type": "string"
          },
          "state": {
            "description": "Service state (raw, OS-agnostic).",
            "type": "string"
          },
          "status": {
            "description": "Service status.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunningServiceList": {
        "description": "List of running guest OS services.",
        "properties": {
          "services": {
            "description": "Running service entries.",
            "items": {
              "$ref": "#/components/schemas/RunningService"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RuntimeNetworkInfo": {
        "description": "Runtime networking information.",
        "properties": {
          "connections": {
            "$ref": "#/components/schemas/NetworkConnectionList",
            "description": "Network connections."
          },
          "netstat": {
            "description": "Netstat (raw, OS-agnostic).",
            "type": "string"
          },
          "netstatTime": {
            "$ref": "#/components/schemas/DateTime",
            "description": "Netstat time collected."
          }
        },
        "type": "object"
      },
      "Selinux": {
        "description": "SELinux details.",
        "properties": {
          "enabled": {
            "description": "Is SELinux enabled.",
            "type": "boolean"
          },
          "mode": {
            "description": "SELinux mode enforcing / permissive.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SendDiscoveryClientHeartbeatRequest": {
        "description": "A request to send a discovery client heartbeat.",
        "properties": {
          "errors": {
            "description": "Optional. Errors affecting client functionality.",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "type": "array"
          },
          "version": {
            "description": "Optional. Client application version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Settings": {
        "description": "Describes the Migration Center settings related to the project.",
        "properties": {
          "customerConsentForGoogleSalesToAccessMigrationCenter": {
            "description": "Customer consent for Google sales to access their Cloud Migration Center project.",
            "type": "boolean"
          },
          "disableCloudLogging": {
            "description": "Disable Cloud Logging for the Migration Center API. Users are billed for the logs.",
            "type": "boolean"
          },
          "name": {
            "description": "Output only. The name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "preferenceSet": {
            "description": "The preference set used by default for a project.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignedUri": {
        "description": "Contains a signed URI.",
        "properties": {
          "file": {
            "description": "Output only. Name of the file the Signed URI references.",
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "description": "Output only. Download URI for the file.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignedUriDestination": {
        "description": "Signed URI destination configuration.",
        "properties": {
          "fileFormat": {
            "description": "Required. The file format to export.",
            "enum": [
              "FILE_FORMAT_UNSPECIFIED",
              "CSV",
              "XLSX"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignedUris": {
        "description": "Contains a list of Signed URIs.",
        "properties": {
          "signedUris": {
            "description": "Output only. List of signed URIs.",
            "items": {
              "$ref": "#/components/schemas/SignedUri"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SoftwareInsight": {
        "description": "An insight regarding software detected on an asset.",
        "properties": {
          "detectedSoftware": {
            "$ref": "#/components/schemas/DetectedSoftware",
            "description": "Output only. Information about the detected software.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SoleTenancyPreferences": {
        "description": "Preferences concerning Sole Tenancy nodes and VMs.",
        "properties": {
          "commitmentPlan": {
            "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
            "enum": [
              "COMMITMENT_PLAN_UNSPECIFIED",
              "ON_DEMAND",
              "COMMITMENT_1_YEAR",
              "COMMITMENT_3_YEAR",
              "COMMITMENT_FLEXIBLE_1_YEAR",
              "COMMITMENT_FLEXIBLE_3_YEAR"
            ],
            "type": "string"
          },
          "cpuOvercommitRatio": {
            "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
            "format": "double",
            "type": "number"
          },
          "hostMaintenancePolicy": {
            "description": "Sole Tenancy nodes maintenance policy.",
            "enum": [
              "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
              "HOST_MAINTENANCE_POLICY_DEFAULT",
              "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
              "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
            ],
            "type": "string"
          },
          "nodeTypes": {
            "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
            "items": {
              "$ref": "#/components/schemas/SoleTenantNodeType"
            },
            "type": "array"
          },
          "osPricingPreferences": {
            "$ref": "#/components/schemas/OperatingSystemPricingPreferences",
            "description": "Optional. Pricing options for OS images."
          }
        },
        "type": "object"
      },
      "SoleTenantNodeType": {
        "description": "A Sole Tenant node type.",
        "properties": {
          "nodeName": {
            "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Source": {
        "description": "Source represents an object from which asset information is streamed to Migration Center.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp when the source was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Free-text description.",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly display name.",
            "type": "string"
          },
          "errorFrameCount": {
            "description": "Output only. The number of frames that were reported by the source and contained errors.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "isManaged": {
            "description": "If `true`, the source is managed by other service(s).",
            "type": "boolean"
          },
          "name": {
            "description": "Output only. The full name of the source.",
            "readOnly": true,
            "type": "string"
          },
          "pendingFrameCount": {
            "description": "Output only. Number of frames that are still being processed.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "priority": {
            "description": "The information confidence of the source. The higher the value, the higher the confidence.",
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "description": "Output only. The state of the source.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETING",
              "INVALID"
            ],
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Data source type.",
            "enum": [
              "SOURCE_TYPE_UNKNOWN",
              "SOURCE_TYPE_UPLOAD",
              "SOURCE_TYPE_GUEST_OS_SCAN",
              "SOURCE_TYPE_INVENTORY_SCAN",
              "SOURCE_TYPE_CUSTOM",
              "SOURCE_TYPE_DISCOVERY_CLIENT"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the source was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SqlServerDatabaseDeployment": {
        "description": "Specific details for a Microsoft SQL Server database deployment.",
        "properties": {
          "features": {
            "description": "Optional. List of SQL Server features.",
            "items": {
              "$ref": "#/components/schemas/SqlServerFeature"
            },
            "type": "array"
          },
          "serverFlags": {
            "description": "Optional. List of SQL Server server flags.",
            "items": {
              "$ref": "#/components/schemas/SqlServerServerFlag"
            },
            "type": "array"
          },
          "traceFlags": {
            "description": "Optional. List of SQL Server trace flags.",
            "items": {
              "$ref": "#/components/schemas/SqlServerTraceFlag"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SqlServerFeature": {
        "description": "SQL Server feature details.",
        "properties": {
          "enabled": {
            "description": "Required. Field enabled is set when a feature is used on the source deployment.",
            "type": "boolean"
          },
          "featureName": {
            "description": "Required. The feature name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SqlServerSchemaDetails": {
        "description": "Specific details for a SqlServer database.",
        "properties": {
          "clrObjectCount": {
            "description": "Optional. SqlServer number of CLR objects.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SqlServerServerFlag": {
        "description": "SQL Server server flag details.",
        "properties": {
          "serverFlagName": {
            "description": "Required. The server flag name.",
            "type": "string"
          },
          "value": {
            "description": "Required. The server flag value set by the user.",
            "type": "string"
          },
          "valueInUse": {
            "description": "Required. The server flag actual value. If `value_in_use` is different from `value` it means that either the configuration change was not applied or it is an expected behavior. See SQL Server documentation for more details.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SqlServerTraceFlag": {
        "description": "SQL Server trace flag details.",
        "properties": {
          "scope": {
            "description": "Required. The trace flag scope.",
            "enum": [
              "SCOPE_UNSPECIFIED",
              "OFF",
              "GLOBAL",
              "SESSION"
            ],
            "type": "string"
          },
          "traceFlagName": {
            "description": "Required. The trace flag name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimeZone": {
        "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
        "properties": {
          "id": {
            "description": "IANA Time Zone Database time zone. For example \"America/New_York\".",
            "type": "string"
          },
          "version": {
            "description": "Optional. IANA Time Zone Database version number. For example \"2019a\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateAssetRequest": {
        "description": "A request to update an asset.",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset",
            "description": "Required. The resource being updated."
          },
          "requestId": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "updateMask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UploadFileInfo": {
        "description": "A resource that contains a URI to which a data file can be uploaded.",
        "properties": {
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. The headers that were used to sign the URL.",
            "readOnly": true,
            "type": "object"
          },
          "signedUri": {
            "description": "Output only. Upload URI for the file.",
            "readOnly": true,
            "type": "string"
          },
          "uriExpirationTime": {
            "description": "Output only. Expiration time of the upload URI.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "VMwareEngineMachinePreferences": {
        "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations for VMware Engine. Not all machine types are available in all zones and regions.",
        "properties": {
          "allowedMachineSeries": {
            "description": "Optional. VMware Engine on Google Cloud machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
            "items": {
              "$ref": "#/components/schemas/MachineSeries"
            },
            "type": "array"
          },
          "protectedNodes": {
            "description": "Optional. Whether to use VMware Engine Protected offering.",
            "enum": [
              "PROTECTED_NODES_UNSPECIFIED",
              "PROTECTED_NODES_ENABLED",
              "PROTECTED_NODES_DISABLED"
            ],
            "type": "string"
          },
          "storageOnlyNodes": {
            "description": "Optional. Whether to use storage-only nodes, if those are available.",
            "enum": [
              "STORAGE_ONLY_NODES_UNSPECIFIED",
              "STORAGE_ONLY_NODES_ENABLED",
              "STORAGE_ONLY_NODES_DISABLED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidateImportJobRequest": {
        "description": "A request to validate an import job.",
        "properties": {
          "requestId": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidationReport": {
        "description": "A resource that aggregates errors across import job files.",
        "properties": {
          "fileValidations": {
            "description": "List of errors found in files.",
            "items": {
              "$ref": "#/components/schemas/FileValidationReport"
            },
            "type": "array"
          },
          "jobErrors": {
            "description": "List of job level errors.",
            "items": {
              "$ref": "#/components/schemas/ImportError"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VirtualMachineArchitectureDetails": {
        "description": "Details of the VM architecture.",
        "properties": {
          "bios": {
            "$ref": "#/components/schemas/BiosDetails",
            "description": "BIOS Details."
          },
          "cpuArchitecture": {
            "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
            "type": "string"
          },
          "cpuManufacturer": {
            "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\".",
            "type": "string"
          },
          "cpuName": {
            "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
            "type": "string"
          },
          "cpuSocketCount": {
            "description": "Number of processor sockets allocated to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "cpuThreadCount": {
            "deprecated": true,
            "description": "Deprecated: use VirtualMachineDetails.core_count instead. Number of CPU threads allocated to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "firmware": {
            "description": "Firmware (BIOS/efi).",
            "type": "string"
          },
          "hyperthreading": {
            "description": "CPU hyperthreading support.",
            "enum": [
              "HYPER_THREADING_UNSPECIFIED",
              "HYPER_THREADING_DISABLED",
              "HYPER_THREADING_ENABLED"
            ],
            "type": "string"
          },
          "vendor": {
            "description": "Hardware vendor.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualMachineDetails": {
        "description": "Details of a VirtualMachine.",
        "properties": {
          "coreCount": {
            "description": "Number of logical CPU cores in the VirtualMachine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "createTime": {
            "description": "VM creation timestamp.",
            "format": "google-datetime",
            "type": "string"
          },
          "diskPartitions": {
            "$ref": "#/components/schemas/DiskPartitionDetails",
            "description": "Optional. Disk partitions details. Note: Partitions are not necessarily mounted on local disks and therefore might not have a one-to-one correspondence with local disks."
          },
          "guestOs": {
            "$ref": "#/components/schemas/GuestOsDetails",
            "description": "Guest OS information."
          },
          "memoryMb": {
            "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "osFamily": {
            "description": "What family the OS belong to, if known.",
            "enum": [
              "OS_FAMILY_UNKNOWN",
              "OS_FAMILY_WINDOWS",
              "OS_FAMILY_LINUX",
              "OS_FAMILY_UNIX"
            ],
            "type": "string"
          },
          "osName": {
            "description": "The name of the operating system running on the VirtualMachine.",
            "type": "string"
          },
          "osVersion": {
            "description": "The version of the operating system running on the virtual machine.",
            "type": "string"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformDetails",
            "description": "Platform information."
          },
          "powerState": {
            "description": "Power state of VM (poweredOn or poweredOff).",
            "type": "string"
          },
          "vcenterFolder": {
            "description": "Folder name in vCenter where asset resides.",
            "type": "string"
          },
          "vcenterUrl": {
            "description": "vCenter URL used in collection.",
            "type": "string"
          },
          "vcenterVmId": {
            "description": "vCenter VM ID.",
            "type": "string"
          },
          "vmArchitecture": {
            "$ref": "#/components/schemas/VirtualMachineArchitectureDetails",
            "description": "VM architecture details (vendor, cpu arch)."
          },
          "vmDisks": {
            "$ref": "#/components/schemas/VirtualMachineDiskDetails",
            "description": "VM disk details."
          },
          "vmName": {
            "description": "Virtual Machine display name.",
            "type": "string"
          },
          "vmNetwork": {
            "$ref": "#/components/schemas/VirtualMachineNetworkDetails",
            "description": "VM network details."
          },
          "vmUuid": {
            "description": "Virtual Machine unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualMachineDiskDetails": {
        "description": "Details of VM disks.",
        "properties": {
          "disks": {
            "$ref": "#/components/schemas/DiskEntryList",
            "description": "List of disks."
          },
          "hddTotalCapacityBytes": {
            "description": "Disk total Capacity.",
            "format": "int64",
            "type": "string"
          },
          "hddTotalFreeBytes": {
            "description": "Total Disk Free Space.",
            "format": "int64",
            "type": "string"
          },
          "lsblkJson": {
            "description": "Raw lsblk output in json.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualMachineNetworkDetails": {
        "description": "Details of network adapters and settings.",
        "properties": {
          "defaultGw": {
            "description": "Default gateway address.",
            "type": "string"
          },
          "networkAdapters": {
            "$ref": "#/components/schemas/NetworkAdapterList",
            "description": "List of network adapters."
          },
          "primaryIpAddress": {
            "description": "IP address of the machine.",
            "type": "string"
          },
          "primaryMacAddress": {
            "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
            "type": "string"
          },
          "publicIpAddress": {
            "description": "Public IP address of the machine.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualMachinePreferences": {
        "description": "VirtualMachinePreferences enables you to create sets of preferences, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
        "properties": {
          "commitmentPlan": {
            "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
            "enum": [
              "COMMITMENT_PLAN_UNSPECIFIED",
              "COMMITMENT_PLAN_NONE",
              "COMMITMENT_PLAN_ONE_YEAR",
              "COMMITMENT_PLAN_THREE_YEARS",
              "COMMITMENT_PLAN_FLEXIBLE_ONE_YEAR",
              "COMMITMENT_PLAN_FLEXIBLE_THREE_YEARS"
            ],
            "type": "string"
          },
          "computeEnginePreferences": {
            "$ref": "#/components/schemas/ComputeEnginePreferences",
            "description": "Optional. Compute Engine preferences concern insights and recommendations for Compute Engine target."
          },
          "networkCostParameters": {
            "$ref": "#/components/schemas/VirtualMachinePreferencesNetworkCostParameters",
            "description": "Optional. Parameters that affect network cost estimations. If not set, default values will be used for the parameters."
          },
          "regionPreferences": {
            "$ref": "#/components/schemas/RegionPreferences",
            "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with. If PreferenceSet.RegionPreferences is specified, it overrides this field."
          },
          "sizingOptimizationCustomParameters": {
            "$ref": "#/components/schemas/VirtualMachinePreferencesSizingOptimizationCustomParameters",
            "description": "Optional. Custom data to use for sizing optimizations. Relevant when SizingOptimizationStrategy is set to \"custom\"."
          },
          "sizingOptimizationStrategy": {
            "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
            "enum": [
              "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
              "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
              "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
              "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",
              "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
            ],
            "type": "string"
          },
          "soleTenancyPreferences": {
            "$ref": "#/components/schemas/SoleTenancyPreferences",
            "description": "Preferences concerning Sole Tenant nodes and virtual machines."
          },
          "targetProduct": {
            "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
            "enum": [
              "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
              "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
              "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
              "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
            ],
            "type": "string"
          },
          "vmwareEnginePreferences": {
            "$ref": "#/components/schemas/VmwareEnginePreferences",
            "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine."
          }
        },
        "type": "object"
      },
      "VirtualMachinePreferencesNetworkCostParameters": {
        "description": "Parameters that affect network cost estimations.",
        "properties": {
          "estimatedEgressTrafficPercentage": {
            "description": "Optional. An estimated percentage of priced outbound traffic (egress traffic) from the measured outbound traffic. Must be in the interval [0, 100].",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VirtualMachinePreferencesSizingOptimizationCustomParameters": {
        "description": "Custom data to use for sizing optimizations.",
        "properties": {
          "aggregationMethod": {
            "description": "Optional. Type of statistical aggregation of a resource utilization data, on which to base the sizing metrics.",
            "enum": [
              "AGGREGATION_METHOD_UNSPECIFIED",
              "AGGREGATION_METHOD_AVERAGE",
              "AGGREGATION_METHOD_MEDIAN",
              "AGGREGATION_METHOD_NINETY_FIFTH_PERCENTILE",
              "AGGREGATION_METHOD_PEAK"
            ],
            "type": "string"
          },
          "cpuUsagePercentage": {
            "description": "Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default value).",
            "format": "int32",
            "type": "integer"
          },
          "memoryUsagePercentage": {
            "description": "Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for default value).",
            "format": "int32",
            "type": "integer"
          },
          "storageMultiplier": {
            "description": "Optional. Desired increase factor of storage, relative to currently used storage. Must be in the interval [1.0, 2.0] (or 0 for default value).",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "VmwareDiskConfig": {
        "description": "VMware disk config details.",
        "properties": {
          "backingType": {
            "description": "VMDK backing type.",
            "enum": [
              "BACKING_TYPE_UNSPECIFIED",
              "BACKING_TYPE_FLAT_V1",
              "BACKING_TYPE_FLAT_V2",
              "BACKING_TYPE_PMEM",
              "BACKING_TYPE_RDM_V1",
              "BACKING_TYPE_RDM_V2",
              "BACKING_TYPE_SESPARSE",
              "BACKING_TYPE_SESPARSE_V1",
              "BACKING_TYPE_SESPARSE_V2"
            ],
            "type": "string"
          },
          "rdmCompatibilityMode": {
            "description": "RDM compatibility mode.",
            "type": "string"
          },
          "shared": {
            "description": "Is VMDK shared with other VMs.",
            "type": "boolean"
          },
          "vmdkDiskMode": {
            "description": "VMDK disk mode.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VmwareEngineMigrationTarget": {
        "description": "VMWare engine migration target.",
        "properties": {},
        "type": "object"
      },
      "VmwareEnginePreferences": {
        "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
        "properties": {
          "commitmentPlan": {
            "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
            "enum": [
              "COMMITMENT_PLAN_UNSPECIFIED",
              "ON_DEMAND",
              "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
              "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
              "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
              "COMMITMENT_3_YEAR_UPFRONT_PAYMENT",
              "COMMITMENT_FLEXIBLE_3_YEAR_MONTHLY_PAYMENTS",
              "COMMITMENT_FLEXIBLE_3_YEAR_UPFRONT_PAYMENT"
            ],
            "type": "string"
          },
          "cpuOvercommitRatio": {
            "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
            "format": "double",
            "type": "number"
          },
          "licenseDiscountPercentage": {
            "description": "Optional. Discount percentage for the license type offered to you by Broadcom. Must be between 0 and 100. Only valid when service_type is set to SERVICE_TYPE_PORTABLE_LICENSE.",
            "format": "float",
            "type": "number"
          },
          "machinePreferences": {
            "$ref": "#/components/schemas/VMwareEngineMachinePreferences",
            "description": "Optional. Preferences concerning the machine types to consider on Google Cloud VMware Engine."
          },
          "memoryOvercommitRatio": {
            "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
            "format": "double",
            "type": "number"
          },
          "serviceType": {
            "description": "Optional. VMWare Service Type (Fully Licensed or Portable License).",
            "enum": [
              "SERVICE_TYPE_UNSPECIFIED",
              "SERVICE_TYPE_FULLY_LICENSED",
              "SERVICE_TYPE_PORTABLE_LICENSE"
            ],
            "type": "string"
          },
          "storageDeduplicationCompressionRatio": {
            "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "VmwarePlatformDetails": {
        "description": "VMware specific details.",
        "properties": {
          "esxHyperthreading": {
            "description": "Whether the ESX is hyperthreaded.",
            "enum": [
              "HYPERTHREADING_STATUS_UNSPECIFIED",
              "HYPERTHREADING_STATUS_DISABLED",
              "HYPERTHREADING_STATUS_ENABLED"
            ],
            "type": "string"
          },
          "esxVersion": {
            "description": "ESX version.",
            "type": "string"
          },
          "osid": {
            "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
            "type": "string"
          },
          "vcenterVersion": {
            "description": "vCenter version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "XlsxOutputFile": {
        "description": "Contains a single output file of type XLSX.",
        "properties": {
          "signedUri": {
            "$ref": "#/components/schemas/SignedUri",
            "description": "Output only. Signed URI destination.",
            "readOnly": true
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "description": "Oauth 2.0 implicit authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-platform": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
            }
          }
        },
        "type": "oauth2"
      },
      "Oauth2c": {
        "description": "Oauth 2.0 accessCode authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-platform": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
            },
            "tokenUrl": "https://accounts.google.com/o/oauth2/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "tags": [
    {
      "name": "projects"
    }
  ],
  "externalDocs": {
    "url": "https://cloud.google.com/migration-center"
  }
}