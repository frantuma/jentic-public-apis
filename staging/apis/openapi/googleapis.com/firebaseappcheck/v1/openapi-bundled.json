{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Firebase App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Firebase App Check API",
    "version": "v1",
    "x-jentic-source-url": "https://firebaseappcheck.googleapis.com/$discovery/rest?version=v1"
  },
  "servers": [
    {
      "url": "https://firebaseappcheck.googleapis.com/"
    }
  ],
  "paths": {
    "/v1/{+app}:exchangeAppAttestAssertion": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Accepts an App Attest assertion and an artifact previously obtained from ExchangeAppAttestAttestation and verifies those with Apple. If valid, returns an AppCheckToken.",
        "operationId": "firebaseappcheck.projects.apps.exchangeAppAttestAssertion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangeAppAttestAttestation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Accepts an App Attest CBOR attestation and verifies it with Apple using your preconfigured team and bundle IDs. If valid, returns an attestation artifact that can later be exchanged for an AppCheckToken using ExchangeAppAttestAssertion. For convenience and performance, this method's response object will also contain an AppCheckToken (if the verification is successful).",
        "operationId": "firebaseappcheck.projects.apps.exchangeAppAttestAttestation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangeCustomToken": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Validates a custom token signed using your project's Admin SDK service account credentials. If valid, returns an AppCheckToken.",
        "operationId": "firebaseappcheck.projects.apps.exchangeCustomToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangeDebugToken": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Validates a debug token secret that you have previously created using CreateDebugToken. If valid, returns an AppCheckToken. Note that a restrictive quota is enforced on this method to prevent accidental exposure of the app to abuse.",
        "operationId": "firebaseappcheck.projects.apps.exchangeDebugToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangeDeviceCheckToken": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Accepts a [`device_token`](https://developer.apple.com/documentation/devicecheck/dcdevice) issued by DeviceCheck, and attempts to validate it with Apple. If valid, returns an AppCheckToken.",
        "operationId": "firebaseappcheck.projects.apps.exchangeDeviceCheckToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangePlayIntegrityToken": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the Android app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Validates an [integrity verdict response token from Play Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify). If valid, returns an AppCheckToken.",
        "operationId": "firebaseappcheck.projects.apps.exchangePlayIntegrityToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangeRecaptchaEnterpriseToken": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the web app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Validates a [reCAPTCHA Enterprise response token](https://cloud.google.com/recaptcha-enterprise/docs/create-assessment#retrieve_token). If valid, returns an AppCheckToken.",
        "operationId": "firebaseappcheck.projects.apps.exchangeRecaptchaEnterpriseToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangeRecaptchaV3Token": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the web app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Validates a [reCAPTCHA v3 response token](https://developers.google.com/recaptcha/docs/v3). If valid, returns an AppCheckToken.",
        "operationId": "firebaseappcheck.projects.apps.exchangeRecaptchaV3Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:exchangeSafetyNetToken": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the Android app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Validates a [SafetyNet token](https://developer.android.com/training/safetynet/attestation#request-attestation-step). If valid, returns an AppCheckToken.",
        "operationId": "firebaseappcheck.projects.apps.exchangeSafetyNetToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:generateAppAttestChallenge": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Generates a challenge that protects the integrity of an immediately following call to ExchangeAppAttestAttestation or ExchangeAppAttestAssertion. A challenge should not be reused for multiple calls.",
        "operationId": "firebaseappcheck.projects.apps.generateAppAttestChallenge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+app}:generatePlayIntegrityChallenge": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
            "in": "path",
            "name": "app",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Generates a challenge that protects the integrity of an immediately following integrity verdict request to the Play Integrity API. The next call to ExchangePlayIntegrityToken using the resulting integrity token will verify the presence and validity of the challenge. A challenge should not be reused for multiple calls.",
        "operationId": "firebaseappcheck.projects.apps.generatePlayIntegrityChallenge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+name}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the DebugToken to delete, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The checksum to be validated against the current ResourcePolicy, to ensure the client has an up-to-date value before proceeding. This checksum is computed by the server based on the values of fields in the ResourcePolicy object, and can be obtained from the ResourcePolicy object received from the last CreateResourcePolicy, GetResourcePolicy, ListResourcePolicies, UpdateResourcePolicy, or BatchUpdateResourcePolicies call. This etag is strongly validated as defined by RFC 7232.",
            "in": "query",
            "name": "etag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleProtobufEmpty"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Deletes the specified DebugToken. A deleted debug token cannot be used to exchange for an App Check token. Use this method when you suspect the secret `token` has been compromised or when you no longer need the debug token.",
        "operationId": "firebaseappcheck.projects.apps.debugTokens.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "Required. The relative resource name to the public JWK set. Must always be exactly the string `jwks`.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1PublicJwkSet"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "jwks"
        ],
        "description": "Returns a public JWK set as specified by [RFC 7517](https://tools.ietf.org/html/rfc7517) that can be used to verify App Check tokens. Exactly one of the public keys in the returned set will successfully validate any App Check token that is currently valid.",
        "operationId": "firebaseappcheck.jwks.get"
      },
      "patch": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. A comma-separated list of names of fields in the RecaptchaV3Config to update. Example: `site_secret`.",
            "in": "query",
            "name": "updateMask",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Updates the RecaptchaV3Config for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange reCAPTCHA V3 tokens for App Check tokens. For security reasons, the `site_secret` field is never populated in the response.",
        "operationId": "firebaseappcheck.projects.apps.recaptchaV3Config.patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config"
              }
            }
          }
        }
      }
    },
    "/v1/{+parent}/apps/-/appAttestConfig:batchGet": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The parent project name shared by all AppAttestConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The relative resource names of the AppAttestConfigs to retrieve, in the format ``` projects/{project_number}/apps/{app_id}/appAttestConfig ``` A maximum of 100 objects can be retrieved in a batch.",
            "explode": true,
            "in": "query",
            "name": "names",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically gets the AppAttestConfigs for the specified list of apps.",
        "operationId": "firebaseappcheck.projects.apps.appAttestConfig.batchGet"
      }
    },
    "/v1/{+parent}/apps/-/deviceCheckConfig:batchGet": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The parent project name shared by all DeviceCheckConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The relative resource names of the DeviceCheckConfigs to retrieve, in the format ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ``` A maximum of 100 objects can be retrieved in a batch.",
            "explode": true,
            "in": "query",
            "name": "names",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically gets the DeviceCheckConfigs for the specified list of apps. For security reasons, the `private_key` field is never populated in the response.",
        "operationId": "firebaseappcheck.projects.apps.deviceCheckConfig.batchGet"
      }
    },
    "/v1/{+parent}/apps/-/playIntegrityConfig:batchGet": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The parent project name shared by all PlayIntegrityConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The relative resource names of the PlayIntegrityConfigs to retrieve, in the format ``` projects/{project_number}/apps/{app_id}/playIntegrityConfig ``` A maximum of 100 objects can be retrieved in a batch.",
            "explode": true,
            "in": "query",
            "name": "names",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically gets the PlayIntegrityConfigs for the specified list of apps.",
        "operationId": "firebaseappcheck.projects.apps.playIntegrityConfig.batchGet"
      }
    },
    "/v1/{+parent}/apps/-/recaptchaEnterpriseConfig:batchGet": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The parent project name shared by all RecaptchaEnterpriseConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The relative resource names of the RecaptchaEnterpriseConfigs to retrieve, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ``` A maximum of 100 objects can be retrieved in a batch.",
            "explode": true,
            "in": "query",
            "name": "names",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically gets the RecaptchaEnterpriseConfigs for the specified list of apps.",
        "operationId": "firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.batchGet"
      }
    },
    "/v1/{+parent}/apps/-/recaptchaV3Config:batchGet": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The parent project name shared by all RecaptchaV3Configs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The relative resource names of the RecaptchaV3Configs to retrieve, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ``` A maximum of 100 objects can be retrieved in a batch.",
            "explode": true,
            "in": "query",
            "name": "names",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically gets the RecaptchaV3Configs for the specified list of apps. For security reasons, the `site_secret` field is never populated in the response.",
        "operationId": "firebaseappcheck.projects.apps.recaptchaV3Config.batchGet"
      }
    },
    "/v1/{+parent}/apps/-/safetyNetConfig:batchGet": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The parent project name shared by all SafetyNetConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. The relative resource names of the SafetyNetConfigs to retrieve, in the format ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ``` A maximum of 100 objects can be retrieved in a batch.",
            "explode": true,
            "in": "query",
            "name": "names",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically gets the SafetyNetConfigs for the specified list of apps.",
        "operationId": "firebaseappcheck.projects.apps.safetyNetConfig.batchGet"
      }
    },
    "/v1/{+parent}/debugTokens": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the parent app for which to list each associated DebugToken, in the format: ``` projects/{project_number}/apps/{app_id} ```",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of DebugTokens to return in the response. Note that an app can have at most 20 debug tokens. The server may return fewer than this at its own discretion. If no value is specified (or too large a value is specified), the server will impose its own limit.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Token returned from a previous call to ListDebugTokens indicating where in the set of DebugTokens to resume listing. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDebugTokens must match the call that provided the page token; if they do not match, the result is undefined.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ListDebugTokensResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all DebugTokens for the specified app. For security reasons, the `token` field is never populated in the response.",
        "operationId": "firebaseappcheck.projects.apps.debugTokens.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the parent app in which the specified DebugToken will be created, in the format: ``` projects/{project_number}/apps/{app_id} ```",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1DebugToken"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates a new DebugToken for the specified app. For security reasons, after the creation operation completes, the `token` field cannot be updated or retrieved, but you can revoke the debug token using DeleteDebugToken. Each app can have a maximum of 20 debug tokens.",
        "operationId": "firebaseappcheck.projects.apps.debugTokens.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1DebugToken"
              }
            }
          }
        }
      }
    },
    "/v1/{+parent}/resourcePolicies": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the parent Service for which to list each associated ResourcePolicy, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `oauth2.googleapis.com` (Google Identity for iOS)",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filters the results by the specified rule. For the exact syntax of this field, please consult the [AIP-160](https://google.aip.dev/160) standard. Currently, since the only fields in the ResourcePolicy resource are the scalar fields `enforcement_mode` and `target_resource`, this method does not support the traversal operator (`.`) or the has operator (`:`). Here are some examples of valid filters: * `enforcement_mode = ENFORCED` * `target_resource = \"//oauth2.googleapis.com/projects/12345/oauthClients/\"` * `enforcement_mode = ENFORCED AND target_resource = \"//oauth2.googleapis.com/projects/12345/oauthClients/\"`",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of ResourcePolicy objects to return in the response. The server may return fewer than this at its own discretion. If no value is specified (or too large a value is specified), the server will impose its own limit.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Token returned from a previous call to ListResourcePolicies indicating where in the set of ResourcePolicy objects to resume listing. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListResourcePolicies must match the call that provided the page token; if they do not match, the result is undefined.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ListResourcePoliciesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all ResourcePolicy configurations for the specified project and service.",
        "operationId": "firebaseappcheck.projects.services.resourcePolicies.list"
      },
      "post": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the parent Service in which the specified ResourcePolicy will be created, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `oauth2.googleapis.com` (Google Identity for iOS)",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Creates the specified ResourcePolicy configuration.",
        "operationId": "firebaseappcheck.projects.services.resourcePolicies.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy"
              }
            }
          }
        }
      }
    },
    "/v1/{+parent}/resourcePolicies:batchUpdate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The parent service name, in the format ``` projects/{project_number}/services/{service_id} ``` The parent collection in the `name` field of any resource being updated must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically updates the specified ResourcePolicy configurations.",
        "operationId": "firebaseappcheck.projects.services.resourcePolicies.batchUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesRequest"
              }
            }
          }
        }
      }
    },
    "/v1/{+parent}/services": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The relative resource name of the parent project for which to list each associated Service, in the format: ``` projects/{project_number} ```",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of Services to return in the response. Only explicitly configured services are returned. The server may return fewer than this at its own discretion. If no value is specified (or too large a value is specified), the server will impose its own limit.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Token returned from a previous call to ListServices indicating where in the set of Services to resume listing. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListServices must match the call that provided the page token; if they do not match, the result is undefined.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ListServicesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists all Service configurations for the specified project. Only Services which were explicitly configured using UpdateService or BatchUpdateServices will be returned.",
        "operationId": "firebaseappcheck.projects.services.list"
      }
    },
    "/v1/{+parent}/services:batchUpdate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "description": "Required. The parent project name shared by all Service configurations being updated, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being updated must match this field, or the entire batch fails.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateServicesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Atomically updates the specified Service configurations.",
        "operationId": "firebaseappcheck.projects.services.batchUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateServicesRequest"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "_.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "schema": {
          "enum": [
            "1",
            "2"
          ],
          "type": "string"
        }
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "schema": {
          "type": "string"
        }
      },
      "alt": {
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "schema": {
          "default": "json",
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "type": "string"
        }
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        }
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "schema": {
          "type": "string"
        }
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "schema": {
          "type": "string"
        }
      },
      "prettyPrint": {
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "default": true,
          "type": "boolean"
        }
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "schema": {
          "type": "string"
        }
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "schema": {
          "type": "string"
        }
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "GoogleFirebaseAppcheckV1AppAttestConfig": {
        "description": "An app's App Attest configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangeAppAttestAttestation and ExchangeAppAttestAssertion, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the App Attest configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/appAttestConfig ```",
            "type": "string"
          },
          "tokenTtl": {
            "description": "Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1AppCheckToken": {
        "description": "Encapsulates an *App Check token*, which are used to access backend services protected by App Check.",
        "properties": {
          "token": {
            "description": "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and GCP project. This token is used to access Google services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK or third-party libraries.",
            "type": "string"
          },
          "ttl": {
            "description": "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse": {
        "description": "Response message for the BatchGetAppAttestConfigs method.",
        "properties": {
          "configs": {
            "description": "AppAttestConfigs retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse": {
        "description": "Response message for the BatchGetDeviceCheckConfigs method.",
        "properties": {
          "configs": {
            "description": "DeviceCheckConfigs retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse": {
        "description": "Response message for the BatchGetPlayIntegrityConfigs method.",
        "properties": {
          "configs": {
            "description": "PlayIntegrityConfigs retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse": {
        "description": "Response message for the BatchGetRecaptchaEnterpriseConfigs method.",
        "properties": {
          "configs": {
            "description": "RecaptchaEnterpriseConfigs retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse": {
        "description": "Response message for the BatchGetRecaptchaV3Configs method.",
        "properties": {
          "configs": {
            "description": "RecaptchaV3Configs retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse": {
        "deprecated": true,
        "description": "Response message for the BatchGetSafetyNetConfigs method.",
        "properties": {
          "configs": {
            "description": "SafetyNetConfigs retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesRequest": {
        "description": "Request message for the BatchUpdateResourcePolicies method.",
        "properties": {
          "requests": {
            "description": "Required. The request messages specifying the ResourcePolicy objects to update. A maximum of 100 objects can be updated in a batch.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1UpdateResourcePolicyRequest"
            },
            "type": "array"
          },
          "updateMask": {
            "description": "Optional. A comma-separated list of names of fields in the ResourcePolicy objects to update. Example: `enforcement_mode`. If this field is present, the `update_mask` field in the UpdateResourcePolicyRequest messages must all match this field, or the entire batch fails and no updates will be committed.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesResponse": {
        "description": "Response message for the BatchUpdateResourcePolicies method.",
        "properties": {
          "resourcePolicies": {
            "description": "ResourcePolicy objects after the updates have been applied.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchUpdateServicesRequest": {
        "description": "Request message for the BatchUpdateServices method.",
        "properties": {
          "requests": {
            "description": "Required. The request messages specifying the Services to update. A maximum of 100 objects can be updated in a batch.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1UpdateServiceRequest"
            },
            "type": "array"
          },
          "updateMask": {
            "description": "Optional. A comma-separated list of names of fields in the Services to update. Example: `display_name`. If the `update_mask` field is set in both this request and any of the UpdateServiceRequest messages, they must match or the entire batch fails and no updates will be committed.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1BatchUpdateServicesResponse": {
        "description": "Response message for the BatchUpdateServices method.",
        "properties": {
          "services": {
            "description": "Service objects after the updates have been applied.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1Service"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1DebugToken": {
        "description": "A *debug token* is a secret used during the development or integration testing of an app. It essentially allows the development or integration testing to bypass app attestation while still allowing App Check to enforce protection on supported production Firebase services.",
        "properties": {
          "displayName": {
            "description": "Required. A human readable display name used to identify this debug token.",
            "type": "string"
          },
          "name": {
            "description": "Required. The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```",
            "type": "string"
          },
          "token": {
            "description": "Required. Input only. Immutable. The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. This field is immutable once set, and cannot be provided during an UpdateDebugToken request. You can, however, delete this debug token using DeleteDebugToken to revoke it. For security reasons, this field will never be populated in any response.",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this debug token was most recently updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1DeviceCheckConfig": {
        "description": "An app's DeviceCheck configuration object. This configuration is used by ExchangeDeviceCheckToken to validate device tokens issued to apps by DeviceCheck. It also controls certain properties of the returned `AppCheckToken`, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).",
        "properties": {
          "keyId": {
            "description": "Required. The key identifier of a private key enabled with DeviceCheck, created in your Apple Developer account.",
            "type": "string"
          },
          "name": {
            "description": "Required. The relative resource name of the DeviceCheck configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ```",
            "type": "string"
          },
          "privateKey": {
            "description": "Required. Input only. The contents of the private key (`.p8`) file associated with the key specified by `key_id`. For security reasons, this field will never be populated in any response.",
            "type": "string"
          },
          "privateKeySet": {
            "description": "Output only. Whether the `private_key` field was previously set. Since we will never return the `private_key` field, this field is the only way to find out whether it was previously set.",
            "readOnly": true,
            "type": "boolean"
          },
          "tokenTtl": {
            "description": "Specifies the duration for which App Check tokens exchanged from DeviceCheck tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest": {
        "description": "Request message for the ExchangeAppAttestAssertion method.",
        "properties": {
          "artifact": {
            "description": "Required. The artifact returned by a previous call to ExchangeAppAttestAttestation.",
            "format": "byte",
            "type": "string"
          },
          "assertion": {
            "description": "Required. The CBOR-encoded assertion returned by the client-side App Attest API.",
            "format": "byte",
            "type": "string"
          },
          "challenge": {
            "description": "Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.",
            "format": "byte",
            "type": "string"
          },
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest": {
        "description": "Request message for the ExchangeAppAttestAttestation method.",
        "properties": {
          "attestationStatement": {
            "description": "Required. The App Attest statement returned by the client-side App Attest API. This is a base64url encoded CBOR object in the JSON response.",
            "format": "byte",
            "type": "string"
          },
          "challenge": {
            "description": "Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.",
            "format": "byte",
            "type": "string"
          },
          "keyId": {
            "description": "Required. The key ID generated by App Attest for the client app.",
            "format": "byte",
            "type": "string"
          },
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse": {
        "description": "Response message for the ExchangeAppAttestAttestation method.",
        "properties": {
          "appCheckToken": {
            "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken",
            "description": "Encapsulates an App Check token."
          },
          "artifact": {
            "description": "An artifact that can be used in future calls to ExchangeAppAttestAssertion.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest": {
        "description": "Request message for the ExchangeCustomToken method.",
        "properties": {
          "customToken": {
            "description": "Required. A custom token signed using your project's Admin SDK service account credentials.",
            "type": "string"
          },
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest": {
        "description": "Request message for the ExchangeDebugToken method.",
        "properties": {
          "debugToken": {
            "description": "Required. A debug token secret. This string must match a debug token secret previously created using CreateDebugToken.",
            "type": "string"
          },
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest": {
        "description": "Request message for the ExchangeDeviceCheckToken method.",
        "properties": {
          "deviceToken": {
            "description": "Required. The `device_token` as returned by Apple's client-side [DeviceCheck API](https://developer.apple.com/documentation/devicecheck/dcdevice). This is the base64 encoded `Data` (Swift) or `NSData` (ObjC) object.",
            "type": "string"
          },
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest": {
        "description": "Request message for the ExchangePlayIntegrityToken method.",
        "properties": {
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          },
          "playIntegrityToken": {
            "description": "Required. The [integrity verdict response token from Play Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify) issued to your app.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest": {
        "description": "Request message for the ExchangeRecaptchaEnterpriseToken method.",
        "properties": {
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          },
          "recaptchaEnterpriseToken": {
            "description": "Required. The reCAPTCHA token as returned by the [reCAPTCHA Enterprise JavaScript API](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest": {
        "description": "Request message for the ExchangeRecaptchaV3Token method.",
        "properties": {
          "limitedUse": {
            "description": "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
            "type": "boolean"
          },
          "recaptchaV3Token": {
            "description": "Required. The reCAPTCHA token as returned by the [reCAPTCHA v3 JavaScript API](https://developers.google.com/recaptcha/docs/v3).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest": {
        "deprecated": true,
        "description": "Request message for the ExchangeSafetyNetToken method.",
        "properties": {
          "safetyNetToken": {
            "description": "Required. The [SafetyNet attestation response](https://developer.android.com/training/safetynet/attestation#request-attestation-step) issued to your app.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest": {
        "description": "Request message for the GenerateAppAttestChallenge method.",
        "properties": {},
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse": {
        "description": "Response message for the GenerateAppAttestChallenge method.",
        "properties": {
          "challenge": {
            "description": "A one-time use challenge for the client to pass to the App Attest API.",
            "format": "byte",
            "type": "string"
          },
          "ttl": {
            "description": "The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest": {
        "description": "Request message for the GeneratePlayIntegrityChallenge method.",
        "properties": {},
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse": {
        "description": "Response message for the GeneratePlayIntegrityChallenge method.",
        "properties": {
          "challenge": {
            "description": "A one-time use [challenge](https://developer.android.com/google/play/integrity/verdict#protect-against-replay-attacks) for the client to pass to the Play Integrity API.",
            "type": "string"
          },
          "ttl": {
            "description": "The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ListDebugTokensResponse": {
        "description": "Response message for the ListDebugTokens method.",
        "properties": {
          "debugTokens": {
            "description": "The DebugTokens retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1DebugToken"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListDebugTokens to find the next group of DebugTokens. Page tokens are short-lived and should not be persisted.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ListResourcePoliciesResponse": {
        "description": "Response message for the ListResourcePolicies method.",
        "properties": {
          "nextPageToken": {
            "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListResourcePolicies to find the next group of ResourcePolicy objects. Page tokens are short-lived and should not be persisted.",
            "type": "string"
          },
          "resourcePolicies": {
            "description": "The ResourcePolicy objects retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ListServicesResponse": {
        "description": "Response message for the ListServices method.",
        "properties": {
          "nextPageToken": {
            "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListServices to find the next group of Services. Page tokens are short-lived and should not be persisted.",
            "type": "string"
          },
          "services": {
            "description": "The Services retrieved.",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1Service"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1PlayIntegrityConfig": {
        "description": "An app's Play Integrity configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangePlayIntegrityToken, such as its ttl. Note that your registered SHA-256 certificate fingerprints are used to validate tokens issued by the Play Integrity API; please register them via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps.sha/create).",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the Play Integrity configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/playIntegrityConfig ```",
            "type": "string"
          },
          "tokenTtl": {
            "description": "Specifies the duration for which App Check tokens exchanged from Play Integrity tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1PublicJwk": {
        "description": "A JWK as specified by [section 4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1).",
        "properties": {
          "alg": {
            "description": "See [section 4.4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.4).",
            "type": "string"
          },
          "e": {
            "description": "See [section 6.3.1.2 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2).",
            "type": "string"
          },
          "kid": {
            "description": "See [section 4.5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.5).",
            "type": "string"
          },
          "kty": {
            "description": "See [section 4.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.1).",
            "type": "string"
          },
          "n": {
            "description": "See [section 6.3.1.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1).",
            "type": "string"
          },
          "use": {
            "description": "See [section 4.2 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.2).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1PublicJwkSet": {
        "description": "The currently active set of public keys that can be used to verify App Check tokens. This object is a JWK set as specified by [section 5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5). For security, the response **must not** be cached for longer than six hours.",
        "properties": {
          "keys": {
            "description": "The set of public keys. See [section 5.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5).",
            "items": {
              "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1PublicJwk"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig": {
        "description": "An app's reCAPTCHA Enterprise configuration object. This configuration is used by ExchangeRecaptchaEnterpriseToken to validate reCAPTCHA tokens issued to apps by reCAPTCHA Enterprise. It also controls certain properties of the returned `AppCheckToken`, such as its ttl.",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the reCAPTCHA Enterprise configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ```",
            "type": "string"
          },
          "siteKey": {
            "description": "The score-based site key [created in reCAPTCHA Enterprise](https://cloud.google.com/recaptcha-enterprise/docs/create-key#creating_a_site_key) used to [invoke reCAPTCHA and generate the reCAPTCHA tokens](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages) for your application. Important: This is *not* the `site_secret` (as it is in reCAPTCHA v3), but rather your score-based reCAPTCHA Enterprise site key.",
            "type": "string"
          },
          "tokenTtl": {
            "description": "Specifies the duration for which App Check tokens exchanged from reCAPTCHA Enterprise tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1RecaptchaV3Config": {
        "description": "An app's reCAPTCHA v3 configuration object. This configuration is used by ExchangeRecaptchaV3Token to validate reCAPTCHA tokens issued to apps by reCAPTCHA v3. It also controls certain properties of the returned `AppCheckToken`, such as its ttl.",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```",
            "type": "string"
          },
          "siteSecret": {
            "description": "Required. Input only. The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never be populated in any response.",
            "type": "string"
          },
          "siteSecretSet": {
            "description": "Output only. Whether the `site_secret` field was previously set. Since we will never return the `site_secret` field, this field is the only way to find out whether it was previously set.",
            "readOnly": true,
            "type": "boolean"
          },
          "tokenTtl": {
            "description": "Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days, inclusive.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1ResourcePolicy": {
        "description": "App Check enforcement policy for a specific resource of a Google service supported by App Check. Note that this policy will override the service-level configuration.",
        "properties": {
          "enforcementMode": {
            "description": "Required. The App Check enforcement mode for this resource. This will override the EnforcementMode setting on the service.",
            "enum": [
              "OFF",
              "UNENFORCED",
              "ENFORCED"
            ],
            "type": "string"
          },
          "etag": {
            "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. This etag is strongly validated as defined by RFC 7232.",
            "type": "string"
          },
          "name": {
            "description": "Required. Identifier. The relative name of the resource policy object, in the format: ``` projects/{project_number}/services/{service_id}/resourcePolicies/{resource_policy_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `oauth2.googleapis.com` (Google Identity for iOS) `resource_policy_id` is a system-generated UID.",
            "type": "string"
          },
          "targetResource": {
            "description": "Required. Service specific name of the resource object to which this policy applies, in the format: * **iOS OAuth clients** (Google Identity for iOS): `//oauth2.googleapis.com/projects/{project_number}/oauthClients/{oauth_client_id}` Note that the resource must belong to the service specified in the `name` and be from the same project as this policy, but the resource is allowed to be missing at the time of creation of this policy; in that case, we make a best-effort attempt at respecting this policy, but it may not have any effect until the resource is fully created.",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this resource policy configuration object was most recently updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1SafetyNetConfig": {
        "deprecated": true,
        "description": "An app's SafetyNet configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangeSafetyNetToken, such as its ttl. Note that your registered SHA-256 certificate fingerprints are used to validate tokens issued by SafetyNet; please register them via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.androidApps.sha/create).",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the SafetyNet configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ```",
            "type": "string"
          },
          "tokenTtl": {
            "description": "Specifies the duration for which App Check tokens exchanged from SafetyNet tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1Service": {
        "description": "The enforcement configuration for a Firebase service supported by App Check.",
        "properties": {
          "enforcementMode": {
            "description": "Required. The App Check enforcement mode for this service.",
            "enum": [
              "OFF",
              "UNENFORCED",
              "ENFORCED"
            ],
            "type": "string"
          },
          "name": {
            "description": "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore) * `oauth2.googleapis.com` (Google Identity for iOS)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1UpdateResourcePolicyRequest": {
        "description": "Request message for the UpdateResourcePolicy method as well as an individual update message for the BatchUpdateResourcePolicies method.",
        "properties": {
          "resourcePolicy": {
            "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy",
            "description": "Required. The ResourcePolicy to update. The ResourcePolicy's `name` field is used to identify the ResourcePolicy to be updated, in the format: ``` projects/{project_number}/services/{service_id}/resourcePolicies/{resource_policy_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `oauth2.googleapis.com` (Google Identity for iOS)"
          },
          "updateMask": {
            "description": "Required. A comma-separated list of names of fields in the ResourcePolicy to update. Example: `enforcement_mode`.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1UpdateServiceRequest": {
        "description": "Request message for the UpdateService method as well as an individual update message for the BatchUpdateServices method.",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/GoogleFirebaseAppcheckV1Service",
            "description": "Required. The Service to update. The Service's `name` field is used to identify the Service to be updated, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore) * `oauth2.googleapis.com` (Google Identity for iOS)"
          },
          "updateMask": {
            "description": "Required. A comma-separated list of names of fields in the Service to update. Example: `enforcement_mode`.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleProtobufEmpty": {
        "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
        "properties": {},
        "type": "object"
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "description": "Oauth 2.0 implicit authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-platform": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.",
              "https://www.googleapis.com/auth/firebase": "View and administer all your Firebase data and settings"
            }
          }
        },
        "type": "oauth2"
      },
      "Oauth2c": {
        "description": "Oauth 2.0 accessCode authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-platform": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.",
              "https://www.googleapis.com/auth/firebase": "View and administer all your Firebase data and settings"
            },
            "tokenUrl": "https://accounts.google.com/o/oauth2/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "tags": [
    {
      "name": "oauthClients"
    },
    {
      "name": "projects"
    },
    {
      "name": "jwks"
    }
  ],
  "externalDocs": {
    "url": "https://firebase.google.com/docs/app-check"
  }
}