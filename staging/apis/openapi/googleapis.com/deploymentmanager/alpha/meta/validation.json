[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 8 absolute http references: [(('externalDocs', 'url'), 'url', 'https://cloud.google.com/deployment-manager'), (('components', 'securitySchemes', 'Oauth2c', 'flows', 'authorizationCode', 'authorizationUrl'), 'authorizationUrl', 'https://accounts.google.com/o/oauth2/auth'), (('components', 'securitySchemes', 'Oauth2c', 'flows', 'authorizationCode', 'tokenUrl'), 'tokenUrl', 'https://accounts.google.com/o/oauth2/token'), (('components', 'securitySchemes', 'Oauth2', 'flows', 'implicit', 'authorizationUrl'), 'authorizationUrl', 'https://accounts.google.com/o/oauth2/auth'), (('servers', 0, 'url'), 'url', 'https://deploymentmanager.googleapis.com/'), (('info', 'termsOfService'), 'termsOfService', 'https://developers.google.com/terms/'), (('info', 'license', 'url'), 'url', 'http://creativecommons.org/licenses/by/3.0/'), (('info', 'contact', 'url'), 'url', 'https://google.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "8"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.', 'properties': {'clientOperationId': {'description': '[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.', 'type': 'string'}, 'creationTimestamp': {'description': '[Deprecated] This field is deprecated.', 'type': 'string'}, 'description': {'description': '[Output Only] A textual description of the operation, which is set when the operation is created.', 'type': 'string'}, 'endTime': {'description': '[Output Only] The time that this operation was completed. This value is in RFC3339 text format.', 'type': 'string'}, 'error': {'description': '[Output Only] If errors are generated during processing of the operation, this field will be populated.', 'properties': {'errors': {'description': '[Output Only] The array of errors encountered while processing this operation.', 'items': {'properties': {'arguments': {'description': '[Output Only] Optional error details WARNING: DO NOT MAKE VISIBLE This is for internal use-only (like componentization) (thus the visibility \"none\") and in case of public exposure it is strongly recommended to follow pattern of: https://aip.dev/193 and expose as details field.', 'items': {'type': 'string'}, 'type': 'array'}, 'code': {'description': '[Output Only] The error type identifier for this error.', 'type': 'string'}, 'debugInfo': {'$ref': '#/components/schemas/DebugInfo'}, 'errorDetails': {'description': '[Output Only] An optional list of messages that contain the error details. There is a set of defined message types to use for providing details.The syntax depends on the error code. For example, QuotaExceededInfo will have details when the error code is QUOTA_EXCEEDED.', 'items': {'properties': {'errorInfo': {'$ref': '#/components/schemas/ErrorInfo'}, 'help': {'$ref': '#/components/schemas/Help'}, 'localizedMessage': {'$ref': '#/components/schemas/LocalizedMessage'}, 'quotaInfo': {'$ref': '#/components/schemas/QuotaExceededInfo'}}, 'type': 'object'}, 'type': 'array'}, 'location': {'description': '[Output Only] Indicates the field in the request that caused the error. This property is optional.', 'type': 'string'}, 'message': {'description': '[Output Only] An optional, human-readable error message.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'}, 'httpErrorMessage': {'description': '[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.', 'type': 'string'}, 'httpErrorStatusCode': {'description': '[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.', 'format': 'int32', 'type': 'integer'}, 'id': {'description': '[Output Only] The unique identifier for the operation. This identifier is defined by the server.', 'format': 'uint64', 'type': 'string'}, 'insertTime': {'description': '[Output Only] The time that this operation was requested. This value is in RFC3339 text format.', 'type': 'string'}, 'instancesBulkInsertOperationMetadata': {'$ref': '#/components/schemas/InstancesBulkInsertOperationMetadata'}, 'kind': {'default': 'compute#operation', 'description': '[Output Only] Type of the resource. Always `compute#operation` for Operation resources.', 'type': 'string'}, 'name': {'description': '[Output Only] Name of the operation.', 'type': 'string'}, 'operationGroupId': {'description': '[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.', 'type': 'string'}, 'operationType': {'description': '[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.', 'type': 'string'}, 'progress': {'description': '[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.', 'format': 'int32', 'type': 'integer'}, 'region': {'description': '[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.', 'type': 'string'}, 'selfLink': {'description': '[Output Only] Server-defined URL for the resource.', 'type': 'string'}, 'selfLinkWithId': {'description': '[Output Only] Server-defined URL for this resource with the resource id.', 'type': 'string'}, 'setCommonInstanceMetadataOperationMetadata': {'$ref': '#/components/schemas/SetCommonInstanceMetadataOperationMetadata', 'description': '[Output Only] If the operation is for projects.setCommonInstanceMetadata, this field will contain information on all underlying zonal actions and their state.'}, 'startTime': {'description': '[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.', 'type': 'string'}, 'status': {'description': '[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.', 'enum': ['PENDING', 'RUNNING', 'DONE'], 'type': 'string'}, 'statusMessage': {'description': '[Output Only] An optional textual description of the current status of the operation.', 'type': 'string'}, 'targetId': {'description': '[Output Only] The unique target ID, which identifies a specific incarnation of the target resource.', 'format': 'uint64', 'type': 'string'}, 'targetLink': {'description': '[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the disk that the snapshot was created from.', 'type': 'string'}, 'user': {'description': '[Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.', 'type': 'string'}, 'warnings': {'description': '[Output Only] If warning messages are generated during processing of the operation, this field will be populated.', 'items': {'properties': {'code': {'description': '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.', 'enum': ['DEPRECATED_RESOURCE_USED', 'NO_RESULTS_ON_PAGE', 'UNREACHABLE', 'NEXT_HOP_ADDRESS_NOT_ASSIGNED', 'NEXT_HOP_INSTANCE_NOT_FOUND', 'NEXT_HOP_INSTANCE_NOT_ON_NETWORK', 'NEXT_HOP_CANNOT_IP_FORWARD', 'NEXT_HOP_NOT_RUNNING', 'INJECTED_KERNELS_DEPRECATED', 'REQUIRED_TOS_AGREEMENT', 'DISK_SIZE_LARGER_THAN_IMAGE_SIZE', 'RESOURCE_NOT_DELETED', 'SINGLE_INSTANCE_PROPERTY_TEMPLATE', 'NOT_CRITICAL_ERROR', 'CLEANUP_FAILED', 'FIELD_VALUE_OVERRIDEN', 'RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING', 'NETWORK_ENDPOINT_NOT_DETACHED', 'PAGE_MISSING_RESULTS', 'SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED', 'RESOURCE_NOT_FOUND_WARNING', 'MISSING_TYPE_DEPENDENCY', 'EXTERNAL_API_WARNING', 'SCHEMA_VALIDATION_IGNORED', 'UNDECLARED_PROPERTIES', 'EXPERIMENTAL_TYPE_USED', 'DEPRECATED_TYPE_USED', 'PARTIAL_SUCCESS', 'LARGE_DEPLOYMENT_WARNING', 'NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE', 'INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB', 'LIST_OVERHEAD_QUOTA_EXCEED', 'QUOTA_INFO_UNAVAILABLE', 'RESOURCE_USES_GLOBAL_DNS', 'RATE_LIMIT_EXCEEDED', 'RESERVED_ENTRY_135', 'RESERVED_ENTRY_136', 'RESERVED_ENTRY_139', 'RESERVED_ENTRY_141', 'RESERVED_ENTRY_142'], 'enumDeprecated': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], 'type': 'string'}, 'data': {'description': '[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } ', 'items': {'properties': {'key': {'description': '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).', 'type': 'string'}, 'value': {'description': '[Output Only] A warning data value corresponding to the key.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'message': {'description': '[Output Only] A human-readable description of the warning code.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'zone': {'description': '[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations.', 'type': 'string'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'properties': {'accessControl': {'$ref': '#/components/schemas/ResourceAccessControl', 'description': 'The Access Control Policy set on this resource.'}, 'finalProperties': {'description': 'Output only. The evaluated properties of the resource with references expanded. Returned as serialized YAML.', 'type': 'string'}, 'id': {'format': 'uint64', 'type': 'string'}, 'insertTime': {'description': 'Output only. Creation timestamp in RFC3339 text format.', 'type': 'string'}, 'lastUsedCredential': {'$ref': '#/components/schemas/Credential', 'description': 'Output only. The last used credential that successfully created/updated the resource.'}, 'manifest': {'description': 'Output only. URL of the manifest representing the current configuration of this resource.', 'type': 'string'}, 'name': {'description': 'Output only. The name of the resource as it appears in the YAML config.', 'type': 'string'}, 'properties': {'description': 'Output only. The current properties of the resource before any references have been filled in. Returned as serialized YAML.', 'type': 'string'}, 'runtimePolicies': {'description': 'Output only. In case this is an action, it will show the runtimePolicies on which this action will run in the deployment', 'items': {'enum': ['CREATE', 'DELETE', 'UPDATE_ON_CHANGE', 'UPDATE_ALWAYS'], 'type': 'string'}, 'type': 'array'}, 'type': {'description': 'Output only. The type of the resource, for example `compute.v1.instance`, or `cloudfunctions.v1beta1.function`.', 'type': 'string'}, 'update': {'$ref': '#/components/schemas/ResourceUpdate', 'description': 'Output only. If Deployment Manager is currently updating or previewing an update to this resource, the updated configuration appears here.'}, 'updateTime': {'description': 'Output only. Update timestamp in RFC3339 text format.', 'type': 'string'}, 'url': {'description': 'Output only. The URL of the actual resource.', 'type': 'string'}, 'warnings': {'description': 'Output only. If warning messages are generated during processing of this resource, this field will be populated.', 'items': {'properties': {'code': {'description': '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.', 'enum': ['DEPRECATED_RESOURCE_USED', 'NO_RESULTS_ON_PAGE', 'UNREACHABLE', 'NEXT_HOP_ADDRESS_NOT_ASSIGNED', 'NEXT_HOP_INSTANCE_NOT_FOUND', 'NEXT_HOP_INSTANCE_NOT_ON_NETWORK', 'NEXT_HOP_CANNOT_IP_FORWARD', 'NEXT_HOP_NOT_RUNNING', 'INJECTED_KERNELS_DEPRECATED', 'REQUIRED_TOS_AGREEMENT', 'DISK_SIZE_LARGER_THAN_IMAGE_SIZE', 'RESOURCE_NOT_DELETED', 'SINGLE_INSTANCE_PROPERTY_TEMPLATE', 'NOT_CRITICAL_ERROR', 'CLEANUP_FAILED', 'FIELD_VALUE_OVERRIDEN', 'RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING', 'NETWORK_ENDPOINT_NOT_DETACHED', 'PAGE_MISSING_RESULTS', 'SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED', 'RESOURCE_NOT_FOUND_WARNING', 'MISSING_TYPE_DEPENDENCY', 'EXTERNAL_API_WARNING', 'SCHEMA_VALIDATION_IGNORED', 'UNDECLARED_PROPERTIES', 'EXPERIMENTAL_TYPE_USED', 'DEPRECATED_TYPE_USED', 'PARTIAL_SUCCESS', 'LARGE_DEPLOYMENT_WARNING', 'NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE', 'INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB', 'LIST_OVERHEAD_QUOTA_EXCEED', 'QUOTA_INFO_UNAVAILABLE', 'RESOURCE_USES_GLOBAL_DNS', 'RATE_LIMIT_EXCEEDED', 'RESERVED_ENTRY_135', 'RESERVED_ENTRY_136', 'RESERVED_ENTRY_139', 'RESERVED_ENTRY_141', 'RESERVED_ENTRY_142'], 'enumDeprecated': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], 'type': 'string'}, 'data': {'description': '[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } ', 'items': {'properties': {'key': {'description': '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).', 'type': 'string'}, 'value': {'description': '[Output Only] A warning data value corresponding to the key.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'message': {'description': '[Output Only] A human-readable description of the warning code.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'properties': {'accessControl': {'$ref': '#/components/schemas/ResourceAccessControl', 'description': 'The Access Control Policy to set on this resource after updating the resource itself.'}, 'credential': {'$ref': '#/components/schemas/Credential', 'description': 'Output only. The credential that will be used creating/updating this resource.'}, 'error': {'description': 'Output only. If errors are generated during update of the resource, this field will be populated.', 'properties': {'errors': {'description': '[Output Only] The array of errors encountered while processing this operation.', 'items': {'properties': {'arguments': {'description': '[Output Only] Optional error details WARNING: DO NOT MAKE VISIBLE This is for internal use-only (like componentization) (thus the visibility \"none\") and in case of public exposure it is strongly recommended to follow pattern of: https://aip.dev/193 and expose as details field.', 'items': {'type': 'string'}, 'type': 'array'}, 'code': {'description': '[Output Only] The error type identifier for this error.', 'type': 'string'}, 'debugInfo': {'$ref': '#/components/schemas/DebugInfo'}, 'errorDetails': {'description': '[Output Only] An optional list of messages that contain the error details. There is a set of defined message types to use for providing details.The syntax depends on the error code. For example, QuotaExceededInfo will have details when the error code is QUOTA_EXCEEDED.', 'items': {'properties': {'errorInfo': {'$ref': '#/components/schemas/ErrorInfo'}, 'help': {'$ref': '#/components/schemas/Help'}, 'localizedMessage': {'$ref': '#/components/schemas/LocalizedMessage'}, 'quotaInfo': {'$ref': '#/components/schemas/QuotaExceededInfo'}}, 'type': 'object'}, 'type': 'array'}, 'location': {'description': '[Output Only] Indicates the field in the request that caused the error. This property is optional.', 'type': 'string'}, 'message': {'description': '[Output Only] An optional, human-readable error message.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'}, 'finalProperties': {'description': 'Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML.', 'type': 'string'}, 'intent': {'description': 'Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.', 'enum': ['CREATE_OR_ACQUIRE', 'DELETE', 'ACQUIRE', 'UPDATE', 'ABANDON', 'CREATE'], 'type': 'string'}, 'manifest': {'description': 'Output only. URL of the manifest representing the update configuration of this resource.', 'type': 'string'}, 'properties': {'description': 'Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML.', 'type': 'string'}, 'runtimePolicies': {'description': 'Output only. In case this is an action, it will show the runtimePolicies that this action will have after updating the deployment.', 'items': {'enum': ['CREATE', 'DELETE', 'UPDATE_ON_CHANGE', 'UPDATE_ALWAYS'], 'type': 'string'}, 'type': 'array'}, 'state': {'description': 'Output only. The state of the resource.', 'enum': ['PENDING', 'IN_PROGRESS', 'IN_PREVIEW', 'FAILED', 'ABORTED'], 'type': 'string'}, 'warnings': {'description': 'Output only. If warning messages are generated during processing of this resource, this field will be populated.', 'items': {'properties': {'code': {'description': '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.', 'enum': ['DEPRECATED_RESOURCE_USED', 'NO_RESULTS_ON_PAGE', 'UNREACHABLE', 'NEXT_HOP_ADDRESS_NOT_ASSIGNED', 'NEXT_HOP_INSTANCE_NOT_FOUND', 'NEXT_HOP_INSTANCE_NOT_ON_NETWORK', 'NEXT_HOP_CANNOT_IP_FORWARD', 'NEXT_HOP_NOT_RUNNING', 'INJECTED_KERNELS_DEPRECATED', 'REQUIRED_TOS_AGREEMENT', 'DISK_SIZE_LARGER_THAN_IMAGE_SIZE', 'RESOURCE_NOT_DELETED', 'SINGLE_INSTANCE_PROPERTY_TEMPLATE', 'NOT_CRITICAL_ERROR', 'CLEANUP_FAILED', 'FIELD_VALUE_OVERRIDEN', 'RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING', 'NETWORK_ENDPOINT_NOT_DETACHED', 'PAGE_MISSING_RESULTS', 'SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED', 'RESOURCE_NOT_FOUND_WARNING', 'MISSING_TYPE_DEPENDENCY', 'EXTERNAL_API_WARNING', 'SCHEMA_VALIDATION_IGNORED', 'UNDECLARED_PROPERTIES', 'EXPERIMENTAL_TYPE_USED', 'DEPRECATED_TYPE_USED', 'PARTIAL_SUCCESS', 'LARGE_DEPLOYMENT_WARNING', 'NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE', 'INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB', 'LIST_OVERHEAD_QUOTA_EXCEED', 'QUOTA_INFO_UNAVAILABLE', 'RESOURCE_USES_GLOBAL_DNS', 'RATE_LIMIT_EXCEEDED', 'RESERVED_ENTRY_135', 'RESERVED_ENTRY_136', 'RESERVED_ENTRY_139', 'RESERVED_ENTRY_141', 'RESERVED_ENTRY_142'], 'enumDeprecated': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], 'type': 'string'}, 'data': {'description': '[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } ', 'items': {'properties': {'key': {'description': '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).', 'type': 'string'}, 'value': {'description': '[Output Only] A warning data value corresponding to the key.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'message': {'description': '[Output Only] A human-readable description of the warning code.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Server `url` should not have a trailing slash. [path: servers.0.url]",
    "severity": 1,
    "code": "no-server-trailing-slash",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        0,
        "url"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `enumDeprecated` is not expected here. [path: components.schemas.Operation.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.put.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "put",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "delete",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "patch",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.put.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "put",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "delete",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "patch",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `enumDeprecated` is not expected here. [path: components.schemas.ResourceUpdate.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `enumDeprecated` is not expected here. [path: components.schemas.Resource.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations/{operation}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations/{operation}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.put.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "put",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "delete",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "patch",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/types.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/types/{type}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types/{type}",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.0.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        0,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.1.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        1,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.5.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        5,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.patch.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "patch",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.patch.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "patch",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations/{operation}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations/{operation}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "post",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "put",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "delete",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.patch.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "patch",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/types.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/types/{type}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types/{type}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"CompositeType\" is never used. [path: components.requestBodies.CompositeType]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "CompositeType"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"Deployment\" is never used. [path: components.requestBodies.Deployment]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "Deployment"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"TypeProvider\" is never used. [path: components.requestBodies.TypeProvider]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "TypeProvider"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 19,
        "character": 13
      },
      "end": {
        "line": 19,
        "character": 56
      }
    },
    "message": "Server URL must not have trailing slash. [path: servers.0.url]",
    "severity": 2,
    "code": "oas3-server-trailing-slash",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        "0",
        "url"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3654,
        "character": 22
      },
      "end": {
        "line": 3658,
        "character": 58
      }
    },
    "message": "Potentially unused component has been detected. [path: components.requestBodies.CompositeType]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "CompositeType"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3663,
        "character": 19
      },
      "end": {
        "line": 3667,
        "character": 55
      }
    },
    "message": "Potentially unused component has been detected. [path: components.requestBodies.Deployment]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "Deployment"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3672,
        "character": 21
      },
      "end": {
        "line": 3676,
        "character": 57
      }
    },
    "message": "Potentially unused component has been detected. [path: components.requestBodies.TypeProvider]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "TypeProvider"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3692,
        "character": 27
      },
      "end": {
        "line": 3692,
        "character": 202
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.AsyncOptions.properties.pollingOptions.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AsyncOptions",
        "properties",
        "pollingOptions",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3749,
        "character": 27
      },
      "end": {
        "line": 3749,
        "character": 77
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.BaseType.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "BaseType",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3757,
        "character": 27
      },
      "end": {
        "line": 3757,
        "character": 90
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.BaseType.properties.options.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "BaseType",
        "properties",
        "options",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3779,
        "character": 27
      },
      "end": {
        "line": 3779,
        "character": 534
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Binding.properties.condition.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Binding",
        "properties",
        "condition",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3839,
        "character": 27
      },
      "end": {
        "line": 3839,
        "character": 96
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CollectionOverride.properties.methodMap.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CollectionOverride",
        "properties",
        "methodMap",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3843,
        "character": 27
      },
      "end": {
        "line": 3843,
        "character": 81
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CollectionOverride.properties.options.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CollectionOverride",
        "properties",
        "options",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3876,
        "character": 27
      },
      "end": {
        "line": 3876,
        "character": 128
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CompositeType.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CompositeType",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3893,
        "character": 27
      },
      "end": {
        "line": 3893,
        "character": 57
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CompositeType.properties.templateContents.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CompositeType",
        "properties",
        "templateContents",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3943,
        "character": 27
      },
      "end": {
        "line": 3943,
        "character": 78
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credential.properties.basicAuth.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credential",
        "properties",
        "basicAuth",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3947,
        "character": 27
      },
      "end": {
        "line": 3947,
        "character": 81
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credential.properties.serviceAccount.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credential",
        "properties",
        "serviceAccount",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3977,
        "character": 27
      },
      "end": {
        "line": 3977,
        "character": 81
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4013,
        "character": 27
      },
      "end": {
        "line": 4013,
        "character": 124
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4028,
        "character": 27
      },
      "end": {
        "line": 4028,
        "character": 148
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.target.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "target",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4032,
        "character": 27
      },
      "end": {
        "line": 4032,
        "character": 169
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.update.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "update",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4073,
        "character": 27
      },
      "end": {
        "line": 4073,
        "character": 114
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.DeploymentUpdate.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "DeploymentUpdate",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4222,
        "character": 27
      },
      "end": {
        "line": 4222,
        "character": 246
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.GlobalSetPolicyRequest.properties.policy.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "GlobalSetPolicyRequest",
        "properties",
        "policy",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4334,
        "character": 27
      },
      "end": {
        "line": 4334,
        "character": 83
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Manifest.properties.config.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Manifest",
        "properties",
        "config",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4557,
        "character": 27
      },
      "end": {
        "line": 4557,
        "character": 187
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Operation.properties.setCommonInstanceMetadataOperationMetadata.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation",
        "properties",
        "setCommonInstanceMetadataOperationMetadata",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4637,
        "character": 35
      },
      "end": {
        "line": 4677,
        "character": 25
      }
    },
    "message": "Property \"enumDeprecated\" is not expected to be here. [path: components.schemas.Operation.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4754,
        "character": 27
      },
      "end": {
        "line": 4754,
        "character": 94
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Options.properties.validationOptions.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Options",
        "properties",
        "validationOptions",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4860,
        "character": 27
      },
      "end": {
        "line": 4860,
        "character": 76
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Resource.properties.accessControl.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "accessControl",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4876,
        "character": 27
      },
      "end": {
        "line": 4876,
        "character": 114
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Resource.properties.lastUsedCredential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "lastUsedCredential",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4909,
        "character": 27
      },
      "end": {
        "line": 4909,
        "character": 167
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Resource.properties.update.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "update",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4967,
        "character": 35
      },
      "end": {
        "line": 5007,
        "character": 25
      }
    },
    "message": "Property \"enumDeprecated\" is not expected to be here. [path: components.schemas.Resource.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5054,
        "character": 27
      },
      "end": {
        "line": 5054,
        "character": 114
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.ResourceUpdate.properties.accessControl.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "accessControl",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5058,
        "character": 27
      },
      "end": {
        "line": 5058,
        "character": 107
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.ResourceUpdate.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5214,
        "character": 35
      },
      "end": {
        "line": 5254,
        "character": 25
      }
    },
    "message": "Property \"enumDeprecated\" is not expected to be here. [path: components.schemas.ResourceUpdate.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5334,
        "character": 27
      },
      "end": {
        "line": 5334,
        "character": 104
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo.properties.error.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo",
        "properties",
        "error",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5380,
        "character": 27
      },
      "end": {
        "line": 5380,
        "character": 74
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TargetConfiguration.properties.config.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TargetConfiguration",
        "properties",
        "config",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5455,
        "character": 27
      },
      "end": {
        "line": 5455,
        "character": 83
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Type.properties.base.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Type",
        "properties",
        "base",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5482,
        "character": 27
      },
      "end": {
        "line": 5482,
        "character": 118
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Type.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Type",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5512,
        "character": 27
      },
      "end": {
        "line": 5512,
        "character": 148
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeInfo.properties.schema.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeInfo",
        "properties",
        "schema",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5564,
        "character": 27
      },
      "end": {
        "line": 5564,
        "character": 77
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeProvider.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeProvider",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5603,
        "character": 27
      },
      "end": {
        "line": 5603,
        "character": 127
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeProvider.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeProvider",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5607,
        "character": 27
      },
      "end": {
        "line": 5607,
        "character": 90
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeProvider.properties.options.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeProvider",
        "properties",
        "options",
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 8 absolute http references: [(('externalDocs', 'url'), 'url', 'https://cloud.google.com/deployment-manager'), (('components', 'securitySchemes', 'Oauth2c', 'flows', 'authorizationCode', 'authorizationUrl'), 'authorizationUrl', 'https://accounts.google.com/o/oauth2/auth'), (('components', 'securitySchemes', 'Oauth2c', 'flows', 'authorizationCode', 'tokenUrl'), 'tokenUrl', 'https://accounts.google.com/o/oauth2/token'), (('components', 'securitySchemes', 'Oauth2', 'flows', 'implicit', 'authorizationUrl'), 'authorizationUrl', 'https://accounts.google.com/o/oauth2/auth'), (('servers', 0, 'url'), 'url', 'https://deploymentmanager.googleapis.com/'), (('info', 'termsOfService'), 'termsOfService', 'https://developers.google.com/terms/'), (('info', 'license', 'url'), 'url', 'http://creativecommons.org/licenses/by/3.0/'), (('info', 'contact', 'url'), 'url', 'https://google.com')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "8"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.', 'properties': {'clientOperationId': {'description': '[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.', 'type': 'string'}, 'creationTimestamp': {'description': '[Deprecated] This field is deprecated.', 'type': 'string'}, 'description': {'description': '[Output Only] A textual description of the operation, which is set when the operation is created.', 'type': 'string'}, 'endTime': {'description': '[Output Only] The time that this operation was completed. This value is in RFC3339 text format.', 'type': 'string'}, 'error': {'description': '[Output Only] If errors are generated during processing of the operation, this field will be populated.', 'properties': {'errors': {'description': '[Output Only] The array of errors encountered while processing this operation.', 'items': {'properties': {'arguments': {'description': '[Output Only] Optional error details WARNING: DO NOT MAKE VISIBLE This is for internal use-only (like componentization) (thus the visibility \"none\") and in case of public exposure it is strongly recommended to follow pattern of: https://aip.dev/193 and expose as details field.', 'items': {'type': 'string'}, 'type': 'array'}, 'code': {'description': '[Output Only] The error type identifier for this error.', 'type': 'string'}, 'debugInfo': {'$ref': '#/components/schemas/DebugInfo'}, 'errorDetails': {'description': '[Output Only] An optional list of messages that contain the error details. There is a set of defined message types to use for providing details.The syntax depends on the error code. For example, QuotaExceededInfo will have details when the error code is QUOTA_EXCEEDED.', 'items': {'properties': {'errorInfo': {'$ref': '#/components/schemas/ErrorInfo'}, 'help': {'$ref': '#/components/schemas/Help'}, 'localizedMessage': {'$ref': '#/components/schemas/LocalizedMessage'}, 'quotaInfo': {'$ref': '#/components/schemas/QuotaExceededInfo'}}, 'type': 'object'}, 'type': 'array'}, 'location': {'description': '[Output Only] Indicates the field in the request that caused the error. This property is optional.', 'type': 'string'}, 'message': {'description': '[Output Only] An optional, human-readable error message.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'}, 'httpErrorMessage': {'description': '[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.', 'type': 'string'}, 'httpErrorStatusCode': {'description': '[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.', 'format': 'int32', 'type': 'integer'}, 'id': {'description': '[Output Only] The unique identifier for the operation. This identifier is defined by the server.', 'format': 'uint64', 'type': 'string'}, 'insertTime': {'description': '[Output Only] The time that this operation was requested. This value is in RFC3339 text format.', 'type': 'string'}, 'instancesBulkInsertOperationMetadata': {'$ref': '#/components/schemas/InstancesBulkInsertOperationMetadata'}, 'kind': {'default': 'compute#operation', 'description': '[Output Only] Type of the resource. Always `compute#operation` for Operation resources.', 'type': 'string'}, 'name': {'description': '[Output Only] Name of the operation.', 'type': 'string'}, 'operationGroupId': {'description': '[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.', 'type': 'string'}, 'operationType': {'description': '[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.', 'type': 'string'}, 'progress': {'description': '[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.', 'format': 'int32', 'type': 'integer'}, 'region': {'description': '[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.', 'type': 'string'}, 'selfLink': {'description': '[Output Only] Server-defined URL for the resource.', 'type': 'string'}, 'selfLinkWithId': {'description': '[Output Only] Server-defined URL for this resource with the resource id.', 'type': 'string'}, 'setCommonInstanceMetadataOperationMetadata': {'$ref': '#/components/schemas/SetCommonInstanceMetadataOperationMetadata', 'description': '[Output Only] If the operation is for projects.setCommonInstanceMetadata, this field will contain information on all underlying zonal actions and their state.'}, 'startTime': {'description': '[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.', 'type': 'string'}, 'status': {'description': '[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.', 'enum': ['PENDING', 'RUNNING', 'DONE'], 'type': 'string'}, 'statusMessage': {'description': '[Output Only] An optional textual description of the current status of the operation.', 'type': 'string'}, 'targetId': {'description': '[Output Only] The unique target ID, which identifies a specific incarnation of the target resource.', 'format': 'uint64', 'type': 'string'}, 'targetLink': {'description': '[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the disk that the snapshot was created from.', 'type': 'string'}, 'user': {'description': '[Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.', 'type': 'string'}, 'warnings': {'description': '[Output Only] If warning messages are generated during processing of the operation, this field will be populated.', 'items': {'properties': {'code': {'description': '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.', 'enum': ['DEPRECATED_RESOURCE_USED', 'NO_RESULTS_ON_PAGE', 'UNREACHABLE', 'NEXT_HOP_ADDRESS_NOT_ASSIGNED', 'NEXT_HOP_INSTANCE_NOT_FOUND', 'NEXT_HOP_INSTANCE_NOT_ON_NETWORK', 'NEXT_HOP_CANNOT_IP_FORWARD', 'NEXT_HOP_NOT_RUNNING', 'INJECTED_KERNELS_DEPRECATED', 'REQUIRED_TOS_AGREEMENT', 'DISK_SIZE_LARGER_THAN_IMAGE_SIZE', 'RESOURCE_NOT_DELETED', 'SINGLE_INSTANCE_PROPERTY_TEMPLATE', 'NOT_CRITICAL_ERROR', 'CLEANUP_FAILED', 'FIELD_VALUE_OVERRIDEN', 'RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING', 'NETWORK_ENDPOINT_NOT_DETACHED', 'PAGE_MISSING_RESULTS', 'SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED', 'RESOURCE_NOT_FOUND_WARNING', 'MISSING_TYPE_DEPENDENCY', 'EXTERNAL_API_WARNING', 'SCHEMA_VALIDATION_IGNORED', 'UNDECLARED_PROPERTIES', 'EXPERIMENTAL_TYPE_USED', 'DEPRECATED_TYPE_USED', 'PARTIAL_SUCCESS', 'LARGE_DEPLOYMENT_WARNING', 'NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE', 'INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB', 'LIST_OVERHEAD_QUOTA_EXCEED', 'QUOTA_INFO_UNAVAILABLE', 'RESOURCE_USES_GLOBAL_DNS', 'RATE_LIMIT_EXCEEDED', 'RESERVED_ENTRY_135', 'RESERVED_ENTRY_136', 'RESERVED_ENTRY_139', 'RESERVED_ENTRY_141', 'RESERVED_ENTRY_142'], 'enumDeprecated': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], 'type': 'string'}, 'data': {'description': '[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } ', 'items': {'properties': {'key': {'description': '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).', 'type': 'string'}, 'value': {'description': '[Output Only] A warning data value corresponding to the key.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'message': {'description': '[Output Only] A human-readable description of the warning code.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'zone': {'description': '[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations.', 'type': 'string'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'properties': {'accessControl': {'$ref': '#/components/schemas/ResourceAccessControl', 'description': 'The Access Control Policy set on this resource.'}, 'finalProperties': {'description': 'Output only. The evaluated properties of the resource with references expanded. Returned as serialized YAML.', 'type': 'string'}, 'id': {'format': 'uint64', 'type': 'string'}, 'insertTime': {'description': 'Output only. Creation timestamp in RFC3339 text format.', 'type': 'string'}, 'lastUsedCredential': {'$ref': '#/components/schemas/Credential', 'description': 'Output only. The last used credential that successfully created/updated the resource.'}, 'manifest': {'description': 'Output only. URL of the manifest representing the current configuration of this resource.', 'type': 'string'}, 'name': {'description': 'Output only. The name of the resource as it appears in the YAML config.', 'type': 'string'}, 'properties': {'description': 'Output only. The current properties of the resource before any references have been filled in. Returned as serialized YAML.', 'type': 'string'}, 'runtimePolicies': {'description': 'Output only. In case this is an action, it will show the runtimePolicies on which this action will run in the deployment', 'items': {'enum': ['CREATE', 'DELETE', 'UPDATE_ON_CHANGE', 'UPDATE_ALWAYS'], 'type': 'string'}, 'type': 'array'}, 'type': {'description': 'Output only. The type of the resource, for example `compute.v1.instance`, or `cloudfunctions.v1beta1.function`.', 'type': 'string'}, 'update': {'$ref': '#/components/schemas/ResourceUpdate', 'description': 'Output only. If Deployment Manager is currently updating or previewing an update to this resource, the updated configuration appears here.'}, 'updateTime': {'description': 'Output only. Update timestamp in RFC3339 text format.', 'type': 'string'}, 'url': {'description': 'Output only. The URL of the actual resource.', 'type': 'string'}, 'warnings': {'description': 'Output only. If warning messages are generated during processing of this resource, this field will be populated.', 'items': {'properties': {'code': {'description': '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.', 'enum': ['DEPRECATED_RESOURCE_USED', 'NO_RESULTS_ON_PAGE', 'UNREACHABLE', 'NEXT_HOP_ADDRESS_NOT_ASSIGNED', 'NEXT_HOP_INSTANCE_NOT_FOUND', 'NEXT_HOP_INSTANCE_NOT_ON_NETWORK', 'NEXT_HOP_CANNOT_IP_FORWARD', 'NEXT_HOP_NOT_RUNNING', 'INJECTED_KERNELS_DEPRECATED', 'REQUIRED_TOS_AGREEMENT', 'DISK_SIZE_LARGER_THAN_IMAGE_SIZE', 'RESOURCE_NOT_DELETED', 'SINGLE_INSTANCE_PROPERTY_TEMPLATE', 'NOT_CRITICAL_ERROR', 'CLEANUP_FAILED', 'FIELD_VALUE_OVERRIDEN', 'RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING', 'NETWORK_ENDPOINT_NOT_DETACHED', 'PAGE_MISSING_RESULTS', 'SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED', 'RESOURCE_NOT_FOUND_WARNING', 'MISSING_TYPE_DEPENDENCY', 'EXTERNAL_API_WARNING', 'SCHEMA_VALIDATION_IGNORED', 'UNDECLARED_PROPERTIES', 'EXPERIMENTAL_TYPE_USED', 'DEPRECATED_TYPE_USED', 'PARTIAL_SUCCESS', 'LARGE_DEPLOYMENT_WARNING', 'NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE', 'INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB', 'LIST_OVERHEAD_QUOTA_EXCEED', 'QUOTA_INFO_UNAVAILABLE', 'RESOURCE_USES_GLOBAL_DNS', 'RATE_LIMIT_EXCEEDED', 'RESERVED_ENTRY_135', 'RESERVED_ENTRY_136', 'RESERVED_ENTRY_139', 'RESERVED_ENTRY_141', 'RESERVED_ENTRY_142'], 'enumDeprecated': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], 'type': 'string'}, 'data': {'description': '[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } ', 'items': {'properties': {'key': {'description': '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).', 'type': 'string'}, 'value': {'description': '[Output Only] A warning data value corresponding to the key.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'message': {'description': '[Output Only] A human-readable description of the warning code.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'properties': {'accessControl': {'$ref': '#/components/schemas/ResourceAccessControl', 'description': 'The Access Control Policy to set on this resource after updating the resource itself.'}, 'credential': {'$ref': '#/components/schemas/Credential', 'description': 'Output only. The credential that will be used creating/updating this resource.'}, 'error': {'description': 'Output only. If errors are generated during update of the resource, this field will be populated.', 'properties': {'errors': {'description': '[Output Only] The array of errors encountered while processing this operation.', 'items': {'properties': {'arguments': {'description': '[Output Only] Optional error details WARNING: DO NOT MAKE VISIBLE This is for internal use-only (like componentization) (thus the visibility \"none\") and in case of public exposure it is strongly recommended to follow pattern of: https://aip.dev/193 and expose as details field.', 'items': {'type': 'string'}, 'type': 'array'}, 'code': {'description': '[Output Only] The error type identifier for this error.', 'type': 'string'}, 'debugInfo': {'$ref': '#/components/schemas/DebugInfo'}, 'errorDetails': {'description': '[Output Only] An optional list of messages that contain the error details. There is a set of defined message types to use for providing details.The syntax depends on the error code. For example, QuotaExceededInfo will have details when the error code is QUOTA_EXCEEDED.', 'items': {'properties': {'errorInfo': {'$ref': '#/components/schemas/ErrorInfo'}, 'help': {'$ref': '#/components/schemas/Help'}, 'localizedMessage': {'$ref': '#/components/schemas/LocalizedMessage'}, 'quotaInfo': {'$ref': '#/components/schemas/QuotaExceededInfo'}}, 'type': 'object'}, 'type': 'array'}, 'location': {'description': '[Output Only] Indicates the field in the request that caused the error. This property is optional.', 'type': 'string'}, 'message': {'description': '[Output Only] An optional, human-readable error message.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'}, 'finalProperties': {'description': 'Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML.', 'type': 'string'}, 'intent': {'description': 'Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.', 'enum': ['CREATE_OR_ACQUIRE', 'DELETE', 'ACQUIRE', 'UPDATE', 'ABANDON', 'CREATE'], 'type': 'string'}, 'manifest': {'description': 'Output only. URL of the manifest representing the update configuration of this resource.', 'type': 'string'}, 'properties': {'description': 'Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML.', 'type': 'string'}, 'runtimePolicies': {'description': 'Output only. In case this is an action, it will show the runtimePolicies that this action will have after updating the deployment.', 'items': {'enum': ['CREATE', 'DELETE', 'UPDATE_ON_CHANGE', 'UPDATE_ALWAYS'], 'type': 'string'}, 'type': 'array'}, 'state': {'description': 'Output only. The state of the resource.', 'enum': ['PENDING', 'IN_PROGRESS', 'IN_PREVIEW', 'FAILED', 'ABORTED'], 'type': 'string'}, 'warnings': {'description': 'Output only. If warning messages are generated during processing of this resource, this field will be populated.', 'items': {'properties': {'code': {'description': '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.', 'enum': ['DEPRECATED_RESOURCE_USED', 'NO_RESULTS_ON_PAGE', 'UNREACHABLE', 'NEXT_HOP_ADDRESS_NOT_ASSIGNED', 'NEXT_HOP_INSTANCE_NOT_FOUND', 'NEXT_HOP_INSTANCE_NOT_ON_NETWORK', 'NEXT_HOP_CANNOT_IP_FORWARD', 'NEXT_HOP_NOT_RUNNING', 'INJECTED_KERNELS_DEPRECATED', 'REQUIRED_TOS_AGREEMENT', 'DISK_SIZE_LARGER_THAN_IMAGE_SIZE', 'RESOURCE_NOT_DELETED', 'SINGLE_INSTANCE_PROPERTY_TEMPLATE', 'NOT_CRITICAL_ERROR', 'CLEANUP_FAILED', 'FIELD_VALUE_OVERRIDEN', 'RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING', 'NETWORK_ENDPOINT_NOT_DETACHED', 'PAGE_MISSING_RESULTS', 'SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED', 'RESOURCE_NOT_FOUND_WARNING', 'MISSING_TYPE_DEPENDENCY', 'EXTERNAL_API_WARNING', 'SCHEMA_VALIDATION_IGNORED', 'UNDECLARED_PROPERTIES', 'EXPERIMENTAL_TYPE_USED', 'DEPRECATED_TYPE_USED', 'PARTIAL_SUCCESS', 'LARGE_DEPLOYMENT_WARNING', 'NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE', 'INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB', 'LIST_OVERHEAD_QUOTA_EXCEED', 'QUOTA_INFO_UNAVAILABLE', 'RESOURCE_USES_GLOBAL_DNS', 'RATE_LIMIT_EXCEEDED', 'RESERVED_ENTRY_135', 'RESERVED_ENTRY_136', 'RESERVED_ENTRY_139', 'RESERVED_ENTRY_141', 'RESERVED_ENTRY_142'], 'enumDeprecated': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], 'type': 'string'}, 'data': {'description': '[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } ', 'items': {'properties': {'key': {'description': '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).', 'type': 'string'}, 'value': {'description': '[Output Only] A warning data value corresponding to the key.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'message': {'description': '[Output Only] A human-readable description of the warning code.', 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}}, 'type': 'object'} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Server `url` should not have a trailing slash. [path: servers.0.url]",
    "severity": 1,
    "code": "no-server-trailing-slash",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        0,
        "url"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `enumDeprecated` is not expected here. [path: components.schemas.Operation.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.put.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "put",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "delete",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "patch",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.put.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "put",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "delete",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "patch",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `enumDeprecated` is not expected here. [path: components.schemas.ResourceUpdate.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `enumDeprecated` is not expected here. [path: components.schemas.Resource.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations/{operation}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations/{operation}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.put.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "put",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "delete",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "patch",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/types.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./deploymentmanager/alpha/projects/{project}/global/types/{type}.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types/{type}",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.0.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        0,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.1.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        1,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.5.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        5,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object should contain `description` field. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}.patch.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}",
        "patch",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}.patch.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}",
        "patch",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/operations/{operation}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/operations/{operation}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders.post.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders",
        "post",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.put.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "put",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.delete.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "delete",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}.patch.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}",
        "patch",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/types.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./deploymentmanager/alpha/projects/{project}/global/types/{type}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/deploymentmanager/alpha/projects/{project}/global/types/{type}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"CompositeType\" is never used. [path: components.requestBodies.CompositeType]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "CompositeType"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"Deployment\" is never used. [path: components.requestBodies.Deployment]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "Deployment"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"TypeProvider\" is never used. [path: components.requestBodies.TypeProvider]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "TypeProvider"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 19,
        "character": 13
      },
      "end": {
        "line": 19,
        "character": 56
      }
    },
    "message": "Server URL must not have trailing slash. [path: servers.0.url]",
    "severity": 2,
    "code": "oas3-server-trailing-slash",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "servers",
        "0",
        "url"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3654,
        "character": 22
      },
      "end": {
        "line": 3658,
        "character": 58
      }
    },
    "message": "Potentially unused component has been detected. [path: components.requestBodies.CompositeType]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "CompositeType"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3663,
        "character": 19
      },
      "end": {
        "line": 3667,
        "character": 55
      }
    },
    "message": "Potentially unused component has been detected. [path: components.requestBodies.Deployment]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "Deployment"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3672,
        "character": 21
      },
      "end": {
        "line": 3676,
        "character": 57
      }
    },
    "message": "Potentially unused component has been detected. [path: components.requestBodies.TypeProvider]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "requestBodies",
        "TypeProvider"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3692,
        "character": 27
      },
      "end": {
        "line": 3692,
        "character": 202
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.AsyncOptions.properties.pollingOptions.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "AsyncOptions",
        "properties",
        "pollingOptions",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3749,
        "character": 27
      },
      "end": {
        "line": 3749,
        "character": 77
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.BaseType.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "BaseType",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3757,
        "character": 27
      },
      "end": {
        "line": 3757,
        "character": 90
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.BaseType.properties.options.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "BaseType",
        "properties",
        "options",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3779,
        "character": 27
      },
      "end": {
        "line": 3779,
        "character": 534
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Binding.properties.condition.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Binding",
        "properties",
        "condition",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3839,
        "character": 27
      },
      "end": {
        "line": 3839,
        "character": 96
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CollectionOverride.properties.methodMap.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CollectionOverride",
        "properties",
        "methodMap",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3843,
        "character": 27
      },
      "end": {
        "line": 3843,
        "character": 81
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CollectionOverride.properties.options.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CollectionOverride",
        "properties",
        "options",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3876,
        "character": 27
      },
      "end": {
        "line": 3876,
        "character": 128
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CompositeType.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CompositeType",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3893,
        "character": 27
      },
      "end": {
        "line": 3893,
        "character": 57
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.CompositeType.properties.templateContents.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "CompositeType",
        "properties",
        "templateContents",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3943,
        "character": 27
      },
      "end": {
        "line": 3943,
        "character": 78
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credential.properties.basicAuth.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credential",
        "properties",
        "basicAuth",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3947,
        "character": 27
      },
      "end": {
        "line": 3947,
        "character": 81
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Credential.properties.serviceAccount.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Credential",
        "properties",
        "serviceAccount",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 3977,
        "character": 27
      },
      "end": {
        "line": 3977,
        "character": 81
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4013,
        "character": 27
      },
      "end": {
        "line": 4013,
        "character": 124
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4028,
        "character": 27
      },
      "end": {
        "line": 4028,
        "character": 148
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.target.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "target",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4032,
        "character": 27
      },
      "end": {
        "line": 4032,
        "character": 169
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Deployment.properties.update.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Deployment",
        "properties",
        "update",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4073,
        "character": 27
      },
      "end": {
        "line": 4073,
        "character": 114
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.DeploymentUpdate.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "DeploymentUpdate",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4222,
        "character": 27
      },
      "end": {
        "line": 4222,
        "character": 246
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.GlobalSetPolicyRequest.properties.policy.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "GlobalSetPolicyRequest",
        "properties",
        "policy",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4334,
        "character": 27
      },
      "end": {
        "line": 4334,
        "character": 83
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Manifest.properties.config.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Manifest",
        "properties",
        "config",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4557,
        "character": 27
      },
      "end": {
        "line": 4557,
        "character": 187
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Operation.properties.setCommonInstanceMetadataOperationMetadata.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation",
        "properties",
        "setCommonInstanceMetadataOperationMetadata",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4637,
        "character": 35
      },
      "end": {
        "line": 4677,
        "character": 25
      }
    },
    "message": "Property \"enumDeprecated\" is not expected to be here. [path: components.schemas.Operation.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Operation",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4754,
        "character": 27
      },
      "end": {
        "line": 4754,
        "character": 94
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Options.properties.validationOptions.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Options",
        "properties",
        "validationOptions",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4860,
        "character": 27
      },
      "end": {
        "line": 4860,
        "character": 76
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Resource.properties.accessControl.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "accessControl",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4876,
        "character": 27
      },
      "end": {
        "line": 4876,
        "character": 114
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Resource.properties.lastUsedCredential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "lastUsedCredential",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4909,
        "character": 27
      },
      "end": {
        "line": 4909,
        "character": 167
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Resource.properties.update.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "update",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 4967,
        "character": 35
      },
      "end": {
        "line": 5007,
        "character": 25
      }
    },
    "message": "Property \"enumDeprecated\" is not expected to be here. [path: components.schemas.Resource.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Resource",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5054,
        "character": 27
      },
      "end": {
        "line": 5054,
        "character": 114
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.ResourceUpdate.properties.accessControl.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "accessControl",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5058,
        "character": 27
      },
      "end": {
        "line": 5058,
        "character": 107
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.ResourceUpdate.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5214,
        "character": 35
      },
      "end": {
        "line": 5254,
        "character": 25
      }
    },
    "message": "Property \"enumDeprecated\" is not expected to be here. [path: components.schemas.ResourceUpdate.properties.warnings.items.properties.code.enumDeprecated]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "ResourceUpdate",
        "properties",
        "warnings",
        "items",
        "properties",
        "code",
        "enumDeprecated"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5334,
        "character": 27
      },
      "end": {
        "line": 5334,
        "character": 104
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo.properties.error.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo",
        "properties",
        "error",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5380,
        "character": 27
      },
      "end": {
        "line": 5380,
        "character": 74
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TargetConfiguration.properties.config.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TargetConfiguration",
        "properties",
        "config",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5455,
        "character": 27
      },
      "end": {
        "line": 5455,
        "character": 83
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Type.properties.base.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Type",
        "properties",
        "base",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5482,
        "character": 27
      },
      "end": {
        "line": 5482,
        "character": 118
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.Type.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "Type",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5512,
        "character": 27
      },
      "end": {
        "line": 5512,
        "character": 148
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeInfo.properties.schema.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeInfo",
        "properties",
        "schema",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5564,
        "character": 27
      },
      "end": {
        "line": 5564,
        "character": 77
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeProvider.properties.credential.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeProvider",
        "properties",
        "credential",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5603,
        "character": 27
      },
      "end": {
        "line": 5603,
        "character": 127
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeProvider.properties.operation.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeProvider",
        "properties",
        "operation",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 5607,
        "character": 27
      },
      "end": {
        "line": 5607,
        "character": 90
      }
    },
    "message": "$ref must not be placed next to any other properties [path: components.schemas.TypeProvider.properties.options.description]",
    "severity": 1,
    "code": "no-$ref-siblings",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "TypeProvider",
        "properties",
        "options",
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]